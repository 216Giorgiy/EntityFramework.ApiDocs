<Type Name="ThrowingMonsterStateManager" FullName="Microsoft.EntityFrameworkCore.ThrowingMonsterStateManager">
  <TypeSignature Language="C#" Value="public class ThrowingMonsterStateManager : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ThrowingMonsterStateManager extends Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.ThrowingMonsterStateManager" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ThrowingMonsterStateManager (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryFactory factory, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntrySubscriber subscriber, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier notifier, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IValueGenerationManager valueGeneration, Microsoft.EntityFrameworkCore.Metadata.IModel model, Microsoft.EntityFrameworkCore.Storage.IDatabase database, Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector concurrencyDetector, Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext currentContext, Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions loggingOptions, Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; updateLogger);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryFactory factory, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntrySubscriber subscriber, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier notifier, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IValueGenerationManager valueGeneration, class Microsoft.EntityFrameworkCore.Metadata.IModel model, class Microsoft.EntityFrameworkCore.Storage.IDatabase database, class Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector concurrencyDetector, class Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext currentContext, class Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions loggingOptions, class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Update&gt; updateLogger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ThrowingMonsterStateManager.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryFactory,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntrySubscriber,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IValueGenerationManager,Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Storage.IDatabase,Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector,Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext,Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions,Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Update})" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="factory" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryFactory" />
        <Parameter Name="subscriber" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntrySubscriber" />
        <Parameter Name="notifier" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier" />
        <Parameter Name="valueGeneration" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IValueGenerationManager" />
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IModel" />
        <Parameter Name="database" Type="Microsoft.EntityFrameworkCore.Storage.IDatabase" />
        <Parameter Name="concurrencyDetector" Type="Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector" />
        <Parameter Name="currentContext" Type="Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext" />
        <Parameter Name="loggingOptions" Type="Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions" />
        <Parameter Name="updateLogger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Update&gt;" />
      </Parameters>
      <Docs>
        <param name="factory">To be added.</param>
        <param name="subscriber">To be added.</param>
        <param name="notifier">To be added.</param>
        <param name="valueGeneration">To be added.</param>
        <param name="model">To be added.</param>
        <param name="database">To be added.</param>
        <param name="concurrencyDetector">To be added.</param>
        <param name="currentContext">To be added.</param>
        <param name="loggingOptions">To be added.</param>
        <param name="updateLogger">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveChanges">
      <MemberSignature Language="C#" Value="protected override int SaveChanges (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry&gt; entriesToSave);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 SaveChanges(class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry&gt; entriesToSave) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ThrowingMonsterStateManager.SaveChanges(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entriesToSave" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry&gt;" />
      </Parameters>
      <Docs>
        <param name="entriesToSave">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveChangesAsync">
      <MemberSignature Language="C#" Value="protected override System.Threading.Tasks.Task&lt;int&gt; SaveChangesAsync (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry&gt; entriesToSave, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; SaveChangesAsync(class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry&gt; entriesToSave, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ThrowingMonsterStateManager.SaveChangesAsync(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry},System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entriesToSave" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="entriesToSave">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>