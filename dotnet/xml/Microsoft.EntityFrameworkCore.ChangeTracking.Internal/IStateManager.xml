<Type Name="IStateManager" FullName="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager">
  <TypeSignature Language="C#" Value="public interface IStateManager : Microsoft.EntityFrameworkCore.Infrastructure.IResettableService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IStateManager implements class Microsoft.EntityFrameworkCore.Infrastructure.IResettableService" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager" />
  <TypeSignature Language="VB.NET" Value="Public Interface IStateManager&#xA;Implements IResettableService" />
  <TypeSignature Language="F#" Value="type IStateManager = interface&#xA;    interface IResettableService" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Infrastructure.IResettableService</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AcceptAllChanges">
      <MemberSignature Language="C#" Value="public void AcceptAllChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AcceptAllChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.AcceptAllChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub AcceptAllChanges ()" />
      <MemberSignature Language="F#" Value="abstract member AcceptAllChanges : unit -&gt; unit" Usage="iStateManager.AcceptAllChanges " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTrackingQuery">
      <MemberSignature Language="C#" Value="public void BeginTrackingQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginTrackingQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.BeginTrackingQuery" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginTrackingQuery ()" />
      <MemberSignature Language="F#" Value="abstract member BeginTrackingQuery : unit -&gt; unit" Usage="iStateManager.BeginTrackingQuery " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangedCount">
      <MemberSignature Language="C#" Value="public int ChangedCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ChangedCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.ChangedCount" />
      <MemberSignature Language="VB.NET" Value="Public Property ChangedCount As Integer" />
      <MemberSignature Language="F#" Value="member this.ChangedCount : int with get, set" Usage="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.ChangedCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.DbContext Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.DbContext Context" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.Context" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Context As DbContext" />
      <MemberSignature Language="F#" Value="member this.Context : Microsoft.EntityFrameworkCore.DbContext" Usage="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.DbContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndSingleQueryMode">
      <MemberSignature Language="C#" Value="public void EndSingleQueryMode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndSingleQueryMode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.EndSingleQueryMode" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndSingleQueryMode ()" />
      <MemberSignature Language="F#" Value="abstract member EndSingleQueryMode : unit -&gt; unit" Usage="iStateManager.EndSingleQueryMode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Entries">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry&gt; Entries { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry&gt; Entries" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.Entries" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Entries As IEnumerable(Of InternalEntityEntry)" />
      <MemberSignature Language="F#" Value="member this.Entries : seq&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry&gt;" Usage="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.Entries" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDependents">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry&gt; GetDependents (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry principalEntry, Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry&gt; GetDependents(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry principalEntry, class Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.GetDependents(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IForeignKey)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDependents (principalEntry As InternalEntityEntry, foreignKey As IForeignKey) As IEnumerable(Of InternalEntityEntry)" />
      <MemberSignature Language="F#" Value="abstract member GetDependents : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.Metadata.IForeignKey -&gt; seq&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry&gt;" Usage="iStateManager.GetDependents (principalEntry, foreignKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principalEntry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="foreignKey" Type="Microsoft.EntityFrameworkCore.Metadata.IForeignKey" />
      </Parameters>
      <Docs>
        <param name="principalEntry">To be added.</param>
        <param name="foreignKey">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDependentsFromNavigation">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry&gt; GetDependentsFromNavigation (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry principalEntry, Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry&gt; GetDependentsFromNavigation(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry principalEntry, class Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.GetDependentsFromNavigation(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IForeignKey)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDependentsFromNavigation (principalEntry As InternalEntityEntry, foreignKey As IForeignKey) As IEnumerable(Of InternalEntityEntry)" />
      <MemberSignature Language="F#" Value="abstract member GetDependentsFromNavigation : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.Metadata.IForeignKey -&gt; seq&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry&gt;" Usage="iStateManager.GetDependentsFromNavigation (principalEntry, foreignKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principalEntry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="foreignKey" Type="Microsoft.EntityFrameworkCore.Metadata.IForeignKey" />
      </Parameters>
      <Docs>
        <param name="principalEntry">To be added.</param>
        <param name="foreignKey">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDependentsUsingRelationshipSnapshot">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry&gt; GetDependentsUsingRelationshipSnapshot (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry principalEntry, Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry&gt; GetDependentsUsingRelationshipSnapshot(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry principalEntry, class Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.GetDependentsUsingRelationshipSnapshot(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IForeignKey)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDependentsUsingRelationshipSnapshot (principalEntry As InternalEntityEntry, foreignKey As IForeignKey) As IEnumerable(Of InternalEntityEntry)" />
      <MemberSignature Language="F#" Value="abstract member GetDependentsUsingRelationshipSnapshot : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.Metadata.IForeignKey -&gt; seq&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry&gt;" Usage="iStateManager.GetDependentsUsingRelationshipSnapshot (principalEntry, foreignKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principalEntry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="foreignKey" Type="Microsoft.EntityFrameworkCore.Metadata.IForeignKey" />
      </Parameters>
      <Docs>
        <param name="principalEntry">To be added.</param>
        <param name="foreignKey">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrCreateEntry">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry GetOrCreateEntry (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry GetOrCreateEntry(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.GetOrCreateEntry(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOrCreateEntry (entity As Object) As InternalEntityEntry" />
      <MemberSignature Language="F#" Value="abstract member GetOrCreateEntry : obj -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" Usage="iStateManager.GetOrCreateEntry entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrCreateEntry">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry GetOrCreateEntry (object entity, Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry GetOrCreateEntry(object entity, class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.GetOrCreateEntry(System.Object,Microsoft.EntityFrameworkCore.Metadata.IEntityType)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOrCreateEntry (entity As Object, entityType As IEntityType) As InternalEntityEntry" />
      <MemberSignature Language="F#" Value="abstract member GetOrCreateEntry : obj * Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" Usage="iStateManager.GetOrCreateEntry (entity, entityType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
      </Parameters>
      <Docs>
        <param name="entity">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrincipal">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry GetPrincipal (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry dependentEntry, Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry GetPrincipal(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry dependentEntry, class Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.GetPrincipal(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IForeignKey)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPrincipal (dependentEntry As InternalEntityEntry, foreignKey As IForeignKey) As InternalEntityEntry" />
      <MemberSignature Language="F#" Value="abstract member GetPrincipal : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.Metadata.IForeignKey -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" Usage="iStateManager.GetPrincipal (dependentEntry, foreignKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependentEntry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="foreignKey" Type="Microsoft.EntityFrameworkCore.Metadata.IForeignKey" />
      </Parameters>
      <Docs>
        <param name="dependentEntry">To be added.</param>
        <param name="foreignKey">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrincipalUsingPreStoreGeneratedValues">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry GetPrincipalUsingPreStoreGeneratedValues (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry dependentEntry, Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry GetPrincipalUsingPreStoreGeneratedValues(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry dependentEntry, class Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.GetPrincipalUsingPreStoreGeneratedValues(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IForeignKey)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPrincipalUsingPreStoreGeneratedValues (dependentEntry As InternalEntityEntry, foreignKey As IForeignKey) As InternalEntityEntry" />
      <MemberSignature Language="F#" Value="abstract member GetPrincipalUsingPreStoreGeneratedValues : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.Metadata.IForeignKey -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" Usage="iStateManager.GetPrincipalUsingPreStoreGeneratedValues (dependentEntry, foreignKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependentEntry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="foreignKey" Type="Microsoft.EntityFrameworkCore.Metadata.IForeignKey" />
      </Parameters>
      <Docs>
        <param name="dependentEntry">To be added.</param>
        <param name="foreignKey">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrincipalUsingRelationshipSnapshot">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry GetPrincipalUsingRelationshipSnapshot (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry dependentEntry, Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry GetPrincipalUsingRelationshipSnapshot(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry dependentEntry, class Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.GetPrincipalUsingRelationshipSnapshot(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IForeignKey)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPrincipalUsingRelationshipSnapshot (dependentEntry As InternalEntityEntry, foreignKey As IForeignKey) As InternalEntityEntry" />
      <MemberSignature Language="F#" Value="abstract member GetPrincipalUsingRelationshipSnapshot : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.Metadata.IForeignKey -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" Usage="iStateManager.GetPrincipalUsingRelationshipSnapshot (dependentEntry, foreignKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependentEntry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="foreignKey" Type="Microsoft.EntityFrameworkCore.Metadata.IForeignKey" />
      </Parameters>
      <Docs>
        <param name="dependentEntry">To be added.</param>
        <param name="foreignKey">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRecordedReferers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Tuple&lt;Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry&gt;&gt; GetRecordedReferers (object referencedEntity, bool clear);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Tuple`2&lt;class Microsoft.EntityFrameworkCore.Metadata.INavigation, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry&gt;&gt; GetRecordedReferers(object referencedEntity, bool clear) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.GetRecordedReferers(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRecordedReferers (referencedEntity As Object, clear As Boolean) As IEnumerable(Of Tuple(Of INavigation, InternalEntityEntry))" />
      <MemberSignature Language="F#" Value="abstract member GetRecordedReferers : obj * bool -&gt; seq&lt;Microsoft.EntityFrameworkCore.Metadata.INavigation * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry&gt;" Usage="iStateManager.GetRecordedReferers (referencedEntity, clear)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Tuple&lt;Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="referencedEntity" Type="System.Object" />
        <Parameter Name="clear" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="referencedEntity">To be added.</param>
        <param name="clear">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTrackingQueryMode">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ChangeTracking.Internal.TrackingQueryMode GetTrackingQueryMode (Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.EntityFrameworkCore.ChangeTracking.Internal.TrackingQueryMode GetTrackingQueryMode(class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.GetTrackingQueryMode(Microsoft.EntityFrameworkCore.Metadata.IEntityType)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTrackingQueryMode (entityType As IEntityType) As TrackingQueryMode" />
      <MemberSignature Language="F#" Value="abstract member GetTrackingQueryMode : Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.Internal.TrackingQueryMode" Usage="iStateManager.GetTrackingQueryMode entityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.TrackingQueryMode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSingleQueryMode">
      <MemberSignature Language="C#" Value="public bool IsSingleQueryMode (Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSingleQueryMode(class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.IsSingleQueryMode(Microsoft.EntityFrameworkCore.Metadata.IEntityType)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsSingleQueryMode (entityType As IEntityType) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member IsSingleQueryMode : Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; bool" Usage="iStateManager.IsSingleQueryMode entityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used 
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Notify">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier Notify { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier Notify" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.Notify" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Notify As IInternalEntityEntryNotifier" />
      <MemberSignature Language="F#" Value="member this.Notify : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier" Usage="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.Notify" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecordReferencedUntrackedEntity">
      <MemberSignature Language="C#" Value="public void RecordReferencedUntrackedEntity (object referencedEntity, Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry referencedFromEntry);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RecordReferencedUntrackedEntity(object referencedEntity, class Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry referencedFromEntry) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.RecordReferencedUntrackedEntity(System.Object,Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RecordReferencedUntrackedEntity (referencedEntity As Object, navigation As INavigation, referencedFromEntry As InternalEntityEntry)" />
      <MemberSignature Language="F#" Value="abstract member RecordReferencedUntrackedEntity : obj * Microsoft.EntityFrameworkCore.Metadata.INavigation * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry -&gt; unit" Usage="iStateManager.RecordReferencedUntrackedEntity (referencedEntity, navigation, referencedFromEntry)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="referencedEntity" Type="System.Object" />
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" />
        <Parameter Name="referencedFromEntry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
      </Parameters>
      <Docs>
        <param name="referencedEntity">To be added.</param>
        <param name="navigation">To be added.</param>
        <param name="referencedFromEntry">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveChanges">
      <MemberSignature Language="C#" Value="public int SaveChanges (bool acceptAllChangesOnSuccess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 SaveChanges(bool acceptAllChangesOnSuccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.SaveChanges(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function SaveChanges (acceptAllChangesOnSuccess As Boolean) As Integer" />
      <MemberSignature Language="F#" Value="abstract member SaveChanges : bool -&gt; int" Usage="iStateManager.SaveChanges acceptAllChangesOnSuccess" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="acceptAllChangesOnSuccess" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="acceptAllChangesOnSuccess">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveChangesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; SaveChangesAsync (bool acceptAllChangesOnSuccess, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; SaveChangesAsync(bool acceptAllChangesOnSuccess, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.SaveChangesAsync(System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member SaveChangesAsync : bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="iStateManager.SaveChangesAsync (acceptAllChangesOnSuccess, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="acceptAllChangesOnSuccess" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="acceptAllChangesOnSuccess">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartTracking">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry StartTracking (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry StartTracking(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.StartTracking(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Function StartTracking (entry As InternalEntityEntry) As InternalEntityEntry" />
      <MemberSignature Language="F#" Value="abstract member StartTracking : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" Usage="iStateManager.StartTracking entry" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
      </Parameters>
      <Docs>
        <param name="entry">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartTrackingFromQuery">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry StartTrackingFromQuery (Microsoft.EntityFrameworkCore.Metadata.IEntityType baseEntityType, object entity, Microsoft.EntityFrameworkCore.Storage.ValueBuffer valueBuffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry StartTrackingFromQuery(class Microsoft.EntityFrameworkCore.Metadata.IEntityType baseEntityType, object entity, valuetype Microsoft.EntityFrameworkCore.Storage.ValueBuffer valueBuffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.StartTrackingFromQuery(Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Object,Microsoft.EntityFrameworkCore.Storage.ValueBuffer)" />
      <MemberSignature Language="F#" Value="abstract member StartTrackingFromQuery : Microsoft.EntityFrameworkCore.Metadata.IEntityType * obj * Microsoft.EntityFrameworkCore.Storage.ValueBuffer -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" Usage="iStateManager.StartTrackingFromQuery (baseEntityType, entity, valueBuffer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseEntityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="valueBuffer" Type="Microsoft.EntityFrameworkCore.Storage.ValueBuffer" />
      </Parameters>
      <Docs>
        <param name="baseEntityType">To be added.</param>
        <param name="entity">To be added.</param>
        <param name="valueBuffer">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used 
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartTrackingFromQuery">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry StartTrackingFromQuery (Microsoft.EntityFrameworkCore.Metadata.IEntityType baseEntityType, object entity, Microsoft.EntityFrameworkCore.Storage.ValueBuffer valueBuffer, System.Collections.Generic.ISet&lt;Microsoft.EntityFrameworkCore.Metadata.IForeignKey&gt; handledForeignKeys);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry StartTrackingFromQuery(class Microsoft.EntityFrameworkCore.Metadata.IEntityType baseEntityType, object entity, valuetype Microsoft.EntityFrameworkCore.Storage.ValueBuffer valueBuffer, class System.Collections.Generic.ISet`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IForeignKey&gt; handledForeignKeys) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.StartTrackingFromQuery(Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Object,Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Collections.Generic.ISet{Microsoft.EntityFrameworkCore.Metadata.IForeignKey})" />
      <MemberSignature Language="F#" Value="abstract member StartTrackingFromQuery : Microsoft.EntityFrameworkCore.Metadata.IEntityType * obj * Microsoft.EntityFrameworkCore.Storage.ValueBuffer * System.Collections.Generic.ISet&lt;Microsoft.EntityFrameworkCore.Metadata.IForeignKey&gt; -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" Usage="iStateManager.StartTrackingFromQuery (baseEntityType, entity, valueBuffer, handledForeignKeys)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseEntityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="valueBuffer" Type="Microsoft.EntityFrameworkCore.Storage.ValueBuffer" />
        <Parameter Name="handledForeignKeys" Type="System.Collections.Generic.ISet&lt;Microsoft.EntityFrameworkCore.Metadata.IForeignKey&gt;" />
      </Parameters>
      <Docs>
        <param name="baseEntityType">To be added.</param>
        <param name="entity">To be added.</param>
        <param name="valueBuffer">To be added.</param>
        <param name="handledForeignKeys">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopTracking">
      <MemberSignature Language="C#" Value="public void StopTracking (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopTracking(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.StopTracking(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StopTracking (entry As InternalEntityEntry)" />
      <MemberSignature Language="F#" Value="abstract member StopTracking : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry -&gt; unit" Usage="iStateManager.StopTracking entry" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
      </Parameters>
      <Docs>
        <param name="entry">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetEntry">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry TryGetEntry (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry TryGetEntry(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.TryGetEntry(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetEntry (entity As Object) As InternalEntityEntry" />
      <MemberSignature Language="F#" Value="abstract member TryGetEntry : obj -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" Usage="iStateManager.TryGetEntry entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetEntry">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry TryGetEntry (Microsoft.EntityFrameworkCore.Metadata.IKey key, object[] keyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry TryGetEntry(class Microsoft.EntityFrameworkCore.Metadata.IKey key, object[] keyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.TryGetEntry(Microsoft.EntityFrameworkCore.Metadata.IKey,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetEntry (key As IKey, keyValues As Object()) As InternalEntityEntry" />
      <MemberSignature Language="F#" Value="abstract member TryGetEntry : Microsoft.EntityFrameworkCore.Metadata.IKey * obj[] -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" Usage="iStateManager.TryGetEntry (key, keyValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Microsoft.EntityFrameworkCore.Metadata.IKey" />
        <Parameter Name="keyValues" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="keyValues">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetEntry">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry TryGetEntry (object entity, Microsoft.EntityFrameworkCore.Metadata.IEntityType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry TryGetEntry(object entity, class Microsoft.EntityFrameworkCore.Metadata.IEntityType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.TryGetEntry(System.Object,Microsoft.EntityFrameworkCore.Metadata.IEntityType)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetEntry (entity As Object, type As IEntityType) As InternalEntityEntry" />
      <MemberSignature Language="F#" Value="abstract member TryGetEntry : obj * Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" Usage="iStateManager.TryGetEntry (entity, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="type" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
      </Parameters>
      <Docs>
        <param name="entity">To be added.</param>
        <param name="type">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetEntry">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry TryGetEntry (Microsoft.EntityFrameworkCore.Metadata.IKey key, Microsoft.EntityFrameworkCore.Storage.ValueBuffer valueBuffer, bool throwOnNullKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry TryGetEntry(class Microsoft.EntityFrameworkCore.Metadata.IKey key, valuetype Microsoft.EntityFrameworkCore.Storage.ValueBuffer valueBuffer, bool throwOnNullKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.TryGetEntry(Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member TryGetEntry : Microsoft.EntityFrameworkCore.Metadata.IKey * Microsoft.EntityFrameworkCore.Storage.ValueBuffer * bool -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" Usage="iStateManager.TryGetEntry (key, valueBuffer, throwOnNullKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Microsoft.EntityFrameworkCore.Metadata.IKey" />
        <Parameter Name="valueBuffer" Type="Microsoft.EntityFrameworkCore.Storage.ValueBuffer" />
        <Parameter Name="throwOnNullKey" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="valueBuffer">To be added.</param>
        <param name="throwOnNullKey">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unsubscribe">
      <MemberSignature Language="C#" Value="public void Unsubscribe ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unsubscribe() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.Unsubscribe" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unsubscribe ()" />
      <MemberSignature Language="F#" Value="abstract member Unsubscribe : unit -&gt; unit" Usage="iStateManager.Unsubscribe " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateDependentMap">
      <MemberSignature Language="C#" Value="public void UpdateDependentMap (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateDependentMap(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, class Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.UpdateDependentMap(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IForeignKey)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateDependentMap (entry As InternalEntityEntry, foreignKey As IForeignKey)" />
      <MemberSignature Language="F#" Value="abstract member UpdateDependentMap : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.Metadata.IForeignKey -&gt; unit" Usage="iStateManager.UpdateDependentMap (entry, foreignKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="foreignKey" Type="Microsoft.EntityFrameworkCore.Metadata.IForeignKey" />
      </Parameters>
      <Docs>
        <param name="entry">To be added.</param>
        <param name="foreignKey">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateIdentityMap">
      <MemberSignature Language="C#" Value="public void UpdateIdentityMap (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, Microsoft.EntityFrameworkCore.Metadata.IKey principalKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateIdentityMap(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, class Microsoft.EntityFrameworkCore.Metadata.IKey principalKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.UpdateIdentityMap(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IKey)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateIdentityMap (entry As InternalEntityEntry, principalKey As IKey)" />
      <MemberSignature Language="F#" Value="abstract member UpdateIdentityMap : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.Metadata.IKey -&gt; unit" Usage="iStateManager.UpdateIdentityMap (entry, principalKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="principalKey" Type="Microsoft.EntityFrameworkCore.Metadata.IKey" />
      </Parameters>
      <Docs>
        <param name="entry">To be added.</param>
        <param name="principalKey">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueGeneration">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IValueGenerationManager ValueGeneration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IValueGenerationManager ValueGeneration" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.ValueGeneration" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValueGeneration As IValueGenerationManager" />
      <MemberSignature Language="F#" Value="member this.ValueGeneration : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IValueGenerationManager" Usage="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.ValueGeneration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IValueGenerationManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>