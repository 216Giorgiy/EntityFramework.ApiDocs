<Type Name="AsyncQueryNavigationsTestBase&lt;TFixture&gt;" FullName="Microsoft.EntityFrameworkCore.Query.AsyncQueryNavigationsTestBase&lt;TFixture&gt;">
  <TypeSignature Language="C#" Value="public abstract class AsyncQueryNavigationsTestBase&lt;TFixture&gt; : Xunit.IClassFixture&lt;TFixture&gt; where TFixture : NorthwindQueryFixtureBasenew()" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit AsyncQueryNavigationsTestBase`1&lt;.ctor (class Microsoft.EntityFrameworkCore.Query.NorthwindQueryFixtureBase) TFixture&gt; extends System.Object implements class Xunit.IClassFixture`1&lt;!TFixture&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.AsyncQueryNavigationsTestBase`1" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TFixture">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <BaseTypeName>Microsoft.EntityFrameworkCore.Query.NorthwindQueryFixtureBase</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Xunit.IClassFixture&lt;TFixture&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TFixture">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AsyncQueryNavigationsTestBase (TFixture fixture);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(!TFixture fixture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncQueryNavigationsTestBase`1.#ctor(`0)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fixture" Type="TFixture" />
      </Parameters>
      <Docs>
        <param name="fixture">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssertQuery&lt;TItem&gt;">
      <MemberSignature Language="C#" Value="protected System.Threading.Tasks.Task AssertQuery&lt;TItem&gt; (Func&lt;System.Linq.IQueryable&lt;TItem&gt;,System.Linq.IQueryable&lt;object&gt;&gt; query, bool assertOrder = false, int entryCount = 0, Action&lt;System.Collections.Generic.IList&lt;object&gt;,System.Collections.Generic.IList&lt;object&gt;&gt; asserter = null) where TItem : class;" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Threading.Tasks.Task AssertQuery&lt;class TItem&gt;(class System.Func`2&lt;class System.Linq.IQueryable`1&lt;!!TItem&gt;, class System.Linq.IQueryable`1&lt;object&gt;&gt; query, bool assertOrder, int32 entryCount, class System.Action`2&lt;class System.Collections.Generic.IList`1&lt;object&gt;, class System.Collections.Generic.IList`1&lt;object&gt;&gt; asserter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncQueryNavigationsTestBase`1.AssertQuery``1(System.Func{System.Linq.IQueryable{``0},System.Linq.IQueryable{System.Object}},System.Boolean,System.Int32,System.Action{System.Collections.Generic.IList{System.Object},System.Collections.Generic.IList{System.Object}})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncQueryNavigationsTestBase`1/&lt;AssertQuery&gt;d__7`1))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TItem">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Func&lt;System.Linq.IQueryable&lt;TItem&gt;,System.Linq.IQueryable&lt;System.Object&gt;&gt;" />
        <Parameter Name="assertOrder" Type="System.Boolean" />
        <Parameter Name="entryCount" Type="System.Int32" />
        <Parameter Name="asserter" Type="System.Action&lt;System.Collections.Generic.IList&lt;System.Object&gt;,System.Collections.Generic.IList&lt;System.Object&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TItem">To be added.</typeparam>
        <param name="query">To be added.</param>
        <param name="assertOrder">To be added.</param>
        <param name="entryCount">To be added.</param>
        <param name="asserter">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssertQuery&lt;TItem&gt;">
      <MemberSignature Language="C#" Value="protected System.Threading.Tasks.Task AssertQuery&lt;TItem&gt; (Func&lt;System.Linq.IQueryable&lt;TItem&gt;,System.Linq.IQueryable&lt;object&gt;&gt; efQuery, Func&lt;System.Linq.IQueryable&lt;TItem&gt;,System.Linq.IQueryable&lt;object&gt;&gt; l2oQuery, bool assertOrder = false, int entryCount = 0, Action&lt;System.Collections.Generic.IList&lt;object&gt;,System.Collections.Generic.IList&lt;object&gt;&gt; asserter = null) where TItem : class;" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Threading.Tasks.Task AssertQuery&lt;class TItem&gt;(class System.Func`2&lt;class System.Linq.IQueryable`1&lt;!!TItem&gt;, class System.Linq.IQueryable`1&lt;object&gt;&gt; efQuery, class System.Func`2&lt;class System.Linq.IQueryable`1&lt;!!TItem&gt;, class System.Linq.IQueryable`1&lt;object&gt;&gt; l2oQuery, bool assertOrder, int32 entryCount, class System.Action`2&lt;class System.Collections.Generic.IList`1&lt;object&gt;, class System.Collections.Generic.IList`1&lt;object&gt;&gt; asserter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncQueryNavigationsTestBase`1.AssertQuery``1(System.Func{System.Linq.IQueryable{``0},System.Linq.IQueryable{System.Object}},System.Func{System.Linq.IQueryable{``0},System.Linq.IQueryable{System.Object}},System.Boolean,System.Int32,System.Action{System.Collections.Generic.IList{System.Object},System.Collections.Generic.IList{System.Object}})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncQueryNavigationsTestBase`1/&lt;AssertQuery&gt;d__8`1))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TItem">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="efQuery" Type="System.Func&lt;System.Linq.IQueryable&lt;TItem&gt;,System.Linq.IQueryable&lt;System.Object&gt;&gt;" />
        <Parameter Name="l2oQuery" Type="System.Func&lt;System.Linq.IQueryable&lt;TItem&gt;,System.Linq.IQueryable&lt;System.Object&gt;&gt;" />
        <Parameter Name="assertOrder" Type="System.Boolean" />
        <Parameter Name="entryCount" Type="System.Int32" />
        <Parameter Name="asserter" Type="System.Action&lt;System.Collections.Generic.IList&lt;System.Object&gt;,System.Collections.Generic.IList&lt;System.Object&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TItem">To be added.</typeparam>
        <param name="efQuery">To be added.</param>
        <param name="l2oQuery">To be added.</param>
        <param name="assertOrder">To be added.</param>
        <param name="entryCount">To be added.</param>
        <param name="asserter">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateContext">
      <MemberSignature Language="C#" Value="protected Microsoft.EntityFrameworkCore.TestModels.Northwind.NorthwindContext CreateContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class Microsoft.EntityFrameworkCore.TestModels.Northwind.NorthwindContext CreateContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncQueryNavigationsTestBase`1.CreateContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.TestModels.Northwind.NorthwindContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fixture">
      <MemberSignature Language="C#" Value="protected TFixture Fixture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TFixture Fixture" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.AsyncQueryNavigationsTestBase`1.Fixture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TFixture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_with_multiple_optional_navigations">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Include_with_multiple_optional_navigations ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Include_with_multiple_optional_navigations() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncQueryNavigationsTestBase`1.Include_with_multiple_optional_navigations" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncQueryNavigationsTestBase`1/&lt;Include_with_multiple_optional_navigations&gt;d__0))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiple_include_with_multiple_optional_navigations">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Multiple_include_with_multiple_optional_navigations ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Multiple_include_with_multiple_optional_navigations() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncQueryNavigationsTestBase`1.Multiple_include_with_multiple_optional_navigations" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncQueryNavigationsTestBase`1/&lt;Multiple_include_with_multiple_optional_navigations&gt;d__1))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>