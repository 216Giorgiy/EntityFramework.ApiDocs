<Type Name="OptimisticConcurrencyTestBase&lt;TTestStore,TFixture&gt;" FullName="Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase&lt;TTestStore,TFixture&gt;">
  <TypeSignature Language="C#" Value="public abstract class OptimisticConcurrencyTestBase&lt;TTestStore,TFixture&gt; : IDisposable, Xunit.IClassFixture&lt;TFixture&gt; where TTestStore : TestStore where TFixture : F1FixtureBase&lt;TTestStore&gt;new()" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit OptimisticConcurrencyTestBase`2&lt;(class Microsoft.EntityFrameworkCore.Specification.Tests.TestStore) TTestStore, .ctor (class Microsoft.EntityFrameworkCore.Specification.Tests.F1FixtureBase`1&lt;!TTestStore&gt;) TFixture&gt; extends System.Object implements class System.IDisposable, class Xunit.IClassFixture`1&lt;!TFixture&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TTestStore">
      <Constraints>
        <BaseTypeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestStore</BaseTypeName>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TFixture">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <BaseTypeName>Microsoft.EntityFrameworkCore.Specification.Tests.F1FixtureBase&lt;TTestStore&gt;</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Xunit.IClassFixture&lt;TFixture&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TTestStore">To be added.</typeparam>
    <typeparam name="TFixture">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected OptimisticConcurrencyTestBase (TFixture fixture);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(!TFixture fixture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.#ctor(`1)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fixture" Type="TFixture" />
      </Parameters>
      <Docs>
        <param name="fixture">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Adding_the_same_entity_twice_results_in_DbUpdateException">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Adding_the_same_entity_twice_results_in_DbUpdateException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Adding_the_same_entity_twice_results_in_DbUpdateException() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Adding_the_same_entity_twice_results_in_DbUpdateException" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Attempting_to_add_same_relationship_twice_for_many_to_many_results_in_independent_association_exception">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Attempting_to_add_same_relationship_twice_for_many_to_many_results_in_independent_association_exception ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Attempting_to_add_same_relationship_twice_for_many_to_many_results_in_independent_association_exception() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Attempting_to_add_same_relationship_twice_for_many_to_many_results_in_independent_association_exception" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Attempting_to_delete_same_relationship_twice_for_many_to_many_results_in_independent_association_exception">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Attempting_to_delete_same_relationship_twice_for_many_to_many_results_in_independent_association_exception ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Attempting_to_delete_same_relationship_twice_for_many_to_many_results_in_independent_association_exception() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Attempting_to_delete_same_relationship_twice_for_many_to_many_results_in_independent_association_exception" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Calling_Reload_on_a_Deleted_entity_makes_the_entity_unchanged">
      <MemberSignature Language="C#" Value="public virtual void Calling_Reload_on_a_Deleted_entity_makes_the_entity_unchanged ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Calling_Reload_on_a_Deleted_entity_makes_the_entity_unchanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Calling_Reload_on_a_Deleted_entity_makes_the_entity_unchanged" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Calling_Reload_on_a_Deleted_entity_makes_the_entity_unchanged">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Calling_Reload_on_a_Deleted_entity_makes_the_entity_unchanged (bool async);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Calling_Reload_on_a_Deleted_entity_makes_the_entity_unchanged(bool async) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Calling_Reload_on_a_Deleted_entity_makes_the_entity_unchanged(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2/&lt;Calling_Reload_on_a_Deleted_entity_makes_the_entity_unchanged&gt;d__28))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Theory</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="async" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="async">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Calling_Reload_on_a_Deleted_entity_that_is_not_in_database_detaches_it">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Calling_Reload_on_a_Deleted_entity_that_is_not_in_database_detaches_it (bool async);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Calling_Reload_on_a_Deleted_entity_that_is_not_in_database_detaches_it(bool async) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Calling_Reload_on_a_Deleted_entity_that_is_not_in_database_detaches_it(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2/&lt;Calling_Reload_on_a_Deleted_entity_that_is_not_in_database_detaches_it&gt;d__23))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Theory</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="async" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="async">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Calling_Reload_on_a_Detached_entity_makes_the_entity_unchanged">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Calling_Reload_on_a_Detached_entity_makes_the_entity_unchanged (bool async);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Calling_Reload_on_a_Detached_entity_makes_the_entity_unchanged(bool async) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Calling_Reload_on_a_Detached_entity_makes_the_entity_unchanged(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2/&lt;Calling_Reload_on_a_Detached_entity_makes_the_entity_unchanged&gt;d__30))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Theory</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="async" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="async">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Calling_Reload_on_a_Detached_entity_that_is_not_in_database_detaches_it">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Calling_Reload_on_a_Detached_entity_that_is_not_in_database_detaches_it (bool async);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Calling_Reload_on_a_Detached_entity_that_is_not_in_database_detaches_it(bool async) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Calling_Reload_on_a_Detached_entity_that_is_not_in_database_detaches_it(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2/&lt;Calling_Reload_on_a_Detached_entity_that_is_not_in_database_detaches_it&gt;d__24))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Theory</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="async" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="async">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Calling_Reload_on_a_detached_entity_throws">
      <MemberSignature Language="C#" Value="public virtual void Calling_Reload_on_a_detached_entity_throws ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Calling_Reload_on_a_detached_entity_throws() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Calling_Reload_on_a_detached_entity_throws" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Calling_Reload_on_a_Modified_entity_makes_the_entity_unchanged">
      <MemberSignature Language="C#" Value="public virtual void Calling_Reload_on_a_Modified_entity_makes_the_entity_unchanged ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Calling_Reload_on_a_Modified_entity_makes_the_entity_unchanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Calling_Reload_on_a_Modified_entity_makes_the_entity_unchanged" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Calling_Reload_on_a_Modified_entity_makes_the_entity_unchanged">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Calling_Reload_on_a_Modified_entity_makes_the_entity_unchanged (bool async);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Calling_Reload_on_a_Modified_entity_makes_the_entity_unchanged(bool async) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Calling_Reload_on_a_Modified_entity_makes_the_entity_unchanged(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2/&lt;Calling_Reload_on_a_Modified_entity_makes_the_entity_unchanged&gt;d__27))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Theory</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="async" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="async">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Calling_Reload_on_a_Modified_entity_that_is_not_in_database_detaches_it">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Calling_Reload_on_a_Modified_entity_that_is_not_in_database_detaches_it (bool async);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Calling_Reload_on_a_Modified_entity_that_is_not_in_database_detaches_it(bool async) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Calling_Reload_on_a_Modified_entity_that_is_not_in_database_detaches_it(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2/&lt;Calling_Reload_on_a_Modified_entity_that_is_not_in_database_detaches_it&gt;d__22))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Theory</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="async" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="async">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Calling_Reload_on_a_Unchanged_entity_makes_the_entity_unchanged">
      <MemberSignature Language="C#" Value="public virtual void Calling_Reload_on_a_Unchanged_entity_makes_the_entity_unchanged ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Calling_Reload_on_a_Unchanged_entity_makes_the_entity_unchanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Calling_Reload_on_a_Unchanged_entity_makes_the_entity_unchanged" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Calling_Reload_on_an__Added_entity_that_is_not_in_database_is_no_op">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Calling_Reload_on_an__Added_entity_that_is_not_in_database_is_no_op (bool async);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Calling_Reload_on_an__Added_entity_that_is_not_in_database_is_no_op(bool async) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Calling_Reload_on_an__Added_entity_that_is_not_in_database_is_no_op(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2/&lt;Calling_Reload_on_an__Added_entity_that_is_not_in_database_is_no_op&gt;d__20))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Theory</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="async" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="async">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Calling_Reload_on_an_Added_entity_that_was_saved_elsewhere_makes_the_entity_unchanged">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Calling_Reload_on_an_Added_entity_that_was_saved_elsewhere_makes_the_entity_unchanged (bool async);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Calling_Reload_on_an_Added_entity_that_was_saved_elsewhere_makes_the_entity_unchanged(bool async) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Calling_Reload_on_an_Added_entity_that_was_saved_elsewhere_makes_the_entity_unchanged(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2/&lt;Calling_Reload_on_an_Added_entity_that_was_saved_elsewhere_makes_the_entity_unchanged&gt;d__29))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Theory</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="async" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="async">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Calling_Reload_on_an_Added_entity_throws">
      <MemberSignature Language="C#" Value="public virtual void Calling_Reload_on_an_Added_entity_throws ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Calling_Reload_on_an_Added_entity_throws() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Calling_Reload_on_an_Added_entity_throws" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Calling_Reload_on_an_Unchanged_entity_makes_the_entity_unchanged">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Calling_Reload_on_an_Unchanged_entity_makes_the_entity_unchanged (bool async);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Calling_Reload_on_an_Unchanged_entity_makes_the_entity_unchanged(bool async) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Calling_Reload_on_an_Unchanged_entity_makes_the_entity_unchanged(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2/&lt;Calling_Reload_on_an_Unchanged_entity_makes_the_entity_unchanged&gt;d__26))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Theory</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="async" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="async">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Calling_Reload_on_an_Unchanged_entity_that_is_not_in_database_detaches_it">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Calling_Reload_on_an_Unchanged_entity_that_is_not_in_database_detaches_it (bool async);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Calling_Reload_on_an_Unchanged_entity_that_is_not_in_database_detaches_it(bool async) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Calling_Reload_on_an_Unchanged_entity_that_is_not_in_database_detaches_it(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2/&lt;Calling_Reload_on_an_Unchanged_entity_that_is_not_in_database_detaches_it&gt;d__21))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Theory</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="async" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="async">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Change_in_independent_association_after_change_in_different_concurrency_token_results_in_independent_association_exception">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Change_in_independent_association_after_change_in_different_concurrency_token_results_in_independent_association_exception ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Change_in_independent_association_after_change_in_different_concurrency_token_results_in_independent_association_exception() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Change_in_independent_association_after_change_in_different_concurrency_token_results_in_independent_association_exception" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Change_in_independent_association_results_in_independent_association_exception">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Change_in_independent_association_results_in_independent_association_exception ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Change_in_independent_association_results_in_independent_association_exception() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Change_in_independent_association_results_in_independent_association_exception" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientPodiums">
      <MemberSignature Language="C#" Value="protected const int ClientPodiums;" />
      <MemberSignature Language="ILAsm" Value=".field family static literal int32 ClientPodiums" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.ClientPodiums" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Concurrency_issue_where_a_complex_type_nested_member_is_the_concurrency_token_can_be_handled">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Concurrency_issue_where_a_complex_type_nested_member_is_the_concurrency_token_can_be_handled ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Concurrency_issue_where_a_complex_type_nested_member_is_the_concurrency_token_can_be_handled() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Concurrency_issue_where_a_complex_type_nested_member_is_the_concurrency_token_can_be_handled" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Concurrency_issue_where_the_FK_is_the_concurrency_token_can_be_handled">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Concurrency_issue_where_the_FK_is_the_concurrency_token_can_be_handled ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Concurrency_issue_where_the_FK_is_the_concurrency_token_can_be_handled() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Concurrency_issue_where_the_FK_is_the_concurrency_token_can_be_handled" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConcurrencyTestAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task ConcurrencyTestAsync (Action&lt;Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ConcurrencyModel.F1Context&gt; storeChange, Action&lt;Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ConcurrencyModel.F1Context&gt; clientChange, Action&lt;Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ConcurrencyModel.F1Context,Microsoft.EntityFrameworkCore.DbUpdateException&gt; resolver, Action&lt;Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ConcurrencyModel.F1Context&gt; validator);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task ConcurrencyTestAsync(class System.Action`1&lt;class Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ConcurrencyModel.F1Context&gt; storeChange, class System.Action`1&lt;class Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ConcurrencyModel.F1Context&gt; clientChange, class System.Action`2&lt;class Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ConcurrencyModel.F1Context, class Microsoft.EntityFrameworkCore.DbUpdateException&gt; resolver, class System.Action`1&lt;class Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ConcurrencyModel.F1Context&gt; validator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.ConcurrencyTestAsync(System.Action{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ConcurrencyModel.F1Context},System.Action{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ConcurrencyModel.F1Context},System.Action{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ConcurrencyModel.F1Context,Microsoft.EntityFrameworkCore.DbUpdateException},System.Action{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ConcurrencyModel.F1Context})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2/&lt;ConcurrencyTestAsync&gt;d__46))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storeChange" Type="System.Action&lt;Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ConcurrencyModel.F1Context&gt;" />
        <Parameter Name="clientChange" Type="System.Action&lt;Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ConcurrencyModel.F1Context&gt;" />
        <Parameter Name="resolver" Type="System.Action&lt;Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ConcurrencyModel.F1Context,Microsoft.EntityFrameworkCore.DbUpdateException&gt;" />
        <Parameter Name="validator" Type="System.Action&lt;Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ConcurrencyModel.F1Context&gt;" />
      </Parameters>
      <Docs>
        <param name="storeChange">To be added.</param>
        <param name="clientChange">To be added.</param>
        <param name="resolver">To be added.</param>
        <param name="validator">To be added.</param>
        <summary>
                Runs the two actions with two different contexts and calling
                SaveChanges such that storeChange will succeed and the store will reflect this change, and
                then clientChange will result in a concurrency exception.
                After the exception is caught the resolver action is called, after which SaveChanges is called
                again.  Finally, a new context is created and the validator is called so that the state of
                the database at the end of the process can be validated.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateF1Context">
      <MemberSignature Language="C#" Value="protected Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ConcurrencyModel.F1Context CreateF1Context ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ConcurrencyModel.F1Context CreateF1Context() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.CreateF1Context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ConcurrencyModel.F1Context</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deleting_the_same_entity_twice_results_in_DbUpdateConcurrencyException">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Deleting_the_same_entity_twice_results_in_DbUpdateConcurrencyException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Deleting_the_same_entity_twice_results_in_DbUpdateConcurrencyException() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Deleting_the_same_entity_twice_results_in_DbUpdateConcurrencyException" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deleting_then_updating_the_same_entity_results_in_DbUpdateConcurrencyException">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Deleting_then_updating_the_same_entity_results_in_DbUpdateConcurrencyException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Deleting_then_updating_the_same_entity_results_in_DbUpdateConcurrencyException() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Deleting_then_updating_the_same_entity_results_in_DbUpdateConcurrencyException" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deleting_then_updating_the_same_entity_results_in_DbUpdateConcurrencyException_which_can_be_resolved_with_store_values">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Deleting_then_updating_the_same_entity_results_in_DbUpdateConcurrencyException_which_can_be_resolved_with_store_values ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Deleting_then_updating_the_same_entity_results_in_DbUpdateConcurrencyException_which_can_be_resolved_with_store_values() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Deleting_then_updating_the_same_entity_results_in_DbUpdateConcurrencyException_which_can_be_resolved_with_store_values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Dispose" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fixture">
      <MemberSignature Language="C#" Value="protected TFixture Fixture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TFixture Fixture" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Fixture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TFixture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Modifying_concurrency_token_only_is_noop">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Modifying_concurrency_token_only_is_noop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Modifying_concurrency_token_only_is_noop() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Modifying_concurrency_token_only_is_noop" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2/&lt;Modifying_concurrency_token_only_is_noop&gt;d__0))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Nullable_client_side_concurrency_token_can_be_used">
      <MemberSignature Language="C#" Value="public virtual void Nullable_client_side_concurrency_token_can_be_used ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Nullable_client_side_concurrency_token_can_be_used() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Nullable_client_side_concurrency_token_can_be_used" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveConcurrencyTokens">
      <MemberSignature Language="C#" Value="protected virtual void ResolveConcurrencyTokens (Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ResolveConcurrencyTokens(class Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.ResolveConcurrencyTokens(Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry" />
      </Parameters>
      <Docs>
        <param name="entry">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Simple_concurrency_exception_can_be_resolved_with_client_values">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Simple_concurrency_exception_can_be_resolved_with_client_values ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Simple_concurrency_exception_can_be_resolved_with_client_values() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Simple_concurrency_exception_can_be_resolved_with_client_values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Simple_concurrency_exception_can_be_resolved_with_new_values">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Simple_concurrency_exception_can_be_resolved_with_new_values ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Simple_concurrency_exception_can_be_resolved_with_new_values() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Simple_concurrency_exception_can_be_resolved_with_new_values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Simple_concurrency_exception_can_be_resolved_with_store_values">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Simple_concurrency_exception_can_be_resolved_with_store_values ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Simple_concurrency_exception_can_be_resolved_with_store_values() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Simple_concurrency_exception_can_be_resolved_with_store_values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Simple_concurrency_exception_can_be_resolved_with_store_values_using_equivalent_of_accept_changes">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Simple_concurrency_exception_can_be_resolved_with_store_values_using_equivalent_of_accept_changes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Simple_concurrency_exception_can_be_resolved_with_store_values_using_equivalent_of_accept_changes() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Simple_concurrency_exception_can_be_resolved_with_store_values_using_equivalent_of_accept_changes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Simple_concurrency_exception_can_be_resolved_with_store_values_using_Reload">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Simple_concurrency_exception_can_be_resolved_with_store_values_using_Reload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Simple_concurrency_exception_can_be_resolved_with_store_values_using_Reload() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Simple_concurrency_exception_can_be_resolved_with_store_values_using_Reload" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StorePodiums">
      <MemberSignature Language="C#" Value="protected const int StorePodiums;" />
      <MemberSignature Language="ILAsm" Value=".field family static literal int32 StorePodiums" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.StorePodiums" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TestStore">
      <MemberSignature Language="C#" Value="protected TTestStore TestStore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TTestStore TestStore" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.TestStore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TTestStore</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Two_concurrency_issues_in_one_to_many_related_entities_can_be_handled_by_dealing_with_dependent_first">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Two_concurrency_issues_in_one_to_many_related_entities_can_be_handled_by_dealing_with_dependent_first ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Two_concurrency_issues_in_one_to_many_related_entities_can_be_handled_by_dealing_with_dependent_first() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Two_concurrency_issues_in_one_to_many_related_entities_can_be_handled_by_dealing_with_dependent_first" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Two_concurrency_issues_in_one_to_one_related_entities_can_be_handled_by_dealing_with_dependent_first">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Two_concurrency_issues_in_one_to_one_related_entities_can_be_handled_by_dealing_with_dependent_first ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Two_concurrency_issues_in_one_to_one_related_entities_can_be_handled_by_dealing_with_dependent_first() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Two_concurrency_issues_in_one_to_one_related_entities_can_be_handled_by_dealing_with_dependent_first" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Updating_then_deleting_the_same_entity_results_in_DbUpdateConcurrencyException">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Updating_then_deleting_the_same_entity_results_in_DbUpdateConcurrencyException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Updating_then_deleting_the_same_entity_results_in_DbUpdateConcurrencyException() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Updating_then_deleting_the_same_entity_results_in_DbUpdateConcurrencyException" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Updating_then_deleting_the_same_entity_results_in_DbUpdateConcurrencyException_which_can_be_resolved_with_store_values">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Updating_then_deleting_the_same_entity_results_in_DbUpdateConcurrencyException_which_can_be_resolved_with_store_values ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Updating_then_deleting_the_same_entity_results_in_DbUpdateConcurrencyException_which_can_be_resolved_with_store_values() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Updating_then_deleting_the_same_entity_results_in_DbUpdateConcurrencyException_which_can_be_resolved_with_store_values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseTransaction">
      <MemberSignature Language="C#" Value="protected virtual void UseTransaction (Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade facade, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void UseTransaction(class Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade facade, class Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.UseTransaction(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="facade" Type="Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" />
        <Parameter Name="transaction" Type="Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction" />
      </Parameters>
      <Docs>
        <param name="facade">To be added.</param>
        <param name="transaction">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>