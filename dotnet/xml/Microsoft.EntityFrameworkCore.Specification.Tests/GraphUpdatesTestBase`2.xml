<Type Name="GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;" FullName="Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;">
  <TypeSignature Language="C#" Value="public abstract class GraphUpdatesTestBase&lt;TTestStore,TFixture&gt; : IDisposable, Xunit.IClassFixture&lt;TFixture&gt; where TTestStore : TestStore where TFixture : GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;.GraphUpdatesFixtureBasenew()" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit GraphUpdatesTestBase`2&lt;(class Microsoft.EntityFrameworkCore.Specification.Tests.TestStore) TTestStore, .ctor (class Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2/GraphUpdatesFixtureBase&lt;!TTestStore, !TFixture&gt;) TFixture&gt; extends System.Object implements class System.IDisposable, class Xunit.IClassFixture`1&lt;!TFixture&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TTestStore">
      <Constraints>
        <BaseTypeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestStore</BaseTypeName>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TFixture">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <BaseTypeName>Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;+GraphUpdatesFixtureBase</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Xunit.IClassFixture&lt;TFixture&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TTestStore">To be added.</typeparam>
    <typeparam name="TFixture">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected GraphUpdatesTestBase (TFixture fixture);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(!TFixture fixture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.#ctor(`1)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fixture" Type="TFixture" />
      </Parameters>
      <Docs>
        <param name="fixture">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateContext">
      <MemberSignature Language="C#" Value="protected Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;.GraphUpdatesContext CreateContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2/GraphUpdatesContext&lt;!TTestStore, !TFixture&gt; CreateContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.CreateContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;+GraphUpdatesContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.Dispose" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteWithStrategyInTransaction">
      <MemberSignature Language="C#" Value="protected virtual void ExecuteWithStrategyInTransaction (Action&lt;Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;.GraphUpdatesContext&gt; testOperation, Action&lt;Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;.GraphUpdatesContext&gt; nestedTestOperation1 = null, Action&lt;Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;.GraphUpdatesContext&gt; nestedTestOperation2 = null, Action&lt;Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;.GraphUpdatesContext&gt; nestedTestOperation3 = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ExecuteWithStrategyInTransaction(class System.Action`1&lt;class Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2/GraphUpdatesContext&lt;!TTestStore, !TFixture&gt;&gt; testOperation, class System.Action`1&lt;class Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2/GraphUpdatesContext&lt;!TTestStore, !TFixture&gt;&gt; nestedTestOperation1, class System.Action`1&lt;class Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2/GraphUpdatesContext&lt;!TTestStore, !TFixture&gt;&gt; nestedTestOperation2, class System.Action`1&lt;class Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2/GraphUpdatesContext&lt;!TTestStore, !TFixture&gt;&gt; nestedTestOperation3) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.ExecuteWithStrategyInTransaction(System.Action{Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.GraphUpdatesContext{`0,`1}},System.Action{Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.GraphUpdatesContext{`0,`1}},System.Action{Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.GraphUpdatesContext{`0,`1}},System.Action{Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.GraphUpdatesContext{`0,`1}})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="testOperation" Type="System.Action&lt;Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;+GraphUpdatesContext&gt;" />
        <Parameter Name="nestedTestOperation1" Type="System.Action&lt;Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;+GraphUpdatesContext&gt;" />
        <Parameter Name="nestedTestOperation2" Type="System.Action&lt;Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;+GraphUpdatesContext&gt;" />
        <Parameter Name="nestedTestOperation3" Type="System.Action&lt;Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;+GraphUpdatesContext&gt;" />
      </Parameters>
      <Docs>
        <param name="testOperation">To be added.</param>
        <param name="nestedTestOperation1">To be added.</param>
        <param name="nestedTestOperation2">To be added.</param>
        <param name="nestedTestOperation3">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fixture">
      <MemberSignature Language="C#" Value="protected TFixture Fixture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TFixture Fixture" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.Fixture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TFixture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTheRoot">
      <MemberSignature Language="C#" Value="protected System.Linq.Expressions.Expression&lt;Func&lt;Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;.Root,bool&gt;&gt; IsTheRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;class Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2/Root&lt;!TTestStore, !TFixture&gt;, bool&gt;&gt; IsTheRoot" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.IsTheRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression&lt;System.Func&lt;Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;+Root,System.Boolean&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadFullGraph">
      <MemberSignature Language="C#" Value="protected static Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;.Root LoadFullGraph (Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;.GraphUpdatesContext context, System.Linq.Expressions.Expression&lt;Func&lt;Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;.Root,bool&gt;&gt; predicate = null);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2/Root&lt;!TTestStore, !TFixture&gt; LoadFullGraph(class Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2/GraphUpdatesContext&lt;!TTestStore, !TFixture&gt; context, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;class Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2/Root&lt;!TTestStore, !TFixture&gt;, bool&gt;&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.LoadFullGraph(Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.GraphUpdatesContext{`0,`1},System.Linq.Expressions.Expression{System.Func{Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.Root{`0,`1},System.Boolean}})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;+Root</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;+GraphUpdatesContext" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;+Root,System.Boolean&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="predicate">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadOptionalAkGraph">
      <MemberSignature Language="C#" Value="protected Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;.Root LoadOptionalAkGraph (Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;.GraphUpdatesContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2/Root&lt;!TTestStore, !TFixture&gt; LoadOptionalAkGraph(class Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2/GraphUpdatesContext&lt;!TTestStore, !TFixture&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.LoadOptionalAkGraph(Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.GraphUpdatesContext{`0,`1})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;+Root</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;+GraphUpdatesContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadOptionalGraph">
      <MemberSignature Language="C#" Value="protected Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;.Root LoadOptionalGraph (Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;.GraphUpdatesContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2/Root&lt;!TTestStore, !TFixture&gt; LoadOptionalGraph(class Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2/GraphUpdatesContext&lt;!TTestStore, !TFixture&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.LoadOptionalGraph(Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.GraphUpdatesContext{`0,`1})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;+Root</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;+GraphUpdatesContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadRequiredAkGraph">
      <MemberSignature Language="C#" Value="protected Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;.Root LoadRequiredAkGraph (Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;.GraphUpdatesContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2/Root&lt;!TTestStore, !TFixture&gt; LoadRequiredAkGraph(class Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2/GraphUpdatesContext&lt;!TTestStore, !TFixture&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.LoadRequiredAkGraph(Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.GraphUpdatesContext{`0,`1})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;+Root</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;+GraphUpdatesContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadRequiredGraph">
      <MemberSignature Language="C#" Value="protected Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;.Root LoadRequiredGraph (Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;.GraphUpdatesContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2/Root&lt;!TTestStore, !TFixture&gt; LoadRequiredGraph(class Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2/GraphUpdatesContext&lt;!TTestStore, !TFixture&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.LoadRequiredGraph(Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.GraphUpdatesContext{`0,`1})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;+Root</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;+GraphUpdatesContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadRequiredNonPkAkGraph">
      <MemberSignature Language="C#" Value="protected Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;.Root LoadRequiredNonPkAkGraph (Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;.GraphUpdatesContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2/Root&lt;!TTestStore, !TFixture&gt; LoadRequiredNonPkAkGraph(class Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2/GraphUpdatesContext&lt;!TTestStore, !TFixture&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.LoadRequiredNonPkAkGraph(Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.GraphUpdatesContext{`0,`1})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;+Root</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;+GraphUpdatesContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadRequiredNonPkGraph">
      <MemberSignature Language="C#" Value="protected Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;.Root LoadRequiredNonPkGraph (Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;.GraphUpdatesContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2/Root&lt;!TTestStore, !TFixture&gt; LoadRequiredNonPkGraph(class Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2/GraphUpdatesContext&lt;!TTestStore, !TFixture&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.LoadRequiredNonPkGraph(Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.GraphUpdatesContext{`0,`1})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;+Root</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;+GraphUpdatesContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optional_many_to_one_dependents_are_orphaned">
      <MemberSignature Language="C#" Value="public virtual void Optional_many_to_one_dependents_are_orphaned ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Optional_many_to_one_dependents_are_orphaned() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.Optional_many_to_one_dependents_are_orphaned" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optional_many_to_one_dependents_are_orphaned_in_store">
      <MemberSignature Language="C#" Value="public virtual void Optional_many_to_one_dependents_are_orphaned_in_store ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Optional_many_to_one_dependents_are_orphaned_in_store() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.Optional_many_to_one_dependents_are_orphaned_in_store" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optional_many_to_one_dependents_are_orphaned_starting_detached">
      <MemberSignature Language="C#" Value="public virtual void Optional_many_to_one_dependents_are_orphaned_starting_detached ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Optional_many_to_one_dependents_are_orphaned_starting_detached() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.Optional_many_to_one_dependents_are_orphaned_starting_detached" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optional_many_to_one_dependents_with_alternate_key_are_orphaned">
      <MemberSignature Language="C#" Value="public virtual void Optional_many_to_one_dependents_with_alternate_key_are_orphaned ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Optional_many_to_one_dependents_with_alternate_key_are_orphaned() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.Optional_many_to_one_dependents_with_alternate_key_are_orphaned" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optional_many_to_one_dependents_with_alternate_key_are_orphaned_in_store">
      <MemberSignature Language="C#" Value="public virtual void Optional_many_to_one_dependents_with_alternate_key_are_orphaned_in_store ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Optional_many_to_one_dependents_with_alternate_key_are_orphaned_in_store() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.Optional_many_to_one_dependents_with_alternate_key_are_orphaned_in_store" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optional_many_to_one_dependents_with_alternate_key_are_orphaned_starting_detached">
      <MemberSignature Language="C#" Value="public virtual void Optional_many_to_one_dependents_with_alternate_key_are_orphaned_starting_detached ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Optional_many_to_one_dependents_with_alternate_key_are_orphaned_starting_detached() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.Optional_many_to_one_dependents_with_alternate_key_are_orphaned_starting_detached" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optional_one_to_one_are_orphaned">
      <MemberSignature Language="C#" Value="public virtual void Optional_one_to_one_are_orphaned ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Optional_one_to_one_are_orphaned() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.Optional_one_to_one_are_orphaned" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optional_one_to_one_are_orphaned_in_store">
      <MemberSignature Language="C#" Value="public virtual void Optional_one_to_one_are_orphaned_in_store ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Optional_one_to_one_are_orphaned_in_store() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.Optional_one_to_one_are_orphaned_in_store" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optional_one_to_one_are_orphaned_starting_detached">
      <MemberSignature Language="C#" Value="public virtual void Optional_one_to_one_are_orphaned_starting_detached ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Optional_one_to_one_are_orphaned_starting_detached() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.Optional_one_to_one_are_orphaned_starting_detached" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optional_One_to_one_relationships_are_one_to_one">
      <MemberSignature Language="C#" Value="public virtual void Optional_One_to_one_relationships_are_one_to_one ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Optional_One_to_one_relationships_are_one_to_one() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.Optional_One_to_one_relationships_are_one_to_one" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optional_One_to_one_with_AK_relationships_are_one_to_one">
      <MemberSignature Language="C#" Value="public virtual void Optional_One_to_one_with_AK_relationships_are_one_to_one ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Optional_One_to_one_with_AK_relationships_are_one_to_one() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.Optional_One_to_one_with_AK_relationships_are_one_to_one" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optional_one_to_one_with_alternate_key_are_orphaned">
      <MemberSignature Language="C#" Value="public virtual void Optional_one_to_one_with_alternate_key_are_orphaned ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Optional_one_to_one_with_alternate_key_are_orphaned() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.Optional_one_to_one_with_alternate_key_are_orphaned" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optional_one_to_one_with_alternate_key_are_orphaned_in_store">
      <MemberSignature Language="C#" Value="public virtual void Optional_one_to_one_with_alternate_key_are_orphaned_in_store ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Optional_one_to_one_with_alternate_key_are_orphaned_in_store() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.Optional_one_to_one_with_alternate_key_are_orphaned_in_store" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optional_one_to_one_with_alternate_key_are_orphaned_starting_detached">
      <MemberSignature Language="C#" Value="public virtual void Optional_one_to_one_with_alternate_key_are_orphaned_starting_detached ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Optional_one_to_one_with_alternate_key_are_orphaned_starting_detached() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.Optional_one_to_one_with_alternate_key_are_orphaned_starting_detached" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reparent_optional_one_to_one">
      <MemberSignature Language="C#" Value="public virtual void Reparent_optional_one_to_one (Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;.ChangeMechanism changeMechanism, bool useExistingRoot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reparent_optional_one_to_one(valuetype Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2/ChangeMechanism&lt;!TTestStore, !TFixture&gt; changeMechanism, bool useExistingRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.Reparent_optional_one_to_one(Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.ChangeMechanism{`0,`1},System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTheory</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="changeMechanism" Type="Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;+ChangeMechanism" />
        <Parameter Name="useExistingRoot" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="changeMechanism">To be added.</param>
        <param name="useExistingRoot">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reparent_optional_one_to_one_with_alternate_key">
      <MemberSignature Language="C#" Value="public virtual void Reparent_optional_one_to_one_with_alternate_key (Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;.ChangeMechanism changeMechanism, bool useExistingRoot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reparent_optional_one_to_one_with_alternate_key(valuetype Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2/ChangeMechanism&lt;!TTestStore, !TFixture&gt; changeMechanism, bool useExistingRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.Reparent_optional_one_to_one_with_alternate_key(Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.ChangeMechanism{`0,`1},System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTheory</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="changeMechanism" Type="Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;+ChangeMechanism" />
        <Parameter Name="useExistingRoot" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="changeMechanism">To be added.</param>
        <param name="useExistingRoot">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reparent_required_non_PK_one_to_one">
      <MemberSignature Language="C#" Value="public virtual void Reparent_required_non_PK_one_to_one (Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;.ChangeMechanism changeMechanism, bool useExistingRoot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reparent_required_non_PK_one_to_one(valuetype Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2/ChangeMechanism&lt;!TTestStore, !TFixture&gt; changeMechanism, bool useExistingRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.Reparent_required_non_PK_one_to_one(Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.ChangeMechanism{`0,`1},System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTheory</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="changeMechanism" Type="Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;+ChangeMechanism" />
        <Parameter Name="useExistingRoot" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="changeMechanism">To be added.</param>
        <param name="useExistingRoot">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reparent_required_non_PK_one_to_one_with_alternate_key">
      <MemberSignature Language="C#" Value="public virtual void Reparent_required_non_PK_one_to_one_with_alternate_key (Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;.ChangeMechanism changeMechanism, bool useExistingRoot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reparent_required_non_PK_one_to_one_with_alternate_key(valuetype Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2/ChangeMechanism&lt;!TTestStore, !TFixture&gt; changeMechanism, bool useExistingRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.Reparent_required_non_PK_one_to_one_with_alternate_key(Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.ChangeMechanism{`0,`1},System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTheory</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="changeMechanism" Type="Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;+ChangeMechanism" />
        <Parameter Name="useExistingRoot" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="changeMechanism">To be added.</param>
        <param name="useExistingRoot">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reparent_required_one_to_one">
      <MemberSignature Language="C#" Value="public virtual void Reparent_required_one_to_one (Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;.ChangeMechanism changeMechanism, bool useExistingRoot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reparent_required_one_to_one(valuetype Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2/ChangeMechanism&lt;!TTestStore, !TFixture&gt; changeMechanism, bool useExistingRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.Reparent_required_one_to_one(Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.ChangeMechanism{`0,`1},System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTheory</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="changeMechanism" Type="Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;+ChangeMechanism" />
        <Parameter Name="useExistingRoot" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="changeMechanism">To be added.</param>
        <param name="useExistingRoot">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reparent_required_one_to_one_with_alternate_key">
      <MemberSignature Language="C#" Value="public virtual void Reparent_required_one_to_one_with_alternate_key (Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;.ChangeMechanism changeMechanism, bool useExistingRoot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reparent_required_one_to_one_with_alternate_key(valuetype Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2/ChangeMechanism&lt;!TTestStore, !TFixture&gt; changeMechanism, bool useExistingRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.Reparent_required_one_to_one_with_alternate_key(Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.ChangeMechanism{`0,`1},System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTheory</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="changeMechanism" Type="Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;+ChangeMechanism" />
        <Parameter Name="useExistingRoot" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="changeMechanism">To be added.</param>
        <param name="useExistingRoot">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Required_many_to_one_dependents_are_cascade_deleted">
      <MemberSignature Language="C#" Value="public virtual void Required_many_to_one_dependents_are_cascade_deleted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Required_many_to_one_dependents_are_cascade_deleted() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.Required_many_to_one_dependents_are_cascade_deleted" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Required_many_to_one_dependents_are_cascade_deleted_in_store">
      <MemberSignature Language="C#" Value="public virtual void Required_many_to_one_dependents_are_cascade_deleted_in_store ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Required_many_to_one_dependents_are_cascade_deleted_in_store() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.Required_many_to_one_dependents_are_cascade_deleted_in_store" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Required_many_to_one_dependents_are_cascade_deleted_starting_detached">
      <MemberSignature Language="C#" Value="public virtual void Required_many_to_one_dependents_are_cascade_deleted_starting_detached ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Required_many_to_one_dependents_are_cascade_deleted_starting_detached() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.Required_many_to_one_dependents_are_cascade_deleted_starting_detached" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Required_many_to_one_dependents_are_cascade_detached_when_Added">
      <MemberSignature Language="C#" Value="public virtual void Required_many_to_one_dependents_are_cascade_detached_when_Added ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Required_many_to_one_dependents_are_cascade_detached_when_Added() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.Required_many_to_one_dependents_are_cascade_detached_when_Added" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Required_many_to_one_dependents_with_alternate_key_are_cascade_deleted">
      <MemberSignature Language="C#" Value="public virtual void Required_many_to_one_dependents_with_alternate_key_are_cascade_deleted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Required_many_to_one_dependents_with_alternate_key_are_cascade_deleted() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.Required_many_to_one_dependents_with_alternate_key_are_cascade_deleted" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Required_many_to_one_dependents_with_alternate_key_are_cascade_deleted_in_store">
      <MemberSignature Language="C#" Value="public virtual void Required_many_to_one_dependents_with_alternate_key_are_cascade_deleted_in_store ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Required_many_to_one_dependents_with_alternate_key_are_cascade_deleted_in_store() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.Required_many_to_one_dependents_with_alternate_key_are_cascade_deleted_in_store" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Required_many_to_one_dependents_with_alternate_key_are_cascade_deleted_starting_detached">
      <MemberSignature Language="C#" Value="public virtual void Required_many_to_one_dependents_with_alternate_key_are_cascade_deleted_starting_detached ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Required_many_to_one_dependents_with_alternate_key_are_cascade_deleted_starting_detached() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.Required_many_to_one_dependents_with_alternate_key_are_cascade_deleted_starting_detached" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Required_many_to_one_dependents_with_alternate_key_are_cascade_detached_when_Added">
      <MemberSignature Language="C#" Value="public virtual void Required_many_to_one_dependents_with_alternate_key_are_cascade_detached_when_Added ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Required_many_to_one_dependents_with_alternate_key_are_cascade_detached_when_Added() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.Required_many_to_one_dependents_with_alternate_key_are_cascade_detached_when_Added" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Required_non_PK_one_to_one_are_cascade_deleted">
      <MemberSignature Language="C#" Value="public virtual void Required_non_PK_one_to_one_are_cascade_deleted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Required_non_PK_one_to_one_are_cascade_deleted() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.Required_non_PK_one_to_one_are_cascade_deleted" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Required_non_PK_one_to_one_are_cascade_deleted_in_store">
      <MemberSignature Language="C#" Value="public virtual void Required_non_PK_one_to_one_are_cascade_deleted_in_store ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Required_non_PK_one_to_one_are_cascade_deleted_in_store() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.Required_non_PK_one_to_one_are_cascade_deleted_in_store" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Required_non_PK_one_to_one_are_cascade_deleted_starting_detached">
      <MemberSignature Language="C#" Value="public virtual void Required_non_PK_one_to_one_are_cascade_deleted_starting_detached ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Required_non_PK_one_to_one_are_cascade_deleted_starting_detached() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.Required_non_PK_one_to_one_are_cascade_deleted_starting_detached" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Required_non_PK_one_to_one_are_cascade_detached_when_Added">
      <MemberSignature Language="C#" Value="public virtual void Required_non_PK_one_to_one_are_cascade_detached_when_Added ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Required_non_PK_one_to_one_are_cascade_detached_when_Added() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.Required_non_PK_one_to_one_are_cascade_detached_when_Added" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Required_non_PK_one_to_one_with_alternate_key_are_cascade_deleted">
      <MemberSignature Language="C#" Value="public virtual void Required_non_PK_one_to_one_with_alternate_key_are_cascade_deleted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Required_non_PK_one_to_one_with_alternate_key_are_cascade_deleted() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.Required_non_PK_one_to_one_with_alternate_key_are_cascade_deleted" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Required_non_PK_one_to_one_with_alternate_key_are_cascade_deleted_in_store">
      <MemberSignature Language="C#" Value="public virtual void Required_non_PK_one_to_one_with_alternate_key_are_cascade_deleted_in_store ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Required_non_PK_one_to_one_with_alternate_key_are_cascade_deleted_in_store() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.Required_non_PK_one_to_one_with_alternate_key_are_cascade_deleted_in_store" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Required_non_PK_one_to_one_with_alternate_key_are_cascade_deleted_starting_detached">
      <MemberSignature Language="C#" Value="public virtual void Required_non_PK_one_to_one_with_alternate_key_are_cascade_deleted_starting_detached ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Required_non_PK_one_to_one_with_alternate_key_are_cascade_deleted_starting_detached() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.Required_non_PK_one_to_one_with_alternate_key_are_cascade_deleted_starting_detached" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Required_non_PK_one_to_one_with_alternate_key_are_cascade_detached_when_Added">
      <MemberSignature Language="C#" Value="public virtual void Required_non_PK_one_to_one_with_alternate_key_are_cascade_detached_when_Added ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Required_non_PK_one_to_one_with_alternate_key_are_cascade_detached_when_Added() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.Required_non_PK_one_to_one_with_alternate_key_are_cascade_detached_when_Added" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Required_one_to_one_are_cascade_deleted">
      <MemberSignature Language="C#" Value="public virtual void Required_one_to_one_are_cascade_deleted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Required_one_to_one_are_cascade_deleted() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.Required_one_to_one_are_cascade_deleted" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Required_one_to_one_are_cascade_deleted_in_store">
      <MemberSignature Language="C#" Value="public virtual void Required_one_to_one_are_cascade_deleted_in_store ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Required_one_to_one_are_cascade_deleted_in_store() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.Required_one_to_one_are_cascade_deleted_in_store" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Required_one_to_one_are_cascade_deleted_starting_detached">
      <MemberSignature Language="C#" Value="public virtual void Required_one_to_one_are_cascade_deleted_starting_detached ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Required_one_to_one_are_cascade_deleted_starting_detached() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.Required_one_to_one_are_cascade_deleted_starting_detached" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Required_one_to_one_are_cascade_detached_when_Added">
      <MemberSignature Language="C#" Value="public virtual void Required_one_to_one_are_cascade_detached_when_Added ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Required_one_to_one_are_cascade_detached_when_Added() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.Required_one_to_one_are_cascade_detached_when_Added" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Required_One_to_one_relationships_are_one_to_one">
      <MemberSignature Language="C#" Value="public virtual void Required_One_to_one_relationships_are_one_to_one ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Required_One_to_one_relationships_are_one_to_one() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.Required_One_to_one_relationships_are_one_to_one" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Required_One_to_one_with_AK_relationships_are_one_to_one">
      <MemberSignature Language="C#" Value="public virtual void Required_One_to_one_with_AK_relationships_are_one_to_one ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Required_One_to_one_with_AK_relationships_are_one_to_one() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.Required_One_to_one_with_AK_relationships_are_one_to_one" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Required_one_to_one_with_alternate_key_are_cascade_deleted">
      <MemberSignature Language="C#" Value="public virtual void Required_one_to_one_with_alternate_key_are_cascade_deleted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Required_one_to_one_with_alternate_key_are_cascade_deleted() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.Required_one_to_one_with_alternate_key_are_cascade_deleted" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Required_one_to_one_with_alternate_key_are_cascade_deleted_in_store">
      <MemberSignature Language="C#" Value="public virtual void Required_one_to_one_with_alternate_key_are_cascade_deleted_in_store ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Required_one_to_one_with_alternate_key_are_cascade_deleted_in_store() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.Required_one_to_one_with_alternate_key_are_cascade_deleted_in_store" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Required_one_to_one_with_alternate_key_are_cascade_deleted_starting_detached">
      <MemberSignature Language="C#" Value="public virtual void Required_one_to_one_with_alternate_key_are_cascade_deleted_starting_detached ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Required_one_to_one_with_alternate_key_are_cascade_deleted_starting_detached() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.Required_one_to_one_with_alternate_key_are_cascade_deleted_starting_detached" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Required_one_to_one_with_alternate_key_are_cascade_detached_when_Added">
      <MemberSignature Language="C#" Value="public virtual void Required_one_to_one_with_alternate_key_are_cascade_detached_when_Added ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Required_one_to_one_with_alternate_key_are_cascade_detached_when_Added() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.Required_one_to_one_with_alternate_key_are_cascade_detached_when_Added" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save_changed_optional_one_to_one">
      <MemberSignature Language="C#" Value="public virtual void Save_changed_optional_one_to_one (Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;.ChangeMechanism changeMechanism, bool useExistingEntities);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save_changed_optional_one_to_one(valuetype Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2/ChangeMechanism&lt;!TTestStore, !TFixture&gt; changeMechanism, bool useExistingEntities) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.Save_changed_optional_one_to_one(Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.ChangeMechanism{`0,`1},System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTheory</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="changeMechanism" Type="Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;+ChangeMechanism" />
        <Parameter Name="useExistingEntities" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="changeMechanism">To be added.</param>
        <param name="useExistingEntities">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save_changed_optional_one_to_one_with_alternate_key">
      <MemberSignature Language="C#" Value="public virtual void Save_changed_optional_one_to_one_with_alternate_key (Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;.ChangeMechanism changeMechanism, bool useExistingEntities);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save_changed_optional_one_to_one_with_alternate_key(valuetype Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2/ChangeMechanism&lt;!TTestStore, !TFixture&gt; changeMechanism, bool useExistingEntities) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.Save_changed_optional_one_to_one_with_alternate_key(Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.ChangeMechanism{`0,`1},System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTheory</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="changeMechanism" Type="Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;+ChangeMechanism" />
        <Parameter Name="useExistingEntities" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="changeMechanism">To be added.</param>
        <param name="useExistingEntities">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save_changed_optional_one_to_one_with_alternate_key_in_store">
      <MemberSignature Language="C#" Value="public virtual void Save_changed_optional_one_to_one_with_alternate_key_in_store ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save_changed_optional_one_to_one_with_alternate_key_in_store() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.Save_changed_optional_one_to_one_with_alternate_key_in_store" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save_optional_many_to_one_dependents">
      <MemberSignature Language="C#" Value="public virtual void Save_optional_many_to_one_dependents (Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;.ChangeMechanism changeMechanism, bool useExistingEntities);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save_optional_many_to_one_dependents(valuetype Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2/ChangeMechanism&lt;!TTestStore, !TFixture&gt; changeMechanism, bool useExistingEntities) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.Save_optional_many_to_one_dependents(Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.ChangeMechanism{`0,`1},System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTheory</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="changeMechanism" Type="Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;+ChangeMechanism" />
        <Parameter Name="useExistingEntities" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="changeMechanism">To be added.</param>
        <param name="useExistingEntities">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save_optional_many_to_one_dependents_with_alternate_key">
      <MemberSignature Language="C#" Value="public virtual void Save_optional_many_to_one_dependents_with_alternate_key (Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;.ChangeMechanism changeMechanism, bool useExistingEntities);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save_optional_many_to_one_dependents_with_alternate_key(valuetype Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2/ChangeMechanism&lt;!TTestStore, !TFixture&gt; changeMechanism, bool useExistingEntities) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.Save_optional_many_to_one_dependents_with_alternate_key(Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.ChangeMechanism{`0,`1},System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTheory</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="changeMechanism" Type="Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;+ChangeMechanism" />
        <Parameter Name="useExistingEntities" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="changeMechanism">To be added.</param>
        <param name="useExistingEntities">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save_removed_optional_many_to_one_dependents">
      <MemberSignature Language="C#" Value="public virtual void Save_removed_optional_many_to_one_dependents (Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;.ChangeMechanism changeMechanism);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save_removed_optional_many_to_one_dependents(valuetype Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2/ChangeMechanism&lt;!TTestStore, !TFixture&gt; changeMechanism) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.Save_removed_optional_many_to_one_dependents(Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.ChangeMechanism{`0,`1})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTheory</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="changeMechanism" Type="Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;+ChangeMechanism" />
      </Parameters>
      <Docs>
        <param name="changeMechanism">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save_removed_optional_many_to_one_dependents_with_alternate_key">
      <MemberSignature Language="C#" Value="public virtual void Save_removed_optional_many_to_one_dependents_with_alternate_key (Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;.ChangeMechanism changeMechanism);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save_removed_optional_many_to_one_dependents_with_alternate_key(valuetype Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2/ChangeMechanism&lt;!TTestStore, !TFixture&gt; changeMechanism) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.Save_removed_optional_many_to_one_dependents_with_alternate_key(Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.ChangeMechanism{`0,`1})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTheory</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="changeMechanism" Type="Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;+ChangeMechanism" />
      </Parameters>
      <Docs>
        <param name="changeMechanism">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save_removed_required_many_to_one_dependents">
      <MemberSignature Language="C#" Value="public virtual void Save_removed_required_many_to_one_dependents (Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;.ChangeMechanism changeMechanism);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save_removed_required_many_to_one_dependents(valuetype Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2/ChangeMechanism&lt;!TTestStore, !TFixture&gt; changeMechanism) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.Save_removed_required_many_to_one_dependents(Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.ChangeMechanism{`0,`1})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTheory</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="changeMechanism" Type="Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;+ChangeMechanism" />
      </Parameters>
      <Docs>
        <param name="changeMechanism">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save_removed_required_many_to_one_dependents_with_alternate_key">
      <MemberSignature Language="C#" Value="public virtual void Save_removed_required_many_to_one_dependents_with_alternate_key (Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;.ChangeMechanism changeMechanism);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save_removed_required_many_to_one_dependents_with_alternate_key(valuetype Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2/ChangeMechanism&lt;!TTestStore, !TFixture&gt; changeMechanism) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.Save_removed_required_many_to_one_dependents_with_alternate_key(Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.ChangeMechanism{`0,`1})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTheory</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="changeMechanism" Type="Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;+ChangeMechanism" />
      </Parameters>
      <Docs>
        <param name="changeMechanism">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save_required_many_to_one_dependents">
      <MemberSignature Language="C#" Value="public virtual void Save_required_many_to_one_dependents (Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;.ChangeMechanism changeMechanism, bool useExistingEntities);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save_required_many_to_one_dependents(valuetype Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2/ChangeMechanism&lt;!TTestStore, !TFixture&gt; changeMechanism, bool useExistingEntities) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.Save_required_many_to_one_dependents(Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.ChangeMechanism{`0,`1},System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTheory</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="changeMechanism" Type="Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;+ChangeMechanism" />
        <Parameter Name="useExistingEntities" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="changeMechanism">To be added.</param>
        <param name="useExistingEntities">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save_required_many_to_one_dependents_with_alternate_key">
      <MemberSignature Language="C#" Value="public virtual void Save_required_many_to_one_dependents_with_alternate_key (Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;.ChangeMechanism changeMechanism, bool useExistingEntities);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save_required_many_to_one_dependents_with_alternate_key(valuetype Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2/ChangeMechanism&lt;!TTestStore, !TFixture&gt; changeMechanism, bool useExistingEntities) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.Save_required_many_to_one_dependents_with_alternate_key(Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.ChangeMechanism{`0,`1},System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTheory</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="changeMechanism" Type="Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;+ChangeMechanism" />
        <Parameter Name="useExistingEntities" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="changeMechanism">To be added.</param>
        <param name="useExistingEntities">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save_required_non_PK_one_to_one_changed_by_reference">
      <MemberSignature Language="C#" Value="public virtual void Save_required_non_PK_one_to_one_changed_by_reference (Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;.ChangeMechanism changeMechanism, bool useExistingEntities);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save_required_non_PK_one_to_one_changed_by_reference(valuetype Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2/ChangeMechanism&lt;!TTestStore, !TFixture&gt; changeMechanism, bool useExistingEntities) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.Save_required_non_PK_one_to_one_changed_by_reference(Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.ChangeMechanism{`0,`1},System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTheory</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="changeMechanism" Type="Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;+ChangeMechanism" />
        <Parameter Name="useExistingEntities" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="changeMechanism">To be added.</param>
        <param name="useExistingEntities">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save_required_non_PK_one_to_one_changed_by_reference_with_alternate_key">
      <MemberSignature Language="C#" Value="public virtual void Save_required_non_PK_one_to_one_changed_by_reference_with_alternate_key (Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;.ChangeMechanism changeMechanism, bool useExistingEntities);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save_required_non_PK_one_to_one_changed_by_reference_with_alternate_key(valuetype Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2/ChangeMechanism&lt;!TTestStore, !TFixture&gt; changeMechanism, bool useExistingEntities) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.Save_required_non_PK_one_to_one_changed_by_reference_with_alternate_key(Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.ChangeMechanism{`0,`1},System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTheory</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="changeMechanism" Type="Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;+ChangeMechanism" />
        <Parameter Name="useExistingEntities" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="changeMechanism">To be added.</param>
        <param name="useExistingEntities">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save_required_one_to_one_changed_by_reference">
      <MemberSignature Language="C#" Value="public virtual void Save_required_one_to_one_changed_by_reference (Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;.ChangeMechanism changeMechanism);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save_required_one_to_one_changed_by_reference(valuetype Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2/ChangeMechanism&lt;!TTestStore, !TFixture&gt; changeMechanism) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.Save_required_one_to_one_changed_by_reference(Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.ChangeMechanism{`0,`1})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTheory</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="changeMechanism" Type="Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;+ChangeMechanism" />
      </Parameters>
      <Docs>
        <param name="changeMechanism">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save_required_one_to_one_changed_by_reference_with_alternate_key">
      <MemberSignature Language="C#" Value="public virtual void Save_required_one_to_one_changed_by_reference_with_alternate_key (Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;.ChangeMechanism changeMechanism, bool useExistingEntities);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save_required_one_to_one_changed_by_reference_with_alternate_key(valuetype Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2/ChangeMechanism&lt;!TTestStore, !TFixture&gt; changeMechanism, bool useExistingEntities) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.Save_required_one_to_one_changed_by_reference_with_alternate_key(Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.ChangeMechanism{`0,`1},System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTheory</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="changeMechanism" Type="Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;+ChangeMechanism" />
        <Parameter Name="useExistingEntities" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="changeMechanism">To be added.</param>
        <param name="useExistingEntities">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sever_optional_one_to_one">
      <MemberSignature Language="C#" Value="public virtual void Sever_optional_one_to_one (Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;.ChangeMechanism changeMechanism);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sever_optional_one_to_one(valuetype Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2/ChangeMechanism&lt;!TTestStore, !TFixture&gt; changeMechanism) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.Sever_optional_one_to_one(Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.ChangeMechanism{`0,`1})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTheory</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="changeMechanism" Type="Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;+ChangeMechanism" />
      </Parameters>
      <Docs>
        <param name="changeMechanism">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sever_optional_one_to_one_with_alternate_key">
      <MemberSignature Language="C#" Value="public virtual void Sever_optional_one_to_one_with_alternate_key (Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;.ChangeMechanism changeMechanism);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sever_optional_one_to_one_with_alternate_key(valuetype Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2/ChangeMechanism&lt;!TTestStore, !TFixture&gt; changeMechanism) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.Sever_optional_one_to_one_with_alternate_key(Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.ChangeMechanism{`0,`1})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTheory</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="changeMechanism" Type="Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;+ChangeMechanism" />
      </Parameters>
      <Docs>
        <param name="changeMechanism">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sever_required_non_PK_one_to_one">
      <MemberSignature Language="C#" Value="public virtual void Sever_required_non_PK_one_to_one (Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;.ChangeMechanism changeMechanism);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sever_required_non_PK_one_to_one(valuetype Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2/ChangeMechanism&lt;!TTestStore, !TFixture&gt; changeMechanism) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.Sever_required_non_PK_one_to_one(Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.ChangeMechanism{`0,`1})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTheory</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="changeMechanism" Type="Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;+ChangeMechanism" />
      </Parameters>
      <Docs>
        <param name="changeMechanism">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sever_required_non_PK_one_to_one_with_alternate_key">
      <MemberSignature Language="C#" Value="public virtual void Sever_required_non_PK_one_to_one_with_alternate_key (Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;.ChangeMechanism changeMechanism);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sever_required_non_PK_one_to_one_with_alternate_key(valuetype Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2/ChangeMechanism&lt;!TTestStore, !TFixture&gt; changeMechanism) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.Sever_required_non_PK_one_to_one_with_alternate_key(Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.ChangeMechanism{`0,`1})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTheory</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="changeMechanism" Type="Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;+ChangeMechanism" />
      </Parameters>
      <Docs>
        <param name="changeMechanism">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sever_required_one_to_one">
      <MemberSignature Language="C#" Value="public virtual void Sever_required_one_to_one (Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;.ChangeMechanism changeMechanism);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sever_required_one_to_one(valuetype Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2/ChangeMechanism&lt;!TTestStore, !TFixture&gt; changeMechanism) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.Sever_required_one_to_one(Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.ChangeMechanism{`0,`1})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTheory</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="changeMechanism" Type="Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;+ChangeMechanism" />
      </Parameters>
      <Docs>
        <param name="changeMechanism">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sever_required_one_to_one_with_alternate_key">
      <MemberSignature Language="C#" Value="public virtual void Sever_required_one_to_one_with_alternate_key (Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;.ChangeMechanism changeMechanism);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sever_required_one_to_one_with_alternate_key(valuetype Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2/ChangeMechanism&lt;!TTestStore, !TFixture&gt; changeMechanism) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.Sever_required_one_to_one_with_alternate_key(Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.ChangeMechanism{`0,`1})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTheory</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="changeMechanism" Type="Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase&lt;TTestStore,TFixture&gt;+ChangeMechanism" />
      </Parameters>
      <Docs>
        <param name="changeMechanism">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sometimes_not_calling_DetectChanges_when_required_does_not_throw_for_null_ref">
      <MemberSignature Language="C#" Value="public virtual void Sometimes_not_calling_DetectChanges_when_required_does_not_throw_for_null_ref ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sometimes_not_calling_DetectChanges_when_required_does_not_throw_for_null_ref() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.Sometimes_not_calling_DetectChanges_when_required_does_not_throw_for_null_ref" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TestStore">
      <MemberSignature Language="C#" Value="protected TTestStore TestStore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TTestStore TestStore" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.TestStore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TTestStore</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseTransaction">
      <MemberSignature Language="C#" Value="protected virtual void UseTransaction (Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade facade, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void UseTransaction(class Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade facade, class Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GraphUpdatesTestBase`2.UseTransaction(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="facade" Type="Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" />
        <Parameter Name="transaction" Type="Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction" />
      </Parameters>
      <Docs>
        <param name="facade">To be added.</param>
        <param name="transaction">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>