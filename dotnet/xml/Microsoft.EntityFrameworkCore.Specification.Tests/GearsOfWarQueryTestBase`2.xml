<Type Name="GearsOfWarQueryTestBase&lt;TTestStore,TFixture&gt;" FullName="Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase&lt;TTestStore,TFixture&gt;">
  <TypeSignature Language="C#" Value="public abstract class GearsOfWarQueryTestBase&lt;TTestStore,TFixture&gt; : IDisposable, Xunit.IClassFixture&lt;TFixture&gt; where TTestStore : TestStore where TFixture : GearsOfWarQueryFixtureBase&lt;TTestStore&gt;new()" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit GearsOfWarQueryTestBase`2&lt;(class Microsoft.EntityFrameworkCore.Specification.Tests.TestStore) TTestStore, .ctor (class Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryFixtureBase`1&lt;!TTestStore&gt;) TFixture&gt; extends System.Object implements class System.IDisposable, class Xunit.IClassFixture`1&lt;!TFixture&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TTestStore">
      <Constraints>
        <BaseTypeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestStore</BaseTypeName>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TFixture">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <BaseTypeName>Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryFixtureBase&lt;TTestStore&gt;</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Xunit.IClassFixture&lt;TFixture&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TTestStore">To be added.</typeparam>
    <typeparam name="TFixture">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected GearsOfWarQueryTestBase (TFixture fixture);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(!TFixture fixture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.#ctor(`1)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fixture" Type="TFixture" />
      </Parameters>
      <Docs>
        <param name="fixture">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bitwise_projects_values_in_select">
      <MemberSignature Language="C#" Value="public virtual void Bitwise_projects_values_in_select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Bitwise_projects_values_in_select() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Bitwise_projects_values_in_select" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearLog">
      <MemberSignature Language="C#" Value="protected virtual void ClearLog ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ClearLog() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.ClearLog" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Coalesce_operator_in_predicate">
      <MemberSignature Language="C#" Value="public virtual void Coalesce_operator_in_predicate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Coalesce_operator_in_predicate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Coalesce_operator_in_predicate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Coalesce_operator_in_predicate_with_other_conditions">
      <MemberSignature Language="C#" Value="public virtual void Coalesce_operator_in_predicate_with_other_conditions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Coalesce_operator_in_predicate_with_other_conditions() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Coalesce_operator_in_predicate_with_other_conditions" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Coalesce_operator_in_projection_with_other_conditions">
      <MemberSignature Language="C#" Value="public virtual void Coalesce_operator_in_projection_with_other_conditions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Coalesce_operator_in_projection_with_other_conditions() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Coalesce_operator_in_projection_with_other_conditions" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Collection_with_inheritance_and_join_include_joined">
      <MemberSignature Language="C#" Value="public virtual void Collection_with_inheritance_and_join_include_joined ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Collection_with_inheritance_and_join_include_joined() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Collection_with_inheritance_and_join_include_joined" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Collection_with_inheritance_and_join_include_source">
      <MemberSignature Language="C#" Value="public virtual void Collection_with_inheritance_and_join_include_source ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Collection_with_inheritance_and_join_include_source() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Collection_with_inheritance_and_join_include_source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateContext">
      <MemberSignature Language="C#" Value="protected Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.GearsOfWarContext CreateContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.GearsOfWarContext CreateContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.CreateContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.GearsOfWarContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Dispose" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Entity_equality_empty">
      <MemberSignature Language="C#" Value="public virtual void Entity_equality_empty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Entity_equality_empty() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Entity_equality_empty" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fixture">
      <MemberSignature Language="C#" Value="protected TFixture Fixture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TFixture Fixture" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Fixture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TFixture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_Composite_Key">
      <MemberSignature Language="C#" Value="public virtual void GroupJoin_Composite_Key ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GroupJoin_Composite_Key() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.GroupJoin_Composite_Key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_multiple_circular">
      <MemberSignature Language="C#" Value="public virtual void Include_multiple_circular ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_multiple_circular() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Include_multiple_circular" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_multiple_circular_with_filter">
      <MemberSignature Language="C#" Value="public virtual void Include_multiple_circular_with_filter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_multiple_circular_with_filter() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Include_multiple_circular_with_filter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_multiple_include_then_include">
      <MemberSignature Language="C#" Value="public virtual void Include_multiple_include_then_include ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_multiple_include_then_include() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Include_multiple_include_then_include" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_multiple_one_to_one_and_one_to_many">
      <MemberSignature Language="C#" Value="public virtual void Include_multiple_one_to_one_and_one_to_many ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_multiple_one_to_one_and_one_to_many() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Include_multiple_one_to_one_and_one_to_many" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_multiple_one_to_one_and_one_to_many_self_reference">
      <MemberSignature Language="C#" Value="public virtual void Include_multiple_one_to_one_and_one_to_many_self_reference ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_multiple_one_to_one_and_one_to_many_self_reference() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Include_multiple_one_to_one_and_one_to_many_self_reference" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_multiple_one_to_one_and_one_to_one_and_one_to_many">
      <MemberSignature Language="C#" Value="public virtual void Include_multiple_one_to_one_and_one_to_one_and_one_to_many ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_multiple_one_to_one_and_one_to_one_and_one_to_many() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Include_multiple_one_to_one_and_one_to_one_and_one_to_many" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_multiple_one_to_one_optional_and_one_to_one_required">
      <MemberSignature Language="C#" Value="public virtual void Include_multiple_one_to_one_optional_and_one_to_one_required ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_multiple_one_to_one_optional_and_one_to_one_required() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Include_multiple_one_to_one_optional_and_one_to_one_required" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_navigation_on_derived_type">
      <MemberSignature Language="C#" Value="public virtual void Include_navigation_on_derived_type ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_navigation_on_derived_type() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Include_navigation_on_derived_type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_coalesce_result1">
      <MemberSignature Language="C#" Value="public virtual void Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_coalesce_result1 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_coalesce_result1() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_coalesce_result1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_coalesce_result2">
      <MemberSignature Language="C#" Value="public virtual void Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_coalesce_result2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_coalesce_result2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_coalesce_result2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_coalesce_result3">
      <MemberSignature Language="C#" Value="public virtual void Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_coalesce_result3 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_coalesce_result3() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_coalesce_result3" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_complex_projection_result">
      <MemberSignature Language="C#" Value="public virtual void Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_complex_projection_result ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_complex_projection_result() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_complex_projection_result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_conditional_result">
      <MemberSignature Language="C#" Value="public virtual void Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_conditional_result ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_conditional_result() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_conditional_result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_inheritance_and_coalesce_result">
      <MemberSignature Language="C#" Value="public virtual void Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_inheritance_and_coalesce_result ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_inheritance_and_coalesce_result() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_inheritance_and_coalesce_result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_using_alternate_key">
      <MemberSignature Language="C#" Value="public virtual void Include_using_alternate_key ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_using_alternate_key() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Include_using_alternate_key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_where_list_contains_navigation">
      <MemberSignature Language="C#" Value="public virtual void Include_where_list_contains_navigation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_where_list_contains_navigation() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Include_where_list_contains_navigation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_where_list_contains_navigation2">
      <MemberSignature Language="C#" Value="public virtual void Include_where_list_contains_navigation2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_where_list_contains_navigation2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Include_where_list_contains_navigation2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_with_join_and_inheritance1">
      <MemberSignature Language="C#" Value="public virtual void Include_with_join_and_inheritance1 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_with_join_and_inheritance1() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Include_with_join_and_inheritance1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_with_join_and_inheritance2">
      <MemberSignature Language="C#" Value="public virtual void Include_with_join_and_inheritance2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_with_join_and_inheritance2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Include_with_join_and_inheritance2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_with_join_and_inheritance3">
      <MemberSignature Language="C#" Value="public virtual void Include_with_join_and_inheritance3 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_with_join_and_inheritance3() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Include_with_join_and_inheritance3" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_with_join_collection1">
      <MemberSignature Language="C#" Value="public virtual void Include_with_join_collection1 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_with_join_collection1() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Include_with_join_collection1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_with_join_collection2">
      <MemberSignature Language="C#" Value="public virtual void Include_with_join_collection2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_with_join_collection2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Include_with_join_collection2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_with_join_multi_level">
      <MemberSignature Language="C#" Value="public virtual void Include_with_join_multi_level ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_with_join_multi_level() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Include_with_join_multi_level" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_with_join_reference1">
      <MemberSignature Language="C#" Value="public virtual void Include_with_join_reference1 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_with_join_reference1() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Include_with_join_reference1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_with_join_reference2">
      <MemberSignature Language="C#" Value="public virtual void Include_with_join_reference2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_with_join_reference2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Include_with_join_reference2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_with_nested_navigation_in_order_by">
      <MemberSignature Language="C#" Value="public virtual void Include_with_nested_navigation_in_order_by ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_with_nested_navigation_in_order_by() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Include_with_nested_navigation_in_order_by" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_navigation_translated_to_subquery_composite_key">
      <MemberSignature Language="C#" Value="public virtual void Join_navigation_translated_to_subquery_composite_key ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Join_navigation_translated_to_subquery_composite_key() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Join_navigation_translated_to_subquery_composite_key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_predicate_condition_equals_condition">
      <MemberSignature Language="C#" Value="public virtual void Join_predicate_condition_equals_condition ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Join_predicate_condition_equals_condition() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Join_predicate_condition_equals_condition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_predicate_value">
      <MemberSignature Language="C#" Value="public virtual void Join_predicate_value ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Join_predicate_value() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Join_predicate_value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_predicate_value_equals_condition">
      <MemberSignature Language="C#" Value="public virtual void Join_predicate_value_equals_condition ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Join_predicate_value_equals_condition() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Join_predicate_value_equals_condition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Left_join_predicate_condition_equals_condition">
      <MemberSignature Language="C#" Value="public virtual void Left_join_predicate_condition_equals_condition ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Left_join_predicate_condition_equals_condition() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Left_join_predicate_condition_equals_condition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Left_join_predicate_value">
      <MemberSignature Language="C#" Value="public virtual void Left_join_predicate_value ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Left_join_predicate_value() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Left_join_predicate_value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Left_join_predicate_value_equals_condition">
      <MemberSignature Language="C#" Value="public virtual void Left_join_predicate_value_equals_condition ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Left_join_predicate_value_equals_condition() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Left_join_predicate_value_equals_condition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Navigation_accessed_twice_outside_and_inside_subquery">
      <MemberSignature Language="C#" Value="public virtual void Navigation_accessed_twice_outside_and_inside_subquery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Navigation_accessed_twice_outside_and_inside_subquery() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Navigation_accessed_twice_outside_and_inside_subquery" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Non_unicode_parameter_is_used_for_non_unicode_column">
      <MemberSignature Language="C#" Value="public virtual void Non_unicode_parameter_is_used_for_non_unicode_column ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Non_unicode_parameter_is_used_for_non_unicode_column() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Non_unicode_parameter_is_used_for_non_unicode_column" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Non_unicode_string_literal_is_used_for_non_unicode_column">
      <MemberSignature Language="C#" Value="public virtual void Non_unicode_string_literal_is_used_for_non_unicode_column ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Non_unicode_string_literal_is_used_for_non_unicode_column() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Non_unicode_string_literal_is_used_for_non_unicode_column" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Non_unicode_string_literal_is_used_for_non_unicode_column_right">
      <MemberSignature Language="C#" Value="public virtual void Non_unicode_string_literal_is_used_for_non_unicode_column_right ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Non_unicode_string_literal_is_used_for_non_unicode_column_right() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Non_unicode_string_literal_is_used_for_non_unicode_column_right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Non_unicode_string_literals_in_contains_is_used_for_non_unicode_column">
      <MemberSignature Language="C#" Value="public virtual void Non_unicode_string_literals_in_contains_is_used_for_non_unicode_column ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Non_unicode_string_literals_in_contains_is_used_for_non_unicode_column() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Non_unicode_string_literals_in_contains_is_used_for_non_unicode_column" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Non_unicode_string_literals_is_used_for_non_unicode_column_in_subquery">
      <MemberSignature Language="C#" Value="public virtual void Non_unicode_string_literals_is_used_for_non_unicode_column_in_subquery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Non_unicode_string_literals_is_used_for_non_unicode_column_in_subquery() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Non_unicode_string_literals_is_used_for_non_unicode_column_in_subquery" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Non_unicode_string_literals_is_used_for_non_unicode_column_with_concat">
      <MemberSignature Language="C#" Value="public virtual void Non_unicode_string_literals_is_used_for_non_unicode_column_with_concat ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Non_unicode_string_literals_is_used_for_non_unicode_column_with_concat() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Non_unicode_string_literals_is_used_for_non_unicode_column_with_concat" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Non_unicode_string_literals_is_used_for_non_unicode_column_with_contains">
      <MemberSignature Language="C#" Value="public virtual void Non_unicode_string_literals_is_used_for_non_unicode_column_with_contains ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Non_unicode_string_literals_is_used_for_non_unicode_column_with_contains() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Non_unicode_string_literals_is_used_for_non_unicode_column_with_contains" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Non_unicode_string_literals_is_used_for_non_unicode_column_with_subquery">
      <MemberSignature Language="C#" Value="public virtual void Non_unicode_string_literals_is_used_for_non_unicode_column_with_subquery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Non_unicode_string_literals_is_used_for_non_unicode_column_with_subquery() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Non_unicode_string_literals_is_used_for_non_unicode_column_with_subquery" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Null_propagation_optimization1">
      <MemberSignature Language="C#" Value="public virtual void Null_propagation_optimization1 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Null_propagation_optimization1() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Null_propagation_optimization1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Null_propagation_optimization2">
      <MemberSignature Language="C#" Value="public virtual void Null_propagation_optimization2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Null_propagation_optimization2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Null_propagation_optimization2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Null_propagation_optimization3">
      <MemberSignature Language="C#" Value="public virtual void Null_propagation_optimization3 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Null_propagation_optimization3() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Null_propagation_optimization3" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Null_propagation_optimization4">
      <MemberSignature Language="C#" Value="public virtual void Null_propagation_optimization4 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Null_propagation_optimization4() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Null_propagation_optimization4" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Null_propagation_optimization5">
      <MemberSignature Language="C#" Value="public virtual void Null_propagation_optimization5 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Null_propagation_optimization5() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Null_propagation_optimization5" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Null_propagation_optimization6">
      <MemberSignature Language="C#" Value="public virtual void Null_propagation_optimization6 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Null_propagation_optimization6() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Null_propagation_optimization6" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optional_Navigation_Null_Coalesce_To_Clr_Type">
      <MemberSignature Language="C#" Value="public virtual void Optional_Navigation_Null_Coalesce_To_Clr_Type ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Optional_Navigation_Null_Coalesce_To_Clr_Type() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Optional_Navigation_Null_Coalesce_To_Clr_Type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optional_navigation_type_compensation_works_with_all">
      <MemberSignature Language="C#" Value="public virtual void Optional_navigation_type_compensation_works_with_all ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Optional_navigation_type_compensation_works_with_all() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Optional_navigation_type_compensation_works_with_all" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optional_navigation_type_compensation_works_with_array_initializers">
      <MemberSignature Language="C#" Value="public virtual void Optional_navigation_type_compensation_works_with_array_initializers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Optional_navigation_type_compensation_works_with_array_initializers() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Optional_navigation_type_compensation_works_with_array_initializers" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optional_navigation_type_compensation_works_with_binary_expression">
      <MemberSignature Language="C#" Value="public virtual void Optional_navigation_type_compensation_works_with_binary_expression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Optional_navigation_type_compensation_works_with_binary_expression() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Optional_navigation_type_compensation_works_with_binary_expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optional_navigation_type_compensation_works_with_conditional_expression">
      <MemberSignature Language="C#" Value="public virtual void Optional_navigation_type_compensation_works_with_conditional_expression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Optional_navigation_type_compensation_works_with_conditional_expression() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Optional_navigation_type_compensation_works_with_conditional_expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optional_navigation_type_compensation_works_with_contains">
      <MemberSignature Language="C#" Value="public virtual void Optional_navigation_type_compensation_works_with_contains ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Optional_navigation_type_compensation_works_with_contains() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Optional_navigation_type_compensation_works_with_contains" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optional_navigation_type_compensation_works_with_DTOs">
      <MemberSignature Language="C#" Value="public virtual void Optional_navigation_type_compensation_works_with_DTOs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Optional_navigation_type_compensation_works_with_DTOs() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Optional_navigation_type_compensation_works_with_DTOs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optional_navigation_type_compensation_works_with_groupby">
      <MemberSignature Language="C#" Value="public virtual void Optional_navigation_type_compensation_works_with_groupby ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Optional_navigation_type_compensation_works_with_groupby() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Optional_navigation_type_compensation_works_with_groupby" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optional_navigation_type_compensation_works_with_list_initializers">
      <MemberSignature Language="C#" Value="public virtual void Optional_navigation_type_compensation_works_with_list_initializers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Optional_navigation_type_compensation_works_with_list_initializers() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Optional_navigation_type_compensation_works_with_list_initializers" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optional_navigation_type_compensation_works_with_orderby">
      <MemberSignature Language="C#" Value="public virtual void Optional_navigation_type_compensation_works_with_orderby ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Optional_navigation_type_compensation_works_with_orderby() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Optional_navigation_type_compensation_works_with_orderby" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optional_navigation_type_compensation_works_with_predicate">
      <MemberSignature Language="C#" Value="public virtual void Optional_navigation_type_compensation_works_with_predicate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Optional_navigation_type_compensation_works_with_predicate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Optional_navigation_type_compensation_works_with_predicate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optional_navigation_type_compensation_works_with_predicate_negated">
      <MemberSignature Language="C#" Value="public virtual void Optional_navigation_type_compensation_works_with_predicate_negated ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Optional_navigation_type_compensation_works_with_predicate_negated() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Optional_navigation_type_compensation_works_with_predicate_negated" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optional_navigation_type_compensation_works_with_predicate_negated_complex1">
      <MemberSignature Language="C#" Value="public virtual void Optional_navigation_type_compensation_works_with_predicate_negated_complex1 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Optional_navigation_type_compensation_works_with_predicate_negated_complex1() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Optional_navigation_type_compensation_works_with_predicate_negated_complex1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optional_navigation_type_compensation_works_with_predicate_negated_complex2">
      <MemberSignature Language="C#" Value="public virtual void Optional_navigation_type_compensation_works_with_predicate_negated_complex2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Optional_navigation_type_compensation_works_with_predicate_negated_complex2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Optional_navigation_type_compensation_works_with_predicate_negated_complex2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optional_navigation_type_compensation_works_with_predicate2">
      <MemberSignature Language="C#" Value="public virtual void Optional_navigation_type_compensation_works_with_predicate2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Optional_navigation_type_compensation_works_with_predicate2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Optional_navigation_type_compensation_works_with_predicate2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optional_navigation_type_compensation_works_with_projection">
      <MemberSignature Language="C#" Value="public virtual void Optional_navigation_type_compensation_works_with_projection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Optional_navigation_type_compensation_works_with_projection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Optional_navigation_type_compensation_works_with_projection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optional_navigation_type_compensation_works_with_projection_into_anonymous_type">
      <MemberSignature Language="C#" Value="public virtual void Optional_navigation_type_compensation_works_with_projection_into_anonymous_type ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Optional_navigation_type_compensation_works_with_projection_into_anonymous_type() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Optional_navigation_type_compensation_works_with_projection_into_anonymous_type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optional_navigation_type_compensation_works_with_skip">
      <MemberSignature Language="C#" Value="public virtual void Optional_navigation_type_compensation_works_with_skip ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Optional_navigation_type_compensation_works_with_skip() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Optional_navigation_type_compensation_works_with_skip" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optional_navigation_type_compensation_works_with_take">
      <MemberSignature Language="C#" Value="public virtual void Optional_navigation_type_compensation_works_with_take ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Optional_navigation_type_compensation_works_with_take() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Optional_navigation_type_compensation_works_with_take" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_comparison_with_null">
      <MemberSignature Language="C#" Value="public virtual void Select_comparison_with_null ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_comparison_with_null() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Select_comparison_with_null" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_correlated_filtered_collection">
      <MemberSignature Language="C#" Value="public virtual void Select_correlated_filtered_collection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_correlated_filtered_collection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Select_correlated_filtered_collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_correlated_filtered_collection_with_composite_key">
      <MemberSignature Language="C#" Value="public virtual void Select_correlated_filtered_collection_with_composite_key ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_correlated_filtered_collection_with_composite_key() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Select_correlated_filtered_collection_with_composite_key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_correlated_filtered_collection_works_with_caching">
      <MemberSignature Language="C#" Value="public virtual void Select_correlated_filtered_collection_works_with_caching ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_correlated_filtered_collection_works_with_caching() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Select_correlated_filtered_collection_works_with_caching" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_enum_has_flag">
      <MemberSignature Language="C#" Value="public virtual void Select_enum_has_flag ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_enum_has_flag() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Select_enum_has_flag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_inverted_boolean">
      <MemberSignature Language="C#" Value="public virtual void Select_inverted_boolean ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_inverted_boolean() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Select_inverted_boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_multiple_conditions">
      <MemberSignature Language="C#" Value="public virtual void Select_multiple_conditions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_multiple_conditions() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Select_multiple_conditions" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_nested_ternary_operations">
      <MemberSignature Language="C#" Value="public virtual void Select_nested_ternary_operations ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_nested_ternary_operations() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Select_nested_ternary_operations" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_null_propagation_negative1">
      <MemberSignature Language="C#" Value="public virtual void Select_null_propagation_negative1 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_null_propagation_negative1() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Select_null_propagation_negative1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_null_propagation_negative2">
      <MemberSignature Language="C#" Value="public virtual void Select_null_propagation_negative2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_null_propagation_negative2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Select_null_propagation_negative2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_Singleton_Navigation_With_Member_Access">
      <MemberSignature Language="C#" Value="public virtual void Select_Singleton_Navigation_With_Member_Access ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_Singleton_Navigation_With_Member_Access() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Select_Singleton_Navigation_With_Member_Access" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_ternary_operation_multiple_conditions">
      <MemberSignature Language="C#" Value="public virtual void Select_ternary_operation_multiple_conditions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_ternary_operation_multiple_conditions() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Select_ternary_operation_multiple_conditions" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_ternary_operation_multiple_conditions_2">
      <MemberSignature Language="C#" Value="public virtual void Select_ternary_operation_multiple_conditions_2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_ternary_operation_multiple_conditions_2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Select_ternary_operation_multiple_conditions_2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_ternary_operation_with_boolean">
      <MemberSignature Language="C#" Value="public virtual void Select_ternary_operation_with_boolean ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_ternary_operation_with_boolean() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Select_ternary_operation_with_boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_ternary_operation_with_has_value_not_null">
      <MemberSignature Language="C#" Value="public virtual void Select_ternary_operation_with_has_value_not_null ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_ternary_operation_with_has_value_not_null() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Select_ternary_operation_with_has_value_not_null" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_ternary_operation_with_inverted_boolean">
      <MemberSignature Language="C#" Value="public virtual void Select_ternary_operation_with_inverted_boolean ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_ternary_operation_with_inverted_boolean() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Select_ternary_operation_with_inverted_boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_Where_Navigation">
      <MemberSignature Language="C#" Value="public virtual void Select_Where_Navigation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_Where_Navigation() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Select_Where_Navigation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_Where_Navigation_Client">
      <MemberSignature Language="C#" Value="public virtual void Select_Where_Navigation_Client ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_Where_Navigation_Client() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Select_Where_Navigation_Client" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_Where_Navigation_Equals_Navigation">
      <MemberSignature Language="C#" Value="public virtual void Select_Where_Navigation_Equals_Navigation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_Where_Navigation_Equals_Navigation() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Select_Where_Navigation_Equals_Navigation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_Where_Navigation_Included">
      <MemberSignature Language="C#" Value="public virtual void Select_Where_Navigation_Included ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_Where_Navigation_Included() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Select_Where_Navigation_Included" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_Where_Navigation_Null">
      <MemberSignature Language="C#" Value="public virtual void Select_Where_Navigation_Null ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_Where_Navigation_Null() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Select_Where_Navigation_Null" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_Where_Navigation_Null_Reverse">
      <MemberSignature Language="C#" Value="public virtual void Select_Where_Navigation_Null_Reverse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_Where_Navigation_Null_Reverse() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Select_Where_Navigation_Null_Reverse" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_Where_Navigation_Scalar_Equals_Navigation_Scalar">
      <MemberSignature Language="C#" Value="public virtual void Select_Where_Navigation_Scalar_Equals_Navigation_Scalar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_Where_Navigation_Scalar_Equals_Navigation_Scalar() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Select_Where_Navigation_Scalar_Equals_Navigation_Scalar" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_Where_Navigation_Scalar_Equals_Navigation_Scalar_Projected">
      <MemberSignature Language="C#" Value="public virtual void Select_Where_Navigation_Scalar_Equals_Navigation_Scalar_Projected ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_Where_Navigation_Scalar_Equals_Navigation_Scalar_Projected() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Select_Where_Navigation_Scalar_Equals_Navigation_Scalar_Projected" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Singleton_Navigation_With_Member_Access">
      <MemberSignature Language="C#" Value="public virtual void Singleton_Navigation_With_Member_Access ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Singleton_Navigation_With_Member_Access() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Singleton_Navigation_With_Member_Access" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TestStore">
      <MemberSignature Language="C#" Value="protected TTestStore TestStore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TTestStore TestStore" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.TestStore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TTestStore</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_any_subquery_without_collision">
      <MemberSignature Language="C#" Value="public virtual void Where_any_subquery_without_collision ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_any_subquery_without_collision() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Where_any_subquery_without_collision" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_bitwise_and_enum">
      <MemberSignature Language="C#" Value="public virtual void Where_bitwise_and_enum ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_bitwise_and_enum() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Where_bitwise_and_enum" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_bitwise_and_integral">
      <MemberSignature Language="C#" Value="public virtual void Where_bitwise_and_integral ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_bitwise_and_integral() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Where_bitwise_and_integral" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_bitwise_and_nullable_enum_with_constant">
      <MemberSignature Language="C#" Value="public virtual void Where_bitwise_and_nullable_enum_with_constant ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_bitwise_and_nullable_enum_with_constant() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Where_bitwise_and_nullable_enum_with_constant" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_bitwise_and_nullable_enum_with_non_nullable_parameter">
      <MemberSignature Language="C#" Value="public virtual void Where_bitwise_and_nullable_enum_with_non_nullable_parameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_bitwise_and_nullable_enum_with_non_nullable_parameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Where_bitwise_and_nullable_enum_with_non_nullable_parameter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_bitwise_and_nullable_enum_with_null_constant">
      <MemberSignature Language="C#" Value="public virtual void Where_bitwise_and_nullable_enum_with_null_constant ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_bitwise_and_nullable_enum_with_null_constant() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Where_bitwise_and_nullable_enum_with_null_constant" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_bitwise_and_nullable_enum_with_nullable_parameter">
      <MemberSignature Language="C#" Value="public virtual void Where_bitwise_and_nullable_enum_with_nullable_parameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_bitwise_and_nullable_enum_with_nullable_parameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Where_bitwise_and_nullable_enum_with_nullable_parameter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_bitwise_or_enum">
      <MemberSignature Language="C#" Value="public virtual void Where_bitwise_or_enum ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_bitwise_or_enum() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Where_bitwise_or_enum" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_count_subquery_without_collision">
      <MemberSignature Language="C#" Value="public virtual void Where_count_subquery_without_collision ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_count_subquery_without_collision() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Where_count_subquery_without_collision" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_enum">
      <MemberSignature Language="C#" Value="public virtual void Where_enum ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_enum() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Where_enum" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_enum_has_flag">
      <MemberSignature Language="C#" Value="public virtual void Where_enum_has_flag ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_enum_has_flag() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Where_enum_has_flag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_enum_has_flag_subquery">
      <MemberSignature Language="C#" Value="public virtual void Where_enum_has_flag_subquery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_enum_has_flag_subquery() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Where_enum_has_flag_subquery" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_enum_has_flag_with_non_nullable_parameter">
      <MemberSignature Language="C#" Value="public virtual void Where_enum_has_flag_with_non_nullable_parameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_enum_has_flag_with_non_nullable_parameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Where_enum_has_flag_with_non_nullable_parameter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_has_flag_with_nullable_parameter">
      <MemberSignature Language="C#" Value="public virtual void Where_has_flag_with_nullable_parameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_has_flag_with_nullable_parameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Where_has_flag_with_nullable_parameter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_nullable_enum_with_constant">
      <MemberSignature Language="C#" Value="public virtual void Where_nullable_enum_with_constant ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_nullable_enum_with_constant() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Where_nullable_enum_with_constant" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_nullable_enum_with_non_nullable_parameter">
      <MemberSignature Language="C#" Value="public virtual void Where_nullable_enum_with_non_nullable_parameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_nullable_enum_with_non_nullable_parameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Where_nullable_enum_with_non_nullable_parameter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_nullable_enum_with_null_constant">
      <MemberSignature Language="C#" Value="public virtual void Where_nullable_enum_with_null_constant ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_nullable_enum_with_null_constant() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Where_nullable_enum_with_null_constant" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_nullable_enum_with_nullable_parameter">
      <MemberSignature Language="C#" Value="public virtual void Where_nullable_enum_with_nullable_parameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_nullable_enum_with_nullable_parameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Where_nullable_enum_with_nullable_parameter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_subquery_boolean">
      <MemberSignature Language="C#" Value="public virtual void Where_subquery_boolean ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_subquery_boolean() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Specification.Tests.GearsOfWarQueryTestBase`2.Where_subquery_boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>