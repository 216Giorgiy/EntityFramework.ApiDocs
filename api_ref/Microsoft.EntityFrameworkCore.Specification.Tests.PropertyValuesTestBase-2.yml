### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  id: PropertyValuesTestBase`2
  parent: Microsoft.EntityFrameworkCore.Specification.Tests
  children:
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.#ctor(`1)
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.CreateContext
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Current_values_can_be_copied_from_a_non_generic_property_dictionary_into_an_object
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Current_values_can_be_copied_into_a_cloned_dictionary
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Current_values_can_be_copied_into_a_non_generic_cloned_dictionary
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Current_values_can_be_copied_into_an_object
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Current_values_can_be_read_and_set_for_an_object_in_the_Added_state
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Current_values_can_be_read_and_set_for_an_object_in_the_Modified_state
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Current_values_can_be_read_and_set_for_an_object_in_the_Unchanged_state
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Current_values_can_be_read_or_set_for_a_Detached_object
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Current_values_can_be_read_or_set_for_an_object_in_the_Deleted_state
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Current_values_can_be_set_from_an_object_using_generic_dictionary
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Current_values_can_be_set_from_an_object_using_non_generic_dictionary
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Current_values_can_be_set_from_dictionary
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Current_values_can_be_set_from_dictionary_some_missing
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Current_values_can_be_set_from_DTO_object_missing_key_using_non_generic_dictionary
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Current_values_can_be_set_from_DTO_object_using_non_generic_dictionary
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Current_values_can_be_set_from_one_generic_dictionary_to_another_generic_dictionary
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Current_values_can_be_set_from_one_non_generic_dictionary_to_another_generic_dictionary
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Current_values_for_derived_object_can_be_copied_into_an_object
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Dispose
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Fixture
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.GetDatabaseValues_for_derived_entity_not_in_the_store_returns_null
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.GetDatabaseValues_for_entity_not_in_the_store_returns_null
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.GetDatabaseValues_for_the_wrong_type_in_the_store_returns_null
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.GetDatabaseValuesAsync_for_derived_entity_not_in_the_store_returns_null
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.GetDatabaseValuesAsync_for_entity_not_in_the_store_returns_null
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.GetDatabaseValuesAsync_for_the_wrong_type_in_the_store_returns_null
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Non_nullable_property_in_cloned_dictionary_cannot_be_set_to_null
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Non_nullable_property_in_current_values_results_in_conceptual_null
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Non_nullable_property_in_original_values_cannot_be_set_to_null_in_property_dictionary
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Non_nullable_shadow_property_in_current_values_results_in_conceptual_null
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Non_nullable_shadow_property_in_original_values_cannot_be_set_to_null_in_property_dictionary
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.NonGeneric_GetDatabaseValues_for_derived_entity_not_in_the_store_returns_null
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.NonGeneric_GetDatabaseValues_for_entity_not_in_the_store_returns_null
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.NonGeneric_GetDatabaseValues_for_the_wrong_type_in_the_store_throws
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.NonGeneric_GetDatabaseValuesAsync_for_derived_entity_not_in_the_store_returns_null
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.NonGeneric_GetDatabaseValuesAsync_for_entity_not_in_the_store_returns_null
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.NonGeneric_GetDatabaseValuesAsync_for_the_wrong_type_in_the_store_throws
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Original_values_can_be_copied_into_a_cloned_dictionary
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Original_values_can_be_copied_into_a_non_generic_cloned_dictionary
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Original_values_can_be_copied_into_an_object
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Original_values_can_be_copied_non_generic_property_dictionary_into_an_object
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Original_values_can_be_read_and_set_for_an_object_in_the_Deleted_state
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Original_values_can_be_read_and_set_for_an_object_in_the_Modified_state
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Original_values_can_be_read_and_set_for_an_object_in_the_Unchanged_state
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Original_values_can_be_read_or_set_for_a_Detached_object
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Original_values_can_be_read_or_set_for_an_object_in_the_Added_state
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Original_values_can_be_set_from_an_object_using_generic_dictionary
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Original_values_can_be_set_from_an_object_using_non_generic_dictionary
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Original_values_can_be_set_from_dictionary
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Original_values_can_be_set_from_dictionary_some_missing
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Original_values_can_be_set_from_DTO_object_missing_key_using_non_generic_dictionary
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Original_values_can_be_set_from_DTO_object_using_non_generic_dictionary
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Original_values_can_be_set_from_one_generic_dictionary_to_another_generic_dictionary
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Original_values_can_be_set_from_one_non_generic_dictionary_to_another_generic_dictionary
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Original_values_for_derived_object_can_be_copied_into_an_object
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Primary_key_in_current_values_cannot_be_changed_by_setting_values_from_another_dictionary
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Primary_key_in_current_values_cannot_be_changed_by_setting_values_from_object
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Primary_key_in_current_values_cannot_be_changed_in_property_dictionary
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Primary_key_in_original_values_cannot_be_changed_by_setting_values_from_another_dictionary
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Primary_key_in_original_values_cannot_be_changed_by_setting_values_from_object
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Primary_key_in_original_values_cannot_be_changed_in_property_dictionary
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Properties_for_cloned_dictionary_returns_properties
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Properties_for_current_values_returns_properties
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Properties_for_original_values_returns_properties
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Properties_for_store_values_returns_properties
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Properties_for_store_values_returns_properties_asynchronously
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Property_in_cloned_dictionary_cannot_be_set_to_instance_of_wrong_type
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Property_in_current_values_cannot_be_set_to_instance_of_wrong_type
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Property_in_original_values_cannot_be_set_to_instance_of_wrong_type
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_current_values_can_be_accessed_as_a_non_generic_property_dictionary
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_current_values_can_be_accessed_as_a_non_generic_property_dictionary_using_IProperty
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_current_values_can_be_accessed_as_a_property_dictionary
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_current_values_can_be_accessed_as_a_property_dictionary_using_IProperty
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_current_values_can_be_set_using_a_non_generic_property_dictionary
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_current_values_can_be_set_using_a_property_dictionary
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_current_values_can_be_set_using_a_property_dictionary_with_IProperty
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_current_values_of_a_derived_object_can_be_accessed_as_a_non_generic_property_dictionary
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_current_values_of_a_derived_object_can_be_accessed_as_a_property_dictionary
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_original_values_can_be_accessed_as_a_non_generic_property_dictionary
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_original_values_can_be_accessed_as_a_non_generic_property_dictionary_using_IProperty
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_original_values_can_be_accessed_as_a_property_dictionary
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_original_values_can_be_accessed_as_a_property_dictionary_using_IProperty
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_original_values_can_be_set_using_a_non_generic_property_dictionary
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_original_values_can_be_set_using_a_property_dictionary
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_original_values_can_be_set_using_a_property_dictionary_with_IProperty
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_original_values_of_a_derived_object_can_be_accessed_as_a_non_generic_property_dictionary
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_original_values_of_a_derived_object_can_be_accessed_as_a_property_dictionary
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_store_values_can_be_accessed_as_a_non_generic_property_dictionary
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_store_values_can_be_accessed_as_a_non_generic_property_dictionary_using_IProperty
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_store_values_can_be_accessed_as_a_property_dictionary
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_store_values_can_be_accessed_as_a_property_dictionary_using_IProperty
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_store_values_can_be_accessed_asynchronously_as_a_non_generic_property_dictionary
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_store_values_can_be_accessed_asynchronously_as_a_non_generic_property_dictionary_using_IProperty
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_store_values_can_be_accessed_asynchronously_as_a_property_dictionary
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_store_values_can_be_accessed_asynchronously_as_a_property_dictionary_using_IProperty
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_store_values_of_a_derived_object_can_be_accessed_as_a_non_generic_property_dictionary
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_store_values_of_a_derived_object_can_be_accessed_as_a_property_dictionary
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_store_values_of_a_derived_object_can_be_accessed_asynchronously_as_a_non_generic_property_dictionary
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_store_values_of_a_derived_object_can_be_accessed_asynchronously_as_a_property_dictionary
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Setting_store_values_does_not_change_current_or_original_values
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Shadow_property_in_current_values_cannot_be_set_to_instance_of_wrong_type
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Shadow_property_in_original_values_cannot_be_set_to_instance_of_wrong_type
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Store_values_can_be_copied_asynchronously_into_a_non_generic_cloned_dictionary
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Store_values_can_be_copied_asynchronously_non_generic_property_dictionary_into_an_object
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Store_values_can_be_copied_into_a_cloned_dictionary
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Store_values_can_be_copied_into_a_cloned_dictionary_asynchronously
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Store_values_can_be_copied_into_a_non_generic_cloned_dictionary
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Store_values_can_be_copied_into_an_object
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Store_values_can_be_copied_into_an_object_asynchronously
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Store_values_can_be_copied_non_generic_property_dictionary_into_an_object
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Store_values_can_be_read_and_set_for_an_object_in_the_Deleted_state
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Store_values_can_be_read_and_set_for_an_object_in_the_Deleted_state_asynchronously
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Store_values_can_be_read_and_set_for_an_object_in_the_Modified_state
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Store_values_can_be_read_and_set_for_an_object_in_the_Modified_state_asynchronously
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Store_values_can_be_read_and_set_for_an_object_in_the_Unchanged_state
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Store_values_can_be_read_and_set_for_an_object_in_the_Unchanged_state_asynchronously
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Store_values_can_be_read_or_set_for_a_Detached_object
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Store_values_can_be_read_or_set_for_an_object_in_the_Added_state
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Store_values_can_be_read_or_set_for_an_object_in_the_Added_state_asynchronously
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Store_values_cannot_be_read_or_set_for_a_Detached_object_asynchronously
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Store_values_for_derived_object_can_be_copied_into_an_object
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Store_values_for_derived_object_can_be_copied_into_an_object_asynchronously
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Store_values_really_are_store_values_not_current_or_original_values
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Store_values_really_are_store_values_not_current_or_original_values_async
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.TestStore
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Using_bad_IProperty_instances_throws
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Using_bad_IProperty_instances_throws_derived
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Using_bad_property_names_throws
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Using_bad_property_names_throws_derived
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Values_in_cloned_dictionary_can_be_set_with_IProperty
  langs:
  - csharp
  - vb
  name: PropertyValuesTestBase<TTestStore, TFixture>
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: PropertyValuesTestBase
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 14
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: 'public abstract class PropertyValuesTestBase<TTestStore, TFixture> : IClassFixture<TFixture>, IDisposable where TTestStore : TestStore where TFixture : PropertyValuesTestBase<TTestStore, TFixture>.PropertyValuesFixtureBase, new ()'
    content.vb: >-
      Public MustInherit Class PropertyValuesTestBase(Of TTestStore As TestStore, TFixture As {PropertyValuesTestBase(Of TTestStore, TFixture).PropertyValuesFixtureBase, New})
          Implements IClassFixture(Of TFixture), IDisposable
    typeParameters:
    - id: TTestStore
    - id: TFixture
  inheritance:
  - System.Object
  implements:
  - Xunit.IClassFixture{{TFixture}}
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture)
  name.vb: PropertyValuesTestBase(Of TTestStore, TFixture)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.#ctor(`1)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.#ctor(`1)
  id: '#ctor(`1)'
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: PropertyValuesTestBase(TFixture)
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.PropertyValuesTestBase(TFixture)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.PropertyValuesTestBase(TFixture)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 18
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: protected PropertyValuesTestBase(TFixture fixture)
    content.vb: Protected Sub New(fixture As TFixture)
    parameters:
    - id: fixture
      type: '{TFixture}'
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).PropertyValuesTestBase(TFixture)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).PropertyValuesTestBase(TFixture)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_current_values_can_be_accessed_as_a_property_dictionary
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_current_values_can_be_accessed_as_a_property_dictionary
  id: Scalar_current_values_can_be_accessed_as_a_property_dictionary
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Scalar_current_values_can_be_accessed_as_a_property_dictionary()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Scalar_current_values_can_be_accessed_as_a_property_dictionary()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Scalar_current_values_can_be_accessed_as_a_property_dictionary()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Scalar_current_values_can_be_accessed_as_a_property_dictionary
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 24
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task Scalar_current_values_can_be_accessed_as_a_property_dictionary()
    content.vb: >-
      <Fact>

      Public Overridable Function Scalar_current_values_can_be_accessed_as_a_property_dictionary As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Scalar_current_values_can_be_accessed_as_a_property_dictionary()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Scalar_current_values_can_be_accessed_as_a_property_dictionary()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_original_values_can_be_accessed_as_a_property_dictionary
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_original_values_can_be_accessed_as_a_property_dictionary
  id: Scalar_original_values_can_be_accessed_as_a_property_dictionary
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Scalar_original_values_can_be_accessed_as_a_property_dictionary()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Scalar_original_values_can_be_accessed_as_a_property_dictionary()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Scalar_original_values_can_be_accessed_as_a_property_dictionary()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Scalar_original_values_can_be_accessed_as_a_property_dictionary
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 30
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task Scalar_original_values_can_be_accessed_as_a_property_dictionary()
    content.vb: >-
      <Fact>

      Public Overridable Function Scalar_original_values_can_be_accessed_as_a_property_dictionary As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Scalar_original_values_can_be_accessed_as_a_property_dictionary()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Scalar_original_values_can_be_accessed_as_a_property_dictionary()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_store_values_can_be_accessed_as_a_property_dictionary
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_store_values_can_be_accessed_as_a_property_dictionary
  id: Scalar_store_values_can_be_accessed_as_a_property_dictionary
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Scalar_store_values_can_be_accessed_as_a_property_dictionary()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Scalar_store_values_can_be_accessed_as_a_property_dictionary()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Scalar_store_values_can_be_accessed_as_a_property_dictionary()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Scalar_store_values_can_be_accessed_as_a_property_dictionary
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 36
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task Scalar_store_values_can_be_accessed_as_a_property_dictionary()
    content.vb: >-
      <Fact>

      Public Overridable Function Scalar_store_values_can_be_accessed_as_a_property_dictionary As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Scalar_store_values_can_be_accessed_as_a_property_dictionary()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Scalar_store_values_can_be_accessed_as_a_property_dictionary()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_store_values_can_be_accessed_asynchronously_as_a_property_dictionary
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_store_values_can_be_accessed_asynchronously_as_a_property_dictionary
  id: Scalar_store_values_can_be_accessed_asynchronously_as_a_property_dictionary
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Scalar_store_values_can_be_accessed_asynchronously_as_a_property_dictionary()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Scalar_store_values_can_be_accessed_asynchronously_as_a_property_dictionary()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Scalar_store_values_can_be_accessed_asynchronously_as_a_property_dictionary()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Scalar_store_values_can_be_accessed_asynchronously_as_a_property_dictionary
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 42
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task Scalar_store_values_can_be_accessed_asynchronously_as_a_property_dictionary()
    content.vb: >-
      <Fact>

      Public Overridable Function Scalar_store_values_can_be_accessed_asynchronously_as_a_property_dictionary As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Scalar_store_values_can_be_accessed_asynchronously_as_a_property_dictionary()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Scalar_store_values_can_be_accessed_asynchronously_as_a_property_dictionary()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_current_values_can_be_accessed_as_a_property_dictionary_using_IProperty
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_current_values_can_be_accessed_as_a_property_dictionary_using_IProperty
  id: Scalar_current_values_can_be_accessed_as_a_property_dictionary_using_IProperty
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Scalar_current_values_can_be_accessed_as_a_property_dictionary_using_IProperty()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Scalar_current_values_can_be_accessed_as_a_property_dictionary_using_IProperty()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Scalar_current_values_can_be_accessed_as_a_property_dictionary_using_IProperty()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Scalar_current_values_can_be_accessed_as_a_property_dictionary_using_IProperty
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 63
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task Scalar_current_values_can_be_accessed_as_a_property_dictionary_using_IProperty()
    content.vb: >-
      <Fact>

      Public Overridable Function Scalar_current_values_can_be_accessed_as_a_property_dictionary_using_IProperty As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Scalar_current_values_can_be_accessed_as_a_property_dictionary_using_IProperty()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Scalar_current_values_can_be_accessed_as_a_property_dictionary_using_IProperty()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_original_values_can_be_accessed_as_a_property_dictionary_using_IProperty
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_original_values_can_be_accessed_as_a_property_dictionary_using_IProperty
  id: Scalar_original_values_can_be_accessed_as_a_property_dictionary_using_IProperty
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Scalar_original_values_can_be_accessed_as_a_property_dictionary_using_IProperty()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Scalar_original_values_can_be_accessed_as_a_property_dictionary_using_IProperty()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Scalar_original_values_can_be_accessed_as_a_property_dictionary_using_IProperty()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Scalar_original_values_can_be_accessed_as_a_property_dictionary_using_IProperty
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 69
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task Scalar_original_values_can_be_accessed_as_a_property_dictionary_using_IProperty()
    content.vb: >-
      <Fact>

      Public Overridable Function Scalar_original_values_can_be_accessed_as_a_property_dictionary_using_IProperty As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Scalar_original_values_can_be_accessed_as_a_property_dictionary_using_IProperty()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Scalar_original_values_can_be_accessed_as_a_property_dictionary_using_IProperty()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_store_values_can_be_accessed_as_a_property_dictionary_using_IProperty
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_store_values_can_be_accessed_as_a_property_dictionary_using_IProperty
  id: Scalar_store_values_can_be_accessed_as_a_property_dictionary_using_IProperty
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Scalar_store_values_can_be_accessed_as_a_property_dictionary_using_IProperty()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Scalar_store_values_can_be_accessed_as_a_property_dictionary_using_IProperty()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Scalar_store_values_can_be_accessed_as_a_property_dictionary_using_IProperty()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Scalar_store_values_can_be_accessed_as_a_property_dictionary_using_IProperty
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 75
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task Scalar_store_values_can_be_accessed_as_a_property_dictionary_using_IProperty()
    content.vb: >-
      <Fact>

      Public Overridable Function Scalar_store_values_can_be_accessed_as_a_property_dictionary_using_IProperty As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Scalar_store_values_can_be_accessed_as_a_property_dictionary_using_IProperty()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Scalar_store_values_can_be_accessed_as_a_property_dictionary_using_IProperty()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_store_values_can_be_accessed_asynchronously_as_a_property_dictionary_using_IProperty
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_store_values_can_be_accessed_asynchronously_as_a_property_dictionary_using_IProperty
  id: Scalar_store_values_can_be_accessed_asynchronously_as_a_property_dictionary_using_IProperty
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Scalar_store_values_can_be_accessed_asynchronously_as_a_property_dictionary_using_IProperty()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Scalar_store_values_can_be_accessed_asynchronously_as_a_property_dictionary_using_IProperty()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Scalar_store_values_can_be_accessed_asynchronously_as_a_property_dictionary_using_IProperty()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Scalar_store_values_can_be_accessed_asynchronously_as_a_property_dictionary_using_IProperty
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 81
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task Scalar_store_values_can_be_accessed_asynchronously_as_a_property_dictionary_using_IProperty()
    content.vb: >-
      <Fact>

      Public Overridable Function Scalar_store_values_can_be_accessed_asynchronously_as_a_property_dictionary_using_IProperty As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Scalar_store_values_can_be_accessed_asynchronously_as_a_property_dictionary_using_IProperty()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Scalar_store_values_can_be_accessed_asynchronously_as_a_property_dictionary_using_IProperty()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_current_values_of_a_derived_object_can_be_accessed_as_a_property_dictionary
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_current_values_of_a_derived_object_can_be_accessed_as_a_property_dictionary
  id: Scalar_current_values_of_a_derived_object_can_be_accessed_as_a_property_dictionary
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Scalar_current_values_of_a_derived_object_can_be_accessed_as_a_property_dictionary()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Scalar_current_values_of_a_derived_object_can_be_accessed_as_a_property_dictionary()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Scalar_current_values_of_a_derived_object_can_be_accessed_as_a_property_dictionary()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Scalar_current_values_of_a_derived_object_can_be_accessed_as_a_property_dictionary
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 103
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task Scalar_current_values_of_a_derived_object_can_be_accessed_as_a_property_dictionary()
    content.vb: >-
      <Fact>

      Public Overridable Function Scalar_current_values_of_a_derived_object_can_be_accessed_as_a_property_dictionary As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Scalar_current_values_of_a_derived_object_can_be_accessed_as_a_property_dictionary()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Scalar_current_values_of_a_derived_object_can_be_accessed_as_a_property_dictionary()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_original_values_of_a_derived_object_can_be_accessed_as_a_property_dictionary
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_original_values_of_a_derived_object_can_be_accessed_as_a_property_dictionary
  id: Scalar_original_values_of_a_derived_object_can_be_accessed_as_a_property_dictionary
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Scalar_original_values_of_a_derived_object_can_be_accessed_as_a_property_dictionary()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Scalar_original_values_of_a_derived_object_can_be_accessed_as_a_property_dictionary()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Scalar_original_values_of_a_derived_object_can_be_accessed_as_a_property_dictionary()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Scalar_original_values_of_a_derived_object_can_be_accessed_as_a_property_dictionary
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 109
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task Scalar_original_values_of_a_derived_object_can_be_accessed_as_a_property_dictionary()
    content.vb: >-
      <Fact>

      Public Overridable Function Scalar_original_values_of_a_derived_object_can_be_accessed_as_a_property_dictionary As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Scalar_original_values_of_a_derived_object_can_be_accessed_as_a_property_dictionary()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Scalar_original_values_of_a_derived_object_can_be_accessed_as_a_property_dictionary()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_store_values_of_a_derived_object_can_be_accessed_as_a_property_dictionary
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_store_values_of_a_derived_object_can_be_accessed_as_a_property_dictionary
  id: Scalar_store_values_of_a_derived_object_can_be_accessed_as_a_property_dictionary
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Scalar_store_values_of_a_derived_object_can_be_accessed_as_a_property_dictionary()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Scalar_store_values_of_a_derived_object_can_be_accessed_as_a_property_dictionary()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Scalar_store_values_of_a_derived_object_can_be_accessed_as_a_property_dictionary()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Scalar_store_values_of_a_derived_object_can_be_accessed_as_a_property_dictionary
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 115
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task Scalar_store_values_of_a_derived_object_can_be_accessed_as_a_property_dictionary()
    content.vb: >-
      <Fact>

      Public Overridable Function Scalar_store_values_of_a_derived_object_can_be_accessed_as_a_property_dictionary As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Scalar_store_values_of_a_derived_object_can_be_accessed_as_a_property_dictionary()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Scalar_store_values_of_a_derived_object_can_be_accessed_as_a_property_dictionary()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_store_values_of_a_derived_object_can_be_accessed_asynchronously_as_a_property_dictionary
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_store_values_of_a_derived_object_can_be_accessed_asynchronously_as_a_property_dictionary
  id: Scalar_store_values_of_a_derived_object_can_be_accessed_asynchronously_as_a_property_dictionary
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Scalar_store_values_of_a_derived_object_can_be_accessed_asynchronously_as_a_property_dictionary()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Scalar_store_values_of_a_derived_object_can_be_accessed_asynchronously_as_a_property_dictionary()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Scalar_store_values_of_a_derived_object_can_be_accessed_asynchronously_as_a_property_dictionary()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Scalar_store_values_of_a_derived_object_can_be_accessed_asynchronously_as_a_property_dictionary
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 121
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task Scalar_store_values_of_a_derived_object_can_be_accessed_asynchronously_as_a_property_dictionary()
    content.vb: >-
      <Fact>

      Public Overridable Function Scalar_store_values_of_a_derived_object_can_be_accessed_asynchronously_as_a_property_dictionary As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Scalar_store_values_of_a_derived_object_can_be_accessed_asynchronously_as_a_property_dictionary()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Scalar_store_values_of_a_derived_object_can_be_accessed_asynchronously_as_a_property_dictionary()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_current_values_can_be_accessed_as_a_non_generic_property_dictionary
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_current_values_can_be_accessed_as_a_non_generic_property_dictionary
  id: Scalar_current_values_can_be_accessed_as_a_non_generic_property_dictionary
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Scalar_current_values_can_be_accessed_as_a_non_generic_property_dictionary()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Scalar_current_values_can_be_accessed_as_a_non_generic_property_dictionary()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Scalar_current_values_can_be_accessed_as_a_non_generic_property_dictionary()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Scalar_current_values_can_be_accessed_as_a_non_generic_property_dictionary
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 144
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task Scalar_current_values_can_be_accessed_as_a_non_generic_property_dictionary()
    content.vb: >-
      <Fact>

      Public Overridable Function Scalar_current_values_can_be_accessed_as_a_non_generic_property_dictionary As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Scalar_current_values_can_be_accessed_as_a_non_generic_property_dictionary()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Scalar_current_values_can_be_accessed_as_a_non_generic_property_dictionary()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_original_values_can_be_accessed_as_a_non_generic_property_dictionary
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_original_values_can_be_accessed_as_a_non_generic_property_dictionary
  id: Scalar_original_values_can_be_accessed_as_a_non_generic_property_dictionary
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Scalar_original_values_can_be_accessed_as_a_non_generic_property_dictionary()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Scalar_original_values_can_be_accessed_as_a_non_generic_property_dictionary()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Scalar_original_values_can_be_accessed_as_a_non_generic_property_dictionary()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Scalar_original_values_can_be_accessed_as_a_non_generic_property_dictionary
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 150
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task Scalar_original_values_can_be_accessed_as_a_non_generic_property_dictionary()
    content.vb: >-
      <Fact>

      Public Overridable Function Scalar_original_values_can_be_accessed_as_a_non_generic_property_dictionary As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Scalar_original_values_can_be_accessed_as_a_non_generic_property_dictionary()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Scalar_original_values_can_be_accessed_as_a_non_generic_property_dictionary()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_store_values_can_be_accessed_as_a_non_generic_property_dictionary
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_store_values_can_be_accessed_as_a_non_generic_property_dictionary
  id: Scalar_store_values_can_be_accessed_as_a_non_generic_property_dictionary
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Scalar_store_values_can_be_accessed_as_a_non_generic_property_dictionary()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Scalar_store_values_can_be_accessed_as_a_non_generic_property_dictionary()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Scalar_store_values_can_be_accessed_as_a_non_generic_property_dictionary()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Scalar_store_values_can_be_accessed_as_a_non_generic_property_dictionary
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 156
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task Scalar_store_values_can_be_accessed_as_a_non_generic_property_dictionary()
    content.vb: >-
      <Fact>

      Public Overridable Function Scalar_store_values_can_be_accessed_as_a_non_generic_property_dictionary As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Scalar_store_values_can_be_accessed_as_a_non_generic_property_dictionary()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Scalar_store_values_can_be_accessed_as_a_non_generic_property_dictionary()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_store_values_can_be_accessed_asynchronously_as_a_non_generic_property_dictionary
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_store_values_can_be_accessed_asynchronously_as_a_non_generic_property_dictionary
  id: Scalar_store_values_can_be_accessed_asynchronously_as_a_non_generic_property_dictionary
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Scalar_store_values_can_be_accessed_asynchronously_as_a_non_generic_property_dictionary()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Scalar_store_values_can_be_accessed_asynchronously_as_a_non_generic_property_dictionary()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Scalar_store_values_can_be_accessed_asynchronously_as_a_non_generic_property_dictionary()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Scalar_store_values_can_be_accessed_asynchronously_as_a_non_generic_property_dictionary
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 162
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task Scalar_store_values_can_be_accessed_asynchronously_as_a_non_generic_property_dictionary()
    content.vb: >-
      <Fact>

      Public Overridable Function Scalar_store_values_can_be_accessed_asynchronously_as_a_non_generic_property_dictionary As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Scalar_store_values_can_be_accessed_asynchronously_as_a_non_generic_property_dictionary()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Scalar_store_values_can_be_accessed_asynchronously_as_a_non_generic_property_dictionary()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_current_values_can_be_accessed_as_a_non_generic_property_dictionary_using_IProperty
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_current_values_can_be_accessed_as_a_non_generic_property_dictionary_using_IProperty
  id: Scalar_current_values_can_be_accessed_as_a_non_generic_property_dictionary_using_IProperty
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Scalar_current_values_can_be_accessed_as_a_non_generic_property_dictionary_using_IProperty()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Scalar_current_values_can_be_accessed_as_a_non_generic_property_dictionary_using_IProperty()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Scalar_current_values_can_be_accessed_as_a_non_generic_property_dictionary_using_IProperty()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Scalar_current_values_can_be_accessed_as_a_non_generic_property_dictionary_using_IProperty
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 188
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task Scalar_current_values_can_be_accessed_as_a_non_generic_property_dictionary_using_IProperty()
    content.vb: >-
      <Fact>

      Public Overridable Function Scalar_current_values_can_be_accessed_as_a_non_generic_property_dictionary_using_IProperty As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Scalar_current_values_can_be_accessed_as_a_non_generic_property_dictionary_using_IProperty()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Scalar_current_values_can_be_accessed_as_a_non_generic_property_dictionary_using_IProperty()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_original_values_can_be_accessed_as_a_non_generic_property_dictionary_using_IProperty
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_original_values_can_be_accessed_as_a_non_generic_property_dictionary_using_IProperty
  id: Scalar_original_values_can_be_accessed_as_a_non_generic_property_dictionary_using_IProperty
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Scalar_original_values_can_be_accessed_as_a_non_generic_property_dictionary_using_IProperty()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Scalar_original_values_can_be_accessed_as_a_non_generic_property_dictionary_using_IProperty()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Scalar_original_values_can_be_accessed_as_a_non_generic_property_dictionary_using_IProperty()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Scalar_original_values_can_be_accessed_as_a_non_generic_property_dictionary_using_IProperty
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 194
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task Scalar_original_values_can_be_accessed_as_a_non_generic_property_dictionary_using_IProperty()
    content.vb: >-
      <Fact>

      Public Overridable Function Scalar_original_values_can_be_accessed_as_a_non_generic_property_dictionary_using_IProperty As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Scalar_original_values_can_be_accessed_as_a_non_generic_property_dictionary_using_IProperty()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Scalar_original_values_can_be_accessed_as_a_non_generic_property_dictionary_using_IProperty()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_store_values_can_be_accessed_as_a_non_generic_property_dictionary_using_IProperty
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_store_values_can_be_accessed_as_a_non_generic_property_dictionary_using_IProperty
  id: Scalar_store_values_can_be_accessed_as_a_non_generic_property_dictionary_using_IProperty
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Scalar_store_values_can_be_accessed_as_a_non_generic_property_dictionary_using_IProperty()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Scalar_store_values_can_be_accessed_as_a_non_generic_property_dictionary_using_IProperty()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Scalar_store_values_can_be_accessed_as_a_non_generic_property_dictionary_using_IProperty()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Scalar_store_values_can_be_accessed_as_a_non_generic_property_dictionary_using_IProperty
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 200
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task Scalar_store_values_can_be_accessed_as_a_non_generic_property_dictionary_using_IProperty()
    content.vb: >-
      <Fact>

      Public Overridable Function Scalar_store_values_can_be_accessed_as_a_non_generic_property_dictionary_using_IProperty As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Scalar_store_values_can_be_accessed_as_a_non_generic_property_dictionary_using_IProperty()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Scalar_store_values_can_be_accessed_as_a_non_generic_property_dictionary_using_IProperty()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_store_values_can_be_accessed_asynchronously_as_a_non_generic_property_dictionary_using_IProperty
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_store_values_can_be_accessed_asynchronously_as_a_non_generic_property_dictionary_using_IProperty
  id: Scalar_store_values_can_be_accessed_asynchronously_as_a_non_generic_property_dictionary_using_IProperty
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Scalar_store_values_can_be_accessed_asynchronously_as_a_non_generic_property_dictionary_using_IProperty()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Scalar_store_values_can_be_accessed_asynchronously_as_a_non_generic_property_dictionary_using_IProperty()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Scalar_store_values_can_be_accessed_asynchronously_as_a_non_generic_property_dictionary_using_IProperty()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Scalar_store_values_can_be_accessed_asynchronously_as_a_non_generic_property_dictionary_using_IProperty
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 206
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task Scalar_store_values_can_be_accessed_asynchronously_as_a_non_generic_property_dictionary_using_IProperty()
    content.vb: >-
      <Fact>

      Public Overridable Function Scalar_store_values_can_be_accessed_asynchronously_as_a_non_generic_property_dictionary_using_IProperty As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Scalar_store_values_can_be_accessed_asynchronously_as_a_non_generic_property_dictionary_using_IProperty()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Scalar_store_values_can_be_accessed_asynchronously_as_a_non_generic_property_dictionary_using_IProperty()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_current_values_of_a_derived_object_can_be_accessed_as_a_non_generic_property_dictionary
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_current_values_of_a_derived_object_can_be_accessed_as_a_non_generic_property_dictionary
  id: Scalar_current_values_of_a_derived_object_can_be_accessed_as_a_non_generic_property_dictionary
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Scalar_current_values_of_a_derived_object_can_be_accessed_as_a_non_generic_property_dictionary()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Scalar_current_values_of_a_derived_object_can_be_accessed_as_a_non_generic_property_dictionary()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Scalar_current_values_of_a_derived_object_can_be_accessed_as_a_non_generic_property_dictionary()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Scalar_current_values_of_a_derived_object_can_be_accessed_as_a_non_generic_property_dictionary
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 231
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task Scalar_current_values_of_a_derived_object_can_be_accessed_as_a_non_generic_property_dictionary()
    content.vb: >-
      <Fact>

      Public Overridable Function Scalar_current_values_of_a_derived_object_can_be_accessed_as_a_non_generic_property_dictionary As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Scalar_current_values_of_a_derived_object_can_be_accessed_as_a_non_generic_property_dictionary()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Scalar_current_values_of_a_derived_object_can_be_accessed_as_a_non_generic_property_dictionary()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_original_values_of_a_derived_object_can_be_accessed_as_a_non_generic_property_dictionary
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_original_values_of_a_derived_object_can_be_accessed_as_a_non_generic_property_dictionary
  id: Scalar_original_values_of_a_derived_object_can_be_accessed_as_a_non_generic_property_dictionary
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Scalar_original_values_of_a_derived_object_can_be_accessed_as_a_non_generic_property_dictionary()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Scalar_original_values_of_a_derived_object_can_be_accessed_as_a_non_generic_property_dictionary()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Scalar_original_values_of_a_derived_object_can_be_accessed_as_a_non_generic_property_dictionary()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Scalar_original_values_of_a_derived_object_can_be_accessed_as_a_non_generic_property_dictionary
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 237
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task Scalar_original_values_of_a_derived_object_can_be_accessed_as_a_non_generic_property_dictionary()
    content.vb: >-
      <Fact>

      Public Overridable Function Scalar_original_values_of_a_derived_object_can_be_accessed_as_a_non_generic_property_dictionary As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Scalar_original_values_of_a_derived_object_can_be_accessed_as_a_non_generic_property_dictionary()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Scalar_original_values_of_a_derived_object_can_be_accessed_as_a_non_generic_property_dictionary()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_store_values_of_a_derived_object_can_be_accessed_as_a_non_generic_property_dictionary
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_store_values_of_a_derived_object_can_be_accessed_as_a_non_generic_property_dictionary
  id: Scalar_store_values_of_a_derived_object_can_be_accessed_as_a_non_generic_property_dictionary
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Scalar_store_values_of_a_derived_object_can_be_accessed_as_a_non_generic_property_dictionary()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Scalar_store_values_of_a_derived_object_can_be_accessed_as_a_non_generic_property_dictionary()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Scalar_store_values_of_a_derived_object_can_be_accessed_as_a_non_generic_property_dictionary()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Scalar_store_values_of_a_derived_object_can_be_accessed_as_a_non_generic_property_dictionary
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 243
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task Scalar_store_values_of_a_derived_object_can_be_accessed_as_a_non_generic_property_dictionary()
    content.vb: >-
      <Fact>

      Public Overridable Function Scalar_store_values_of_a_derived_object_can_be_accessed_as_a_non_generic_property_dictionary As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Scalar_store_values_of_a_derived_object_can_be_accessed_as_a_non_generic_property_dictionary()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Scalar_store_values_of_a_derived_object_can_be_accessed_as_a_non_generic_property_dictionary()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_store_values_of_a_derived_object_can_be_accessed_asynchronously_as_a_non_generic_property_dictionary
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_store_values_of_a_derived_object_can_be_accessed_asynchronously_as_a_non_generic_property_dictionary
  id: Scalar_store_values_of_a_derived_object_can_be_accessed_asynchronously_as_a_non_generic_property_dictionary
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Scalar_store_values_of_a_derived_object_can_be_accessed_asynchronously_as_a_non_generic_property_dictionary()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Scalar_store_values_of_a_derived_object_can_be_accessed_asynchronously_as_a_non_generic_property_dictionary()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Scalar_store_values_of_a_derived_object_can_be_accessed_asynchronously_as_a_non_generic_property_dictionary()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Scalar_store_values_of_a_derived_object_can_be_accessed_asynchronously_as_a_non_generic_property_dictionary
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 249
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task Scalar_store_values_of_a_derived_object_can_be_accessed_asynchronously_as_a_non_generic_property_dictionary()
    content.vb: >-
      <Fact>

      Public Overridable Function Scalar_store_values_of_a_derived_object_can_be_accessed_asynchronously_as_a_non_generic_property_dictionary As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Scalar_store_values_of_a_derived_object_can_be_accessed_asynchronously_as_a_non_generic_property_dictionary()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Scalar_store_values_of_a_derived_object_can_be_accessed_asynchronously_as_a_non_generic_property_dictionary()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_current_values_can_be_set_using_a_property_dictionary
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_current_values_can_be_set_using_a_property_dictionary
  id: Scalar_current_values_can_be_set_using_a_property_dictionary
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Scalar_current_values_can_be_set_using_a_property_dictionary()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Scalar_current_values_can_be_set_using_a_property_dictionary()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Scalar_current_values_can_be_set_using_a_property_dictionary()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Scalar_current_values_can_be_set_using_a_property_dictionary
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 271
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Scalar_current_values_can_be_set_using_a_property_dictionary()
    content.vb: >-
      <Fact>

      Public Overridable Sub Scalar_current_values_can_be_set_using_a_property_dictionary
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Scalar_current_values_can_be_set_using_a_property_dictionary()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Scalar_current_values_can_be_set_using_a_property_dictionary()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_original_values_can_be_set_using_a_property_dictionary
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_original_values_can_be_set_using_a_property_dictionary
  id: Scalar_original_values_can_be_set_using_a_property_dictionary
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Scalar_original_values_can_be_set_using_a_property_dictionary()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Scalar_original_values_can_be_set_using_a_property_dictionary()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Scalar_original_values_can_be_set_using_a_property_dictionary()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Scalar_original_values_can_be_set_using_a_property_dictionary
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 277
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Scalar_original_values_can_be_set_using_a_property_dictionary()
    content.vb: >-
      <Fact>

      Public Overridable Sub Scalar_original_values_can_be_set_using_a_property_dictionary
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Scalar_original_values_can_be_set_using_a_property_dictionary()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Scalar_original_values_can_be_set_using_a_property_dictionary()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_current_values_can_be_set_using_a_property_dictionary_with_IProperty
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_current_values_can_be_set_using_a_property_dictionary_with_IProperty
  id: Scalar_current_values_can_be_set_using_a_property_dictionary_with_IProperty
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Scalar_current_values_can_be_set_using_a_property_dictionary_with_IProperty()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Scalar_current_values_can_be_set_using_a_property_dictionary_with_IProperty()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Scalar_current_values_can_be_set_using_a_property_dictionary_with_IProperty()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Scalar_current_values_can_be_set_using_a_property_dictionary_with_IProperty
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 310
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Scalar_current_values_can_be_set_using_a_property_dictionary_with_IProperty()
    content.vb: >-
      <Fact>

      Public Overridable Sub Scalar_current_values_can_be_set_using_a_property_dictionary_with_IProperty
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Scalar_current_values_can_be_set_using_a_property_dictionary_with_IProperty()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Scalar_current_values_can_be_set_using_a_property_dictionary_with_IProperty()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_original_values_can_be_set_using_a_property_dictionary_with_IProperty
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_original_values_can_be_set_using_a_property_dictionary_with_IProperty
  id: Scalar_original_values_can_be_set_using_a_property_dictionary_with_IProperty
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Scalar_original_values_can_be_set_using_a_property_dictionary_with_IProperty()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Scalar_original_values_can_be_set_using_a_property_dictionary_with_IProperty()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Scalar_original_values_can_be_set_using_a_property_dictionary_with_IProperty()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Scalar_original_values_can_be_set_using_a_property_dictionary_with_IProperty
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 316
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Scalar_original_values_can_be_set_using_a_property_dictionary_with_IProperty()
    content.vb: >-
      <Fact>

      Public Overridable Sub Scalar_original_values_can_be_set_using_a_property_dictionary_with_IProperty
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Scalar_original_values_can_be_set_using_a_property_dictionary_with_IProperty()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Scalar_original_values_can_be_set_using_a_property_dictionary_with_IProperty()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_current_values_can_be_set_using_a_non_generic_property_dictionary
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_current_values_can_be_set_using_a_non_generic_property_dictionary
  id: Scalar_current_values_can_be_set_using_a_non_generic_property_dictionary
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Scalar_current_values_can_be_set_using_a_non_generic_property_dictionary()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Scalar_current_values_can_be_set_using_a_non_generic_property_dictionary()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Scalar_current_values_can_be_set_using_a_non_generic_property_dictionary()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Scalar_current_values_can_be_set_using_a_non_generic_property_dictionary
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 349
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Scalar_current_values_can_be_set_using_a_non_generic_property_dictionary()
    content.vb: >-
      <Fact>

      Public Overridable Sub Scalar_current_values_can_be_set_using_a_non_generic_property_dictionary
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Scalar_current_values_can_be_set_using_a_non_generic_property_dictionary()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Scalar_current_values_can_be_set_using_a_non_generic_property_dictionary()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_original_values_can_be_set_using_a_non_generic_property_dictionary
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Scalar_original_values_can_be_set_using_a_non_generic_property_dictionary
  id: Scalar_original_values_can_be_set_using_a_non_generic_property_dictionary
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Scalar_original_values_can_be_set_using_a_non_generic_property_dictionary()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Scalar_original_values_can_be_set_using_a_non_generic_property_dictionary()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Scalar_original_values_can_be_set_using_a_non_generic_property_dictionary()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Scalar_original_values_can_be_set_using_a_non_generic_property_dictionary
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 355
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Scalar_original_values_can_be_set_using_a_non_generic_property_dictionary()
    content.vb: >-
      <Fact>

      Public Overridable Sub Scalar_original_values_can_be_set_using_a_non_generic_property_dictionary
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Scalar_original_values_can_be_set_using_a_non_generic_property_dictionary()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Scalar_original_values_can_be_set_using_a_non_generic_property_dictionary()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Current_values_can_be_copied_into_an_object
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Current_values_can_be_copied_into_an_object
  id: Current_values_can_be_copied_into_an_object
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Current_values_can_be_copied_into_an_object()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Current_values_can_be_copied_into_an_object()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Current_values_can_be_copied_into_an_object()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Current_values_can_be_copied_into_an_object
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 388
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task Current_values_can_be_copied_into_an_object()
    content.vb: >-
      <Fact>

      Public Overridable Function Current_values_can_be_copied_into_an_object As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Current_values_can_be_copied_into_an_object()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Current_values_can_be_copied_into_an_object()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Original_values_can_be_copied_into_an_object
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Original_values_can_be_copied_into_an_object
  id: Original_values_can_be_copied_into_an_object
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Original_values_can_be_copied_into_an_object()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Original_values_can_be_copied_into_an_object()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Original_values_can_be_copied_into_an_object()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Original_values_can_be_copied_into_an_object
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 394
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task Original_values_can_be_copied_into_an_object()
    content.vb: >-
      <Fact>

      Public Overridable Function Original_values_can_be_copied_into_an_object As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Original_values_can_be_copied_into_an_object()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Original_values_can_be_copied_into_an_object()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Store_values_can_be_copied_into_an_object
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Store_values_can_be_copied_into_an_object
  id: Store_values_can_be_copied_into_an_object
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Store_values_can_be_copied_into_an_object()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Store_values_can_be_copied_into_an_object()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Store_values_can_be_copied_into_an_object()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Store_values_can_be_copied_into_an_object
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 400
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task Store_values_can_be_copied_into_an_object()
    content.vb: >-
      <Fact>

      Public Overridable Function Store_values_can_be_copied_into_an_object As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Store_values_can_be_copied_into_an_object()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Store_values_can_be_copied_into_an_object()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Store_values_can_be_copied_into_an_object_asynchronously
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Store_values_can_be_copied_into_an_object_asynchronously
  id: Store_values_can_be_copied_into_an_object_asynchronously
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Store_values_can_be_copied_into_an_object_asynchronously()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Store_values_can_be_copied_into_an_object_asynchronously()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Store_values_can_be_copied_into_an_object_asynchronously()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Store_values_can_be_copied_into_an_object_asynchronously
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 406
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task Store_values_can_be_copied_into_an_object_asynchronously()
    content.vb: >-
      <Fact>

      Public Overridable Function Store_values_can_be_copied_into_an_object_asynchronously As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Store_values_can_be_copied_into_an_object_asynchronously()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Store_values_can_be_copied_into_an_object_asynchronously()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Current_values_for_derived_object_can_be_copied_into_an_object
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Current_values_for_derived_object_can_be_copied_into_an_object
  id: Current_values_for_derived_object_can_be_copied_into_an_object
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Current_values_for_derived_object_can_be_copied_into_an_object()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Current_values_for_derived_object_can_be_copied_into_an_object()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Current_values_for_derived_object_can_be_copied_into_an_object()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Current_values_for_derived_object_can_be_copied_into_an_object
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 425
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task Current_values_for_derived_object_can_be_copied_into_an_object()
    content.vb: >-
      <Fact>

      Public Overridable Function Current_values_for_derived_object_can_be_copied_into_an_object As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Current_values_for_derived_object_can_be_copied_into_an_object()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Current_values_for_derived_object_can_be_copied_into_an_object()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Original_values_for_derived_object_can_be_copied_into_an_object
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Original_values_for_derived_object_can_be_copied_into_an_object
  id: Original_values_for_derived_object_can_be_copied_into_an_object
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Original_values_for_derived_object_can_be_copied_into_an_object()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Original_values_for_derived_object_can_be_copied_into_an_object()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Original_values_for_derived_object_can_be_copied_into_an_object()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Original_values_for_derived_object_can_be_copied_into_an_object
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 431
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task Original_values_for_derived_object_can_be_copied_into_an_object()
    content.vb: >-
      <Fact>

      Public Overridable Function Original_values_for_derived_object_can_be_copied_into_an_object As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Original_values_for_derived_object_can_be_copied_into_an_object()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Original_values_for_derived_object_can_be_copied_into_an_object()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Store_values_for_derived_object_can_be_copied_into_an_object
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Store_values_for_derived_object_can_be_copied_into_an_object
  id: Store_values_for_derived_object_can_be_copied_into_an_object
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Store_values_for_derived_object_can_be_copied_into_an_object()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Store_values_for_derived_object_can_be_copied_into_an_object()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Store_values_for_derived_object_can_be_copied_into_an_object()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Store_values_for_derived_object_can_be_copied_into_an_object
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 437
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task Store_values_for_derived_object_can_be_copied_into_an_object()
    content.vb: >-
      <Fact>

      Public Overridable Function Store_values_for_derived_object_can_be_copied_into_an_object As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Store_values_for_derived_object_can_be_copied_into_an_object()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Store_values_for_derived_object_can_be_copied_into_an_object()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Store_values_for_derived_object_can_be_copied_into_an_object_asynchronously
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Store_values_for_derived_object_can_be_copied_into_an_object_asynchronously
  id: Store_values_for_derived_object_can_be_copied_into_an_object_asynchronously
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Store_values_for_derived_object_can_be_copied_into_an_object_asynchronously()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Store_values_for_derived_object_can_be_copied_into_an_object_asynchronously()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Store_values_for_derived_object_can_be_copied_into_an_object_asynchronously()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Store_values_for_derived_object_can_be_copied_into_an_object_asynchronously
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 443
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task Store_values_for_derived_object_can_be_copied_into_an_object_asynchronously()
    content.vb: >-
      <Fact>

      Public Overridable Function Store_values_for_derived_object_can_be_copied_into_an_object_asynchronously As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Store_values_for_derived_object_can_be_copied_into_an_object_asynchronously()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Store_values_for_derived_object_can_be_copied_into_an_object_asynchronously()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Current_values_can_be_copied_from_a_non_generic_property_dictionary_into_an_object
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Current_values_can_be_copied_from_a_non_generic_property_dictionary_into_an_object
  id: Current_values_can_be_copied_from_a_non_generic_property_dictionary_into_an_object
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Current_values_can_be_copied_from_a_non_generic_property_dictionary_into_an_object()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Current_values_can_be_copied_from_a_non_generic_property_dictionary_into_an_object()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Current_values_can_be_copied_from_a_non_generic_property_dictionary_into_an_object()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Current_values_can_be_copied_from_a_non_generic_property_dictionary_into_an_object
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 464
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task Current_values_can_be_copied_from_a_non_generic_property_dictionary_into_an_object()
    content.vb: >-
      <Fact>

      Public Overridable Function Current_values_can_be_copied_from_a_non_generic_property_dictionary_into_an_object As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Current_values_can_be_copied_from_a_non_generic_property_dictionary_into_an_object()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Current_values_can_be_copied_from_a_non_generic_property_dictionary_into_an_object()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Original_values_can_be_copied_non_generic_property_dictionary_into_an_object
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Original_values_can_be_copied_non_generic_property_dictionary_into_an_object
  id: Original_values_can_be_copied_non_generic_property_dictionary_into_an_object
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Original_values_can_be_copied_non_generic_property_dictionary_into_an_object()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Original_values_can_be_copied_non_generic_property_dictionary_into_an_object()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Original_values_can_be_copied_non_generic_property_dictionary_into_an_object()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Original_values_can_be_copied_non_generic_property_dictionary_into_an_object
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 470
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task Original_values_can_be_copied_non_generic_property_dictionary_into_an_object()
    content.vb: >-
      <Fact>

      Public Overridable Function Original_values_can_be_copied_non_generic_property_dictionary_into_an_object As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Original_values_can_be_copied_non_generic_property_dictionary_into_an_object()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Original_values_can_be_copied_non_generic_property_dictionary_into_an_object()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Store_values_can_be_copied_non_generic_property_dictionary_into_an_object
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Store_values_can_be_copied_non_generic_property_dictionary_into_an_object
  id: Store_values_can_be_copied_non_generic_property_dictionary_into_an_object
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Store_values_can_be_copied_non_generic_property_dictionary_into_an_object()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Store_values_can_be_copied_non_generic_property_dictionary_into_an_object()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Store_values_can_be_copied_non_generic_property_dictionary_into_an_object()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Store_values_can_be_copied_non_generic_property_dictionary_into_an_object
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 476
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task Store_values_can_be_copied_non_generic_property_dictionary_into_an_object()
    content.vb: >-
      <Fact>

      Public Overridable Function Store_values_can_be_copied_non_generic_property_dictionary_into_an_object As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Store_values_can_be_copied_non_generic_property_dictionary_into_an_object()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Store_values_can_be_copied_non_generic_property_dictionary_into_an_object()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Store_values_can_be_copied_asynchronously_non_generic_property_dictionary_into_an_object
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Store_values_can_be_copied_asynchronously_non_generic_property_dictionary_into_an_object
  id: Store_values_can_be_copied_asynchronously_non_generic_property_dictionary_into_an_object
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Store_values_can_be_copied_asynchronously_non_generic_property_dictionary_into_an_object()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Store_values_can_be_copied_asynchronously_non_generic_property_dictionary_into_an_object()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Store_values_can_be_copied_asynchronously_non_generic_property_dictionary_into_an_object()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Store_values_can_be_copied_asynchronously_non_generic_property_dictionary_into_an_object
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 482
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task Store_values_can_be_copied_asynchronously_non_generic_property_dictionary_into_an_object()
    content.vb: >-
      <Fact>

      Public Overridable Function Store_values_can_be_copied_asynchronously_non_generic_property_dictionary_into_an_object As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Store_values_can_be_copied_asynchronously_non_generic_property_dictionary_into_an_object()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Store_values_can_be_copied_asynchronously_non_generic_property_dictionary_into_an_object()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Current_values_can_be_copied_into_a_cloned_dictionary
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Current_values_can_be_copied_into_a_cloned_dictionary
  id: Current_values_can_be_copied_into_a_cloned_dictionary
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Current_values_can_be_copied_into_a_cloned_dictionary()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Current_values_can_be_copied_into_a_cloned_dictionary()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Current_values_can_be_copied_into_a_cloned_dictionary()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Current_values_can_be_copied_into_a_cloned_dictionary
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 501
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task Current_values_can_be_copied_into_a_cloned_dictionary()
    content.vb: >-
      <Fact>

      Public Overridable Function Current_values_can_be_copied_into_a_cloned_dictionary As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Current_values_can_be_copied_into_a_cloned_dictionary()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Current_values_can_be_copied_into_a_cloned_dictionary()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Original_values_can_be_copied_into_a_cloned_dictionary
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Original_values_can_be_copied_into_a_cloned_dictionary
  id: Original_values_can_be_copied_into_a_cloned_dictionary
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Original_values_can_be_copied_into_a_cloned_dictionary()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Original_values_can_be_copied_into_a_cloned_dictionary()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Original_values_can_be_copied_into_a_cloned_dictionary()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Original_values_can_be_copied_into_a_cloned_dictionary
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 507
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task Original_values_can_be_copied_into_a_cloned_dictionary()
    content.vb: >-
      <Fact>

      Public Overridable Function Original_values_can_be_copied_into_a_cloned_dictionary As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Original_values_can_be_copied_into_a_cloned_dictionary()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Original_values_can_be_copied_into_a_cloned_dictionary()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Store_values_can_be_copied_into_a_cloned_dictionary
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Store_values_can_be_copied_into_a_cloned_dictionary
  id: Store_values_can_be_copied_into_a_cloned_dictionary
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Store_values_can_be_copied_into_a_cloned_dictionary()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Store_values_can_be_copied_into_a_cloned_dictionary()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Store_values_can_be_copied_into_a_cloned_dictionary()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Store_values_can_be_copied_into_a_cloned_dictionary
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 513
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task Store_values_can_be_copied_into_a_cloned_dictionary()
    content.vb: >-
      <Fact>

      Public Overridable Function Store_values_can_be_copied_into_a_cloned_dictionary As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Store_values_can_be_copied_into_a_cloned_dictionary()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Store_values_can_be_copied_into_a_cloned_dictionary()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Store_values_can_be_copied_into_a_cloned_dictionary_asynchronously
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Store_values_can_be_copied_into_a_cloned_dictionary_asynchronously
  id: Store_values_can_be_copied_into_a_cloned_dictionary_asynchronously
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Store_values_can_be_copied_into_a_cloned_dictionary_asynchronously()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Store_values_can_be_copied_into_a_cloned_dictionary_asynchronously()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Store_values_can_be_copied_into_a_cloned_dictionary_asynchronously()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Store_values_can_be_copied_into_a_cloned_dictionary_asynchronously
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 519
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task Store_values_can_be_copied_into_a_cloned_dictionary_asynchronously()
    content.vb: >-
      <Fact>

      Public Overridable Function Store_values_can_be_copied_into_a_cloned_dictionary_asynchronously As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Store_values_can_be_copied_into_a_cloned_dictionary_asynchronously()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Store_values_can_be_copied_into_a_cloned_dictionary_asynchronously()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Values_in_cloned_dictionary_can_be_set_with_IProperty
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Values_in_cloned_dictionary_can_be_set_with_IProperty
  id: Values_in_cloned_dictionary_can_be_set_with_IProperty
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Values_in_cloned_dictionary_can_be_set_with_IProperty()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Values_in_cloned_dictionary_can_be_set_with_IProperty()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Values_in_cloned_dictionary_can_be_set_with_IProperty()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Values_in_cloned_dictionary_can_be_set_with_IProperty
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 558
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Values_in_cloned_dictionary_can_be_set_with_IProperty()
    content.vb: >-
      <Fact>

      Public Overridable Sub Values_in_cloned_dictionary_can_be_set_with_IProperty
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Values_in_cloned_dictionary_can_be_set_with_IProperty()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Values_in_cloned_dictionary_can_be_set_with_IProperty()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Using_bad_property_names_throws
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Using_bad_property_names_throws
  id: Using_bad_property_names_throws
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Using_bad_property_names_throws()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Using_bad_property_names_throws()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Using_bad_property_names_throws()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Using_bad_property_names_throws
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 593
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Using_bad_property_names_throws()
    content.vb: >-
      <Fact>

      Public Overridable Sub Using_bad_property_names_throws
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Using_bad_property_names_throws()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Using_bad_property_names_throws()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Using_bad_IProperty_instances_throws
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Using_bad_IProperty_instances_throws
  id: Using_bad_IProperty_instances_throws
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Using_bad_IProperty_instances_throws()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Using_bad_IProperty_instances_throws()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Using_bad_IProperty_instances_throws()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Using_bad_IProperty_instances_throws
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 626
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Using_bad_IProperty_instances_throws()
    content.vb: >-
      <Fact>

      Public Overridable Sub Using_bad_IProperty_instances_throws
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Using_bad_IProperty_instances_throws()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Using_bad_IProperty_instances_throws()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Using_bad_property_names_throws_derived
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Using_bad_property_names_throws_derived
  id: Using_bad_property_names_throws_derived
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Using_bad_property_names_throws_derived()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Using_bad_property_names_throws_derived()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Using_bad_property_names_throws_derived()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Using_bad_property_names_throws_derived
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 661
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Using_bad_property_names_throws_derived()
    content.vb: >-
      <Fact>

      Public Overridable Sub Using_bad_property_names_throws_derived
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Using_bad_property_names_throws_derived()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Using_bad_property_names_throws_derived()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Using_bad_IProperty_instances_throws_derived
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Using_bad_IProperty_instances_throws_derived
  id: Using_bad_IProperty_instances_throws_derived
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Using_bad_IProperty_instances_throws_derived()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Using_bad_IProperty_instances_throws_derived()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Using_bad_IProperty_instances_throws_derived()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Using_bad_IProperty_instances_throws_derived
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 714
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Using_bad_IProperty_instances_throws_derived()
    content.vb: >-
      <Fact>

      Public Overridable Sub Using_bad_IProperty_instances_throws_derived
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Using_bad_IProperty_instances_throws_derived()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Using_bad_IProperty_instances_throws_derived()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Current_values_can_be_copied_into_a_non_generic_cloned_dictionary
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Current_values_can_be_copied_into_a_non_generic_cloned_dictionary
  id: Current_values_can_be_copied_into_a_non_generic_cloned_dictionary
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Current_values_can_be_copied_into_a_non_generic_cloned_dictionary()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Current_values_can_be_copied_into_a_non_generic_cloned_dictionary()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Current_values_can_be_copied_into_a_non_generic_cloned_dictionary()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Current_values_can_be_copied_into_a_non_generic_cloned_dictionary
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 770
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task Current_values_can_be_copied_into_a_non_generic_cloned_dictionary()
    content.vb: >-
      <Fact>

      Public Overridable Function Current_values_can_be_copied_into_a_non_generic_cloned_dictionary As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Current_values_can_be_copied_into_a_non_generic_cloned_dictionary()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Current_values_can_be_copied_into_a_non_generic_cloned_dictionary()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Original_values_can_be_copied_into_a_non_generic_cloned_dictionary
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Original_values_can_be_copied_into_a_non_generic_cloned_dictionary
  id: Original_values_can_be_copied_into_a_non_generic_cloned_dictionary
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Original_values_can_be_copied_into_a_non_generic_cloned_dictionary()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Original_values_can_be_copied_into_a_non_generic_cloned_dictionary()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Original_values_can_be_copied_into_a_non_generic_cloned_dictionary()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Original_values_can_be_copied_into_a_non_generic_cloned_dictionary
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 776
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task Original_values_can_be_copied_into_a_non_generic_cloned_dictionary()
    content.vb: >-
      <Fact>

      Public Overridable Function Original_values_can_be_copied_into_a_non_generic_cloned_dictionary As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Original_values_can_be_copied_into_a_non_generic_cloned_dictionary()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Original_values_can_be_copied_into_a_non_generic_cloned_dictionary()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Store_values_can_be_copied_into_a_non_generic_cloned_dictionary
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Store_values_can_be_copied_into_a_non_generic_cloned_dictionary
  id: Store_values_can_be_copied_into_a_non_generic_cloned_dictionary
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Store_values_can_be_copied_into_a_non_generic_cloned_dictionary()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Store_values_can_be_copied_into_a_non_generic_cloned_dictionary()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Store_values_can_be_copied_into_a_non_generic_cloned_dictionary()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Store_values_can_be_copied_into_a_non_generic_cloned_dictionary
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 782
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task Store_values_can_be_copied_into_a_non_generic_cloned_dictionary()
    content.vb: >-
      <Fact>

      Public Overridable Function Store_values_can_be_copied_into_a_non_generic_cloned_dictionary As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Store_values_can_be_copied_into_a_non_generic_cloned_dictionary()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Store_values_can_be_copied_into_a_non_generic_cloned_dictionary()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Store_values_can_be_copied_asynchronously_into_a_non_generic_cloned_dictionary
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Store_values_can_be_copied_asynchronously_into_a_non_generic_cloned_dictionary
  id: Store_values_can_be_copied_asynchronously_into_a_non_generic_cloned_dictionary
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Store_values_can_be_copied_asynchronously_into_a_non_generic_cloned_dictionary()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Store_values_can_be_copied_asynchronously_into_a_non_generic_cloned_dictionary()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Store_values_can_be_copied_asynchronously_into_a_non_generic_cloned_dictionary()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Store_values_can_be_copied_asynchronously_into_a_non_generic_cloned_dictionary
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 788
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task Store_values_can_be_copied_asynchronously_into_a_non_generic_cloned_dictionary()
    content.vb: >-
      <Fact>

      Public Overridable Function Store_values_can_be_copied_asynchronously_into_a_non_generic_cloned_dictionary As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Store_values_can_be_copied_asynchronously_into_a_non_generic_cloned_dictionary()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Store_values_can_be_copied_asynchronously_into_a_non_generic_cloned_dictionary()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Current_values_can_be_read_or_set_for_an_object_in_the_Deleted_state
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Current_values_can_be_read_or_set_for_an_object_in_the_Deleted_state
  id: Current_values_can_be_read_or_set_for_an_object_in_the_Deleted_state
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Current_values_can_be_read_or_set_for_an_object_in_the_Deleted_state()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Current_values_can_be_read_or_set_for_an_object_in_the_Deleted_state()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Current_values_can_be_read_or_set_for_an_object_in_the_Deleted_state()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Current_values_can_be_read_or_set_for_an_object_in_the_Deleted_state
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 828
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task Current_values_can_be_read_or_set_for_an_object_in_the_Deleted_state()
    content.vb: >-
      <Fact>

      Public Overridable Function Current_values_can_be_read_or_set_for_an_object_in_the_Deleted_state As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Current_values_can_be_read_or_set_for_an_object_in_the_Deleted_state()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Current_values_can_be_read_or_set_for_an_object_in_the_Deleted_state()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Original_values_can_be_read_and_set_for_an_object_in_the_Deleted_state
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Original_values_can_be_read_and_set_for_an_object_in_the_Deleted_state
  id: Original_values_can_be_read_and_set_for_an_object_in_the_Deleted_state
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Original_values_can_be_read_and_set_for_an_object_in_the_Deleted_state()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Original_values_can_be_read_and_set_for_an_object_in_the_Deleted_state()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Original_values_can_be_read_and_set_for_an_object_in_the_Deleted_state()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Original_values_can_be_read_and_set_for_an_object_in_the_Deleted_state
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 834
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task Original_values_can_be_read_and_set_for_an_object_in_the_Deleted_state()
    content.vb: >-
      <Fact>

      Public Overridable Function Original_values_can_be_read_and_set_for_an_object_in_the_Deleted_state As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Original_values_can_be_read_and_set_for_an_object_in_the_Deleted_state()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Original_values_can_be_read_and_set_for_an_object_in_the_Deleted_state()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Store_values_can_be_read_and_set_for_an_object_in_the_Deleted_state
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Store_values_can_be_read_and_set_for_an_object_in_the_Deleted_state
  id: Store_values_can_be_read_and_set_for_an_object_in_the_Deleted_state
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Store_values_can_be_read_and_set_for_an_object_in_the_Deleted_state()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Store_values_can_be_read_and_set_for_an_object_in_the_Deleted_state()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Store_values_can_be_read_and_set_for_an_object_in_the_Deleted_state()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Store_values_can_be_read_and_set_for_an_object_in_the_Deleted_state
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 840
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task Store_values_can_be_read_and_set_for_an_object_in_the_Deleted_state()
    content.vb: >-
      <Fact>

      Public Overridable Function Store_values_can_be_read_and_set_for_an_object_in_the_Deleted_state As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Store_values_can_be_read_and_set_for_an_object_in_the_Deleted_state()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Store_values_can_be_read_and_set_for_an_object_in_the_Deleted_state()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Store_values_can_be_read_and_set_for_an_object_in_the_Deleted_state_asynchronously
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Store_values_can_be_read_and_set_for_an_object_in_the_Deleted_state_asynchronously
  id: Store_values_can_be_read_and_set_for_an_object_in_the_Deleted_state_asynchronously
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Store_values_can_be_read_and_set_for_an_object_in_the_Deleted_state_asynchronously()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Store_values_can_be_read_and_set_for_an_object_in_the_Deleted_state_asynchronously()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Store_values_can_be_read_and_set_for_an_object_in_the_Deleted_state_asynchronously()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Store_values_can_be_read_and_set_for_an_object_in_the_Deleted_state_asynchronously
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 846
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task Store_values_can_be_read_and_set_for_an_object_in_the_Deleted_state_asynchronously()
    content.vb: >-
      <Fact>

      Public Overridable Function Store_values_can_be_read_and_set_for_an_object_in_the_Deleted_state_asynchronously As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Store_values_can_be_read_and_set_for_an_object_in_the_Deleted_state_asynchronously()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Store_values_can_be_read_and_set_for_an_object_in_the_Deleted_state_asynchronously()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Current_values_can_be_read_and_set_for_an_object_in_the_Unchanged_state
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Current_values_can_be_read_and_set_for_an_object_in_the_Unchanged_state
  id: Current_values_can_be_read_and_set_for_an_object_in_the_Unchanged_state
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Current_values_can_be_read_and_set_for_an_object_in_the_Unchanged_state()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Current_values_can_be_read_and_set_for_an_object_in_the_Unchanged_state()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Current_values_can_be_read_and_set_for_an_object_in_the_Unchanged_state()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Current_values_can_be_read_and_set_for_an_object_in_the_Unchanged_state
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 852
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task Current_values_can_be_read_and_set_for_an_object_in_the_Unchanged_state()
    content.vb: >-
      <Fact>

      Public Overridable Function Current_values_can_be_read_and_set_for_an_object_in_the_Unchanged_state As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Current_values_can_be_read_and_set_for_an_object_in_the_Unchanged_state()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Current_values_can_be_read_and_set_for_an_object_in_the_Unchanged_state()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Original_values_can_be_read_and_set_for_an_object_in_the_Unchanged_state
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Original_values_can_be_read_and_set_for_an_object_in_the_Unchanged_state
  id: Original_values_can_be_read_and_set_for_an_object_in_the_Unchanged_state
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Original_values_can_be_read_and_set_for_an_object_in_the_Unchanged_state()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Original_values_can_be_read_and_set_for_an_object_in_the_Unchanged_state()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Original_values_can_be_read_and_set_for_an_object_in_the_Unchanged_state()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Original_values_can_be_read_and_set_for_an_object_in_the_Unchanged_state
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 858
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task Original_values_can_be_read_and_set_for_an_object_in_the_Unchanged_state()
    content.vb: >-
      <Fact>

      Public Overridable Function Original_values_can_be_read_and_set_for_an_object_in_the_Unchanged_state As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Original_values_can_be_read_and_set_for_an_object_in_the_Unchanged_state()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Original_values_can_be_read_and_set_for_an_object_in_the_Unchanged_state()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Store_values_can_be_read_and_set_for_an_object_in_the_Unchanged_state
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Store_values_can_be_read_and_set_for_an_object_in_the_Unchanged_state
  id: Store_values_can_be_read_and_set_for_an_object_in_the_Unchanged_state
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Store_values_can_be_read_and_set_for_an_object_in_the_Unchanged_state()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Store_values_can_be_read_and_set_for_an_object_in_the_Unchanged_state()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Store_values_can_be_read_and_set_for_an_object_in_the_Unchanged_state()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Store_values_can_be_read_and_set_for_an_object_in_the_Unchanged_state
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 864
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task Store_values_can_be_read_and_set_for_an_object_in_the_Unchanged_state()
    content.vb: >-
      <Fact>

      Public Overridable Function Store_values_can_be_read_and_set_for_an_object_in_the_Unchanged_state As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Store_values_can_be_read_and_set_for_an_object_in_the_Unchanged_state()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Store_values_can_be_read_and_set_for_an_object_in_the_Unchanged_state()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Store_values_can_be_read_and_set_for_an_object_in_the_Unchanged_state_asynchronously
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Store_values_can_be_read_and_set_for_an_object_in_the_Unchanged_state_asynchronously
  id: Store_values_can_be_read_and_set_for_an_object_in_the_Unchanged_state_asynchronously
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Store_values_can_be_read_and_set_for_an_object_in_the_Unchanged_state_asynchronously()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Store_values_can_be_read_and_set_for_an_object_in_the_Unchanged_state_asynchronously()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Store_values_can_be_read_and_set_for_an_object_in_the_Unchanged_state_asynchronously()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Store_values_can_be_read_and_set_for_an_object_in_the_Unchanged_state_asynchronously
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 870
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task Store_values_can_be_read_and_set_for_an_object_in_the_Unchanged_state_asynchronously()
    content.vb: >-
      <Fact>

      Public Overridable Function Store_values_can_be_read_and_set_for_an_object_in_the_Unchanged_state_asynchronously As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Store_values_can_be_read_and_set_for_an_object_in_the_Unchanged_state_asynchronously()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Store_values_can_be_read_and_set_for_an_object_in_the_Unchanged_state_asynchronously()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Current_values_can_be_read_and_set_for_an_object_in_the_Modified_state
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Current_values_can_be_read_and_set_for_an_object_in_the_Modified_state
  id: Current_values_can_be_read_and_set_for_an_object_in_the_Modified_state
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Current_values_can_be_read_and_set_for_an_object_in_the_Modified_state()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Current_values_can_be_read_and_set_for_an_object_in_the_Modified_state()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Current_values_can_be_read_and_set_for_an_object_in_the_Modified_state()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Current_values_can_be_read_and_set_for_an_object_in_the_Modified_state
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 876
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task Current_values_can_be_read_and_set_for_an_object_in_the_Modified_state()
    content.vb: >-
      <Fact>

      Public Overridable Function Current_values_can_be_read_and_set_for_an_object_in_the_Modified_state As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Current_values_can_be_read_and_set_for_an_object_in_the_Modified_state()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Current_values_can_be_read_and_set_for_an_object_in_the_Modified_state()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Original_values_can_be_read_and_set_for_an_object_in_the_Modified_state
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Original_values_can_be_read_and_set_for_an_object_in_the_Modified_state
  id: Original_values_can_be_read_and_set_for_an_object_in_the_Modified_state
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Original_values_can_be_read_and_set_for_an_object_in_the_Modified_state()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Original_values_can_be_read_and_set_for_an_object_in_the_Modified_state()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Original_values_can_be_read_and_set_for_an_object_in_the_Modified_state()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Original_values_can_be_read_and_set_for_an_object_in_the_Modified_state
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 882
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task Original_values_can_be_read_and_set_for_an_object_in_the_Modified_state()
    content.vb: >-
      <Fact>

      Public Overridable Function Original_values_can_be_read_and_set_for_an_object_in_the_Modified_state As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Original_values_can_be_read_and_set_for_an_object_in_the_Modified_state()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Original_values_can_be_read_and_set_for_an_object_in_the_Modified_state()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Store_values_can_be_read_and_set_for_an_object_in_the_Modified_state
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Store_values_can_be_read_and_set_for_an_object_in_the_Modified_state
  id: Store_values_can_be_read_and_set_for_an_object_in_the_Modified_state
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Store_values_can_be_read_and_set_for_an_object_in_the_Modified_state()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Store_values_can_be_read_and_set_for_an_object_in_the_Modified_state()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Store_values_can_be_read_and_set_for_an_object_in_the_Modified_state()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Store_values_can_be_read_and_set_for_an_object_in_the_Modified_state
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 888
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task Store_values_can_be_read_and_set_for_an_object_in_the_Modified_state()
    content.vb: >-
      <Fact>

      Public Overridable Function Store_values_can_be_read_and_set_for_an_object_in_the_Modified_state As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Store_values_can_be_read_and_set_for_an_object_in_the_Modified_state()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Store_values_can_be_read_and_set_for_an_object_in_the_Modified_state()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Store_values_can_be_read_and_set_for_an_object_in_the_Modified_state_asynchronously
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Store_values_can_be_read_and_set_for_an_object_in_the_Modified_state_asynchronously
  id: Store_values_can_be_read_and_set_for_an_object_in_the_Modified_state_asynchronously
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Store_values_can_be_read_and_set_for_an_object_in_the_Modified_state_asynchronously()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Store_values_can_be_read_and_set_for_an_object_in_the_Modified_state_asynchronously()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Store_values_can_be_read_and_set_for_an_object_in_the_Modified_state_asynchronously()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Store_values_can_be_read_and_set_for_an_object_in_the_Modified_state_asynchronously
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 894
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task Store_values_can_be_read_and_set_for_an_object_in_the_Modified_state_asynchronously()
    content.vb: >-
      <Fact>

      Public Overridable Function Store_values_can_be_read_and_set_for_an_object_in_the_Modified_state_asynchronously As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Store_values_can_be_read_and_set_for_an_object_in_the_Modified_state_asynchronously()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Store_values_can_be_read_and_set_for_an_object_in_the_Modified_state_asynchronously()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Current_values_can_be_read_and_set_for_an_object_in_the_Added_state
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Current_values_can_be_read_and_set_for_an_object_in_the_Added_state
  id: Current_values_can_be_read_and_set_for_an_object_in_the_Added_state
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Current_values_can_be_read_and_set_for_an_object_in_the_Added_state()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Current_values_can_be_read_and_set_for_an_object_in_the_Added_state()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Current_values_can_be_read_and_set_for_an_object_in_the_Added_state()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Current_values_can_be_read_and_set_for_an_object_in_the_Added_state
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 900
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task Current_values_can_be_read_and_set_for_an_object_in_the_Added_state()
    content.vb: >-
      <Fact>

      Public Overridable Function Current_values_can_be_read_and_set_for_an_object_in_the_Added_state As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Current_values_can_be_read_and_set_for_an_object_in_the_Added_state()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Current_values_can_be_read_and_set_for_an_object_in_the_Added_state()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Original_values_can_be_read_or_set_for_an_object_in_the_Added_state
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Original_values_can_be_read_or_set_for_an_object_in_the_Added_state
  id: Original_values_can_be_read_or_set_for_an_object_in_the_Added_state
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Original_values_can_be_read_or_set_for_an_object_in_the_Added_state()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Original_values_can_be_read_or_set_for_an_object_in_the_Added_state()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Original_values_can_be_read_or_set_for_an_object_in_the_Added_state()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Original_values_can_be_read_or_set_for_an_object_in_the_Added_state
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 906
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task Original_values_can_be_read_or_set_for_an_object_in_the_Added_state()
    content.vb: >-
      <Fact>

      Public Overridable Function Original_values_can_be_read_or_set_for_an_object_in_the_Added_state As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Original_values_can_be_read_or_set_for_an_object_in_the_Added_state()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Original_values_can_be_read_or_set_for_an_object_in_the_Added_state()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Store_values_can_be_read_or_set_for_an_object_in_the_Added_state
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Store_values_can_be_read_or_set_for_an_object_in_the_Added_state
  id: Store_values_can_be_read_or_set_for_an_object_in_the_Added_state
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Store_values_can_be_read_or_set_for_an_object_in_the_Added_state()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Store_values_can_be_read_or_set_for_an_object_in_the_Added_state()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Store_values_can_be_read_or_set_for_an_object_in_the_Added_state()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Store_values_can_be_read_or_set_for_an_object_in_the_Added_state
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 912
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task Store_values_can_be_read_or_set_for_an_object_in_the_Added_state()
    content.vb: >-
      <Fact>

      Public Overridable Function Store_values_can_be_read_or_set_for_an_object_in_the_Added_state As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Store_values_can_be_read_or_set_for_an_object_in_the_Added_state()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Store_values_can_be_read_or_set_for_an_object_in_the_Added_state()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Store_values_can_be_read_or_set_for_an_object_in_the_Added_state_asynchronously
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Store_values_can_be_read_or_set_for_an_object_in_the_Added_state_asynchronously
  id: Store_values_can_be_read_or_set_for_an_object_in_the_Added_state_asynchronously
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Store_values_can_be_read_or_set_for_an_object_in_the_Added_state_asynchronously()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Store_values_can_be_read_or_set_for_an_object_in_the_Added_state_asynchronously()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Store_values_can_be_read_or_set_for_an_object_in_the_Added_state_asynchronously()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Store_values_can_be_read_or_set_for_an_object_in_the_Added_state_asynchronously
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 918
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task Store_values_can_be_read_or_set_for_an_object_in_the_Added_state_asynchronously()
    content.vb: >-
      <Fact>

      Public Overridable Function Store_values_can_be_read_or_set_for_an_object_in_the_Added_state_asynchronously As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Store_values_can_be_read_or_set_for_an_object_in_the_Added_state_asynchronously()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Store_values_can_be_read_or_set_for_an_object_in_the_Added_state_asynchronously()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Current_values_can_be_read_or_set_for_a_Detached_object
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Current_values_can_be_read_or_set_for_a_Detached_object
  id: Current_values_can_be_read_or_set_for_a_Detached_object
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Current_values_can_be_read_or_set_for_a_Detached_object()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Current_values_can_be_read_or_set_for_a_Detached_object()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Current_values_can_be_read_or_set_for_a_Detached_object()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Current_values_can_be_read_or_set_for_a_Detached_object
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 924
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task Current_values_can_be_read_or_set_for_a_Detached_object()
    content.vb: >-
      <Fact>

      Public Overridable Function Current_values_can_be_read_or_set_for_a_Detached_object As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Current_values_can_be_read_or_set_for_a_Detached_object()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Current_values_can_be_read_or_set_for_a_Detached_object()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Original_values_can_be_read_or_set_for_a_Detached_object
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Original_values_can_be_read_or_set_for_a_Detached_object
  id: Original_values_can_be_read_or_set_for_a_Detached_object
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Original_values_can_be_read_or_set_for_a_Detached_object()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Original_values_can_be_read_or_set_for_a_Detached_object()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Original_values_can_be_read_or_set_for_a_Detached_object()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Original_values_can_be_read_or_set_for_a_Detached_object
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 930
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task Original_values_can_be_read_or_set_for_a_Detached_object()
    content.vb: >-
      <Fact>

      Public Overridable Function Original_values_can_be_read_or_set_for_a_Detached_object As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Original_values_can_be_read_or_set_for_a_Detached_object()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Original_values_can_be_read_or_set_for_a_Detached_object()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Store_values_can_be_read_or_set_for_a_Detached_object
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Store_values_can_be_read_or_set_for_a_Detached_object
  id: Store_values_can_be_read_or_set_for_a_Detached_object
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Store_values_can_be_read_or_set_for_a_Detached_object()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Store_values_can_be_read_or_set_for_a_Detached_object()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Store_values_can_be_read_or_set_for_a_Detached_object()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Store_values_can_be_read_or_set_for_a_Detached_object
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 936
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task Store_values_can_be_read_or_set_for_a_Detached_object()
    content.vb: >-
      <Fact>

      Public Overridable Function Store_values_can_be_read_or_set_for_a_Detached_object As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Store_values_can_be_read_or_set_for_a_Detached_object()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Store_values_can_be_read_or_set_for_a_Detached_object()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Store_values_cannot_be_read_or_set_for_a_Detached_object_asynchronously
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Store_values_cannot_be_read_or_set_for_a_Detached_object_asynchronously
  id: Store_values_cannot_be_read_or_set_for_a_Detached_object_asynchronously
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Store_values_cannot_be_read_or_set_for_a_Detached_object_asynchronously()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Store_values_cannot_be_read_or_set_for_a_Detached_object_asynchronously()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Store_values_cannot_be_read_or_set_for_a_Detached_object_asynchronously()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Store_values_cannot_be_read_or_set_for_a_Detached_object_asynchronously
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 942
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task Store_values_cannot_be_read_or_set_for_a_Detached_object_asynchronously()
    content.vb: >-
      <Fact>

      Public Overridable Function Store_values_cannot_be_read_or_set_for_a_Detached_object_asynchronously As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Store_values_cannot_be_read_or_set_for_a_Detached_object_asynchronously()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Store_values_cannot_be_read_or_set_for_a_Detached_object_asynchronously()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Current_values_can_be_set_from_an_object_using_generic_dictionary
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Current_values_can_be_set_from_an_object_using_generic_dictionary
  id: Current_values_can_be_set_from_an_object_using_generic_dictionary
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Current_values_can_be_set_from_an_object_using_generic_dictionary()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Current_values_can_be_set_from_an_object_using_generic_dictionary()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Current_values_can_be_set_from_an_object_using_generic_dictionary()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Current_values_can_be_set_from_an_object_using_generic_dictionary
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 964
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Current_values_can_be_set_from_an_object_using_generic_dictionary()
    content.vb: >-
      <Fact>

      Public Overridable Sub Current_values_can_be_set_from_an_object_using_generic_dictionary
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Current_values_can_be_set_from_an_object_using_generic_dictionary()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Current_values_can_be_set_from_an_object_using_generic_dictionary()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Original_values_can_be_set_from_an_object_using_generic_dictionary
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Original_values_can_be_set_from_an_object_using_generic_dictionary
  id: Original_values_can_be_set_from_an_object_using_generic_dictionary
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Original_values_can_be_set_from_an_object_using_generic_dictionary()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Original_values_can_be_set_from_an_object_using_generic_dictionary()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Original_values_can_be_set_from_an_object_using_generic_dictionary()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Original_values_can_be_set_from_an_object_using_generic_dictionary
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 970
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Original_values_can_be_set_from_an_object_using_generic_dictionary()
    content.vb: >-
      <Fact>

      Public Overridable Sub Original_values_can_be_set_from_an_object_using_generic_dictionary
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Original_values_can_be_set_from_an_object_using_generic_dictionary()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Original_values_can_be_set_from_an_object_using_generic_dictionary()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Current_values_can_be_set_from_an_object_using_non_generic_dictionary
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Current_values_can_be_set_from_an_object_using_non_generic_dictionary
  id: Current_values_can_be_set_from_an_object_using_non_generic_dictionary
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Current_values_can_be_set_from_an_object_using_non_generic_dictionary()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Current_values_can_be_set_from_an_object_using_non_generic_dictionary()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Current_values_can_be_set_from_an_object_using_non_generic_dictionary()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Current_values_can_be_set_from_an_object_using_non_generic_dictionary
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 1021
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Current_values_can_be_set_from_an_object_using_non_generic_dictionary()
    content.vb: >-
      <Fact>

      Public Overridable Sub Current_values_can_be_set_from_an_object_using_non_generic_dictionary
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Current_values_can_be_set_from_an_object_using_non_generic_dictionary()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Current_values_can_be_set_from_an_object_using_non_generic_dictionary()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Original_values_can_be_set_from_an_object_using_non_generic_dictionary
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Original_values_can_be_set_from_an_object_using_non_generic_dictionary
  id: Original_values_can_be_set_from_an_object_using_non_generic_dictionary
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Original_values_can_be_set_from_an_object_using_non_generic_dictionary()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Original_values_can_be_set_from_an_object_using_non_generic_dictionary()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Original_values_can_be_set_from_an_object_using_non_generic_dictionary()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Original_values_can_be_set_from_an_object_using_non_generic_dictionary
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 1027
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Original_values_can_be_set_from_an_object_using_non_generic_dictionary()
    content.vb: >-
      <Fact>

      Public Overridable Sub Original_values_can_be_set_from_an_object_using_non_generic_dictionary
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Original_values_can_be_set_from_an_object_using_non_generic_dictionary()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Original_values_can_be_set_from_an_object_using_non_generic_dictionary()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Current_values_can_be_set_from_DTO_object_using_non_generic_dictionary
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Current_values_can_be_set_from_DTO_object_using_non_generic_dictionary
  id: Current_values_can_be_set_from_DTO_object_using_non_generic_dictionary
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Current_values_can_be_set_from_DTO_object_using_non_generic_dictionary()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Current_values_can_be_set_from_DTO_object_using_non_generic_dictionary()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Current_values_can_be_set_from_DTO_object_using_non_generic_dictionary()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Current_values_can_be_set_from_DTO_object_using_non_generic_dictionary
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 1060
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Current_values_can_be_set_from_DTO_object_using_non_generic_dictionary()
    content.vb: >-
      <Fact>

      Public Overridable Sub Current_values_can_be_set_from_DTO_object_using_non_generic_dictionary
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Current_values_can_be_set_from_DTO_object_using_non_generic_dictionary()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Current_values_can_be_set_from_DTO_object_using_non_generic_dictionary()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Original_values_can_be_set_from_DTO_object_using_non_generic_dictionary
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Original_values_can_be_set_from_DTO_object_using_non_generic_dictionary
  id: Original_values_can_be_set_from_DTO_object_using_non_generic_dictionary
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Original_values_can_be_set_from_DTO_object_using_non_generic_dictionary()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Original_values_can_be_set_from_DTO_object_using_non_generic_dictionary()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Original_values_can_be_set_from_DTO_object_using_non_generic_dictionary()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Original_values_can_be_set_from_DTO_object_using_non_generic_dictionary
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 1066
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Original_values_can_be_set_from_DTO_object_using_non_generic_dictionary()
    content.vb: >-
      <Fact>

      Public Overridable Sub Original_values_can_be_set_from_DTO_object_using_non_generic_dictionary
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Original_values_can_be_set_from_DTO_object_using_non_generic_dictionary()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Original_values_can_be_set_from_DTO_object_using_non_generic_dictionary()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Current_values_can_be_set_from_DTO_object_missing_key_using_non_generic_dictionary
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Current_values_can_be_set_from_DTO_object_missing_key_using_non_generic_dictionary
  id: Current_values_can_be_set_from_DTO_object_missing_key_using_non_generic_dictionary
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Current_values_can_be_set_from_DTO_object_missing_key_using_non_generic_dictionary()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Current_values_can_be_set_from_DTO_object_missing_key_using_non_generic_dictionary()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Current_values_can_be_set_from_DTO_object_missing_key_using_non_generic_dictionary()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Current_values_can_be_set_from_DTO_object_missing_key_using_non_generic_dictionary
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 1102
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Current_values_can_be_set_from_DTO_object_missing_key_using_non_generic_dictionary()
    content.vb: >-
      <Fact>

      Public Overridable Sub Current_values_can_be_set_from_DTO_object_missing_key_using_non_generic_dictionary
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Current_values_can_be_set_from_DTO_object_missing_key_using_non_generic_dictionary()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Current_values_can_be_set_from_DTO_object_missing_key_using_non_generic_dictionary()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Original_values_can_be_set_from_DTO_object_missing_key_using_non_generic_dictionary
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Original_values_can_be_set_from_DTO_object_missing_key_using_non_generic_dictionary
  id: Original_values_can_be_set_from_DTO_object_missing_key_using_non_generic_dictionary
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Original_values_can_be_set_from_DTO_object_missing_key_using_non_generic_dictionary()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Original_values_can_be_set_from_DTO_object_missing_key_using_non_generic_dictionary()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Original_values_can_be_set_from_DTO_object_missing_key_using_non_generic_dictionary()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Original_values_can_be_set_from_DTO_object_missing_key_using_non_generic_dictionary
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 1108
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Original_values_can_be_set_from_DTO_object_missing_key_using_non_generic_dictionary()
    content.vb: >-
      <Fact>

      Public Overridable Sub Original_values_can_be_set_from_DTO_object_missing_key_using_non_generic_dictionary
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Original_values_can_be_set_from_DTO_object_missing_key_using_non_generic_dictionary()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Original_values_can_be_set_from_DTO_object_missing_key_using_non_generic_dictionary()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Current_values_can_be_set_from_dictionary
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Current_values_can_be_set_from_dictionary
  id: Current_values_can_be_set_from_dictionary
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Current_values_can_be_set_from_dictionary()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Current_values_can_be_set_from_dictionary()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Current_values_can_be_set_from_dictionary()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Current_values_can_be_set_from_dictionary
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 1143
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Current_values_can_be_set_from_dictionary()
    content.vb: >-
      <Fact>

      Public Overridable Sub Current_values_can_be_set_from_dictionary
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Current_values_can_be_set_from_dictionary()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Current_values_can_be_set_from_dictionary()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Original_values_can_be_set_from_dictionary
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Original_values_can_be_set_from_dictionary
  id: Original_values_can_be_set_from_dictionary
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Original_values_can_be_set_from_dictionary()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Original_values_can_be_set_from_dictionary()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Original_values_can_be_set_from_dictionary()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Original_values_can_be_set_from_dictionary
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 1149
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Original_values_can_be_set_from_dictionary()
    content.vb: >-
      <Fact>

      Public Overridable Sub Original_values_can_be_set_from_dictionary
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Original_values_can_be_set_from_dictionary()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Original_values_can_be_set_from_dictionary()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Current_values_can_be_set_from_dictionary_some_missing
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Current_values_can_be_set_from_dictionary_some_missing
  id: Current_values_can_be_set_from_dictionary_some_missing
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Current_values_can_be_set_from_dictionary_some_missing()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Current_values_can_be_set_from_dictionary_some_missing()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Current_values_can_be_set_from_dictionary_some_missing()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Current_values_can_be_set_from_dictionary_some_missing
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 1187
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Current_values_can_be_set_from_dictionary_some_missing()
    content.vb: >-
      <Fact>

      Public Overridable Sub Current_values_can_be_set_from_dictionary_some_missing
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Current_values_can_be_set_from_dictionary_some_missing()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Current_values_can_be_set_from_dictionary_some_missing()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Original_values_can_be_set_from_dictionary_some_missing
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Original_values_can_be_set_from_dictionary_some_missing
  id: Original_values_can_be_set_from_dictionary_some_missing
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Original_values_can_be_set_from_dictionary_some_missing()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Original_values_can_be_set_from_dictionary_some_missing()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Original_values_can_be_set_from_dictionary_some_missing()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Original_values_can_be_set_from_dictionary_some_missing
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 1193
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Original_values_can_be_set_from_dictionary_some_missing()
    content.vb: >-
      <Fact>

      Public Overridable Sub Original_values_can_be_set_from_dictionary_some_missing
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Original_values_can_be_set_from_dictionary_some_missing()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Original_values_can_be_set_from_dictionary_some_missing()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Current_values_can_be_set_from_one_generic_dictionary_to_another_generic_dictionary
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Current_values_can_be_set_from_one_generic_dictionary_to_another_generic_dictionary
  id: Current_values_can_be_set_from_one_generic_dictionary_to_another_generic_dictionary
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Current_values_can_be_set_from_one_generic_dictionary_to_another_generic_dictionary()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Current_values_can_be_set_from_one_generic_dictionary_to_another_generic_dictionary()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Current_values_can_be_set_from_one_generic_dictionary_to_another_generic_dictionary()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Current_values_can_be_set_from_one_generic_dictionary_to_another_generic_dictionary
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 1229
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Current_values_can_be_set_from_one_generic_dictionary_to_another_generic_dictionary()
    content.vb: >-
      <Fact>

      Public Overridable Sub Current_values_can_be_set_from_one_generic_dictionary_to_another_generic_dictionary
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Current_values_can_be_set_from_one_generic_dictionary_to_another_generic_dictionary()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Current_values_can_be_set_from_one_generic_dictionary_to_another_generic_dictionary()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Original_values_can_be_set_from_one_generic_dictionary_to_another_generic_dictionary
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Original_values_can_be_set_from_one_generic_dictionary_to_another_generic_dictionary
  id: Original_values_can_be_set_from_one_generic_dictionary_to_another_generic_dictionary
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Original_values_can_be_set_from_one_generic_dictionary_to_another_generic_dictionary()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Original_values_can_be_set_from_one_generic_dictionary_to_another_generic_dictionary()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Original_values_can_be_set_from_one_generic_dictionary_to_another_generic_dictionary()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Original_values_can_be_set_from_one_generic_dictionary_to_another_generic_dictionary
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 1235
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Original_values_can_be_set_from_one_generic_dictionary_to_another_generic_dictionary()
    content.vb: >-
      <Fact>

      Public Overridable Sub Original_values_can_be_set_from_one_generic_dictionary_to_another_generic_dictionary
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Original_values_can_be_set_from_one_generic_dictionary_to_another_generic_dictionary()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Original_values_can_be_set_from_one_generic_dictionary_to_another_generic_dictionary()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Current_values_can_be_set_from_one_non_generic_dictionary_to_another_generic_dictionary
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Current_values_can_be_set_from_one_non_generic_dictionary_to_another_generic_dictionary
  id: Current_values_can_be_set_from_one_non_generic_dictionary_to_another_generic_dictionary
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Current_values_can_be_set_from_one_non_generic_dictionary_to_another_generic_dictionary()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Current_values_can_be_set_from_one_non_generic_dictionary_to_another_generic_dictionary()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Current_values_can_be_set_from_one_non_generic_dictionary_to_another_generic_dictionary()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Current_values_can_be_set_from_one_non_generic_dictionary_to_another_generic_dictionary
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 1271
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Current_values_can_be_set_from_one_non_generic_dictionary_to_another_generic_dictionary()
    content.vb: >-
      <Fact>

      Public Overridable Sub Current_values_can_be_set_from_one_non_generic_dictionary_to_another_generic_dictionary
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Current_values_can_be_set_from_one_non_generic_dictionary_to_another_generic_dictionary()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Current_values_can_be_set_from_one_non_generic_dictionary_to_another_generic_dictionary()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Original_values_can_be_set_from_one_non_generic_dictionary_to_another_generic_dictionary
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Original_values_can_be_set_from_one_non_generic_dictionary_to_another_generic_dictionary
  id: Original_values_can_be_set_from_one_non_generic_dictionary_to_another_generic_dictionary
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Original_values_can_be_set_from_one_non_generic_dictionary_to_another_generic_dictionary()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Original_values_can_be_set_from_one_non_generic_dictionary_to_another_generic_dictionary()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Original_values_can_be_set_from_one_non_generic_dictionary_to_another_generic_dictionary()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Original_values_can_be_set_from_one_non_generic_dictionary_to_another_generic_dictionary
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 1277
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Original_values_can_be_set_from_one_non_generic_dictionary_to_another_generic_dictionary()
    content.vb: >-
      <Fact>

      Public Overridable Sub Original_values_can_be_set_from_one_non_generic_dictionary_to_another_generic_dictionary
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Original_values_can_be_set_from_one_non_generic_dictionary_to_another_generic_dictionary()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Original_values_can_be_set_from_one_non_generic_dictionary_to_another_generic_dictionary()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Primary_key_in_current_values_cannot_be_changed_in_property_dictionary
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Primary_key_in_current_values_cannot_be_changed_in_property_dictionary
  id: Primary_key_in_current_values_cannot_be_changed_in_property_dictionary
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Primary_key_in_current_values_cannot_be_changed_in_property_dictionary()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Primary_key_in_current_values_cannot_be_changed_in_property_dictionary()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Primary_key_in_current_values_cannot_be_changed_in_property_dictionary()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Primary_key_in_current_values_cannot_be_changed_in_property_dictionary
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 1313
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Primary_key_in_current_values_cannot_be_changed_in_property_dictionary()
    content.vb: >-
      <Fact>

      Public Overridable Sub Primary_key_in_current_values_cannot_be_changed_in_property_dictionary
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Primary_key_in_current_values_cannot_be_changed_in_property_dictionary()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Primary_key_in_current_values_cannot_be_changed_in_property_dictionary()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Primary_key_in_original_values_cannot_be_changed_in_property_dictionary
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Primary_key_in_original_values_cannot_be_changed_in_property_dictionary
  id: Primary_key_in_original_values_cannot_be_changed_in_property_dictionary
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Primary_key_in_original_values_cannot_be_changed_in_property_dictionary()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Primary_key_in_original_values_cannot_be_changed_in_property_dictionary()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Primary_key_in_original_values_cannot_be_changed_in_property_dictionary()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Primary_key_in_original_values_cannot_be_changed_in_property_dictionary
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 1319
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Primary_key_in_original_values_cannot_be_changed_in_property_dictionary()
    content.vb: >-
      <Fact>

      Public Overridable Sub Primary_key_in_original_values_cannot_be_changed_in_property_dictionary
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Primary_key_in_original_values_cannot_be_changed_in_property_dictionary()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Primary_key_in_original_values_cannot_be_changed_in_property_dictionary()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Non_nullable_property_in_current_values_results_in_conceptual_null
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Non_nullable_property_in_current_values_results_in_conceptual_null
  id: Non_nullable_property_in_current_values_results_in_conceptual_null
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Non_nullable_property_in_current_values_results_in_conceptual_null()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Non_nullable_property_in_current_values_results_in_conceptual_null()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Non_nullable_property_in_current_values_results_in_conceptual_null()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Non_nullable_property_in_current_values_results_in_conceptual_null
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 1338
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Non_nullable_property_in_current_values_results_in_conceptual_null()
    content.vb: >-
      <Fact>

      Public Overridable Sub Non_nullable_property_in_current_values_results_in_conceptual_null
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Non_nullable_property_in_current_values_results_in_conceptual_null()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Non_nullable_property_in_current_values_results_in_conceptual_null()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Non_nullable_shadow_property_in_current_values_results_in_conceptual_null
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Non_nullable_shadow_property_in_current_values_results_in_conceptual_null
  id: Non_nullable_shadow_property_in_current_values_results_in_conceptual_null
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Non_nullable_shadow_property_in_current_values_results_in_conceptual_null()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Non_nullable_shadow_property_in_current_values_results_in_conceptual_null()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Non_nullable_shadow_property_in_current_values_results_in_conceptual_null()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Non_nullable_shadow_property_in_current_values_results_in_conceptual_null
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 1358
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Non_nullable_shadow_property_in_current_values_results_in_conceptual_null()
    content.vb: >-
      <Fact>

      Public Overridable Sub Non_nullable_shadow_property_in_current_values_results_in_conceptual_null
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Non_nullable_shadow_property_in_current_values_results_in_conceptual_null()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Non_nullable_shadow_property_in_current_values_results_in_conceptual_null()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Non_nullable_property_in_original_values_cannot_be_set_to_null_in_property_dictionary
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Non_nullable_property_in_original_values_cannot_be_set_to_null_in_property_dictionary
  id: Non_nullable_property_in_original_values_cannot_be_set_to_null_in_property_dictionary
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Non_nullable_property_in_original_values_cannot_be_set_to_null_in_property_dictionary()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Non_nullable_property_in_original_values_cannot_be_set_to_null_in_property_dictionary()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Non_nullable_property_in_original_values_cannot_be_set_to_null_in_property_dictionary()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Non_nullable_property_in_original_values_cannot_be_set_to_null_in_property_dictionary
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 1377
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Non_nullable_property_in_original_values_cannot_be_set_to_null_in_property_dictionary()
    content.vb: >-
      <Fact>

      Public Overridable Sub Non_nullable_property_in_original_values_cannot_be_set_to_null_in_property_dictionary
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Non_nullable_property_in_original_values_cannot_be_set_to_null_in_property_dictionary()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Non_nullable_property_in_original_values_cannot_be_set_to_null_in_property_dictionary()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Non_nullable_shadow_property_in_original_values_cannot_be_set_to_null_in_property_dictionary
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Non_nullable_shadow_property_in_original_values_cannot_be_set_to_null_in_property_dictionary
  id: Non_nullable_shadow_property_in_original_values_cannot_be_set_to_null_in_property_dictionary
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Non_nullable_shadow_property_in_original_values_cannot_be_set_to_null_in_property_dictionary()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Non_nullable_shadow_property_in_original_values_cannot_be_set_to_null_in_property_dictionary()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Non_nullable_shadow_property_in_original_values_cannot_be_set_to_null_in_property_dictionary()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Non_nullable_shadow_property_in_original_values_cannot_be_set_to_null_in_property_dictionary
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 1393
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Non_nullable_shadow_property_in_original_values_cannot_be_set_to_null_in_property_dictionary()
    content.vb: >-
      <Fact>

      Public Overridable Sub Non_nullable_shadow_property_in_original_values_cannot_be_set_to_null_in_property_dictionary
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Non_nullable_shadow_property_in_original_values_cannot_be_set_to_null_in_property_dictionary()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Non_nullable_shadow_property_in_original_values_cannot_be_set_to_null_in_property_dictionary()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Non_nullable_property_in_cloned_dictionary_cannot_be_set_to_null
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Non_nullable_property_in_cloned_dictionary_cannot_be_set_to_null
  id: Non_nullable_property_in_cloned_dictionary_cannot_be_set_to_null
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Non_nullable_property_in_cloned_dictionary_cannot_be_set_to_null()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Non_nullable_property_in_cloned_dictionary_cannot_be_set_to_null()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Non_nullable_property_in_cloned_dictionary_cannot_be_set_to_null()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Non_nullable_property_in_cloned_dictionary_cannot_be_set_to_null
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 1409
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Non_nullable_property_in_cloned_dictionary_cannot_be_set_to_null()
    content.vb: >-
      <Fact>

      Public Overridable Sub Non_nullable_property_in_cloned_dictionary_cannot_be_set_to_null
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Non_nullable_property_in_cloned_dictionary_cannot_be_set_to_null()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Non_nullable_property_in_cloned_dictionary_cannot_be_set_to_null()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Property_in_current_values_cannot_be_set_to_instance_of_wrong_type
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Property_in_current_values_cannot_be_set_to_instance_of_wrong_type
  id: Property_in_current_values_cannot_be_set_to_instance_of_wrong_type
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Property_in_current_values_cannot_be_set_to_instance_of_wrong_type()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Property_in_current_values_cannot_be_set_to_instance_of_wrong_type()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Property_in_current_values_cannot_be_set_to_instance_of_wrong_type()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Property_in_current_values_cannot_be_set_to_instance_of_wrong_type
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 1423
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Property_in_current_values_cannot_be_set_to_instance_of_wrong_type()
    content.vb: >-
      <Fact>

      Public Overridable Sub Property_in_current_values_cannot_be_set_to_instance_of_wrong_type
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Property_in_current_values_cannot_be_set_to_instance_of_wrong_type()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Property_in_current_values_cannot_be_set_to_instance_of_wrong_type()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Property_in_original_values_cannot_be_set_to_instance_of_wrong_type
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Property_in_original_values_cannot_be_set_to_instance_of_wrong_type
  id: Property_in_original_values_cannot_be_set_to_instance_of_wrong_type
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Property_in_original_values_cannot_be_set_to_instance_of_wrong_type()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Property_in_original_values_cannot_be_set_to_instance_of_wrong_type()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Property_in_original_values_cannot_be_set_to_instance_of_wrong_type()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Property_in_original_values_cannot_be_set_to_instance_of_wrong_type
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 1429
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Property_in_original_values_cannot_be_set_to_instance_of_wrong_type()
    content.vb: >-
      <Fact>

      Public Overridable Sub Property_in_original_values_cannot_be_set_to_instance_of_wrong_type
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Property_in_original_values_cannot_be_set_to_instance_of_wrong_type()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Property_in_original_values_cannot_be_set_to_instance_of_wrong_type()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Shadow_property_in_current_values_cannot_be_set_to_instance_of_wrong_type
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Shadow_property_in_current_values_cannot_be_set_to_instance_of_wrong_type
  id: Shadow_property_in_current_values_cannot_be_set_to_instance_of_wrong_type
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Shadow_property_in_current_values_cannot_be_set_to_instance_of_wrong_type()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Shadow_property_in_current_values_cannot_be_set_to_instance_of_wrong_type()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Shadow_property_in_current_values_cannot_be_set_to_instance_of_wrong_type()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Shadow_property_in_current_values_cannot_be_set_to_instance_of_wrong_type
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 1449
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Shadow_property_in_current_values_cannot_be_set_to_instance_of_wrong_type()
    content.vb: >-
      <Fact>

      Public Overridable Sub Shadow_property_in_current_values_cannot_be_set_to_instance_of_wrong_type
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Shadow_property_in_current_values_cannot_be_set_to_instance_of_wrong_type()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Shadow_property_in_current_values_cannot_be_set_to_instance_of_wrong_type()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Shadow_property_in_original_values_cannot_be_set_to_instance_of_wrong_type
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Shadow_property_in_original_values_cannot_be_set_to_instance_of_wrong_type
  id: Shadow_property_in_original_values_cannot_be_set_to_instance_of_wrong_type
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Shadow_property_in_original_values_cannot_be_set_to_instance_of_wrong_type()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Shadow_property_in_original_values_cannot_be_set_to_instance_of_wrong_type()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Shadow_property_in_original_values_cannot_be_set_to_instance_of_wrong_type()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Shadow_property_in_original_values_cannot_be_set_to_instance_of_wrong_type
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 1455
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Shadow_property_in_original_values_cannot_be_set_to_instance_of_wrong_type()
    content.vb: >-
      <Fact>

      Public Overridable Sub Shadow_property_in_original_values_cannot_be_set_to_instance_of_wrong_type
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Shadow_property_in_original_values_cannot_be_set_to_instance_of_wrong_type()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Shadow_property_in_original_values_cannot_be_set_to_instance_of_wrong_type()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Property_in_cloned_dictionary_cannot_be_set_to_instance_of_wrong_type
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Property_in_cloned_dictionary_cannot_be_set_to_instance_of_wrong_type
  id: Property_in_cloned_dictionary_cannot_be_set_to_instance_of_wrong_type
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Property_in_cloned_dictionary_cannot_be_set_to_instance_of_wrong_type()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Property_in_cloned_dictionary_cannot_be_set_to_instance_of_wrong_type()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Property_in_cloned_dictionary_cannot_be_set_to_instance_of_wrong_type()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Property_in_cloned_dictionary_cannot_be_set_to_instance_of_wrong_type
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 1474
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Property_in_cloned_dictionary_cannot_be_set_to_instance_of_wrong_type()
    content.vb: >-
      <Fact>

      Public Overridable Sub Property_in_cloned_dictionary_cannot_be_set_to_instance_of_wrong_type
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Property_in_cloned_dictionary_cannot_be_set_to_instance_of_wrong_type()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Property_in_cloned_dictionary_cannot_be_set_to_instance_of_wrong_type()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Primary_key_in_current_values_cannot_be_changed_by_setting_values_from_object
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Primary_key_in_current_values_cannot_be_changed_by_setting_values_from_object
  id: Primary_key_in_current_values_cannot_be_changed_by_setting_values_from_object
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Primary_key_in_current_values_cannot_be_changed_by_setting_values_from_object()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Primary_key_in_current_values_cannot_be_changed_by_setting_values_from_object()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Primary_key_in_current_values_cannot_be_changed_by_setting_values_from_object()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Primary_key_in_current_values_cannot_be_changed_by_setting_values_from_object
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 1491
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Primary_key_in_current_values_cannot_be_changed_by_setting_values_from_object()
    content.vb: >-
      <Fact>

      Public Overridable Sub Primary_key_in_current_values_cannot_be_changed_by_setting_values_from_object
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Primary_key_in_current_values_cannot_be_changed_by_setting_values_from_object()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Primary_key_in_current_values_cannot_be_changed_by_setting_values_from_object()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Primary_key_in_original_values_cannot_be_changed_by_setting_values_from_object
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Primary_key_in_original_values_cannot_be_changed_by_setting_values_from_object
  id: Primary_key_in_original_values_cannot_be_changed_by_setting_values_from_object
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Primary_key_in_original_values_cannot_be_changed_by_setting_values_from_object()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Primary_key_in_original_values_cannot_be_changed_by_setting_values_from_object()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Primary_key_in_original_values_cannot_be_changed_by_setting_values_from_object()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Primary_key_in_original_values_cannot_be_changed_by_setting_values_from_object
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 1497
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Primary_key_in_original_values_cannot_be_changed_by_setting_values_from_object()
    content.vb: >-
      <Fact>

      Public Overridable Sub Primary_key_in_original_values_cannot_be_changed_by_setting_values_from_object
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Primary_key_in_original_values_cannot_be_changed_by_setting_values_from_object()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Primary_key_in_original_values_cannot_be_changed_by_setting_values_from_object()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Primary_key_in_current_values_cannot_be_changed_by_setting_values_from_another_dictionary
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Primary_key_in_current_values_cannot_be_changed_by_setting_values_from_another_dictionary
  id: Primary_key_in_current_values_cannot_be_changed_by_setting_values_from_another_dictionary
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Primary_key_in_current_values_cannot_be_changed_by_setting_values_from_another_dictionary()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Primary_key_in_current_values_cannot_be_changed_by_setting_values_from_another_dictionary()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Primary_key_in_current_values_cannot_be_changed_by_setting_values_from_another_dictionary()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Primary_key_in_current_values_cannot_be_changed_by_setting_values_from_another_dictionary
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 1519
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Primary_key_in_current_values_cannot_be_changed_by_setting_values_from_another_dictionary()
    content.vb: >-
      <Fact>

      Public Overridable Sub Primary_key_in_current_values_cannot_be_changed_by_setting_values_from_another_dictionary
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Primary_key_in_current_values_cannot_be_changed_by_setting_values_from_another_dictionary()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Primary_key_in_current_values_cannot_be_changed_by_setting_values_from_another_dictionary()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Primary_key_in_original_values_cannot_be_changed_by_setting_values_from_another_dictionary
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Primary_key_in_original_values_cannot_be_changed_by_setting_values_from_another_dictionary
  id: Primary_key_in_original_values_cannot_be_changed_by_setting_values_from_another_dictionary
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Primary_key_in_original_values_cannot_be_changed_by_setting_values_from_another_dictionary()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Primary_key_in_original_values_cannot_be_changed_by_setting_values_from_another_dictionary()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Primary_key_in_original_values_cannot_be_changed_by_setting_values_from_another_dictionary()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Primary_key_in_original_values_cannot_be_changed_by_setting_values_from_another_dictionary
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 1525
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Primary_key_in_original_values_cannot_be_changed_by_setting_values_from_another_dictionary()
    content.vb: >-
      <Fact>

      Public Overridable Sub Primary_key_in_original_values_cannot_be_changed_by_setting_values_from_another_dictionary
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Primary_key_in_original_values_cannot_be_changed_by_setting_values_from_another_dictionary()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Primary_key_in_original_values_cannot_be_changed_by_setting_values_from_another_dictionary()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Properties_for_current_values_returns_properties
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Properties_for_current_values_returns_properties
  id: Properties_for_current_values_returns_properties
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Properties_for_current_values_returns_properties()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Properties_for_current_values_returns_properties()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Properties_for_current_values_returns_properties()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Properties_for_current_values_returns_properties
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 1548
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task Properties_for_current_values_returns_properties()
    content.vb: >-
      <Fact>

      Public Overridable Function Properties_for_current_values_returns_properties As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Properties_for_current_values_returns_properties()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Properties_for_current_values_returns_properties()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Properties_for_original_values_returns_properties
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Properties_for_original_values_returns_properties
  id: Properties_for_original_values_returns_properties
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Properties_for_original_values_returns_properties()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Properties_for_original_values_returns_properties()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Properties_for_original_values_returns_properties()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Properties_for_original_values_returns_properties
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 1554
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task Properties_for_original_values_returns_properties()
    content.vb: >-
      <Fact>

      Public Overridable Function Properties_for_original_values_returns_properties As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Properties_for_original_values_returns_properties()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Properties_for_original_values_returns_properties()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Properties_for_store_values_returns_properties
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Properties_for_store_values_returns_properties
  id: Properties_for_store_values_returns_properties
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Properties_for_store_values_returns_properties()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Properties_for_store_values_returns_properties()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Properties_for_store_values_returns_properties()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Properties_for_store_values_returns_properties
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 1560
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task Properties_for_store_values_returns_properties()
    content.vb: >-
      <Fact>

      Public Overridable Function Properties_for_store_values_returns_properties As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Properties_for_store_values_returns_properties()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Properties_for_store_values_returns_properties()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Properties_for_store_values_returns_properties_asynchronously
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Properties_for_store_values_returns_properties_asynchronously
  id: Properties_for_store_values_returns_properties_asynchronously
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Properties_for_store_values_returns_properties_asynchronously()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Properties_for_store_values_returns_properties_asynchronously()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Properties_for_store_values_returns_properties_asynchronously()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Properties_for_store_values_returns_properties_asynchronously
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 1566
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task Properties_for_store_values_returns_properties_asynchronously()
    content.vb: >-
      <Fact>

      Public Overridable Function Properties_for_store_values_returns_properties_asynchronously As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Properties_for_store_values_returns_properties_asynchronously()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Properties_for_store_values_returns_properties_asynchronously()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Properties_for_cloned_dictionary_returns_properties
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Properties_for_cloned_dictionary_returns_properties
  id: Properties_for_cloned_dictionary_returns_properties
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Properties_for_cloned_dictionary_returns_properties()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Properties_for_cloned_dictionary_returns_properties()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Properties_for_cloned_dictionary_returns_properties()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Properties_for_cloned_dictionary_returns_properties
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 1572
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task Properties_for_cloned_dictionary_returns_properties()
    content.vb: >-
      <Fact>

      Public Overridable Function Properties_for_cloned_dictionary_returns_properties As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Properties_for_cloned_dictionary_returns_properties()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Properties_for_cloned_dictionary_returns_properties()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.GetDatabaseValues_for_entity_not_in_the_store_returns_null
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.GetDatabaseValues_for_entity_not_in_the_store_returns_null
  id: GetDatabaseValues_for_entity_not_in_the_store_returns_null
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: GetDatabaseValues_for_entity_not_in_the_store_returns_null()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.GetDatabaseValues_for_entity_not_in_the_store_returns_null()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.GetDatabaseValues_for_entity_not_in_the_store_returns_null()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetDatabaseValues_for_entity_not_in_the_store_returns_null
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 1591
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task GetDatabaseValues_for_entity_not_in_the_store_returns_null()
    content.vb: >-
      <Fact>

      Public Overridable Function GetDatabaseValues_for_entity_not_in_the_store_returns_null As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).GetDatabaseValues_for_entity_not_in_the_store_returns_null()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).GetDatabaseValues_for_entity_not_in_the_store_returns_null()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.GetDatabaseValuesAsync_for_entity_not_in_the_store_returns_null
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.GetDatabaseValuesAsync_for_entity_not_in_the_store_returns_null
  id: GetDatabaseValuesAsync_for_entity_not_in_the_store_returns_null
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: GetDatabaseValuesAsync_for_entity_not_in_the_store_returns_null()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.GetDatabaseValuesAsync_for_entity_not_in_the_store_returns_null()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.GetDatabaseValuesAsync_for_entity_not_in_the_store_returns_null()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetDatabaseValuesAsync_for_entity_not_in_the_store_returns_null
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 1597
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task GetDatabaseValuesAsync_for_entity_not_in_the_store_returns_null()
    content.vb: >-
      <Fact>

      Public Overridable Function GetDatabaseValuesAsync_for_entity_not_in_the_store_returns_null As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).GetDatabaseValuesAsync_for_entity_not_in_the_store_returns_null()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).GetDatabaseValuesAsync_for_entity_not_in_the_store_returns_null()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.NonGeneric_GetDatabaseValues_for_entity_not_in_the_store_returns_null
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.NonGeneric_GetDatabaseValues_for_entity_not_in_the_store_returns_null
  id: NonGeneric_GetDatabaseValues_for_entity_not_in_the_store_returns_null
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: NonGeneric_GetDatabaseValues_for_entity_not_in_the_store_returns_null()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.NonGeneric_GetDatabaseValues_for_entity_not_in_the_store_returns_null()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.NonGeneric_GetDatabaseValues_for_entity_not_in_the_store_returns_null()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: NonGeneric_GetDatabaseValues_for_entity_not_in_the_store_returns_null
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 1619
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task NonGeneric_GetDatabaseValues_for_entity_not_in_the_store_returns_null()
    content.vb: >-
      <Fact>

      Public Overridable Function NonGeneric_GetDatabaseValues_for_entity_not_in_the_store_returns_null As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).NonGeneric_GetDatabaseValues_for_entity_not_in_the_store_returns_null()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).NonGeneric_GetDatabaseValues_for_entity_not_in_the_store_returns_null()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.NonGeneric_GetDatabaseValuesAsync_for_entity_not_in_the_store_returns_null
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.NonGeneric_GetDatabaseValuesAsync_for_entity_not_in_the_store_returns_null
  id: NonGeneric_GetDatabaseValuesAsync_for_entity_not_in_the_store_returns_null
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: NonGeneric_GetDatabaseValuesAsync_for_entity_not_in_the_store_returns_null()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.NonGeneric_GetDatabaseValuesAsync_for_entity_not_in_the_store_returns_null()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.NonGeneric_GetDatabaseValuesAsync_for_entity_not_in_the_store_returns_null()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: NonGeneric_GetDatabaseValuesAsync_for_entity_not_in_the_store_returns_null
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 1625
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task NonGeneric_GetDatabaseValuesAsync_for_entity_not_in_the_store_returns_null()
    content.vb: >-
      <Fact>

      Public Overridable Function NonGeneric_GetDatabaseValuesAsync_for_entity_not_in_the_store_returns_null As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).NonGeneric_GetDatabaseValuesAsync_for_entity_not_in_the_store_returns_null()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).NonGeneric_GetDatabaseValuesAsync_for_entity_not_in_the_store_returns_null()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.GetDatabaseValues_for_derived_entity_not_in_the_store_returns_null
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.GetDatabaseValues_for_derived_entity_not_in_the_store_returns_null
  id: GetDatabaseValues_for_derived_entity_not_in_the_store_returns_null
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: GetDatabaseValues_for_derived_entity_not_in_the_store_returns_null()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.GetDatabaseValues_for_derived_entity_not_in_the_store_returns_null()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.GetDatabaseValues_for_derived_entity_not_in_the_store_returns_null()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetDatabaseValues_for_derived_entity_not_in_the_store_returns_null
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 1647
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task GetDatabaseValues_for_derived_entity_not_in_the_store_returns_null()
    content.vb: >-
      <Fact>

      Public Overridable Function GetDatabaseValues_for_derived_entity_not_in_the_store_returns_null As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).GetDatabaseValues_for_derived_entity_not_in_the_store_returns_null()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).GetDatabaseValues_for_derived_entity_not_in_the_store_returns_null()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.GetDatabaseValuesAsync_for_derived_entity_not_in_the_store_returns_null
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.GetDatabaseValuesAsync_for_derived_entity_not_in_the_store_returns_null
  id: GetDatabaseValuesAsync_for_derived_entity_not_in_the_store_returns_null
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: GetDatabaseValuesAsync_for_derived_entity_not_in_the_store_returns_null()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.GetDatabaseValuesAsync_for_derived_entity_not_in_the_store_returns_null()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.GetDatabaseValuesAsync_for_derived_entity_not_in_the_store_returns_null()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetDatabaseValuesAsync_for_derived_entity_not_in_the_store_returns_null
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 1653
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task GetDatabaseValuesAsync_for_derived_entity_not_in_the_store_returns_null()
    content.vb: >-
      <Fact>

      Public Overridable Function GetDatabaseValuesAsync_for_derived_entity_not_in_the_store_returns_null As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).GetDatabaseValuesAsync_for_derived_entity_not_in_the_store_returns_null()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).GetDatabaseValuesAsync_for_derived_entity_not_in_the_store_returns_null()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.NonGeneric_GetDatabaseValues_for_derived_entity_not_in_the_store_returns_null
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.NonGeneric_GetDatabaseValues_for_derived_entity_not_in_the_store_returns_null
  id: NonGeneric_GetDatabaseValues_for_derived_entity_not_in_the_store_returns_null
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: NonGeneric_GetDatabaseValues_for_derived_entity_not_in_the_store_returns_null()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.NonGeneric_GetDatabaseValues_for_derived_entity_not_in_the_store_returns_null()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.NonGeneric_GetDatabaseValues_for_derived_entity_not_in_the_store_returns_null()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: NonGeneric_GetDatabaseValues_for_derived_entity_not_in_the_store_returns_null
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 1678
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task NonGeneric_GetDatabaseValues_for_derived_entity_not_in_the_store_returns_null()
    content.vb: >-
      <Fact>

      Public Overridable Function NonGeneric_GetDatabaseValues_for_derived_entity_not_in_the_store_returns_null As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).NonGeneric_GetDatabaseValues_for_derived_entity_not_in_the_store_returns_null()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).NonGeneric_GetDatabaseValues_for_derived_entity_not_in_the_store_returns_null()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.NonGeneric_GetDatabaseValuesAsync_for_derived_entity_not_in_the_store_returns_null
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.NonGeneric_GetDatabaseValuesAsync_for_derived_entity_not_in_the_store_returns_null
  id: NonGeneric_GetDatabaseValuesAsync_for_derived_entity_not_in_the_store_returns_null
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: NonGeneric_GetDatabaseValuesAsync_for_derived_entity_not_in_the_store_returns_null()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.NonGeneric_GetDatabaseValuesAsync_for_derived_entity_not_in_the_store_returns_null()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.NonGeneric_GetDatabaseValuesAsync_for_derived_entity_not_in_the_store_returns_null()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: NonGeneric_GetDatabaseValuesAsync_for_derived_entity_not_in_the_store_returns_null
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 1684
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task NonGeneric_GetDatabaseValuesAsync_for_derived_entity_not_in_the_store_returns_null()
    content.vb: >-
      <Fact>

      Public Overridable Function NonGeneric_GetDatabaseValuesAsync_for_derived_entity_not_in_the_store_returns_null As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).NonGeneric_GetDatabaseValuesAsync_for_derived_entity_not_in_the_store_returns_null()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).NonGeneric_GetDatabaseValuesAsync_for_derived_entity_not_in_the_store_returns_null()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.GetDatabaseValues_for_the_wrong_type_in_the_store_returns_null
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.GetDatabaseValues_for_the_wrong_type_in_the_store_returns_null
  id: GetDatabaseValues_for_the_wrong_type_in_the_store_returns_null
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: GetDatabaseValues_for_the_wrong_type_in_the_store_returns_null()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.GetDatabaseValues_for_the_wrong_type_in_the_store_returns_null()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.GetDatabaseValues_for_the_wrong_type_in_the_store_returns_null()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetDatabaseValues_for_the_wrong_type_in_the_store_returns_null
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 1710
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task GetDatabaseValues_for_the_wrong_type_in_the_store_returns_null()
    content.vb: >-
      <Fact>

      Public Overridable Function GetDatabaseValues_for_the_wrong_type_in_the_store_returns_null As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).GetDatabaseValues_for_the_wrong_type_in_the_store_returns_null()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).GetDatabaseValues_for_the_wrong_type_in_the_store_returns_null()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.GetDatabaseValuesAsync_for_the_wrong_type_in_the_store_returns_null
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.GetDatabaseValuesAsync_for_the_wrong_type_in_the_store_returns_null
  id: GetDatabaseValuesAsync_for_the_wrong_type_in_the_store_returns_null
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: GetDatabaseValuesAsync_for_the_wrong_type_in_the_store_returns_null()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.GetDatabaseValuesAsync_for_the_wrong_type_in_the_store_returns_null()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.GetDatabaseValuesAsync_for_the_wrong_type_in_the_store_returns_null()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetDatabaseValuesAsync_for_the_wrong_type_in_the_store_returns_null
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 1716
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task GetDatabaseValuesAsync_for_the_wrong_type_in_the_store_returns_null()
    content.vb: >-
      <Fact>

      Public Overridable Function GetDatabaseValuesAsync_for_the_wrong_type_in_the_store_returns_null As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).GetDatabaseValuesAsync_for_the_wrong_type_in_the_store_returns_null()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).GetDatabaseValuesAsync_for_the_wrong_type_in_the_store_returns_null()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.NonGeneric_GetDatabaseValues_for_the_wrong_type_in_the_store_throws
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.NonGeneric_GetDatabaseValues_for_the_wrong_type_in_the_store_throws
  id: NonGeneric_GetDatabaseValues_for_the_wrong_type_in_the_store_throws
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: NonGeneric_GetDatabaseValues_for_the_wrong_type_in_the_store_throws()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.NonGeneric_GetDatabaseValues_for_the_wrong_type_in_the_store_throws()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.NonGeneric_GetDatabaseValues_for_the_wrong_type_in_the_store_throws()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: NonGeneric_GetDatabaseValues_for_the_wrong_type_in_the_store_throws
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 1747
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task NonGeneric_GetDatabaseValues_for_the_wrong_type_in_the_store_throws()
    content.vb: >-
      <Fact>

      Public Overridable Function NonGeneric_GetDatabaseValues_for_the_wrong_type_in_the_store_throws As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).NonGeneric_GetDatabaseValues_for_the_wrong_type_in_the_store_throws()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).NonGeneric_GetDatabaseValues_for_the_wrong_type_in_the_store_throws()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.NonGeneric_GetDatabaseValuesAsync_for_the_wrong_type_in_the_store_throws
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.NonGeneric_GetDatabaseValuesAsync_for_the_wrong_type_in_the_store_throws
  id: NonGeneric_GetDatabaseValuesAsync_for_the_wrong_type_in_the_store_throws
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: NonGeneric_GetDatabaseValuesAsync_for_the_wrong_type_in_the_store_throws()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.NonGeneric_GetDatabaseValuesAsync_for_the_wrong_type_in_the_store_throws()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.NonGeneric_GetDatabaseValuesAsync_for_the_wrong_type_in_the_store_throws()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: NonGeneric_GetDatabaseValuesAsync_for_the_wrong_type_in_the_store_throws
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 1753
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task NonGeneric_GetDatabaseValuesAsync_for_the_wrong_type_in_the_store_throws()
    content.vb: >-
      <Fact>

      Public Overridable Function NonGeneric_GetDatabaseValuesAsync_for_the_wrong_type_in_the_store_throws As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).NonGeneric_GetDatabaseValuesAsync_for_the_wrong_type_in_the_store_throws()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).NonGeneric_GetDatabaseValuesAsync_for_the_wrong_type_in_the_store_throws()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Store_values_really_are_store_values_not_current_or_original_values
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Store_values_really_are_store_values_not_current_or_original_values
  id: Store_values_really_are_store_values_not_current_or_original_values
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Store_values_really_are_store_values_not_current_or_original_values()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Store_values_really_are_store_values_not_current_or_original_values()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Store_values_really_are_store_values_not_current_or_original_values()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Store_values_really_are_store_values_not_current_or_original_values
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 1784
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task Store_values_really_are_store_values_not_current_or_original_values()
    content.vb: >-
      <Fact>

      Public Overridable Function Store_values_really_are_store_values_not_current_or_original_values As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Store_values_really_are_store_values_not_current_or_original_values()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Store_values_really_are_store_values_not_current_or_original_values()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Store_values_really_are_store_values_not_current_or_original_values_async
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Store_values_really_are_store_values_not_current_or_original_values_async
  id: Store_values_really_are_store_values_not_current_or_original_values_async
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Store_values_really_are_store_values_not_current_or_original_values_async()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Store_values_really_are_store_values_not_current_or_original_values_async()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Store_values_really_are_store_values_not_current_or_original_values_async()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Store_values_really_are_store_values_not_current_or_original_values_async
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 1790
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual Task Store_values_really_are_store_values_not_current_or_original_values_async()
    content.vb: >-
      <Fact>

      Public Overridable Function Store_values_really_are_store_values_not_current_or_original_values_async As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Store_values_really_are_store_values_not_current_or_original_values_async()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Store_values_really_are_store_values_not_current_or_original_values_async()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Setting_store_values_does_not_change_current_or_original_values
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Setting_store_values_does_not_change_current_or_original_values
  id: Setting_store_values_does_not_change_current_or_original_values
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Setting_store_values_does_not_change_current_or_original_values()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Setting_store_values_does_not_change_current_or_original_values()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Setting_store_values_does_not_change_current_or_original_values()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Setting_store_values_does_not_change_current_or_original_values
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 1812
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Setting_store_values_does_not_change_current_or_original_values()
    content.vb: >-
      <Fact>

      Public Overridable Sub Setting_store_values_does_not_change_current_or_original_values
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Setting_store_values_does_not_change_current_or_original_values()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Setting_store_values_does_not_change_current_or_original_values()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.CreateContext
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.CreateContext
  id: CreateContext
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: CreateContext()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.CreateContext()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.CreateContext()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateContext
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 1983
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: protected PropertyValuesTestBase<TTestStore, TFixture>.AdvancedPatternsMasterContext CreateContext()
    content.vb: Protected Function CreateContext As PropertyValuesTestBase(Of TTestStore, TFixture).AdvancedPatternsMasterContext
    return:
      type: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.AdvancedPatternsMasterContext
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).CreateContext()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).CreateContext()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Dispose
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Dispose
  id: Dispose
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Dispose()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Dispose()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Dispose
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 1986
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual void Dispose()
    content.vb: Public Overridable Sub Dispose
  implements:
  - System.IDisposable.Dispose
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Dispose()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Dispose()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Fixture
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Fixture
  id: Fixture
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: Fixture
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Fixture
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Fixture
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Fixture
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 1988
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: protected TFixture Fixture { get; }
    content.vb: Protected ReadOnly Property Fixture As TFixture
    parameters: []
    return:
      type: '{TFixture}'
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Fixture
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Fixture
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.TestStore
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.TestStore
  id: TestStore
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2
  langs:
  - csharp
  - vb
  name: TestStore
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.TestStore
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.TestStore
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: TestStore
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 1990
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: protected TTestStore TestStore { get; }
    content.vb: Protected ReadOnly Property TestStore As TTestStore
    parameters: []
    return:
      type: '{TTestStore}'
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).TestStore
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).TestStore
references:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests
  commentId: N:Microsoft.EntityFrameworkCore.Specification.Tests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Specification.Tests
  nameWithType: Microsoft.EntityFrameworkCore.Specification.Tests
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Xunit.IClassFixture{{TFixture}}
  commentId: T:Xunit.IClassFixture{`0}
  parent: Xunit
  definition: Xunit.IClassFixture`1
  name: IClassFixture<TFixture>
  nameWithType: IClassFixture<TFixture>
  fullName: Xunit.IClassFixture<TFixture>
  nameWithType.vb: IClassFixture(Of TFixture)
  fullname.vb: Xunit.IClassFixture(Of TFixture)
  name.vb: IClassFixture(Of TFixture)
  spec.csharp:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    nameWithType: IClassFixture
    fullName: Xunit.IClassFixture
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TFixture
    nameWithType: TFixture
    fullName: TFixture
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    nameWithType: IClassFixture
    fullName: Xunit.IClassFixture
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TFixture
    nameWithType: TFixture
    fullName: TFixture
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Xunit.IClassFixture`1
  commentId: T:Xunit.IClassFixture`1
  isExternal: true
  name: IClassFixture<TFixture>
  nameWithType: IClassFixture<TFixture>
  fullName: Xunit.IClassFixture<TFixture>
  nameWithType.vb: IClassFixture(Of TFixture)
  fullname.vb: Xunit.IClassFixture(Of TFixture)
  name.vb: IClassFixture(Of TFixture)
  spec.csharp:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    nameWithType: IClassFixture
    fullName: Xunit.IClassFixture
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TFixture
    nameWithType: TFixture
    fullName: TFixture
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    nameWithType: IClassFixture
    fullName: Xunit.IClassFixture
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TFixture
    nameWithType: TFixture
    fullName: TFixture
  - name: )
    nameWithType: )
    fullName: )
- uid: Xunit
  commentId: N:Xunit
  isExternal: false
  name: Xunit
  nameWithType: Xunit
  fullName: Xunit
- uid: '{TFixture}'
  commentId: '!:TFixture'
  definition: TFixture
  name: TFixture
  nameWithType: TFixture
  fullName: TFixture
- uid: TFixture
  isExternal: false
  name: TFixture
  nameWithType: TFixture
  fullName: TFixture
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.AdvancedPatternsMasterContext
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.AdvancedPatternsMasterContext
  parent: Microsoft.EntityFrameworkCore.Specification.Tests
  isExternal: false
  name: PropertyValuesTestBase.AdvancedPatternsMasterContext<>
  nameWithType: PropertyValuesTestBase.AdvancedPatternsMasterContext<>
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase.AdvancedPatternsMasterContext<>
  nameWithType.vb: PropertyValuesTestBase.AdvancedPatternsMasterContext(Of )
  fullname.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase.AdvancedPatternsMasterContext(Of )
  name.vb: PropertyValuesTestBase.AdvancedPatternsMasterContext(Of )
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.AdvancedPatternsMasterContext
    name: PropertyValuesTestBase.AdvancedPatternsMasterContext
    nameWithType: PropertyValuesTestBase.AdvancedPatternsMasterContext
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase.AdvancedPatternsMasterContext
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.AdvancedPatternsMasterContext
    name: PropertyValuesTestBase.AdvancedPatternsMasterContext
    nameWithType: PropertyValuesTestBase.AdvancedPatternsMasterContext
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase.AdvancedPatternsMasterContext
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TTestStore}'
  commentId: '!:TTestStore'
  definition: TTestStore
  name: TTestStore
  nameWithType: TTestStore
  fullName: TTestStore
- uid: TTestStore
  isExternal: false
  name: TTestStore
  nameWithType: TTestStore
  fullName: TTestStore
