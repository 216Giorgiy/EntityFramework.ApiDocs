### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Query.Internal.AsyncIncludeCollectionIterator
  commentId: T:Microsoft.EntityFrameworkCore.Query.Internal.AsyncIncludeCollectionIterator
  id: AsyncIncludeCollectionIterator
  parent: Microsoft.EntityFrameworkCore.Query.Internal
  children:
  - Microsoft.EntityFrameworkCore.Query.Internal.AsyncIncludeCollectionIterator.#ctor(IAsyncEnumerator{Microsoft.EntityFrameworkCore.Storage.ValueBuffer})
  - Microsoft.EntityFrameworkCore.Query.Internal.AsyncIncludeCollectionIterator.Dispose
  - Microsoft.EntityFrameworkCore.Query.Internal.AsyncIncludeCollectionIterator.GetRelatedValues(Microsoft.EntityFrameworkCore.Query.Internal.IIncludeKeyComparer)
  langs:
  - csharp
  - vb
  name: AsyncIncludeCollectionIterator
  nameWithType: AsyncIncludeCollectionIterator
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.AsyncIncludeCollectionIterator
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/Internal/AsyncIncludeCollectionIterator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AsyncIncludeCollectionIterator
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/Internal/AsyncIncludeCollectionIterator.cs
    startLine: 16
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public class AsyncIncludeCollectionIterator : IDisposable'
    content.vb: >-
      Public Class AsyncIncludeCollectionIterator
          Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Query.Internal.AsyncIncludeCollectionIterator.#ctor(IAsyncEnumerator{Microsoft.EntityFrameworkCore.Storage.ValueBuffer})
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.AsyncIncludeCollectionIterator.#ctor(IAsyncEnumerator{Microsoft.EntityFrameworkCore.Storage.ValueBuffer})
  id: '#ctor(IAsyncEnumerator{Microsoft.EntityFrameworkCore.Storage.ValueBuffer})'
  parent: Microsoft.EntityFrameworkCore.Query.Internal.AsyncIncludeCollectionIterator
  langs:
  - csharp
  - vb
  name: AsyncIncludeCollectionIterator(IAsyncEnumerator<ValueBuffer>)
  nameWithType: AsyncIncludeCollectionIterator.AsyncIncludeCollectionIterator(IAsyncEnumerator<ValueBuffer>)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.AsyncIncludeCollectionIterator.AsyncIncludeCollectionIterator(IAsyncEnumerator<Microsoft.EntityFrameworkCore.Storage.ValueBuffer>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/Internal/AsyncIncludeCollectionIterator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/Internal/AsyncIncludeCollectionIterator.cs
    startLine: 27
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public AsyncIncludeCollectionIterator(IAsyncEnumerator<ValueBuffer> relatedValuesEnumerator)
    content.vb: Public Sub New(relatedValuesEnumerator As IAsyncEnumerator(Of ValueBuffer))
    parameters:
    - id: relatedValuesEnumerator
      type: IAsyncEnumerator{Microsoft.EntityFrameworkCore.Storage.ValueBuffer}
  overload: Microsoft.EntityFrameworkCore.Query.Internal.AsyncIncludeCollectionIterator.#ctor*
  nameWithType.vb: AsyncIncludeCollectionIterator.AsyncIncludeCollectionIterator(IAsyncEnumerator(Of ValueBuffer))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Query.Internal.AsyncIncludeCollectionIterator.AsyncIncludeCollectionIterator(IAsyncEnumerator(Of Microsoft.EntityFrameworkCore.Storage.ValueBuffer))
  name.vb: AsyncIncludeCollectionIterator(IAsyncEnumerator(Of ValueBuffer))
- uid: Microsoft.EntityFrameworkCore.Query.Internal.AsyncIncludeCollectionIterator.GetRelatedValues(Microsoft.EntityFrameworkCore.Query.Internal.IIncludeKeyComparer)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.AsyncIncludeCollectionIterator.GetRelatedValues(Microsoft.EntityFrameworkCore.Query.Internal.IIncludeKeyComparer)
  id: GetRelatedValues(Microsoft.EntityFrameworkCore.Query.Internal.IIncludeKeyComparer)
  parent: Microsoft.EntityFrameworkCore.Query.Internal.AsyncIncludeCollectionIterator
  langs:
  - csharp
  - vb
  name: GetRelatedValues(IIncludeKeyComparer)
  nameWithType: AsyncIncludeCollectionIterator.GetRelatedValues(IIncludeKeyComparer)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.AsyncIncludeCollectionIterator.GetRelatedValues(Microsoft.EntityFrameworkCore.Query.Internal.IIncludeKeyComparer)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/Internal/AsyncIncludeCollectionIterator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetRelatedValues
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/Internal/AsyncIncludeCollectionIterator.cs
    startLine: 37
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual IAsyncEnumerable<ValueBuffer> GetRelatedValues(IIncludeKeyComparer keyComparer)
    content.vb: Public Overridable Function GetRelatedValues(keyComparer As IIncludeKeyComparer) As IAsyncEnumerable(Of ValueBuffer)
    parameters:
    - id: keyComparer
      type: Microsoft.EntityFrameworkCore.Query.Internal.IIncludeKeyComparer
    return:
      type: IAsyncEnumerable{Microsoft.EntityFrameworkCore.Storage.ValueBuffer}
  overload: Microsoft.EntityFrameworkCore.Query.Internal.AsyncIncludeCollectionIterator.GetRelatedValues*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Query.Internal.AsyncIncludeCollectionIterator.Dispose
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.AsyncIncludeCollectionIterator.Dispose
  id: Dispose
  parent: Microsoft.EntityFrameworkCore.Query.Internal.AsyncIncludeCollectionIterator
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: AsyncIncludeCollectionIterator.Dispose()
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.AsyncIncludeCollectionIterator.Dispose()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/Internal/AsyncIncludeCollectionIterator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Dispose
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/Internal/AsyncIncludeCollectionIterator.cs
    startLine: 105
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual void Dispose()
    content.vb: Public Overridable Sub Dispose
  overload: Microsoft.EntityFrameworkCore.Query.Internal.AsyncIncludeCollectionIterator.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.EntityFrameworkCore.Query.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Query.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Query.Internal
  fullName: Microsoft.EntityFrameworkCore.Query.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Query.Internal.AsyncIncludeCollectionIterator.#ctor*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.Internal.AsyncIncludeCollectionIterator.#ctor
  isExternal: false
  name: AsyncIncludeCollectionIterator
  nameWithType: AsyncIncludeCollectionIterator.AsyncIncludeCollectionIterator
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.AsyncIncludeCollectionIterator.AsyncIncludeCollectionIterator
- uid: IAsyncEnumerator{Microsoft.EntityFrameworkCore.Storage.ValueBuffer}
  commentId: '!:IAsyncEnumerator{Microsoft.EntityFrameworkCore.Storage.ValueBuffer}'
  definition: IAsyncEnumerator`1
  name: IAsyncEnumerator<ValueBuffer>
  nameWithType: IAsyncEnumerator<ValueBuffer>
  fullName: IAsyncEnumerator<Microsoft.EntityFrameworkCore.Storage.ValueBuffer>
  nameWithType.vb: IAsyncEnumerator(Of ValueBuffer)
  fullname.vb: IAsyncEnumerator(Of Microsoft.EntityFrameworkCore.Storage.ValueBuffer)
  name.vb: IAsyncEnumerator(Of ValueBuffer)
  spec.csharp:
  - uid: IAsyncEnumerator`1
    name: IAsyncEnumerator
    nameWithType: IAsyncEnumerator
    fullName: IAsyncEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Storage.ValueBuffer
    name: ValueBuffer
    nameWithType: ValueBuffer
    fullName: Microsoft.EntityFrameworkCore.Storage.ValueBuffer
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IAsyncEnumerator`1
    name: IAsyncEnumerator
    nameWithType: IAsyncEnumerator
    fullName: IAsyncEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Storage.ValueBuffer
    name: ValueBuffer
    nameWithType: ValueBuffer
    fullName: Microsoft.EntityFrameworkCore.Storage.ValueBuffer
  - name: )
    nameWithType: )
    fullName: )
- uid: IAsyncEnumerator`1
  isExternal: true
  name: IAsyncEnumerator<>
  nameWithType: IAsyncEnumerator<>
  fullName: IAsyncEnumerator<>
  nameWithType.vb: IAsyncEnumerator(Of )
  fullname.vb: IAsyncEnumerator(Of )
  name.vb: IAsyncEnumerator(Of )
  spec.csharp:
  - uid: IAsyncEnumerator`1
    name: IAsyncEnumerator
    nameWithType: IAsyncEnumerator
    fullName: IAsyncEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IAsyncEnumerator`1
    name: IAsyncEnumerator
    nameWithType: IAsyncEnumerator
    fullName: IAsyncEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.Internal.AsyncIncludeCollectionIterator.GetRelatedValues*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.Internal.AsyncIncludeCollectionIterator.GetRelatedValues
  isExternal: false
  name: GetRelatedValues
  nameWithType: AsyncIncludeCollectionIterator.GetRelatedValues
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.AsyncIncludeCollectionIterator.GetRelatedValues
- uid: Microsoft.EntityFrameworkCore.Query.Internal.IIncludeKeyComparer
  commentId: T:Microsoft.EntityFrameworkCore.Query.Internal.IIncludeKeyComparer
  parent: Microsoft.EntityFrameworkCore.Query.Internal
  isExternal: false
  name: IIncludeKeyComparer
  nameWithType: IIncludeKeyComparer
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.IIncludeKeyComparer
- uid: IAsyncEnumerable{Microsoft.EntityFrameworkCore.Storage.ValueBuffer}
  commentId: '!:IAsyncEnumerable{Microsoft.EntityFrameworkCore.Storage.ValueBuffer}'
  definition: IAsyncEnumerable`1
  name: IAsyncEnumerable<ValueBuffer>
  nameWithType: IAsyncEnumerable<ValueBuffer>
  fullName: IAsyncEnumerable<Microsoft.EntityFrameworkCore.Storage.ValueBuffer>
  nameWithType.vb: IAsyncEnumerable(Of ValueBuffer)
  fullname.vb: IAsyncEnumerable(Of Microsoft.EntityFrameworkCore.Storage.ValueBuffer)
  name.vb: IAsyncEnumerable(Of ValueBuffer)
  spec.csharp:
  - uid: IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: IAsyncEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Storage.ValueBuffer
    name: ValueBuffer
    nameWithType: ValueBuffer
    fullName: Microsoft.EntityFrameworkCore.Storage.ValueBuffer
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: IAsyncEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Storage.ValueBuffer
    name: ValueBuffer
    nameWithType: ValueBuffer
    fullName: Microsoft.EntityFrameworkCore.Storage.ValueBuffer
  - name: )
    nameWithType: )
    fullName: )
- uid: IAsyncEnumerable`1
  isExternal: true
  name: IAsyncEnumerable<>
  nameWithType: IAsyncEnumerable<>
  fullName: IAsyncEnumerable<>
  nameWithType.vb: IAsyncEnumerable(Of )
  fullname.vb: IAsyncEnumerable(Of )
  name.vb: IAsyncEnumerable(Of )
  spec.csharp:
  - uid: IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: IAsyncEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: IAsyncEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.Internal.AsyncIncludeCollectionIterator.Dispose*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.Internal.AsyncIncludeCollectionIterator.Dispose
  isExternal: false
  name: Dispose
  nameWithType: AsyncIncludeCollectionIterator.Dispose
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.AsyncIncludeCollectionIterator.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
