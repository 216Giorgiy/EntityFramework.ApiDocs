### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.One
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.One
  id: One
  parent: Microsoft.EntityFrameworkCore.Specification.Tests
  children:
  - Microsoft.EntityFrameworkCore.Specification.Tests.One.IgnoredProperty
  - Microsoft.EntityFrameworkCore.Specification.Tests.One.MaxLengthProperty
  - Microsoft.EntityFrameworkCore.Specification.Tests.One.RequiredColumn
  - Microsoft.EntityFrameworkCore.Specification.Tests.One.RowVersion
  - Microsoft.EntityFrameworkCore.Specification.Tests.One.UniqueNo
  langs:
  - csharp
  - vb
  name: One
  nameWithType: One
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.One
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/DataAnnotationFixtureBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: One
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/DataAnnotationFixtureBase.cs
    startLine: 42
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Table("Sample")]

      public class One
    content.vb: >-
      <Table("Sample")>

      Public Class One
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.ComponentModel.DataAnnotations.Schema.TableAttribute
    ctor: System.ComponentModel.DataAnnotations.Schema.TableAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Sample
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.One.UniqueNo
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.One.UniqueNo
  id: UniqueNo
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.One
  langs:
  - csharp
  - vb
  name: UniqueNo
  nameWithType: One.UniqueNo
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.One.UniqueNo
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/DataAnnotationFixtureBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: UniqueNo
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/DataAnnotationFixtureBase.cs
    startLine: 45
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Key]

      [DatabaseGenerated(DatabaseGeneratedOption.Identity)]

      public int UniqueNo { get; set; }
    content.vb: >-
      <Key>

      <DatabaseGenerated(DatabaseGeneratedOption.Identity)>

      Public Property UniqueNo As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.One.UniqueNo*
  attributes:
  - type: System.ComponentModel.DataAnnotations.KeyAttribute
    ctor: System.ComponentModel.DataAnnotations.KeyAttribute.#ctor
    arguments: []
  - type: System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedAttribute
    ctor: System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedAttribute.#ctor(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption)
    arguments:
    - type: System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.One.RowVersion
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.One.RowVersion
  id: RowVersion
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.One
  langs:
  - csharp
  - vb
  name: RowVersion
  nameWithType: One.RowVersion
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.One.RowVersion
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/DataAnnotationFixtureBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: RowVersion
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/DataAnnotationFixtureBase.cs
    startLine: 49
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [ConcurrencyCheck]

      public Guid RowVersion { get; set; }
    content.vb: >-
      <ConcurrencyCheck>

      Public Property RowVersion As Guid
    parameters: []
    return:
      type: System.Guid
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.One.RowVersion*
  attributes:
  - type: System.ComponentModel.DataAnnotations.ConcurrencyCheckAttribute
    ctor: System.ComponentModel.DataAnnotations.ConcurrencyCheckAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.One.IgnoredProperty
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.One.IgnoredProperty
  id: IgnoredProperty
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.One
  langs:
  - csharp
  - vb
  name: IgnoredProperty
  nameWithType: One.IgnoredProperty
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.One.IgnoredProperty
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/DataAnnotationFixtureBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: IgnoredProperty
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/DataAnnotationFixtureBase.cs
    startLine: 52
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [NotMapped]

      public string IgnoredProperty { get; set; }
    content.vb: >-
      <NotMapped>

      Public Property IgnoredProperty As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.One.IgnoredProperty*
  attributes:
  - type: System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute
    ctor: System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.One.RequiredColumn
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.One.RequiredColumn
  id: RequiredColumn
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.One
  langs:
  - csharp
  - vb
  name: RequiredColumn
  nameWithType: One.RequiredColumn
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.One.RequiredColumn
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/DataAnnotationFixtureBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: RequiredColumn
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/DataAnnotationFixtureBase.cs
    startLine: 55
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Required]

      [Column("Name")]

      public string RequiredColumn { get; set; }
    content.vb: >-
      <Required>

      <Column("Name")>

      Public Property RequiredColumn As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.One.RequiredColumn*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  - type: System.ComponentModel.DataAnnotations.Schema.ColumnAttribute
    ctor: System.ComponentModel.DataAnnotations.Schema.ColumnAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.One.MaxLengthProperty
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.One.MaxLengthProperty
  id: MaxLengthProperty
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.One
  langs:
  - csharp
  - vb
  name: MaxLengthProperty
  nameWithType: One.MaxLengthProperty
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.One.MaxLengthProperty
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/DataAnnotationFixtureBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: MaxLengthProperty
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/DataAnnotationFixtureBase.cs
    startLine: 59
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [MaxLength(10)]

      public string MaxLengthProperty { get; set; }
    content.vb: >-
      <MaxLength(10)>

      Public Property MaxLengthProperty As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.One.MaxLengthProperty*
  attributes:
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 10
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests
  commentId: N:Microsoft.EntityFrameworkCore.Specification.Tests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Specification.Tests
  nameWithType: Microsoft.EntityFrameworkCore.Specification.Tests
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.One.UniqueNo*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.One.UniqueNo
  isExternal: false
  name: UniqueNo
  nameWithType: One.UniqueNo
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.One.UniqueNo
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.One.RowVersion*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.One.RowVersion
  isExternal: false
  name: RowVersion
  nameWithType: One.RowVersion
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.One.RowVersion
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.One.IgnoredProperty*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.One.IgnoredProperty
  isExternal: false
  name: IgnoredProperty
  nameWithType: One.IgnoredProperty
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.One.IgnoredProperty
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.One.RequiredColumn*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.One.RequiredColumn
  isExternal: false
  name: RequiredColumn
  nameWithType: One.RequiredColumn
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.One.RequiredColumn
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.One.MaxLengthProperty*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.One.MaxLengthProperty
  isExternal: false
  name: MaxLengthProperty
  nameWithType: One.MaxLengthProperty
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.One.MaxLengthProperty
