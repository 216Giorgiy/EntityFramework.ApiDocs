### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager
  id: IRelationalTransactionManager
  parent: Microsoft.EntityFrameworkCore.Storage
  children:
  - Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager.BeginTransaction(System.Data.IsolationLevel)
  - Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager.BeginTransactionAsync(System.Data.IsolationLevel,System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager.UseTransaction(System.Data.Common.DbTransaction)
  langs:
  - csharp
  - vb
  name: IRelationalTransactionManager
  nameWithType: IRelationalTransactionManager
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager
  type: Interface
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/IRelationalTransactionManager.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: IRelationalTransactionManager
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/IRelationalTransactionManager.cs
    startLine: 20
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n<p>\n    Creates and manages the current transaction for a relational database.\n</p>\n<p>\n    This type is typically used by database providers (and other extensions). It is generally\n    not used in application code.\n</p>\n"
  example: []
  syntax:
    content: 'public interface IRelationalTransactionManager : IDbContextTransactionManager'
    content.vb: >-
      Public Interface IRelationalTransactionManager
          Inherits IDbContextTransactionManager
  inheritedMembers:
  - Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransaction
  - Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransactionAsync(System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.CommitTransaction
  - Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.RollbackTransaction
  - Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.CurrentTransaction
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager.BeginTransaction(System.Data.IsolationLevel)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager.BeginTransaction(System.Data.IsolationLevel)
  id: BeginTransaction(System.Data.IsolationLevel)
  parent: Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager
  langs:
  - csharp
  - vb
  name: BeginTransaction(IsolationLevel)
  nameWithType: IRelationalTransactionManager.BeginTransaction(IsolationLevel)
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager.BeginTransaction(System.Data.IsolationLevel)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/IRelationalTransactionManager.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: BeginTransaction
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/IRelationalTransactionManager.cs
    startLine: 27
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n    Begins a new transaction.\n"
  example: []
  syntax:
    content: IDbContextTransaction BeginTransaction(IsolationLevel isolationLevel)
    content.vb: Function BeginTransaction(isolationLevel As IsolationLevel) As IDbContextTransaction
    parameters:
    - id: isolationLevel
      type: System.Data.IsolationLevel
      description: 'The isolation level to use for the transaction. '
    return:
      type: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
      description: 'The newly created transaction. '
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager.BeginTransactionAsync(System.Data.IsolationLevel,System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager.BeginTransactionAsync(System.Data.IsolationLevel,System.Threading.CancellationToken)
  id: BeginTransactionAsync(System.Data.IsolationLevel,System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager
  langs:
  - csharp
  - vb
  name: BeginTransactionAsync(IsolationLevel, CancellationToken)
  nameWithType: IRelationalTransactionManager.BeginTransactionAsync(IsolationLevel, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager.BeginTransactionAsync(System.Data.IsolationLevel, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/IRelationalTransactionManager.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: BeginTransactionAsync
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/IRelationalTransactionManager.cs
    startLine: 37
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n    Asynchronously begins a new transaction.\n"
  example: []
  syntax:
    content: Task<IDbContextTransaction> BeginTransactionAsync(IsolationLevel isolationLevel, CancellationToken cancellationToken = null)
    content.vb: Function BeginTransactionAsync(isolationLevel As IsolationLevel, cancellationToken As CancellationToken = Nothing) As Task(Of IDbContextTransaction)
    parameters:
    - id: isolationLevel
      type: System.Data.IsolationLevel
      description: 'The isolation level to use for the transaction. '
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for the task to complete.
    return:
      type: System.Threading.Tasks.Task{Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction}
      description: "\n    A task that represents the asynchronous operation. The task result contains the newly created transaction. \n"
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager.UseTransaction(System.Data.Common.DbTransaction)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager.UseTransaction(System.Data.Common.DbTransaction)
  id: UseTransaction(System.Data.Common.DbTransaction)
  parent: Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager
  langs:
  - csharp
  - vb
  name: UseTransaction(DbTransaction)
  nameWithType: IRelationalTransactionManager.UseTransaction(DbTransaction)
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager.UseTransaction(System.Data.Common.DbTransaction)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/IRelationalTransactionManager.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: UseTransaction
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/IRelationalTransactionManager.cs
    startLine: 46
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n    Specifies an existing <xref href=\"System.Data.Common.DbTransaction\" data-throw-if-not-resolved=\"false\"></xref> to be used for database operations.\n"
  example: []
  syntax:
    content: IDbContextTransaction UseTransaction(DbTransaction transaction)
    content.vb: Function UseTransaction(transaction As DbTransaction) As IDbContextTransaction
    parameters:
    - id: transaction
      type: System.Data.Common.DbTransaction
      description: 'The transaction to be used. '
    return:
      type: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
      description: "\n    An instance of <xref href=\"System.Data.IDbTransaction\" data-throw-if-not-resolved=\"false\"></xref> that wraps the provided transaction.\n"
references:
- uid: Microsoft.EntityFrameworkCore.Storage
  commentId: N:Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Storage
  nameWithType: Microsoft.EntityFrameworkCore.Storage
  fullName: Microsoft.EntityFrameworkCore.Storage
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransaction
  commentId: M:Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransaction
  parent: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager
  isExternal: false
  name: BeginTransaction()
  nameWithType: IDbContextTransactionManager.BeginTransaction()
  fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransaction()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransaction
    name: BeginTransaction
    nameWithType: IDbContextTransactionManager.BeginTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransaction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransaction
    name: BeginTransaction
    nameWithType: IDbContextTransactionManager.BeginTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransaction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransactionAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransactionAsync(System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager
  isExternal: true
  name: BeginTransactionAsync(CancellationToken)
  nameWithType: IDbContextTransactionManager.BeginTransactionAsync(CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransactionAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransactionAsync(System.Threading.CancellationToken)
    name: BeginTransactionAsync
    nameWithType: IDbContextTransactionManager.BeginTransactionAsync
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransactionAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransactionAsync(System.Threading.CancellationToken)
    name: BeginTransactionAsync
    nameWithType: IDbContextTransactionManager.BeginTransactionAsync
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransactionAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.CommitTransaction
  commentId: M:Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.CommitTransaction
  parent: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager
  isExternal: false
  name: CommitTransaction()
  nameWithType: IDbContextTransactionManager.CommitTransaction()
  fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.CommitTransaction()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.CommitTransaction
    name: CommitTransaction
    nameWithType: IDbContextTransactionManager.CommitTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.CommitTransaction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.CommitTransaction
    name: CommitTransaction
    nameWithType: IDbContextTransactionManager.CommitTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.CommitTransaction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.RollbackTransaction
  commentId: M:Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.RollbackTransaction
  parent: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager
  isExternal: false
  name: RollbackTransaction()
  nameWithType: IDbContextTransactionManager.RollbackTransaction()
  fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.RollbackTransaction()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.RollbackTransaction
    name: RollbackTransaction
    nameWithType: IDbContextTransactionManager.RollbackTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.RollbackTransaction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.RollbackTransaction
    name: RollbackTransaction
    nameWithType: IDbContextTransactionManager.RollbackTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.RollbackTransaction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.CurrentTransaction
  commentId: P:Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.CurrentTransaction
  parent: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager
  isExternal: false
  name: CurrentTransaction
  nameWithType: IDbContextTransactionManager.CurrentTransaction
  fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.CurrentTransaction
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<IRelationalTransactionManager, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<IRelationalTransactionManager, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of IRelationalTransactionManager, TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager, TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of IRelationalTransactionManager, TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<IRelationalTransactionManager, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<IRelationalTransactionManager, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of IRelationalTransactionManager, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of IRelationalTransactionManager, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IDbContextTransactionManager
  nameWithType: IDbContextTransactionManager
  fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: System.Data.IsolationLevel
  commentId: T:System.Data.IsolationLevel
  parent: System.Data
  isExternal: true
  name: IsolationLevel
  nameWithType: IsolationLevel
  fullName: System.Data.IsolationLevel
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IDbContextTransaction
  nameWithType: IDbContextTransaction
  fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
- uid: System.Data
  commentId: N:System.Data
  isExternal: false
  name: System.Data
  nameWithType: System.Data
  fullName: System.Data
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction}
  commentId: T:System.Threading.Tasks.Task{Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IDbContextTransaction>
  nameWithType: Task<IDbContextTransaction>
  fullName: System.Threading.Tasks.Task<Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction>
  nameWithType.vb: Task(Of IDbContextTransaction)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: Task(Of IDbContextTransaction)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Data.Common.DbTransaction
  commentId: T:System.Data.Common.DbTransaction
  parent: System.Data.Common
  isExternal: true
  name: DbTransaction
  nameWithType: DbTransaction
  fullName: System.Data.Common.DbTransaction
- uid: System.Data.IDbTransaction
  commentId: T:System.Data.IDbTransaction
  parent: System.Data
  isExternal: true
  name: IDbTransaction
  nameWithType: IDbTransaction
  fullName: System.Data.IDbTransaction
- uid: System.Data.Common
  commentId: N:System.Data.Common
  isExternal: false
  name: System.Data.Common
  nameWithType: System.Data.Common
  fullName: System.Data.Common
