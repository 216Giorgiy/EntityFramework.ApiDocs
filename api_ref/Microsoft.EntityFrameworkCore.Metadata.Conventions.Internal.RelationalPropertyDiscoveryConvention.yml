### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalPropertyDiscoveryConvention
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalPropertyDiscoveryConvention
  id: RelationalPropertyDiscoveryConvention
  parent: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
  children:
  - Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalPropertyDiscoveryConvention.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper)
  - Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalPropertyDiscoveryConvention.IsCandidatePrimitiveProperty(System.Reflection.PropertyInfo)
  langs:
  - csharp
  - vb
  name: RelationalPropertyDiscoveryConvention
  nameWithType: RelationalPropertyDiscoveryConvention
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalPropertyDiscoveryConvention
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Conventions/Internal/RelationalPropertyDiscoveryConvention.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: RelationalPropertyDiscoveryConvention
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Conventions/Internal/RelationalPropertyDiscoveryConvention.cs
    startLine: 14
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public class RelationalPropertyDiscoveryConvention : PropertyDiscoveryConvention, IEntityTypeConvention, IBaseTypeConvention'
    content.vb: >-
      Public Class RelationalPropertyDiscoveryConvention
          Inherits PropertyDiscoveryConvention
          Implements IEntityTypeConvention, IBaseTypeConvention
  inheritance:
  - System.Object
  - Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.PropertyDiscoveryConvention
  implements:
  - Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeConvention
  - Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IBaseTypeConvention
  inheritedMembers:
  - Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.PropertyDiscoveryConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder)
  - Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.PropertyDiscoveryConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalPropertyDiscoveryConvention.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalPropertyDiscoveryConvention.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper)
  id: '#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper)'
  parent: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalPropertyDiscoveryConvention
  langs:
  - csharp
  - vb
  name: RelationalPropertyDiscoveryConvention(IRelationalTypeMapper)
  nameWithType: RelationalPropertyDiscoveryConvention.RelationalPropertyDiscoveryConvention(IRelationalTypeMapper)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalPropertyDiscoveryConvention.RelationalPropertyDiscoveryConvention(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Conventions/Internal/RelationalPropertyDiscoveryConvention.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Conventions/Internal/RelationalPropertyDiscoveryConvention.cs
    startLine: 22
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public RelationalPropertyDiscoveryConvention(IRelationalTypeMapper typeMapper)
    content.vb: Public Sub New(typeMapper As IRelationalTypeMapper)
    parameters:
    - id: typeMapper
      type: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalPropertyDiscoveryConvention.IsCandidatePrimitiveProperty(System.Reflection.PropertyInfo)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalPropertyDiscoveryConvention.IsCandidatePrimitiveProperty(System.Reflection.PropertyInfo)
  id: IsCandidatePrimitiveProperty(System.Reflection.PropertyInfo)
  parent: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalPropertyDiscoveryConvention
  langs:
  - csharp
  - vb
  name: IsCandidatePrimitiveProperty(PropertyInfo)
  nameWithType: RelationalPropertyDiscoveryConvention.IsCandidatePrimitiveProperty(PropertyInfo)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalPropertyDiscoveryConvention.IsCandidatePrimitiveProperty(System.Reflection.PropertyInfo)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Conventions/Internal/RelationalPropertyDiscoveryConvention.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: IsCandidatePrimitiveProperty
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Conventions/Internal/RelationalPropertyDiscoveryConvention.cs
    startLine: 33
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected override bool IsCandidatePrimitiveProperty(PropertyInfo propertyInfo)
    content.vb: Protected Overrides Function IsCandidatePrimitiveProperty(propertyInfo As PropertyInfo) As Boolean
    parameters:
    - id: propertyInfo
      type: System.Reflection.PropertyInfo
    return:
      type: System.Boolean
  overridden: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.PropertyDiscoveryConvention.IsCandidatePrimitiveProperty(System.Reflection.PropertyInfo)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.PropertyDiscoveryConvention
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.PropertyDiscoveryConvention
  parent: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
  isExternal: false
  name: PropertyDiscoveryConvention
  nameWithType: PropertyDiscoveryConvention
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.PropertyDiscoveryConvention
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeConvention
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeConvention
  parent: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
  isExternal: false
  name: IEntityTypeConvention
  nameWithType: IEntityTypeConvention
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeConvention
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IBaseTypeConvention
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IBaseTypeConvention
  parent: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
  isExternal: false
  name: IBaseTypeConvention
  nameWithType: IBaseTypeConvention
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IBaseTypeConvention
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.PropertyDiscoveryConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.PropertyDiscoveryConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder)
  parent: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.PropertyDiscoveryConvention
  isExternal: false
  name: Apply(InternalEntityTypeBuilder)
  nameWithType: PropertyDiscoveryConvention.Apply(InternalEntityTypeBuilder)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.PropertyDiscoveryConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.PropertyDiscoveryConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder)
    name: Apply
    nameWithType: PropertyDiscoveryConvention.Apply
    fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.PropertyDiscoveryConvention.Apply
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
    name: InternalEntityTypeBuilder
    nameWithType: InternalEntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.PropertyDiscoveryConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder)
    name: Apply
    nameWithType: PropertyDiscoveryConvention.Apply
    fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.PropertyDiscoveryConvention.Apply
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
    name: InternalEntityTypeBuilder
    nameWithType: InternalEntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.PropertyDiscoveryConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.PropertyDiscoveryConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)
  parent: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.PropertyDiscoveryConvention
  isExternal: false
  name: Apply(InternalEntityTypeBuilder, EntityType)
  nameWithType: PropertyDiscoveryConvention.Apply(InternalEntityTypeBuilder, EntityType)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.PropertyDiscoveryConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.PropertyDiscoveryConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)
    name: Apply
    nameWithType: PropertyDiscoveryConvention.Apply
    fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.PropertyDiscoveryConvention.Apply
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
    name: InternalEntityTypeBuilder
    nameWithType: InternalEntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
    name: EntityType
    nameWithType: EntityType
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.PropertyDiscoveryConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)
    name: Apply
    nameWithType: PropertyDiscoveryConvention.Apply
    fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.PropertyDiscoveryConvention.Apply
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
    name: InternalEntityTypeBuilder
    nameWithType: InternalEntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
    name: EntityType
    nameWithType: EntityType
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IRelationalTypeMapper
  nameWithType: IRelationalTypeMapper
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper
- uid: Microsoft.EntityFrameworkCore.Storage
  commentId: N:Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Storage
  nameWithType: Microsoft.EntityFrameworkCore.Storage
  fullName: Microsoft.EntityFrameworkCore.Storage
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.PropertyDiscoveryConvention.IsCandidatePrimitiveProperty(System.Reflection.PropertyInfo)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.PropertyDiscoveryConvention.IsCandidatePrimitiveProperty(System.Reflection.PropertyInfo)
  parent: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.PropertyDiscoveryConvention
  isExternal: true
  name: IsCandidatePrimitiveProperty(PropertyInfo)
  nameWithType: PropertyDiscoveryConvention.IsCandidatePrimitiveProperty(PropertyInfo)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.PropertyDiscoveryConvention.IsCandidatePrimitiveProperty(System.Reflection.PropertyInfo)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.PropertyDiscoveryConvention.IsCandidatePrimitiveProperty(System.Reflection.PropertyInfo)
    name: IsCandidatePrimitiveProperty
    nameWithType: PropertyDiscoveryConvention.IsCandidatePrimitiveProperty
    fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.PropertyDiscoveryConvention.IsCandidatePrimitiveProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    nameWithType: PropertyInfo
    fullName: System.Reflection.PropertyInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.PropertyDiscoveryConvention.IsCandidatePrimitiveProperty(System.Reflection.PropertyInfo)
    name: IsCandidatePrimitiveProperty
    nameWithType: PropertyDiscoveryConvention.IsCandidatePrimitiveProperty
    fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.PropertyDiscoveryConvention.IsCandidatePrimitiveProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    nameWithType: PropertyInfo
    fullName: System.Reflection.PropertyInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.PropertyInfo
  commentId: T:System.Reflection.PropertyInfo
  parent: System.Reflection
  isExternal: true
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: false
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
