### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Gumball
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Gumball
  id: StoreGeneratedTestBase`2.Gumball
  parent: Microsoft.EntityFrameworkCore.Specification.Tests
  children:
  - Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Gumball.AlwaysComputed
  - Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Gumball.AlwaysComputedReadOnlyAfterSave
  - Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Gumball.AlwaysComputedReadOnlyBeforeSave
  - Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Gumball.AlwaysIdentity
  - Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Gumball.AlwaysIdentityReadOnlyAfterSave
  - Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Gumball.AlwaysIdentityReadOnlyBeforeSave
  - Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Gumball.Computed
  - Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Gumball.ComputedReadOnlyAfterSave
  - Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Gumball.ComputedReadOnlyBeforeSave
  - Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Gumball.Id
  - Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Gumball.Identity
  - Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Gumball.IdentityReadOnlyAfterSave
  - Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Gumball.IdentityReadOnlyBeforeSave
  - Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Gumball.NotStoreGenerated
  langs:
  - csharp
  - vb
  name: StoreGeneratedTestBase<TTestStore, TFixture>.Gumball
  nameWithType: StoreGeneratedTestBase<TTestStore, TFixture>.Gumball
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase<TTestStore, TFixture>.Gumball
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Gumball
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
    startLine: 667
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: protected class Gumball
    content.vb: Protected Class Gumball
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: StoreGeneratedTestBase(Of TTestStore, TFixture).Gumball
  modifiers.csharp:
  - protected
  - class
  modifiers.vb:
  - Protected
  - Class
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase(Of TTestStore, TFixture).Gumball
  name.vb: StoreGeneratedTestBase(Of TTestStore, TFixture).Gumball
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Gumball.Id
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Gumball.Id
  id: Id
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Gumball
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: StoreGeneratedTestBase<TTestStore, TFixture>.Gumball.Id
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase<TTestStore, TFixture>.Gumball.Id
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Id
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
    startLine: 669
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public int Id { get; set; }
    content.vb: Public Property Id As Integer
    parameters: []
    return:
      type: System.Int32
  nameWithType.vb: StoreGeneratedTestBase(Of TTestStore, TFixture).Gumball.Id
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase(Of TTestStore, TFixture).Gumball.Id
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Gumball.NotStoreGenerated
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Gumball.NotStoreGenerated
  id: NotStoreGenerated
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Gumball
  langs:
  - csharp
  - vb
  name: NotStoreGenerated
  nameWithType: StoreGeneratedTestBase<TTestStore, TFixture>.Gumball.NotStoreGenerated
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase<TTestStore, TFixture>.Gumball.NotStoreGenerated
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: NotStoreGenerated
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
    startLine: 670
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public string NotStoreGenerated { get; set; }
    content.vb: Public Property NotStoreGenerated As String
    parameters: []
    return:
      type: System.String
  nameWithType.vb: StoreGeneratedTestBase(Of TTestStore, TFixture).Gumball.NotStoreGenerated
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase(Of TTestStore, TFixture).Gumball.NotStoreGenerated
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Gumball.Identity
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Gumball.Identity
  id: Identity
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Gumball
  langs:
  - csharp
  - vb
  name: Identity
  nameWithType: StoreGeneratedTestBase<TTestStore, TFixture>.Gumball.Identity
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase<TTestStore, TFixture>.Gumball.Identity
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Identity
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
    startLine: 672
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public string Identity { get; set; }
    content.vb: Public Property Identity As String
    parameters: []
    return:
      type: System.String
  nameWithType.vb: StoreGeneratedTestBase(Of TTestStore, TFixture).Gumball.Identity
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase(Of TTestStore, TFixture).Gumball.Identity
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Gumball.IdentityReadOnlyBeforeSave
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Gumball.IdentityReadOnlyBeforeSave
  id: IdentityReadOnlyBeforeSave
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Gumball
  langs:
  - csharp
  - vb
  name: IdentityReadOnlyBeforeSave
  nameWithType: StoreGeneratedTestBase<TTestStore, TFixture>.Gumball.IdentityReadOnlyBeforeSave
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase<TTestStore, TFixture>.Gumball.IdentityReadOnlyBeforeSave
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: IdentityReadOnlyBeforeSave
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
    startLine: 673
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public string IdentityReadOnlyBeforeSave { get; set; }
    content.vb: Public Property IdentityReadOnlyBeforeSave As String
    parameters: []
    return:
      type: System.String
  nameWithType.vb: StoreGeneratedTestBase(Of TTestStore, TFixture).Gumball.IdentityReadOnlyBeforeSave
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase(Of TTestStore, TFixture).Gumball.IdentityReadOnlyBeforeSave
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Gumball.IdentityReadOnlyAfterSave
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Gumball.IdentityReadOnlyAfterSave
  id: IdentityReadOnlyAfterSave
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Gumball
  langs:
  - csharp
  - vb
  name: IdentityReadOnlyAfterSave
  nameWithType: StoreGeneratedTestBase<TTestStore, TFixture>.Gumball.IdentityReadOnlyAfterSave
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase<TTestStore, TFixture>.Gumball.IdentityReadOnlyAfterSave
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: IdentityReadOnlyAfterSave
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
    startLine: 674
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public string IdentityReadOnlyAfterSave { get; set; }
    content.vb: Public Property IdentityReadOnlyAfterSave As String
    parameters: []
    return:
      type: System.String
  nameWithType.vb: StoreGeneratedTestBase(Of TTestStore, TFixture).Gumball.IdentityReadOnlyAfterSave
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase(Of TTestStore, TFixture).Gumball.IdentityReadOnlyAfterSave
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Gumball.AlwaysIdentity
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Gumball.AlwaysIdentity
  id: AlwaysIdentity
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Gumball
  langs:
  - csharp
  - vb
  name: AlwaysIdentity
  nameWithType: StoreGeneratedTestBase<TTestStore, TFixture>.Gumball.AlwaysIdentity
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase<TTestStore, TFixture>.Gumball.AlwaysIdentity
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AlwaysIdentity
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
    startLine: 676
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public string AlwaysIdentity { get; set; }
    content.vb: Public Property AlwaysIdentity As String
    parameters: []
    return:
      type: System.String
  nameWithType.vb: StoreGeneratedTestBase(Of TTestStore, TFixture).Gumball.AlwaysIdentity
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase(Of TTestStore, TFixture).Gumball.AlwaysIdentity
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Gumball.AlwaysIdentityReadOnlyBeforeSave
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Gumball.AlwaysIdentityReadOnlyBeforeSave
  id: AlwaysIdentityReadOnlyBeforeSave
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Gumball
  langs:
  - csharp
  - vb
  name: AlwaysIdentityReadOnlyBeforeSave
  nameWithType: StoreGeneratedTestBase<TTestStore, TFixture>.Gumball.AlwaysIdentityReadOnlyBeforeSave
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase<TTestStore, TFixture>.Gumball.AlwaysIdentityReadOnlyBeforeSave
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AlwaysIdentityReadOnlyBeforeSave
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
    startLine: 677
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public string AlwaysIdentityReadOnlyBeforeSave { get; set; }
    content.vb: Public Property AlwaysIdentityReadOnlyBeforeSave As String
    parameters: []
    return:
      type: System.String
  nameWithType.vb: StoreGeneratedTestBase(Of TTestStore, TFixture).Gumball.AlwaysIdentityReadOnlyBeforeSave
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase(Of TTestStore, TFixture).Gumball.AlwaysIdentityReadOnlyBeforeSave
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Gumball.AlwaysIdentityReadOnlyAfterSave
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Gumball.AlwaysIdentityReadOnlyAfterSave
  id: AlwaysIdentityReadOnlyAfterSave
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Gumball
  langs:
  - csharp
  - vb
  name: AlwaysIdentityReadOnlyAfterSave
  nameWithType: StoreGeneratedTestBase<TTestStore, TFixture>.Gumball.AlwaysIdentityReadOnlyAfterSave
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase<TTestStore, TFixture>.Gumball.AlwaysIdentityReadOnlyAfterSave
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AlwaysIdentityReadOnlyAfterSave
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
    startLine: 678
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public string AlwaysIdentityReadOnlyAfterSave { get; set; }
    content.vb: Public Property AlwaysIdentityReadOnlyAfterSave As String
    parameters: []
    return:
      type: System.String
  nameWithType.vb: StoreGeneratedTestBase(Of TTestStore, TFixture).Gumball.AlwaysIdentityReadOnlyAfterSave
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase(Of TTestStore, TFixture).Gumball.AlwaysIdentityReadOnlyAfterSave
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Gumball.Computed
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Gumball.Computed
  id: Computed
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Gumball
  langs:
  - csharp
  - vb
  name: Computed
  nameWithType: StoreGeneratedTestBase<TTestStore, TFixture>.Gumball.Computed
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase<TTestStore, TFixture>.Gumball.Computed
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Computed
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
    startLine: 680
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public string Computed { get; set; }
    content.vb: Public Property Computed As String
    parameters: []
    return:
      type: System.String
  nameWithType.vb: StoreGeneratedTestBase(Of TTestStore, TFixture).Gumball.Computed
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase(Of TTestStore, TFixture).Gumball.Computed
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Gumball.ComputedReadOnlyBeforeSave
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Gumball.ComputedReadOnlyBeforeSave
  id: ComputedReadOnlyBeforeSave
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Gumball
  langs:
  - csharp
  - vb
  name: ComputedReadOnlyBeforeSave
  nameWithType: StoreGeneratedTestBase<TTestStore, TFixture>.Gumball.ComputedReadOnlyBeforeSave
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase<TTestStore, TFixture>.Gumball.ComputedReadOnlyBeforeSave
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ComputedReadOnlyBeforeSave
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
    startLine: 681
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public string ComputedReadOnlyBeforeSave { get; set; }
    content.vb: Public Property ComputedReadOnlyBeforeSave As String
    parameters: []
    return:
      type: System.String
  nameWithType.vb: StoreGeneratedTestBase(Of TTestStore, TFixture).Gumball.ComputedReadOnlyBeforeSave
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase(Of TTestStore, TFixture).Gumball.ComputedReadOnlyBeforeSave
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Gumball.ComputedReadOnlyAfterSave
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Gumball.ComputedReadOnlyAfterSave
  id: ComputedReadOnlyAfterSave
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Gumball
  langs:
  - csharp
  - vb
  name: ComputedReadOnlyAfterSave
  nameWithType: StoreGeneratedTestBase<TTestStore, TFixture>.Gumball.ComputedReadOnlyAfterSave
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase<TTestStore, TFixture>.Gumball.ComputedReadOnlyAfterSave
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ComputedReadOnlyAfterSave
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
    startLine: 682
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public string ComputedReadOnlyAfterSave { get; set; }
    content.vb: Public Property ComputedReadOnlyAfterSave As String
    parameters: []
    return:
      type: System.String
  nameWithType.vb: StoreGeneratedTestBase(Of TTestStore, TFixture).Gumball.ComputedReadOnlyAfterSave
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase(Of TTestStore, TFixture).Gumball.ComputedReadOnlyAfterSave
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Gumball.AlwaysComputed
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Gumball.AlwaysComputed
  id: AlwaysComputed
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Gumball
  langs:
  - csharp
  - vb
  name: AlwaysComputed
  nameWithType: StoreGeneratedTestBase<TTestStore, TFixture>.Gumball.AlwaysComputed
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase<TTestStore, TFixture>.Gumball.AlwaysComputed
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AlwaysComputed
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
    startLine: 684
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public string AlwaysComputed { get; set; }
    content.vb: Public Property AlwaysComputed As String
    parameters: []
    return:
      type: System.String
  nameWithType.vb: StoreGeneratedTestBase(Of TTestStore, TFixture).Gumball.AlwaysComputed
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase(Of TTestStore, TFixture).Gumball.AlwaysComputed
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Gumball.AlwaysComputedReadOnlyBeforeSave
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Gumball.AlwaysComputedReadOnlyBeforeSave
  id: AlwaysComputedReadOnlyBeforeSave
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Gumball
  langs:
  - csharp
  - vb
  name: AlwaysComputedReadOnlyBeforeSave
  nameWithType: StoreGeneratedTestBase<TTestStore, TFixture>.Gumball.AlwaysComputedReadOnlyBeforeSave
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase<TTestStore, TFixture>.Gumball.AlwaysComputedReadOnlyBeforeSave
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AlwaysComputedReadOnlyBeforeSave
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
    startLine: 685
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public string AlwaysComputedReadOnlyBeforeSave { get; set; }
    content.vb: Public Property AlwaysComputedReadOnlyBeforeSave As String
    parameters: []
    return:
      type: System.String
  nameWithType.vb: StoreGeneratedTestBase(Of TTestStore, TFixture).Gumball.AlwaysComputedReadOnlyBeforeSave
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase(Of TTestStore, TFixture).Gumball.AlwaysComputedReadOnlyBeforeSave
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Gumball.AlwaysComputedReadOnlyAfterSave
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Gumball.AlwaysComputedReadOnlyAfterSave
  id: AlwaysComputedReadOnlyAfterSave
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Gumball
  langs:
  - csharp
  - vb
  name: AlwaysComputedReadOnlyAfterSave
  nameWithType: StoreGeneratedTestBase<TTestStore, TFixture>.Gumball.AlwaysComputedReadOnlyAfterSave
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase<TTestStore, TFixture>.Gumball.AlwaysComputedReadOnlyAfterSave
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AlwaysComputedReadOnlyAfterSave
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
    startLine: 686
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public string AlwaysComputedReadOnlyAfterSave { get; set; }
    content.vb: Public Property AlwaysComputedReadOnlyAfterSave As String
    parameters: []
    return:
      type: System.String
  nameWithType.vb: StoreGeneratedTestBase(Of TTestStore, TFixture).Gumball.AlwaysComputedReadOnlyAfterSave
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase(Of TTestStore, TFixture).Gumball.AlwaysComputedReadOnlyAfterSave
references:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests
  commentId: N:Microsoft.EntityFrameworkCore.Specification.Tests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Specification.Tests
  nameWithType: Microsoft.EntityFrameworkCore.Specification.Tests
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
