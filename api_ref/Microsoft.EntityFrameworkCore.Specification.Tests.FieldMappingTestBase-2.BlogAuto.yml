### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.BlogAuto
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.BlogAuto
  id: FieldMappingTestBase`2.BlogAuto
  parent: Microsoft.EntityFrameworkCore.Specification.Tests
  children:
  - Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.BlogAuto.Id
  - Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.BlogAuto.Posts
  - Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.BlogAuto.Title
  langs:
  - csharp
  - vb
  name: FieldMappingTestBase<TTestStore, TFixture>.BlogAuto
  nameWithType: FieldMappingTestBase<TTestStore, TFixture>.BlogAuto
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase<TTestStore, TFixture>.BlogAuto
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/FieldMappingTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: BlogAuto
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/FieldMappingTestBase.cs
    startLine: 530
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: 'protected class BlogAuto : FieldMappingTestBase<TTestStore, TFixture>.IBlogAccesor'
    content.vb: >-
      Protected Class BlogAuto
          Implements FieldMappingTestBase(Of TTestStore, TFixture).IBlogAccesor
  inheritance:
  - System.Object
  implements:
  - Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.IBlogAccesor
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.BlogAuto.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  nameWithType.vb: FieldMappingTestBase(Of TTestStore, TFixture).BlogAuto
  modifiers.csharp:
  - protected
  - class
  modifiers.vb:
  - Protected
  - Class
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase(Of TTestStore, TFixture).BlogAuto
  name.vb: FieldMappingTestBase(Of TTestStore, TFixture).BlogAuto
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.BlogAuto.Id
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.BlogAuto.Id
  id: Id
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.BlogAuto
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: FieldMappingTestBase<TTestStore, TFixture>.BlogAuto.Id
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase<TTestStore, TFixture>.BlogAuto.Id
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/FieldMappingTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Id
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/FieldMappingTestBase.cs
    startLine: 532
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [DatabaseGenerated(DatabaseGeneratedOption.None)]

      public int Id { get; set; }
    content.vb: >-
      <DatabaseGenerated(DatabaseGeneratedOption.None)>

      Public Property Id As Integer
    parameters: []
    return:
      type: System.Int32
  attributes:
  - type: System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedAttribute
    ctor: System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedAttribute.#ctor(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption)
    arguments:
    - type: System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption
      value: 0
  nameWithType.vb: FieldMappingTestBase(Of TTestStore, TFixture).BlogAuto.Id
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase(Of TTestStore, TFixture).BlogAuto.Id
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.BlogAuto.Title
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.BlogAuto.Title
  id: Title
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.BlogAuto
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: FieldMappingTestBase<TTestStore, TFixture>.BlogAuto.Title
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase<TTestStore, TFixture>.BlogAuto.Title
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/FieldMappingTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Title
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/FieldMappingTestBase.cs
    startLine: 534
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public string Title { get; set; }
    content.vb: Public Property Title As String
    parameters: []
    return:
      type: System.String
  nameWithType.vb: FieldMappingTestBase(Of TTestStore, TFixture).BlogAuto.Title
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase(Of TTestStore, TFixture).BlogAuto.Title
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.BlogAuto.Posts
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.BlogAuto.Posts
  id: Posts
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.BlogAuto
  langs:
  - csharp
  - vb
  name: Posts
  nameWithType: FieldMappingTestBase<TTestStore, TFixture>.BlogAuto.Posts
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase<TTestStore, TFixture>.BlogAuto.Posts
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/FieldMappingTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Posts
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/FieldMappingTestBase.cs
    startLine: 535
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public IEnumerable<FieldMappingTestBase<TTestStore, TFixture>.PostAuto> Posts { get; set; }
    content.vb: Public Property Posts As IEnumerable(Of FieldMappingTestBase(Of TTestStore, TFixture).PostAuto)
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.PostAuto}
  nameWithType.vb: FieldMappingTestBase(Of TTestStore, TFixture).BlogAuto.Posts
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase(Of TTestStore, TFixture).BlogAuto.Posts
references:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests
  commentId: N:Microsoft.EntityFrameworkCore.Specification.Tests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Specification.Tests
  nameWithType: Microsoft.EntityFrameworkCore.Specification.Tests
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.IBlogAccesor
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.IBlogAccesor
  parent: Microsoft.EntityFrameworkCore.Specification.Tests
  isExternal: false
  name: FieldMappingTestBase.IBlogAccesor<>
  nameWithType: FieldMappingTestBase.IBlogAccesor<>
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase.IBlogAccesor<>
  nameWithType.vb: FieldMappingTestBase.IBlogAccesor(Of )
  fullname.vb: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase.IBlogAccesor(Of )
  name.vb: FieldMappingTestBase.IBlogAccesor(Of )
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.IBlogAccesor
    name: FieldMappingTestBase.IBlogAccesor
    nameWithType: FieldMappingTestBase.IBlogAccesor
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase.IBlogAccesor
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.IBlogAccesor
    name: FieldMappingTestBase.IBlogAccesor
    nameWithType: FieldMappingTestBase.IBlogAccesor
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase.IBlogAccesor
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.BlogAuto.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<FieldMappingTestBase<TTestStore, TFixture>.BlogAuto, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<FieldMappingTestBase<TTestStore, TFixture>.BlogAuto, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase<TTestStore, TFixture>.BlogAuto, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of FieldMappingTestBase(Of TTestStore, TFixture).BlogAuto, TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase(Of TTestStore, TFixture).BlogAuto, TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of FieldMappingTestBase(Of TTestStore, TFixture).BlogAuto, TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<FieldMappingTestBase<TTestStore, TFixture>.BlogAuto, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<FieldMappingTestBase<TTestStore, TFixture>.BlogAuto, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase<TTestStore, TFixture>.BlogAuto, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of FieldMappingTestBase(Of TTestStore, TFixture).BlogAuto, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of FieldMappingTestBase(Of TTestStore, TFixture).BlogAuto, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase(Of TTestStore, TFixture).BlogAuto, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.PostAuto}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.PostAuto}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<FieldMappingTestBase.PostAuto<>>
  nameWithType: IEnumerable<FieldMappingTestBase.PostAuto<>>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase.PostAuto<>>
  nameWithType.vb: IEnumerable(Of FieldMappingTestBase.PostAuto(Of ))
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase.PostAuto(Of ))
  name.vb: IEnumerable(Of FieldMappingTestBase.PostAuto(Of ))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.PostAuto
    name: FieldMappingTestBase.PostAuto
    nameWithType: FieldMappingTestBase.PostAuto
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase.PostAuto
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.PostAuto
    name: FieldMappingTestBase.PostAuto
    nameWithType: FieldMappingTestBase.PostAuto
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase.PostAuto
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
