### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap`1
  commentId: T:Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap`1
  id: WeakReferenceIdentityMap`1
  parent: Microsoft.EntityFrameworkCore.Query.Internal
  children:
  - Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap`1.#ctor(Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory{`0})
  - Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap`1.Add(Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Object)
  - Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap`1.CollectGarbage
  - Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap`1.CreateIncludeKeyComparer(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  - Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap`1.CreateIncludeKeyComparer(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.Storage.ValueBuffer)
  - Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap`1.Key
  - Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap`1.PrincipalKeyValueFactory
  - Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap`1.TryGetEntity(Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Boolean@)
  langs:
  - csharp
  - vb
  name: WeakReferenceIdentityMap<TKey>
  nameWithType: WeakReferenceIdentityMap<TKey>
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap<TKey>
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/WeakReferenceIdentityMap.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: WeakReferenceIdentityMap
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/WeakReferenceIdentityMap.cs
    startLine: 17
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public class WeakReferenceIdentityMap<TKey> : IWeakReferenceIdentityMap'
    content.vb: >-
      Public Class WeakReferenceIdentityMap(Of TKey)
          Implements IWeakReferenceIdentityMap
    typeParameters:
    - id: TKey
  inheritance:
  - System.Object
  implements:
  - Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: WeakReferenceIdentityMap(Of TKey)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap(Of TKey)
  name.vb: WeakReferenceIdentityMap(Of TKey)
- uid: Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap`1.#ctor(Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory{`0})
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap`1.#ctor(Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory{`0})
  id: '#ctor(Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory{`0})'
  parent: Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap`1
  langs:
  - csharp
  - vb
  name: WeakReferenceIdentityMap(IKey, IPrincipalKeyValueFactory<TKey>)
  nameWithType: WeakReferenceIdentityMap<TKey>.WeakReferenceIdentityMap(IKey, IPrincipalKeyValueFactory<TKey>)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap<TKey>.WeakReferenceIdentityMap(Microsoft.EntityFrameworkCore.Metadata.IKey, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory<TKey>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/WeakReferenceIdentityMap.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/WeakReferenceIdentityMap.cs
    startLine: 27
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public WeakReferenceIdentityMap(IKey key, IPrincipalKeyValueFactory<TKey> principalKeyValueFactory)
    content.vb: Public Sub New(key As IKey, principalKeyValueFactory As IPrincipalKeyValueFactory(Of TKey))
    parameters:
    - id: key
      type: Microsoft.EntityFrameworkCore.Metadata.IKey
    - id: principalKeyValueFactory
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory{{TKey}}
  nameWithType.vb: WeakReferenceIdentityMap(Of TKey).WeakReferenceIdentityMap(IKey, IPrincipalKeyValueFactory(Of TKey))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap(Of TKey).WeakReferenceIdentityMap(Microsoft.EntityFrameworkCore.Metadata.IKey, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory(Of TKey))
  name.vb: WeakReferenceIdentityMap(IKey, IPrincipalKeyValueFactory(Of TKey))
- uid: Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap`1.PrincipalKeyValueFactory
  commentId: P:Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap`1.PrincipalKeyValueFactory
  id: PrincipalKeyValueFactory
  parent: Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap`1
  langs:
  - csharp
  - vb
  name: PrincipalKeyValueFactory
  nameWithType: WeakReferenceIdentityMap<TKey>.PrincipalKeyValueFactory
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap<TKey>.PrincipalKeyValueFactory
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/WeakReferenceIdentityMap.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: PrincipalKeyValueFactory
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/WeakReferenceIdentityMap.cs
    startLine: 41
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual IPrincipalKeyValueFactory<TKey> PrincipalKeyValueFactory { get; }
    content.vb: Protected Overridable ReadOnly Property PrincipalKeyValueFactory As IPrincipalKeyValueFactory(Of TKey)
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory{{TKey}}
  nameWithType.vb: WeakReferenceIdentityMap(Of TKey).PrincipalKeyValueFactory
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
  fullName.vb: Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap(Of TKey).PrincipalKeyValueFactory
- uid: Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap`1.Key
  commentId: P:Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap`1.Key
  id: Key
  parent: Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap`1
  langs:
  - csharp
  - vb
  name: Key
  nameWithType: WeakReferenceIdentityMap<TKey>.Key
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap<TKey>.Key
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/WeakReferenceIdentityMap.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Key
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/WeakReferenceIdentityMap.cs
    startLine: 47
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual IKey Key { get; }
    content.vb: Public Overridable ReadOnly Property Key As IKey
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.IKey
  implements:
  - Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.Key
  nameWithType.vb: WeakReferenceIdentityMap(Of TKey).Key
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap(Of TKey).Key
- uid: Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap`1.TryGetEntity(Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Boolean@)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap`1.TryGetEntity(Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Boolean@)
  id: TryGetEntity(Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Boolean@)
  parent: Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap`1
  langs:
  - csharp
  - vb
  name: TryGetEntity(ValueBuffer, out Boolean)
  nameWithType: WeakReferenceIdentityMap<TKey>.TryGetEntity(ValueBuffer, out Boolean)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap<TKey>.TryGetEntity(Microsoft.EntityFrameworkCore.Storage.ValueBuffer, out System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/WeakReferenceIdentityMap.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: TryGetEntity
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/WeakReferenceIdentityMap.cs
    startLine: 53
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual WeakReference<object> TryGetEntity(ValueBuffer valueBuffer, out bool hasNullKey)
    content.vb: Public Overridable Function TryGetEntity(valueBuffer As ValueBuffer, ByRef hasNullKey As Boolean) As WeakReference(Of Object)
    parameters:
    - id: valueBuffer
      type: Microsoft.EntityFrameworkCore.Storage.ValueBuffer
    - id: hasNullKey
      type: System.Boolean
    return:
      type: System.WeakReference{System.Object}
  implements:
  - Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.TryGetEntity(Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Boolean@)
  nameWithType.vb: WeakReferenceIdentityMap(Of TKey).TryGetEntity(ValueBuffer, ByRef Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap(Of TKey).TryGetEntity(Microsoft.EntityFrameworkCore.Storage.ValueBuffer, ByRef System.Boolean)
  name.vb: TryGetEntity(ValueBuffer, ByRef Boolean)
- uid: Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap`1.CollectGarbage
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap`1.CollectGarbage
  id: CollectGarbage
  parent: Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap`1
  langs:
  - csharp
  - vb
  name: CollectGarbage()
  nameWithType: WeakReferenceIdentityMap<TKey>.CollectGarbage()
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap<TKey>.CollectGarbage()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/WeakReferenceIdentityMap.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CollectGarbage
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/WeakReferenceIdentityMap.cs
    startLine: 71
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual void CollectGarbage()
    content.vb: Public Overridable Sub CollectGarbage
  implements:
  - Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.CollectGarbage
  nameWithType.vb: WeakReferenceIdentityMap(Of TKey).CollectGarbage()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap(Of TKey).CollectGarbage()
- uid: Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap`1.Add(Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap`1.Add(Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Object)
  id: Add(Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Object)
  parent: Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap`1
  langs:
  - csharp
  - vb
  name: Add(ValueBuffer, Object)
  nameWithType: WeakReferenceIdentityMap<TKey>.Add(ValueBuffer, Object)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap<TKey>.Add(Microsoft.EntityFrameworkCore.Storage.ValueBuffer, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/WeakReferenceIdentityMap.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Add
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/WeakReferenceIdentityMap.cs
    startLine: 99
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual void Add(ValueBuffer valueBuffer, object entity)
    content.vb: Public Overridable Sub Add(valueBuffer As ValueBuffer, entity As Object)
    parameters:
    - id: valueBuffer
      type: Microsoft.EntityFrameworkCore.Storage.ValueBuffer
    - id: entity
      type: System.Object
  implements:
  - Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.Add(Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Object)
  nameWithType.vb: WeakReferenceIdentityMap(Of TKey).Add(ValueBuffer, Object)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap(Of TKey).Add(Microsoft.EntityFrameworkCore.Storage.ValueBuffer, System.Object)
- uid: Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap`1.CreateIncludeKeyComparer(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.Storage.ValueBuffer)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap`1.CreateIncludeKeyComparer(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.Storage.ValueBuffer)
  id: CreateIncludeKeyComparer(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.Storage.ValueBuffer)
  parent: Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap`1
  langs:
  - csharp
  - vb
  name: CreateIncludeKeyComparer(INavigation, ValueBuffer)
  nameWithType: WeakReferenceIdentityMap<TKey>.CreateIncludeKeyComparer(INavigation, ValueBuffer)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap<TKey>.CreateIncludeKeyComparer(Microsoft.EntityFrameworkCore.Metadata.INavigation, Microsoft.EntityFrameworkCore.Storage.ValueBuffer)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/WeakReferenceIdentityMap.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateIncludeKeyComparer
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/WeakReferenceIdentityMap.cs
    startLine: 106
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual IIncludeKeyComparer CreateIncludeKeyComparer(INavigation navigation, ValueBuffer valueBuffer)
    content.vb: Public Overridable Function CreateIncludeKeyComparer(navigation As INavigation, valueBuffer As ValueBuffer) As IIncludeKeyComparer
    parameters:
    - id: navigation
      type: Microsoft.EntityFrameworkCore.Metadata.INavigation
    - id: valueBuffer
      type: Microsoft.EntityFrameworkCore.Storage.ValueBuffer
    return:
      type: Microsoft.EntityFrameworkCore.Query.Internal.IIncludeKeyComparer
  implements:
  - Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.CreateIncludeKeyComparer(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.Storage.ValueBuffer)
  nameWithType.vb: WeakReferenceIdentityMap(Of TKey).CreateIncludeKeyComparer(INavigation, ValueBuffer)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap(Of TKey).CreateIncludeKeyComparer(Microsoft.EntityFrameworkCore.Metadata.INavigation, Microsoft.EntityFrameworkCore.Storage.ValueBuffer)
- uid: Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap`1.CreateIncludeKeyComparer(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap`1.CreateIncludeKeyComparer(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  id: CreateIncludeKeyComparer(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  parent: Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap`1
  langs:
  - csharp
  - vb
  name: CreateIncludeKeyComparer(INavigation, InternalEntityEntry)
  nameWithType: WeakReferenceIdentityMap<TKey>.CreateIncludeKeyComparer(INavigation, InternalEntityEntry)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap<TKey>.CreateIncludeKeyComparer(Microsoft.EntityFrameworkCore.Metadata.INavigation, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/WeakReferenceIdentityMap.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateIncludeKeyComparer
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/WeakReferenceIdentityMap.cs
    startLine: 126
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual IIncludeKeyComparer CreateIncludeKeyComparer(INavigation navigation, InternalEntityEntry entry)
    content.vb: Public Overridable Function CreateIncludeKeyComparer(navigation As INavigation, entry As InternalEntityEntry) As IIncludeKeyComparer
    parameters:
    - id: navigation
      type: Microsoft.EntityFrameworkCore.Metadata.INavigation
    - id: entry
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    return:
      type: Microsoft.EntityFrameworkCore.Query.Internal.IIncludeKeyComparer
  implements:
  - Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.CreateIncludeKeyComparer(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  nameWithType.vb: WeakReferenceIdentityMap(Of TKey).CreateIncludeKeyComparer(INavigation, InternalEntityEntry)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap(Of TKey).CreateIncludeKeyComparer(Microsoft.EntityFrameworkCore.Metadata.INavigation, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
references:
- uid: Microsoft.EntityFrameworkCore.Query.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Query.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Query.Internal
  fullName: Microsoft.EntityFrameworkCore.Query.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap
  commentId: T:Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap
  parent: Microsoft.EntityFrameworkCore.Query.Internal
  isExternal: false
  name: IWeakReferenceIdentityMap
  nameWithType: IWeakReferenceIdentityMap
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Metadata.IKey
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IKey
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IKey
  nameWithType: IKey
  fullName: Microsoft.EntityFrameworkCore.Metadata.IKey
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory{{TKey}}
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory{`0}
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  definition: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory`1
  name: IPrincipalKeyValueFactory<TKey>
  nameWithType: IPrincipalKeyValueFactory<TKey>
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory<TKey>
  nameWithType.vb: IPrincipalKeyValueFactory(Of TKey)
  fullname.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory(Of TKey)
  name.vb: IPrincipalKeyValueFactory(Of TKey)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory`1
    name: IPrincipalKeyValueFactory
    nameWithType: IPrincipalKeyValueFactory
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory`1
    name: IPrincipalKeyValueFactory
    nameWithType: IPrincipalKeyValueFactory
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory`1
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory`1
  isExternal: false
  name: IPrincipalKeyValueFactory<TKey>
  nameWithType: IPrincipalKeyValueFactory<TKey>
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory<TKey>
  nameWithType.vb: IPrincipalKeyValueFactory(Of TKey)
  fullname.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory(Of TKey)
  name.vb: IPrincipalKeyValueFactory(Of TKey)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory`1
    name: IPrincipalKeyValueFactory
    nameWithType: IPrincipalKeyValueFactory
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory`1
    name: IPrincipalKeyValueFactory
    nameWithType: IPrincipalKeyValueFactory
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  commentId: N:Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  nameWithType: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
- uid: Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.Key
  commentId: P:Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.Key
  parent: Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap
  isExternal: false
  name: Key
  nameWithType: IWeakReferenceIdentityMap.Key
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.Key
- uid: Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.TryGetEntity(Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Boolean@)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.TryGetEntity(Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Boolean@)
  parent: Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap
  isExternal: true
  name: TryGetEntity(ValueBuffer, Boolean)
  nameWithType: IWeakReferenceIdentityMap.TryGetEntity(ValueBuffer, Boolean)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.TryGetEntity(Microsoft.EntityFrameworkCore.Storage.ValueBuffer, System.Boolean)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.TryGetEntity(Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Boolean@)
    name: TryGetEntity
    nameWithType: IWeakReferenceIdentityMap.TryGetEntity
    fullName: Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.TryGetEntity
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Storage.ValueBuffer
    name: ValueBuffer
    nameWithType: ValueBuffer
    fullName: Microsoft.EntityFrameworkCore.Storage.ValueBuffer
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.TryGetEntity(Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Boolean@)
    name: TryGetEntity
    nameWithType: IWeakReferenceIdentityMap.TryGetEntity
    fullName: Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.TryGetEntity
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Storage.ValueBuffer
    name: ValueBuffer
    nameWithType: ValueBuffer
    fullName: Microsoft.EntityFrameworkCore.Storage.ValueBuffer
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.ValueBuffer
  commentId: T:Microsoft.EntityFrameworkCore.Storage.ValueBuffer
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: ValueBuffer
  nameWithType: ValueBuffer
  fullName: Microsoft.EntityFrameworkCore.Storage.ValueBuffer
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.WeakReference{System.Object}
  commentId: T:System.WeakReference{System.Object}
  parent: System
  definition: System.WeakReference`1
  name: WeakReference<Object>
  nameWithType: WeakReference<Object>
  fullName: System.WeakReference<System.Object>
  nameWithType.vb: WeakReference(Of Object)
  fullname.vb: System.WeakReference(Of System.Object)
  name.vb: WeakReference(Of Object)
  spec.csharp:
  - uid: System.WeakReference`1
    name: WeakReference
    nameWithType: WeakReference
    fullName: System.WeakReference
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.WeakReference`1
    name: WeakReference
    nameWithType: WeakReference
    fullName: System.WeakReference
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage
  commentId: N:Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Storage
  nameWithType: Microsoft.EntityFrameworkCore.Storage
  fullName: Microsoft.EntityFrameworkCore.Storage
- uid: System.WeakReference`1
  commentId: T:System.WeakReference`1
  isExternal: true
  name: WeakReference<T>
  nameWithType: WeakReference<T>
  fullName: System.WeakReference<T>
  nameWithType.vb: WeakReference(Of T)
  fullname.vb: System.WeakReference(Of T)
  name.vb: WeakReference(Of T)
  spec.csharp:
  - uid: System.WeakReference`1
    name: WeakReference
    nameWithType: WeakReference
    fullName: System.WeakReference
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.WeakReference`1
    name: WeakReference
    nameWithType: WeakReference
    fullName: System.WeakReference
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.CollectGarbage
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.CollectGarbage
  parent: Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap
  isExternal: false
  name: CollectGarbage()
  nameWithType: IWeakReferenceIdentityMap.CollectGarbage()
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.CollectGarbage()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.CollectGarbage
    name: CollectGarbage
    nameWithType: IWeakReferenceIdentityMap.CollectGarbage
    fullName: Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.CollectGarbage
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.CollectGarbage
    name: CollectGarbage
    nameWithType: IWeakReferenceIdentityMap.CollectGarbage
    fullName: Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.CollectGarbage
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.Add(Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.Add(Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Object)
  parent: Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap
  isExternal: true
  name: Add(ValueBuffer, Object)
  nameWithType: IWeakReferenceIdentityMap.Add(ValueBuffer, Object)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.Add(Microsoft.EntityFrameworkCore.Storage.ValueBuffer, System.Object)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.Add(Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Object)
    name: Add
    nameWithType: IWeakReferenceIdentityMap.Add
    fullName: Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Storage.ValueBuffer
    name: ValueBuffer
    nameWithType: ValueBuffer
    fullName: Microsoft.EntityFrameworkCore.Storage.ValueBuffer
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.Add(Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Object)
    name: Add
    nameWithType: IWeakReferenceIdentityMap.Add
    fullName: Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Storage.ValueBuffer
    name: ValueBuffer
    nameWithType: ValueBuffer
    fullName: Microsoft.EntityFrameworkCore.Storage.ValueBuffer
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.CreateIncludeKeyComparer(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.Storage.ValueBuffer)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.CreateIncludeKeyComparer(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.Storage.ValueBuffer)
  parent: Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap
  isExternal: false
  name: CreateIncludeKeyComparer(INavigation, ValueBuffer)
  nameWithType: IWeakReferenceIdentityMap.CreateIncludeKeyComparer(INavigation, ValueBuffer)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.CreateIncludeKeyComparer(Microsoft.EntityFrameworkCore.Metadata.INavigation, Microsoft.EntityFrameworkCore.Storage.ValueBuffer)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.CreateIncludeKeyComparer(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.Storage.ValueBuffer)
    name: CreateIncludeKeyComparer
    nameWithType: IWeakReferenceIdentityMap.CreateIncludeKeyComparer
    fullName: Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.CreateIncludeKeyComparer
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.INavigation
    name: INavigation
    nameWithType: INavigation
    fullName: Microsoft.EntityFrameworkCore.Metadata.INavigation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.ValueBuffer
    name: ValueBuffer
    nameWithType: ValueBuffer
    fullName: Microsoft.EntityFrameworkCore.Storage.ValueBuffer
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.CreateIncludeKeyComparer(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.Storage.ValueBuffer)
    name: CreateIncludeKeyComparer
    nameWithType: IWeakReferenceIdentityMap.CreateIncludeKeyComparer
    fullName: Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.CreateIncludeKeyComparer
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.INavigation
    name: INavigation
    nameWithType: INavigation
    fullName: Microsoft.EntityFrameworkCore.Metadata.INavigation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.ValueBuffer
    name: ValueBuffer
    nameWithType: ValueBuffer
    fullName: Microsoft.EntityFrameworkCore.Storage.ValueBuffer
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.INavigation
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.INavigation
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: INavigation
  nameWithType: INavigation
  fullName: Microsoft.EntityFrameworkCore.Metadata.INavigation
- uid: Microsoft.EntityFrameworkCore.Query.Internal.IIncludeKeyComparer
  commentId: T:Microsoft.EntityFrameworkCore.Query.Internal.IIncludeKeyComparer
  parent: Microsoft.EntityFrameworkCore.Query.Internal
  isExternal: false
  name: IIncludeKeyComparer
  nameWithType: IIncludeKeyComparer
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.IIncludeKeyComparer
- uid: Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.CreateIncludeKeyComparer(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.CreateIncludeKeyComparer(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  parent: Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap
  isExternal: false
  name: CreateIncludeKeyComparer(INavigation, InternalEntityEntry)
  nameWithType: IWeakReferenceIdentityMap.CreateIncludeKeyComparer(INavigation, InternalEntityEntry)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.CreateIncludeKeyComparer(Microsoft.EntityFrameworkCore.Metadata.INavigation, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.CreateIncludeKeyComparer(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
    name: CreateIncludeKeyComparer
    nameWithType: IWeakReferenceIdentityMap.CreateIncludeKeyComparer
    fullName: Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.CreateIncludeKeyComparer
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.INavigation
    name: INavigation
    nameWithType: INavigation
    fullName: Microsoft.EntityFrameworkCore.Metadata.INavigation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.CreateIncludeKeyComparer(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
    name: CreateIncludeKeyComparer
    nameWithType: IWeakReferenceIdentityMap.CreateIncludeKeyComparer
    fullName: Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.CreateIncludeKeyComparer
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.INavigation
    name: INavigation
    nameWithType: INavigation
    fullName: Microsoft.EntityFrameworkCore.Metadata.INavigation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  isExternal: false
  name: InternalEntityEntry
  nameWithType: InternalEntityEntry
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
