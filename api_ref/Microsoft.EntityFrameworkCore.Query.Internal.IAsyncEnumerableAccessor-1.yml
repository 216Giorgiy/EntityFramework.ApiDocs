### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Query.Internal.IAsyncEnumerableAccessor`1
  commentId: T:Microsoft.EntityFrameworkCore.Query.Internal.IAsyncEnumerableAccessor`1
  id: IAsyncEnumerableAccessor`1
  parent: Microsoft.EntityFrameworkCore.Query.Internal
  children:
  - Microsoft.EntityFrameworkCore.Query.Internal.IAsyncEnumerableAccessor`1.AsyncEnumerable
  langs:
  - csharp
  - vb
  name: IAsyncEnumerableAccessor<T>
  nameWithType: IAsyncEnumerableAccessor<T>
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.IAsyncEnumerableAccessor<T>
  type: Interface
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/IAsyncEnumerableAccessor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: IAsyncEnumerableAccessor
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/IAsyncEnumerableAccessor.cs
    startLine: 11
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public interface IAsyncEnumerableAccessor<out T>
    content.vb: Public Interface IAsyncEnumerableAccessor(Of Out T)
    typeParameters:
    - id: T
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Query.Internal.IAsyncEnumerableAccessor`1.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  nameWithType.vb: IAsyncEnumerableAccessor(Of T)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Microsoft.EntityFrameworkCore.Query.Internal.IAsyncEnumerableAccessor(Of T)
  name.vb: IAsyncEnumerableAccessor(Of T)
- uid: Microsoft.EntityFrameworkCore.Query.Internal.IAsyncEnumerableAccessor`1.AsyncEnumerable
  commentId: P:Microsoft.EntityFrameworkCore.Query.Internal.IAsyncEnumerableAccessor`1.AsyncEnumerable
  id: AsyncEnumerable
  parent: Microsoft.EntityFrameworkCore.Query.Internal.IAsyncEnumerableAccessor`1
  langs:
  - csharp
  - vb
  name: AsyncEnumerable
  nameWithType: IAsyncEnumerableAccessor<T>.AsyncEnumerable
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.IAsyncEnumerableAccessor<T>.AsyncEnumerable
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/IAsyncEnumerableAccessor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: AsyncEnumerable
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/IAsyncEnumerableAccessor.cs
    startLine: 17
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: IAsyncEnumerable<T> AsyncEnumerable { get; }
    content.vb: ReadOnly Property AsyncEnumerable As IAsyncEnumerable(Of T)
    parameters: []
    return:
      type: IAsyncEnumerable{{T}}
  nameWithType.vb: IAsyncEnumerableAccessor(Of T).AsyncEnumerable
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Microsoft.EntityFrameworkCore.Query.Internal.IAsyncEnumerableAccessor(Of T).AsyncEnumerable
references:
- uid: Microsoft.EntityFrameworkCore.Query.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Query.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Query.Internal
  fullName: Microsoft.EntityFrameworkCore.Query.Internal
- uid: Microsoft.EntityFrameworkCore.Query.Internal.IAsyncEnumerableAccessor`1.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<IAsyncEnumerableAccessor<T>, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<IAsyncEnumerableAccessor<T>, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Query.Internal.IAsyncEnumerableAccessor<T>, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of IAsyncEnumerableAccessor(Of T), TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Query.Internal.IAsyncEnumerableAccessor(Of T), TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of IAsyncEnumerableAccessor(Of T), TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<IAsyncEnumerableAccessor<T>, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<IAsyncEnumerableAccessor<T>, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Query.Internal.IAsyncEnumerableAccessor<T>, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of IAsyncEnumerableAccessor(Of T), TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of IAsyncEnumerableAccessor(Of T), TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Query.Internal.IAsyncEnumerableAccessor(Of T), TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: IAsyncEnumerable{{T}}
  commentId: '!:IAsyncEnumerable{``0}'
  definition: IAsyncEnumerable`1
  name: IAsyncEnumerable<T>
  nameWithType: IAsyncEnumerable<T>
  fullName: IAsyncEnumerable<T>
  nameWithType.vb: IAsyncEnumerable(Of T)
  fullname.vb: IAsyncEnumerable(Of T)
  name.vb: IAsyncEnumerable(Of T)
  spec.csharp:
  - uid: IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: IAsyncEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: IAsyncEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: IAsyncEnumerable`1
  isExternal: true
  name: IAsyncEnumerable<>
  nameWithType: IAsyncEnumerable<>
  fullName: IAsyncEnumerable<>
  nameWithType.vb: IAsyncEnumerable(Of )
  fullname.vb: IAsyncEnumerable(Of )
  name.vb: IAsyncEnumerable(Of )
  spec.csharp:
  - uid: IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: IAsyncEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: IAsyncEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
