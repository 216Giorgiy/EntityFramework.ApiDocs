### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Query.Internal.IAsyncEnumerableAccessor`1
  commentId: T:Microsoft.EntityFrameworkCore.Query.Internal.IAsyncEnumerableAccessor`1
  id: IAsyncEnumerableAccessor`1
  parent: Microsoft.EntityFrameworkCore.Query.Internal
  children:
  - Microsoft.EntityFrameworkCore.Query.Internal.IAsyncEnumerableAccessor`1.AsyncEnumerable
  langs:
  - csharp
  - vb
  name: IAsyncEnumerableAccessor<T>
  nameWithType: IAsyncEnumerableAccessor<T>
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.IAsyncEnumerableAccessor<T>
  type: Interface
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/IAsyncEnumerableAccessor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: IAsyncEnumerableAccessor
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/IAsyncEnumerableAccessor.cs
    startLine: 11
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public interface IAsyncEnumerableAccessor<out T>
    content.vb: Public Interface IAsyncEnumerableAccessor(Of Out T)
    typeParameters:
    - id: T
  nameWithType.vb: IAsyncEnumerableAccessor(Of T)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Microsoft.EntityFrameworkCore.Query.Internal.IAsyncEnumerableAccessor(Of T)
  name.vb: IAsyncEnumerableAccessor(Of T)
- uid: Microsoft.EntityFrameworkCore.Query.Internal.IAsyncEnumerableAccessor`1.AsyncEnumerable
  commentId: P:Microsoft.EntityFrameworkCore.Query.Internal.IAsyncEnumerableAccessor`1.AsyncEnumerable
  id: AsyncEnumerable
  parent: Microsoft.EntityFrameworkCore.Query.Internal.IAsyncEnumerableAccessor`1
  langs:
  - csharp
  - vb
  name: AsyncEnumerable
  nameWithType: IAsyncEnumerableAccessor<T>.AsyncEnumerable
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.IAsyncEnumerableAccessor<T>.AsyncEnumerable
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/IAsyncEnumerableAccessor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AsyncEnumerable
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/IAsyncEnumerableAccessor.cs
    startLine: 17
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: IAsyncEnumerable<T> AsyncEnumerable { get; }
    content.vb: ReadOnly Property AsyncEnumerable As IAsyncEnumerable(Of T)
    parameters: []
    return:
      type: IAsyncEnumerable{{T}}
  overload: Microsoft.EntityFrameworkCore.Query.Internal.IAsyncEnumerableAccessor`1.AsyncEnumerable*
  nameWithType.vb: IAsyncEnumerableAccessor(Of T).AsyncEnumerable
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Microsoft.EntityFrameworkCore.Query.Internal.IAsyncEnumerableAccessor(Of T).AsyncEnumerable
references:
- uid: Microsoft.EntityFrameworkCore.Query.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Query.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Query.Internal
  fullName: Microsoft.EntityFrameworkCore.Query.Internal
- uid: Microsoft.EntityFrameworkCore.Query.Internal.IAsyncEnumerableAccessor`1.AsyncEnumerable*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.Internal.IAsyncEnumerableAccessor`1.AsyncEnumerable
  isExternal: false
  name: AsyncEnumerable
  nameWithType: IAsyncEnumerableAccessor<T>.AsyncEnumerable
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.IAsyncEnumerableAccessor<T>.AsyncEnumerable
  nameWithType.vb: IAsyncEnumerableAccessor(Of T).AsyncEnumerable
  fullname.vb: Microsoft.EntityFrameworkCore.Query.Internal.IAsyncEnumerableAccessor(Of T).AsyncEnumerable
- uid: IAsyncEnumerable{{T}}
  commentId: '!:IAsyncEnumerable{``0}'
  definition: IAsyncEnumerable`1
  name: IAsyncEnumerable<T>
  nameWithType: IAsyncEnumerable<T>
  fullName: IAsyncEnumerable<T>
  nameWithType.vb: IAsyncEnumerable(Of T)
  fullname.vb: IAsyncEnumerable(Of T)
  name.vb: IAsyncEnumerable(Of T)
  spec.csharp:
  - uid: IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: IAsyncEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: IAsyncEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: IAsyncEnumerable`1
  isExternal: true
  name: IAsyncEnumerable<>
  nameWithType: IAsyncEnumerable<>
  fullName: IAsyncEnumerable<>
  nameWithType.vb: IAsyncEnumerable(Of )
  fullname.vb: IAsyncEnumerable(Of )
  name.vb: IAsyncEnumerable(Of )
  spec.csharp:
  - uid: IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: IAsyncEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: IAsyncEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
