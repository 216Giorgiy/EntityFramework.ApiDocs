### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Infrastructure.ModelCacheKey
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.ModelCacheKey
  id: ModelCacheKey
  parent: Microsoft.EntityFrameworkCore.Infrastructure
  children:
  - Microsoft.EntityFrameworkCore.Infrastructure.ModelCacheKey.#ctor(Microsoft.EntityFrameworkCore.DbContext)
  - Microsoft.EntityFrameworkCore.Infrastructure.ModelCacheKey.Equals(Microsoft.EntityFrameworkCore.Infrastructure.ModelCacheKey)
  - Microsoft.EntityFrameworkCore.Infrastructure.ModelCacheKey.Equals(System.Object)
  - Microsoft.EntityFrameworkCore.Infrastructure.ModelCacheKey.GetHashCode
  langs:
  - csharp
  - vb
  name: ModelCacheKey
  nameWithType: ModelCacheKey
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.ModelCacheKey
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Infrastructure/ModelCacheKey.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ModelCacheKey
    path: src/Microsoft.EntityFrameworkCore/Infrastructure/ModelCacheKey.cs
    startLine: 19
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Infrastructure
  summary: "\n<p>\n    A key that uniquely identifies the model for a given context. This is used to store and lookup\n    a cached model for a given context. This default implementation uses the context type as they key, thus\n    assuming that all contexts of a given type have the same model.\n</p>\n<p>\n    This type is typically used by database providers (and other extensions). It is generally\n    not used in application code.\n</p>\n"
  example: []
  syntax:
    content: public class ModelCacheKey
    content.vb: Public Class ModelCacheKey
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Infrastructure.ModelCacheKey.#ctor(Microsoft.EntityFrameworkCore.DbContext)
  commentId: M:Microsoft.EntityFrameworkCore.Infrastructure.ModelCacheKey.#ctor(Microsoft.EntityFrameworkCore.DbContext)
  id: '#ctor(Microsoft.EntityFrameworkCore.DbContext)'
  parent: Microsoft.EntityFrameworkCore.Infrastructure.ModelCacheKey
  langs:
  - csharp
  - vb
  name: ModelCacheKey(DbContext)
  nameWithType: ModelCacheKey.ModelCacheKey(DbContext)
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.ModelCacheKey.ModelCacheKey(Microsoft.EntityFrameworkCore.DbContext)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Infrastructure/ModelCacheKey.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore/Infrastructure/ModelCacheKey.cs
    startLine: 27
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Infrastructure
  summary: "\n    Initializes a new instance of the <xref href=\"Microsoft.EntityFrameworkCore.Infrastructure.ModelCacheKey\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public ModelCacheKey(DbContext context)
    content.vb: Public Sub New(context As DbContext)
    parameters:
    - id: context
      type: Microsoft.EntityFrameworkCore.DbContext
      description: "\n    The context instance that this key is for.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Infrastructure.ModelCacheKey.Equals(Microsoft.EntityFrameworkCore.Infrastructure.ModelCacheKey)
  commentId: M:Microsoft.EntityFrameworkCore.Infrastructure.ModelCacheKey.Equals(Microsoft.EntityFrameworkCore.Infrastructure.ModelCacheKey)
  id: Equals(Microsoft.EntityFrameworkCore.Infrastructure.ModelCacheKey)
  parent: Microsoft.EntityFrameworkCore.Infrastructure.ModelCacheKey
  langs:
  - csharp
  - vb
  name: Equals(ModelCacheKey)
  nameWithType: ModelCacheKey.Equals(ModelCacheKey)
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.ModelCacheKey.Equals(Microsoft.EntityFrameworkCore.Infrastructure.ModelCacheKey)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Infrastructure/ModelCacheKey.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Equals
    path: src/Microsoft.EntityFrameworkCore/Infrastructure/ModelCacheKey.cs
    startLine: 43
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Infrastructure
  summary: "\n    Determines if this key is equivalent to a given key (i.e. if they are for the same context type).\n"
  example: []
  syntax:
    content: protected virtual bool Equals(ModelCacheKey other)
    content.vb: Protected Overridable Function Equals(other As ModelCacheKey) As Boolean
    parameters:
    - id: other
      type: Microsoft.EntityFrameworkCore.Infrastructure.ModelCacheKey
      description: "\n    The key to compare this key to.\n"
    return:
      type: System.Boolean
      description: "\n    True if the key is for the same context type, otherwise false.\n"
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Infrastructure.ModelCacheKey.Equals(System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Infrastructure.ModelCacheKey.Equals(System.Object)
  id: Equals(System.Object)
  parent: Microsoft.EntityFrameworkCore.Infrastructure.ModelCacheKey
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: ModelCacheKey.Equals(Object)
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.ModelCacheKey.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Infrastructure/ModelCacheKey.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Equals
    path: src/Microsoft.EntityFrameworkCore/Infrastructure/ModelCacheKey.cs
    startLine: 54
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Infrastructure
  summary: "\n    Determines if this key is equivalent to a given object (i.e. if they are keys for the same context type).\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: "\n    The object to compare this key to.\n"
    return:
      type: System.Boolean
      description: "\n    True if the object is a <xref href=\"Microsoft.EntityFrameworkCore.Infrastructure.ModelCacheKey\" data-throw-if-not-resolved=\"false\"></xref> and is for the same context type, otherwise false.\n"
  overridden: System.Object.Equals(System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Infrastructure.ModelCacheKey.GetHashCode
  commentId: M:Microsoft.EntityFrameworkCore.Infrastructure.ModelCacheKey.GetHashCode
  id: GetHashCode
  parent: Microsoft.EntityFrameworkCore.Infrastructure.ModelCacheKey
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: ModelCacheKey.GetHashCode()
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.ModelCacheKey.GetHashCode()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Infrastructure/ModelCacheKey.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetHashCode
    path: src/Microsoft.EntityFrameworkCore/Infrastructure/ModelCacheKey.cs
    startLine: 66
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Infrastructure
  summary: "\n    Gets the hash code for the key.\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: "\n    The hash code for the key.\n"
  overridden: System.Object.GetHashCode
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.EntityFrameworkCore.Infrastructure
  commentId: N:Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Infrastructure
  nameWithType: Microsoft.EntityFrameworkCore.Infrastructure
  fullName: Microsoft.EntityFrameworkCore.Infrastructure
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Infrastructure.ModelCacheKey
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.ModelCacheKey
  parent: Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: ModelCacheKey
  nameWithType: ModelCacheKey
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.ModelCacheKey
- uid: Microsoft.EntityFrameworkCore.DbContext
  commentId: T:Microsoft.EntityFrameworkCore.DbContext
  parent: Microsoft.EntityFrameworkCore
  isExternal: false
  name: DbContext
  nameWithType: DbContext
  fullName: Microsoft.EntityFrameworkCore.DbContext
- uid: Microsoft.EntityFrameworkCore
  commentId: N:Microsoft.EntityFrameworkCore
  isExternal: false
  name: Microsoft.EntityFrameworkCore
  nameWithType: Microsoft.EntityFrameworkCore
  fullName: Microsoft.EntityFrameworkCore
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
