### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IDbContextFactory`1
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.IDbContextFactory`1
  id: IDbContextFactory`1
  parent: Microsoft.EntityFrameworkCore.Infrastructure
  children:
  - Microsoft.EntityFrameworkCore.Infrastructure.IDbContextFactory`1.Create(Microsoft.EntityFrameworkCore.Infrastructure.DbContextFactoryOptions)
  langs:
  - csharp
  - vb
  name: IDbContextFactory<TContext>
  nameWithType: IDbContextFactory<TContext>
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IDbContextFactory<TContext>
  type: Interface
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Infrastructure/IDbContextFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: IDbContextFactory
    path: src/Microsoft.EntityFrameworkCore/Infrastructure/IDbContextFactory.cs
    startLine: 15
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Infrastructure
  summary: "\n    A factory for creating derived <xref href=\"Microsoft.EntityFrameworkCore.DbContext\" data-throw-if-not-resolved=\"false\"></xref> instances. Implement this interface to enable\n    design-time services for context types that do not have a public default constructor. At design-time,\n    derived <xref href=\"Microsoft.EntityFrameworkCore.DbContext\" data-throw-if-not-resolved=\"false\"></xref> instances can be created in order to enable specific design-time\n    experiences such as Migrations. Design-time services will automatically discover implementations of\n    this interface that are in the same assembly as the derived context.\n"
  example: []
  syntax:
    content: >-
      public interface IDbContextFactory<out TContext>
          where TContext : DbContext
    content.vb: Public Interface IDbContextFactory(Of Out TContext As DbContext)
    typeParameters:
    - id: TContext
      description: The type of the context.
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Infrastructure.IDbContextFactory`1.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  nameWithType.vb: IDbContextFactory(Of TContext)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Microsoft.EntityFrameworkCore.Infrastructure.IDbContextFactory(Of TContext)
  name.vb: IDbContextFactory(Of TContext)
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IDbContextFactory`1.Create(Microsoft.EntityFrameworkCore.Infrastructure.DbContextFactoryOptions)
  commentId: M:Microsoft.EntityFrameworkCore.Infrastructure.IDbContextFactory`1.Create(Microsoft.EntityFrameworkCore.Infrastructure.DbContextFactoryOptions)
  id: Create(Microsoft.EntityFrameworkCore.Infrastructure.DbContextFactoryOptions)
  parent: Microsoft.EntityFrameworkCore.Infrastructure.IDbContextFactory`1
  langs:
  - csharp
  - vb
  name: Create(DbContextFactoryOptions)
  nameWithType: IDbContextFactory<TContext>.Create(DbContextFactoryOptions)
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IDbContextFactory<TContext>.Create(Microsoft.EntityFrameworkCore.Infrastructure.DbContextFactoryOptions)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Infrastructure/IDbContextFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Create
    path: src/Microsoft.EntityFrameworkCore/Infrastructure/IDbContextFactory.cs
    startLine: 23
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Infrastructure
  summary: "\n    Creates a new instance of a derived context.\n"
  example: []
  syntax:
    content: TContext Create(DbContextFactoryOptions options)
    content.vb: Function Create(options As DbContextFactoryOptions) As TContext
    parameters:
    - id: options
      type: Microsoft.EntityFrameworkCore.Infrastructure.DbContextFactoryOptions
      description: 'Information about the environment an application is running in. '
    return:
      type: '{TContext}'
      description: 'An instance of <em>TContext</em>. '
  nameWithType.vb: IDbContextFactory(Of TContext).Create(DbContextFactoryOptions)
  fullName.vb: Microsoft.EntityFrameworkCore.Infrastructure.IDbContextFactory(Of TContext).Create(Microsoft.EntityFrameworkCore.Infrastructure.DbContextFactoryOptions)
references:
- uid: Microsoft.EntityFrameworkCore.DbContext
  commentId: T:Microsoft.EntityFrameworkCore.DbContext
  parent: Microsoft.EntityFrameworkCore
  isExternal: false
  name: DbContext
  nameWithType: DbContext
  fullName: Microsoft.EntityFrameworkCore.DbContext
- uid: Microsoft.EntityFrameworkCore.Infrastructure
  commentId: N:Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Infrastructure
  nameWithType: Microsoft.EntityFrameworkCore.Infrastructure
  fullName: Microsoft.EntityFrameworkCore.Infrastructure
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IDbContextFactory`1.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<IDbContextFactory<TContext>, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<IDbContextFactory<TContext>, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Infrastructure.IDbContextFactory<TContext>, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of IDbContextFactory(Of TContext), TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Infrastructure.IDbContextFactory(Of TContext), TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of IDbContextFactory(Of TContext), TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<IDbContextFactory<TContext>, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<IDbContextFactory<TContext>, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Infrastructure.IDbContextFactory<TContext>, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of IDbContextFactory(Of TContext), TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of IDbContextFactory(Of TContext), TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Infrastructure.IDbContextFactory(Of TContext), TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore
  commentId: N:Microsoft.EntityFrameworkCore
  isExternal: false
  name: Microsoft.EntityFrameworkCore
  nameWithType: Microsoft.EntityFrameworkCore
  fullName: Microsoft.EntityFrameworkCore
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: Microsoft.EntityFrameworkCore.Infrastructure.DbContextFactoryOptions
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.DbContextFactoryOptions
  parent: Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: DbContextFactoryOptions
  nameWithType: DbContextFactoryOptions
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.DbContextFactoryOptions
- uid: '{TContext}'
  commentId: '!:TContext'
  definition: TContext
  name: TContext
  nameWithType: TContext
  fullName: TContext
- uid: TContext
  commentId: '!:TContext'
  isExternal: false
  name: TContext
  nameWithType: TContext
  fullName: TContext
