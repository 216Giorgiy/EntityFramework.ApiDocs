### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ScaffoldingUtilities
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ScaffoldingUtilities
  id: ScaffoldingUtilities
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  children:
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.ScaffoldingUtilities.GenerateLambdaToKey(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty},System.String)
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.ScaffoldingUtilities.LayoutRelationshipConfigurationLines(Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder,System.String,Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.RelationshipConfiguration,System.String,System.String)
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.ScaffoldingUtilities.OrderedProperties(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  langs:
  - csharp
  - vb
  name: ScaffoldingUtilities
  nameWithType: ScaffoldingUtilities
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ScaffoldingUtilities
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ScaffoldingUtilities.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ScaffoldingUtilities
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ScaffoldingUtilities.cs
    startLine: 21
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public class ScaffoldingUtilities
    content.vb: Public Class ScaffoldingUtilities
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ScaffoldingUtilities.GenerateLambdaToKey(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty},System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ScaffoldingUtilities.GenerateLambdaToKey(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty},System.String)
  id: GenerateLambdaToKey(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty},System.String)
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ScaffoldingUtilities
  langs:
  - csharp
  - vb
  name: GenerateLambdaToKey(IReadOnlyList<IProperty>, String)
  nameWithType: ScaffoldingUtilities.GenerateLambdaToKey(IReadOnlyList<IProperty>, String)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ScaffoldingUtilities.GenerateLambdaToKey(System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Metadata.IProperty>, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ScaffoldingUtilities.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GenerateLambdaToKey
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ScaffoldingUtilities.cs
    startLine: 27
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual string GenerateLambdaToKey(IReadOnlyList<IProperty> properties, string lambdaIdentifier)
    content.vb: Public Overridable Function GenerateLambdaToKey(properties As IReadOnlyList(Of IProperty), lambdaIdentifier As String) As String
    parameters:
    - id: properties
      type: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty}
    - id: lambdaIdentifier
      type: System.String
    return:
      type: System.String
  nameWithType.vb: ScaffoldingUtilities.GenerateLambdaToKey(IReadOnlyList(Of IProperty), String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ScaffoldingUtilities.GenerateLambdaToKey(System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Metadata.IProperty), System.String)
  name.vb: GenerateLambdaToKey(IReadOnlyList(Of IProperty), String)
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ScaffoldingUtilities.LayoutRelationshipConfigurationLines(Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder,System.String,Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.RelationshipConfiguration,System.String,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ScaffoldingUtilities.LayoutRelationshipConfigurationLines(Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder,System.String,Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.RelationshipConfiguration,System.String,System.String)
  id: LayoutRelationshipConfigurationLines(Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder,System.String,Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.RelationshipConfiguration,System.String,System.String)
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ScaffoldingUtilities
  langs:
  - csharp
  - vb
  name: LayoutRelationshipConfigurationLines(IndentedStringBuilder, String, RelationshipConfiguration, String, String)
  nameWithType: ScaffoldingUtilities.LayoutRelationshipConfigurationLines(IndentedStringBuilder, String, RelationshipConfiguration, String, String)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ScaffoldingUtilities.LayoutRelationshipConfigurationLines(Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder, System.String, Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.RelationshipConfiguration, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ScaffoldingUtilities.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: LayoutRelationshipConfigurationLines
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ScaffoldingUtilities.cs
    startLine: 54
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual void LayoutRelationshipConfigurationLines(IndentedStringBuilder sb, string entityLambdaIdentifier, RelationshipConfiguration rc, string dependentEndLambdaIdentifier, string principalEndLambdaIdentifier)
    content.vb: Public Overridable Sub LayoutRelationshipConfigurationLines(sb As IndentedStringBuilder, entityLambdaIdentifier As String, rc As RelationshipConfiguration, dependentEndLambdaIdentifier As String, principalEndLambdaIdentifier As String)
    parameters:
    - id: sb
      type: Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder
    - id: entityLambdaIdentifier
      type: System.String
    - id: rc
      type: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.RelationshipConfiguration
    - id: dependentEndLambdaIdentifier
      type: System.String
    - id: principalEndLambdaIdentifier
      type: System.String
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ScaffoldingUtilities.OrderedProperties(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ScaffoldingUtilities.OrderedProperties(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  id: OrderedProperties(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ScaffoldingUtilities
  langs:
  - csharp
  - vb
  name: OrderedProperties(IEntityType)
  nameWithType: ScaffoldingUtilities.OrderedProperties(IEntityType)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ScaffoldingUtilities.OrderedProperties(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ScaffoldingUtilities.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: OrderedProperties
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ScaffoldingUtilities.cs
    startLine: 172
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual IEnumerable<IProperty> OrderedProperties(IEntityType entityType)
    content.vb: Public Overridable Function OrderedProperties(entityType As IEntityType) As IEnumerable(Of IProperty)
    parameters:
    - id: entityType
      type: Microsoft.EntityFrameworkCore.Metadata.IEntityType
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IProperty}
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Scaffolding.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty}
  commentId: T:System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<IProperty>
  nameWithType: IReadOnlyList<IProperty>
  fullName: System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Metadata.IProperty>
  nameWithType.vb: IReadOnlyList(Of IProperty)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Metadata.IProperty)
  name.vb: IReadOnlyList(Of IProperty)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
    name: IProperty
    nameWithType: IProperty
    fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
    name: IProperty
    nameWithType: IProperty
    fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder
  parent: Microsoft.EntityFrameworkCore.Internal
  isExternal: false
  name: IndentedStringBuilder
  nameWithType: IndentedStringBuilder
  fullName: Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.RelationshipConfiguration
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.RelationshipConfiguration
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  isExternal: false
  name: RelationshipConfiguration
  nameWithType: RelationshipConfiguration
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.RelationshipConfiguration
- uid: Microsoft.EntityFrameworkCore.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Internal
  fullName: Microsoft.EntityFrameworkCore.Internal
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
- uid: Microsoft.EntityFrameworkCore.Metadata.IEntityType
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IEntityType
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IEntityType
  nameWithType: IEntityType
  fullName: Microsoft.EntityFrameworkCore.Metadata.IEntityType
- uid: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IProperty}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IProperty}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IProperty>
  nameWithType: IEnumerable<IProperty>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Metadata.IProperty>
  nameWithType.vb: IEnumerable(Of IProperty)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Metadata.IProperty)
  name.vb: IEnumerable(Of IProperty)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
    name: IProperty
    nameWithType: IProperty
    fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
    name: IProperty
    nameWithType: IProperty
    fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
