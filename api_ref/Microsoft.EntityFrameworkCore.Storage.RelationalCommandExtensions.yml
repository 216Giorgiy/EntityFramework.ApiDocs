### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions
  id: RelationalCommandExtensions
  parent: Microsoft.EntityFrameworkCore.Storage
  children:
  - Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions.ExecuteNonQuery(Microsoft.EntityFrameworkCore.Storage.IRelationalCommand,Microsoft.EntityFrameworkCore.Storage.IRelationalConnection)
  - Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions.ExecuteNonQueryAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalCommand,Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions.ExecuteReader(Microsoft.EntityFrameworkCore.Storage.IRelationalCommand,Microsoft.EntityFrameworkCore.Storage.IRelationalConnection)
  - Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions.ExecuteReaderAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalCommand,Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions.ExecuteScalar(Microsoft.EntityFrameworkCore.Storage.IRelationalCommand,Microsoft.EntityFrameworkCore.Storage.IRelationalConnection)
  - Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions.ExecuteScalarAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalCommand,Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: RelationalCommandExtensions
  nameWithType: RelationalCommandExtensions
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Extensions/RelationalCommandExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: RelationalCommandExtensions
    path: src/Microsoft.EntityFrameworkCore.Relational/Extensions/RelationalCommandExtensions.cs
    startLine: 10
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  syntax:
    content: public static class RelationalCommandExtensions
    content.vb: Public Module RelationalCommandExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions.ExecuteNonQuery(Microsoft.EntityFrameworkCore.Storage.IRelationalCommand,Microsoft.EntityFrameworkCore.Storage.IRelationalConnection)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions.ExecuteNonQuery(Microsoft.EntityFrameworkCore.Storage.IRelationalCommand,Microsoft.EntityFrameworkCore.Storage.IRelationalConnection)
  id: ExecuteNonQuery(Microsoft.EntityFrameworkCore.Storage.IRelationalCommand,Microsoft.EntityFrameworkCore.Storage.IRelationalConnection)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions
  langs:
  - csharp
  - vb
  name: ExecuteNonQuery(IRelationalCommand, IRelationalConnection)
  nameWithType: RelationalCommandExtensions.ExecuteNonQuery(IRelationalCommand, IRelationalConnection)
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions.ExecuteNonQuery(Microsoft.EntityFrameworkCore.Storage.IRelationalCommand, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Extensions/RelationalCommandExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ExecuteNonQuery
    path: src/Microsoft.EntityFrameworkCore.Relational/Extensions/RelationalCommandExtensions.cs
    startLine: 18
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\nExecutes the command with no results.\n"
  example: []
  syntax:
    content: public static int ExecuteNonQuery(this IRelationalCommand command, IRelationalConnection connection)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ExecuteNonQuery(command As IRelationalCommand, connection As IRelationalConnection) As Integer
    parameters:
    - id: command
      type: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand
      description: 'The command to be executed. '
    - id: connection
      type: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
      description: 'The connection to execute against. '
    return:
      type: System.Int32
      description: 'The number of rows affected. '
  overload: Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions.ExecuteNonQuery*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions.ExecuteNonQueryAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalCommand,Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions.ExecuteNonQueryAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalCommand,Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Threading.CancellationToken)
  id: ExecuteNonQueryAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalCommand,Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions
  langs:
  - csharp
  - vb
  name: ExecuteNonQueryAsync(IRelationalCommand, IRelationalConnection, CancellationToken)
  nameWithType: RelationalCommandExtensions.ExecuteNonQueryAsync(IRelationalCommand, IRelationalConnection, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions.ExecuteNonQueryAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalCommand, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Extensions/RelationalCommandExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ExecuteNonQueryAsync
    path: src/Microsoft.EntityFrameworkCore.Relational/Extensions/RelationalCommandExtensions.cs
    startLine: 32
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\nAsynchronously executes the command with no results.\n"
  example: []
  syntax:
    content: public static Task<int> ExecuteNonQueryAsync(this IRelationalCommand command, IRelationalConnection connection, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ExecuteNonQueryAsync(command As IRelationalCommand, connection As IRelationalConnection, cancellationToken As CancellationToken = Nothing) As Task(Of Integer)
    parameters:
    - id: command
      type: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand
      description: 'The command to be executed. '
    - id: connection
      type: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
      description: 'The connection to execute against. '
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for the task to complete.
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: "\nA task that represents the asynchronous operation. The task result contains the number of rows affected.\n"
  overload: Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions.ExecuteNonQueryAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions.ExecuteScalar(Microsoft.EntityFrameworkCore.Storage.IRelationalCommand,Microsoft.EntityFrameworkCore.Storage.IRelationalConnection)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions.ExecuteScalar(Microsoft.EntityFrameworkCore.Storage.IRelationalCommand,Microsoft.EntityFrameworkCore.Storage.IRelationalConnection)
  id: ExecuteScalar(Microsoft.EntityFrameworkCore.Storage.IRelationalCommand,Microsoft.EntityFrameworkCore.Storage.IRelationalConnection)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions
  langs:
  - csharp
  - vb
  name: ExecuteScalar(IRelationalCommand, IRelationalConnection)
  nameWithType: RelationalCommandExtensions.ExecuteScalar(IRelationalCommand, IRelationalConnection)
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions.ExecuteScalar(Microsoft.EntityFrameworkCore.Storage.IRelationalCommand, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Extensions/RelationalCommandExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ExecuteScalar
    path: src/Microsoft.EntityFrameworkCore.Relational/Extensions/RelationalCommandExtensions.cs
    startLine: 44
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\nExecutes the command with a single scalar result.\n"
  example: []
  syntax:
    content: public static object ExecuteScalar(this IRelationalCommand command, IRelationalConnection connection)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ExecuteScalar(command As IRelationalCommand, connection As IRelationalConnection) As Object
    parameters:
    - id: command
      type: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand
      description: 'The command to be executed. '
    - id: connection
      type: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
      description: 'The connection to execute against. '
    return:
      type: System.Object
      description: 'The result of the command. '
  overload: Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions.ExecuteScalar*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions.ExecuteScalarAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalCommand,Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions.ExecuteScalarAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalCommand,Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Threading.CancellationToken)
  id: ExecuteScalarAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalCommand,Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions
  langs:
  - csharp
  - vb
  name: ExecuteScalarAsync(IRelationalCommand, IRelationalConnection, CancellationToken)
  nameWithType: RelationalCommandExtensions.ExecuteScalarAsync(IRelationalCommand, IRelationalConnection, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions.ExecuteScalarAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalCommand, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Extensions/RelationalCommandExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ExecuteScalarAsync
    path: src/Microsoft.EntityFrameworkCore.Relational/Extensions/RelationalCommandExtensions.cs
    startLine: 58
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\nAsynchronously executes the command with a single scalar result.\n"
  example: []
  syntax:
    content: public static Task<object> ExecuteScalarAsync(this IRelationalCommand command, IRelationalConnection connection, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ExecuteScalarAsync(command As IRelationalCommand, connection As IRelationalConnection, cancellationToken As CancellationToken = Nothing) As Task(Of Object)
    parameters:
    - id: command
      type: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand
      description: 'The command to be executed. '
    - id: connection
      type: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
      description: 'The connection to execute against. '
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for the task to complete.
    return:
      type: System.Threading.Tasks.Task{System.Object}
      description: "\nA task that represents the asynchronous operation. The task result contains the result of the command.\n"
  overload: Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions.ExecuteScalarAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions.ExecuteReader(Microsoft.EntityFrameworkCore.Storage.IRelationalCommand,Microsoft.EntityFrameworkCore.Storage.IRelationalConnection)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions.ExecuteReader(Microsoft.EntityFrameworkCore.Storage.IRelationalCommand,Microsoft.EntityFrameworkCore.Storage.IRelationalConnection)
  id: ExecuteReader(Microsoft.EntityFrameworkCore.Storage.IRelationalCommand,Microsoft.EntityFrameworkCore.Storage.IRelationalConnection)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions
  langs:
  - csharp
  - vb
  name: ExecuteReader(IRelationalCommand, IRelationalConnection)
  nameWithType: RelationalCommandExtensions.ExecuteReader(IRelationalCommand, IRelationalConnection)
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions.ExecuteReader(Microsoft.EntityFrameworkCore.Storage.IRelationalCommand, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Extensions/RelationalCommandExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ExecuteReader
    path: src/Microsoft.EntityFrameworkCore.Relational/Extensions/RelationalCommandExtensions.cs
    startLine: 70
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\nExecutes the command with a <xref href=\"Microsoft.EntityFrameworkCore.Storage.RelationalDataReader\" data-throw-if-not-resolved=\"false\"></xref> result.\n"
  example: []
  syntax:
    content: public static RelationalDataReader ExecuteReader(this IRelationalCommand command, IRelationalConnection connection)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ExecuteReader(command As IRelationalCommand, connection As IRelationalConnection) As RelationalDataReader
    parameters:
    - id: command
      type: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand
      description: 'The command to be executed. '
    - id: connection
      type: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
      description: 'The connection to execute against. '
    return:
      type: Microsoft.EntityFrameworkCore.Storage.RelationalDataReader
      description: 'The result of the command. '
  overload: Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions.ExecuteReader*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions.ExecuteReaderAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalCommand,Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions.ExecuteReaderAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalCommand,Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Threading.CancellationToken)
  id: ExecuteReaderAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalCommand,Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions
  langs:
  - csharp
  - vb
  name: ExecuteReaderAsync(IRelationalCommand, IRelationalConnection, CancellationToken)
  nameWithType: RelationalCommandExtensions.ExecuteReaderAsync(IRelationalCommand, IRelationalConnection, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions.ExecuteReaderAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalCommand, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Extensions/RelationalCommandExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ExecuteReaderAsync
    path: src/Microsoft.EntityFrameworkCore.Relational/Extensions/RelationalCommandExtensions.cs
    startLine: 84
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\nAsynchronously executes the command with a <xref href=\"Microsoft.EntityFrameworkCore.Storage.RelationalDataReader\" data-throw-if-not-resolved=\"false\"></xref> result.\n"
  example: []
  syntax:
    content: public static Task<RelationalDataReader> ExecuteReaderAsync(this IRelationalCommand command, IRelationalConnection connection, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ExecuteReaderAsync(command As IRelationalCommand, connection As IRelationalConnection, cancellationToken As CancellationToken = Nothing) As Task(Of RelationalDataReader)
    parameters:
    - id: command
      type: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand
      description: 'The command to be executed. '
    - id: connection
      type: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
      description: 'The connection to execute against. '
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for the task to complete.
    return:
      type: System.Threading.Tasks.Task{Microsoft.EntityFrameworkCore.Storage.RelationalDataReader}
      description: "\nA task that represents the asynchronous operation. The task result contains the result of the command.\n"
  overload: Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions.ExecuteReaderAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.EntityFrameworkCore.Storage
  commentId: N:Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Storage
  nameWithType: Microsoft.EntityFrameworkCore.Storage
  fullName: Microsoft.EntityFrameworkCore.Storage
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions.ExecuteNonQuery*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions.ExecuteNonQuery
  isExternal: false
  name: ExecuteNonQuery
  nameWithType: RelationalCommandExtensions.ExecuteNonQuery
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions.ExecuteNonQuery
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IRelationalCommand
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IRelationalCommand
  nameWithType: IRelationalCommand
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IRelationalConnection
  nameWithType: IRelationalConnection
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions.ExecuteNonQueryAsync*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions.ExecuteNonQueryAsync
  isExternal: false
  name: ExecuteNonQueryAsync
  nameWithType: RelationalCommandExtensions.ExecuteNonQueryAsync
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions.ExecuteNonQueryAsync
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: T:System.Threading.Tasks.Task{System.Int32}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Int32>
  nameWithType: Task<Int32>
  fullName: System.Threading.Tasks.Task<System.Int32>
  nameWithType.vb: Task(Of Int32)
  fullname.vb: System.Threading.Tasks.Task(Of System.Int32)
  name.vb: Task(Of Int32)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions.ExecuteScalar*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions.ExecuteScalar
  isExternal: false
  name: ExecuteScalar
  nameWithType: RelationalCommandExtensions.ExecuteScalar
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions.ExecuteScalar
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions.ExecuteScalarAsync*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions.ExecuteScalarAsync
  isExternal: false
  name: ExecuteScalarAsync
  nameWithType: RelationalCommandExtensions.ExecuteScalarAsync
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions.ExecuteScalarAsync
- uid: System.Threading.Tasks.Task{System.Object}
  commentId: T:System.Threading.Tasks.Task{System.Object}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Object>
  nameWithType: Task<Object>
  fullName: System.Threading.Tasks.Task<System.Object>
  nameWithType.vb: Task(Of Object)
  fullname.vb: System.Threading.Tasks.Task(Of System.Object)
  name.vb: Task(Of Object)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalDataReader
  commentId: T:Microsoft.EntityFrameworkCore.Storage.RelationalDataReader
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: RelationalDataReader
  nameWithType: RelationalDataReader
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalDataReader
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions.ExecuteReader*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions.ExecuteReader
  isExternal: false
  name: ExecuteReader
  nameWithType: RelationalCommandExtensions.ExecuteReader
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions.ExecuteReader
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions.ExecuteReaderAsync*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions.ExecuteReaderAsync
  isExternal: false
  name: ExecuteReaderAsync
  nameWithType: RelationalCommandExtensions.ExecuteReaderAsync
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions.ExecuteReaderAsync
- uid: System.Threading.Tasks.Task{Microsoft.EntityFrameworkCore.Storage.RelationalDataReader}
  commentId: T:System.Threading.Tasks.Task{Microsoft.EntityFrameworkCore.Storage.RelationalDataReader}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<RelationalDataReader>
  nameWithType: Task<RelationalDataReader>
  fullName: System.Threading.Tasks.Task<Microsoft.EntityFrameworkCore.Storage.RelationalDataReader>
  nameWithType.vb: Task(Of RelationalDataReader)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.EntityFrameworkCore.Storage.RelationalDataReader)
  name.vb: Task(Of RelationalDataReader)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalDataReader
    name: RelationalDataReader
    nameWithType: RelationalDataReader
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalDataReader
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalDataReader
    name: RelationalDataReader
    nameWithType: RelationalDataReader
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalDataReader
  - name: )
    nameWithType: )
    fullName: )
