### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper
  commentId: T:Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper
  id: ByteArrayRelationalTypeMapper
  parent: Microsoft.EntityFrameworkCore.Storage
  children:
  - Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper.#ctor(System.Int32,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,System.Func{System.Int32,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping})
  - Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper.CreateBoundedMapping
  - Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper.DefaultMapping
  - Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper.FindMapping(System.Boolean,System.Boolean,System.Nullable{System.Int32})
  - Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper.KeyMapping
  - Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper.MaxBoundedLength
  - Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper.RowVersionMapping
  - Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper.UnboundedMapping
  langs:
  - csharp
  - vb
  name: ByteArrayRelationalTypeMapper
  nameWithType: ByteArrayRelationalTypeMapper
  fullName: Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/ByteArrayRelationalTypeMapper.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ByteArrayRelationalTypeMapper
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/ByteArrayRelationalTypeMapper.cs
    startLine: 18
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n<p>\n    Determines the type mapping to use for byte array properties.\n</p>\n<p>\n    This type is typically used by database providers (and other extensions). It is generally\n    not used in application code.\n</p>\n"
  example: []
  syntax:
    content: 'public class ByteArrayRelationalTypeMapper : IByteArrayRelationalTypeMapper'
    content.vb: >-
      Public Class ByteArrayRelationalTypeMapper
          Implements IByteArrayRelationalTypeMapper
  inheritance:
  - System.Object
  implements:
  - Microsoft.EntityFrameworkCore.Storage.IByteArrayRelationalTypeMapper
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper.#ctor(System.Int32,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,System.Func{System.Int32,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping})
  commentId: M:Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper.#ctor(System.Int32,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,System.Func{System.Int32,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping})
  id: '#ctor(System.Int32,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,System.Func{System.Int32,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping})'
  parent: Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper
  langs:
  - csharp
  - vb
  name: ByteArrayRelationalTypeMapper(Int32, RelationalTypeMapping, RelationalTypeMapping, RelationalTypeMapping, RelationalTypeMapping, Func<Int32, RelationalTypeMapping>)
  nameWithType: ByteArrayRelationalTypeMapper.ByteArrayRelationalTypeMapper(Int32, RelationalTypeMapping, RelationalTypeMapping, RelationalTypeMapping, RelationalTypeMapping, Func<Int32, RelationalTypeMapping>)
  fullName: Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper.ByteArrayRelationalTypeMapper(System.Int32, Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping, Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping, Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping, Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping, System.Func<System.Int32, Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/ByteArrayRelationalTypeMapper.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/ByteArrayRelationalTypeMapper.cs
    startLine: 32
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n    Initialized a new instance of the <xref href=\"Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public ByteArrayRelationalTypeMapper(int maxBoundedLength, RelationalTypeMapping defaultMapping, RelationalTypeMapping unboundedMapping, RelationalTypeMapping keyMapping, RelationalTypeMapping rowVersionMapping, Func<int, RelationalTypeMapping> createBoundedMapping)
    content.vb: Public Sub New(maxBoundedLength As Integer, defaultMapping As RelationalTypeMapping, unboundedMapping As RelationalTypeMapping, keyMapping As RelationalTypeMapping, rowVersionMapping As RelationalTypeMapping, createBoundedMapping As Func(Of Integer, RelationalTypeMapping))
    parameters:
    - id: maxBoundedLength
      type: System.Int32
      description: 'Maximum length of data that can be stored in a byte array property. '
    - id: defaultMapping
      type: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping
      description: 'Default mapping to be used. '
    - id: unboundedMapping
      type: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping
      description: 'Mapping to be used for properties with no length specified. '
    - id: keyMapping
      type: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping
      description: 'Mapping to be used for key properties. '
    - id: rowVersionMapping
      type: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping
      description: 'Mapping to be used for properties being used as a row version. '
    - id: createBoundedMapping
      type: System.Func{System.Int32,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping}
      description: 'Function to create a mapping for a property with a given length. '
  nameWithType.vb: ByteArrayRelationalTypeMapper.ByteArrayRelationalTypeMapper(Int32, RelationalTypeMapping, RelationalTypeMapping, RelationalTypeMapping, RelationalTypeMapping, Func(Of Int32, RelationalTypeMapping))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper.ByteArrayRelationalTypeMapper(System.Int32, Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping, Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping, Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping, Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping, System.Func(Of System.Int32, Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping))
  name.vb: ByteArrayRelationalTypeMapper(Int32, RelationalTypeMapping, RelationalTypeMapping, RelationalTypeMapping, RelationalTypeMapping, Func(Of Int32, RelationalTypeMapping))
- uid: Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper.MaxBoundedLength
  commentId: P:Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper.MaxBoundedLength
  id: MaxBoundedLength
  parent: Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper
  langs:
  - csharp
  - vb
  name: MaxBoundedLength
  nameWithType: ByteArrayRelationalTypeMapper.MaxBoundedLength
  fullName: Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper.MaxBoundedLength
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/ByteArrayRelationalTypeMapper.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: MaxBoundedLength
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/ByteArrayRelationalTypeMapper.cs
    startLine: 51
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n Gets the maximum length of data that can be stored in a byte array property\n"
  example: []
  syntax:
    content: public virtual int MaxBoundedLength { get; }
    content.vb: Public Overridable ReadOnly Property MaxBoundedLength As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper.DefaultMapping
  commentId: P:Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper.DefaultMapping
  id: DefaultMapping
  parent: Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper
  langs:
  - csharp
  - vb
  name: DefaultMapping
  nameWithType: ByteArrayRelationalTypeMapper.DefaultMapping
  fullName: Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper.DefaultMapping
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/ByteArrayRelationalTypeMapper.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: DefaultMapping
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/ByteArrayRelationalTypeMapper.cs
    startLine: 56
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n Gets the default mapping to be used.\n"
  example: []
  syntax:
    content: public virtual RelationalTypeMapping DefaultMapping { get; }
    content.vb: Public Overridable ReadOnly Property DefaultMapping As RelationalTypeMapping
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper.UnboundedMapping
  commentId: P:Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper.UnboundedMapping
  id: UnboundedMapping
  parent: Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper
  langs:
  - csharp
  - vb
  name: UnboundedMapping
  nameWithType: ByteArrayRelationalTypeMapper.UnboundedMapping
  fullName: Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper.UnboundedMapping
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/ByteArrayRelationalTypeMapper.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: UnboundedMapping
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/ByteArrayRelationalTypeMapper.cs
    startLine: 61
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n Gets the mapping to be used for properties with no length specified\n"
  example: []
  syntax:
    content: public virtual RelationalTypeMapping UnboundedMapping { get; }
    content.vb: Public Overridable ReadOnly Property UnboundedMapping As RelationalTypeMapping
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper.KeyMapping
  commentId: P:Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper.KeyMapping
  id: KeyMapping
  parent: Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper
  langs:
  - csharp
  - vb
  name: KeyMapping
  nameWithType: ByteArrayRelationalTypeMapper.KeyMapping
  fullName: Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper.KeyMapping
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/ByteArrayRelationalTypeMapper.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: KeyMapping
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/ByteArrayRelationalTypeMapper.cs
    startLine: 66
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n Gets the mapping to be used for key properties\n"
  example: []
  syntax:
    content: public virtual RelationalTypeMapping KeyMapping { get; }
    content.vb: Public Overridable ReadOnly Property KeyMapping As RelationalTypeMapping
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper.RowVersionMapping
  commentId: P:Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper.RowVersionMapping
  id: RowVersionMapping
  parent: Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper
  langs:
  - csharp
  - vb
  name: RowVersionMapping
  nameWithType: ByteArrayRelationalTypeMapper.RowVersionMapping
  fullName: Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper.RowVersionMapping
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/ByteArrayRelationalTypeMapper.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: RowVersionMapping
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/ByteArrayRelationalTypeMapper.cs
    startLine: 71
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n Gets the mapping to be used for properties being used as a row version.\n"
  example: []
  syntax:
    content: public virtual RelationalTypeMapping RowVersionMapping { get; }
    content.vb: Public Overridable ReadOnly Property RowVersionMapping As RelationalTypeMapping
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper.CreateBoundedMapping
  commentId: P:Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper.CreateBoundedMapping
  id: CreateBoundedMapping
  parent: Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper
  langs:
  - csharp
  - vb
  name: CreateBoundedMapping
  nameWithType: ByteArrayRelationalTypeMapper.CreateBoundedMapping
  fullName: Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper.CreateBoundedMapping
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/ByteArrayRelationalTypeMapper.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: CreateBoundedMapping
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/ByteArrayRelationalTypeMapper.cs
    startLine: 76
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n Gets a function to create a mapping for a property with a given length.\n"
  example: []
  syntax:
    content: public virtual Func<int, RelationalTypeMapping> CreateBoundedMapping { get; }
    content.vb: Public Overridable ReadOnly Property CreateBoundedMapping As Func(Of Integer, RelationalTypeMapping)
    parameters: []
    return:
      type: System.Func{System.Int32,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping}
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper.FindMapping(System.Boolean,System.Boolean,System.Nullable{System.Int32})
  commentId: M:Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper.FindMapping(System.Boolean,System.Boolean,System.Nullable{System.Int32})
  id: FindMapping(System.Boolean,System.Boolean,System.Nullable{System.Int32})
  parent: Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper
  langs:
  - csharp
  - vb
  name: FindMapping(Boolean, Boolean, Nullable<Int32>)
  nameWithType: ByteArrayRelationalTypeMapper.FindMapping(Boolean, Boolean, Nullable<Int32>)
  fullName: Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper.FindMapping(System.Boolean, System.Boolean, System.Nullable<System.Int32>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/ByteArrayRelationalTypeMapper.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: FindMapping
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/ByteArrayRelationalTypeMapper.cs
    startLine: 91
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n    Gets the mapping for a property.\n"
  example: []
  syntax:
    content: public virtual RelationalTypeMapping FindMapping(bool rowVersion, bool keyOrIndex, int ? size)
    content.vb: Public Overridable Function FindMapping(rowVersion As Boolean, keyOrIndex As Boolean, size As Integer?) As RelationalTypeMapping
    parameters:
    - id: rowVersion
      type: System.Boolean
      description: "\n    A value indicating whether the property is being used as a row version.\n"
    - id: keyOrIndex
      type: System.Boolean
      description: "\n    A value indicating whether the property is being used as a key and/or index.\n"
    - id: size
      type: System.Nullable{System.Int32}
      description: "\n    The configured length of the property, or null if it is unbounded.\n"
    return:
      type: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping
      description: 'The mapping to be used for the property. '
  implements:
  - Microsoft.EntityFrameworkCore.Storage.IByteArrayRelationalTypeMapper.FindMapping(System.Boolean,System.Boolean,System.Nullable{System.Int32})
  nameWithType.vb: ByteArrayRelationalTypeMapper.FindMapping(Boolean, Boolean, Nullable(Of Int32))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper.FindMapping(System.Boolean, System.Boolean, System.Nullable(Of System.Int32))
  name.vb: FindMapping(Boolean, Boolean, Nullable(Of Int32))
references:
- uid: Microsoft.EntityFrameworkCore.Storage
  commentId: N:Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Storage
  nameWithType: Microsoft.EntityFrameworkCore.Storage
  fullName: Microsoft.EntityFrameworkCore.Storage
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Storage.IByteArrayRelationalTypeMapper
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IByteArrayRelationalTypeMapper
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IByteArrayRelationalTypeMapper
  nameWithType: IByteArrayRelationalTypeMapper
  fullName: Microsoft.EntityFrameworkCore.Storage.IByteArrayRelationalTypeMapper
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<ByteArrayRelationalTypeMapper, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<ByteArrayRelationalTypeMapper, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of ByteArrayRelationalTypeMapper, TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper, TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of ByteArrayRelationalTypeMapper, TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<ByteArrayRelationalTypeMapper, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<ByteArrayRelationalTypeMapper, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of ByteArrayRelationalTypeMapper, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of ByteArrayRelationalTypeMapper, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper
  commentId: T:Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper
  isExternal: false
  name: ByteArrayRelationalTypeMapper
  nameWithType: ByteArrayRelationalTypeMapper
  fullName: Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping
  commentId: T:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: RelationalTypeMapping
  nameWithType: RelationalTypeMapping
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping
- uid: System.Func{System.Int32,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping}
  commentId: T:System.Func{System.Int32,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping}
  parent: System
  definition: System.Func`2
  name: Func<Int32, RelationalTypeMapping>
  nameWithType: Func<Int32, RelationalTypeMapping>
  fullName: System.Func<System.Int32, Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping>
  nameWithType.vb: Func(Of Int32, RelationalTypeMapping)
  fullname.vb: System.Func(Of System.Int32, Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping)
  name.vb: Func(Of Int32, RelationalTypeMapping)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping
    name: RelationalTypeMapping
    nameWithType: RelationalTypeMapping
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping
    name: RelationalTypeMapping
    nameWithType: RelationalTypeMapping
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullname.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.IByteArrayRelationalTypeMapper.FindMapping(System.Boolean,System.Boolean,System.Nullable{System.Int32})
  commentId: M:Microsoft.EntityFrameworkCore.Storage.IByteArrayRelationalTypeMapper.FindMapping(System.Boolean,System.Boolean,System.Nullable{System.Int32})
  parent: Microsoft.EntityFrameworkCore.Storage.IByteArrayRelationalTypeMapper
  isExternal: true
  name: FindMapping(Boolean, Boolean, Nullable<Int32>)
  nameWithType: IByteArrayRelationalTypeMapper.FindMapping(Boolean, Boolean, Nullable<Int32>)
  fullName: Microsoft.EntityFrameworkCore.Storage.IByteArrayRelationalTypeMapper.FindMapping(System.Boolean, System.Boolean, System.Nullable<System.Int32>)
  nameWithType.vb: IByteArrayRelationalTypeMapper.FindMapping(Boolean, Boolean, Nullable(Of Int32))
  fullname.vb: Microsoft.EntityFrameworkCore.Storage.IByteArrayRelationalTypeMapper.FindMapping(System.Boolean, System.Boolean, System.Nullable(Of System.Int32))
  name.vb: FindMapping(Boolean, Boolean, Nullable(Of Int32))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.IByteArrayRelationalTypeMapper.FindMapping(System.Boolean,System.Boolean,System.Nullable{System.Int32})
    name: FindMapping
    nameWithType: IByteArrayRelationalTypeMapper.FindMapping
    fullName: Microsoft.EntityFrameworkCore.Storage.IByteArrayRelationalTypeMapper.FindMapping
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.IByteArrayRelationalTypeMapper.FindMapping(System.Boolean,System.Boolean,System.Nullable{System.Int32})
    name: FindMapping
    nameWithType: IByteArrayRelationalTypeMapper.FindMapping
    fullName: Microsoft.EntityFrameworkCore.Storage.IByteArrayRelationalTypeMapper.FindMapping
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
