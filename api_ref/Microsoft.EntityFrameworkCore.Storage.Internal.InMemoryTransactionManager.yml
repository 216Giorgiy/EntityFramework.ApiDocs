### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager
  commentId: T:Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager
  id: InMemoryTransactionManager
  parent: Microsoft.EntityFrameworkCore.Storage.Internal
  children:
  - Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager.#ctor(ILogger{Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager})
  - Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager.BeginTransaction
  - Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager.BeginTransactionAsync(System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager.CommitTransaction
  - Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager.CurrentTransaction
  - Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager.LogWarning
  - Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager.RollbackTransaction
  langs:
  - csharp
  - vb
  name: InMemoryTransactionManager
  nameWithType: InMemoryTransactionManager
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/InMemoryTransactionManager.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: InMemoryTransactionManager
    path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/InMemoryTransactionManager.cs
    startLine: 13
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  syntax:
    content: 'public class InMemoryTransactionManager : IDbContextTransactionManager'
    content.vb: >-
      Public Class InMemoryTransactionManager
          Implements IDbContextTransactionManager
  inheritance:
  - System.Object
  implements:
  - Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager.#ctor(ILogger{Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager})
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager.#ctor(ILogger{Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager})
  id: '#ctor(ILogger{Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager})'
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager
  langs:
  - csharp
  - vb
  name: InMemoryTransactionManager(ILogger<InMemoryTransactionManager>)
  nameWithType: InMemoryTransactionManager.InMemoryTransactionManager(ILogger<InMemoryTransactionManager>)
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager.InMemoryTransactionManager(ILogger<Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/InMemoryTransactionManager.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/InMemoryTransactionManager.cs
    startLine: 19
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  syntax:
    content: public InMemoryTransactionManager(ILogger<InMemoryTransactionManager> logger)
    content.vb: Public Sub New(logger As ILogger(Of InMemoryTransactionManager))
    parameters:
    - id: logger
      type: ILogger{Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager}
  overload: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager.#ctor*
  nameWithType.vb: InMemoryTransactionManager.InMemoryTransactionManager(ILogger(Of InMemoryTransactionManager))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager.InMemoryTransactionManager(ILogger(Of Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager))
  name.vb: InMemoryTransactionManager(ILogger(Of InMemoryTransactionManager))
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager.BeginTransaction
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager.BeginTransaction
  id: BeginTransaction
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager
  langs:
  - csharp
  - vb
  name: BeginTransaction()
  nameWithType: InMemoryTransactionManager.BeginTransaction()
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager.BeginTransaction()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/InMemoryTransactionManager.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: BeginTransaction
    path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/InMemoryTransactionManager.cs
    startLine: 26
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  syntax:
    content: public virtual IDbContextTransaction BeginTransaction()
    content.vb: Public Overridable Function BeginTransaction As IDbContextTransaction
    return:
      type: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
  overload: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager.BeginTransaction*
  implements:
  - Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransaction
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager.BeginTransactionAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager.BeginTransactionAsync(System.Threading.CancellationToken)
  id: BeginTransactionAsync(System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager
  langs:
  - csharp
  - vb
  name: BeginTransactionAsync(CancellationToken)
  nameWithType: InMemoryTransactionManager.BeginTransactionAsync(CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager.BeginTransactionAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/InMemoryTransactionManager.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: BeginTransactionAsync
    path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/InMemoryTransactionManager.cs
    startLine: 33
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  syntax:
    content: public virtual Task<IDbContextTransaction> BeginTransactionAsync(CancellationToken cancellationToken = null)
    content.vb: Public Overridable Function BeginTransactionAsync(cancellationToken As CancellationToken = Nothing) As Task(Of IDbContextTransaction)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction}
  overload: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager.BeginTransactionAsync*
  implements:
  - Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransactionAsync(System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager.CommitTransaction
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager.CommitTransaction
  id: CommitTransaction
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager
  langs:
  - csharp
  - vb
  name: CommitTransaction()
  nameWithType: InMemoryTransactionManager.CommitTransaction()
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager.CommitTransaction()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/InMemoryTransactionManager.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CommitTransaction
    path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/InMemoryTransactionManager.cs
    startLine: 41
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  syntax:
    content: public virtual void CommitTransaction()
    content.vb: Public Overridable Sub CommitTransaction
  overload: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager.CommitTransaction*
  implements:
  - Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.CommitTransaction
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager.RollbackTransaction
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager.RollbackTransaction
  id: RollbackTransaction
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager
  langs:
  - csharp
  - vb
  name: RollbackTransaction()
  nameWithType: InMemoryTransactionManager.RollbackTransaction()
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager.RollbackTransaction()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/InMemoryTransactionManager.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: RollbackTransaction
    path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/InMemoryTransactionManager.cs
    startLine: 43
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  syntax:
    content: public virtual void RollbackTransaction()
    content.vb: Public Overridable Sub RollbackTransaction
  overload: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager.RollbackTransaction*
  implements:
  - Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.RollbackTransaction
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager.CurrentTransaction
  commentId: P:Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager.CurrentTransaction
  id: CurrentTransaction
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager
  langs:
  - csharp
  - vb
  name: CurrentTransaction
  nameWithType: InMemoryTransactionManager.CurrentTransaction
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager.CurrentTransaction
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/InMemoryTransactionManager.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CurrentTransaction
    path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/InMemoryTransactionManager.cs
    startLine: 45
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  syntax:
    content: public virtual IDbContextTransaction CurrentTransaction { get; }
    content.vb: Public Overridable ReadOnly Property CurrentTransaction As IDbContextTransaction
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
  overload: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager.CurrentTransaction*
  implements:
  - Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.CurrentTransaction
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager.LogWarning
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager.LogWarning
  id: LogWarning
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager
  langs:
  - csharp
  - vb
  name: LogWarning()
  nameWithType: InMemoryTransactionManager.LogWarning()
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager.LogWarning()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/InMemoryTransactionManager.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: LogWarning
    path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/InMemoryTransactionManager.cs
    startLine: 47
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  syntax:
    content: protected virtual void LogWarning()
    content.vb: Protected Overridable Sub LogWarning
  overload: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager.LogWarning*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: Microsoft.EntityFrameworkCore.Storage.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Storage.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Storage.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Storage.Internal
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IDbContextTransactionManager
  nameWithType: IDbContextTransactionManager
  fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Storage
  commentId: N:Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Storage
  nameWithType: Microsoft.EntityFrameworkCore.Storage
  fullName: Microsoft.EntityFrameworkCore.Storage
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager.#ctor*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager.#ctor
  isExternal: false
  name: InMemoryTransactionManager
  nameWithType: InMemoryTransactionManager.InMemoryTransactionManager
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager.InMemoryTransactionManager
- uid: ILogger{Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager}
  commentId: '!:ILogger{Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager}'
  definition: ILogger`1
  name: ILogger<InMemoryTransactionManager>
  nameWithType: ILogger<InMemoryTransactionManager>
  fullName: ILogger<Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager>
  nameWithType.vb: ILogger(Of InMemoryTransactionManager)
  fullname.vb: ILogger(Of Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager)
  name.vb: ILogger(Of InMemoryTransactionManager)
  spec.csharp:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager
    name: InMemoryTransactionManager
    nameWithType: InMemoryTransactionManager
    fullName: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager
    name: InMemoryTransactionManager
    nameWithType: InMemoryTransactionManager
    fullName: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager
  - name: )
    nameWithType: )
    fullName: )
- uid: ILogger`1
  isExternal: true
  name: ILogger<>
  nameWithType: ILogger<>
  fullName: ILogger<>
  nameWithType.vb: ILogger(Of )
  fullname.vb: ILogger(Of )
  name.vb: ILogger(Of )
  spec.csharp:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager.BeginTransaction*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager.BeginTransaction
  isExternal: false
  name: BeginTransaction
  nameWithType: InMemoryTransactionManager.BeginTransaction
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager.BeginTransaction
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransaction
  commentId: M:Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransaction
  parent: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager
  isExternal: false
  name: BeginTransaction()
  nameWithType: IDbContextTransactionManager.BeginTransaction()
  fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransaction()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransaction
    name: BeginTransaction
    nameWithType: IDbContextTransactionManager.BeginTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransaction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransaction
    name: BeginTransaction
    nameWithType: IDbContextTransactionManager.BeginTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransaction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IDbContextTransaction
  nameWithType: IDbContextTransaction
  fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager.BeginTransactionAsync*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager.BeginTransactionAsync
  isExternal: false
  name: BeginTransactionAsync
  nameWithType: InMemoryTransactionManager.BeginTransactionAsync
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager.BeginTransactionAsync
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransactionAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransactionAsync(System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager
  isExternal: true
  name: BeginTransactionAsync(CancellationToken)
  nameWithType: IDbContextTransactionManager.BeginTransactionAsync(CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransactionAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransactionAsync(System.Threading.CancellationToken)
    name: BeginTransactionAsync
    nameWithType: IDbContextTransactionManager.BeginTransactionAsync
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransactionAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransactionAsync(System.Threading.CancellationToken)
    name: BeginTransactionAsync
    nameWithType: IDbContextTransactionManager.BeginTransactionAsync
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransactionAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction}
  commentId: T:System.Threading.Tasks.Task{Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IDbContextTransaction>
  nameWithType: Task<IDbContextTransaction>
  fullName: System.Threading.Tasks.Task<Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction>
  nameWithType.vb: Task(Of IDbContextTransaction)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: Task(Of IDbContextTransaction)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager.CommitTransaction*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager.CommitTransaction
  isExternal: false
  name: CommitTransaction
  nameWithType: InMemoryTransactionManager.CommitTransaction
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager.CommitTransaction
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.CommitTransaction
  commentId: M:Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.CommitTransaction
  parent: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager
  isExternal: false
  name: CommitTransaction()
  nameWithType: IDbContextTransactionManager.CommitTransaction()
  fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.CommitTransaction()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.CommitTransaction
    name: CommitTransaction
    nameWithType: IDbContextTransactionManager.CommitTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.CommitTransaction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.CommitTransaction
    name: CommitTransaction
    nameWithType: IDbContextTransactionManager.CommitTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.CommitTransaction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager.RollbackTransaction*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager.RollbackTransaction
  isExternal: false
  name: RollbackTransaction
  nameWithType: InMemoryTransactionManager.RollbackTransaction
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager.RollbackTransaction
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.RollbackTransaction
  commentId: M:Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.RollbackTransaction
  parent: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager
  isExternal: false
  name: RollbackTransaction()
  nameWithType: IDbContextTransactionManager.RollbackTransaction()
  fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.RollbackTransaction()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.RollbackTransaction
    name: RollbackTransaction
    nameWithType: IDbContextTransactionManager.RollbackTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.RollbackTransaction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.RollbackTransaction
    name: RollbackTransaction
    nameWithType: IDbContextTransactionManager.RollbackTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.RollbackTransaction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager.CurrentTransaction*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager.CurrentTransaction
  isExternal: false
  name: CurrentTransaction
  nameWithType: InMemoryTransactionManager.CurrentTransaction
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager.CurrentTransaction
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.CurrentTransaction
  commentId: P:Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.CurrentTransaction
  parent: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager
  isExternal: false
  name: CurrentTransaction
  nameWithType: IDbContextTransactionManager.CurrentTransaction
  fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.CurrentTransaction
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager.LogWarning*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager.LogWarning
  isExternal: false
  name: LogWarning
  nameWithType: InMemoryTransactionManager.LogWarning
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTransactionManager.LogWarning
