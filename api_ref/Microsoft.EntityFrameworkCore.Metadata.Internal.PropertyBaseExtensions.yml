### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions
  id: PropertyBaseExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  children:
  - Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.AsPropertyBase(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,System.String)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.CalculateIndexes(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.GetGetter(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.GetIndex(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.GetMemberInfo(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,System.Boolean,System.Boolean)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.GetPropertyAccessors(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.GetPropertyIndexes(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.GetRelationshipIndex(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.GetSetter(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.GetStoreGeneratedIndex(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.TryGetMemberInfo(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,System.Boolean,System.Boolean,System.Reflection.MemberInfo@,System.String@)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.TrySetIndexes(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIndexes)
  langs:
  - csharp
  - vb
  name: PropertyBaseExtensions
  nameWithType: PropertyBaseExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/PropertyBaseExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: PropertyBaseExtensions
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/PropertyBaseExtensions.cs
    startLine: 15
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public static class PropertyBaseExtensions
    content.vb: Public Module PropertyBaseExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.GetStoreGeneratedIndex(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.GetStoreGeneratedIndex(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  id: GetStoreGeneratedIndex(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions
  langs:
  - csharp
  - vb
  name: GetStoreGeneratedIndex(IPropertyBase)
  nameWithType: PropertyBaseExtensions.GetStoreGeneratedIndex(IPropertyBase)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.GetStoreGeneratedIndex(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/PropertyBaseExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetStoreGeneratedIndex
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/PropertyBaseExtensions.cs
    startLine: 21
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public static int GetStoreGeneratedIndex(this IPropertyBase propertyBase)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetStoreGeneratedIndex(propertyBase As IPropertyBase) As Integer
    parameters:
    - id: propertyBase
      type: Microsoft.EntityFrameworkCore.Metadata.IPropertyBase
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.GetRelationshipIndex(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.GetRelationshipIndex(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  id: GetRelationshipIndex(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions
  langs:
  - csharp
  - vb
  name: GetRelationshipIndex(IPropertyBase)
  nameWithType: PropertyBaseExtensions.GetRelationshipIndex(IPropertyBase)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.GetRelationshipIndex(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/PropertyBaseExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetRelationshipIndex
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/PropertyBaseExtensions.cs
    startLine: 28
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public static int GetRelationshipIndex(this IPropertyBase propertyBase)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetRelationshipIndex(propertyBase As IPropertyBase) As Integer
    parameters:
    - id: propertyBase
      type: Microsoft.EntityFrameworkCore.Metadata.IPropertyBase
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.GetIndex(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.GetIndex(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  id: GetIndex(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions
  langs:
  - csharp
  - vb
  name: GetIndex(IPropertyBase)
  nameWithType: PropertyBaseExtensions.GetIndex(IPropertyBase)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.GetIndex(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/PropertyBaseExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetIndex
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/PropertyBaseExtensions.cs
    startLine: 35
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public static int GetIndex(this IPropertyBase property)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetIndex(property As IPropertyBase) As Integer
    parameters:
    - id: property
      type: Microsoft.EntityFrameworkCore.Metadata.IPropertyBase
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.GetPropertyIndexes(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.GetPropertyIndexes(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  id: GetPropertyIndexes(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions
  langs:
  - csharp
  - vb
  name: GetPropertyIndexes(IPropertyBase)
  nameWithType: PropertyBaseExtensions.GetPropertyIndexes(IPropertyBase)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.GetPropertyIndexes(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/PropertyBaseExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetPropertyIndexes
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/PropertyBaseExtensions.cs
    startLine: 42
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public static PropertyIndexes GetPropertyIndexes(this IPropertyBase propertyBase)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetPropertyIndexes(propertyBase As IPropertyBase) As PropertyIndexes
    parameters:
    - id: propertyBase
      type: Microsoft.EntityFrameworkCore.Metadata.IPropertyBase
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIndexes
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.CalculateIndexes(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.CalculateIndexes(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  id: CalculateIndexes(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions
  langs:
  - csharp
  - vb
  name: CalculateIndexes(IEntityType, IPropertyBase)
  nameWithType: PropertyBaseExtensions.CalculateIndexes(IEntityType, IPropertyBase)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.CalculateIndexes(Microsoft.EntityFrameworkCore.Metadata.IEntityType, Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/PropertyBaseExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CalculateIndexes
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/PropertyBaseExtensions.cs
    startLine: 50
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public static PropertyIndexes CalculateIndexes(this IEntityType entityType, IPropertyBase propertyBase)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CalculateIndexes(entityType As IEntityType, propertyBase As IPropertyBase) As PropertyIndexes
    parameters:
    - id: entityType
      type: Microsoft.EntityFrameworkCore.Metadata.IEntityType
    - id: propertyBase
      type: Microsoft.EntityFrameworkCore.Metadata.IPropertyBase
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIndexes
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.TrySetIndexes(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIndexes)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.TrySetIndexes(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIndexes)
  id: TrySetIndexes(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIndexes)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions
  langs:
  - csharp
  - vb
  name: TrySetIndexes(IPropertyBase, PropertyIndexes)
  nameWithType: PropertyBaseExtensions.TrySetIndexes(IPropertyBase, PropertyIndexes)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.TrySetIndexes(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase, Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIndexes)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/PropertyBaseExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: TrySetIndexes
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/PropertyBaseExtensions.cs
    startLine: 120
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public static void TrySetIndexes(this IPropertyBase propertyBase, PropertyIndexes indexes)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub TrySetIndexes(propertyBase As IPropertyBase, indexes As PropertyIndexes)
    parameters:
    - id: propertyBase
      type: Microsoft.EntityFrameworkCore.Metadata.IPropertyBase
    - id: indexes
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIndexes
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.GetPropertyAccessors(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.GetPropertyAccessors(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  id: GetPropertyAccessors(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions
  langs:
  - csharp
  - vb
  name: GetPropertyAccessors(IPropertyBase)
  nameWithType: PropertyBaseExtensions.GetPropertyAccessors(IPropertyBase)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.GetPropertyAccessors(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/PropertyBaseExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetPropertyAccessors
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/PropertyBaseExtensions.cs
    startLine: 137
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public static PropertyAccessors GetPropertyAccessors(this IPropertyBase propertyBase)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetPropertyAccessors(propertyBase As IPropertyBase) As PropertyAccessors
    parameters:
    - id: propertyBase
      type: Microsoft.EntityFrameworkCore.Metadata.IPropertyBase
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyAccessors
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.GetGetter(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.GetGetter(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  id: GetGetter(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions
  langs:
  - csharp
  - vb
  name: GetGetter(IPropertyBase)
  nameWithType: PropertyBaseExtensions.GetGetter(IPropertyBase)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.GetGetter(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/PropertyBaseExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetGetter
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/PropertyBaseExtensions.cs
    startLine: 144
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public static IClrPropertyGetter GetGetter(this IPropertyBase propertyBase)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetGetter(propertyBase As IPropertyBase) As IClrPropertyGetter
    parameters:
    - id: propertyBase
      type: Microsoft.EntityFrameworkCore.Metadata.IPropertyBase
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertyGetter
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.GetSetter(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.GetSetter(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  id: GetSetter(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions
  langs:
  - csharp
  - vb
  name: GetSetter(IPropertyBase)
  nameWithType: PropertyBaseExtensions.GetSetter(IPropertyBase)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.GetSetter(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/PropertyBaseExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetSetter
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/PropertyBaseExtensions.cs
    startLine: 151
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public static IClrPropertySetter GetSetter(this IPropertyBase propertyBase)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetSetter(propertyBase As IPropertyBase) As IClrPropertySetter
    parameters:
    - id: propertyBase
      type: Microsoft.EntityFrameworkCore.Metadata.IPropertyBase
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertySetter
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.GetMemberInfo(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,System.Boolean,System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.GetMemberInfo(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,System.Boolean,System.Boolean)
  id: GetMemberInfo(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,System.Boolean,System.Boolean)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions
  langs:
  - csharp
  - vb
  name: GetMemberInfo(IPropertyBase, Boolean, Boolean)
  nameWithType: PropertyBaseExtensions.GetMemberInfo(IPropertyBase, Boolean, Boolean)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.GetMemberInfo(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase, System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/PropertyBaseExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetMemberInfo
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/PropertyBaseExtensions.cs
    startLine: 158
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public static MemberInfo GetMemberInfo(this IPropertyBase propertyBase, bool forConstruction, bool forSet)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetMemberInfo(propertyBase As IPropertyBase, forConstruction As Boolean, forSet As Boolean) As MemberInfo
    parameters:
    - id: propertyBase
      type: Microsoft.EntityFrameworkCore.Metadata.IPropertyBase
    - id: forConstruction
      type: System.Boolean
    - id: forSet
      type: System.Boolean
    return:
      type: System.Reflection.MemberInfo
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.TryGetMemberInfo(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,System.Boolean,System.Boolean,System.Reflection.MemberInfo@,System.String@)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.TryGetMemberInfo(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,System.Boolean,System.Boolean,System.Reflection.MemberInfo@,System.String@)
  id: TryGetMemberInfo(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,System.Boolean,System.Boolean,System.Reflection.MemberInfo@,System.String@)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions
  langs:
  - csharp
  - vb
  name: TryGetMemberInfo(IPropertyBase, Boolean, Boolean, out MemberInfo, out String)
  nameWithType: PropertyBaseExtensions.TryGetMemberInfo(IPropertyBase, Boolean, Boolean, out MemberInfo, out String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.TryGetMemberInfo(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase, System.Boolean, System.Boolean, out System.Reflection.MemberInfo, out System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/PropertyBaseExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: TryGetMemberInfo
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/PropertyBaseExtensions.cs
    startLine: 177
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public static bool TryGetMemberInfo(this IPropertyBase propertyBase, bool forConstruction, bool forSet, out MemberInfo memberInfo, out string errorMessage)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function TryGetMemberInfo(propertyBase As IPropertyBase, forConstruction As Boolean, forSet As Boolean, ByRef memberInfo As MemberInfo, ByRef errorMessage As String) As Boolean
    parameters:
    - id: propertyBase
      type: Microsoft.EntityFrameworkCore.Metadata.IPropertyBase
    - id: forConstruction
      type: System.Boolean
    - id: forSet
      type: System.Boolean
    - id: memberInfo
      type: System.Reflection.MemberInfo
    - id: errorMessage
      type: System.String
    return:
      type: System.Boolean
  nameWithType.vb: PropertyBaseExtensions.TryGetMemberInfo(IPropertyBase, Boolean, Boolean, ByRef MemberInfo, ByRef String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.TryGetMemberInfo(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase, System.Boolean, System.Boolean, ByRef System.Reflection.MemberInfo, ByRef System.String)
  name.vb: TryGetMemberInfo(IPropertyBase, Boolean, Boolean, ByRef MemberInfo, ByRef String)
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.AsPropertyBase(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.AsPropertyBase(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,System.String)
  id: AsPropertyBase(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,System.String)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions
  langs:
  - csharp
  - vb
  name: AsPropertyBase(IPropertyBase, String)
  nameWithType: PropertyBaseExtensions.AsPropertyBase(IPropertyBase, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.AsPropertyBase(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/PropertyBaseExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AsPropertyBase
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/PropertyBaseExtensions.cs
    startLine: 347
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public static PropertyBase AsPropertyBase(this IPropertyBase propertyBase, string methodName = "")
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AsPropertyBase(propertyBase As IPropertyBase, methodName As String = "") As PropertyBase
    parameters:
    - id: propertyBase
      type: Microsoft.EntityFrameworkCore.Metadata.IPropertyBase
    - id: methodName
      type: System.String
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Metadata.IPropertyBase
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IPropertyBase
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IPropertyBase
  nameWithType: IPropertyBase
  fullName: Microsoft.EntityFrameworkCore.Metadata.IPropertyBase
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIndexes
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIndexes
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: PropertyIndexes
  nameWithType: PropertyIndexes
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIndexes
- uid: Microsoft.EntityFrameworkCore.Metadata.IEntityType
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IEntityType
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IEntityType
  nameWithType: IEntityType
  fullName: Microsoft.EntityFrameworkCore.Metadata.IEntityType
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyAccessors
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyAccessors
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: PropertyAccessors
  nameWithType: PropertyAccessors
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyAccessors
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertyGetter
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertyGetter
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: IClrPropertyGetter
  nameWithType: IClrPropertyGetter
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertyGetter
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertySetter
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertySetter
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: IClrPropertySetter
  nameWithType: IClrPropertySetter
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertySetter
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.MemberInfo
  commentId: T:System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: true
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: false
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: PropertyBase
  nameWithType: PropertyBase
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase
