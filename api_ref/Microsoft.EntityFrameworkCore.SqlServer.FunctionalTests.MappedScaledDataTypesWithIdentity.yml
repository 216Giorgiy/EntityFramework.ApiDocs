### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedScaledDataTypesWithIdentity
  commentId: T:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedScaledDataTypesWithIdentity
  id: MappedScaledDataTypesWithIdentity
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  children:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedScaledDataTypesWithIdentity.Datetime2
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedScaledDataTypesWithIdentity.Datetimeoffset
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedScaledDataTypesWithIdentity.Dec
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedScaledDataTypesWithIdentity.Decimal
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedScaledDataTypesWithIdentity.Double_precision
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedScaledDataTypesWithIdentity.Float
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedScaledDataTypesWithIdentity.Id
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedScaledDataTypesWithIdentity.Int
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedScaledDataTypesWithIdentity.Numeric
  langs:
  - csharp
  - vb
  name: MappedScaledDataTypesWithIdentity
  nameWithType: MappedScaledDataTypesWithIdentity
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedScaledDataTypesWithIdentity
  type: Class
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: MappedScaledDataTypesWithIdentity
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 335
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public class MappedScaledDataTypesWithIdentity
    content.vb: Public Class MappedScaledDataTypesWithIdentity
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedScaledDataTypesWithIdentity.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedScaledDataTypesWithIdentity.Id
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedScaledDataTypesWithIdentity.Id
  id: Id
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedScaledDataTypesWithIdentity
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: MappedScaledDataTypesWithIdentity.Id
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedScaledDataTypesWithIdentity.Id
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Id
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 337
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public int Id { get; set; }
    content.vb: Public Property Id As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedScaledDataTypesWithIdentity.Int
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedScaledDataTypesWithIdentity.Int
  id: Int
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedScaledDataTypesWithIdentity
  langs:
  - csharp
  - vb
  name: Int
  nameWithType: MappedScaledDataTypesWithIdentity.Int
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedScaledDataTypesWithIdentity.Int
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Int
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 338
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public int Int { get; set; }
    content.vb: Public Property Int As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedScaledDataTypesWithIdentity.Float
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedScaledDataTypesWithIdentity.Float
  id: Float
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedScaledDataTypesWithIdentity
  langs:
  - csharp
  - vb
  name: Float
  nameWithType: MappedScaledDataTypesWithIdentity.Float
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedScaledDataTypesWithIdentity.Float
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Float
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 340
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public float Float { get; set; }
    content.vb: Public Property Float As Single
    parameters: []
    return:
      type: System.Single
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedScaledDataTypesWithIdentity.Double_precision
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedScaledDataTypesWithIdentity.Double_precision
  id: Double_precision
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedScaledDataTypesWithIdentity
  langs:
  - csharp
  - vb
  name: Double_precision
  nameWithType: MappedScaledDataTypesWithIdentity.Double_precision
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedScaledDataTypesWithIdentity.Double_precision
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Double_precision
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 341
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public float Double_precision { get; set; }
    content.vb: Public Property Double_precision As Single
    parameters: []
    return:
      type: System.Single
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedScaledDataTypesWithIdentity.Datetimeoffset
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedScaledDataTypesWithIdentity.Datetimeoffset
  id: Datetimeoffset
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedScaledDataTypesWithIdentity
  langs:
  - csharp
  - vb
  name: Datetimeoffset
  nameWithType: MappedScaledDataTypesWithIdentity.Datetimeoffset
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedScaledDataTypesWithIdentity.Datetimeoffset
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Datetimeoffset
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 342
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public DateTimeOffset Datetimeoffset { get; set; }
    content.vb: Public Property Datetimeoffset As DateTimeOffset
    parameters: []
    return:
      type: System.DateTimeOffset
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedScaledDataTypesWithIdentity.Datetime2
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedScaledDataTypesWithIdentity.Datetime2
  id: Datetime2
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedScaledDataTypesWithIdentity
  langs:
  - csharp
  - vb
  name: Datetime2
  nameWithType: MappedScaledDataTypesWithIdentity.Datetime2
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedScaledDataTypesWithIdentity.Datetime2
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Datetime2
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 343
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public DateTime Datetime2 { get; set; }
    content.vb: Public Property Datetime2 As Date
    parameters: []
    return:
      type: System.DateTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedScaledDataTypesWithIdentity.Decimal
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedScaledDataTypesWithIdentity.Decimal
  id: Decimal
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedScaledDataTypesWithIdentity
  langs:
  - csharp
  - vb
  name: Decimal
  nameWithType: MappedScaledDataTypesWithIdentity.Decimal
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedScaledDataTypesWithIdentity.Decimal
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Decimal
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 344
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public decimal Decimal { get; set; }
    content.vb: Public Property Decimal As Decimal
    parameters: []
    return:
      type: System.Decimal
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedScaledDataTypesWithIdentity.Dec
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedScaledDataTypesWithIdentity.Dec
  id: Dec
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedScaledDataTypesWithIdentity
  langs:
  - csharp
  - vb
  name: Dec
  nameWithType: MappedScaledDataTypesWithIdentity.Dec
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedScaledDataTypesWithIdentity.Dec
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Dec
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 345
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public decimal Dec { get; set; }
    content.vb: Public Property Dec As Decimal
    parameters: []
    return:
      type: System.Decimal
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedScaledDataTypesWithIdentity.Numeric
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedScaledDataTypesWithIdentity.Numeric
  id: Numeric
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedScaledDataTypesWithIdentity
  langs:
  - csharp
  - vb
  name: Numeric
  nameWithType: MappedScaledDataTypesWithIdentity.Numeric
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedScaledDataTypesWithIdentity.Numeric
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Numeric
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 346
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public decimal Numeric { get; set; }
    content.vb: Public Property Numeric As Decimal
    parameters: []
    return:
      type: System.Decimal
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  commentId: N:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  nameWithType: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedScaledDataTypesWithIdentity.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<MappedScaledDataTypesWithIdentity, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<MappedScaledDataTypesWithIdentity, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedScaledDataTypesWithIdentity, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of MappedScaledDataTypesWithIdentity, TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedScaledDataTypesWithIdentity, TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of MappedScaledDataTypesWithIdentity, TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<MappedScaledDataTypesWithIdentity, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<MappedScaledDataTypesWithIdentity, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedScaledDataTypesWithIdentity, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of MappedScaledDataTypesWithIdentity, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of MappedScaledDataTypesWithIdentity, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedScaledDataTypesWithIdentity, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.DateTimeOffset
  commentId: T:System.DateTimeOffset
  parent: System
  isExternal: true
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Decimal
  commentId: T:System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
