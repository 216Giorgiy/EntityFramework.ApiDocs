### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryTable
  commentId: T:Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryTable
  id: IInMemoryTable
  parent: Microsoft.EntityFrameworkCore.Storage.Internal
  children:
  - Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryTable.Create(Microsoft.EntityFrameworkCore.Update.IUpdateEntry)
  - Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryTable.Delete(Microsoft.EntityFrameworkCore.Update.IUpdateEntry)
  - Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryTable.SnapshotRows
  - Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryTable.Update(Microsoft.EntityFrameworkCore.Update.IUpdateEntry)
  langs:
  - csharp
  - vb
  name: IInMemoryTable
  nameWithType: IInMemoryTable
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryTable
  type: Interface
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/IInMemoryTable.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: IInMemoryTable
    path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/IInMemoryTable.cs
    startLine: 13
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public interface IInMemoryTable
    content.vb: Public Interface IInMemoryTable
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryTable.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryTable.SnapshotRows
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryTable.SnapshotRows
  id: SnapshotRows
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryTable
  langs:
  - csharp
  - vb
  name: SnapshotRows()
  nameWithType: IInMemoryTable.SnapshotRows()
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryTable.SnapshotRows()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/IInMemoryTable.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: SnapshotRows
    path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/IInMemoryTable.cs
    startLine: 19
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: IReadOnlyList<object[]> SnapshotRows()
    content.vb: Function SnapshotRows As IReadOnlyList(Of Object())
    return:
      type: System.Collections.Generic.IReadOnlyList{System.Object[]}
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryTable.Create(Microsoft.EntityFrameworkCore.Update.IUpdateEntry)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryTable.Create(Microsoft.EntityFrameworkCore.Update.IUpdateEntry)
  id: Create(Microsoft.EntityFrameworkCore.Update.IUpdateEntry)
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryTable
  langs:
  - csharp
  - vb
  name: Create(IUpdateEntry)
  nameWithType: IInMemoryTable.Create(IUpdateEntry)
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryTable.Create(Microsoft.EntityFrameworkCore.Update.IUpdateEntry)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/IInMemoryTable.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Create
    path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/IInMemoryTable.cs
    startLine: 25
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: void Create(IUpdateEntry entry)
    content.vb: Sub Create(entry As IUpdateEntry)
    parameters:
    - id: entry
      type: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryTable.Delete(Microsoft.EntityFrameworkCore.Update.IUpdateEntry)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryTable.Delete(Microsoft.EntityFrameworkCore.Update.IUpdateEntry)
  id: Delete(Microsoft.EntityFrameworkCore.Update.IUpdateEntry)
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryTable
  langs:
  - csharp
  - vb
  name: Delete(IUpdateEntry)
  nameWithType: IInMemoryTable.Delete(IUpdateEntry)
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryTable.Delete(Microsoft.EntityFrameworkCore.Update.IUpdateEntry)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/IInMemoryTable.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Delete
    path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/IInMemoryTable.cs
    startLine: 31
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: void Delete(IUpdateEntry entry)
    content.vb: Sub Delete(entry As IUpdateEntry)
    parameters:
    - id: entry
      type: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryTable.Update(Microsoft.EntityFrameworkCore.Update.IUpdateEntry)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryTable.Update(Microsoft.EntityFrameworkCore.Update.IUpdateEntry)
  id: Update(Microsoft.EntityFrameworkCore.Update.IUpdateEntry)
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryTable
  langs:
  - csharp
  - vb
  name: Update(IUpdateEntry)
  nameWithType: IInMemoryTable.Update(IUpdateEntry)
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryTable.Update(Microsoft.EntityFrameworkCore.Update.IUpdateEntry)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/IInMemoryTable.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Update
    path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/IInMemoryTable.cs
    startLine: 37
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: void Update(IUpdateEntry entry)
    content.vb: Sub Update(entry As IUpdateEntry)
    parameters:
    - id: entry
      type: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
references:
- uid: Microsoft.EntityFrameworkCore.Storage.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Storage.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Storage.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Storage.Internal
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryTable.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<IInMemoryTable, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<IInMemoryTable, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryTable, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of IInMemoryTable, TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryTable, TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of IInMemoryTable, TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<IInMemoryTable, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<IInMemoryTable, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryTable, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of IInMemoryTable, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of IInMemoryTable, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryTable, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: System.Collections.Generic.IReadOnlyList{System.Object[]}
  commentId: T:System.Collections.Generic.IReadOnlyList{System.Object[]}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<Object[]>
  nameWithType: IReadOnlyList<Object[]>
  fullName: System.Collections.Generic.IReadOnlyList<System.Object[]>
  nameWithType.vb: IReadOnlyList(Of Object())
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of System.Object())
  name.vb: IReadOnlyList(Of Object())
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
  commentId: T:Microsoft.EntityFrameworkCore.Update.IUpdateEntry
  parent: Microsoft.EntityFrameworkCore.Update
  isExternal: false
  name: IUpdateEntry
  nameWithType: IUpdateEntry
  fullName: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
- uid: Microsoft.EntityFrameworkCore.Update
  commentId: N:Microsoft.EntityFrameworkCore.Update
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Update
  nameWithType: Microsoft.EntityFrameworkCore.Update
  fullName: Microsoft.EntityFrameworkCore.Update
