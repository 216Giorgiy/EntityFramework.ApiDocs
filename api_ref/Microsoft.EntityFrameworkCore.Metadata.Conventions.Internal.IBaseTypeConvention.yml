### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IBaseTypeConvention
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IBaseTypeConvention
  id: IBaseTypeConvention
  parent: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
  children:
  - Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IBaseTypeConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)
  langs:
  - csharp
  - vb
  name: IBaseTypeConvention
  nameWithType: IBaseTypeConvention
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IBaseTypeConvention
  type: Interface
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/Internal/IBaseTypeConvention.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: IBaseTypeConvention
    path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/Internal/IBaseTypeConvention.cs
    startLine: 12
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public interface IBaseTypeConvention
    content.vb: Public Interface IBaseTypeConvention
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IBaseTypeConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IBaseTypeConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)
  id: Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)
  parent: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IBaseTypeConvention
  langs:
  - csharp
  - vb
  name: Apply(InternalEntityTypeBuilder, EntityType)
  nameWithType: IBaseTypeConvention.Apply(InternalEntityTypeBuilder, EntityType)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IBaseTypeConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/Internal/IBaseTypeConvention.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Apply
    path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/Internal/IBaseTypeConvention.cs
    startLine: 18
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: bool Apply(InternalEntityTypeBuilder entityTypeBuilder, EntityType oldBaseType)
    content.vb: Function Apply(entityTypeBuilder As InternalEntityTypeBuilder, oldBaseType As EntityType) As Boolean
    parameters:
    - id: entityTypeBuilder
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
    - id: oldBaseType
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
    return:
      type: System.Boolean
references:
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: InternalEntityTypeBuilder
  nameWithType: InternalEntityTypeBuilder
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: EntityType
  nameWithType: EntityType
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
