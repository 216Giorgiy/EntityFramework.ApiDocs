### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.StringBuilderCodeWriter
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.Internal.StringBuilderCodeWriter
  id: StringBuilderCodeWriter
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  children:
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.StringBuilderCodeWriter.#ctor(Microsoft.EntityFrameworkCore.Scaffolding.Internal.IFileService,Microsoft.EntityFrameworkCore.Scaffolding.Internal.DbContextWriter,Microsoft.EntityFrameworkCore.Scaffolding.Internal.EntityTypeWriter)
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.StringBuilderCodeWriter.DbContextWriter
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.StringBuilderCodeWriter.EntityTypeWriter
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.StringBuilderCodeWriter.WriteCodeAsync(Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.ModelConfiguration,System.String,System.String,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: StringBuilderCodeWriter
  nameWithType: StringBuilderCodeWriter
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.StringBuilderCodeWriter
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/StringBuilderCodeWriter.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: StringBuilderCodeWriter
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/StringBuilderCodeWriter.cs
    startLine: 16
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public class StringBuilderCodeWriter : CodeWriter'
    content.vb: >-
      Public Class StringBuilderCodeWriter
          Inherits CodeWriter
  inheritance:
  - System.Object
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.CodeWriter
  inheritedMembers:
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.CodeWriter.FileService
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.CodeWriter.FileExtension
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.CodeWriter.GetExistingFilePaths(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IEntityType})
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.CodeWriter.GetReadOnlyFilePaths(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IEntityType})
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.StringBuilderCodeWriter.DbContextWriter
  commentId: P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.StringBuilderCodeWriter.DbContextWriter
  id: DbContextWriter
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.StringBuilderCodeWriter
  langs:
  - csharp
  - vb
  name: DbContextWriter
  nameWithType: StringBuilderCodeWriter.DbContextWriter
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.StringBuilderCodeWriter.DbContextWriter
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/StringBuilderCodeWriter.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: DbContextWriter
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/StringBuilderCodeWriter.cs
    startLine: 22
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual DbContextWriter DbContextWriter { get; }
    content.vb: Public Overridable ReadOnly Property DbContextWriter As DbContextWriter
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Scaffolding.Internal.DbContextWriter
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.StringBuilderCodeWriter.EntityTypeWriter
  commentId: P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.StringBuilderCodeWriter.EntityTypeWriter
  id: EntityTypeWriter
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.StringBuilderCodeWriter
  langs:
  - csharp
  - vb
  name: EntityTypeWriter
  nameWithType: StringBuilderCodeWriter.EntityTypeWriter
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.StringBuilderCodeWriter.EntityTypeWriter
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/StringBuilderCodeWriter.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: EntityTypeWriter
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/StringBuilderCodeWriter.cs
    startLine: 28
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual EntityTypeWriter EntityTypeWriter { get; }
    content.vb: Public Overridable ReadOnly Property EntityTypeWriter As EntityTypeWriter
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Scaffolding.Internal.EntityTypeWriter
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.StringBuilderCodeWriter.#ctor(Microsoft.EntityFrameworkCore.Scaffolding.Internal.IFileService,Microsoft.EntityFrameworkCore.Scaffolding.Internal.DbContextWriter,Microsoft.EntityFrameworkCore.Scaffolding.Internal.EntityTypeWriter)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.StringBuilderCodeWriter.#ctor(Microsoft.EntityFrameworkCore.Scaffolding.Internal.IFileService,Microsoft.EntityFrameworkCore.Scaffolding.Internal.DbContextWriter,Microsoft.EntityFrameworkCore.Scaffolding.Internal.EntityTypeWriter)
  id: '#ctor(Microsoft.EntityFrameworkCore.Scaffolding.Internal.IFileService,Microsoft.EntityFrameworkCore.Scaffolding.Internal.DbContextWriter,Microsoft.EntityFrameworkCore.Scaffolding.Internal.EntityTypeWriter)'
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.StringBuilderCodeWriter
  langs:
  - csharp
  - vb
  name: StringBuilderCodeWriter(IFileService, DbContextWriter, EntityTypeWriter)
  nameWithType: StringBuilderCodeWriter.StringBuilderCodeWriter(IFileService, DbContextWriter, EntityTypeWriter)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.StringBuilderCodeWriter.StringBuilderCodeWriter(Microsoft.EntityFrameworkCore.Scaffolding.Internal.IFileService, Microsoft.EntityFrameworkCore.Scaffolding.Internal.DbContextWriter, Microsoft.EntityFrameworkCore.Scaffolding.Internal.EntityTypeWriter)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/StringBuilderCodeWriter.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/StringBuilderCodeWriter.cs
    startLine: 34
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public StringBuilderCodeWriter(IFileService fileService, DbContextWriter dbContextWriter, EntityTypeWriter entityTypeWriter)
    content.vb: Public Sub New(fileService As IFileService, dbContextWriter As DbContextWriter, entityTypeWriter As EntityTypeWriter)
    parameters:
    - id: fileService
      type: Microsoft.EntityFrameworkCore.Scaffolding.Internal.IFileService
    - id: dbContextWriter
      type: Microsoft.EntityFrameworkCore.Scaffolding.Internal.DbContextWriter
    - id: entityTypeWriter
      type: Microsoft.EntityFrameworkCore.Scaffolding.Internal.EntityTypeWriter
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.StringBuilderCodeWriter.WriteCodeAsync(Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.ModelConfiguration,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.StringBuilderCodeWriter.WriteCodeAsync(Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.ModelConfiguration,System.String,System.String,System.Threading.CancellationToken)
  id: WriteCodeAsync(Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.ModelConfiguration,System.String,System.String,System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.StringBuilderCodeWriter
  langs:
  - csharp
  - vb
  name: WriteCodeAsync(ModelConfiguration, String, String, CancellationToken)
  nameWithType: StringBuilderCodeWriter.WriteCodeAsync(ModelConfiguration, String, String, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.StringBuilderCodeWriter.WriteCodeAsync(Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.ModelConfiguration, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/StringBuilderCodeWriter.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: WriteCodeAsync
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/StringBuilderCodeWriter.cs
    startLine: 51
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public override Task<ReverseEngineerFiles> WriteCodeAsync(ModelConfiguration modelConfiguration, string outputPath, string dbContextClassName, CancellationToken cancellationToken = null)
    content.vb: Public Overrides Function WriteCodeAsync(modelConfiguration As ModelConfiguration, outputPath As String, dbContextClassName As String, cancellationToken As CancellationToken = Nothing) As Task(Of ReverseEngineerFiles)
    parameters:
    - id: modelConfiguration
      type: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.ModelConfiguration
    - id: outputPath
      type: System.String
    - id: dbContextClassName
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineerFiles}
  overridden: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CodeWriter.WriteCodeAsync(Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.ModelConfiguration,System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Scaffolding.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CodeWriter
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CodeWriter
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  isExternal: false
  name: CodeWriter
  nameWithType: CodeWriter
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CodeWriter
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CodeWriter.FileService
  commentId: P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CodeWriter.FileService
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CodeWriter
  isExternal: false
  name: FileService
  nameWithType: CodeWriter.FileService
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CodeWriter.FileService
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CodeWriter.FileExtension
  commentId: P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CodeWriter.FileExtension
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CodeWriter
  isExternal: false
  name: FileExtension
  nameWithType: CodeWriter.FileExtension
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CodeWriter.FileExtension
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CodeWriter.GetExistingFilePaths(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IEntityType})
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CodeWriter.GetExistingFilePaths(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IEntityType})
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CodeWriter
  isExternal: true
  name: GetExistingFilePaths(String, String, IEnumerable<IEntityType>)
  nameWithType: CodeWriter.GetExistingFilePaths(String, String, IEnumerable<IEntityType>)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CodeWriter.GetExistingFilePaths(System.String, System.String, System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Metadata.IEntityType>)
  nameWithType.vb: CodeWriter.GetExistingFilePaths(String, String, IEnumerable(Of IEntityType))
  fullname.vb: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CodeWriter.GetExistingFilePaths(System.String, System.String, System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Metadata.IEntityType))
  name.vb: GetExistingFilePaths(String, String, IEnumerable(Of IEntityType))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CodeWriter.GetExistingFilePaths(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IEntityType})
    name: GetExistingFilePaths
    nameWithType: CodeWriter.GetExistingFilePaths
    fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CodeWriter.GetExistingFilePaths
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.IEntityType
    name: IEntityType
    nameWithType: IEntityType
    fullName: Microsoft.EntityFrameworkCore.Metadata.IEntityType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CodeWriter.GetExistingFilePaths(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IEntityType})
    name: GetExistingFilePaths
    nameWithType: CodeWriter.GetExistingFilePaths
    fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CodeWriter.GetExistingFilePaths
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IEntityType
    name: IEntityType
    nameWithType: IEntityType
    fullName: Microsoft.EntityFrameworkCore.Metadata.IEntityType
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CodeWriter.GetReadOnlyFilePaths(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IEntityType})
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CodeWriter.GetReadOnlyFilePaths(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IEntityType})
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CodeWriter
  isExternal: true
  name: GetReadOnlyFilePaths(String, String, IEnumerable<IEntityType>)
  nameWithType: CodeWriter.GetReadOnlyFilePaths(String, String, IEnumerable<IEntityType>)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CodeWriter.GetReadOnlyFilePaths(System.String, System.String, System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Metadata.IEntityType>)
  nameWithType.vb: CodeWriter.GetReadOnlyFilePaths(String, String, IEnumerable(Of IEntityType))
  fullname.vb: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CodeWriter.GetReadOnlyFilePaths(System.String, System.String, System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Metadata.IEntityType))
  name.vb: GetReadOnlyFilePaths(String, String, IEnumerable(Of IEntityType))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CodeWriter.GetReadOnlyFilePaths(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IEntityType})
    name: GetReadOnlyFilePaths
    nameWithType: CodeWriter.GetReadOnlyFilePaths
    fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CodeWriter.GetReadOnlyFilePaths
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.IEntityType
    name: IEntityType
    nameWithType: IEntityType
    fullName: Microsoft.EntityFrameworkCore.Metadata.IEntityType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CodeWriter.GetReadOnlyFilePaths(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IEntityType})
    name: GetReadOnlyFilePaths
    nameWithType: CodeWriter.GetReadOnlyFilePaths
    fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CodeWriter.GetReadOnlyFilePaths
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IEntityType
    name: IEntityType
    nameWithType: IEntityType
    fullName: Microsoft.EntityFrameworkCore.Metadata.IEntityType
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.DbContextWriter
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.Internal.DbContextWriter
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  isExternal: false
  name: DbContextWriter
  nameWithType: DbContextWriter
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.DbContextWriter
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.EntityTypeWriter
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.Internal.EntityTypeWriter
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  isExternal: false
  name: EntityTypeWriter
  nameWithType: EntityTypeWriter
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.EntityTypeWriter
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.IFileService
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.Internal.IFileService
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  isExternal: false
  name: IFileService
  nameWithType: IFileService
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.IFileService
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CodeWriter.WriteCodeAsync(Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.ModelConfiguration,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CodeWriter.WriteCodeAsync(Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.ModelConfiguration,System.String,System.String,System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CodeWriter
  isExternal: true
  name: WriteCodeAsync(ModelConfiguration, String, String, CancellationToken)
  nameWithType: CodeWriter.WriteCodeAsync(ModelConfiguration, String, String, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CodeWriter.WriteCodeAsync(Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.ModelConfiguration, System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CodeWriter.WriteCodeAsync(Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.ModelConfiguration,System.String,System.String,System.Threading.CancellationToken)
    name: WriteCodeAsync
    nameWithType: CodeWriter.WriteCodeAsync
    fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CodeWriter.WriteCodeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.ModelConfiguration
    name: ModelConfiguration
    nameWithType: ModelConfiguration
    fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.ModelConfiguration
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CodeWriter.WriteCodeAsync(Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.ModelConfiguration,System.String,System.String,System.Threading.CancellationToken)
    name: WriteCodeAsync
    nameWithType: CodeWriter.WriteCodeAsync
    fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CodeWriter.WriteCodeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.ModelConfiguration
    name: ModelConfiguration
    nameWithType: ModelConfiguration
    fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.ModelConfiguration
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.ModelConfiguration
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.ModelConfiguration
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  isExternal: false
  name: ModelConfiguration
  nameWithType: ModelConfiguration
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.ModelConfiguration
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineerFiles}
  commentId: T:System.Threading.Tasks.Task{Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineerFiles}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ReverseEngineerFiles>
  nameWithType: Task<ReverseEngineerFiles>
  fullName: System.Threading.Tasks.Task<Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineerFiles>
  nameWithType.vb: Task(Of ReverseEngineerFiles)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineerFiles)
  name.vb: Task(Of ReverseEngineerFiles)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineerFiles
    name: ReverseEngineerFiles
    nameWithType: ReverseEngineerFiles
    fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineerFiles
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineerFiles
    name: ReverseEngineerFiles
    nameWithType: ReverseEngineerFiles
    fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineerFiles
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
