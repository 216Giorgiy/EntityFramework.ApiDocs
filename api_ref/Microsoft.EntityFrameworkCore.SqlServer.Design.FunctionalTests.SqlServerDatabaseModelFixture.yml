### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFixture
  commentId: T:Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFixture
  id: SqlServerDatabaseModelFixture
  parent: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests
  children:
  - Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFixture.#ctor
  - Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFixture.CreateModel(System.String,Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet,ILogger)
  - Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFixture.Dispose
  - Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFixture.ExecuteNonQuery(System.String)
  - Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFixture.TestStore
  langs:
  - csharp
  - vb
  name: SqlServerDatabaseModelFixture
  nameWithType: SqlServerDatabaseModelFixture
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFixture
  type: Class
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests/SqlServerDatabaseModelFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: SqlServerDatabaseModelFixture
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests/SqlServerDatabaseModelFixture.cs
    startLine: 13
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests
  syntax:
    content: 'public class SqlServerDatabaseModelFixture : IDisposable'
    content.vb: >-
      Public Class SqlServerDatabaseModelFixture
          Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFixture.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFixture.#ctor
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFixture.#ctor
  id: '#ctor'
  parent: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFixture
  langs:
  - csharp
  - vb
  name: SqlServerDatabaseModelFixture()
  nameWithType: SqlServerDatabaseModelFixture.SqlServerDatabaseModelFixture()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFixture.SqlServerDatabaseModelFixture()
  type: Constructor
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests/SqlServerDatabaseModelFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: .ctor
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests/SqlServerDatabaseModelFixture.cs
    startLine: 15
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests
  syntax:
    content: public SqlServerDatabaseModelFixture()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFixture.CreateModel(System.String,Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet,ILogger)
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFixture.CreateModel(System.String,Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet,ILogger)
  id: CreateModel(System.String,Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet,ILogger)
  parent: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFixture
  langs:
  - csharp
  - vb
  name: CreateModel(String, TableSelectionSet, ILogger)
  nameWithType: SqlServerDatabaseModelFixture.CreateModel(String, TableSelectionSet, ILogger)
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFixture.CreateModel(System.String, Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet, ILogger)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests/SqlServerDatabaseModelFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: CreateModel
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests/SqlServerDatabaseModelFixture.cs
    startLine: 20
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests
  syntax:
    content: public DatabaseModel CreateModel(string createSql, TableSelectionSet selection = null, ILogger logger = null)
    content.vb: Public Function CreateModel(createSql As String, selection As TableSelectionSet = Nothing, logger As ILogger = Nothing) As DatabaseModel
    parameters:
    - id: createSql
      type: System.String
    - id: selection
      type: Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet
    - id: logger
      type: ILogger
    return:
      type: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFixture.TestStore
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFixture.TestStore
  id: TestStore
  parent: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFixture
  langs:
  - csharp
  - vb
  name: TestStore
  nameWithType: SqlServerDatabaseModelFixture.TestStore
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFixture.TestStore
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests/SqlServerDatabaseModelFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: TestStore
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests/SqlServerDatabaseModelFixture.cs
    startLine: 28
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests
  syntax:
    content: public SqlServerTestStore TestStore { get; }
    content.vb: Public ReadOnly Property TestStore As SqlServerTestStore
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFixture.ExecuteNonQuery(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFixture.ExecuteNonQuery(System.String)
  id: ExecuteNonQuery(System.String)
  parent: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFixture
  langs:
  - csharp
  - vb
  name: ExecuteNonQuery(String)
  nameWithType: SqlServerDatabaseModelFixture.ExecuteNonQuery(String)
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFixture.ExecuteNonQuery(System.String)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests/SqlServerDatabaseModelFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ExecuteNonQuery
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests/SqlServerDatabaseModelFixture.cs
    startLine: 30
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests
  syntax:
    content: public void ExecuteNonQuery(string sql)
    content.vb: Public Sub ExecuteNonQuery(sql As String)
    parameters:
    - id: sql
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFixture.Dispose
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFixture.Dispose
  id: Dispose
  parent: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFixture
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: SqlServerDatabaseModelFixture.Dispose()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFixture.Dispose()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests/SqlServerDatabaseModelFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Dispose
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests/SqlServerDatabaseModelFixture.cs
    startLine: 32
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests
  commentId: N:Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests
  nameWithType: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFixture.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<SqlServerDatabaseModelFixture, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<SqlServerDatabaseModelFixture, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFixture, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of SqlServerDatabaseModelFixture, TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFixture, TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of SqlServerDatabaseModelFixture, TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<SqlServerDatabaseModelFixture, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<SqlServerDatabaseModelFixture, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFixture, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of SqlServerDatabaseModelFixture, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of SqlServerDatabaseModelFixture, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFixture, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet
  parent: Microsoft.EntityFrameworkCore.Scaffolding
  isExternal: false
  name: TableSelectionSet
  nameWithType: TableSelectionSet
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet
- uid: ILogger
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: ILogger
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Metadata
  isExternal: false
  name: DatabaseModel
  nameWithType: DatabaseModel
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel
- uid: Microsoft.EntityFrameworkCore.Scaffolding
  commentId: N:Microsoft.EntityFrameworkCore.Scaffolding
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Scaffolding
  nameWithType: Microsoft.EntityFrameworkCore.Scaffolding
  fullName: Microsoft.EntityFrameworkCore.Scaffolding
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Scaffolding.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Scaffolding.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Scaffolding.Metadata
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Metadata
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore
  commentId: T:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  isExternal: false
  name: SqlServerTestStore
  nameWithType: SqlServerTestStore
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  commentId: N:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  isExternal: false
  name: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  nameWithType: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
