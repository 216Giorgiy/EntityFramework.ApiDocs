### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder`1
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder`1
  id: DiscriminatorBuilder`1
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders
  children:
  - Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder`1.#ctor(Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder`1.HasValue(`0)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder`1.HasValue(System.String,`0)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder`1.HasValue(System.Type,`0)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder`1.HasValue``1(`0)
  langs:
  - csharp
  - vb
  name: DiscriminatorBuilder<TDiscriminator>
  nameWithType: DiscriminatorBuilder<TDiscriminator>
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder<TDiscriminator>
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Builders/DiscriminatorBuilder`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: DiscriminatorBuilder
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Builders/DiscriminatorBuilder`.cs
    startLine: 9
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  syntax:
    content: public class DiscriminatorBuilder<TDiscriminator>
    content.vb: Public Class DiscriminatorBuilder(Of TDiscriminator)
    typeParameters:
    - id: TDiscriminator
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: DiscriminatorBuilder(Of TDiscriminator)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder(Of TDiscriminator)
  name.vb: DiscriminatorBuilder(Of TDiscriminator)
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder`1.#ctor(Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder`1.#ctor(Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder)
  id: '#ctor(Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder)'
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder`1
  langs:
  - csharp
  - vb
  name: DiscriminatorBuilder(DiscriminatorBuilder)
  nameWithType: DiscriminatorBuilder<TDiscriminator>.DiscriminatorBuilder(DiscriminatorBuilder)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder<TDiscriminator>.DiscriminatorBuilder(Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Builders/DiscriminatorBuilder`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Builders/DiscriminatorBuilder`.cs
    startLine: 11
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  syntax:
    content: public DiscriminatorBuilder(DiscriminatorBuilder builder)
    content.vb: Public Sub New(builder As DiscriminatorBuilder)
    parameters:
    - id: builder
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder
  overload: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder`1.#ctor*
  nameWithType.vb: DiscriminatorBuilder(Of TDiscriminator).DiscriminatorBuilder(DiscriminatorBuilder)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder(Of TDiscriminator).DiscriminatorBuilder(Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder)
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder`1.HasValue(`0)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder`1.HasValue(`0)
  id: HasValue(`0)
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder`1
  langs:
  - csharp
  - vb
  name: HasValue(TDiscriminator)
  nameWithType: DiscriminatorBuilder<TDiscriminator>.HasValue(TDiscriminator)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder<TDiscriminator>.HasValue(TDiscriminator)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Builders/DiscriminatorBuilder`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: HasValue
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Builders/DiscriminatorBuilder`.cs
    startLine: 20
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  syntax:
    content: public virtual DiscriminatorBuilder<TDiscriminator> HasValue(TDiscriminator value)
    content.vb: Public Overridable Function HasValue(value As TDiscriminator) As DiscriminatorBuilder(Of TDiscriminator)
    parameters:
    - id: value
      type: '{TDiscriminator}'
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder`1
  overload: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder`1.HasValue*
  nameWithType.vb: DiscriminatorBuilder(Of TDiscriminator).HasValue(TDiscriminator)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder(Of TDiscriminator).HasValue(TDiscriminator)
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder`1.HasValue``1(`0)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder`1.HasValue``1(`0)
  id: HasValue``1(`0)
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder`1
  langs:
  - csharp
  - vb
  name: HasValue<TEntity>(TDiscriminator)
  nameWithType: DiscriminatorBuilder<TDiscriminator>.HasValue<TEntity>(TDiscriminator)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder<TDiscriminator>.HasValue<TEntity>(TDiscriminator)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Builders/DiscriminatorBuilder`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: HasValue
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Builders/DiscriminatorBuilder`.cs
    startLine: 26
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  syntax:
    content: public virtual DiscriminatorBuilder<TDiscriminator> HasValue<TEntity>(TDiscriminator value)
    content.vb: Public Overridable Function HasValue(Of TEntity)(value As TDiscriminator) As DiscriminatorBuilder(Of TDiscriminator)
    parameters:
    - id: value
      type: '{TDiscriminator}'
    typeParameters:
    - id: TEntity
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder`1
  overload: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder`1.HasValue*
  nameWithType.vb: DiscriminatorBuilder(Of TDiscriminator).HasValue(Of TEntity)(TDiscriminator)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder(Of TDiscriminator).HasValue(Of TEntity)(TDiscriminator)
  name.vb: HasValue(Of TEntity)(TDiscriminator)
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder`1.HasValue(System.Type,`0)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder`1.HasValue(System.Type,`0)
  id: HasValue(System.Type,`0)
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder`1
  langs:
  - csharp
  - vb
  name: HasValue(Type, TDiscriminator)
  nameWithType: DiscriminatorBuilder<TDiscriminator>.HasValue(Type, TDiscriminator)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder<TDiscriminator>.HasValue(System.Type, TDiscriminator)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Builders/DiscriminatorBuilder`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: HasValue
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Builders/DiscriminatorBuilder`.cs
    startLine: 29
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  syntax:
    content: public virtual DiscriminatorBuilder<TDiscriminator> HasValue(Type entityType, TDiscriminator value)
    content.vb: Public Overridable Function HasValue(entityType As Type, value As TDiscriminator) As DiscriminatorBuilder(Of TDiscriminator)
    parameters:
    - id: entityType
      type: System.Type
    - id: value
      type: '{TDiscriminator}'
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder`1
  overload: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder`1.HasValue*
  nameWithType.vb: DiscriminatorBuilder(Of TDiscriminator).HasValue(Type, TDiscriminator)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder(Of TDiscriminator).HasValue(System.Type, TDiscriminator)
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder`1.HasValue(System.String,`0)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder`1.HasValue(System.String,`0)
  id: HasValue(System.String,`0)
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder`1
  langs:
  - csharp
  - vb
  name: HasValue(String, TDiscriminator)
  nameWithType: DiscriminatorBuilder<TDiscriminator>.HasValue(String, TDiscriminator)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder<TDiscriminator>.HasValue(System.String, TDiscriminator)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Builders/DiscriminatorBuilder`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: HasValue
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Builders/DiscriminatorBuilder`.cs
    startLine: 35
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  syntax:
    content: public virtual DiscriminatorBuilder<TDiscriminator> HasValue(string entityTypeName, TDiscriminator value)
    content.vb: Public Overridable Function HasValue(entityTypeName As String, value As TDiscriminator) As DiscriminatorBuilder(Of TDiscriminator)
    parameters:
    - id: entityTypeName
      type: System.String
    - id: value
      type: '{TDiscriminator}'
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder`1
  overload: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder`1.HasValue*
  nameWithType.vb: DiscriminatorBuilder(Of TDiscriminator).HasValue(String, TDiscriminator)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder(Of TDiscriminator).HasValue(System.String, TDiscriminator)
references:
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Builders
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Builders
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Builders
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder`1.#ctor*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder`1.#ctor
  isExternal: false
  name: DiscriminatorBuilder
  nameWithType: DiscriminatorBuilder<TDiscriminator>.DiscriminatorBuilder
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder<TDiscriminator>.DiscriminatorBuilder
  nameWithType.vb: DiscriminatorBuilder(Of TDiscriminator).DiscriminatorBuilder
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder(Of TDiscriminator).DiscriminatorBuilder
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders
  isExternal: false
  name: DiscriminatorBuilder
  nameWithType: DiscriminatorBuilder
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder`1.HasValue*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder`1.HasValue
  isExternal: false
  name: HasValue
  nameWithType: DiscriminatorBuilder<TDiscriminator>.HasValue
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder<TDiscriminator>.HasValue
  nameWithType.vb: DiscriminatorBuilder(Of TDiscriminator).HasValue
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder(Of TDiscriminator).HasValue
- uid: '{TDiscriminator}'
  commentId: '!:TDiscriminator'
  definition: TDiscriminator
  name: TDiscriminator
  nameWithType: TDiscriminator
  fullName: TDiscriminator
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder`1
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder`1
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders
  isExternal: false
  name: DiscriminatorBuilder<TDiscriminator>
  nameWithType: DiscriminatorBuilder<TDiscriminator>
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder<TDiscriminator>
  nameWithType.vb: DiscriminatorBuilder(Of TDiscriminator)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder(Of TDiscriminator)
  name.vb: DiscriminatorBuilder(Of TDiscriminator)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder`1
    name: DiscriminatorBuilder
    nameWithType: DiscriminatorBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: TDiscriminator
    nameWithType: TDiscriminator
    fullName: TDiscriminator
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder`1
    name: DiscriminatorBuilder
    nameWithType: DiscriminatorBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDiscriminator
    nameWithType: TDiscriminator
    fullName: TDiscriminator
  - name: )
    nameWithType: )
    fullName: )
- uid: TDiscriminator
  isExternal: false
  name: TDiscriminator
  nameWithType: TDiscriminator
  fullName: TDiscriminator
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
