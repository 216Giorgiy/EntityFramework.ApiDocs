### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.RelationshipConfiguration
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.RelationshipConfiguration
  id: RelationshipConfiguration
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  children:
  - Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.RelationshipConfiguration.#ctor(Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration,Microsoft.EntityFrameworkCore.Metadata.IForeignKey,System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior)
  - Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.RelationshipConfiguration.DependentEndNavigationPropertyName
  - Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.RelationshipConfiguration.EntityConfiguration
  - Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.RelationshipConfiguration.ForeignKey
  - Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.RelationshipConfiguration.HasAttributeEquivalent
  - Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.RelationshipConfiguration.OnDeleteAction
  - Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.RelationshipConfiguration.PrincipalEndNavigationPropertyName
  langs:
  - csharp
  - vb
  name: RelationshipConfiguration
  nameWithType: RelationshipConfiguration
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.RelationshipConfiguration
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/RelationshipConfiguration.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: RelationshipConfiguration
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/RelationshipConfiguration.cs
    startLine: 13
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public class RelationshipConfiguration
    content.vb: Public Class RelationshipConfiguration
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.RelationshipConfiguration.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.RelationshipConfiguration.#ctor(Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration,Microsoft.EntityFrameworkCore.Metadata.IForeignKey,System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.RelationshipConfiguration.#ctor(Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration,Microsoft.EntityFrameworkCore.Metadata.IForeignKey,System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior)
  id: '#ctor(Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration,Microsoft.EntityFrameworkCore.Metadata.IForeignKey,System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior)'
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.RelationshipConfiguration
  langs:
  - csharp
  - vb
  name: RelationshipConfiguration(EntityConfiguration, IForeignKey, String, String, DeleteBehavior)
  nameWithType: RelationshipConfiguration.RelationshipConfiguration(EntityConfiguration, IForeignKey, String, String, DeleteBehavior)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.RelationshipConfiguration.RelationshipConfiguration(Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration, Microsoft.EntityFrameworkCore.Metadata.IForeignKey, System.String, System.String, Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/RelationshipConfiguration.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/RelationshipConfiguration.cs
    startLine: 19
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public RelationshipConfiguration(EntityConfiguration entityConfiguration, IForeignKey foreignKey, string dependentEndNavigationPropertyName, string principalEndNavigationPropertyName, DeleteBehavior onDeleteAction)
    content.vb: Public Sub New(entityConfiguration As EntityConfiguration, foreignKey As IForeignKey, dependentEndNavigationPropertyName As String, principalEndNavigationPropertyName As String, onDeleteAction As DeleteBehavior)
    parameters:
    - id: entityConfiguration
      type: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration
    - id: foreignKey
      type: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    - id: dependentEndNavigationPropertyName
      type: System.String
    - id: principalEndNavigationPropertyName
      type: System.String
    - id: onDeleteAction
      type: Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.RelationshipConfiguration.HasAttributeEquivalent
  commentId: P:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.RelationshipConfiguration.HasAttributeEquivalent
  id: HasAttributeEquivalent
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.RelationshipConfiguration
  langs:
  - csharp
  - vb
  name: HasAttributeEquivalent
  nameWithType: RelationshipConfiguration.HasAttributeEquivalent
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.RelationshipConfiguration.HasAttributeEquivalent
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/RelationshipConfiguration.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: HasAttributeEquivalent
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/RelationshipConfiguration.cs
    startLine: 42
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual bool HasAttributeEquivalent { get; set; }
    content.vb: Public Overridable Property HasAttributeEquivalent As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.RelationshipConfiguration.EntityConfiguration
  commentId: P:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.RelationshipConfiguration.EntityConfiguration
  id: EntityConfiguration
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.RelationshipConfiguration
  langs:
  - csharp
  - vb
  name: EntityConfiguration
  nameWithType: RelationshipConfiguration.EntityConfiguration
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.RelationshipConfiguration.EntityConfiguration
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/RelationshipConfiguration.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: EntityConfiguration
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/RelationshipConfiguration.cs
    startLine: 48
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual EntityConfiguration EntityConfiguration { get; }
    content.vb: Public Overridable ReadOnly Property EntityConfiguration As EntityConfiguration
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.RelationshipConfiguration.ForeignKey
  commentId: P:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.RelationshipConfiguration.ForeignKey
  id: ForeignKey
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.RelationshipConfiguration
  langs:
  - csharp
  - vb
  name: ForeignKey
  nameWithType: RelationshipConfiguration.ForeignKey
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.RelationshipConfiguration.ForeignKey
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/RelationshipConfiguration.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ForeignKey
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/RelationshipConfiguration.cs
    startLine: 54
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual IForeignKey ForeignKey { get; }
    content.vb: Public Overridable ReadOnly Property ForeignKey As IForeignKey
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.RelationshipConfiguration.DependentEndNavigationPropertyName
  commentId: P:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.RelationshipConfiguration.DependentEndNavigationPropertyName
  id: DependentEndNavigationPropertyName
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.RelationshipConfiguration
  langs:
  - csharp
  - vb
  name: DependentEndNavigationPropertyName
  nameWithType: RelationshipConfiguration.DependentEndNavigationPropertyName
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.RelationshipConfiguration.DependentEndNavigationPropertyName
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/RelationshipConfiguration.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: DependentEndNavigationPropertyName
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/RelationshipConfiguration.cs
    startLine: 60
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual string DependentEndNavigationPropertyName { get; }
    content.vb: Public Overridable ReadOnly Property DependentEndNavigationPropertyName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.RelationshipConfiguration.PrincipalEndNavigationPropertyName
  commentId: P:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.RelationshipConfiguration.PrincipalEndNavigationPropertyName
  id: PrincipalEndNavigationPropertyName
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.RelationshipConfiguration
  langs:
  - csharp
  - vb
  name: PrincipalEndNavigationPropertyName
  nameWithType: RelationshipConfiguration.PrincipalEndNavigationPropertyName
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.RelationshipConfiguration.PrincipalEndNavigationPropertyName
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/RelationshipConfiguration.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: PrincipalEndNavigationPropertyName
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/RelationshipConfiguration.cs
    startLine: 66
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual string PrincipalEndNavigationPropertyName { get; }
    content.vb: Public Overridable ReadOnly Property PrincipalEndNavigationPropertyName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.RelationshipConfiguration.OnDeleteAction
  commentId: P:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.RelationshipConfiguration.OnDeleteAction
  id: OnDeleteAction
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.RelationshipConfiguration
  langs:
  - csharp
  - vb
  name: OnDeleteAction
  nameWithType: RelationshipConfiguration.OnDeleteAction
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.RelationshipConfiguration.OnDeleteAction
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/RelationshipConfiguration.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: OnDeleteAction
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/RelationshipConfiguration.cs
    startLine: 72
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual DeleteBehavior OnDeleteAction { get; }
    content.vb: Public Overridable ReadOnly Property OnDeleteAction As DeleteBehavior
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
references:
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.RelationshipConfiguration.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<RelationshipConfiguration, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<RelationshipConfiguration, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.RelationshipConfiguration, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of RelationshipConfiguration, TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.RelationshipConfiguration, TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of RelationshipConfiguration, TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<RelationshipConfiguration, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<RelationshipConfiguration, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.RelationshipConfiguration, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of RelationshipConfiguration, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of RelationshipConfiguration, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.RelationshipConfiguration, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  isExternal: false
  name: EntityConfiguration
  nameWithType: EntityConfiguration
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration
- uid: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IForeignKey
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IForeignKey
  nameWithType: IForeignKey
  fullName: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: DeleteBehavior
  nameWithType: DeleteBehavior
  fullName: Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
