### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStore
  commentId: T:Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStore
  id: IInMemoryStore
  parent: Microsoft.EntityFrameworkCore.Storage.Internal
  children:
  - Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStore.Clear
  - Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStore.EnsureCreated(Microsoft.EntityFrameworkCore.Metadata.IModel)
  - Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStore.ExecuteTransaction(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Update.IUpdateEntry},ILogger{Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase})
  - Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStore.GetTables(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  langs:
  - csharp
  - vb
  name: IInMemoryStore
  nameWithType: IInMemoryStore
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStore
  type: Interface
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/IInMemoryStore.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: IInMemoryStore
    path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/IInMemoryStore.cs
    startLine: 15
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public interface IInMemoryStore
    content.vb: Public Interface IInMemoryStore
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStore.EnsureCreated(Microsoft.EntityFrameworkCore.Metadata.IModel)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStore.EnsureCreated(Microsoft.EntityFrameworkCore.Metadata.IModel)
  id: EnsureCreated(Microsoft.EntityFrameworkCore.Metadata.IModel)
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStore
  langs:
  - csharp
  - vb
  name: EnsureCreated(IModel)
  nameWithType: IInMemoryStore.EnsureCreated(IModel)
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStore.EnsureCreated(Microsoft.EntityFrameworkCore.Metadata.IModel)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/IInMemoryStore.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: EnsureCreated
    path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/IInMemoryStore.cs
    startLine: 21
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: bool EnsureCreated(IModel model)
    content.vb: Function EnsureCreated(model As IModel) As Boolean
    parameters:
    - id: model
      type: Microsoft.EntityFrameworkCore.Metadata.IModel
    return:
      type: System.Boolean
  overload: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStore.EnsureCreated*
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStore.Clear
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStore.Clear
  id: Clear
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStore
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: IInMemoryStore.Clear()
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStore.Clear()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/IInMemoryStore.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Clear
    path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/IInMemoryStore.cs
    startLine: 27
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: bool Clear()
    content.vb: Function Clear As Boolean
    return:
      type: System.Boolean
  overload: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStore.Clear*
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStore.GetTables(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStore.GetTables(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  id: GetTables(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStore
  langs:
  - csharp
  - vb
  name: GetTables(IEntityType)
  nameWithType: IInMemoryStore.GetTables(IEntityType)
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStore.GetTables(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/IInMemoryStore.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetTables
    path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/IInMemoryStore.cs
    startLine: 33
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: IReadOnlyList<InMemoryTableSnapshot> GetTables(IEntityType entityType)
    content.vb: Function GetTables(entityType As IEntityType) As IReadOnlyList(Of InMemoryTableSnapshot)
    parameters:
    - id: entityType
      type: Microsoft.EntityFrameworkCore.Metadata.IEntityType
    return:
      type: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTableSnapshot}
  overload: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStore.GetTables*
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStore.ExecuteTransaction(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Update.IUpdateEntry},ILogger{Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase})
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStore.ExecuteTransaction(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Update.IUpdateEntry},ILogger{Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase})
  id: ExecuteTransaction(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Update.IUpdateEntry},ILogger{Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase})
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStore
  langs:
  - csharp
  - vb
  name: ExecuteTransaction(IEnumerable<IUpdateEntry>, ILogger<InMemoryDatabase>)
  nameWithType: IInMemoryStore.ExecuteTransaction(IEnumerable<IUpdateEntry>, ILogger<InMemoryDatabase>)
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStore.ExecuteTransaction(System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Update.IUpdateEntry>, ILogger<Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/IInMemoryStore.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ExecuteTransaction
    path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/IInMemoryStore.cs
    startLine: 39
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: int ExecuteTransaction(IEnumerable<IUpdateEntry> entries, ILogger<InMemoryDatabase> logger)
    content.vb: Function ExecuteTransaction(entries As IEnumerable(Of IUpdateEntry), logger As ILogger(Of InMemoryDatabase)) As Integer
    parameters:
    - id: entries
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Update.IUpdateEntry}
    - id: logger
      type: ILogger{Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase}
    return:
      type: System.Int32
  overload: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStore.ExecuteTransaction*
  nameWithType.vb: IInMemoryStore.ExecuteTransaction(IEnumerable(Of IUpdateEntry), ILogger(Of InMemoryDatabase))
  fullName.vb: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStore.ExecuteTransaction(System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Update.IUpdateEntry), ILogger(Of Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase))
  name.vb: ExecuteTransaction(IEnumerable(Of IUpdateEntry), ILogger(Of InMemoryDatabase))
references:
- uid: Microsoft.EntityFrameworkCore.Storage.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Storage.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Storage.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Storage.Internal
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStore.EnsureCreated*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStore.EnsureCreated
  isExternal: false
  name: EnsureCreated
  nameWithType: IInMemoryStore.EnsureCreated
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStore.EnsureCreated
- uid: Microsoft.EntityFrameworkCore.Metadata.IModel
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IModel
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IModel
  nameWithType: IModel
  fullName: Microsoft.EntityFrameworkCore.Metadata.IModel
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStore.Clear*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStore.Clear
  isExternal: false
  name: Clear
  nameWithType: IInMemoryStore.Clear
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStore.Clear
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStore.GetTables*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStore.GetTables
  isExternal: false
  name: GetTables
  nameWithType: IInMemoryStore.GetTables
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStore.GetTables
- uid: Microsoft.EntityFrameworkCore.Metadata.IEntityType
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IEntityType
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IEntityType
  nameWithType: IEntityType
  fullName: Microsoft.EntityFrameworkCore.Metadata.IEntityType
- uid: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTableSnapshot}
  commentId: T:System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTableSnapshot}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<InMemoryTableSnapshot>
  nameWithType: IReadOnlyList<InMemoryTableSnapshot>
  fullName: System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTableSnapshot>
  nameWithType.vb: IReadOnlyList(Of InMemoryTableSnapshot)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTableSnapshot)
  name.vb: IReadOnlyList(Of InMemoryTableSnapshot)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTableSnapshot
    name: InMemoryTableSnapshot
    nameWithType: InMemoryTableSnapshot
    fullName: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTableSnapshot
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTableSnapshot
    name: InMemoryTableSnapshot
    nameWithType: InMemoryTableSnapshot
    fullName: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTableSnapshot
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStore.ExecuteTransaction*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStore.ExecuteTransaction
  isExternal: false
  name: ExecuteTransaction
  nameWithType: IInMemoryStore.ExecuteTransaction
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStore.ExecuteTransaction
- uid: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Update.IUpdateEntry}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Update.IUpdateEntry}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IUpdateEntry>
  nameWithType: IEnumerable<IUpdateEntry>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Update.IUpdateEntry>
  nameWithType.vb: IEnumerable(Of IUpdateEntry)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Update.IUpdateEntry)
  name.vb: IEnumerable(Of IUpdateEntry)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
    name: IUpdateEntry
    nameWithType: IUpdateEntry
    fullName: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
    name: IUpdateEntry
    nameWithType: IUpdateEntry
    fullName: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: ILogger{Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase}
  commentId: '!:ILogger{Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase}'
  definition: ILogger`1
  name: ILogger<InMemoryDatabase>
  nameWithType: ILogger<InMemoryDatabase>
  fullName: ILogger<Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase>
  nameWithType.vb: ILogger(Of InMemoryDatabase)
  fullname.vb: ILogger(Of Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase)
  name.vb: ILogger(Of InMemoryDatabase)
  spec.csharp:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase
    name: InMemoryDatabase
    nameWithType: InMemoryDatabase
    fullName: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase
    name: InMemoryDatabase
    nameWithType: InMemoryDatabase
    fullName: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: ILogger`1
  isExternal: true
  name: ILogger<>
  nameWithType: ILogger<>
  fullName: ILogger<>
  nameWithType.vb: ILogger(Of )
  fullname.vb: ILogger(Of )
  name.vb: ILogger(Of )
  spec.csharp:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
