### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest
  commentId: T:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest
  id: SqlServerEndToEndTest
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  children:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest.#ctor(Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerFixture)
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest.Can_enumerate_entity_set
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest.Can_round_trip_changes_with_changed_only_notification_entities
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest.Can_round_trip_changes_with_full_notification_entities
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest.Can_round_trip_changes_with_snapshot_change_tracking
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest.Can_run_linq_query_on_entity_set
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest.Can_run_linq_query_on_entity_set_with_value_buffer_reader
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest.Can_save_and_query_with_schema
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest.Can_save_changes
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest.Can_save_changes_in_tracked_entities
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest.Can_track_an_entity_with_more_than_10_properties
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest.Can_use_decimal_as_identity_column
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest.Can_use_string_enum_or_byte_array_as_key
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest.Tracking_entities_asynchronously_returns_tracked_entities_back
  langs:
  - csharp
  - vb
  name: SqlServerEndToEndTest
  nameWithType: SqlServerEndToEndTest
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest
  type: Class
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerEndToEndTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: SqlServerEndToEndTest
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerEndToEndTest.cs
    startLine: 24
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: 'public class SqlServerEndToEndTest : IClassFixture<SqlServerFixture>'
    content.vb: >-
      Public Class SqlServerEndToEndTest
          Implements IClassFixture(Of SqlServerFixture)
  inheritance:
  - System.Object
  implements:
  - Xunit.IClassFixture{Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerFixture}
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest.Can_use_decimal_as_identity_column
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest.Can_use_decimal_as_identity_column
  id: Can_use_decimal_as_identity_column
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest
  langs:
  - csharp
  - vb
  name: Can_use_decimal_as_identity_column()
  nameWithType: SqlServerEndToEndTest.Can_use_decimal_as_identity_column()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest.Can_use_decimal_as_identity_column()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerEndToEndTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_use_decimal_as_identity_column
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerEndToEndTest.cs
    startLine: 26
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: >-
      [Fact]

      public void Can_use_decimal_as_identity_column()
    content.vb: >-
      <Fact>

      Public Sub Can_use_decimal_as_identity_column
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest.Can_use_string_enum_or_byte_array_as_key
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest.Can_use_string_enum_or_byte_array_as_key
  id: Can_use_string_enum_or_byte_array_as_key
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest
  langs:
  - csharp
  - vb
  name: Can_use_string_enum_or_byte_array_as_key()
  nameWithType: SqlServerEndToEndTest.Can_use_string_enum_or_byte_array_as_key()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest.Can_use_string_enum_or_byte_array_as_key()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerEndToEndTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_use_string_enum_or_byte_array_as_key
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerEndToEndTest.cs
    startLine: 115
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: >-
      [Fact]

      public void Can_use_string_enum_or_byte_array_as_key()
    content.vb: >-
      <Fact>

      Public Sub Can_use_string_enum_or_byte_array_as_key
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest.Can_run_linq_query_on_entity_set
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest.Can_run_linq_query_on_entity_set
  id: Can_run_linq_query_on_entity_set
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest
  langs:
  - csharp
  - vb
  name: Can_run_linq_query_on_entity_set()
  nameWithType: SqlServerEndToEndTest.Can_run_linq_query_on_entity_set()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest.Can_run_linq_query_on_entity_set()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerEndToEndTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_run_linq_query_on_entity_set
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerEndToEndTest.cs
    startLine: 194
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: >-
      [Fact]

      public void Can_run_linq_query_on_entity_set()
    content.vb: >-
      <Fact>

      Public Sub Can_run_linq_query_on_entity_set
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest.Can_run_linq_query_on_entity_set_with_value_buffer_reader
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest.Can_run_linq_query_on_entity_set_with_value_buffer_reader
  id: Can_run_linq_query_on_entity_set_with_value_buffer_reader
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest
  langs:
  - csharp
  - vb
  name: Can_run_linq_query_on_entity_set_with_value_buffer_reader()
  nameWithType: SqlServerEndToEndTest.Can_run_linq_query_on_entity_set_with_value_buffer_reader()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest.Can_run_linq_query_on_entity_set_with_value_buffer_reader()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerEndToEndTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_run_linq_query_on_entity_set_with_value_buffer_reader
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerEndToEndTest.cs
    startLine: 220
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: >-
      [Fact]

      public void Can_run_linq_query_on_entity_set_with_value_buffer_reader()
    content.vb: >-
      <Fact>

      Public Sub Can_run_linq_query_on_entity_set_with_value_buffer_reader
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest.Can_enumerate_entity_set
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest.Can_enumerate_entity_set
  id: Can_enumerate_entity_set
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest
  langs:
  - csharp
  - vb
  name: Can_enumerate_entity_set()
  nameWithType: SqlServerEndToEndTest.Can_enumerate_entity_set()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest.Can_enumerate_entity_set()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerEndToEndTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_enumerate_entity_set
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerEndToEndTest.cs
    startLine: 257
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: >-
      [Fact]

      public void Can_enumerate_entity_set()
    content.vb: >-
      <Fact>

      Public Sub Can_enumerate_entity_set
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest.Can_save_changes
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest.Can_save_changes
  id: Can_save_changes
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest
  langs:
  - csharp
  - vb
  name: Can_save_changes()
  nameWithType: SqlServerEndToEndTest.Can_save_changes()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest.Can_save_changes()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerEndToEndTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_save_changes
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerEndToEndTest.cs
    startLine: 277
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: >-
      [Fact]

      public Task Can_save_changes()
    content.vb: >-
      <Fact>

      Public Function Can_save_changes As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest.Can_save_changes_in_tracked_entities
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest.Can_save_changes_in_tracked_entities
  id: Can_save_changes_in_tracked_entities
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest
  langs:
  - csharp
  - vb
  name: Can_save_changes_in_tracked_entities()
  nameWithType: SqlServerEndToEndTest.Can_save_changes_in_tracked_entities()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest.Can_save_changes_in_tracked_entities()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerEndToEndTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_save_changes_in_tracked_entities
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerEndToEndTest.cs
    startLine: 359
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: >-
      [Fact]

      public Task Can_save_changes_in_tracked_entities()
    content.vb: >-
      <Fact>

      Public Function Can_save_changes_in_tracked_entities As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest.Can_track_an_entity_with_more_than_10_properties
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest.Can_track_an_entity_with_more_than_10_properties
  id: Can_track_an_entity_with_more_than_10_properties
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest
  langs:
  - csharp
  - vb
  name: Can_track_an_entity_with_more_than_10_properties()
  nameWithType: SqlServerEndToEndTest.Can_track_an_entity_with_more_than_10_properties()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest.Can_track_an_entity_with_more_than_10_properties()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerEndToEndTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_track_an_entity_with_more_than_10_properties
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerEndToEndTest.cs
    startLine: 420
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: >-
      [Fact]

      public void Can_track_an_entity_with_more_than_10_properties()
    content.vb: >-
      <Fact>

      Public Sub Can_track_an_entity_with_more_than_10_properties
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest.Tracking_entities_asynchronously_returns_tracked_entities_back
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest.Tracking_entities_asynchronously_returns_tracked_entities_back
  id: Tracking_entities_asynchronously_returns_tracked_entities_back
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest
  langs:
  - csharp
  - vb
  name: Tracking_entities_asynchronously_returns_tracked_entities_back()
  nameWithType: SqlServerEndToEndTest.Tracking_entities_asynchronously_returns_tracked_entities_back()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest.Tracking_entities_asynchronously_returns_tracked_entities_back()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerEndToEndTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Tracking_entities_asynchronously_returns_tracked_entities_back
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerEndToEndTest.cs
    startLine: 551
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: >-
      [Fact]

      public Task Tracking_entities_asynchronously_returns_tracked_entities_back()
    content.vb: >-
      <Fact>

      Public Function Tracking_entities_asynchronously_returns_tracked_entities_back As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest.Can_save_and_query_with_schema
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest.Can_save_and_query_with_schema
  id: Can_save_and_query_with_schema
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest
  langs:
  - csharp
  - vb
  name: Can_save_and_query_with_schema()
  nameWithType: SqlServerEndToEndTest.Can_save_and_query_with_schema()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest.Can_save_and_query_with_schema()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerEndToEndTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_save_and_query_with_schema
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerEndToEndTest.cs
    startLine: 569
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: >-
      [Fact]

      public Task Can_save_and_query_with_schema()
    content.vb: >-
      <Fact>

      Public Function Can_save_and_query_with_schema As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest.Can_round_trip_changes_with_snapshot_change_tracking
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest.Can_round_trip_changes_with_snapshot_change_tracking
  id: Can_round_trip_changes_with_snapshot_change_tracking
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest
  langs:
  - csharp
  - vb
  name: Can_round_trip_changes_with_snapshot_change_tracking()
  nameWithType: SqlServerEndToEndTest.Can_round_trip_changes_with_snapshot_change_tracking()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest.Can_round_trip_changes_with_snapshot_change_tracking()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerEndToEndTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_round_trip_changes_with_snapshot_change_tracking
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerEndToEndTest.cs
    startLine: 643
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: >-
      [Fact]

      public Task Can_round_trip_changes_with_snapshot_change_tracking()
    content.vb: >-
      <Fact>

      Public Function Can_round_trip_changes_with_snapshot_change_tracking As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest.Can_round_trip_changes_with_full_notification_entities
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest.Can_round_trip_changes_with_full_notification_entities
  id: Can_round_trip_changes_with_full_notification_entities
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest
  langs:
  - csharp
  - vb
  name: Can_round_trip_changes_with_full_notification_entities()
  nameWithType: SqlServerEndToEndTest.Can_round_trip_changes_with_full_notification_entities()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest.Can_round_trip_changes_with_full_notification_entities()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerEndToEndTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_round_trip_changes_with_full_notification_entities
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerEndToEndTest.cs
    startLine: 649
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: >-
      [Fact]

      public Task Can_round_trip_changes_with_full_notification_entities()
    content.vb: >-
      <Fact>

      Public Function Can_round_trip_changes_with_full_notification_entities As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest.Can_round_trip_changes_with_changed_only_notification_entities
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest.Can_round_trip_changes_with_changed_only_notification_entities
  id: Can_round_trip_changes_with_changed_only_notification_entities
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest
  langs:
  - csharp
  - vb
  name: Can_round_trip_changes_with_changed_only_notification_entities()
  nameWithType: SqlServerEndToEndTest.Can_round_trip_changes_with_changed_only_notification_entities()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest.Can_round_trip_changes_with_changed_only_notification_entities()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerEndToEndTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_round_trip_changes_with_changed_only_notification_entities
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerEndToEndTest.cs
    startLine: 655
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: >-
      [Fact]

      public Task Can_round_trip_changes_with_changed_only_notification_entities()
    content.vb: >-
      <Fact>

      Public Function Can_round_trip_changes_with_changed_only_notification_entities As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest.#ctor(Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerFixture)
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest.#ctor(Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerFixture)
  id: '#ctor(Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerFixture)'
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest
  langs:
  - csharp
  - vb
  name: SqlServerEndToEndTest(SqlServerFixture)
  nameWithType: SqlServerEndToEndTest.SqlServerEndToEndTest(SqlServerFixture)
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerEndToEndTest.SqlServerEndToEndTest(Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerFixture)
  type: Constructor
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerEndToEndTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerEndToEndTest.cs
    startLine: 789
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public SqlServerEndToEndTest(SqlServerFixture fixture)
    content.vb: Public Sub New(fixture As SqlServerFixture)
    parameters:
    - id: fixture
      type: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerFixture
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  commentId: N:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  nameWithType: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Xunit.IClassFixture{Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerFixture}
  commentId: T:Xunit.IClassFixture{Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerFixture}
  parent: Xunit
  definition: Xunit.IClassFixture`1
  name: IClassFixture<SqlServerFixture>
  nameWithType: IClassFixture<SqlServerFixture>
  fullName: Xunit.IClassFixture<Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerFixture>
  nameWithType.vb: IClassFixture(Of SqlServerFixture)
  fullname.vb: Xunit.IClassFixture(Of Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerFixture)
  name.vb: IClassFixture(Of SqlServerFixture)
  spec.csharp:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    nameWithType: IClassFixture
    fullName: Xunit.IClassFixture
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerFixture
    name: SqlServerFixture
    nameWithType: SqlServerFixture
    fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerFixture
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    nameWithType: IClassFixture
    fullName: Xunit.IClassFixture
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerFixture
    name: SqlServerFixture
    nameWithType: SqlServerFixture
    fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerFixture
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Xunit.IClassFixture`1
  commentId: T:Xunit.IClassFixture`1
  isExternal: true
  name: IClassFixture<TFixture>
  nameWithType: IClassFixture<TFixture>
  fullName: Xunit.IClassFixture<TFixture>
  nameWithType.vb: IClassFixture(Of TFixture)
  fullname.vb: Xunit.IClassFixture(Of TFixture)
  name.vb: IClassFixture(Of TFixture)
  spec.csharp:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    nameWithType: IClassFixture
    fullName: Xunit.IClassFixture
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TFixture
    nameWithType: TFixture
    fullName: TFixture
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    nameWithType: IClassFixture
    fullName: Xunit.IClassFixture
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TFixture
    nameWithType: TFixture
    fullName: TFixture
  - name: )
    nameWithType: )
    fullName: )
- uid: Xunit
  commentId: N:Xunit
  isExternal: false
  name: Xunit
  nameWithType: Xunit
  fullName: Xunit
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerFixture
  commentId: T:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerFixture
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  isExternal: false
  name: SqlServerFixture
  nameWithType: SqlServerFixture
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerFixture
