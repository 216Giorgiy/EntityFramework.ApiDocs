### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Tests.ChangeTracking.Internal.StateManagerTest.Widget
  commentId: T:Microsoft.EntityFrameworkCore.Tests.ChangeTracking.Internal.StateManagerTest.Widget
  id: StateManagerTest.Widget
  parent: Microsoft.EntityFrameworkCore.Tests.ChangeTracking.Internal
  children:
  - Microsoft.EntityFrameworkCore.Tests.ChangeTracking.Internal.StateManagerTest.Widget.ChildWidgets
  - Microsoft.EntityFrameworkCore.Tests.ChangeTracking.Internal.StateManagerTest.Widget.Id
  - Microsoft.EntityFrameworkCore.Tests.ChangeTracking.Internal.StateManagerTest.Widget.ParentWidget
  - Microsoft.EntityFrameworkCore.Tests.ChangeTracking.Internal.StateManagerTest.Widget.ParentWidgetId
  langs:
  - csharp
  - vb
  name: StateManagerTest.Widget
  nameWithType: StateManagerTest.Widget
  fullName: Microsoft.EntityFrameworkCore.Tests.ChangeTracking.Internal.StateManagerTest.Widget
  type: Class
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ChangeTracking/Internal/StateManagerTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Widget
    path: test/Microsoft.EntityFrameworkCore.Tests/ChangeTracking/Internal/StateManagerTest.cs
    startLine: 557
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.ChangeTracking.Internal
  syntax:
    content: public class Widget
    content.vb: Public Class Widget
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Tests.ChangeTracking.Internal.StateManagerTest.Widget.Id
  commentId: P:Microsoft.EntityFrameworkCore.Tests.ChangeTracking.Internal.StateManagerTest.Widget.Id
  id: Id
  parent: Microsoft.EntityFrameworkCore.Tests.ChangeTracking.Internal.StateManagerTest.Widget
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: StateManagerTest.Widget.Id
  fullName: Microsoft.EntityFrameworkCore.Tests.ChangeTracking.Internal.StateManagerTest.Widget.Id
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ChangeTracking/Internal/StateManagerTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Id
    path: test/Microsoft.EntityFrameworkCore.Tests/ChangeTracking/Internal/StateManagerTest.cs
    startLine: 559
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.ChangeTracking.Internal
  syntax:
    content: public int Id { get; set; }
    content.vb: Public Property Id As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.EntityFrameworkCore.Tests.ChangeTracking.Internal.StateManagerTest.Widget.Id*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.ChangeTracking.Internal.StateManagerTest.Widget.ParentWidgetId
  commentId: P:Microsoft.EntityFrameworkCore.Tests.ChangeTracking.Internal.StateManagerTest.Widget.ParentWidgetId
  id: ParentWidgetId
  parent: Microsoft.EntityFrameworkCore.Tests.ChangeTracking.Internal.StateManagerTest.Widget
  langs:
  - csharp
  - vb
  name: ParentWidgetId
  nameWithType: StateManagerTest.Widget.ParentWidgetId
  fullName: Microsoft.EntityFrameworkCore.Tests.ChangeTracking.Internal.StateManagerTest.Widget.ParentWidgetId
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ChangeTracking/Internal/StateManagerTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ParentWidgetId
    path: test/Microsoft.EntityFrameworkCore.Tests/ChangeTracking/Internal/StateManagerTest.cs
    startLine: 561
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.ChangeTracking.Internal
  syntax:
    content: public int ? ParentWidgetId { get; set; }
    content.vb: Public Property ParentWidgetId As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.EntityFrameworkCore.Tests.ChangeTracking.Internal.StateManagerTest.Widget.ParentWidgetId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.ChangeTracking.Internal.StateManagerTest.Widget.ParentWidget
  commentId: P:Microsoft.EntityFrameworkCore.Tests.ChangeTracking.Internal.StateManagerTest.Widget.ParentWidget
  id: ParentWidget
  parent: Microsoft.EntityFrameworkCore.Tests.ChangeTracking.Internal.StateManagerTest.Widget
  langs:
  - csharp
  - vb
  name: ParentWidget
  nameWithType: StateManagerTest.Widget.ParentWidget
  fullName: Microsoft.EntityFrameworkCore.Tests.ChangeTracking.Internal.StateManagerTest.Widget.ParentWidget
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ChangeTracking/Internal/StateManagerTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ParentWidget
    path: test/Microsoft.EntityFrameworkCore.Tests/ChangeTracking/Internal/StateManagerTest.cs
    startLine: 562
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.ChangeTracking.Internal
  syntax:
    content: public StateManagerTest.Widget ParentWidget { get; set; }
    content.vb: Public Property ParentWidget As StateManagerTest.Widget
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Tests.ChangeTracking.Internal.StateManagerTest.Widget
  overload: Microsoft.EntityFrameworkCore.Tests.ChangeTracking.Internal.StateManagerTest.Widget.ParentWidget*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.ChangeTracking.Internal.StateManagerTest.Widget.ChildWidgets
  commentId: P:Microsoft.EntityFrameworkCore.Tests.ChangeTracking.Internal.StateManagerTest.Widget.ChildWidgets
  id: ChildWidgets
  parent: Microsoft.EntityFrameworkCore.Tests.ChangeTracking.Internal.StateManagerTest.Widget
  langs:
  - csharp
  - vb
  name: ChildWidgets
  nameWithType: StateManagerTest.Widget.ChildWidgets
  fullName: Microsoft.EntityFrameworkCore.Tests.ChangeTracking.Internal.StateManagerTest.Widget.ChildWidgets
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ChangeTracking/Internal/StateManagerTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ChildWidgets
    path: test/Microsoft.EntityFrameworkCore.Tests/ChangeTracking/Internal/StateManagerTest.cs
    startLine: 564
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.ChangeTracking.Internal
  syntax:
    content: public List<StateManagerTest.Widget> ChildWidgets { get; set; }
    content.vb: Public Property ChildWidgets As List(Of StateManagerTest.Widget)
    parameters: []
    return:
      type: System.Collections.Generic.List{Microsoft.EntityFrameworkCore.Tests.ChangeTracking.Internal.StateManagerTest.Widget}
  overload: Microsoft.EntityFrameworkCore.Tests.ChangeTracking.Internal.StateManagerTest.Widget.ChildWidgets*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.EntityFrameworkCore.Tests.ChangeTracking.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Tests.ChangeTracking.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Tests.ChangeTracking.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Tests.ChangeTracking.Internal
  fullName: Microsoft.EntityFrameworkCore.Tests.ChangeTracking.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Tests.ChangeTracking.Internal.StateManagerTest.Widget.Id*
  commentId: Overload:Microsoft.EntityFrameworkCore.Tests.ChangeTracking.Internal.StateManagerTest.Widget.Id
  isExternal: false
  name: Id
  nameWithType: StateManagerTest.Widget.Id
  fullName: Microsoft.EntityFrameworkCore.Tests.ChangeTracking.Internal.StateManagerTest.Widget.Id
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.EntityFrameworkCore.Tests.ChangeTracking.Internal.StateManagerTest.Widget.ParentWidgetId*
  commentId: Overload:Microsoft.EntityFrameworkCore.Tests.ChangeTracking.Internal.StateManagerTest.Widget.ParentWidgetId
  isExternal: false
  name: ParentWidgetId
  nameWithType: StateManagerTest.Widget.ParentWidgetId
  fullName: Microsoft.EntityFrameworkCore.Tests.ChangeTracking.Internal.StateManagerTest.Widget.ParentWidgetId
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Tests.ChangeTracking.Internal.StateManagerTest.Widget.ParentWidget*
  commentId: Overload:Microsoft.EntityFrameworkCore.Tests.ChangeTracking.Internal.StateManagerTest.Widget.ParentWidget
  isExternal: false
  name: ParentWidget
  nameWithType: StateManagerTest.Widget.ParentWidget
  fullName: Microsoft.EntityFrameworkCore.Tests.ChangeTracking.Internal.StateManagerTest.Widget.ParentWidget
- uid: Microsoft.EntityFrameworkCore.Tests.ChangeTracking.Internal.StateManagerTest.Widget
  commentId: T:Microsoft.EntityFrameworkCore.Tests.ChangeTracking.Internal.StateManagerTest.Widget
  parent: Microsoft.EntityFrameworkCore.Tests.ChangeTracking.Internal
  isExternal: false
  name: StateManagerTest.Widget
  nameWithType: StateManagerTest.Widget
  fullName: Microsoft.EntityFrameworkCore.Tests.ChangeTracking.Internal.StateManagerTest.Widget
- uid: Microsoft.EntityFrameworkCore.Tests.ChangeTracking.Internal.StateManagerTest.Widget.ChildWidgets*
  commentId: Overload:Microsoft.EntityFrameworkCore.Tests.ChangeTracking.Internal.StateManagerTest.Widget.ChildWidgets
  isExternal: false
  name: ChildWidgets
  nameWithType: StateManagerTest.Widget.ChildWidgets
  fullName: Microsoft.EntityFrameworkCore.Tests.ChangeTracking.Internal.StateManagerTest.Widget.ChildWidgets
- uid: System.Collections.Generic.List{Microsoft.EntityFrameworkCore.Tests.ChangeTracking.Internal.StateManagerTest.Widget}
  commentId: T:System.Collections.Generic.List{Microsoft.EntityFrameworkCore.Tests.ChangeTracking.Internal.StateManagerTest.Widget}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<StateManagerTest.Widget>
  nameWithType: List<StateManagerTest.Widget>
  fullName: System.Collections.Generic.List<Microsoft.EntityFrameworkCore.Tests.ChangeTracking.Internal.StateManagerTest.Widget>
  nameWithType.vb: List(Of StateManagerTest.Widget)
  fullname.vb: System.Collections.Generic.List(Of Microsoft.EntityFrameworkCore.Tests.ChangeTracking.Internal.StateManagerTest.Widget)
  name.vb: List(Of StateManagerTest.Widget)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Tests.ChangeTracking.Internal.StateManagerTest.Widget
    name: StateManagerTest.Widget
    nameWithType: StateManagerTest.Widget
    fullName: Microsoft.EntityFrameworkCore.Tests.ChangeTracking.Internal.StateManagerTest.Widget
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Tests.ChangeTracking.Internal.StateManagerTest.Widget
    name: StateManagerTest.Widget
    nameWithType: StateManagerTest.Widget
    fullName: Microsoft.EntityFrameworkCore.Tests.ChangeTracking.Internal.StateManagerTest.Widget
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullname.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
