### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.TestSqlServerModelSource
  commentId: T:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.TestSqlServerModelSource
  id: TestSqlServerModelSource
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  children:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.TestSqlServerModelSource.#ctor(System.Action{Microsoft.EntityFrameworkCore.ModelBuilder},Microsoft.EntityFrameworkCore.Internal.IDbSetFinder,Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ICoreConventionSetBuilder)
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.TestSqlServerModelSource.GetFactory(System.Action{Microsoft.EntityFrameworkCore.ModelBuilder})
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.TestSqlServerModelSource.GetModel(Microsoft.EntityFrameworkCore.DbContext,Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder,Microsoft.EntityFrameworkCore.Internal.IModelValidator)
  langs:
  - csharp
  - vb
  name: TestSqlServerModelSource
  nameWithType: TestSqlServerModelSource
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.TestSqlServerModelSource
  type: Class
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/TestSqlServerModelSource.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: TestSqlServerModelSource
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/TestSqlServerModelSource.cs
    startLine: 14
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  syntax:
    content: 'public class TestSqlServerModelSource : SqlServerModelSource, IModelSource'
    content.vb: >-
      Public Class TestSqlServerModelSource
          Inherits SqlServerModelSource
          Implements IModelSource
  inheritance:
  - System.Object
  - Microsoft.EntityFrameworkCore.Infrastructure.ModelSource
  - Microsoft.EntityFrameworkCore.Infrastructure.Internal.RelationalModelSource
  - Microsoft.EntityFrameworkCore.Infrastructure.Internal.SqlServerModelSource
  implements:
  - Microsoft.EntityFrameworkCore.Infrastructure.IModelSource
  inheritedMembers:
  - Microsoft.EntityFrameworkCore.Infrastructure.Internal.RelationalModelSource.FindSets(Microsoft.EntityFrameworkCore.ModelBuilder,Microsoft.EntityFrameworkCore.DbContext)
  - Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.SetFinder
  - Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.CoreConventionSetBuilder
  - Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.ModelCustomizer
  - Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.ModelCacheKeyFactory
  - Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.CreateModel(Microsoft.EntityFrameworkCore.DbContext,Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder,Microsoft.EntityFrameworkCore.Internal.IModelValidator)
  - Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.CreateConventionSet(Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.TestSqlServerModelSource.#ctor(System.Action{Microsoft.EntityFrameworkCore.ModelBuilder},Microsoft.EntityFrameworkCore.Internal.IDbSetFinder,Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ICoreConventionSetBuilder)
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.TestSqlServerModelSource.#ctor(System.Action{Microsoft.EntityFrameworkCore.ModelBuilder},Microsoft.EntityFrameworkCore.Internal.IDbSetFinder,Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ICoreConventionSetBuilder)
  id: '#ctor(System.Action{Microsoft.EntityFrameworkCore.ModelBuilder},Microsoft.EntityFrameworkCore.Internal.IDbSetFinder,Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ICoreConventionSetBuilder)'
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.TestSqlServerModelSource
  langs:
  - csharp
  - vb
  name: TestSqlServerModelSource(Action<ModelBuilder>, IDbSetFinder, ICoreConventionSetBuilder)
  nameWithType: TestSqlServerModelSource.TestSqlServerModelSource(Action<ModelBuilder>, IDbSetFinder, ICoreConventionSetBuilder)
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.TestSqlServerModelSource.TestSqlServerModelSource(System.Action<Microsoft.EntityFrameworkCore.ModelBuilder>, Microsoft.EntityFrameworkCore.Internal.IDbSetFinder, Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ICoreConventionSetBuilder)
  type: Constructor
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/TestSqlServerModelSource.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/TestSqlServerModelSource.cs
    startLine: 18
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  syntax:
    content: public TestSqlServerModelSource(Action<ModelBuilder> onModelCreating, IDbSetFinder setFinder, ICoreConventionSetBuilder coreConventionSetBuilder)
    content.vb: Public Sub New(onModelCreating As Action(Of ModelBuilder), setFinder As IDbSetFinder, coreConventionSetBuilder As ICoreConventionSetBuilder)
    parameters:
    - id: onModelCreating
      type: System.Action{Microsoft.EntityFrameworkCore.ModelBuilder}
    - id: setFinder
      type: Microsoft.EntityFrameworkCore.Internal.IDbSetFinder
    - id: coreConventionSetBuilder
      type: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ICoreConventionSetBuilder
  overload: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.TestSqlServerModelSource.#ctor*
  nameWithType.vb: TestSqlServerModelSource.TestSqlServerModelSource(Action(Of ModelBuilder), IDbSetFinder, ICoreConventionSetBuilder)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.TestSqlServerModelSource.TestSqlServerModelSource(System.Action(Of Microsoft.EntityFrameworkCore.ModelBuilder), Microsoft.EntityFrameworkCore.Internal.IDbSetFinder, Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ICoreConventionSetBuilder)
  name.vb: TestSqlServerModelSource(Action(Of ModelBuilder), IDbSetFinder, ICoreConventionSetBuilder)
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.TestSqlServerModelSource.GetModel(Microsoft.EntityFrameworkCore.DbContext,Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder,Microsoft.EntityFrameworkCore.Internal.IModelValidator)
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.TestSqlServerModelSource.GetModel(Microsoft.EntityFrameworkCore.DbContext,Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder,Microsoft.EntityFrameworkCore.Internal.IModelValidator)
  id: GetModel(Microsoft.EntityFrameworkCore.DbContext,Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder,Microsoft.EntityFrameworkCore.Internal.IModelValidator)
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.TestSqlServerModelSource
  langs:
  - csharp
  - vb
  name: GetModel(DbContext, IConventionSetBuilder, IModelValidator)
  nameWithType: TestSqlServerModelSource.GetModel(DbContext, IConventionSetBuilder, IModelValidator)
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.TestSqlServerModelSource.GetModel(Microsoft.EntityFrameworkCore.DbContext, Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder, Microsoft.EntityFrameworkCore.Internal.IModelValidator)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/TestSqlServerModelSource.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetModel
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/TestSqlServerModelSource.cs
    startLine: 27
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  syntax:
    content: public override IModel GetModel(DbContext context, IConventionSetBuilder conventionSetBuilder, IModelValidator validator)
    content.vb: Public Overrides Function GetModel(context As DbContext, conventionSetBuilder As IConventionSetBuilder, validator As IModelValidator) As IModel
    parameters:
    - id: context
      type: Microsoft.EntityFrameworkCore.DbContext
    - id: conventionSetBuilder
      type: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder
    - id: validator
      type: Microsoft.EntityFrameworkCore.Internal.IModelValidator
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.IModel
  overridden: Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.GetModel(Microsoft.EntityFrameworkCore.DbContext,Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder,Microsoft.EntityFrameworkCore.Internal.IModelValidator)
  overload: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.TestSqlServerModelSource.GetModel*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.TestSqlServerModelSource.GetFactory(System.Action{Microsoft.EntityFrameworkCore.ModelBuilder})
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.TestSqlServerModelSource.GetFactory(System.Action{Microsoft.EntityFrameworkCore.ModelBuilder})
  id: GetFactory(System.Action{Microsoft.EntityFrameworkCore.ModelBuilder})
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.TestSqlServerModelSource
  langs:
  - csharp
  - vb
  name: GetFactory(Action<ModelBuilder>)
  nameWithType: TestSqlServerModelSource.GetFactory(Action<ModelBuilder>)
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.TestSqlServerModelSource.GetFactory(System.Action<Microsoft.EntityFrameworkCore.ModelBuilder>)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/TestSqlServerModelSource.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetFactory
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/TestSqlServerModelSource.cs
    startLine: 30
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  syntax:
    content: public static Func<IServiceProvider, SqlServerModelSource> GetFactory(Action<ModelBuilder> onModelCreating)
    content.vb: Public Shared Function GetFactory(onModelCreating As Action(Of ModelBuilder)) As Func(Of IServiceProvider, SqlServerModelSource)
    parameters:
    - id: onModelCreating
      type: System.Action{Microsoft.EntityFrameworkCore.ModelBuilder}
    return:
      type: System.Func{System.IServiceProvider,Microsoft.EntityFrameworkCore.Infrastructure.Internal.SqlServerModelSource}
  overload: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.TestSqlServerModelSource.GetFactory*
  nameWithType.vb: TestSqlServerModelSource.GetFactory(Action(Of ModelBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.TestSqlServerModelSource.GetFactory(System.Action(Of Microsoft.EntityFrameworkCore.ModelBuilder))
  name.vb: GetFactory(Action(Of ModelBuilder))
references:
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  commentId: N:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  isExternal: false
  name: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  nameWithType: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Infrastructure.ModelSource
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.ModelSource
  parent: Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: ModelSource
  nameWithType: ModelSource
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.ModelSource
- uid: Microsoft.EntityFrameworkCore.Infrastructure.Internal.RelationalModelSource
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.Internal.RelationalModelSource
  parent: Microsoft.EntityFrameworkCore.Infrastructure.Internal
  isExternal: false
  name: RelationalModelSource
  nameWithType: RelationalModelSource
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.Internal.RelationalModelSource
- uid: Microsoft.EntityFrameworkCore.Infrastructure.Internal.SqlServerModelSource
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.Internal.SqlServerModelSource
  parent: Microsoft.EntityFrameworkCore.Infrastructure.Internal
  isExternal: false
  name: SqlServerModelSource
  nameWithType: SqlServerModelSource
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.Internal.SqlServerModelSource
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IModelSource
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.IModelSource
  parent: Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: IModelSource
  nameWithType: IModelSource
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IModelSource
- uid: Microsoft.EntityFrameworkCore.Infrastructure.Internal.RelationalModelSource.FindSets(Microsoft.EntityFrameworkCore.ModelBuilder,Microsoft.EntityFrameworkCore.DbContext)
  commentId: M:Microsoft.EntityFrameworkCore.Infrastructure.Internal.RelationalModelSource.FindSets(Microsoft.EntityFrameworkCore.ModelBuilder,Microsoft.EntityFrameworkCore.DbContext)
  parent: Microsoft.EntityFrameworkCore.Infrastructure.Internal.RelationalModelSource
  isExternal: false
  name: FindSets(ModelBuilder, DbContext)
  nameWithType: RelationalModelSource.FindSets(ModelBuilder, DbContext)
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.Internal.RelationalModelSource.FindSets(Microsoft.EntityFrameworkCore.ModelBuilder, Microsoft.EntityFrameworkCore.DbContext)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.Internal.RelationalModelSource.FindSets(Microsoft.EntityFrameworkCore.ModelBuilder,Microsoft.EntityFrameworkCore.DbContext)
    name: FindSets
    nameWithType: RelationalModelSource.FindSets
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.Internal.RelationalModelSource.FindSets
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.ModelBuilder
    name: ModelBuilder
    nameWithType: ModelBuilder
    fullName: Microsoft.EntityFrameworkCore.ModelBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.DbContext
    name: DbContext
    nameWithType: DbContext
    fullName: Microsoft.EntityFrameworkCore.DbContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.Internal.RelationalModelSource.FindSets(Microsoft.EntityFrameworkCore.ModelBuilder,Microsoft.EntityFrameworkCore.DbContext)
    name: FindSets
    nameWithType: RelationalModelSource.FindSets
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.Internal.RelationalModelSource.FindSets
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.ModelBuilder
    name: ModelBuilder
    nameWithType: ModelBuilder
    fullName: Microsoft.EntityFrameworkCore.ModelBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.DbContext
    name: DbContext
    nameWithType: DbContext
    fullName: Microsoft.EntityFrameworkCore.DbContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.SetFinder
  commentId: P:Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.SetFinder
  parent: Microsoft.EntityFrameworkCore.Infrastructure.ModelSource
  isExternal: false
  name: SetFinder
  nameWithType: ModelSource.SetFinder
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.SetFinder
- uid: Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.CoreConventionSetBuilder
  commentId: P:Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.CoreConventionSetBuilder
  parent: Microsoft.EntityFrameworkCore.Infrastructure.ModelSource
  isExternal: false
  name: CoreConventionSetBuilder
  nameWithType: ModelSource.CoreConventionSetBuilder
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.CoreConventionSetBuilder
- uid: Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.ModelCustomizer
  commentId: P:Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.ModelCustomizer
  parent: Microsoft.EntityFrameworkCore.Infrastructure.ModelSource
  isExternal: false
  name: ModelCustomizer
  nameWithType: ModelSource.ModelCustomizer
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.ModelCustomizer
- uid: Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.ModelCacheKeyFactory
  commentId: P:Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.ModelCacheKeyFactory
  parent: Microsoft.EntityFrameworkCore.Infrastructure.ModelSource
  isExternal: false
  name: ModelCacheKeyFactory
  nameWithType: ModelSource.ModelCacheKeyFactory
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.ModelCacheKeyFactory
- uid: Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.CreateModel(Microsoft.EntityFrameworkCore.DbContext,Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder,Microsoft.EntityFrameworkCore.Internal.IModelValidator)
  commentId: M:Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.CreateModel(Microsoft.EntityFrameworkCore.DbContext,Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder,Microsoft.EntityFrameworkCore.Internal.IModelValidator)
  parent: Microsoft.EntityFrameworkCore.Infrastructure.ModelSource
  isExternal: false
  name: CreateModel(DbContext, IConventionSetBuilder, IModelValidator)
  nameWithType: ModelSource.CreateModel(DbContext, IConventionSetBuilder, IModelValidator)
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.CreateModel(Microsoft.EntityFrameworkCore.DbContext, Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder, Microsoft.EntityFrameworkCore.Internal.IModelValidator)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.CreateModel(Microsoft.EntityFrameworkCore.DbContext,Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder,Microsoft.EntityFrameworkCore.Internal.IModelValidator)
    name: CreateModel
    nameWithType: ModelSource.CreateModel
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.CreateModel
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.DbContext
    name: DbContext
    nameWithType: DbContext
    fullName: Microsoft.EntityFrameworkCore.DbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder
    name: IConventionSetBuilder
    nameWithType: IConventionSetBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Internal.IModelValidator
    name: IModelValidator
    nameWithType: IModelValidator
    fullName: Microsoft.EntityFrameworkCore.Internal.IModelValidator
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.CreateModel(Microsoft.EntityFrameworkCore.DbContext,Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder,Microsoft.EntityFrameworkCore.Internal.IModelValidator)
    name: CreateModel
    nameWithType: ModelSource.CreateModel
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.CreateModel
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.DbContext
    name: DbContext
    nameWithType: DbContext
    fullName: Microsoft.EntityFrameworkCore.DbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder
    name: IConventionSetBuilder
    nameWithType: IConventionSetBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Internal.IModelValidator
    name: IModelValidator
    nameWithType: IModelValidator
    fullName: Microsoft.EntityFrameworkCore.Internal.IModelValidator
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.CreateConventionSet(Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder)
  commentId: M:Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.CreateConventionSet(Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder)
  parent: Microsoft.EntityFrameworkCore.Infrastructure.ModelSource
  isExternal: false
  name: CreateConventionSet(IConventionSetBuilder)
  nameWithType: ModelSource.CreateConventionSet(IConventionSetBuilder)
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.CreateConventionSet(Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.CreateConventionSet(Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder)
    name: CreateConventionSet
    nameWithType: ModelSource.CreateConventionSet
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.CreateConventionSet
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder
    name: IConventionSetBuilder
    nameWithType: IConventionSetBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.CreateConventionSet(Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder)
    name: CreateConventionSet
    nameWithType: ModelSource.CreateConventionSet
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.CreateConventionSet
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder
    name: IConventionSetBuilder
    nameWithType: IConventionSetBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Infrastructure
  commentId: N:Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Infrastructure
  nameWithType: Microsoft.EntityFrameworkCore.Infrastructure
  fullName: Microsoft.EntityFrameworkCore.Infrastructure
- uid: Microsoft.EntityFrameworkCore.Infrastructure.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Infrastructure.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Infrastructure.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Infrastructure.Internal
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.Internal
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.TestSqlServerModelSource.#ctor*
  commentId: Overload:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.TestSqlServerModelSource.#ctor
  isExternal: false
  name: TestSqlServerModelSource
  nameWithType: TestSqlServerModelSource.TestSqlServerModelSource
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.TestSqlServerModelSource.TestSqlServerModelSource
- uid: System.Action{Microsoft.EntityFrameworkCore.ModelBuilder}
  commentId: T:System.Action{Microsoft.EntityFrameworkCore.ModelBuilder}
  parent: System
  definition: System.Action`1
  name: Action<ModelBuilder>
  nameWithType: Action<ModelBuilder>
  fullName: System.Action<Microsoft.EntityFrameworkCore.ModelBuilder>
  nameWithType.vb: Action(Of ModelBuilder)
  fullname.vb: System.Action(Of Microsoft.EntityFrameworkCore.ModelBuilder)
  name.vb: Action(Of ModelBuilder)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.ModelBuilder
    name: ModelBuilder
    nameWithType: ModelBuilder
    fullName: Microsoft.EntityFrameworkCore.ModelBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.ModelBuilder
    name: ModelBuilder
    nameWithType: ModelBuilder
    fullName: Microsoft.EntityFrameworkCore.ModelBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Internal.IDbSetFinder
  commentId: T:Microsoft.EntityFrameworkCore.Internal.IDbSetFinder
  parent: Microsoft.EntityFrameworkCore.Internal
  isExternal: false
  name: IDbSetFinder
  nameWithType: IDbSetFinder
  fullName: Microsoft.EntityFrameworkCore.Internal.IDbSetFinder
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ICoreConventionSetBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ICoreConventionSetBuilder
  parent: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
  isExternal: false
  name: ICoreConventionSetBuilder
  nameWithType: ICoreConventionSetBuilder
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ICoreConventionSetBuilder
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullname.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Internal
  fullName: Microsoft.EntityFrameworkCore.Internal
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
- uid: Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.GetModel(Microsoft.EntityFrameworkCore.DbContext,Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder,Microsoft.EntityFrameworkCore.Internal.IModelValidator)
  commentId: M:Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.GetModel(Microsoft.EntityFrameworkCore.DbContext,Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder,Microsoft.EntityFrameworkCore.Internal.IModelValidator)
  parent: Microsoft.EntityFrameworkCore.Infrastructure.ModelSource
  isExternal: false
  name: GetModel(DbContext, IConventionSetBuilder, IModelValidator)
  nameWithType: ModelSource.GetModel(DbContext, IConventionSetBuilder, IModelValidator)
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.GetModel(Microsoft.EntityFrameworkCore.DbContext, Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder, Microsoft.EntityFrameworkCore.Internal.IModelValidator)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.GetModel(Microsoft.EntityFrameworkCore.DbContext,Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder,Microsoft.EntityFrameworkCore.Internal.IModelValidator)
    name: GetModel
    nameWithType: ModelSource.GetModel
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.GetModel
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.DbContext
    name: DbContext
    nameWithType: DbContext
    fullName: Microsoft.EntityFrameworkCore.DbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder
    name: IConventionSetBuilder
    nameWithType: IConventionSetBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Internal.IModelValidator
    name: IModelValidator
    nameWithType: IModelValidator
    fullName: Microsoft.EntityFrameworkCore.Internal.IModelValidator
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.GetModel(Microsoft.EntityFrameworkCore.DbContext,Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder,Microsoft.EntityFrameworkCore.Internal.IModelValidator)
    name: GetModel
    nameWithType: ModelSource.GetModel
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.GetModel
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.DbContext
    name: DbContext
    nameWithType: DbContext
    fullName: Microsoft.EntityFrameworkCore.DbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder
    name: IConventionSetBuilder
    nameWithType: IConventionSetBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Internal.IModelValidator
    name: IModelValidator
    nameWithType: IModelValidator
    fullName: Microsoft.EntityFrameworkCore.Internal.IModelValidator
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.TestSqlServerModelSource.GetModel*
  commentId: Overload:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.TestSqlServerModelSource.GetModel
  isExternal: false
  name: GetModel
  nameWithType: TestSqlServerModelSource.GetModel
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.TestSqlServerModelSource.GetModel
- uid: Microsoft.EntityFrameworkCore.DbContext
  commentId: T:Microsoft.EntityFrameworkCore.DbContext
  parent: Microsoft.EntityFrameworkCore
  isExternal: false
  name: DbContext
  nameWithType: DbContext
  fullName: Microsoft.EntityFrameworkCore.DbContext
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder
  parent: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
  isExternal: false
  name: IConventionSetBuilder
  nameWithType: IConventionSetBuilder
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder
- uid: Microsoft.EntityFrameworkCore.Internal.IModelValidator
  commentId: T:Microsoft.EntityFrameworkCore.Internal.IModelValidator
  parent: Microsoft.EntityFrameworkCore.Internal
  isExternal: false
  name: IModelValidator
  nameWithType: IModelValidator
  fullName: Microsoft.EntityFrameworkCore.Internal.IModelValidator
- uid: Microsoft.EntityFrameworkCore.Metadata.IModel
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IModel
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IModel
  nameWithType: IModel
  fullName: Microsoft.EntityFrameworkCore.Metadata.IModel
- uid: Microsoft.EntityFrameworkCore
  commentId: N:Microsoft.EntityFrameworkCore
  isExternal: false
  name: Microsoft.EntityFrameworkCore
  nameWithType: Microsoft.EntityFrameworkCore
  fullName: Microsoft.EntityFrameworkCore
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.TestSqlServerModelSource.GetFactory*
  commentId: Overload:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.TestSqlServerModelSource.GetFactory
  isExternal: false
  name: GetFactory
  nameWithType: TestSqlServerModelSource.GetFactory
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.TestSqlServerModelSource.GetFactory
- uid: System.Func{System.IServiceProvider,Microsoft.EntityFrameworkCore.Infrastructure.Internal.SqlServerModelSource}
  commentId: T:System.Func{System.IServiceProvider,Microsoft.EntityFrameworkCore.Infrastructure.Internal.SqlServerModelSource}
  parent: System
  definition: System.Func`2
  name: Func<IServiceProvider, SqlServerModelSource>
  nameWithType: Func<IServiceProvider, SqlServerModelSource>
  fullName: System.Func<System.IServiceProvider, Microsoft.EntityFrameworkCore.Infrastructure.Internal.SqlServerModelSource>
  nameWithType.vb: Func(Of IServiceProvider, SqlServerModelSource)
  fullname.vb: System.Func(Of System.IServiceProvider, Microsoft.EntityFrameworkCore.Infrastructure.Internal.SqlServerModelSource)
  name.vb: Func(Of IServiceProvider, SqlServerModelSource)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.Internal.SqlServerModelSource
    name: SqlServerModelSource
    nameWithType: SqlServerModelSource
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.Internal.SqlServerModelSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.Internal.SqlServerModelSource
    name: SqlServerModelSource
    nameWithType: SqlServerModelSource
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.Internal.SqlServerModelSource
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullname.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
