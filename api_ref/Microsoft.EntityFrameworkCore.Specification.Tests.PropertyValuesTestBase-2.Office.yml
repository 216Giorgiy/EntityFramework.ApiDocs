### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Office
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Office
  id: PropertyValuesTestBase`2.Office
  parent: Microsoft.EntityFrameworkCore.Specification.Tests
  children:
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Office.Building
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Office.BuildingId
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Office.WhiteBoards
  langs:
  - csharp
  - vb
  name: PropertyValuesTestBase<TTestStore, TFixture>.Office
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Office
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Office
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Office
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 1909
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: 'protected class Office : PropertyValuesTestBase<TTestStore, TFixture>.UnMappedOfficeBase'
    content.vb: >-
      Protected Class Office
          Inherits PropertyValuesTestBase(Of TTestStore, TFixture).UnMappedOfficeBase
  inheritance:
  - System.Object
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.UnMappedOfficeBase
  inheritedMembers:
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.UnMappedOfficeBase.Number
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.UnMappedOfficeBase.Description
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Office
  modifiers.csharp:
  - protected
  - class
  modifiers.vb:
  - Protected
  - Class
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Office
  name.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Office
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Office.BuildingId
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Office.BuildingId
  id: BuildingId
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Office
  langs:
  - csharp
  - vb
  name: BuildingId
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Office.BuildingId
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Office.BuildingId
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: BuildingId
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 1911
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public Guid BuildingId { get; set; }
    content.vb: Public Property BuildingId As Guid
    parameters: []
    return:
      type: System.Guid
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Office.BuildingId*
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Office.BuildingId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Office.BuildingId
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Office.Building
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Office.Building
  id: Building
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Office
  langs:
  - csharp
  - vb
  name: Building
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Office.Building
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Office.Building
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Building
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 1912
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public PropertyValuesTestBase<TTestStore, TFixture>.Building Building { get; set; }
    content.vb: Public Property Building As PropertyValuesTestBase(Of TTestStore, TFixture).Building
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Building
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Office.Building*
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Office.Building
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Office.Building
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Office.WhiteBoards
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Office.WhiteBoards
  id: WhiteBoards
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Office
  langs:
  - csharp
  - vb
  name: WhiteBoards
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Office.WhiteBoards
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Office.WhiteBoards
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: WhiteBoards
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 1913
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public IList<PropertyValuesTestBase<TTestStore, TFixture>.Whiteboard> WhiteBoards { get; }
    content.vb: Public ReadOnly Property WhiteBoards As IList(Of PropertyValuesTestBase(Of TTestStore, TFixture).Whiteboard)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Whiteboard}
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Office.WhiteBoards*
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Office.WhiteBoards
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Office.WhiteBoards
references:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests
  commentId: N:Microsoft.EntityFrameworkCore.Specification.Tests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Specification.Tests
  nameWithType: Microsoft.EntityFrameworkCore.Specification.Tests
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.UnMappedOfficeBase
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.UnMappedOfficeBase
  parent: Microsoft.EntityFrameworkCore.Specification.Tests
  isExternal: false
  name: PropertyValuesTestBase.UnMappedOfficeBase<>
  nameWithType: PropertyValuesTestBase.UnMappedOfficeBase<>
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase.UnMappedOfficeBase<>
  nameWithType.vb: PropertyValuesTestBase.UnMappedOfficeBase(Of )
  fullname.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase.UnMappedOfficeBase(Of )
  name.vb: PropertyValuesTestBase.UnMappedOfficeBase(Of )
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.UnMappedOfficeBase
    name: PropertyValuesTestBase.UnMappedOfficeBase
    nameWithType: PropertyValuesTestBase.UnMappedOfficeBase
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase.UnMappedOfficeBase
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.UnMappedOfficeBase
    name: PropertyValuesTestBase.UnMappedOfficeBase
    nameWithType: PropertyValuesTestBase.UnMappedOfficeBase
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase.UnMappedOfficeBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.UnMappedOfficeBase.Number
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.UnMappedOfficeBase.Number
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.UnMappedOfficeBase
  isExternal: false
  name: Number
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.UnMappedOfficeBase.Number
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.UnMappedOfficeBase.Number
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).UnMappedOfficeBase.Number
  fullname.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).UnMappedOfficeBase.Number
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.UnMappedOfficeBase.Description
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.UnMappedOfficeBase.Description
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.UnMappedOfficeBase
  isExternal: false
  name: Description
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.UnMappedOfficeBase.Description
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.UnMappedOfficeBase.Description
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).UnMappedOfficeBase.Description
  fullname.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).UnMappedOfficeBase.Description
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Office.BuildingId*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Office.BuildingId
  isExternal: false
  name: BuildingId
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Office.BuildingId
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Office.BuildingId
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Office.BuildingId
  fullname.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Office.BuildingId
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Office.Building*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Office.Building
  isExternal: false
  name: Building
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Office.Building
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Office.Building
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Office.Building
  fullname.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Office.Building
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Building
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Building
  parent: Microsoft.EntityFrameworkCore.Specification.Tests
  isExternal: false
  name: PropertyValuesTestBase.Building<>
  nameWithType: PropertyValuesTestBase.Building<>
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase.Building<>
  nameWithType.vb: PropertyValuesTestBase.Building(Of )
  fullname.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase.Building(Of )
  name.vb: PropertyValuesTestBase.Building(Of )
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Building
    name: PropertyValuesTestBase.Building
    nameWithType: PropertyValuesTestBase.Building
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase.Building
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Building
    name: PropertyValuesTestBase.Building
    nameWithType: PropertyValuesTestBase.Building
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase.Building
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Office.WhiteBoards*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Office.WhiteBoards
  isExternal: false
  name: WhiteBoards
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Office.WhiteBoards
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Office.WhiteBoards
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Office.WhiteBoards
  fullname.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Office.WhiteBoards
- uid: System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Whiteboard}
  commentId: T:System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Whiteboard}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<PropertyValuesTestBase.Whiteboard<>>
  nameWithType: IList<PropertyValuesTestBase.Whiteboard<>>
  fullName: System.Collections.Generic.IList<Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase.Whiteboard<>>
  nameWithType.vb: IList(Of PropertyValuesTestBase.Whiteboard(Of ))
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase.Whiteboard(Of ))
  name.vb: IList(Of PropertyValuesTestBase.Whiteboard(Of ))
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Whiteboard
    name: PropertyValuesTestBase.Whiteboard
    nameWithType: PropertyValuesTestBase.Whiteboard
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase.Whiteboard
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Whiteboard
    name: PropertyValuesTestBase.Whiteboard
    nameWithType: PropertyValuesTestBase.Whiteboard
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase.Whiteboard
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
