### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator
  commentId: T:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator
  id: TrackingResultOperator
  parent: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
  children:
  - Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.#ctor(System.Boolean)
  - Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.Clone(Remotion.Linq.Clauses.CloneContext)
  - Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.ExecuteInMemory``1(Remotion.Linq.Clauses.StreamedData.StreamedSequence)
  - Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.IsTracking
  - Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.QueryModel
  - Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.QuerySource
  - Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.ToString
  - Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.TransformExpressions(System.Func{System.Linq.Expressions.Expression,System.Linq.Expressions.Expression})
  langs:
  - csharp
  - vb
  name: TrackingResultOperator
  nameWithType: TrackingResultOperator
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/TrackingResultOperator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: TrackingResultOperator
    path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/TrackingResultOperator.cs
    startLine: 17
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public class TrackingResultOperator : SequenceTypePreservingResultOperatorBase, IQueryAnnotation'
    content.vb: >-
      Public Class TrackingResultOperator
          Inherits SequenceTypePreservingResultOperatorBase
          Implements IQueryAnnotation
  inheritance:
  - System.Object
  - Remotion.Linq.Clauses.ResultOperatorBase
  - Remotion.Linq.Clauses.ResultOperators.SequenceFromSequenceResultOperatorBase
  - Remotion.Linq.Clauses.ResultOperators.SequenceTypePreservingResultOperatorBase
  implements:
  - Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation
  inheritedMembers:
  - Remotion.Linq.Clauses.ResultOperators.SequenceTypePreservingResultOperatorBase.GetOutputDataInfo(Remotion.Linq.Clauses.StreamedData.IStreamedDataInfo)
  - Remotion.Linq.Clauses.ResultOperators.SequenceTypePreservingResultOperatorBase.GetOutputDataInfo(Remotion.Linq.Clauses.StreamedData.StreamedSequenceInfo)
  - Remotion.Linq.Clauses.ResultOperators.SequenceFromSequenceResultOperatorBase.ExecuteInMemory(Remotion.Linq.Clauses.StreamedData.IStreamedData)
  - Remotion.Linq.Clauses.ResultOperatorBase.Accept(Remotion.Linq.IQueryModelVisitor,Remotion.Linq.QueryModel,System.Int32)
  - Remotion.Linq.Clauses.ResultOperatorBase.InvokeExecuteMethod(System.Reflection.MethodInfo,System.Object)
  - Remotion.Linq.Clauses.ResultOperatorBase.GetConstantValueFromExpression``1(System.String,System.Linq.Expressions.Expression)
  - Remotion.Linq.Clauses.ResultOperatorBase.CheckSequenceItemType(Remotion.Linq.Clauses.StreamedData.StreamedSequenceInfo,System.Type)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.#ctor(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator
  langs:
  - csharp
  - vb
  name: TrackingResultOperator(Boolean)
  nameWithType: TrackingResultOperator.TrackingResultOperator(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.TrackingResultOperator(System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/TrackingResultOperator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/TrackingResultOperator.cs
    startLine: 23
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public TrackingResultOperator(bool tracking)
    content.vb: Public Sub New(tracking As Boolean)
    parameters:
    - id: tracking
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.QuerySource
  commentId: P:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.QuerySource
  id: QuerySource
  parent: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator
  langs:
  - csharp
  - vb
  name: QuerySource
  nameWithType: TrackingResultOperator.QuerySource
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.QuerySource
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/TrackingResultOperator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: QuerySource
    path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/TrackingResultOperator.cs
    startLine: 32
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual IQuerySource QuerySource { get; set; }
    content.vb: Public Overridable Property QuerySource As IQuerySource
    parameters: []
    return:
      type: Remotion.Linq.Clauses.IQuerySource
  implements:
  - Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation.QuerySource
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.QueryModel
  commentId: P:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.QueryModel
  id: QueryModel
  parent: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator
  langs:
  - csharp
  - vb
  name: QueryModel
  nameWithType: TrackingResultOperator.QueryModel
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.QueryModel
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/TrackingResultOperator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: QueryModel
    path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/TrackingResultOperator.cs
    startLine: 38
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual QueryModel QueryModel { get; set; }
    content.vb: Public Overridable Property QueryModel As QueryModel
    parameters: []
    return:
      type: Remotion.Linq.QueryModel
  implements:
  - Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation.QueryModel
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.IsTracking
  commentId: P:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.IsTracking
  id: IsTracking
  parent: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator
  langs:
  - csharp
  - vb
  name: IsTracking
  nameWithType: TrackingResultOperator.IsTracking
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.IsTracking
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/TrackingResultOperator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: IsTracking
    path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/TrackingResultOperator.cs
    startLine: 44
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual bool IsTracking { get; }
    content.vb: Public Overridable ReadOnly Property IsTracking As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.ToString
  commentId: M:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.ToString
  id: ToString
  parent: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: TrackingResultOperator.ToString()
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.ToString()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/TrackingResultOperator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ToString
    path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/TrackingResultOperator.cs
    startLine: 50
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
  overridden: System.Object.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.Clone(Remotion.Linq.Clauses.CloneContext)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.Clone(Remotion.Linq.Clauses.CloneContext)
  id: Clone(Remotion.Linq.Clauses.CloneContext)
  parent: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator
  langs:
  - csharp
  - vb
  name: Clone(CloneContext)
  nameWithType: TrackingResultOperator.Clone(CloneContext)
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.Clone(Remotion.Linq.Clauses.CloneContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/TrackingResultOperator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Clone
    path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/TrackingResultOperator.cs
    startLine: 56
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public override ResultOperatorBase Clone(CloneContext cloneContext)
    content.vb: Public Overrides Function Clone(cloneContext As CloneContext) As ResultOperatorBase
    parameters:
    - id: cloneContext
      type: Remotion.Linq.Clauses.CloneContext
    return:
      type: Remotion.Linq.Clauses.ResultOperatorBase
  overridden: Remotion.Linq.Clauses.ResultOperatorBase.Clone(Remotion.Linq.Clauses.CloneContext)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.TransformExpressions(System.Func{System.Linq.Expressions.Expression,System.Linq.Expressions.Expression})
  commentId: M:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.TransformExpressions(System.Func{System.Linq.Expressions.Expression,System.Linq.Expressions.Expression})
  id: TransformExpressions(System.Func{System.Linq.Expressions.Expression,System.Linq.Expressions.Expression})
  parent: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator
  langs:
  - csharp
  - vb
  name: TransformExpressions(Func<Expression, Expression>)
  nameWithType: TrackingResultOperator.TransformExpressions(Func<Expression, Expression>)
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.TransformExpressions(System.Func<System.Linq.Expressions.Expression, System.Linq.Expressions.Expression>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/TrackingResultOperator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: TransformExpressions
    path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/TrackingResultOperator.cs
    startLine: 63
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public override void TransformExpressions(Func<Expression, Expression> transformation)
    content.vb: Public Overrides Sub TransformExpressions(transformation As Func(Of Expression, Expression))
    parameters:
    - id: transformation
      type: System.Func{System.Linq.Expressions.Expression,System.Linq.Expressions.Expression}
  overridden: Remotion.Linq.Clauses.ResultOperatorBase.TransformExpressions(System.Func{System.Linq.Expressions.Expression,System.Linq.Expressions.Expression})
  nameWithType.vb: TrackingResultOperator.TransformExpressions(Func(Of Expression, Expression))
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.TransformExpressions(System.Func(Of System.Linq.Expressions.Expression, System.Linq.Expressions.Expression))
  name.vb: TransformExpressions(Func(Of Expression, Expression))
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.ExecuteInMemory``1(Remotion.Linq.Clauses.StreamedData.StreamedSequence)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.ExecuteInMemory``1(Remotion.Linq.Clauses.StreamedData.StreamedSequence)
  id: ExecuteInMemory``1(Remotion.Linq.Clauses.StreamedData.StreamedSequence)
  parent: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator
  langs:
  - csharp
  - vb
  name: ExecuteInMemory<T>(StreamedSequence)
  nameWithType: TrackingResultOperator.ExecuteInMemory<T>(StreamedSequence)
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.ExecuteInMemory<T>(Remotion.Linq.Clauses.StreamedData.StreamedSequence)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/TrackingResultOperator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ExecuteInMemory
    path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/TrackingResultOperator.cs
    startLine: 71
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public override StreamedSequence ExecuteInMemory<T>(StreamedSequence input)
    content.vb: Public Overrides Function ExecuteInMemory(Of T)(input As StreamedSequence) As StreamedSequence
    parameters:
    - id: input
      type: Remotion.Linq.Clauses.StreamedData.StreamedSequence
    typeParameters:
    - id: T
    return:
      type: Remotion.Linq.Clauses.StreamedData.StreamedSequence
  overridden: Remotion.Linq.Clauses.ResultOperators.SequenceFromSequenceResultOperatorBase.ExecuteInMemory``1(Remotion.Linq.Clauses.StreamedData.StreamedSequence)
  nameWithType.vb: TrackingResultOperator.ExecuteInMemory(Of T)(StreamedSequence)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.ExecuteInMemory(Of T)(Remotion.Linq.Clauses.StreamedData.StreamedSequence)
  name.vb: ExecuteInMemory(Of T)(StreamedSequence)
references:
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Remotion.Linq.Clauses.ResultOperatorBase
  commentId: T:Remotion.Linq.Clauses.ResultOperatorBase
  parent: Remotion.Linq.Clauses
  isExternal: true
  name: ResultOperatorBase
  nameWithType: ResultOperatorBase
  fullName: Remotion.Linq.Clauses.ResultOperatorBase
- uid: Remotion.Linq.Clauses.ResultOperators.SequenceFromSequenceResultOperatorBase
  commentId: T:Remotion.Linq.Clauses.ResultOperators.SequenceFromSequenceResultOperatorBase
  parent: Remotion.Linq.Clauses.ResultOperators
  isExternal: true
  name: SequenceFromSequenceResultOperatorBase
  nameWithType: SequenceFromSequenceResultOperatorBase
  fullName: Remotion.Linq.Clauses.ResultOperators.SequenceFromSequenceResultOperatorBase
- uid: Remotion.Linq.Clauses.ResultOperators.SequenceTypePreservingResultOperatorBase
  commentId: T:Remotion.Linq.Clauses.ResultOperators.SequenceTypePreservingResultOperatorBase
  parent: Remotion.Linq.Clauses.ResultOperators
  isExternal: true
  name: SequenceTypePreservingResultOperatorBase
  nameWithType: SequenceTypePreservingResultOperatorBase
  fullName: Remotion.Linq.Clauses.ResultOperators.SequenceTypePreservingResultOperatorBase
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation
  commentId: T:Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation
  parent: Microsoft.EntityFrameworkCore.Query.ResultOperators
  isExternal: false
  name: IQueryAnnotation
  nameWithType: IQueryAnnotation
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation
- uid: Remotion.Linq.Clauses.ResultOperators.SequenceTypePreservingResultOperatorBase.GetOutputDataInfo(Remotion.Linq.Clauses.StreamedData.IStreamedDataInfo)
  commentId: M:Remotion.Linq.Clauses.ResultOperators.SequenceTypePreservingResultOperatorBase.GetOutputDataInfo(Remotion.Linq.Clauses.StreamedData.IStreamedDataInfo)
  parent: Remotion.Linq.Clauses.ResultOperators.SequenceTypePreservingResultOperatorBase
  isExternal: true
  name: GetOutputDataInfo(IStreamedDataInfo)
  nameWithType: SequenceTypePreservingResultOperatorBase.GetOutputDataInfo(IStreamedDataInfo)
  fullName: Remotion.Linq.Clauses.ResultOperators.SequenceTypePreservingResultOperatorBase.GetOutputDataInfo(Remotion.Linq.Clauses.StreamedData.IStreamedDataInfo)
  spec.csharp:
  - uid: Remotion.Linq.Clauses.ResultOperators.SequenceTypePreservingResultOperatorBase.GetOutputDataInfo(Remotion.Linq.Clauses.StreamedData.IStreamedDataInfo)
    name: GetOutputDataInfo
    nameWithType: SequenceTypePreservingResultOperatorBase.GetOutputDataInfo
    fullName: Remotion.Linq.Clauses.ResultOperators.SequenceTypePreservingResultOperatorBase.GetOutputDataInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.Clauses.StreamedData.IStreamedDataInfo
    name: IStreamedDataInfo
    nameWithType: IStreamedDataInfo
    fullName: Remotion.Linq.Clauses.StreamedData.IStreamedDataInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Clauses.ResultOperators.SequenceTypePreservingResultOperatorBase.GetOutputDataInfo(Remotion.Linq.Clauses.StreamedData.IStreamedDataInfo)
    name: GetOutputDataInfo
    nameWithType: SequenceTypePreservingResultOperatorBase.GetOutputDataInfo
    fullName: Remotion.Linq.Clauses.ResultOperators.SequenceTypePreservingResultOperatorBase.GetOutputDataInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.Clauses.StreamedData.IStreamedDataInfo
    name: IStreamedDataInfo
    nameWithType: IStreamedDataInfo
    fullName: Remotion.Linq.Clauses.StreamedData.IStreamedDataInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Clauses.ResultOperators.SequenceTypePreservingResultOperatorBase.GetOutputDataInfo(Remotion.Linq.Clauses.StreamedData.StreamedSequenceInfo)
  commentId: M:Remotion.Linq.Clauses.ResultOperators.SequenceTypePreservingResultOperatorBase.GetOutputDataInfo(Remotion.Linq.Clauses.StreamedData.StreamedSequenceInfo)
  parent: Remotion.Linq.Clauses.ResultOperators.SequenceTypePreservingResultOperatorBase
  isExternal: true
  name: GetOutputDataInfo(StreamedSequenceInfo)
  nameWithType: SequenceTypePreservingResultOperatorBase.GetOutputDataInfo(StreamedSequenceInfo)
  fullName: Remotion.Linq.Clauses.ResultOperators.SequenceTypePreservingResultOperatorBase.GetOutputDataInfo(Remotion.Linq.Clauses.StreamedData.StreamedSequenceInfo)
  spec.csharp:
  - uid: Remotion.Linq.Clauses.ResultOperators.SequenceTypePreservingResultOperatorBase.GetOutputDataInfo(Remotion.Linq.Clauses.StreamedData.StreamedSequenceInfo)
    name: GetOutputDataInfo
    nameWithType: SequenceTypePreservingResultOperatorBase.GetOutputDataInfo
    fullName: Remotion.Linq.Clauses.ResultOperators.SequenceTypePreservingResultOperatorBase.GetOutputDataInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.Clauses.StreamedData.StreamedSequenceInfo
    name: StreamedSequenceInfo
    nameWithType: StreamedSequenceInfo
    fullName: Remotion.Linq.Clauses.StreamedData.StreamedSequenceInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Clauses.ResultOperators.SequenceTypePreservingResultOperatorBase.GetOutputDataInfo(Remotion.Linq.Clauses.StreamedData.StreamedSequenceInfo)
    name: GetOutputDataInfo
    nameWithType: SequenceTypePreservingResultOperatorBase.GetOutputDataInfo
    fullName: Remotion.Linq.Clauses.ResultOperators.SequenceTypePreservingResultOperatorBase.GetOutputDataInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.Clauses.StreamedData.StreamedSequenceInfo
    name: StreamedSequenceInfo
    nameWithType: StreamedSequenceInfo
    fullName: Remotion.Linq.Clauses.StreamedData.StreamedSequenceInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Clauses.ResultOperators.SequenceFromSequenceResultOperatorBase.ExecuteInMemory(Remotion.Linq.Clauses.StreamedData.IStreamedData)
  commentId: M:Remotion.Linq.Clauses.ResultOperators.SequenceFromSequenceResultOperatorBase.ExecuteInMemory(Remotion.Linq.Clauses.StreamedData.IStreamedData)
  parent: Remotion.Linq.Clauses.ResultOperators.SequenceFromSequenceResultOperatorBase
  isExternal: true
  name: ExecuteInMemory(IStreamedData)
  nameWithType: SequenceFromSequenceResultOperatorBase.ExecuteInMemory(IStreamedData)
  fullName: Remotion.Linq.Clauses.ResultOperators.SequenceFromSequenceResultOperatorBase.ExecuteInMemory(Remotion.Linq.Clauses.StreamedData.IStreamedData)
  spec.csharp:
  - uid: Remotion.Linq.Clauses.ResultOperators.SequenceFromSequenceResultOperatorBase.ExecuteInMemory(Remotion.Linq.Clauses.StreamedData.IStreamedData)
    name: ExecuteInMemory
    nameWithType: SequenceFromSequenceResultOperatorBase.ExecuteInMemory
    fullName: Remotion.Linq.Clauses.ResultOperators.SequenceFromSequenceResultOperatorBase.ExecuteInMemory
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.Clauses.StreamedData.IStreamedData
    name: IStreamedData
    nameWithType: IStreamedData
    fullName: Remotion.Linq.Clauses.StreamedData.IStreamedData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Clauses.ResultOperators.SequenceFromSequenceResultOperatorBase.ExecuteInMemory(Remotion.Linq.Clauses.StreamedData.IStreamedData)
    name: ExecuteInMemory
    nameWithType: SequenceFromSequenceResultOperatorBase.ExecuteInMemory
    fullName: Remotion.Linq.Clauses.ResultOperators.SequenceFromSequenceResultOperatorBase.ExecuteInMemory
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.Clauses.StreamedData.IStreamedData
    name: IStreamedData
    nameWithType: IStreamedData
    fullName: Remotion.Linq.Clauses.StreamedData.IStreamedData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Clauses.ResultOperatorBase.Accept(Remotion.Linq.IQueryModelVisitor,Remotion.Linq.QueryModel,System.Int32)
  commentId: M:Remotion.Linq.Clauses.ResultOperatorBase.Accept(Remotion.Linq.IQueryModelVisitor,Remotion.Linq.QueryModel,System.Int32)
  parent: Remotion.Linq.Clauses.ResultOperatorBase
  isExternal: true
  name: Accept(IQueryModelVisitor, QueryModel, Int32)
  nameWithType: ResultOperatorBase.Accept(IQueryModelVisitor, QueryModel, Int32)
  fullName: Remotion.Linq.Clauses.ResultOperatorBase.Accept(Remotion.Linq.IQueryModelVisitor, Remotion.Linq.QueryModel, System.Int32)
  spec.csharp:
  - uid: Remotion.Linq.Clauses.ResultOperatorBase.Accept(Remotion.Linq.IQueryModelVisitor,Remotion.Linq.QueryModel,System.Int32)
    name: Accept
    nameWithType: ResultOperatorBase.Accept
    fullName: Remotion.Linq.Clauses.ResultOperatorBase.Accept
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.IQueryModelVisitor
    name: IQueryModelVisitor
    nameWithType: IQueryModelVisitor
    fullName: Remotion.Linq.IQueryModelVisitor
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Clauses.ResultOperatorBase.Accept(Remotion.Linq.IQueryModelVisitor,Remotion.Linq.QueryModel,System.Int32)
    name: Accept
    nameWithType: ResultOperatorBase.Accept
    fullName: Remotion.Linq.Clauses.ResultOperatorBase.Accept
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.IQueryModelVisitor
    name: IQueryModelVisitor
    nameWithType: IQueryModelVisitor
    fullName: Remotion.Linq.IQueryModelVisitor
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Clauses.ResultOperatorBase.InvokeExecuteMethod(System.Reflection.MethodInfo,System.Object)
  commentId: M:Remotion.Linq.Clauses.ResultOperatorBase.InvokeExecuteMethod(System.Reflection.MethodInfo,System.Object)
  parent: Remotion.Linq.Clauses.ResultOperatorBase
  isExternal: true
  name: InvokeExecuteMethod(MethodInfo, Object)
  nameWithType: ResultOperatorBase.InvokeExecuteMethod(MethodInfo, Object)
  fullName: Remotion.Linq.Clauses.ResultOperatorBase.InvokeExecuteMethod(System.Reflection.MethodInfo, System.Object)
  spec.csharp:
  - uid: Remotion.Linq.Clauses.ResultOperatorBase.InvokeExecuteMethod(System.Reflection.MethodInfo,System.Object)
    name: InvokeExecuteMethod
    nameWithType: ResultOperatorBase.InvokeExecuteMethod
    fullName: Remotion.Linq.Clauses.ResultOperatorBase.InvokeExecuteMethod
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    nameWithType: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Clauses.ResultOperatorBase.InvokeExecuteMethod(System.Reflection.MethodInfo,System.Object)
    name: InvokeExecuteMethod
    nameWithType: ResultOperatorBase.InvokeExecuteMethod
    fullName: Remotion.Linq.Clauses.ResultOperatorBase.InvokeExecuteMethod
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    nameWithType: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Clauses.ResultOperatorBase.GetConstantValueFromExpression``1(System.String,System.Linq.Expressions.Expression)
  commentId: M:Remotion.Linq.Clauses.ResultOperatorBase.GetConstantValueFromExpression``1(System.String,System.Linq.Expressions.Expression)
  parent: Remotion.Linq.Clauses.ResultOperatorBase
  isExternal: true
  name: GetConstantValueFromExpression<T>(String, Expression)
  nameWithType: ResultOperatorBase.GetConstantValueFromExpression<T>(String, Expression)
  fullName: Remotion.Linq.Clauses.ResultOperatorBase.GetConstantValueFromExpression<T>(System.String, System.Linq.Expressions.Expression)
  nameWithType.vb: ResultOperatorBase.GetConstantValueFromExpression(Of T)(String, Expression)
  fullname.vb: Remotion.Linq.Clauses.ResultOperatorBase.GetConstantValueFromExpression(Of T)(System.String, System.Linq.Expressions.Expression)
  name.vb: GetConstantValueFromExpression(Of T)(String, Expression)
  spec.csharp:
  - uid: Remotion.Linq.Clauses.ResultOperatorBase.GetConstantValueFromExpression``1(System.String,System.Linq.Expressions.Expression)
    name: GetConstantValueFromExpression<T>
    nameWithType: ResultOperatorBase.GetConstantValueFromExpression<T>
    fullName: Remotion.Linq.Clauses.ResultOperatorBase.GetConstantValueFromExpression<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Clauses.ResultOperatorBase.GetConstantValueFromExpression``1(System.String,System.Linq.Expressions.Expression)
    name: GetConstantValueFromExpression(Of T)
    nameWithType: ResultOperatorBase.GetConstantValueFromExpression(Of T)
    fullName: Remotion.Linq.Clauses.ResultOperatorBase.GetConstantValueFromExpression(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Clauses.ResultOperatorBase.CheckSequenceItemType(Remotion.Linq.Clauses.StreamedData.StreamedSequenceInfo,System.Type)
  commentId: M:Remotion.Linq.Clauses.ResultOperatorBase.CheckSequenceItemType(Remotion.Linq.Clauses.StreamedData.StreamedSequenceInfo,System.Type)
  parent: Remotion.Linq.Clauses.ResultOperatorBase
  isExternal: true
  name: CheckSequenceItemType(StreamedSequenceInfo, Type)
  nameWithType: ResultOperatorBase.CheckSequenceItemType(StreamedSequenceInfo, Type)
  fullName: Remotion.Linq.Clauses.ResultOperatorBase.CheckSequenceItemType(Remotion.Linq.Clauses.StreamedData.StreamedSequenceInfo, System.Type)
  spec.csharp:
  - uid: Remotion.Linq.Clauses.ResultOperatorBase.CheckSequenceItemType(Remotion.Linq.Clauses.StreamedData.StreamedSequenceInfo,System.Type)
    name: CheckSequenceItemType
    nameWithType: ResultOperatorBase.CheckSequenceItemType
    fullName: Remotion.Linq.Clauses.ResultOperatorBase.CheckSequenceItemType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.Clauses.StreamedData.StreamedSequenceInfo
    name: StreamedSequenceInfo
    nameWithType: StreamedSequenceInfo
    fullName: Remotion.Linq.Clauses.StreamedData.StreamedSequenceInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Clauses.ResultOperatorBase.CheckSequenceItemType(Remotion.Linq.Clauses.StreamedData.StreamedSequenceInfo,System.Type)
    name: CheckSequenceItemType
    nameWithType: ResultOperatorBase.CheckSequenceItemType
    fullName: Remotion.Linq.Clauses.ResultOperatorBase.CheckSequenceItemType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.Clauses.StreamedData.StreamedSequenceInfo
    name: StreamedSequenceInfo
    nameWithType: StreamedSequenceInfo
    fullName: Remotion.Linq.Clauses.StreamedData.StreamedSequenceInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Remotion.Linq.Clauses
  commentId: N:Remotion.Linq.Clauses
  isExternal: false
  name: Remotion.Linq.Clauses
  nameWithType: Remotion.Linq.Clauses
  fullName: Remotion.Linq.Clauses
- uid: Remotion.Linq.Clauses.ResultOperators
  commentId: N:Remotion.Linq.Clauses.ResultOperators
  isExternal: false
  name: Remotion.Linq.Clauses.ResultOperators
  nameWithType: Remotion.Linq.Clauses.ResultOperators
  fullName: Remotion.Linq.Clauses.ResultOperators
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators
  commentId: N:Microsoft.EntityFrameworkCore.Query.ResultOperators
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query.ResultOperators
  nameWithType: Microsoft.EntityFrameworkCore.Query.ResultOperators
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation.QuerySource
  commentId: P:Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation.QuerySource
  parent: Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation
  isExternal: false
  name: QuerySource
  nameWithType: IQueryAnnotation.QuerySource
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation.QuerySource
- uid: Remotion.Linq.Clauses.IQuerySource
  commentId: T:Remotion.Linq.Clauses.IQuerySource
  parent: Remotion.Linq.Clauses
  isExternal: true
  name: IQuerySource
  nameWithType: IQuerySource
  fullName: Remotion.Linq.Clauses.IQuerySource
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation.QueryModel
  commentId: P:Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation.QueryModel
  parent: Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation
  isExternal: false
  name: QueryModel
  nameWithType: IQueryAnnotation.QueryModel
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation.QueryModel
- uid: Remotion.Linq.QueryModel
  commentId: T:Remotion.Linq.QueryModel
  parent: Remotion.Linq
  isExternal: true
  name: QueryModel
  nameWithType: QueryModel
  fullName: Remotion.Linq.QueryModel
- uid: Remotion.Linq
  commentId: N:Remotion.Linq
  isExternal: false
  name: Remotion.Linq
  nameWithType: Remotion.Linq
  fullName: Remotion.Linq
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Remotion.Linq.Clauses.ResultOperatorBase.Clone(Remotion.Linq.Clauses.CloneContext)
  commentId: M:Remotion.Linq.Clauses.ResultOperatorBase.Clone(Remotion.Linq.Clauses.CloneContext)
  parent: Remotion.Linq.Clauses.ResultOperatorBase
  isExternal: true
  name: Clone(CloneContext)
  nameWithType: ResultOperatorBase.Clone(CloneContext)
  fullName: Remotion.Linq.Clauses.ResultOperatorBase.Clone(Remotion.Linq.Clauses.CloneContext)
  spec.csharp:
  - uid: Remotion.Linq.Clauses.ResultOperatorBase.Clone(Remotion.Linq.Clauses.CloneContext)
    name: Clone
    nameWithType: ResultOperatorBase.Clone
    fullName: Remotion.Linq.Clauses.ResultOperatorBase.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.Clauses.CloneContext
    name: CloneContext
    nameWithType: CloneContext
    fullName: Remotion.Linq.Clauses.CloneContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Clauses.ResultOperatorBase.Clone(Remotion.Linq.Clauses.CloneContext)
    name: Clone
    nameWithType: ResultOperatorBase.Clone
    fullName: Remotion.Linq.Clauses.ResultOperatorBase.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.Clauses.CloneContext
    name: CloneContext
    nameWithType: CloneContext
    fullName: Remotion.Linq.Clauses.CloneContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Clauses.CloneContext
  commentId: T:Remotion.Linq.Clauses.CloneContext
  parent: Remotion.Linq.Clauses
  isExternal: true
  name: CloneContext
  nameWithType: CloneContext
  fullName: Remotion.Linq.Clauses.CloneContext
- uid: Remotion.Linq.Clauses.ResultOperatorBase.TransformExpressions(System.Func{System.Linq.Expressions.Expression,System.Linq.Expressions.Expression})
  commentId: M:Remotion.Linq.Clauses.ResultOperatorBase.TransformExpressions(System.Func{System.Linq.Expressions.Expression,System.Linq.Expressions.Expression})
  parent: Remotion.Linq.Clauses.ResultOperatorBase
  isExternal: true
  name: TransformExpressions(Func<Expression, Expression>)
  nameWithType: ResultOperatorBase.TransformExpressions(Func<Expression, Expression>)
  fullName: Remotion.Linq.Clauses.ResultOperatorBase.TransformExpressions(System.Func<System.Linq.Expressions.Expression, System.Linq.Expressions.Expression>)
  nameWithType.vb: ResultOperatorBase.TransformExpressions(Func(Of Expression, Expression))
  fullname.vb: Remotion.Linq.Clauses.ResultOperatorBase.TransformExpressions(System.Func(Of System.Linq.Expressions.Expression, System.Linq.Expressions.Expression))
  name.vb: TransformExpressions(Func(Of Expression, Expression))
  spec.csharp:
  - uid: Remotion.Linq.Clauses.ResultOperatorBase.TransformExpressions(System.Func{System.Linq.Expressions.Expression,System.Linq.Expressions.Expression})
    name: TransformExpressions
    nameWithType: ResultOperatorBase.TransformExpressions
    fullName: Remotion.Linq.Clauses.ResultOperatorBase.TransformExpressions
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Clauses.ResultOperatorBase.TransformExpressions(System.Func{System.Linq.Expressions.Expression,System.Linq.Expressions.Expression})
    name: TransformExpressions
    nameWithType: ResultOperatorBase.TransformExpressions
    fullName: Remotion.Linq.Clauses.ResultOperatorBase.TransformExpressions
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{System.Linq.Expressions.Expression,System.Linq.Expressions.Expression}
  commentId: T:System.Func{System.Linq.Expressions.Expression,System.Linq.Expressions.Expression}
  parent: System
  definition: System.Func`2
  name: Func<Expression, Expression>
  nameWithType: Func<Expression, Expression>
  fullName: System.Func<System.Linq.Expressions.Expression, System.Linq.Expressions.Expression>
  nameWithType.vb: Func(Of Expression, Expression)
  fullname.vb: System.Func(Of System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  name.vb: Func(Of Expression, Expression)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullname.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Clauses.ResultOperators.SequenceFromSequenceResultOperatorBase.ExecuteInMemory``1(Remotion.Linq.Clauses.StreamedData.StreamedSequence)
  commentId: M:Remotion.Linq.Clauses.ResultOperators.SequenceFromSequenceResultOperatorBase.ExecuteInMemory``1(Remotion.Linq.Clauses.StreamedData.StreamedSequence)
  parent: Remotion.Linq.Clauses.ResultOperators.SequenceFromSequenceResultOperatorBase
  isExternal: true
  name: ExecuteInMemory<T>(StreamedSequence)
  nameWithType: SequenceFromSequenceResultOperatorBase.ExecuteInMemory<T>(StreamedSequence)
  fullName: Remotion.Linq.Clauses.ResultOperators.SequenceFromSequenceResultOperatorBase.ExecuteInMemory<T>(Remotion.Linq.Clauses.StreamedData.StreamedSequence)
  nameWithType.vb: SequenceFromSequenceResultOperatorBase.ExecuteInMemory(Of T)(StreamedSequence)
  fullname.vb: Remotion.Linq.Clauses.ResultOperators.SequenceFromSequenceResultOperatorBase.ExecuteInMemory(Of T)(Remotion.Linq.Clauses.StreamedData.StreamedSequence)
  name.vb: ExecuteInMemory(Of T)(StreamedSequence)
  spec.csharp:
  - uid: Remotion.Linq.Clauses.ResultOperators.SequenceFromSequenceResultOperatorBase.ExecuteInMemory``1(Remotion.Linq.Clauses.StreamedData.StreamedSequence)
    name: ExecuteInMemory<T>
    nameWithType: SequenceFromSequenceResultOperatorBase.ExecuteInMemory<T>
    fullName: Remotion.Linq.Clauses.ResultOperators.SequenceFromSequenceResultOperatorBase.ExecuteInMemory<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.Clauses.StreamedData.StreamedSequence
    name: StreamedSequence
    nameWithType: StreamedSequence
    fullName: Remotion.Linq.Clauses.StreamedData.StreamedSequence
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Clauses.ResultOperators.SequenceFromSequenceResultOperatorBase.ExecuteInMemory``1(Remotion.Linq.Clauses.StreamedData.StreamedSequence)
    name: ExecuteInMemory(Of T)
    nameWithType: SequenceFromSequenceResultOperatorBase.ExecuteInMemory(Of T)
    fullName: Remotion.Linq.Clauses.ResultOperators.SequenceFromSequenceResultOperatorBase.ExecuteInMemory(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.Clauses.StreamedData.StreamedSequence
    name: StreamedSequence
    nameWithType: StreamedSequence
    fullName: Remotion.Linq.Clauses.StreamedData.StreamedSequence
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Clauses.StreamedData.StreamedSequence
  commentId: T:Remotion.Linq.Clauses.StreamedData.StreamedSequence
  parent: Remotion.Linq.Clauses.StreamedData
  isExternal: true
  name: StreamedSequence
  nameWithType: StreamedSequence
  fullName: Remotion.Linq.Clauses.StreamedData.StreamedSequence
- uid: Remotion.Linq.Clauses.StreamedData
  commentId: N:Remotion.Linq.Clauses.StreamedData
  isExternal: false
  name: Remotion.Linq.Clauses.StreamedData
  nameWithType: Remotion.Linq.Clauses.StreamedData
  fullName: Remotion.Linq.Clauses.StreamedData
