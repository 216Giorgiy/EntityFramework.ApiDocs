### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator
  commentId: T:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator
  id: TrackingResultOperator
  parent: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
  children:
  - Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.#ctor(System.Boolean)
  - Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.Clone(CloneContext)
  - Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.ExecuteInMemory``1(StreamedSequence)
  - Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.IsTracking
  - Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.QueryModel
  - Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.QuerySource
  - Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.ToString
  - Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.TransformExpressions(System.Func{System.Linq.Expressions.Expression,System.Linq.Expressions.Expression})
  langs:
  - csharp
  - vb
  name: TrackingResultOperator
  nameWithType: TrackingResultOperator
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/TrackingResultOperator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: TrackingResultOperator
    path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/TrackingResultOperator.cs
    startLine: 17
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public class TrackingResultOperator : SequenceTypePreservingResultOperatorBase, IQueryAnnotation'
    content.vb: >-
      Public Class TrackingResultOperator
          Inherits SequenceTypePreservingResultOperatorBase
          Implements IQueryAnnotation
  inheritance:
  - System.Object
  implements:
  - Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.#ctor(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator
  langs:
  - csharp
  - vb
  name: TrackingResultOperator(Boolean)
  nameWithType: TrackingResultOperator.TrackingResultOperator(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.TrackingResultOperator(System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/TrackingResultOperator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/TrackingResultOperator.cs
    startLine: 23
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public TrackingResultOperator(bool tracking)
    content.vb: Public Sub New(tracking As Boolean)
    parameters:
    - id: tracking
      type: System.Boolean
  overload: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.QuerySource
  commentId: P:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.QuerySource
  id: QuerySource
  parent: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator
  langs:
  - csharp
  - vb
  name: QuerySource
  nameWithType: TrackingResultOperator.QuerySource
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.QuerySource
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/TrackingResultOperator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: QuerySource
    path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/TrackingResultOperator.cs
    startLine: 32
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual IQuerySource QuerySource { get; set; }
    content.vb: Public Overridable Property QuerySource As IQuerySource
    parameters: []
    return:
      type: IQuerySource
  overload: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.QuerySource*
  implements:
  - Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation.QuerySource
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.QueryModel
  commentId: P:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.QueryModel
  id: QueryModel
  parent: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator
  langs:
  - csharp
  - vb
  name: QueryModel
  nameWithType: TrackingResultOperator.QueryModel
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.QueryModel
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/TrackingResultOperator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: QueryModel
    path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/TrackingResultOperator.cs
    startLine: 38
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual QueryModel QueryModel { get; set; }
    content.vb: Public Overridable Property QueryModel As QueryModel
    parameters: []
    return:
      type: QueryModel
  overload: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.QueryModel*
  implements:
  - Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation.QueryModel
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.IsTracking
  commentId: P:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.IsTracking
  id: IsTracking
  parent: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator
  langs:
  - csharp
  - vb
  name: IsTracking
  nameWithType: TrackingResultOperator.IsTracking
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.IsTracking
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/TrackingResultOperator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: IsTracking
    path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/TrackingResultOperator.cs
    startLine: 44
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual bool IsTracking { get; }
    content.vb: Public Overridable ReadOnly Property IsTracking As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.IsTracking*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.ToString
  commentId: M:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.ToString
  id: ToString
  parent: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: TrackingResultOperator.ToString()
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.ToString()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/TrackingResultOperator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ToString
    path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/TrackingResultOperator.cs
    startLine: 50
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.Clone(CloneContext)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.Clone(CloneContext)
  id: Clone(CloneContext)
  parent: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator
  langs:
  - csharp
  - vb
  name: Clone(CloneContext)
  nameWithType: TrackingResultOperator.Clone(CloneContext)
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.Clone(CloneContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/TrackingResultOperator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Clone
    path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/TrackingResultOperator.cs
    startLine: 56
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public override ResultOperatorBase Clone(CloneContext cloneContext)
    content.vb: Public Overrides Function Clone(cloneContext As CloneContext) As ResultOperatorBase
    parameters:
    - id: cloneContext
      type: CloneContext
    return:
      type: ResultOperatorBase
  overload: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.Clone*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.TransformExpressions(System.Func{System.Linq.Expressions.Expression,System.Linq.Expressions.Expression})
  commentId: M:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.TransformExpressions(System.Func{System.Linq.Expressions.Expression,System.Linq.Expressions.Expression})
  id: TransformExpressions(System.Func{System.Linq.Expressions.Expression,System.Linq.Expressions.Expression})
  parent: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator
  langs:
  - csharp
  - vb
  name: TransformExpressions(Func<Expression, Expression>)
  nameWithType: TrackingResultOperator.TransformExpressions(Func<Expression, Expression>)
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.TransformExpressions(System.Func<System.Linq.Expressions.Expression, System.Linq.Expressions.Expression>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/TrackingResultOperator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: TransformExpressions
    path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/TrackingResultOperator.cs
    startLine: 63
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public override void TransformExpressions(Func<Expression, Expression> transformation)
    content.vb: Public Overrides Sub TransformExpressions(transformation As Func(Of Expression, Expression))
    parameters:
    - id: transformation
      type: System.Func{System.Linq.Expressions.Expression,System.Linq.Expressions.Expression}
  overload: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.TransformExpressions*
  nameWithType.vb: TrackingResultOperator.TransformExpressions(Func(Of Expression, Expression))
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.TransformExpressions(System.Func(Of System.Linq.Expressions.Expression, System.Linq.Expressions.Expression))
  name.vb: TransformExpressions(Func(Of Expression, Expression))
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.ExecuteInMemory``1(StreamedSequence)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.ExecuteInMemory``1(StreamedSequence)
  id: ExecuteInMemory``1(StreamedSequence)
  parent: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator
  langs:
  - csharp
  - vb
  name: ExecuteInMemory<T>(StreamedSequence)
  nameWithType: TrackingResultOperator.ExecuteInMemory<T>(StreamedSequence)
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.ExecuteInMemory<T>(StreamedSequence)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/TrackingResultOperator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ExecuteInMemory
    path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/TrackingResultOperator.cs
    startLine: 71
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public override StreamedSequence ExecuteInMemory<T>(StreamedSequence input)
    content.vb: Public Overrides Function ExecuteInMemory(Of T)(input As StreamedSequence) As StreamedSequence
    parameters:
    - id: input
      type: StreamedSequence
    typeParameters:
    - id: T
    return:
      type: StreamedSequence
  overload: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.ExecuteInMemory*
  nameWithType.vb: TrackingResultOperator.ExecuteInMemory(Of T)(StreamedSequence)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.ExecuteInMemory(Of T)(StreamedSequence)
  name.vb: ExecuteInMemory(Of T)(StreamedSequence)
references:
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation
  commentId: T:Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation
  parent: Microsoft.EntityFrameworkCore.Query.ResultOperators
  isExternal: false
  name: IQueryAnnotation
  nameWithType: IQueryAnnotation
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators
  commentId: N:Microsoft.EntityFrameworkCore.Query.ResultOperators
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query.ResultOperators
  nameWithType: Microsoft.EntityFrameworkCore.Query.ResultOperators
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.#ctor*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.#ctor
  isExternal: false
  name: TrackingResultOperator
  nameWithType: TrackingResultOperator.TrackingResultOperator
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.TrackingResultOperator
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.QuerySource*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.QuerySource
  isExternal: false
  name: QuerySource
  nameWithType: TrackingResultOperator.QuerySource
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.QuerySource
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation.QuerySource
  commentId: P:Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation.QuerySource
  parent: Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation
  isExternal: false
  name: QuerySource
  nameWithType: IQueryAnnotation.QuerySource
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation.QuerySource
- uid: IQuerySource
  isExternal: true
  name: IQuerySource
  nameWithType: IQuerySource
  fullName: IQuerySource
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.QueryModel*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.QueryModel
  isExternal: false
  name: QueryModel
  nameWithType: TrackingResultOperator.QueryModel
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.QueryModel
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation.QueryModel
  commentId: P:Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation.QueryModel
  parent: Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation
  isExternal: false
  name: QueryModel
  nameWithType: IQueryAnnotation.QueryModel
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation.QueryModel
- uid: QueryModel
  isExternal: true
  name: QueryModel
  nameWithType: QueryModel
  fullName: QueryModel
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.IsTracking*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.IsTracking
  isExternal: false
  name: IsTracking
  nameWithType: TrackingResultOperator.IsTracking
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.IsTracking
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.ToString*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.ToString
  isExternal: false
  name: ToString
  nameWithType: TrackingResultOperator.ToString
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.Clone*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.Clone
  isExternal: false
  name: Clone
  nameWithType: TrackingResultOperator.Clone
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.Clone
- uid: CloneContext
  isExternal: true
  name: CloneContext
  nameWithType: CloneContext
  fullName: CloneContext
- uid: ResultOperatorBase
  isExternal: true
  name: ResultOperatorBase
  nameWithType: ResultOperatorBase
  fullName: ResultOperatorBase
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.TransformExpressions*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.TransformExpressions
  isExternal: false
  name: TransformExpressions
  nameWithType: TrackingResultOperator.TransformExpressions
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.TransformExpressions
- uid: System.Func{System.Linq.Expressions.Expression,System.Linq.Expressions.Expression}
  commentId: T:System.Func{System.Linq.Expressions.Expression,System.Linq.Expressions.Expression}
  parent: System
  definition: System.Func`2
  name: Func<Expression, Expression>
  nameWithType: Func<Expression, Expression>
  fullName: System.Func<System.Linq.Expressions.Expression, System.Linq.Expressions.Expression>
  nameWithType.vb: Func(Of Expression, Expression)
  fullname.vb: System.Func(Of System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  name.vb: Func(Of Expression, Expression)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullname.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.ExecuteInMemory*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.ExecuteInMemory
  isExternal: false
  name: ExecuteInMemory<T>
  nameWithType: TrackingResultOperator.ExecuteInMemory<T>
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.ExecuteInMemory<T>
  nameWithType.vb: TrackingResultOperator.ExecuteInMemory(Of T)
  fullname.vb: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.ExecuteInMemory(Of T)
  name.vb: ExecuteInMemory(Of T)
- uid: StreamedSequence
  isExternal: true
  name: StreamedSequence
  nameWithType: StreamedSequence
  fullName: StreamedSequence
