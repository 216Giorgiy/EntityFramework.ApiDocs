### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator
  commentId: T:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator
  id: TrackingResultOperator
  parent: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
  children:
  - Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.#ctor(System.Boolean)
  - Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.Clone(CloneContext)
  - Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.ExecuteInMemory``1(StreamedSequence)
  - Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.IsTracking
  - Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.QueryModel
  - Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.QuerySource
  - Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.ToString
  - Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.TransformExpressions(System.Func{System.Linq.Expressions.Expression,System.Linq.Expressions.Expression})
  langs:
  - csharp
  - vb
  name: TrackingResultOperator
  nameWithType: TrackingResultOperator
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/TrackingResultOperator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: TrackingResultOperator
    path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/TrackingResultOperator.cs
    startLine: 17
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public class TrackingResultOperator : SequenceTypePreservingResultOperatorBase, IQueryAnnotation'
    content.vb: >-
      Public Class TrackingResultOperator
          Inherits SequenceTypePreservingResultOperatorBase
          Implements IQueryAnnotation
  inheritance:
  - System.Object
  implements:
  - Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.#ctor(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator
  langs:
  - csharp
  - vb
  name: TrackingResultOperator(Boolean)
  nameWithType: TrackingResultOperator.TrackingResultOperator(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.TrackingResultOperator(System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/TrackingResultOperator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/TrackingResultOperator.cs
    startLine: 23
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public TrackingResultOperator(bool tracking)
    content.vb: Public Sub New(tracking As Boolean)
    parameters:
    - id: tracking
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.QuerySource
  commentId: P:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.QuerySource
  id: QuerySource
  parent: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator
  langs:
  - csharp
  - vb
  name: QuerySource
  nameWithType: TrackingResultOperator.QuerySource
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.QuerySource
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/TrackingResultOperator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: QuerySource
    path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/TrackingResultOperator.cs
    startLine: 32
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual IQuerySource QuerySource { get; set; }
    content.vb: Public Overridable Property QuerySource As IQuerySource
    parameters: []
    return:
      type: IQuerySource
  implements:
  - Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation.QuerySource
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.QueryModel
  commentId: P:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.QueryModel
  id: QueryModel
  parent: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator
  langs:
  - csharp
  - vb
  name: QueryModel
  nameWithType: TrackingResultOperator.QueryModel
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.QueryModel
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/TrackingResultOperator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: QueryModel
    path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/TrackingResultOperator.cs
    startLine: 38
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual QueryModel QueryModel { get; set; }
    content.vb: Public Overridable Property QueryModel As QueryModel
    parameters: []
    return:
      type: QueryModel
  implements:
  - Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation.QueryModel
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.IsTracking
  commentId: P:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.IsTracking
  id: IsTracking
  parent: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator
  langs:
  - csharp
  - vb
  name: IsTracking
  nameWithType: TrackingResultOperator.IsTracking
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.IsTracking
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/TrackingResultOperator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: IsTracking
    path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/TrackingResultOperator.cs
    startLine: 44
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual bool IsTracking { get; }
    content.vb: Public Overridable ReadOnly Property IsTracking As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.ToString
  commentId: M:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.ToString
  id: ToString
  parent: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: TrackingResultOperator.ToString()
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.ToString()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/TrackingResultOperator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ToString
    path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/TrackingResultOperator.cs
    startLine: 50
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.Clone(CloneContext)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.Clone(CloneContext)
  id: Clone(CloneContext)
  parent: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator
  langs:
  - csharp
  - vb
  name: Clone(CloneContext)
  nameWithType: TrackingResultOperator.Clone(CloneContext)
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.Clone(CloneContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/TrackingResultOperator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Clone
    path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/TrackingResultOperator.cs
    startLine: 56
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public override ResultOperatorBase Clone(CloneContext cloneContext)
    content.vb: Public Overrides Function Clone(cloneContext As CloneContext) As ResultOperatorBase
    parameters:
    - id: cloneContext
      type: CloneContext
    return:
      type: ResultOperatorBase
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.TransformExpressions(System.Func{System.Linq.Expressions.Expression,System.Linq.Expressions.Expression})
  commentId: M:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.TransformExpressions(System.Func{System.Linq.Expressions.Expression,System.Linq.Expressions.Expression})
  id: TransformExpressions(System.Func{System.Linq.Expressions.Expression,System.Linq.Expressions.Expression})
  parent: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator
  langs:
  - csharp
  - vb
  name: TransformExpressions(Func<Expression, Expression>)
  nameWithType: TrackingResultOperator.TransformExpressions(Func<Expression, Expression>)
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.TransformExpressions(System.Func<System.Linq.Expressions.Expression, System.Linq.Expressions.Expression>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/TrackingResultOperator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: TransformExpressions
    path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/TrackingResultOperator.cs
    startLine: 63
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public override void TransformExpressions(Func<Expression, Expression> transformation)
    content.vb: Public Overrides Sub TransformExpressions(transformation As Func(Of Expression, Expression))
    parameters:
    - id: transformation
      type: System.Func{System.Linq.Expressions.Expression,System.Linq.Expressions.Expression}
  nameWithType.vb: TrackingResultOperator.TransformExpressions(Func(Of Expression, Expression))
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.TransformExpressions(System.Func(Of System.Linq.Expressions.Expression, System.Linq.Expressions.Expression))
  name.vb: TransformExpressions(Func(Of Expression, Expression))
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.ExecuteInMemory``1(StreamedSequence)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.ExecuteInMemory``1(StreamedSequence)
  id: ExecuteInMemory``1(StreamedSequence)
  parent: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator
  langs:
  - csharp
  - vb
  name: ExecuteInMemory<T>(StreamedSequence)
  nameWithType: TrackingResultOperator.ExecuteInMemory<T>(StreamedSequence)
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.ExecuteInMemory<T>(StreamedSequence)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/TrackingResultOperator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ExecuteInMemory
    path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/TrackingResultOperator.cs
    startLine: 71
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public override StreamedSequence ExecuteInMemory<T>(StreamedSequence input)
    content.vb: Public Overrides Function ExecuteInMemory(Of T)(input As StreamedSequence) As StreamedSequence
    parameters:
    - id: input
      type: StreamedSequence
    typeParameters:
    - id: T
    return:
      type: StreamedSequence
  nameWithType.vb: TrackingResultOperator.ExecuteInMemory(Of T)(StreamedSequence)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.ExecuteInMemory(Of T)(StreamedSequence)
  name.vb: ExecuteInMemory(Of T)(StreamedSequence)
references:
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation
  commentId: T:Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation
  parent: Microsoft.EntityFrameworkCore.Query.ResultOperators
  isExternal: false
  name: IQueryAnnotation
  nameWithType: IQueryAnnotation
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<TrackingResultOperator, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TrackingResultOperator, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TrackingResultOperator, TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator, TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of TrackingResultOperator, TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<TrackingResultOperator, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TrackingResultOperator, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of TrackingResultOperator, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TrackingResultOperator, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators
  commentId: N:Microsoft.EntityFrameworkCore.Query.ResultOperators
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query.ResultOperators
  nameWithType: Microsoft.EntityFrameworkCore.Query.ResultOperators
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation.QuerySource
  commentId: P:Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation.QuerySource
  parent: Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation
  isExternal: false
  name: QuerySource
  nameWithType: IQueryAnnotation.QuerySource
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation.QuerySource
- uid: IQuerySource
  isExternal: true
  name: IQuerySource
  nameWithType: IQuerySource
  fullName: IQuerySource
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation.QueryModel
  commentId: P:Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation.QueryModel
  parent: Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation
  isExternal: false
  name: QueryModel
  nameWithType: IQueryAnnotation.QueryModel
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation.QueryModel
- uid: QueryModel
  isExternal: true
  name: QueryModel
  nameWithType: QueryModel
  fullName: QueryModel
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: CloneContext
  isExternal: true
  name: CloneContext
  nameWithType: CloneContext
  fullName: CloneContext
- uid: ResultOperatorBase
  isExternal: true
  name: ResultOperatorBase
  nameWithType: ResultOperatorBase
  fullName: ResultOperatorBase
- uid: System.Func{System.Linq.Expressions.Expression,System.Linq.Expressions.Expression}
  commentId: T:System.Func{System.Linq.Expressions.Expression,System.Linq.Expressions.Expression}
  parent: System
  definition: System.Func`2
  name: Func<Expression, Expression>
  nameWithType: Func<Expression, Expression>
  fullName: System.Func<System.Linq.Expressions.Expression, System.Linq.Expressions.Expression>
  nameWithType.vb: Func(Of Expression, Expression)
  fullname.vb: System.Func(Of System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  name.vb: Func(Of Expression, Expression)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullname.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: StreamedSequence
  isExternal: true
  name: StreamedSequence
  nameWithType: StreamedSequence
  fullName: StreamedSequence
