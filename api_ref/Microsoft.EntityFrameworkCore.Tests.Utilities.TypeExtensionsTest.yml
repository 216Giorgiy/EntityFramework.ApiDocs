### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest
  commentId: T:Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest
  id: TypeExtensionsTest
  parent: Microsoft.EntityFrameworkCore.Tests.Utilities
  children:
  - Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.Can_get_default_value_for_type
  - Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.Element_type_should_return_input_type_when_not_sequence_type
  - Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.Get_any_property_returns_any_property
  - Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.GetBaseTypes_return_all_base_types
  - Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.GetBaseTypes_return_empty_if_no_base_type_exists
  - Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.GetConstructibleTypes_works
  - Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.GetDeclaredConstructor_finds_ctor_args
  - Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.GetDeclaredConstructor_finds_ctor_no_args
  - Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.GetDeclaredConstructor_returns_null_when_no_match
  - Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.GetSequenceType_finds_element_type
  - Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.IsInteger_returns_true_only_for_integer_types
  - Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.IsNullableType_when_value_or_nullable_type
  - Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TryGetElementType_returns_element_type_for_given_class
  - Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TryGetElementType_returns_element_type_for_given_interface
  - Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TryGetElementType_returns_null_if_type_doesnt_implement_class
  - Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TryGetElementType_returns_null_if_type_doesnt_implement_interface
  - Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TryGetElementType_returns_null_if_type_is_generic_type_definition
  - Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TryGetElementType_returns_null_when_ICollection_implemented_more_than_once
  langs:
  - csharp
  - vb
  name: TypeExtensionsTest
  nameWithType: TypeExtensionsTest
  fullName: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest
  type: Class
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/TypeExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: TypeExtensionsTest
    path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/TypeExtensionsTest.cs
    startLine: 14
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Utilities
  syntax:
    content: public class TypeExtensionsTest
    content.vb: Public Class TypeExtensionsTest
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.GetSequenceType_finds_element_type
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.GetSequenceType_finds_element_type
  id: GetSequenceType_finds_element_type
  parent: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest
  langs:
  - csharp
  - vb
  name: GetSequenceType_finds_element_type()
  nameWithType: TypeExtensionsTest.GetSequenceType_finds_element_type()
  fullName: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.GetSequenceType_finds_element_type()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/TypeExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetSequenceType_finds_element_type
    path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/TypeExtensionsTest.cs
    startLine: 16
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Utilities
  syntax:
    content: >-
      [Fact]

      public void GetSequenceType_finds_element_type()
    content.vb: >-
      <Fact>

      Public Sub GetSequenceType_finds_element_type
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.IsInteger_returns_true_only_for_integer_types
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.IsInteger_returns_true_only_for_integer_types
  id: IsInteger_returns_true_only_for_integer_types
  parent: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest
  langs:
  - csharp
  - vb
  name: IsInteger_returns_true_only_for_integer_types()
  nameWithType: TypeExtensionsTest.IsInteger_returns_true_only_for_integer_types()
  fullName: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.IsInteger_returns_true_only_for_integer_types()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/TypeExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: IsInteger_returns_true_only_for_integer_types
    path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/TypeExtensionsTest.cs
    startLine: 25
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Utilities
  syntax:
    content: >-
      [Fact]

      public void IsInteger_returns_true_only_for_integer_types()
    content.vb: >-
      <Fact>

      Public Sub IsInteger_returns_true_only_for_integer_types
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.GetDeclaredConstructor_finds_ctor_no_args
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.GetDeclaredConstructor_finds_ctor_no_args
  id: GetDeclaredConstructor_finds_ctor_no_args
  parent: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest
  langs:
  - csharp
  - vb
  name: GetDeclaredConstructor_finds_ctor_no_args()
  nameWithType: TypeExtensionsTest.GetDeclaredConstructor_finds_ctor_no_args()
  fullName: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.GetDeclaredConstructor_finds_ctor_no_args()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/TypeExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetDeclaredConstructor_finds_ctor_no_args
    path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/TypeExtensionsTest.cs
    startLine: 63
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Utilities
  syntax:
    content: >-
      [Fact]

      public void GetDeclaredConstructor_finds_ctor_no_args()
    content.vb: >-
      <Fact>

      Public Sub GetDeclaredConstructor_finds_ctor_no_args
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.GetDeclaredConstructor_returns_null_when_no_match
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.GetDeclaredConstructor_returns_null_when_no_match
  id: GetDeclaredConstructor_returns_null_when_no_match
  parent: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest
  langs:
  - csharp
  - vb
  name: GetDeclaredConstructor_returns_null_when_no_match()
  nameWithType: TypeExtensionsTest.GetDeclaredConstructor_returns_null_when_no_match()
  fullName: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.GetDeclaredConstructor_returns_null_when_no_match()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/TypeExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetDeclaredConstructor_returns_null_when_no_match
    path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/TypeExtensionsTest.cs
    startLine: 72
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Utilities
  syntax:
    content: >-
      [Fact]

      public void GetDeclaredConstructor_returns_null_when_no_match()
    content.vb: >-
      <Fact>

      Public Sub GetDeclaredConstructor_returns_null_when_no_match
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.GetDeclaredConstructor_finds_ctor_args
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.GetDeclaredConstructor_finds_ctor_args
  id: GetDeclaredConstructor_finds_ctor_args
  parent: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest
  langs:
  - csharp
  - vb
  name: GetDeclaredConstructor_finds_ctor_args()
  nameWithType: TypeExtensionsTest.GetDeclaredConstructor_finds_ctor_args()
  fullName: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.GetDeclaredConstructor_finds_ctor_args()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/TypeExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetDeclaredConstructor_finds_ctor_args
    path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/TypeExtensionsTest.cs
    startLine: 78
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Utilities
  syntax:
    content: >-
      [Fact]

      public void GetDeclaredConstructor_finds_ctor_args()
    content.vb: >-
      <Fact>

      Public Sub GetDeclaredConstructor_finds_ctor_args
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.IsNullableType_when_value_or_nullable_type
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.IsNullableType_when_value_or_nullable_type
  id: IsNullableType_when_value_or_nullable_type
  parent: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest
  langs:
  - csharp
  - vb
  name: IsNullableType_when_value_or_nullable_type()
  nameWithType: TypeExtensionsTest.IsNullableType_when_value_or_nullable_type()
  fullName: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.IsNullableType_when_value_or_nullable_type()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/TypeExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: IsNullableType_when_value_or_nullable_type
    path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/TypeExtensionsTest.cs
    startLine: 87
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Utilities
  syntax:
    content: >-
      [Fact]

      public void IsNullableType_when_value_or_nullable_type()
    content.vb: >-
      <Fact>

      Public Sub IsNullableType_when_value_or_nullable_type
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.Element_type_should_return_input_type_when_not_sequence_type
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.Element_type_should_return_input_type_when_not_sequence_type
  id: Element_type_should_return_input_type_when_not_sequence_type
  parent: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest
  langs:
  - csharp
  - vb
  name: Element_type_should_return_input_type_when_not_sequence_type()
  nameWithType: TypeExtensionsTest.Element_type_should_return_input_type_when_not_sequence_type()
  fullName: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.Element_type_should_return_input_type_when_not_sequence_type()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/TypeExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Element_type_should_return_input_type_when_not_sequence_type
    path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/TypeExtensionsTest.cs
    startLine: 96
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Utilities
  syntax:
    content: >-
      [Fact]

      public void Element_type_should_return_input_type_when_not_sequence_type()
    content.vb: >-
      <Fact>

      Public Sub Element_type_should_return_input_type_when_not_sequence_type
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.Get_any_property_returns_any_property
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.Get_any_property_returns_any_property
  id: Get_any_property_returns_any_property
  parent: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest
  langs:
  - csharp
  - vb
  name: Get_any_property_returns_any_property()
  nameWithType: TypeExtensionsTest.Get_any_property_returns_any_property()
  fullName: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.Get_any_property_returns_any_property()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/TypeExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Get_any_property_returns_any_property
    path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/TypeExtensionsTest.cs
    startLine: 102
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Utilities
  syntax:
    content: >-
      [Fact]

      public void Get_any_property_returns_any_property()
    content.vb: >-
      <Fact>

      Public Sub Get_any_property_returns_any_property
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TryGetElementType_returns_element_type_for_given_interface
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TryGetElementType_returns_element_type_for_given_interface
  id: TryGetElementType_returns_element_type_for_given_interface
  parent: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest
  langs:
  - csharp
  - vb
  name: TryGetElementType_returns_element_type_for_given_interface()
  nameWithType: TypeExtensionsTest.TryGetElementType_returns_element_type_for_given_interface()
  fullName: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TryGetElementType_returns_element_type_for_given_interface()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/TypeExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: TryGetElementType_returns_element_type_for_given_interface
    path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/TypeExtensionsTest.cs
    startLine: 244
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Utilities
  syntax:
    content: >-
      [Fact]

      public void TryGetElementType_returns_element_type_for_given_interface()
    content.vb: >-
      <Fact>

      Public Sub TryGetElementType_returns_element_type_for_given_interface
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TryGetElementType_returns_element_type_for_given_class
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TryGetElementType_returns_element_type_for_given_class
  id: TryGetElementType_returns_element_type_for_given_class
  parent: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest
  langs:
  - csharp
  - vb
  name: TryGetElementType_returns_element_type_for_given_class()
  nameWithType: TypeExtensionsTest.TryGetElementType_returns_element_type_for_given_class()
  fullName: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TryGetElementType_returns_element_type_for_given_class()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/TypeExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: TryGetElementType_returns_element_type_for_given_class
    path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/TypeExtensionsTest.cs
    startLine: 255
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Utilities
  syntax:
    content: public void TryGetElementType_returns_element_type_for_given_class()
    content.vb: Public Sub TryGetElementType_returns_element_type_for_given_class
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TryGetElementType_returns_null_if_type_is_generic_type_definition
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TryGetElementType_returns_null_if_type_is_generic_type_definition
  id: TryGetElementType_returns_null_if_type_is_generic_type_definition
  parent: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest
  langs:
  - csharp
  - vb
  name: TryGetElementType_returns_null_if_type_is_generic_type_definition()
  nameWithType: TypeExtensionsTest.TryGetElementType_returns_null_if_type_is_generic_type_definition()
  fullName: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TryGetElementType_returns_null_if_type_is_generic_type_definition()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/TypeExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: TryGetElementType_returns_null_if_type_is_generic_type_definition
    path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/TypeExtensionsTest.cs
    startLine: 261
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Utilities
  syntax:
    content: >-
      [Fact]

      public void TryGetElementType_returns_null_if_type_is_generic_type_definition()
    content.vb: >-
      <Fact>

      Public Sub TryGetElementType_returns_null_if_type_is_generic_type_definition
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TryGetElementType_returns_null_if_type_doesnt_implement_interface
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TryGetElementType_returns_null_if_type_doesnt_implement_interface
  id: TryGetElementType_returns_null_if_type_doesnt_implement_interface
  parent: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest
  langs:
  - csharp
  - vb
  name: TryGetElementType_returns_null_if_type_doesnt_implement_interface()
  nameWithType: TypeExtensionsTest.TryGetElementType_returns_null_if_type_doesnt_implement_interface()
  fullName: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TryGetElementType_returns_null_if_type_doesnt_implement_interface()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/TypeExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: TryGetElementType_returns_null_if_type_doesnt_implement_interface
    path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/TypeExtensionsTest.cs
    startLine: 267
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Utilities
  syntax:
    content: >-
      [Fact]

      public void TryGetElementType_returns_null_if_type_doesnt_implement_interface()
    content.vb: >-
      <Fact>

      Public Sub TryGetElementType_returns_null_if_type_doesnt_implement_interface
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TryGetElementType_returns_null_if_type_doesnt_implement_class
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TryGetElementType_returns_null_if_type_doesnt_implement_class
  id: TryGetElementType_returns_null_if_type_doesnt_implement_class
  parent: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest
  langs:
  - csharp
  - vb
  name: TryGetElementType_returns_null_if_type_doesnt_implement_class()
  nameWithType: TypeExtensionsTest.TryGetElementType_returns_null_if_type_doesnt_implement_class()
  fullName: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TryGetElementType_returns_null_if_type_doesnt_implement_class()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/TypeExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: TryGetElementType_returns_null_if_type_doesnt_implement_class
    path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/TypeExtensionsTest.cs
    startLine: 274
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Utilities
  syntax:
    content: >-
      [Fact]

      public void TryGetElementType_returns_null_if_type_doesnt_implement_class()
    content.vb: >-
      <Fact>

      Public Sub TryGetElementType_returns_null_if_type_doesnt_implement_class
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TryGetElementType_returns_null_when_ICollection_implemented_more_than_once
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TryGetElementType_returns_null_when_ICollection_implemented_more_than_once
  id: TryGetElementType_returns_null_when_ICollection_implemented_more_than_once
  parent: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest
  langs:
  - csharp
  - vb
  name: TryGetElementType_returns_null_when_ICollection_implemented_more_than_once()
  nameWithType: TypeExtensionsTest.TryGetElementType_returns_null_when_ICollection_implemented_more_than_once()
  fullName: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TryGetElementType_returns_null_when_ICollection_implemented_more_than_once()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/TypeExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: TryGetElementType_returns_null_when_ICollection_implemented_more_than_once
    path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/TypeExtensionsTest.cs
    startLine: 282
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Utilities
  syntax:
    content: >-
      [Fact]

      public void TryGetElementType_returns_null_when_ICollection_implemented_more_than_once()
    content.vb: >-
      <Fact>

      Public Sub TryGetElementType_returns_null_when_ICollection_implemented_more_than_once
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.GetBaseTypes_return_all_base_types
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.GetBaseTypes_return_all_base_types
  id: GetBaseTypes_return_all_base_types
  parent: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest
  langs:
  - csharp
  - vb
  name: GetBaseTypes_return_all_base_types()
  nameWithType: TypeExtensionsTest.GetBaseTypes_return_all_base_types()
  fullName: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.GetBaseTypes_return_all_base_types()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/TypeExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetBaseTypes_return_all_base_types
    path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/TypeExtensionsTest.cs
    startLine: 352
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Utilities
  syntax:
    content: >-
      [Fact]

      public void GetBaseTypes_return_all_base_types()
    content.vb: >-
      <Fact>

      Public Sub GetBaseTypes_return_all_base_types
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.GetBaseTypes_return_empty_if_no_base_type_exists
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.GetBaseTypes_return_empty_if_no_base_type_exists
  id: GetBaseTypes_return_empty_if_no_base_type_exists
  parent: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest
  langs:
  - csharp
  - vb
  name: GetBaseTypes_return_empty_if_no_base_type_exists()
  nameWithType: TypeExtensionsTest.GetBaseTypes_return_empty_if_no_base_type_exists()
  fullName: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.GetBaseTypes_return_empty_if_no_base_type_exists()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/TypeExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetBaseTypes_return_empty_if_no_base_type_exists
    path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/TypeExtensionsTest.cs
    startLine: 361
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Utilities
  syntax:
    content: >-
      [Fact]

      public void GetBaseTypes_return_empty_if_no_base_type_exists()
    content.vb: >-
      <Fact>

      Public Sub GetBaseTypes_return_empty_if_no_base_type_exists
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.Can_get_default_value_for_type
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.Can_get_default_value_for_type
  id: Can_get_default_value_for_type
  parent: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest
  langs:
  - csharp
  - vb
  name: Can_get_default_value_for_type()
  nameWithType: TypeExtensionsTest.Can_get_default_value_for_type()
  fullName: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.Can_get_default_value_for_type()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/TypeExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_get_default_value_for_type
    path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/TypeExtensionsTest.cs
    startLine: 381
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Utilities
  syntax:
    content: >-
      [Fact]

      public void Can_get_default_value_for_type()
    content.vb: >-
      <Fact>

      Public Sub Can_get_default_value_for_type
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.GetConstructibleTypes_works
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.GetConstructibleTypes_works
  id: GetConstructibleTypes_works
  parent: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest
  langs:
  - csharp
  - vb
  name: GetConstructibleTypes_works()
  nameWithType: TypeExtensionsTest.GetConstructibleTypes_works()
  fullName: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.GetConstructibleTypes_works()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/TypeExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetConstructibleTypes_works
    path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/TypeExtensionsTest.cs
    startLine: 432
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Utilities
  syntax:
    content: >-
      [Fact]

      public void GetConstructibleTypes_works()
    content.vb: >-
      <Fact>

      Public Sub GetConstructibleTypes_works
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.EntityFrameworkCore.Tests.Utilities
  commentId: N:Microsoft.EntityFrameworkCore.Tests.Utilities
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Tests.Utilities
  nameWithType: Microsoft.EntityFrameworkCore.Tests.Utilities
  fullName: Microsoft.EntityFrameworkCore.Tests.Utilities
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
