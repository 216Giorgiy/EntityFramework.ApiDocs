### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Relational.Design.TestLoggerFactory
  commentId: T:Microsoft.EntityFrameworkCore.Relational.Design.TestLoggerFactory
  id: TestLoggerFactory
  parent: Microsoft.EntityFrameworkCore.Relational.Design
  children:
  - Microsoft.EntityFrameworkCore.Relational.Design.TestLoggerFactory.#ctor
  - Microsoft.EntityFrameworkCore.Relational.Design.TestLoggerFactory.Logger
  langs:
  - csharp
  - vb
  name: TestLoggerFactory
  nameWithType: TestLoggerFactory
  fullName: Microsoft.EntityFrameworkCore.Relational.Design.TestLoggerFactory
  type: Class
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Relational.Design.Tests/TestLogger.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: TestLoggerFactory
    path: test/Microsoft.EntityFrameworkCore.Relational.Design.Tests/TestLogger.cs
    startLine: 9
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Design
  syntax:
    content: 'public class TestLoggerFactory : LoggerFactory, ILoggerFactory, IDisposable'
    content.vb: >-
      Public Class TestLoggerFactory
          Inherits LoggerFactory
          Implements ILoggerFactory, IDisposable
  inheritance:
  - System.Object
  - Microsoft.Extensions.Logging.LoggerFactory
  implements:
  - Microsoft.Extensions.Logging.ILoggerFactory
  - System.IDisposable
  inheritedMembers:
  - Microsoft.Extensions.Logging.LoggerFactory.CreateLogger(System.String)
  - Microsoft.Extensions.Logging.LoggerFactory.AddProvider(Microsoft.Extensions.Logging.ILoggerProvider)
  - Microsoft.Extensions.Logging.LoggerFactory.CheckDisposed
  - Microsoft.Extensions.Logging.LoggerFactory.Dispose
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Relational.Design.TestLoggerFactory.#ctor
  commentId: M:Microsoft.EntityFrameworkCore.Relational.Design.TestLoggerFactory.#ctor
  id: '#ctor'
  parent: Microsoft.EntityFrameworkCore.Relational.Design.TestLoggerFactory
  langs:
  - csharp
  - vb
  name: TestLoggerFactory()
  nameWithType: TestLoggerFactory.TestLoggerFactory()
  fullName: Microsoft.EntityFrameworkCore.Relational.Design.TestLoggerFactory.TestLoggerFactory()
  type: Constructor
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Relational.Design.Tests/TestLogger.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: test/Microsoft.EntityFrameworkCore.Relational.Design.Tests/TestLogger.cs
    startLine: 11
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Design
  syntax:
    content: public TestLoggerFactory()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Relational.Design.TestLoggerFactory.Logger
  commentId: P:Microsoft.EntityFrameworkCore.Relational.Design.TestLoggerFactory.Logger
  id: Logger
  parent: Microsoft.EntityFrameworkCore.Relational.Design.TestLoggerFactory
  langs:
  - csharp
  - vb
  name: Logger
  nameWithType: TestLoggerFactory.Logger
  fullName: Microsoft.EntityFrameworkCore.Relational.Design.TestLoggerFactory.Logger
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Relational.Design.Tests/TestLogger.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Logger
    path: test/Microsoft.EntityFrameworkCore.Relational.Design.Tests/TestLogger.cs
    startLine: 17
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Design
  syntax:
    content: public TestLogger Logger { get; }
    content.vb: Public ReadOnly Property Logger As TestLogger
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Relational.Design.TestLogger
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.EntityFrameworkCore.Relational.Design
  commentId: N:Microsoft.EntityFrameworkCore.Relational.Design
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Relational.Design
  nameWithType: Microsoft.EntityFrameworkCore.Relational.Design
  fullName: Microsoft.EntityFrameworkCore.Relational.Design
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Extensions.Logging.LoggerFactory
  commentId: T:Microsoft.Extensions.Logging.LoggerFactory
  parent: Microsoft.Extensions.Logging
  isExternal: true
  name: LoggerFactory
  nameWithType: LoggerFactory
  fullName: Microsoft.Extensions.Logging.LoggerFactory
- uid: Microsoft.Extensions.Logging.ILoggerFactory
  commentId: T:Microsoft.Extensions.Logging.ILoggerFactory
  parent: Microsoft.Extensions.Logging
  isExternal: true
  name: ILoggerFactory
  nameWithType: ILoggerFactory
  fullName: Microsoft.Extensions.Logging.ILoggerFactory
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Microsoft.Extensions.Logging.LoggerFactory.CreateLogger(System.String)
  commentId: M:Microsoft.Extensions.Logging.LoggerFactory.CreateLogger(System.String)
  parent: Microsoft.Extensions.Logging.LoggerFactory
  isExternal: true
  name: CreateLogger(String)
  nameWithType: LoggerFactory.CreateLogger(String)
  fullName: Microsoft.Extensions.Logging.LoggerFactory.CreateLogger(System.String)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.LoggerFactory.CreateLogger(System.String)
    name: CreateLogger
    nameWithType: LoggerFactory.CreateLogger
    fullName: Microsoft.Extensions.Logging.LoggerFactory.CreateLogger
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.LoggerFactory.CreateLogger(System.String)
    name: CreateLogger
    nameWithType: LoggerFactory.CreateLogger
    fullName: Microsoft.Extensions.Logging.LoggerFactory.CreateLogger
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.LoggerFactory.AddProvider(Microsoft.Extensions.Logging.ILoggerProvider)
  commentId: M:Microsoft.Extensions.Logging.LoggerFactory.AddProvider(Microsoft.Extensions.Logging.ILoggerProvider)
  parent: Microsoft.Extensions.Logging.LoggerFactory
  isExternal: true
  name: AddProvider(ILoggerProvider)
  nameWithType: LoggerFactory.AddProvider(ILoggerProvider)
  fullName: Microsoft.Extensions.Logging.LoggerFactory.AddProvider(Microsoft.Extensions.Logging.ILoggerProvider)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.LoggerFactory.AddProvider(Microsoft.Extensions.Logging.ILoggerProvider)
    name: AddProvider
    nameWithType: LoggerFactory.AddProvider
    fullName: Microsoft.Extensions.Logging.LoggerFactory.AddProvider
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerProvider
    name: ILoggerProvider
    nameWithType: ILoggerProvider
    fullName: Microsoft.Extensions.Logging.ILoggerProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.LoggerFactory.AddProvider(Microsoft.Extensions.Logging.ILoggerProvider)
    name: AddProvider
    nameWithType: LoggerFactory.AddProvider
    fullName: Microsoft.Extensions.Logging.LoggerFactory.AddProvider
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerProvider
    name: ILoggerProvider
    nameWithType: ILoggerProvider
    fullName: Microsoft.Extensions.Logging.ILoggerProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.LoggerFactory.CheckDisposed
  commentId: M:Microsoft.Extensions.Logging.LoggerFactory.CheckDisposed
  parent: Microsoft.Extensions.Logging.LoggerFactory
  isExternal: true
  name: CheckDisposed()
  nameWithType: LoggerFactory.CheckDisposed()
  fullName: Microsoft.Extensions.Logging.LoggerFactory.CheckDisposed()
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.LoggerFactory.CheckDisposed
    name: CheckDisposed
    nameWithType: LoggerFactory.CheckDisposed
    fullName: Microsoft.Extensions.Logging.LoggerFactory.CheckDisposed
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.LoggerFactory.CheckDisposed
    name: CheckDisposed
    nameWithType: LoggerFactory.CheckDisposed
    fullName: Microsoft.Extensions.Logging.LoggerFactory.CheckDisposed
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.LoggerFactory.Dispose
  commentId: M:Microsoft.Extensions.Logging.LoggerFactory.Dispose
  parent: Microsoft.Extensions.Logging.LoggerFactory
  isExternal: true
  name: Dispose()
  nameWithType: LoggerFactory.Dispose()
  fullName: Microsoft.Extensions.Logging.LoggerFactory.Dispose()
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.LoggerFactory.Dispose
    name: Dispose
    nameWithType: LoggerFactory.Dispose
    fullName: Microsoft.Extensions.Logging.LoggerFactory.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.LoggerFactory.Dispose
    name: Dispose
    nameWithType: LoggerFactory.Dispose
    fullName: Microsoft.Extensions.Logging.LoggerFactory.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: false
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: Microsoft.EntityFrameworkCore.Relational.Design.TestLogger
  commentId: T:Microsoft.EntityFrameworkCore.Relational.Design.TestLogger
  parent: Microsoft.EntityFrameworkCore.Relational.Design
  isExternal: false
  name: TestLogger
  nameWithType: TestLogger
  fullName: Microsoft.EntityFrameworkCore.Relational.Design.TestLogger
