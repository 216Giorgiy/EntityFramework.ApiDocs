### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Query.Internal.QueryBuffer
  commentId: T:Microsoft.EntityFrameworkCore.Query.Internal.QueryBuffer
  id: QueryBuffer
  parent: Microsoft.EntityFrameworkCore.Query.Internal
  children:
  - Microsoft.EntityFrameworkCore.Query.Internal.QueryBuffer.#ctor(Microsoft.EntityFrameworkCore.Internal.LazyRef{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager},Microsoft.EntityFrameworkCore.Internal.LazyRef{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector})
  - Microsoft.EntityFrameworkCore.Query.Internal.QueryBuffer.GetEntity(Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.Query.EntityLoadInfo,System.Boolean,System.Boolean)
  - Microsoft.EntityFrameworkCore.Query.Internal.QueryBuffer.GetPropertyValue(System.Object,Microsoft.EntityFrameworkCore.Metadata.IProperty)
  - Microsoft.EntityFrameworkCore.Query.Internal.QueryBuffer.Include(Microsoft.EntityFrameworkCore.Query.QueryContext,System.Object,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.Internal.IRelatedEntitiesLoader},System.Boolean)
  - Microsoft.EntityFrameworkCore.Query.Internal.QueryBuffer.IncludeAsync(Microsoft.EntityFrameworkCore.Query.QueryContext,System.Object,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.Internal.IAsyncRelatedEntitiesLoader},System.Boolean,System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.Query.Internal.QueryBuffer.StartTracking(System.Object,Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo)
  langs:
  - csharp
  - vb
  name: QueryBuffer
  nameWithType: QueryBuffer
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.QueryBuffer
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/QueryBuffer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: QueryBuffer
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/QueryBuffer.cs
    startLine: 23
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public class QueryBuffer : IQueryBuffer'
    content.vb: >-
      Public Class QueryBuffer
          Implements IQueryBuffer
  inheritance:
  - System.Object
  implements:
  - Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Query.Internal.QueryBuffer.#ctor(Microsoft.EntityFrameworkCore.Internal.LazyRef{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager},Microsoft.EntityFrameworkCore.Internal.LazyRef{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector})
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.QueryBuffer.#ctor(Microsoft.EntityFrameworkCore.Internal.LazyRef{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager},Microsoft.EntityFrameworkCore.Internal.LazyRef{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector})
  id: '#ctor(Microsoft.EntityFrameworkCore.Internal.LazyRef{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager},Microsoft.EntityFrameworkCore.Internal.LazyRef{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector})'
  parent: Microsoft.EntityFrameworkCore.Query.Internal.QueryBuffer
  langs:
  - csharp
  - vb
  name: QueryBuffer(LazyRef<IStateManager>, LazyRef<IChangeDetector>)
  nameWithType: QueryBuffer.QueryBuffer(LazyRef<IStateManager>, LazyRef<IChangeDetector>)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.QueryBuffer.QueryBuffer(Microsoft.EntityFrameworkCore.Internal.LazyRef<Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager>, Microsoft.EntityFrameworkCore.Internal.LazyRef<Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/QueryBuffer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/QueryBuffer.cs
    startLine: 39
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public QueryBuffer(LazyRef<IStateManager> stateManager, LazyRef<IChangeDetector> changeDetector)
    content.vb: Public Sub New(stateManager As LazyRef(Of IStateManager), changeDetector As LazyRef(Of IChangeDetector))
    parameters:
    - id: stateManager
      type: Microsoft.EntityFrameworkCore.Internal.LazyRef{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager}
    - id: changeDetector
      type: Microsoft.EntityFrameworkCore.Internal.LazyRef{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector}
  nameWithType.vb: QueryBuffer.QueryBuffer(LazyRef(Of IStateManager), LazyRef(Of IChangeDetector))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Query.Internal.QueryBuffer.QueryBuffer(Microsoft.EntityFrameworkCore.Internal.LazyRef(Of Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager), Microsoft.EntityFrameworkCore.Internal.LazyRef(Of Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector))
  name.vb: QueryBuffer(LazyRef(Of IStateManager), LazyRef(Of IChangeDetector))
- uid: Microsoft.EntityFrameworkCore.Query.Internal.QueryBuffer.GetEntity(Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.Query.EntityLoadInfo,System.Boolean,System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.QueryBuffer.GetEntity(Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.Query.EntityLoadInfo,System.Boolean,System.Boolean)
  id: GetEntity(Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.Query.EntityLoadInfo,System.Boolean,System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Query.Internal.QueryBuffer
  langs:
  - csharp
  - vb
  name: GetEntity(IKey, EntityLoadInfo, Boolean, Boolean)
  nameWithType: QueryBuffer.GetEntity(IKey, EntityLoadInfo, Boolean, Boolean)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.QueryBuffer.GetEntity(Microsoft.EntityFrameworkCore.Metadata.IKey, Microsoft.EntityFrameworkCore.Query.EntityLoadInfo, System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/QueryBuffer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetEntity
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/QueryBuffer.cs
    startLine: 51
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual object GetEntity(IKey key, EntityLoadInfo entityLoadInfo, bool queryStateManager, bool throwOnNullKey)
    content.vb: Public Overridable Function GetEntity(key As IKey, entityLoadInfo As EntityLoadInfo, queryStateManager As Boolean, throwOnNullKey As Boolean) As Object
    parameters:
    - id: key
      type: Microsoft.EntityFrameworkCore.Metadata.IKey
    - id: entityLoadInfo
      type: Microsoft.EntityFrameworkCore.Query.EntityLoadInfo
    - id: queryStateManager
      type: System.Boolean
    - id: throwOnNullKey
      type: System.Boolean
    return:
      type: System.Object
  implements:
  - Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.GetEntity(Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.Query.EntityLoadInfo,System.Boolean,System.Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Query.Internal.QueryBuffer.GetPropertyValue(System.Object,Microsoft.EntityFrameworkCore.Metadata.IProperty)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.QueryBuffer.GetPropertyValue(System.Object,Microsoft.EntityFrameworkCore.Metadata.IProperty)
  id: GetPropertyValue(System.Object,Microsoft.EntityFrameworkCore.Metadata.IProperty)
  parent: Microsoft.EntityFrameworkCore.Query.Internal.QueryBuffer
  langs:
  - csharp
  - vb
  name: GetPropertyValue(Object, IProperty)
  nameWithType: QueryBuffer.GetPropertyValue(Object, IProperty)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.QueryBuffer.GetPropertyValue(System.Object, Microsoft.EntityFrameworkCore.Metadata.IProperty)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/QueryBuffer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetPropertyValue
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/QueryBuffer.cs
    startLine: 104
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual object GetPropertyValue(object entity, IProperty property)
    content.vb: Public Overridable Function GetPropertyValue(entity As Object, property As IProperty) As Object
    parameters:
    - id: entity
      type: System.Object
    - id: property
      type: Microsoft.EntityFrameworkCore.Metadata.IProperty
    return:
      type: System.Object
  implements:
  - Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.GetPropertyValue(System.Object,Microsoft.EntityFrameworkCore.Metadata.IProperty)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Query.Internal.QueryBuffer.StartTracking(System.Object,Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.QueryBuffer.StartTracking(System.Object,Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo)
  id: StartTracking(System.Object,Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo)
  parent: Microsoft.EntityFrameworkCore.Query.Internal.QueryBuffer
  langs:
  - csharp
  - vb
  name: StartTracking(Object, EntityTrackingInfo)
  nameWithType: QueryBuffer.StartTracking(Object, EntityTrackingInfo)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.QueryBuffer.StartTracking(System.Object, Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/QueryBuffer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: StartTracking
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/QueryBuffer.cs
    startLine: 127
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual void StartTracking(object entity, EntityTrackingInfo entityTrackingInfo)
    content.vb: Public Overridable Sub StartTracking(entity As Object, entityTrackingInfo As EntityTrackingInfo)
    parameters:
    - id: entity
      type: System.Object
    - id: entityTrackingInfo
      type: Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo
  implements:
  - Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.StartTracking(System.Object,Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Query.Internal.QueryBuffer.Include(Microsoft.EntityFrameworkCore.Query.QueryContext,System.Object,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.Internal.IRelatedEntitiesLoader},System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.QueryBuffer.Include(Microsoft.EntityFrameworkCore.Query.QueryContext,System.Object,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.Internal.IRelatedEntitiesLoader},System.Boolean)
  id: Include(Microsoft.EntityFrameworkCore.Query.QueryContext,System.Object,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.Internal.IRelatedEntitiesLoader},System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Query.Internal.QueryBuffer
  langs:
  - csharp
  - vb
  name: Include(QueryContext, Object, IReadOnlyList<INavigation>, IReadOnlyList<IRelatedEntitiesLoader>, Boolean)
  nameWithType: QueryBuffer.Include(QueryContext, Object, IReadOnlyList<INavigation>, IReadOnlyList<IRelatedEntitiesLoader>, Boolean)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.QueryBuffer.Include(Microsoft.EntityFrameworkCore.Query.QueryContext, System.Object, System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Metadata.INavigation>, System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Query.Internal.IRelatedEntitiesLoader>, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/QueryBuffer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/QueryBuffer.cs
    startLine: 151
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual void Include(QueryContext queryContext, object entity, IReadOnlyList<INavigation> navigationPath, IReadOnlyList<IRelatedEntitiesLoader> relatedEntitiesLoaders, bool queryStateManager)
    content.vb: Public Overridable Sub Include(queryContext As QueryContext, entity As Object, navigationPath As IReadOnlyList(Of INavigation), relatedEntitiesLoaders As IReadOnlyList(Of IRelatedEntitiesLoader), queryStateManager As Boolean)
    parameters:
    - id: queryContext
      type: Microsoft.EntityFrameworkCore.Query.QueryContext
    - id: entity
      type: System.Object
    - id: navigationPath
      type: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation}
    - id: relatedEntitiesLoaders
      type: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.Internal.IRelatedEntitiesLoader}
    - id: queryStateManager
      type: System.Boolean
  implements:
  - Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.Include(Microsoft.EntityFrameworkCore.Query.QueryContext,System.Object,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.Internal.IRelatedEntitiesLoader},System.Boolean)
  nameWithType.vb: QueryBuffer.Include(QueryContext, Object, IReadOnlyList(Of INavigation), IReadOnlyList(Of IRelatedEntitiesLoader), Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Query.Internal.QueryBuffer.Include(Microsoft.EntityFrameworkCore.Query.QueryContext, System.Object, System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Metadata.INavigation), System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Query.Internal.IRelatedEntitiesLoader), System.Boolean)
  name.vb: Include(QueryContext, Object, IReadOnlyList(Of INavigation), IReadOnlyList(Of IRelatedEntitiesLoader), Boolean)
- uid: Microsoft.EntityFrameworkCore.Query.Internal.QueryBuffer.IncludeAsync(Microsoft.EntityFrameworkCore.Query.QueryContext,System.Object,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.Internal.IAsyncRelatedEntitiesLoader},System.Boolean,System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.QueryBuffer.IncludeAsync(Microsoft.EntityFrameworkCore.Query.QueryContext,System.Object,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.Internal.IAsyncRelatedEntitiesLoader},System.Boolean,System.Threading.CancellationToken)
  id: IncludeAsync(Microsoft.EntityFrameworkCore.Query.QueryContext,System.Object,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.Internal.IAsyncRelatedEntitiesLoader},System.Boolean,System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.Query.Internal.QueryBuffer
  langs:
  - csharp
  - vb
  name: IncludeAsync(QueryContext, Object, IReadOnlyList<INavigation>, IReadOnlyList<IAsyncRelatedEntitiesLoader>, Boolean, CancellationToken)
  nameWithType: QueryBuffer.IncludeAsync(QueryContext, Object, IReadOnlyList<INavigation>, IReadOnlyList<IAsyncRelatedEntitiesLoader>, Boolean, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.QueryBuffer.IncludeAsync(Microsoft.EntityFrameworkCore.Query.QueryContext, System.Object, System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Metadata.INavigation>, System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Query.Internal.IAsyncRelatedEntitiesLoader>, System.Boolean, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/QueryBuffer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: IncludeAsync
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/QueryBuffer.cs
    startLine: 212
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual Task IncludeAsync(QueryContext queryContext, object entity, IReadOnlyList<INavigation> navigationPath, IReadOnlyList<IAsyncRelatedEntitiesLoader> relatedEntitiesLoaders, bool queryStateManager, CancellationToken cancellationToken)
    content.vb: Public Overridable Function IncludeAsync(queryContext As QueryContext, entity As Object, navigationPath As IReadOnlyList(Of INavigation), relatedEntitiesLoaders As IReadOnlyList(Of IAsyncRelatedEntitiesLoader), queryStateManager As Boolean, cancellationToken As CancellationToken) As Task
    parameters:
    - id: queryContext
      type: Microsoft.EntityFrameworkCore.Query.QueryContext
    - id: entity
      type: System.Object
    - id: navigationPath
      type: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation}
    - id: relatedEntitiesLoaders
      type: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.Internal.IAsyncRelatedEntitiesLoader}
    - id: queryStateManager
      type: System.Boolean
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
  implements:
  - Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.IncludeAsync(Microsoft.EntityFrameworkCore.Query.QueryContext,System.Object,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.Internal.IAsyncRelatedEntitiesLoader},System.Boolean,System.Threading.CancellationToken)
  nameWithType.vb: QueryBuffer.IncludeAsync(QueryContext, Object, IReadOnlyList(Of INavigation), IReadOnlyList(Of IAsyncRelatedEntitiesLoader), Boolean, CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Query.Internal.QueryBuffer.IncludeAsync(Microsoft.EntityFrameworkCore.Query.QueryContext, System.Object, System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Metadata.INavigation), System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Query.Internal.IAsyncRelatedEntitiesLoader), System.Boolean, System.Threading.CancellationToken)
  name.vb: IncludeAsync(QueryContext, Object, IReadOnlyList(Of INavigation), IReadOnlyList(Of IAsyncRelatedEntitiesLoader), Boolean, CancellationToken)
references:
- uid: Microsoft.EntityFrameworkCore.Query.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Query.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Query.Internal
  fullName: Microsoft.EntityFrameworkCore.Query.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer
  commentId: T:Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer
  parent: Microsoft.EntityFrameworkCore.Query.Internal
  isExternal: false
  name: IQueryBuffer
  nameWithType: IQueryBuffer
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Internal.LazyRef{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager}
  commentId: T:Microsoft.EntityFrameworkCore.Internal.LazyRef{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager}
  parent: Microsoft.EntityFrameworkCore.Internal
  definition: Microsoft.EntityFrameworkCore.Internal.LazyRef`1
  name: LazyRef<IStateManager>
  nameWithType: LazyRef<IStateManager>
  fullName: Microsoft.EntityFrameworkCore.Internal.LazyRef<Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager>
  nameWithType.vb: LazyRef(Of IStateManager)
  fullname.vb: Microsoft.EntityFrameworkCore.Internal.LazyRef(Of Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager)
  name.vb: LazyRef(Of IStateManager)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Internal.LazyRef`1
    name: LazyRef
    nameWithType: LazyRef
    fullName: Microsoft.EntityFrameworkCore.Internal.LazyRef
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager
    name: IStateManager
    nameWithType: IStateManager
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Internal.LazyRef`1
    name: LazyRef
    nameWithType: LazyRef
    fullName: Microsoft.EntityFrameworkCore.Internal.LazyRef
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager
    name: IStateManager
    nameWithType: IStateManager
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Internal.LazyRef{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector}
  commentId: T:Microsoft.EntityFrameworkCore.Internal.LazyRef{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector}
  parent: Microsoft.EntityFrameworkCore.Internal
  definition: Microsoft.EntityFrameworkCore.Internal.LazyRef`1
  name: LazyRef<IChangeDetector>
  nameWithType: LazyRef<IChangeDetector>
  fullName: Microsoft.EntityFrameworkCore.Internal.LazyRef<Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector>
  nameWithType.vb: LazyRef(Of IChangeDetector)
  fullname.vb: Microsoft.EntityFrameworkCore.Internal.LazyRef(Of Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector)
  name.vb: LazyRef(Of IChangeDetector)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Internal.LazyRef`1
    name: LazyRef
    nameWithType: LazyRef
    fullName: Microsoft.EntityFrameworkCore.Internal.LazyRef
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector
    name: IChangeDetector
    nameWithType: IChangeDetector
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Internal.LazyRef`1
    name: LazyRef
    nameWithType: LazyRef
    fullName: Microsoft.EntityFrameworkCore.Internal.LazyRef
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector
    name: IChangeDetector
    nameWithType: IChangeDetector
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Internal.LazyRef`1
  commentId: T:Microsoft.EntityFrameworkCore.Internal.LazyRef`1
  isExternal: false
  name: LazyRef<T>
  nameWithType: LazyRef<T>
  fullName: Microsoft.EntityFrameworkCore.Internal.LazyRef<T>
  nameWithType.vb: LazyRef(Of T)
  fullname.vb: Microsoft.EntityFrameworkCore.Internal.LazyRef(Of T)
  name.vb: LazyRef(Of T)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Internal.LazyRef`1
    name: LazyRef
    nameWithType: LazyRef
    fullName: Microsoft.EntityFrameworkCore.Internal.LazyRef
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Internal.LazyRef`1
    name: LazyRef
    nameWithType: LazyRef
    fullName: Microsoft.EntityFrameworkCore.Internal.LazyRef
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Internal
  fullName: Microsoft.EntityFrameworkCore.Internal
- uid: Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.GetEntity(Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.Query.EntityLoadInfo,System.Boolean,System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.GetEntity(Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.Query.EntityLoadInfo,System.Boolean,System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer
  isExternal: true
  name: GetEntity(IKey, EntityLoadInfo, Boolean, Boolean)
  nameWithType: IQueryBuffer.GetEntity(IKey, EntityLoadInfo, Boolean, Boolean)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.GetEntity(Microsoft.EntityFrameworkCore.Metadata.IKey, Microsoft.EntityFrameworkCore.Query.EntityLoadInfo, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.GetEntity(Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.Query.EntityLoadInfo,System.Boolean,System.Boolean)
    name: GetEntity
    nameWithType: IQueryBuffer.GetEntity
    fullName: Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.GetEntity
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IKey
    name: IKey
    nameWithType: IKey
    fullName: Microsoft.EntityFrameworkCore.Metadata.IKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Query.EntityLoadInfo
    name: EntityLoadInfo
    nameWithType: EntityLoadInfo
    fullName: Microsoft.EntityFrameworkCore.Query.EntityLoadInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.GetEntity(Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.Query.EntityLoadInfo,System.Boolean,System.Boolean)
    name: GetEntity
    nameWithType: IQueryBuffer.GetEntity
    fullName: Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.GetEntity
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IKey
    name: IKey
    nameWithType: IKey
    fullName: Microsoft.EntityFrameworkCore.Metadata.IKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Query.EntityLoadInfo
    name: EntityLoadInfo
    nameWithType: EntityLoadInfo
    fullName: Microsoft.EntityFrameworkCore.Query.EntityLoadInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.IKey
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IKey
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IKey
  nameWithType: IKey
  fullName: Microsoft.EntityFrameworkCore.Metadata.IKey
- uid: Microsoft.EntityFrameworkCore.Query.EntityLoadInfo
  commentId: T:Microsoft.EntityFrameworkCore.Query.EntityLoadInfo
  parent: Microsoft.EntityFrameworkCore.Query
  isExternal: false
  name: EntityLoadInfo
  nameWithType: EntityLoadInfo
  fullName: Microsoft.EntityFrameworkCore.Query.EntityLoadInfo
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: Microsoft.EntityFrameworkCore.Query
  commentId: N:Microsoft.EntityFrameworkCore.Query
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query
  nameWithType: Microsoft.EntityFrameworkCore.Query
  fullName: Microsoft.EntityFrameworkCore.Query
- uid: Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.GetPropertyValue(System.Object,Microsoft.EntityFrameworkCore.Metadata.IProperty)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.GetPropertyValue(System.Object,Microsoft.EntityFrameworkCore.Metadata.IProperty)
  parent: Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer
  isExternal: true
  name: GetPropertyValue(Object, IProperty)
  nameWithType: IQueryBuffer.GetPropertyValue(Object, IProperty)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.GetPropertyValue(System.Object, Microsoft.EntityFrameworkCore.Metadata.IProperty)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.GetPropertyValue(System.Object,Microsoft.EntityFrameworkCore.Metadata.IProperty)
    name: GetPropertyValue
    nameWithType: IQueryBuffer.GetPropertyValue
    fullName: Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.GetPropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
    name: IProperty
    nameWithType: IProperty
    fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.GetPropertyValue(System.Object,Microsoft.EntityFrameworkCore.Metadata.IProperty)
    name: GetPropertyValue
    nameWithType: IQueryBuffer.GetPropertyValue
    fullName: Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.GetPropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
    name: IProperty
    nameWithType: IProperty
    fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IProperty
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IProperty
  nameWithType: IProperty
  fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
- uid: Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.StartTracking(System.Object,Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.StartTracking(System.Object,Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo)
  parent: Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer
  isExternal: true
  name: StartTracking(Object, EntityTrackingInfo)
  nameWithType: IQueryBuffer.StartTracking(Object, EntityTrackingInfo)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.StartTracking(System.Object, Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.StartTracking(System.Object,Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo)
    name: StartTracking
    nameWithType: IQueryBuffer.StartTracking
    fullName: Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.StartTracking
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo
    name: EntityTrackingInfo
    nameWithType: EntityTrackingInfo
    fullName: Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.StartTracking(System.Object,Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo)
    name: StartTracking
    nameWithType: IQueryBuffer.StartTracking
    fullName: Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.StartTracking
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo
    name: EntityTrackingInfo
    nameWithType: EntityTrackingInfo
    fullName: Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo
  commentId: T:Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo
  parent: Microsoft.EntityFrameworkCore.Query.Internal
  isExternal: false
  name: EntityTrackingInfo
  nameWithType: EntityTrackingInfo
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo
- uid: Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.Include(Microsoft.EntityFrameworkCore.Query.QueryContext,System.Object,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.Internal.IRelatedEntitiesLoader},System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.Include(Microsoft.EntityFrameworkCore.Query.QueryContext,System.Object,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.Internal.IRelatedEntitiesLoader},System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer
  isExternal: true
  name: Include(QueryContext, Object, IReadOnlyList<INavigation>, IReadOnlyList<IRelatedEntitiesLoader>, Boolean)
  nameWithType: IQueryBuffer.Include(QueryContext, Object, IReadOnlyList<INavigation>, IReadOnlyList<IRelatedEntitiesLoader>, Boolean)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.Include(Microsoft.EntityFrameworkCore.Query.QueryContext, System.Object, System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Metadata.INavigation>, System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Query.Internal.IRelatedEntitiesLoader>, System.Boolean)
  nameWithType.vb: IQueryBuffer.Include(QueryContext, Object, IReadOnlyList(Of INavigation), IReadOnlyList(Of IRelatedEntitiesLoader), Boolean)
  fullname.vb: Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.Include(Microsoft.EntityFrameworkCore.Query.QueryContext, System.Object, System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Metadata.INavigation), System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Query.Internal.IRelatedEntitiesLoader), System.Boolean)
  name.vb: Include(QueryContext, Object, IReadOnlyList(Of INavigation), IReadOnlyList(Of IRelatedEntitiesLoader), Boolean)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.Include(Microsoft.EntityFrameworkCore.Query.QueryContext,System.Object,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.Internal.IRelatedEntitiesLoader},System.Boolean)
    name: Include
    nameWithType: IQueryBuffer.Include
    fullName: Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.Include
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Query.QueryContext
    name: QueryContext
    nameWithType: QueryContext
    fullName: Microsoft.EntityFrameworkCore.Query.QueryContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.INavigation
    name: INavigation
    nameWithType: INavigation
    fullName: Microsoft.EntityFrameworkCore.Metadata.INavigation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Query.Internal.IRelatedEntitiesLoader
    name: IRelatedEntitiesLoader
    nameWithType: IRelatedEntitiesLoader
    fullName: Microsoft.EntityFrameworkCore.Query.Internal.IRelatedEntitiesLoader
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.Include(Microsoft.EntityFrameworkCore.Query.QueryContext,System.Object,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.Internal.IRelatedEntitiesLoader},System.Boolean)
    name: Include
    nameWithType: IQueryBuffer.Include
    fullName: Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.Include
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Query.QueryContext
    name: QueryContext
    nameWithType: QueryContext
    fullName: Microsoft.EntityFrameworkCore.Query.QueryContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.INavigation
    name: INavigation
    nameWithType: INavigation
    fullName: Microsoft.EntityFrameworkCore.Metadata.INavigation
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Query.Internal.IRelatedEntitiesLoader
    name: IRelatedEntitiesLoader
    nameWithType: IRelatedEntitiesLoader
    fullName: Microsoft.EntityFrameworkCore.Query.Internal.IRelatedEntitiesLoader
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.QueryContext
  commentId: T:Microsoft.EntityFrameworkCore.Query.QueryContext
  parent: Microsoft.EntityFrameworkCore.Query
  isExternal: false
  name: QueryContext
  nameWithType: QueryContext
  fullName: Microsoft.EntityFrameworkCore.Query.QueryContext
- uid: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation}
  commentId: T:System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<INavigation>
  nameWithType: IReadOnlyList<INavigation>
  fullName: System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Metadata.INavigation>
  nameWithType.vb: IReadOnlyList(Of INavigation)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Metadata.INavigation)
  name.vb: IReadOnlyList(Of INavigation)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.INavigation
    name: INavigation
    nameWithType: INavigation
    fullName: Microsoft.EntityFrameworkCore.Metadata.INavigation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.INavigation
    name: INavigation
    nameWithType: INavigation
    fullName: Microsoft.EntityFrameworkCore.Metadata.INavigation
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.Internal.IRelatedEntitiesLoader}
  commentId: T:System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.Internal.IRelatedEntitiesLoader}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<IRelatedEntitiesLoader>
  nameWithType: IReadOnlyList<IRelatedEntitiesLoader>
  fullName: System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Query.Internal.IRelatedEntitiesLoader>
  nameWithType.vb: IReadOnlyList(Of IRelatedEntitiesLoader)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Query.Internal.IRelatedEntitiesLoader)
  name.vb: IReadOnlyList(Of IRelatedEntitiesLoader)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Query.Internal.IRelatedEntitiesLoader
    name: IRelatedEntitiesLoader
    nameWithType: IRelatedEntitiesLoader
    fullName: Microsoft.EntityFrameworkCore.Query.Internal.IRelatedEntitiesLoader
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Query.Internal.IRelatedEntitiesLoader
    name: IRelatedEntitiesLoader
    nameWithType: IRelatedEntitiesLoader
    fullName: Microsoft.EntityFrameworkCore.Query.Internal.IRelatedEntitiesLoader
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.IncludeAsync(Microsoft.EntityFrameworkCore.Query.QueryContext,System.Object,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.Internal.IAsyncRelatedEntitiesLoader},System.Boolean,System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.IncludeAsync(Microsoft.EntityFrameworkCore.Query.QueryContext,System.Object,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.Internal.IAsyncRelatedEntitiesLoader},System.Boolean,System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer
  isExternal: true
  name: IncludeAsync(QueryContext, Object, IReadOnlyList<INavigation>, IReadOnlyList<IAsyncRelatedEntitiesLoader>, Boolean, CancellationToken)
  nameWithType: IQueryBuffer.IncludeAsync(QueryContext, Object, IReadOnlyList<INavigation>, IReadOnlyList<IAsyncRelatedEntitiesLoader>, Boolean, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.IncludeAsync(Microsoft.EntityFrameworkCore.Query.QueryContext, System.Object, System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Metadata.INavigation>, System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Query.Internal.IAsyncRelatedEntitiesLoader>, System.Boolean, System.Threading.CancellationToken)
  nameWithType.vb: IQueryBuffer.IncludeAsync(QueryContext, Object, IReadOnlyList(Of INavigation), IReadOnlyList(Of IAsyncRelatedEntitiesLoader), Boolean, CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.IncludeAsync(Microsoft.EntityFrameworkCore.Query.QueryContext, System.Object, System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Metadata.INavigation), System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Query.Internal.IAsyncRelatedEntitiesLoader), System.Boolean, System.Threading.CancellationToken)
  name.vb: IncludeAsync(QueryContext, Object, IReadOnlyList(Of INavigation), IReadOnlyList(Of IAsyncRelatedEntitiesLoader), Boolean, CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.IncludeAsync(Microsoft.EntityFrameworkCore.Query.QueryContext,System.Object,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.Internal.IAsyncRelatedEntitiesLoader},System.Boolean,System.Threading.CancellationToken)
    name: IncludeAsync
    nameWithType: IQueryBuffer.IncludeAsync
    fullName: Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.IncludeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Query.QueryContext
    name: QueryContext
    nameWithType: QueryContext
    fullName: Microsoft.EntityFrameworkCore.Query.QueryContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.INavigation
    name: INavigation
    nameWithType: INavigation
    fullName: Microsoft.EntityFrameworkCore.Metadata.INavigation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Query.Internal.IAsyncRelatedEntitiesLoader
    name: IAsyncRelatedEntitiesLoader
    nameWithType: IAsyncRelatedEntitiesLoader
    fullName: Microsoft.EntityFrameworkCore.Query.Internal.IAsyncRelatedEntitiesLoader
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.IncludeAsync(Microsoft.EntityFrameworkCore.Query.QueryContext,System.Object,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.Internal.IAsyncRelatedEntitiesLoader},System.Boolean,System.Threading.CancellationToken)
    name: IncludeAsync
    nameWithType: IQueryBuffer.IncludeAsync
    fullName: Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.IncludeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Query.QueryContext
    name: QueryContext
    nameWithType: QueryContext
    fullName: Microsoft.EntityFrameworkCore.Query.QueryContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.INavigation
    name: INavigation
    nameWithType: INavigation
    fullName: Microsoft.EntityFrameworkCore.Metadata.INavigation
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Query.Internal.IAsyncRelatedEntitiesLoader
    name: IAsyncRelatedEntitiesLoader
    nameWithType: IAsyncRelatedEntitiesLoader
    fullName: Microsoft.EntityFrameworkCore.Query.Internal.IAsyncRelatedEntitiesLoader
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.Internal.IAsyncRelatedEntitiesLoader}
  commentId: T:System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.Internal.IAsyncRelatedEntitiesLoader}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<IAsyncRelatedEntitiesLoader>
  nameWithType: IReadOnlyList<IAsyncRelatedEntitiesLoader>
  fullName: System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Query.Internal.IAsyncRelatedEntitiesLoader>
  nameWithType.vb: IReadOnlyList(Of IAsyncRelatedEntitiesLoader)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Query.Internal.IAsyncRelatedEntitiesLoader)
  name.vb: IReadOnlyList(Of IAsyncRelatedEntitiesLoader)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Query.Internal.IAsyncRelatedEntitiesLoader
    name: IAsyncRelatedEntitiesLoader
    nameWithType: IAsyncRelatedEntitiesLoader
    fullName: Microsoft.EntityFrameworkCore.Query.Internal.IAsyncRelatedEntitiesLoader
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Query.Internal.IAsyncRelatedEntitiesLoader
    name: IAsyncRelatedEntitiesLoader
    nameWithType: IAsyncRelatedEntitiesLoader
    fullName: Microsoft.EntityFrameworkCore.Query.Internal.IAsyncRelatedEntitiesLoader
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
