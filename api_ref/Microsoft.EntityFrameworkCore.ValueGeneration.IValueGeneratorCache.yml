### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.ValueGeneration.IValueGeneratorCache
  commentId: T:Microsoft.EntityFrameworkCore.ValueGeneration.IValueGeneratorCache
  id: IValueGeneratorCache
  parent: Microsoft.EntityFrameworkCore.ValueGeneration
  children:
  - Microsoft.EntityFrameworkCore.ValueGeneration.IValueGeneratorCache.GetOrAdd(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Func{Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator})
  langs:
  - csharp
  - vb
  name: IValueGeneratorCache
  nameWithType: IValueGeneratorCache
  fullName: Microsoft.EntityFrameworkCore.ValueGeneration.IValueGeneratorCache
  type: Interface
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ValueGeneration/IValueGeneratorCache.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: IValueGeneratorCache
    path: src/Microsoft.EntityFrameworkCore/ValueGeneration/IValueGeneratorCache.cs
    startLine: 18
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ValueGeneration
  summary: "\n<p>\n    Keeps a cache of value generators for properties.\n</p>\n<p>\n    This type is typically used by database providers (and other extensions). It is generally\n    not used in application code.\n</p>\n"
  example: []
  syntax:
    content: public interface IValueGeneratorCache
    content.vb: Public Interface IValueGeneratorCache
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.EntityFrameworkCore.ValueGeneration.IValueGeneratorCache.GetOrAdd(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Func{Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator})
  commentId: M:Microsoft.EntityFrameworkCore.ValueGeneration.IValueGeneratorCache.GetOrAdd(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Func{Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator})
  id: GetOrAdd(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Func{Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator})
  parent: Microsoft.EntityFrameworkCore.ValueGeneration.IValueGeneratorCache
  langs:
  - csharp
  - vb
  name: GetOrAdd(IProperty, IEntityType, Func<IProperty, IEntityType, ValueGenerator>)
  nameWithType: IValueGeneratorCache.GetOrAdd(IProperty, IEntityType, Func<IProperty, IEntityType, ValueGenerator>)
  fullName: Microsoft.EntityFrameworkCore.ValueGeneration.IValueGeneratorCache.GetOrAdd(Microsoft.EntityFrameworkCore.Metadata.IProperty, Microsoft.EntityFrameworkCore.Metadata.IEntityType, System.Func<Microsoft.EntityFrameworkCore.Metadata.IProperty, Microsoft.EntityFrameworkCore.Metadata.IEntityType, Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/ValueGeneration/IValueGeneratorCache.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetOrAdd
    path: src/Microsoft.EntityFrameworkCore/ValueGeneration/IValueGeneratorCache.cs
    startLine: 31
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.ValueGeneration
  summary: "\nGets the existing value generator from the cache, or creates a new one if one is not present in\nthe cache.\n"
  example: []
  syntax:
    content: ValueGenerator GetOrAdd(IProperty property, IEntityType entityType, Func<IProperty, IEntityType, ValueGenerator> factory)
    content.vb: Function GetOrAdd(property As IProperty, entityType As IEntityType, factory As Func(Of IProperty, IEntityType, ValueGenerator)) As ValueGenerator
    parameters:
    - id: property
      type: Microsoft.EntityFrameworkCore.Metadata.IProperty
      description: 'The property to get the value generator for. '
    - id: entityType
      type: Microsoft.EntityFrameworkCore.Metadata.IEntityType
      description: "\nThe entity type that the value generator will be used for. When called on inherited properties on derived entity types,\nthis entity type may be different from the declared entity type on <em>property</em>\n"
    - id: factory
      type: System.Func{Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator}
      description: 'Factory to create a new value generator if one is not present in the cache. '
    return:
      type: Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator
      description: 'The existing or newly created value generator. '
  overload: Microsoft.EntityFrameworkCore.ValueGeneration.IValueGeneratorCache.GetOrAdd*
  nameWithType.vb: IValueGeneratorCache.GetOrAdd(IProperty, IEntityType, Func(Of IProperty, IEntityType, ValueGenerator))
  fullName.vb: Microsoft.EntityFrameworkCore.ValueGeneration.IValueGeneratorCache.GetOrAdd(Microsoft.EntityFrameworkCore.Metadata.IProperty, Microsoft.EntityFrameworkCore.Metadata.IEntityType, System.Func(Of Microsoft.EntityFrameworkCore.Metadata.IProperty, Microsoft.EntityFrameworkCore.Metadata.IEntityType, Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator))
  name.vb: GetOrAdd(IProperty, IEntityType, Func(Of IProperty, IEntityType, ValueGenerator))
references:
- uid: Microsoft.EntityFrameworkCore.ValueGeneration
  commentId: N:Microsoft.EntityFrameworkCore.ValueGeneration
  isExternal: false
  name: Microsoft.EntityFrameworkCore.ValueGeneration
  nameWithType: Microsoft.EntityFrameworkCore.ValueGeneration
  fullName: Microsoft.EntityFrameworkCore.ValueGeneration
- uid: Microsoft.EntityFrameworkCore.ValueGeneration.IValueGeneratorCache.GetOrAdd*
  commentId: Overload:Microsoft.EntityFrameworkCore.ValueGeneration.IValueGeneratorCache.GetOrAdd
  isExternal: false
  name: GetOrAdd
  nameWithType: IValueGeneratorCache.GetOrAdd
  fullName: Microsoft.EntityFrameworkCore.ValueGeneration.IValueGeneratorCache.GetOrAdd
- uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IProperty
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IProperty
  nameWithType: IProperty
  fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
- uid: Microsoft.EntityFrameworkCore.Metadata.IEntityType
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IEntityType
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IEntityType
  nameWithType: IEntityType
  fullName: Microsoft.EntityFrameworkCore.Metadata.IEntityType
- uid: System.Func{Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator}
  commentId: T:System.Func{Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator}
  parent: System
  definition: System.Func`3
  name: Func<IProperty, IEntityType, ValueGenerator>
  nameWithType: Func<IProperty, IEntityType, ValueGenerator>
  fullName: System.Func<Microsoft.EntityFrameworkCore.Metadata.IProperty, Microsoft.EntityFrameworkCore.Metadata.IEntityType, Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator>
  nameWithType.vb: Func(Of IProperty, IEntityType, ValueGenerator)
  fullname.vb: System.Func(Of Microsoft.EntityFrameworkCore.Metadata.IProperty, Microsoft.EntityFrameworkCore.Metadata.IEntityType, Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator)
  name.vb: Func(Of IProperty, IEntityType, ValueGenerator)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
    name: IProperty
    nameWithType: IProperty
    fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IEntityType
    name: IEntityType
    nameWithType: IEntityType
    fullName: Microsoft.EntityFrameworkCore.Metadata.IEntityType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator
    name: ValueGenerator
    nameWithType: ValueGenerator
    fullName: Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
    name: IProperty
    nameWithType: IProperty
    fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IEntityType
    name: IEntityType
    nameWithType: IEntityType
    fullName: Microsoft.EntityFrameworkCore.Metadata.IEntityType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator
    name: ValueGenerator
    nameWithType: ValueGenerator
    fullName: Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator
  commentId: T:Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator
  parent: Microsoft.EntityFrameworkCore.ValueGeneration
  isExternal: false
  name: ValueGenerator
  nameWithType: ValueGenerator
  fullName: Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullname.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
