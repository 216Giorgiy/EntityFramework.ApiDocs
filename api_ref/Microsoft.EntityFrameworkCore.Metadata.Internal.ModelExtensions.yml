### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ModelExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.ModelExtensions
  id: ModelExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  children:
  - Microsoft.EntityFrameworkCore.Metadata.Internal.ModelExtensions.AsModel(Microsoft.EntityFrameworkCore.Metadata.IModel,System.String)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.ModelExtensions.GetProductVersion(Microsoft.EntityFrameworkCore.Metadata.IModel)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.ModelExtensions.GetRootEntityTypes(Microsoft.EntityFrameworkCore.Metadata.IModel)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.ModelExtensions.SetProductVersion(Microsoft.EntityFrameworkCore.Metadata.Internal.Model,System.String)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.ModelExtensions.ToDebugString(Microsoft.EntityFrameworkCore.Metadata.IModel,System.String)
  langs:
  - csharp
  - vb
  name: ModelExtensions
  nameWithType: ModelExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ModelExtensions
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ModelExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ModelExtensions
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ModelExtensions.cs
    startLine: 15
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public static class ModelExtensions
    content.vb: Public Module ModelExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ModelExtensions.GetProductVersion(Microsoft.EntityFrameworkCore.Metadata.IModel)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.ModelExtensions.GetProductVersion(Microsoft.EntityFrameworkCore.Metadata.IModel)
  id: GetProductVersion(Microsoft.EntityFrameworkCore.Metadata.IModel)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.ModelExtensions
  langs:
  - csharp
  - vb
  name: GetProductVersion(IModel)
  nameWithType: ModelExtensions.GetProductVersion(IModel)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ModelExtensions.GetProductVersion(Microsoft.EntityFrameworkCore.Metadata.IModel)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ModelExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetProductVersion
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ModelExtensions.cs
    startLine: 21
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public static string GetProductVersion(this IModel model)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetProductVersion(model As IModel) As String
    parameters:
    - id: model
      type: Microsoft.EntityFrameworkCore.Metadata.IModel
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.ModelExtensions.GetProductVersion*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ModelExtensions.SetProductVersion(Microsoft.EntityFrameworkCore.Metadata.Internal.Model,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.ModelExtensions.SetProductVersion(Microsoft.EntityFrameworkCore.Metadata.Internal.Model,System.String)
  id: SetProductVersion(Microsoft.EntityFrameworkCore.Metadata.Internal.Model,System.String)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.ModelExtensions
  langs:
  - csharp
  - vb
  name: SetProductVersion(Model, String)
  nameWithType: ModelExtensions.SetProductVersion(Model, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ModelExtensions.SetProductVersion(Microsoft.EntityFrameworkCore.Metadata.Internal.Model, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ModelExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: SetProductVersion
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ModelExtensions.cs
    startLine: 28
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public static void SetProductVersion(this Model model, string value)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub SetProductVersion(model As Model, value As String)
    parameters:
    - id: model
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.Model
    - id: value
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.ModelExtensions.SetProductVersion*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ModelExtensions.GetRootEntityTypes(Microsoft.EntityFrameworkCore.Metadata.IModel)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.ModelExtensions.GetRootEntityTypes(Microsoft.EntityFrameworkCore.Metadata.IModel)
  id: GetRootEntityTypes(Microsoft.EntityFrameworkCore.Metadata.IModel)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.ModelExtensions
  langs:
  - csharp
  - vb
  name: GetRootEntityTypes(IModel)
  nameWithType: ModelExtensions.GetRootEntityTypes(IModel)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ModelExtensions.GetRootEntityTypes(Microsoft.EntityFrameworkCore.Metadata.IModel)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ModelExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetRootEntityTypes
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ModelExtensions.cs
    startLine: 35
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public static IEnumerable<IEntityType> GetRootEntityTypes(this IModel model)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetRootEntityTypes(model As IModel) As IEnumerable(Of IEntityType)
    parameters:
    - id: model
      type: Microsoft.EntityFrameworkCore.Metadata.IModel
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IEntityType}
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.ModelExtensions.GetRootEntityTypes*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ModelExtensions.ToDebugString(Microsoft.EntityFrameworkCore.Metadata.IModel,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.ModelExtensions.ToDebugString(Microsoft.EntityFrameworkCore.Metadata.IModel,System.String)
  id: ToDebugString(Microsoft.EntityFrameworkCore.Metadata.IModel,System.String)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.ModelExtensions
  langs:
  - csharp
  - vb
  name: ToDebugString(IModel, String)
  nameWithType: ModelExtensions.ToDebugString(IModel, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ModelExtensions.ToDebugString(Microsoft.EntityFrameworkCore.Metadata.IModel, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ModelExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ToDebugString
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ModelExtensions.cs
    startLine: 42
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public static string ToDebugString(this IModel model, string indent = "")
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToDebugString(model As IModel, indent As String = "") As String
    parameters:
    - id: model
      type: Microsoft.EntityFrameworkCore.Metadata.IModel
    - id: indent
      type: System.String
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.ModelExtensions.ToDebugString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ModelExtensions.AsModel(Microsoft.EntityFrameworkCore.Metadata.IModel,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.ModelExtensions.AsModel(Microsoft.EntityFrameworkCore.Metadata.IModel,System.String)
  id: AsModel(Microsoft.EntityFrameworkCore.Metadata.IModel,System.String)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.ModelExtensions
  langs:
  - csharp
  - vb
  name: AsModel(IModel, String)
  nameWithType: ModelExtensions.AsModel(IModel, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ModelExtensions.AsModel(Microsoft.EntityFrameworkCore.Metadata.IModel, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ModelExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AsModel
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ModelExtensions.cs
    startLine: 73
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public static Model AsModel(this IModel model, string methodName = "")
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AsModel(model As IModel, methodName As String = "") As Model
    parameters:
    - id: model
      type: Microsoft.EntityFrameworkCore.Metadata.IModel
    - id: methodName
      type: System.String
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.Model
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.ModelExtensions.AsModel*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ModelExtensions.GetProductVersion*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Internal.ModelExtensions.GetProductVersion
  isExternal: false
  name: GetProductVersion
  nameWithType: ModelExtensions.GetProductVersion
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ModelExtensions.GetProductVersion
- uid: Microsoft.EntityFrameworkCore.Metadata.IModel
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IModel
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IModel
  nameWithType: IModel
  fullName: Microsoft.EntityFrameworkCore.Metadata.IModel
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ModelExtensions.SetProductVersion*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Internal.ModelExtensions.SetProductVersion
  isExternal: false
  name: SetProductVersion
  nameWithType: ModelExtensions.SetProductVersion
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ModelExtensions.SetProductVersion
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.Model
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.Model
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Model
  nameWithType: Model
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.Model
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ModelExtensions.GetRootEntityTypes*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Internal.ModelExtensions.GetRootEntityTypes
  isExternal: false
  name: GetRootEntityTypes
  nameWithType: ModelExtensions.GetRootEntityTypes
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ModelExtensions.GetRootEntityTypes
- uid: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IEntityType}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IEntityType}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IEntityType>
  nameWithType: IEnumerable<IEntityType>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Metadata.IEntityType>
  nameWithType.vb: IEnumerable(Of IEntityType)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  name.vb: IEnumerable(Of IEntityType)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.IEntityType
    name: IEntityType
    nameWithType: IEntityType
    fullName: Microsoft.EntityFrameworkCore.Metadata.IEntityType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IEntityType
    name: IEntityType
    nameWithType: IEntityType
    fullName: Microsoft.EntityFrameworkCore.Metadata.IEntityType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ModelExtensions.ToDebugString*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Internal.ModelExtensions.ToDebugString
  isExternal: false
  name: ToDebugString
  nameWithType: ModelExtensions.ToDebugString
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ModelExtensions.ToDebugString
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ModelExtensions.AsModel*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Internal.ModelExtensions.AsModel
  isExternal: false
  name: AsModel
  nameWithType: ModelExtensions.AsModel
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ModelExtensions.AsModel
