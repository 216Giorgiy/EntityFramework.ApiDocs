### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Query.Internal.InMemoryQueryContext
  commentId: T:Microsoft.EntityFrameworkCore.Query.Internal.InMemoryQueryContext
  id: InMemoryQueryContext
  parent: Microsoft.EntityFrameworkCore.Query.Internal
  children:
  - Microsoft.EntityFrameworkCore.Query.Internal.InMemoryQueryContext.#ctor(System.Func{Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer},Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStore,Microsoft.EntityFrameworkCore.Internal.LazyRef{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager},Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector)
  - Microsoft.EntityFrameworkCore.Query.Internal.InMemoryQueryContext.Store
  langs:
  - csharp
  - vb
  name: InMemoryQueryContext
  nameWithType: InMemoryQueryContext
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.InMemoryQueryContext
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.InMemory/Query/Internal/InMemoryQueryContext.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: InMemoryQueryContext
    path: src/Microsoft.EntityFrameworkCore.InMemory/Query/Internal/InMemoryQueryContext.cs
    startLine: 16
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public class InMemoryQueryContext : QueryContext'
    content.vb: >-
      Public Class InMemoryQueryContext
          Inherits QueryContext
  inheritance:
  - System.Object
  - Microsoft.EntityFrameworkCore.Query.QueryContext
  inheritedMembers:
  - Microsoft.EntityFrameworkCore.Query.QueryContext.QueryBuffer
  - Microsoft.EntityFrameworkCore.Query.QueryContext.StateManager
  - Microsoft.EntityFrameworkCore.Query.QueryContext.QueryProvider
  - Microsoft.EntityFrameworkCore.Query.QueryContext.ConcurrencyDetector
  - Microsoft.EntityFrameworkCore.Query.QueryContext.CancellationToken
  - Microsoft.EntityFrameworkCore.Query.QueryContext.ParameterValues
  - Microsoft.EntityFrameworkCore.Query.QueryContext.AddParameter(System.String,System.Object)
  - Microsoft.EntityFrameworkCore.Query.QueryContext.RemoveParameter(System.String)
  - Microsoft.EntityFrameworkCore.Query.QueryContext.BeginTrackingQuery
  - Microsoft.EntityFrameworkCore.Query.QueryContext.StartTracking(System.Object,Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Query.Internal.InMemoryQueryContext.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Query.Internal.InMemoryQueryContext.#ctor(System.Func{Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer},Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStore,Microsoft.EntityFrameworkCore.Internal.LazyRef{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager},Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.InMemoryQueryContext.#ctor(System.Func{Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer},Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStore,Microsoft.EntityFrameworkCore.Internal.LazyRef{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager},Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector)
  id: '#ctor(System.Func{Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer},Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStore,Microsoft.EntityFrameworkCore.Internal.LazyRef{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager},Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector)'
  parent: Microsoft.EntityFrameworkCore.Query.Internal.InMemoryQueryContext
  langs:
  - csharp
  - vb
  name: InMemoryQueryContext(Func<IQueryBuffer>, IInMemoryStore, LazyRef<IStateManager>, IConcurrencyDetector)
  nameWithType: InMemoryQueryContext.InMemoryQueryContext(Func<IQueryBuffer>, IInMemoryStore, LazyRef<IStateManager>, IConcurrencyDetector)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.InMemoryQueryContext.InMemoryQueryContext(System.Func<Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer>, Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStore, Microsoft.EntityFrameworkCore.Internal.LazyRef<Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager>, Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.InMemory/Query/Internal/InMemoryQueryContext.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.InMemory/Query/Internal/InMemoryQueryContext.cs
    startLine: 22
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public InMemoryQueryContext(Func<IQueryBuffer> queryBufferFactory, IInMemoryStore store, LazyRef<IStateManager> stateManager, IConcurrencyDetector concurrencyDetector)
    content.vb: Public Sub New(queryBufferFactory As Func(Of IQueryBuffer), store As IInMemoryStore, stateManager As LazyRef(Of IStateManager), concurrencyDetector As IConcurrencyDetector)
    parameters:
    - id: queryBufferFactory
      type: System.Func{Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer}
    - id: store
      type: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStore
    - id: stateManager
      type: Microsoft.EntityFrameworkCore.Internal.LazyRef{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager}
    - id: concurrencyDetector
      type: Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector
  nameWithType.vb: InMemoryQueryContext.InMemoryQueryContext(Func(Of IQueryBuffer), IInMemoryStore, LazyRef(Of IStateManager), IConcurrencyDetector)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Query.Internal.InMemoryQueryContext.InMemoryQueryContext(System.Func(Of Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer), Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStore, Microsoft.EntityFrameworkCore.Internal.LazyRef(Of Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager), Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector)
  name.vb: InMemoryQueryContext(Func(Of IQueryBuffer), IInMemoryStore, LazyRef(Of IStateManager), IConcurrencyDetector)
- uid: Microsoft.EntityFrameworkCore.Query.Internal.InMemoryQueryContext.Store
  commentId: P:Microsoft.EntityFrameworkCore.Query.Internal.InMemoryQueryContext.Store
  id: Store
  parent: Microsoft.EntityFrameworkCore.Query.Internal.InMemoryQueryContext
  langs:
  - csharp
  - vb
  name: Store
  nameWithType: InMemoryQueryContext.Store
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.InMemoryQueryContext.Store
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.InMemory/Query/Internal/InMemoryQueryContext.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Store
    path: src/Microsoft.EntityFrameworkCore.InMemory/Query/Internal/InMemoryQueryContext.cs
    startLine: 39
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual IInMemoryStore Store { get; }
    content.vb: Public Overridable ReadOnly Property Store As IInMemoryStore
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStore
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
references:
- uid: Microsoft.EntityFrameworkCore.Query.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Query.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Query.Internal
  fullName: Microsoft.EntityFrameworkCore.Query.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Query.QueryContext
  commentId: T:Microsoft.EntityFrameworkCore.Query.QueryContext
  parent: Microsoft.EntityFrameworkCore.Query
  isExternal: false
  name: QueryContext
  nameWithType: QueryContext
  fullName: Microsoft.EntityFrameworkCore.Query.QueryContext
- uid: Microsoft.EntityFrameworkCore.Query.QueryContext.QueryBuffer
  commentId: P:Microsoft.EntityFrameworkCore.Query.QueryContext.QueryBuffer
  parent: Microsoft.EntityFrameworkCore.Query.QueryContext
  isExternal: false
  name: QueryBuffer
  nameWithType: QueryContext.QueryBuffer
  fullName: Microsoft.EntityFrameworkCore.Query.QueryContext.QueryBuffer
- uid: Microsoft.EntityFrameworkCore.Query.QueryContext.StateManager
  commentId: P:Microsoft.EntityFrameworkCore.Query.QueryContext.StateManager
  parent: Microsoft.EntityFrameworkCore.Query.QueryContext
  isExternal: false
  name: StateManager
  nameWithType: QueryContext.StateManager
  fullName: Microsoft.EntityFrameworkCore.Query.QueryContext.StateManager
- uid: Microsoft.EntityFrameworkCore.Query.QueryContext.QueryProvider
  commentId: P:Microsoft.EntityFrameworkCore.Query.QueryContext.QueryProvider
  parent: Microsoft.EntityFrameworkCore.Query.QueryContext
  isExternal: false
  name: QueryProvider
  nameWithType: QueryContext.QueryProvider
  fullName: Microsoft.EntityFrameworkCore.Query.QueryContext.QueryProvider
- uid: Microsoft.EntityFrameworkCore.Query.QueryContext.ConcurrencyDetector
  commentId: P:Microsoft.EntityFrameworkCore.Query.QueryContext.ConcurrencyDetector
  parent: Microsoft.EntityFrameworkCore.Query.QueryContext
  isExternal: false
  name: ConcurrencyDetector
  nameWithType: QueryContext.ConcurrencyDetector
  fullName: Microsoft.EntityFrameworkCore.Query.QueryContext.ConcurrencyDetector
- uid: Microsoft.EntityFrameworkCore.Query.QueryContext.CancellationToken
  commentId: P:Microsoft.EntityFrameworkCore.Query.QueryContext.CancellationToken
  parent: Microsoft.EntityFrameworkCore.Query.QueryContext
  isExternal: false
  name: CancellationToken
  nameWithType: QueryContext.CancellationToken
  fullName: Microsoft.EntityFrameworkCore.Query.QueryContext.CancellationToken
- uid: Microsoft.EntityFrameworkCore.Query.QueryContext.ParameterValues
  commentId: P:Microsoft.EntityFrameworkCore.Query.QueryContext.ParameterValues
  parent: Microsoft.EntityFrameworkCore.Query.QueryContext
  isExternal: false
  name: ParameterValues
  nameWithType: QueryContext.ParameterValues
  fullName: Microsoft.EntityFrameworkCore.Query.QueryContext.ParameterValues
- uid: Microsoft.EntityFrameworkCore.Query.QueryContext.AddParameter(System.String,System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Query.QueryContext.AddParameter(System.String,System.Object)
  parent: Microsoft.EntityFrameworkCore.Query.QueryContext
  isExternal: true
  name: AddParameter(String, Object)
  nameWithType: QueryContext.AddParameter(String, Object)
  fullName: Microsoft.EntityFrameworkCore.Query.QueryContext.AddParameter(System.String, System.Object)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.QueryContext.AddParameter(System.String,System.Object)
    name: AddParameter
    nameWithType: QueryContext.AddParameter
    fullName: Microsoft.EntityFrameworkCore.Query.QueryContext.AddParameter
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.QueryContext.AddParameter(System.String,System.Object)
    name: AddParameter
    nameWithType: QueryContext.AddParameter
    fullName: Microsoft.EntityFrameworkCore.Query.QueryContext.AddParameter
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.QueryContext.RemoveParameter(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Query.QueryContext.RemoveParameter(System.String)
  parent: Microsoft.EntityFrameworkCore.Query.QueryContext
  isExternal: true
  name: RemoveParameter(String)
  nameWithType: QueryContext.RemoveParameter(String)
  fullName: Microsoft.EntityFrameworkCore.Query.QueryContext.RemoveParameter(System.String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.QueryContext.RemoveParameter(System.String)
    name: RemoveParameter
    nameWithType: QueryContext.RemoveParameter
    fullName: Microsoft.EntityFrameworkCore.Query.QueryContext.RemoveParameter
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.QueryContext.RemoveParameter(System.String)
    name: RemoveParameter
    nameWithType: QueryContext.RemoveParameter
    fullName: Microsoft.EntityFrameworkCore.Query.QueryContext.RemoveParameter
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.QueryContext.BeginTrackingQuery
  commentId: M:Microsoft.EntityFrameworkCore.Query.QueryContext.BeginTrackingQuery
  parent: Microsoft.EntityFrameworkCore.Query.QueryContext
  isExternal: false
  name: BeginTrackingQuery()
  nameWithType: QueryContext.BeginTrackingQuery()
  fullName: Microsoft.EntityFrameworkCore.Query.QueryContext.BeginTrackingQuery()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.QueryContext.BeginTrackingQuery
    name: BeginTrackingQuery
    nameWithType: QueryContext.BeginTrackingQuery
    fullName: Microsoft.EntityFrameworkCore.Query.QueryContext.BeginTrackingQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.QueryContext.BeginTrackingQuery
    name: BeginTrackingQuery
    nameWithType: QueryContext.BeginTrackingQuery
    fullName: Microsoft.EntityFrameworkCore.Query.QueryContext.BeginTrackingQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.QueryContext.StartTracking(System.Object,Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo)
  commentId: M:Microsoft.EntityFrameworkCore.Query.QueryContext.StartTracking(System.Object,Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo)
  parent: Microsoft.EntityFrameworkCore.Query.QueryContext
  isExternal: true
  name: StartTracking(Object, EntityTrackingInfo)
  nameWithType: QueryContext.StartTracking(Object, EntityTrackingInfo)
  fullName: Microsoft.EntityFrameworkCore.Query.QueryContext.StartTracking(System.Object, Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.QueryContext.StartTracking(System.Object,Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo)
    name: StartTracking
    nameWithType: QueryContext.StartTracking
    fullName: Microsoft.EntityFrameworkCore.Query.QueryContext.StartTracking
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo
    name: EntityTrackingInfo
    nameWithType: EntityTrackingInfo
    fullName: Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.QueryContext.StartTracking(System.Object,Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo)
    name: StartTracking
    nameWithType: QueryContext.StartTracking
    fullName: Microsoft.EntityFrameworkCore.Query.QueryContext.StartTracking
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo
    name: EntityTrackingInfo
    nameWithType: EntityTrackingInfo
    fullName: Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.Internal.InMemoryQueryContext.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<InMemoryQueryContext, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<InMemoryQueryContext, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Query.Internal.InMemoryQueryContext, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of InMemoryQueryContext, TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Query.Internal.InMemoryQueryContext, TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of InMemoryQueryContext, TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<InMemoryQueryContext, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<InMemoryQueryContext, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Query.Internal.InMemoryQueryContext, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of InMemoryQueryContext, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of InMemoryQueryContext, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Query.Internal.InMemoryQueryContext, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Query
  commentId: N:Microsoft.EntityFrameworkCore.Query
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query
  nameWithType: Microsoft.EntityFrameworkCore.Query
  fullName: Microsoft.EntityFrameworkCore.Query
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: System.Func{Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer}
  commentId: T:System.Func{Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer}
  parent: System
  definition: System.Func`1
  name: Func<IQueryBuffer>
  nameWithType: Func<IQueryBuffer>
  fullName: System.Func<Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer>
  nameWithType.vb: Func(Of IQueryBuffer)
  fullname.vb: System.Func(Of Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer)
  name.vb: Func(Of IQueryBuffer)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer
    name: IQueryBuffer
    nameWithType: IQueryBuffer
    fullName: Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer
    name: IQueryBuffer
    nameWithType: IQueryBuffer
    fullName: Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStore
  commentId: T:Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStore
  parent: Microsoft.EntityFrameworkCore.Storage.Internal
  isExternal: false
  name: IInMemoryStore
  nameWithType: IInMemoryStore
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStore
- uid: Microsoft.EntityFrameworkCore.Internal.LazyRef{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager}
  commentId: T:Microsoft.EntityFrameworkCore.Internal.LazyRef{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager}
  parent: Microsoft.EntityFrameworkCore.Internal
  definition: Microsoft.EntityFrameworkCore.Internal.LazyRef`1
  name: LazyRef<IStateManager>
  nameWithType: LazyRef<IStateManager>
  fullName: Microsoft.EntityFrameworkCore.Internal.LazyRef<Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager>
  nameWithType.vb: LazyRef(Of IStateManager)
  fullname.vb: Microsoft.EntityFrameworkCore.Internal.LazyRef(Of Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager)
  name.vb: LazyRef(Of IStateManager)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Internal.LazyRef`1
    name: LazyRef
    nameWithType: LazyRef
    fullName: Microsoft.EntityFrameworkCore.Internal.LazyRef
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager
    name: IStateManager
    nameWithType: IStateManager
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Internal.LazyRef`1
    name: LazyRef
    nameWithType: LazyRef
    fullName: Microsoft.EntityFrameworkCore.Internal.LazyRef
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager
    name: IStateManager
    nameWithType: IStateManager
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector
  commentId: T:Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector
  parent: Microsoft.EntityFrameworkCore.Internal
  isExternal: false
  name: IConcurrencyDetector
  nameWithType: IConcurrencyDetector
  fullName: Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullname.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Storage.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Storage.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Storage.Internal
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal
- uid: Microsoft.EntityFrameworkCore.Internal.LazyRef`1
  commentId: T:Microsoft.EntityFrameworkCore.Internal.LazyRef`1
  isExternal: false
  name: LazyRef<T>
  nameWithType: LazyRef<T>
  fullName: Microsoft.EntityFrameworkCore.Internal.LazyRef<T>
  nameWithType.vb: LazyRef(Of T)
  fullname.vb: Microsoft.EntityFrameworkCore.Internal.LazyRef(Of T)
  name.vb: LazyRef(Of T)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Internal.LazyRef`1
    name: LazyRef
    nameWithType: LazyRef
    fullName: Microsoft.EntityFrameworkCore.Internal.LazyRef
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Internal.LazyRef`1
    name: LazyRef
    nameWithType: LazyRef
    fullName: Microsoft.EntityFrameworkCore.Internal.LazyRef
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Internal
  fullName: Microsoft.EntityFrameworkCore.Internal
