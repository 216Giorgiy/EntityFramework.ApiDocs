### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIdentity
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIdentity
  id: PropertyIdentity
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  children:
  - Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIdentity.#ctor(System.Reflection.PropertyInfo)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIdentity.#ctor(System.String)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIdentity.Create(Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIdentity.Create(System.Reflection.PropertyInfo)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIdentity.Create(System.String)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIdentity.IsNone
  - Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIdentity.Name
  - Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIdentity.None
  - Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIdentity.Property
  langs:
  - csharp
  - vb
  name: PropertyIdentity
  nameWithType: PropertyIdentity
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIdentity
  type: Struct
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/PropertyIdentity.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: PropertyIdentity
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/PropertyIdentity.cs
    startLine: 13
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public struct PropertyIdentity
    content.vb: Public Structure PropertyIdentity
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIdentity.#ctor(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIdentity.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIdentity
  langs:
  - csharp
  - vb
  name: PropertyIdentity(String)
  nameWithType: PropertyIdentity.PropertyIdentity(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIdentity.PropertyIdentity(System.String)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/PropertyIdentity.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/PropertyIdentity.cs
    startLine: 22
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public PropertyIdentity(string name)
    content.vb: Public Sub New(name As String)
    parameters:
    - id: name
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIdentity.#ctor(System.Reflection.PropertyInfo)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIdentity.#ctor(System.Reflection.PropertyInfo)
  id: '#ctor(System.Reflection.PropertyInfo)'
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIdentity
  langs:
  - csharp
  - vb
  name: PropertyIdentity(PropertyInfo)
  nameWithType: PropertyIdentity.PropertyIdentity(PropertyInfo)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIdentity.PropertyIdentity(System.Reflection.PropertyInfo)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/PropertyIdentity.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/PropertyIdentity.cs
    startLine: 31
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public PropertyIdentity(PropertyInfo property)
    content.vb: Public Sub New(property As PropertyInfo)
    parameters:
    - id: property
      type: System.Reflection.PropertyInfo
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIdentity.IsNone
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIdentity.IsNone
  id: IsNone
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIdentity
  langs:
  - csharp
  - vb
  name: IsNone()
  nameWithType: PropertyIdentity.IsNone()
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIdentity.IsNone()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/PropertyIdentity.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: IsNone
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/PropertyIdentity.cs
    startLine: 45
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public bool IsNone()
    content.vb: Public Function IsNone As Boolean
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIdentity.None
  commentId: F:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIdentity.None
  id: None
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIdentity
  langs:
  - csharp
  - vb
  name: None
  nameWithType: PropertyIdentity.None
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIdentity.None
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/PropertyIdentity.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: None
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/PropertyIdentity.cs
    startLine: 51
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public static readonly PropertyIdentity None
    content.vb: Public Shared ReadOnly None As PropertyIdentity
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIdentity
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIdentity.Create(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIdentity.Create(System.String)
  id: Create(System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIdentity
  langs:
  - csharp
  - vb
  name: Create(String)
  nameWithType: PropertyIdentity.Create(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIdentity.Create(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/PropertyIdentity.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Create
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/PropertyIdentity.cs
    startLine: 57
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public static PropertyIdentity Create(string name)
    content.vb: Public Shared Function Create(name As String) As PropertyIdentity
    parameters:
    - id: name
      type: System.String
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIdentity
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIdentity.Create(System.Reflection.PropertyInfo)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIdentity.Create(System.Reflection.PropertyInfo)
  id: Create(System.Reflection.PropertyInfo)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIdentity
  langs:
  - csharp
  - vb
  name: Create(PropertyInfo)
  nameWithType: PropertyIdentity.Create(PropertyInfo)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIdentity.Create(System.Reflection.PropertyInfo)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/PropertyIdentity.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Create
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/PropertyIdentity.cs
    startLine: 65
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public static PropertyIdentity Create(PropertyInfo property)
    content.vb: Public Shared Function Create(property As PropertyInfo) As PropertyIdentity
    parameters:
    - id: property
      type: System.Reflection.PropertyInfo
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIdentity
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIdentity.Create(Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIdentity.Create(Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation)
  id: Create(Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIdentity
  langs:
  - csharp
  - vb
  name: Create(Navigation)
  nameWithType: PropertyIdentity.Create(Navigation)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIdentity.Create(Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/PropertyIdentity.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Create
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/PropertyIdentity.cs
    startLine: 73
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public static PropertyIdentity Create(Navigation navigation)
    content.vb: Public Shared Function Create(navigation As Navigation) As PropertyIdentity
    parameters:
    - id: navigation
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIdentity
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIdentity.Name
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIdentity.Name
  id: Name
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIdentity
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: PropertyIdentity.Name
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIdentity.Name
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/PropertyIdentity.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Name
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/PropertyIdentity.cs
    startLine: 80
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public string Name { get; }
    content.vb: Public ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIdentity.Property
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIdentity.Property
  id: Property
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIdentity
  langs:
  - csharp
  - vb
  name: Property
  nameWithType: PropertyIdentity.Property
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIdentity.Property
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/PropertyIdentity.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Property
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/PropertyIdentity.cs
    startLine: 86
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public PropertyInfo Property { get; }
    content.vb: Public ReadOnly Property Property As PropertyInfo
    parameters: []
    return:
      type: System.Reflection.PropertyInfo
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.PropertyInfo
  commentId: T:System.Reflection.PropertyInfo
  parent: System.Reflection
  isExternal: true
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: false
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIdentity
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIdentity
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: PropertyIdentity
  nameWithType: PropertyIdentity
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIdentity
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Navigation
  nameWithType: Navigation
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation
