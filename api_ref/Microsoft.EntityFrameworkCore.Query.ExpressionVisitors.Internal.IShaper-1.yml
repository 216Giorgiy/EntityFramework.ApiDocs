### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IShaper`1
  commentId: T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IShaper`1
  id: IShaper`1
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  children:
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IShaper`1.GetAccessorExpression(IQuerySource)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IShaper`1.IsShaperForQuerySource(IQuerySource)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IShaper`1.SaveAccessorExpression(QuerySourceMapping)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IShaper`1.Shape(Microsoft.EntityFrameworkCore.Query.QueryContext,Microsoft.EntityFrameworkCore.Storage.ValueBuffer)
  langs:
  - csharp
  - vb
  name: IShaper<T>
  nameWithType: IShaper<T>
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IShaper<T>
  type: Interface
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/IShaper.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: IShaper
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/IShaper.cs
    startLine: 14
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public interface IShaper<out T>
    content.vb: Public Interface IShaper(Of Out T)
    typeParameters:
    - id: T
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IShaper`1.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  nameWithType.vb: IShaper(Of T)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IShaper(Of T)
  name.vb: IShaper(Of T)
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IShaper`1.Shape(Microsoft.EntityFrameworkCore.Query.QueryContext,Microsoft.EntityFrameworkCore.Storage.ValueBuffer)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IShaper`1.Shape(Microsoft.EntityFrameworkCore.Query.QueryContext,Microsoft.EntityFrameworkCore.Storage.ValueBuffer)
  id: Shape(Microsoft.EntityFrameworkCore.Query.QueryContext,Microsoft.EntityFrameworkCore.Storage.ValueBuffer)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IShaper`1
  langs:
  - csharp
  - vb
  name: Shape(QueryContext, ValueBuffer)
  nameWithType: IShaper<T>.Shape(QueryContext, ValueBuffer)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IShaper<T>.Shape(Microsoft.EntityFrameworkCore.Query.QueryContext, Microsoft.EntityFrameworkCore.Storage.ValueBuffer)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/IShaper.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Shape
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/IShaper.cs
    startLine: 20
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: T Shape(QueryContext queryContext, ValueBuffer valueBuffer)
    content.vb: Function Shape(queryContext As QueryContext, valueBuffer As ValueBuffer) As T
    parameters:
    - id: queryContext
      type: Microsoft.EntityFrameworkCore.Query.QueryContext
    - id: valueBuffer
      type: Microsoft.EntityFrameworkCore.Storage.ValueBuffer
    return:
      type: '{T}'
  nameWithType.vb: IShaper(Of T).Shape(QueryContext, ValueBuffer)
  fullName.vb: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IShaper(Of T).Shape(Microsoft.EntityFrameworkCore.Query.QueryContext, Microsoft.EntityFrameworkCore.Storage.ValueBuffer)
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IShaper`1.IsShaperForQuerySource(IQuerySource)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IShaper`1.IsShaperForQuerySource(IQuerySource)
  id: IsShaperForQuerySource(IQuerySource)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IShaper`1
  langs:
  - csharp
  - vb
  name: IsShaperForQuerySource(IQuerySource)
  nameWithType: IShaper<T>.IsShaperForQuerySource(IQuerySource)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IShaper<T>.IsShaperForQuerySource(IQuerySource)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/IShaper.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: IsShaperForQuerySource
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/IShaper.cs
    startLine: 26
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: bool IsShaperForQuerySource(IQuerySource querySource)
    content.vb: Function IsShaperForQuerySource(querySource As IQuerySource) As Boolean
    parameters:
    - id: querySource
      type: IQuerySource
    return:
      type: System.Boolean
  nameWithType.vb: IShaper(Of T).IsShaperForQuerySource(IQuerySource)
  fullName.vb: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IShaper(Of T).IsShaperForQuerySource(IQuerySource)
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IShaper`1.SaveAccessorExpression(QuerySourceMapping)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IShaper`1.SaveAccessorExpression(QuerySourceMapping)
  id: SaveAccessorExpression(QuerySourceMapping)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IShaper`1
  langs:
  - csharp
  - vb
  name: SaveAccessorExpression(QuerySourceMapping)
  nameWithType: IShaper<T>.SaveAccessorExpression(QuerySourceMapping)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IShaper<T>.SaveAccessorExpression(QuerySourceMapping)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/IShaper.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: SaveAccessorExpression
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/IShaper.cs
    startLine: 32
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: void SaveAccessorExpression(QuerySourceMapping querySourceMapping)
    content.vb: Sub SaveAccessorExpression(querySourceMapping As QuerySourceMapping)
    parameters:
    - id: querySourceMapping
      type: QuerySourceMapping
  nameWithType.vb: IShaper(Of T).SaveAccessorExpression(QuerySourceMapping)
  fullName.vb: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IShaper(Of T).SaveAccessorExpression(QuerySourceMapping)
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IShaper`1.GetAccessorExpression(IQuerySource)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IShaper`1.GetAccessorExpression(IQuerySource)
  id: GetAccessorExpression(IQuerySource)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IShaper`1
  langs:
  - csharp
  - vb
  name: GetAccessorExpression(IQuerySource)
  nameWithType: IShaper<T>.GetAccessorExpression(IQuerySource)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IShaper<T>.GetAccessorExpression(IQuerySource)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/IShaper.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GetAccessorExpression
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/IShaper.cs
    startLine: 38
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: Expression GetAccessorExpression(IQuerySource querySource)
    content.vb: Function GetAccessorExpression(querySource As IQuerySource) As Expression
    parameters:
    - id: querySource
      type: IQuerySource
    return:
      type: System.Linq.Expressions.Expression
  nameWithType.vb: IShaper(Of T).GetAccessorExpression(IQuerySource)
  fullName.vb: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IShaper(Of T).GetAccessorExpression(IQuerySource)
references:
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IShaper`1.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<IShaper<T>, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<IShaper<T>, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IShaper<T>, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of IShaper(Of T), TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IShaper(Of T), TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of IShaper(Of T), TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<IShaper<T>, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<IShaper<T>, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IShaper<T>, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of IShaper(Of T), TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of IShaper(Of T), TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IShaper(Of T), TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: Microsoft.EntityFrameworkCore.Query.QueryContext
  commentId: T:Microsoft.EntityFrameworkCore.Query.QueryContext
  parent: Microsoft.EntityFrameworkCore.Query
  isExternal: false
  name: QueryContext
  nameWithType: QueryContext
  fullName: Microsoft.EntityFrameworkCore.Query.QueryContext
- uid: Microsoft.EntityFrameworkCore.Storage.ValueBuffer
  commentId: T:Microsoft.EntityFrameworkCore.Storage.ValueBuffer
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: ValueBuffer
  nameWithType: ValueBuffer
  fullName: Microsoft.EntityFrameworkCore.Storage.ValueBuffer
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: Microsoft.EntityFrameworkCore.Query
  commentId: N:Microsoft.EntityFrameworkCore.Query
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query
  nameWithType: Microsoft.EntityFrameworkCore.Query
  fullName: Microsoft.EntityFrameworkCore.Query
- uid: Microsoft.EntityFrameworkCore.Storage
  commentId: N:Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Storage
  nameWithType: Microsoft.EntityFrameworkCore.Storage
  fullName: Microsoft.EntityFrameworkCore.Storage
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
- uid: IQuerySource
  isExternal: true
  name: IQuerySource
  nameWithType: IQuerySource
  fullName: IQuerySource
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: QuerySourceMapping
  isExternal: true
  name: QuerySourceMapping
  nameWithType: QuerySourceMapping
  fullName: QuerySourceMapping
- uid: System.Linq.Expressions.Expression
  commentId: T:System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: true
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: false
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
