### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Query.Internal.AsyncGroupJoinInclude
  commentId: T:Microsoft.EntityFrameworkCore.Query.Internal.AsyncGroupJoinInclude
  id: AsyncGroupJoinInclude
  parent: Microsoft.EntityFrameworkCore.Query.Internal
  children:
  - Microsoft.EntityFrameworkCore.Query.Internal.AsyncGroupJoinInclude.#ctor(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation},System.Collections.Generic.IReadOnlyList{System.Func{Microsoft.EntityFrameworkCore.Query.QueryContext,Microsoft.EntityFrameworkCore.Query.Internal.IAsyncRelatedEntitiesLoader}},System.Boolean)
  - Microsoft.EntityFrameworkCore.Query.Internal.AsyncGroupJoinInclude.CreateIncludeContext(Microsoft.EntityFrameworkCore.Query.RelationalQueryContext)
  - Microsoft.EntityFrameworkCore.Query.Internal.AsyncGroupJoinInclude.SetPrevious(Microsoft.EntityFrameworkCore.Query.Internal.AsyncGroupJoinInclude)
  - Microsoft.EntityFrameworkCore.Query.Internal.AsyncGroupJoinInclude.WithEntityAccessor(System.Delegate)
  langs:
  - csharp
  - vb
  name: AsyncGroupJoinInclude
  nameWithType: AsyncGroupJoinInclude
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.AsyncGroupJoinInclude
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/Internal/AsyncGroupJoinInclude.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: AsyncGroupJoinInclude
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/Internal/AsyncGroupJoinInclude.cs
    startLine: 17
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public class AsyncGroupJoinInclude : GroupJoinIncludeBase, IDisposable'
    content.vb: >-
      Public Class AsyncGroupJoinInclude
          Inherits GroupJoinIncludeBase
          Implements IDisposable
  inheritance:
  - System.Object
  - Microsoft.EntityFrameworkCore.Query.Internal.GroupJoinIncludeBase
  implements:
  - System.IDisposable
  inheritedMembers:
  - Microsoft.EntityFrameworkCore.Query.Internal.GroupJoinIncludeBase.NavigationPath
  - Microsoft.EntityFrameworkCore.Query.Internal.GroupJoinIncludeBase.QuerySourceRequiresTracking
  - Microsoft.EntityFrameworkCore.Query.Internal.GroupJoinIncludeBase.EntityAccessor
  - Microsoft.EntityFrameworkCore.Query.Internal.GroupJoinIncludeBase.Dispose
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Query.Internal.AsyncGroupJoinInclude.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Query.Internal.AsyncGroupJoinInclude.#ctor(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation},System.Collections.Generic.IReadOnlyList{System.Func{Microsoft.EntityFrameworkCore.Query.QueryContext,Microsoft.EntityFrameworkCore.Query.Internal.IAsyncRelatedEntitiesLoader}},System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.AsyncGroupJoinInclude.#ctor(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation},System.Collections.Generic.IReadOnlyList{System.Func{Microsoft.EntityFrameworkCore.Query.QueryContext,Microsoft.EntityFrameworkCore.Query.Internal.IAsyncRelatedEntitiesLoader}},System.Boolean)
  id: '#ctor(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation},System.Collections.Generic.IReadOnlyList{System.Func{Microsoft.EntityFrameworkCore.Query.QueryContext,Microsoft.EntityFrameworkCore.Query.Internal.IAsyncRelatedEntitiesLoader}},System.Boolean)'
  parent: Microsoft.EntityFrameworkCore.Query.Internal.AsyncGroupJoinInclude
  langs:
  - csharp
  - vb
  name: AsyncGroupJoinInclude(IReadOnlyList<INavigation>, IReadOnlyList<Func<QueryContext, IAsyncRelatedEntitiesLoader>>, Boolean)
  nameWithType: AsyncGroupJoinInclude.AsyncGroupJoinInclude(IReadOnlyList<INavigation>, IReadOnlyList<Func<QueryContext, IAsyncRelatedEntitiesLoader>>, Boolean)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.AsyncGroupJoinInclude.AsyncGroupJoinInclude(System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Metadata.INavigation>, System.Collections.Generic.IReadOnlyList<System.Func<Microsoft.EntityFrameworkCore.Query.QueryContext, Microsoft.EntityFrameworkCore.Query.Internal.IAsyncRelatedEntitiesLoader>>, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/Internal/AsyncGroupJoinInclude.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/Internal/AsyncGroupJoinInclude.cs
    startLine: 26
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public AsyncGroupJoinInclude(IReadOnlyList<INavigation> navigationPath, IReadOnlyList<Func<QueryContext, IAsyncRelatedEntitiesLoader>> relatedEntitiesLoaderFactories, bool querySourceRequiresTracking)
    content.vb: Public Sub New(navigationPath As IReadOnlyList(Of INavigation), relatedEntitiesLoaderFactories As IReadOnlyList(Of Func(Of QueryContext, IAsyncRelatedEntitiesLoader)), querySourceRequiresTracking As Boolean)
    parameters:
    - id: navigationPath
      type: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation}
    - id: relatedEntitiesLoaderFactories
      type: System.Collections.Generic.IReadOnlyList{System.Func{Microsoft.EntityFrameworkCore.Query.QueryContext,Microsoft.EntityFrameworkCore.Query.Internal.IAsyncRelatedEntitiesLoader}}
    - id: querySourceRequiresTracking
      type: System.Boolean
  nameWithType.vb: AsyncGroupJoinInclude.AsyncGroupJoinInclude(IReadOnlyList(Of INavigation), IReadOnlyList(Of Func(Of QueryContext, IAsyncRelatedEntitiesLoader)), Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Query.Internal.AsyncGroupJoinInclude.AsyncGroupJoinInclude(System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Metadata.INavigation), System.Collections.Generic.IReadOnlyList(Of System.Func(Of Microsoft.EntityFrameworkCore.Query.QueryContext, Microsoft.EntityFrameworkCore.Query.Internal.IAsyncRelatedEntitiesLoader)), System.Boolean)
  name.vb: AsyncGroupJoinInclude(IReadOnlyList(Of INavigation), IReadOnlyList(Of Func(Of QueryContext, IAsyncRelatedEntitiesLoader)), Boolean)
- uid: Microsoft.EntityFrameworkCore.Query.Internal.AsyncGroupJoinInclude.WithEntityAccessor(System.Delegate)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.AsyncGroupJoinInclude.WithEntityAccessor(System.Delegate)
  id: WithEntityAccessor(System.Delegate)
  parent: Microsoft.EntityFrameworkCore.Query.Internal.AsyncGroupJoinInclude
  langs:
  - csharp
  - vb
  name: WithEntityAccessor(Delegate)
  nameWithType: AsyncGroupJoinInclude.WithEntityAccessor(Delegate)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.AsyncGroupJoinInclude.WithEntityAccessor(System.Delegate)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/Internal/AsyncGroupJoinInclude.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: WithEntityAccessor
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/Internal/AsyncGroupJoinInclude.cs
    startLine: 39
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual AsyncGroupJoinInclude WithEntityAccessor(Delegate entityAccessor)
    content.vb: Public Overridable Function WithEntityAccessor(entityAccessor As  Delegate) As AsyncGroupJoinInclude
    parameters:
    - id: entityAccessor
      type: System.Delegate
    return:
      type: Microsoft.EntityFrameworkCore.Query.Internal.AsyncGroupJoinInclude
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Query.Internal.AsyncGroupJoinInclude.SetPrevious(Microsoft.EntityFrameworkCore.Query.Internal.AsyncGroupJoinInclude)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.AsyncGroupJoinInclude.SetPrevious(Microsoft.EntityFrameworkCore.Query.Internal.AsyncGroupJoinInclude)
  id: SetPrevious(Microsoft.EntityFrameworkCore.Query.Internal.AsyncGroupJoinInclude)
  parent: Microsoft.EntityFrameworkCore.Query.Internal.AsyncGroupJoinInclude
  langs:
  - csharp
  - vb
  name: SetPrevious(AsyncGroupJoinInclude)
  nameWithType: AsyncGroupJoinInclude.SetPrevious(AsyncGroupJoinInclude)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.AsyncGroupJoinInclude.SetPrevious(Microsoft.EntityFrameworkCore.Query.Internal.AsyncGroupJoinInclude)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/Internal/AsyncGroupJoinInclude.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: SetPrevious
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/Internal/AsyncGroupJoinInclude.cs
    startLine: 50
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual void SetPrevious(AsyncGroupJoinInclude previous)
    content.vb: Public Overridable Sub SetPrevious(previous As AsyncGroupJoinInclude)
    parameters:
    - id: previous
      type: Microsoft.EntityFrameworkCore.Query.Internal.AsyncGroupJoinInclude
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Query.Internal.AsyncGroupJoinInclude.CreateIncludeContext(Microsoft.EntityFrameworkCore.Query.RelationalQueryContext)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.AsyncGroupJoinInclude.CreateIncludeContext(Microsoft.EntityFrameworkCore.Query.RelationalQueryContext)
  id: CreateIncludeContext(Microsoft.EntityFrameworkCore.Query.RelationalQueryContext)
  parent: Microsoft.EntityFrameworkCore.Query.Internal.AsyncGroupJoinInclude
  langs:
  - csharp
  - vb
  name: CreateIncludeContext(RelationalQueryContext)
  nameWithType: AsyncGroupJoinInclude.CreateIncludeContext(RelationalQueryContext)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.AsyncGroupJoinInclude.CreateIncludeContext(Microsoft.EntityFrameworkCore.Query.RelationalQueryContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/Internal/AsyncGroupJoinInclude.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: CreateIncludeContext
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/Internal/AsyncGroupJoinInclude.cs
    startLine: 66
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual AsyncGroupJoinInclude.AsyncGroupJoinIncludeContext CreateIncludeContext(RelationalQueryContext queryContext)
    content.vb: Public Overridable Function CreateIncludeContext(queryContext As RelationalQueryContext) As AsyncGroupJoinInclude.AsyncGroupJoinIncludeContext
    parameters:
    - id: queryContext
      type: Microsoft.EntityFrameworkCore.Query.RelationalQueryContext
    return:
      type: Microsoft.EntityFrameworkCore.Query.Internal.AsyncGroupJoinInclude.AsyncGroupJoinIncludeContext
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.EntityFrameworkCore.Query.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Query.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Query.Internal
  fullName: Microsoft.EntityFrameworkCore.Query.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Query.Internal.GroupJoinIncludeBase
  commentId: T:Microsoft.EntityFrameworkCore.Query.Internal.GroupJoinIncludeBase
  parent: Microsoft.EntityFrameworkCore.Query.Internal
  isExternal: false
  name: GroupJoinIncludeBase
  nameWithType: GroupJoinIncludeBase
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.GroupJoinIncludeBase
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Microsoft.EntityFrameworkCore.Query.Internal.GroupJoinIncludeBase.NavigationPath
  commentId: P:Microsoft.EntityFrameworkCore.Query.Internal.GroupJoinIncludeBase.NavigationPath
  parent: Microsoft.EntityFrameworkCore.Query.Internal.GroupJoinIncludeBase
  isExternal: false
  name: NavigationPath
  nameWithType: GroupJoinIncludeBase.NavigationPath
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.GroupJoinIncludeBase.NavigationPath
- uid: Microsoft.EntityFrameworkCore.Query.Internal.GroupJoinIncludeBase.QuerySourceRequiresTracking
  commentId: P:Microsoft.EntityFrameworkCore.Query.Internal.GroupJoinIncludeBase.QuerySourceRequiresTracking
  parent: Microsoft.EntityFrameworkCore.Query.Internal.GroupJoinIncludeBase
  isExternal: false
  name: QuerySourceRequiresTracking
  nameWithType: GroupJoinIncludeBase.QuerySourceRequiresTracking
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.GroupJoinIncludeBase.QuerySourceRequiresTracking
- uid: Microsoft.EntityFrameworkCore.Query.Internal.GroupJoinIncludeBase.EntityAccessor
  commentId: P:Microsoft.EntityFrameworkCore.Query.Internal.GroupJoinIncludeBase.EntityAccessor
  parent: Microsoft.EntityFrameworkCore.Query.Internal.GroupJoinIncludeBase
  isExternal: false
  name: EntityAccessor
  nameWithType: GroupJoinIncludeBase.EntityAccessor
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.GroupJoinIncludeBase.EntityAccessor
- uid: Microsoft.EntityFrameworkCore.Query.Internal.GroupJoinIncludeBase.Dispose
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.GroupJoinIncludeBase.Dispose
  parent: Microsoft.EntityFrameworkCore.Query.Internal.GroupJoinIncludeBase
  isExternal: false
  name: Dispose()
  nameWithType: GroupJoinIncludeBase.Dispose()
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.GroupJoinIncludeBase.Dispose()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.Internal.GroupJoinIncludeBase.Dispose
    name: Dispose
    nameWithType: GroupJoinIncludeBase.Dispose
    fullName: Microsoft.EntityFrameworkCore.Query.Internal.GroupJoinIncludeBase.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.Internal.GroupJoinIncludeBase.Dispose
    name: Dispose
    nameWithType: GroupJoinIncludeBase.Dispose
    fullName: Microsoft.EntityFrameworkCore.Query.Internal.GroupJoinIncludeBase.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.Internal.AsyncGroupJoinInclude.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<AsyncGroupJoinInclude, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<AsyncGroupJoinInclude, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Query.Internal.AsyncGroupJoinInclude, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of AsyncGroupJoinInclude, TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Query.Internal.AsyncGroupJoinInclude, TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of AsyncGroupJoinInclude, TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<AsyncGroupJoinInclude, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<AsyncGroupJoinInclude, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Query.Internal.AsyncGroupJoinInclude, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of AsyncGroupJoinInclude, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of AsyncGroupJoinInclude, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Query.Internal.AsyncGroupJoinInclude, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation}
  commentId: T:System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<INavigation>
  nameWithType: IReadOnlyList<INavigation>
  fullName: System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Metadata.INavigation>
  nameWithType.vb: IReadOnlyList(Of INavigation)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Metadata.INavigation)
  name.vb: IReadOnlyList(Of INavigation)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.INavigation
    name: INavigation
    nameWithType: INavigation
    fullName: Microsoft.EntityFrameworkCore.Metadata.INavigation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.INavigation
    name: INavigation
    nameWithType: INavigation
    fullName: Microsoft.EntityFrameworkCore.Metadata.INavigation
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList{System.Func{Microsoft.EntityFrameworkCore.Query.QueryContext,Microsoft.EntityFrameworkCore.Query.Internal.IAsyncRelatedEntitiesLoader}}
  commentId: T:System.Collections.Generic.IReadOnlyList{System.Func{Microsoft.EntityFrameworkCore.Query.QueryContext,Microsoft.EntityFrameworkCore.Query.Internal.IAsyncRelatedEntitiesLoader}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<Func<QueryContext, IAsyncRelatedEntitiesLoader>>
  nameWithType: IReadOnlyList<Func<QueryContext, IAsyncRelatedEntitiesLoader>>
  fullName: System.Collections.Generic.IReadOnlyList<System.Func<Microsoft.EntityFrameworkCore.Query.QueryContext, Microsoft.EntityFrameworkCore.Query.Internal.IAsyncRelatedEntitiesLoader>>
  nameWithType.vb: IReadOnlyList(Of Func(Of QueryContext, IAsyncRelatedEntitiesLoader))
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of System.Func(Of Microsoft.EntityFrameworkCore.Query.QueryContext, Microsoft.EntityFrameworkCore.Query.Internal.IAsyncRelatedEntitiesLoader))
  name.vb: IReadOnlyList(Of Func(Of QueryContext, IAsyncRelatedEntitiesLoader))
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Query.QueryContext
    name: QueryContext
    nameWithType: QueryContext
    fullName: Microsoft.EntityFrameworkCore.Query.QueryContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Query.Internal.IAsyncRelatedEntitiesLoader
    name: IAsyncRelatedEntitiesLoader
    nameWithType: IAsyncRelatedEntitiesLoader
    fullName: Microsoft.EntityFrameworkCore.Query.Internal.IAsyncRelatedEntitiesLoader
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Query.QueryContext
    name: QueryContext
    nameWithType: QueryContext
    fullName: Microsoft.EntityFrameworkCore.Query.QueryContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Query.Internal.IAsyncRelatedEntitiesLoader
    name: IAsyncRelatedEntitiesLoader
    nameWithType: IAsyncRelatedEntitiesLoader
    fullName: Microsoft.EntityFrameworkCore.Query.Internal.IAsyncRelatedEntitiesLoader
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Delegate
  commentId: T:System.Delegate
  parent: System
  isExternal: true
  name: Delegate
  nameWithType: Delegate
  fullName: System.Delegate
- uid: Microsoft.EntityFrameworkCore.Query.Internal.AsyncGroupJoinInclude
  commentId: T:Microsoft.EntityFrameworkCore.Query.Internal.AsyncGroupJoinInclude
  parent: Microsoft.EntityFrameworkCore.Query.Internal
  isExternal: false
  name: AsyncGroupJoinInclude
  nameWithType: AsyncGroupJoinInclude
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.AsyncGroupJoinInclude
- uid: Microsoft.EntityFrameworkCore.Query.RelationalQueryContext
  commentId: T:Microsoft.EntityFrameworkCore.Query.RelationalQueryContext
  parent: Microsoft.EntityFrameworkCore.Query
  isExternal: false
  name: RelationalQueryContext
  nameWithType: RelationalQueryContext
  fullName: Microsoft.EntityFrameworkCore.Query.RelationalQueryContext
- uid: Microsoft.EntityFrameworkCore.Query.Internal.AsyncGroupJoinInclude.AsyncGroupJoinIncludeContext
  commentId: T:Microsoft.EntityFrameworkCore.Query.Internal.AsyncGroupJoinInclude.AsyncGroupJoinIncludeContext
  parent: Microsoft.EntityFrameworkCore.Query.Internal
  isExternal: false
  name: AsyncGroupJoinInclude.AsyncGroupJoinIncludeContext
  nameWithType: AsyncGroupJoinInclude.AsyncGroupJoinIncludeContext
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.AsyncGroupJoinInclude.AsyncGroupJoinIncludeContext
- uid: Microsoft.EntityFrameworkCore.Query
  commentId: N:Microsoft.EntityFrameworkCore.Query
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query
  nameWithType: Microsoft.EntityFrameworkCore.Query
  fullName: Microsoft.EntityFrameworkCore.Query
