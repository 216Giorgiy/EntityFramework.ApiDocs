### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Query.Internal.RelationalQueryContextFactory
  commentId: T:Microsoft.EntityFrameworkCore.Query.Internal.RelationalQueryContextFactory
  id: RelationalQueryContextFactory
  parent: Microsoft.EntityFrameworkCore.Query.Internal
  children:
  - Microsoft.EntityFrameworkCore.Query.Internal.RelationalQueryContextFactory.#ctor(Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext,Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector,Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory)
  - Microsoft.EntityFrameworkCore.Query.Internal.RelationalQueryContextFactory.Create
  - Microsoft.EntityFrameworkCore.Query.Internal.RelationalQueryContextFactory.ExecutionStrategyFactory
  langs:
  - csharp
  - vb
  name: RelationalQueryContextFactory
  nameWithType: RelationalQueryContextFactory
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.RelationalQueryContextFactory
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/Internal/RelationalQueryContextFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: RelationalQueryContextFactory
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/Internal/RelationalQueryContextFactory.cs
    startLine: 13
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public class RelationalQueryContextFactory : QueryContextFactory, IQueryContextFactory'
    content.vb: >-
      Public Class RelationalQueryContextFactory
          Inherits QueryContextFactory
          Implements IQueryContextFactory
  inheritance:
  - System.Object
  - Microsoft.EntityFrameworkCore.Query.QueryContextFactory
  implements:
  - Microsoft.EntityFrameworkCore.Query.IQueryContextFactory
  inheritedMembers:
  - Microsoft.EntityFrameworkCore.Query.QueryContextFactory.CreateQueryBuffer
  - Microsoft.EntityFrameworkCore.Query.QueryContextFactory.ChangeDetector
  - Microsoft.EntityFrameworkCore.Query.QueryContextFactory.StateManager
  - Microsoft.EntityFrameworkCore.Query.QueryContextFactory.ConcurrencyDetector
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Query.Internal.RelationalQueryContextFactory.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Query.Internal.RelationalQueryContextFactory.#ctor(Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext,Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector,Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.RelationalQueryContextFactory.#ctor(Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext,Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector,Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory)
  id: '#ctor(Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext,Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector,Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory)'
  parent: Microsoft.EntityFrameworkCore.Query.Internal.RelationalQueryContextFactory
  langs:
  - csharp
  - vb
  name: RelationalQueryContextFactory(ICurrentDbContext, IConcurrencyDetector, IRelationalConnection, IExecutionStrategyFactory)
  nameWithType: RelationalQueryContextFactory.RelationalQueryContextFactory(ICurrentDbContext, IConcurrencyDetector, IRelationalConnection, IExecutionStrategyFactory)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.RelationalQueryContextFactory.RelationalQueryContextFactory(Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext, Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection, Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/Internal/RelationalQueryContextFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/Internal/RelationalQueryContextFactory.cs
    startLine: 21
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public RelationalQueryContextFactory(ICurrentDbContext currentContext, IConcurrencyDetector concurrencyDetector, IRelationalConnection connection, IExecutionStrategyFactory executionStrategyFactory)
    content.vb: Public Sub New(currentContext As ICurrentDbContext, concurrencyDetector As IConcurrencyDetector, connection As IRelationalConnection, executionStrategyFactory As IExecutionStrategyFactory)
    parameters:
    - id: currentContext
      type: Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext
    - id: concurrencyDetector
      type: Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector
    - id: connection
      type: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
    - id: executionStrategyFactory
      type: Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Query.Internal.RelationalQueryContextFactory.ExecutionStrategyFactory
  commentId: P:Microsoft.EntityFrameworkCore.Query.Internal.RelationalQueryContextFactory.ExecutionStrategyFactory
  id: ExecutionStrategyFactory
  parent: Microsoft.EntityFrameworkCore.Query.Internal.RelationalQueryContextFactory
  langs:
  - csharp
  - vb
  name: ExecutionStrategyFactory
  nameWithType: RelationalQueryContextFactory.ExecutionStrategyFactory
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.RelationalQueryContextFactory.ExecutionStrategyFactory
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/Internal/RelationalQueryContextFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ExecutionStrategyFactory
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/Internal/RelationalQueryContextFactory.cs
    startLine: 38
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    The execution strategy factory.\n"
  example: []
  syntax:
    content: protected virtual IExecutionStrategyFactory ExecutionStrategyFactory { get; }
    content.vb: Protected Overridable ReadOnly Property ExecutionStrategyFactory As IExecutionStrategyFactory
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory
      description: "\n    The execution strategy factory.\n"
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.Internal.RelationalQueryContextFactory.Create
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.RelationalQueryContextFactory.Create
  id: Create
  parent: Microsoft.EntityFrameworkCore.Query.Internal.RelationalQueryContextFactory
  langs:
  - csharp
  - vb
  name: Create()
  nameWithType: RelationalQueryContextFactory.Create()
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.RelationalQueryContextFactory.Create()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/Internal/RelationalQueryContextFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Create
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/Internal/RelationalQueryContextFactory.cs
    startLine: 44
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public override QueryContext Create()
    content.vb: Public Overrides Function Create As QueryContext
    return:
      type: Microsoft.EntityFrameworkCore.Query.QueryContext
  overridden: Microsoft.EntityFrameworkCore.Query.QueryContextFactory.Create
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.EntityFrameworkCore.Query.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Query.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Query.Internal
  fullName: Microsoft.EntityFrameworkCore.Query.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Query.QueryContextFactory
  commentId: T:Microsoft.EntityFrameworkCore.Query.QueryContextFactory
  parent: Microsoft.EntityFrameworkCore.Query
  isExternal: false
  name: QueryContextFactory
  nameWithType: QueryContextFactory
  fullName: Microsoft.EntityFrameworkCore.Query.QueryContextFactory
- uid: Microsoft.EntityFrameworkCore.Query.IQueryContextFactory
  commentId: T:Microsoft.EntityFrameworkCore.Query.IQueryContextFactory
  parent: Microsoft.EntityFrameworkCore.Query
  isExternal: false
  name: IQueryContextFactory
  nameWithType: IQueryContextFactory
  fullName: Microsoft.EntityFrameworkCore.Query.IQueryContextFactory
- uid: Microsoft.EntityFrameworkCore.Query.QueryContextFactory.CreateQueryBuffer
  commentId: M:Microsoft.EntityFrameworkCore.Query.QueryContextFactory.CreateQueryBuffer
  parent: Microsoft.EntityFrameworkCore.Query.QueryContextFactory
  isExternal: false
  name: CreateQueryBuffer()
  nameWithType: QueryContextFactory.CreateQueryBuffer()
  fullName: Microsoft.EntityFrameworkCore.Query.QueryContextFactory.CreateQueryBuffer()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.QueryContextFactory.CreateQueryBuffer
    name: CreateQueryBuffer
    nameWithType: QueryContextFactory.CreateQueryBuffer
    fullName: Microsoft.EntityFrameworkCore.Query.QueryContextFactory.CreateQueryBuffer
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.QueryContextFactory.CreateQueryBuffer
    name: CreateQueryBuffer
    nameWithType: QueryContextFactory.CreateQueryBuffer
    fullName: Microsoft.EntityFrameworkCore.Query.QueryContextFactory.CreateQueryBuffer
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.QueryContextFactory.ChangeDetector
  commentId: P:Microsoft.EntityFrameworkCore.Query.QueryContextFactory.ChangeDetector
  parent: Microsoft.EntityFrameworkCore.Query.QueryContextFactory
  isExternal: false
  name: ChangeDetector
  nameWithType: QueryContextFactory.ChangeDetector
  fullName: Microsoft.EntityFrameworkCore.Query.QueryContextFactory.ChangeDetector
- uid: Microsoft.EntityFrameworkCore.Query.QueryContextFactory.StateManager
  commentId: P:Microsoft.EntityFrameworkCore.Query.QueryContextFactory.StateManager
  parent: Microsoft.EntityFrameworkCore.Query.QueryContextFactory
  isExternal: false
  name: StateManager
  nameWithType: QueryContextFactory.StateManager
  fullName: Microsoft.EntityFrameworkCore.Query.QueryContextFactory.StateManager
- uid: Microsoft.EntityFrameworkCore.Query.QueryContextFactory.ConcurrencyDetector
  commentId: P:Microsoft.EntityFrameworkCore.Query.QueryContextFactory.ConcurrencyDetector
  parent: Microsoft.EntityFrameworkCore.Query.QueryContextFactory
  isExternal: false
  name: ConcurrencyDetector
  nameWithType: QueryContextFactory.ConcurrencyDetector
  fullName: Microsoft.EntityFrameworkCore.Query.QueryContextFactory.ConcurrencyDetector
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.Internal.RelationalQueryContextFactory.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<RelationalQueryContextFactory, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<RelationalQueryContextFactory, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Query.Internal.RelationalQueryContextFactory, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of RelationalQueryContextFactory, TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Query.Internal.RelationalQueryContextFactory, TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of RelationalQueryContextFactory, TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<RelationalQueryContextFactory, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<RelationalQueryContextFactory, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Query.Internal.RelationalQueryContextFactory, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of RelationalQueryContextFactory, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of RelationalQueryContextFactory, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Query.Internal.RelationalQueryContextFactory, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Query
  commentId: N:Microsoft.EntityFrameworkCore.Query
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query
  nameWithType: Microsoft.EntityFrameworkCore.Query
  fullName: Microsoft.EntityFrameworkCore.Query
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext
  commentId: T:Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext
  parent: Microsoft.EntityFrameworkCore.Internal
  isExternal: false
  name: ICurrentDbContext
  nameWithType: ICurrentDbContext
  fullName: Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext
- uid: Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector
  commentId: T:Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector
  parent: Microsoft.EntityFrameworkCore.Internal
  isExternal: false
  name: IConcurrencyDetector
  nameWithType: IConcurrencyDetector
  fullName: Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IRelationalConnection
  nameWithType: IRelationalConnection
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
- uid: Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IExecutionStrategyFactory
  nameWithType: IExecutionStrategyFactory
  fullName: Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory
- uid: Microsoft.EntityFrameworkCore.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Internal
  fullName: Microsoft.EntityFrameworkCore.Internal
- uid: Microsoft.EntityFrameworkCore.Storage
  commentId: N:Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Storage
  nameWithType: Microsoft.EntityFrameworkCore.Storage
  fullName: Microsoft.EntityFrameworkCore.Storage
- uid: Microsoft.EntityFrameworkCore.Query.QueryContextFactory.Create
  commentId: M:Microsoft.EntityFrameworkCore.Query.QueryContextFactory.Create
  parent: Microsoft.EntityFrameworkCore.Query.QueryContextFactory
  isExternal: false
  name: Create()
  nameWithType: QueryContextFactory.Create()
  fullName: Microsoft.EntityFrameworkCore.Query.QueryContextFactory.Create()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.QueryContextFactory.Create
    name: Create
    nameWithType: QueryContextFactory.Create
    fullName: Microsoft.EntityFrameworkCore.Query.QueryContextFactory.Create
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.QueryContextFactory.Create
    name: Create
    nameWithType: QueryContextFactory.Create
    fullName: Microsoft.EntityFrameworkCore.Query.QueryContextFactory.Create
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.QueryContext
  commentId: T:Microsoft.EntityFrameworkCore.Query.QueryContext
  parent: Microsoft.EntityFrameworkCore.Query
  isExternal: false
  name: QueryContext
  nameWithType: QueryContext
  fullName: Microsoft.EntityFrameworkCore.Query.QueryContext
