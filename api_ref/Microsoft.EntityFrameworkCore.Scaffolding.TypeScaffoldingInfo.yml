### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Scaffolding.TypeScaffoldingInfo
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.TypeScaffoldingInfo
  id: TypeScaffoldingInfo
  parent: Microsoft.EntityFrameworkCore.Scaffolding
  children:
  - Microsoft.EntityFrameworkCore.Scaffolding.TypeScaffoldingInfo.#ctor(System.Type,System.Boolean,System.Nullable{System.Boolean},System.Nullable{System.Int32})
  - Microsoft.EntityFrameworkCore.Scaffolding.TypeScaffoldingInfo.ClrType
  - Microsoft.EntityFrameworkCore.Scaffolding.TypeScaffoldingInfo.IsInferred
  - Microsoft.EntityFrameworkCore.Scaffolding.TypeScaffoldingInfo.ScaffoldMaxLength
  - Microsoft.EntityFrameworkCore.Scaffolding.TypeScaffoldingInfo.ScaffoldUnicode
  langs:
  - csharp
  - vb
  name: TypeScaffoldingInfo
  nameWithType: TypeScaffoldingInfo
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.TypeScaffoldingInfo
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/TypeScaffoldingInfo.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: TypeScaffoldingInfo
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/TypeScaffoldingInfo.cs
    startLine: 9
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding
  syntax:
    content: public class TypeScaffoldingInfo
    content.vb: Public Class TypeScaffoldingInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Scaffolding.TypeScaffoldingInfo.#ctor(System.Type,System.Boolean,System.Nullable{System.Boolean},System.Nullable{System.Int32})
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.TypeScaffoldingInfo.#ctor(System.Type,System.Boolean,System.Nullable{System.Boolean},System.Nullable{System.Int32})
  id: '#ctor(System.Type,System.Boolean,System.Nullable{System.Boolean},System.Nullable{System.Int32})'
  parent: Microsoft.EntityFrameworkCore.Scaffolding.TypeScaffoldingInfo
  langs:
  - csharp
  - vb
  name: TypeScaffoldingInfo(Type, Boolean, Nullable<Boolean>, Nullable<Int32>)
  nameWithType: TypeScaffoldingInfo.TypeScaffoldingInfo(Type, Boolean, Nullable<Boolean>, Nullable<Int32>)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.TypeScaffoldingInfo.TypeScaffoldingInfo(System.Type, System.Boolean, System.Nullable<System.Boolean>, System.Nullable<System.Int32>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/TypeScaffoldingInfo.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/TypeScaffoldingInfo.cs
    startLine: 11
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding
  syntax:
    content: public TypeScaffoldingInfo(Type clrType, bool inferred, bool ? scaffoldUnicode, int ? scaffoldMaxLength)
    content.vb: Public Sub New(clrType As Type, inferred As Boolean, scaffoldUnicode As Boolean?, scaffoldMaxLength As Integer?)
    parameters:
    - id: clrType
      type: System.Type
    - id: inferred
      type: System.Boolean
    - id: scaffoldUnicode
      type: System.Nullable{System.Boolean}
    - id: scaffoldMaxLength
      type: System.Nullable{System.Int32}
  nameWithType.vb: TypeScaffoldingInfo.TypeScaffoldingInfo(Type, Boolean, Nullable(Of Boolean), Nullable(Of Int32))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Scaffolding.TypeScaffoldingInfo.TypeScaffoldingInfo(System.Type, System.Boolean, System.Nullable(Of System.Boolean), System.Nullable(Of System.Int32))
  name.vb: TypeScaffoldingInfo(Type, Boolean, Nullable(Of Boolean), Nullable(Of Int32))
- uid: Microsoft.EntityFrameworkCore.Scaffolding.TypeScaffoldingInfo.ClrType
  commentId: P:Microsoft.EntityFrameworkCore.Scaffolding.TypeScaffoldingInfo.ClrType
  id: ClrType
  parent: Microsoft.EntityFrameworkCore.Scaffolding.TypeScaffoldingInfo
  langs:
  - csharp
  - vb
  name: ClrType
  nameWithType: TypeScaffoldingInfo.ClrType
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.TypeScaffoldingInfo.ClrType
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/TypeScaffoldingInfo.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ClrType
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/TypeScaffoldingInfo.cs
    startLine: 21
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding
  syntax:
    content: public virtual Type ClrType { get; }
    content.vb: Public Overridable ReadOnly Property ClrType As Type
    parameters: []
    return:
      type: System.Type
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Scaffolding.TypeScaffoldingInfo.IsInferred
  commentId: P:Microsoft.EntityFrameworkCore.Scaffolding.TypeScaffoldingInfo.IsInferred
  id: IsInferred
  parent: Microsoft.EntityFrameworkCore.Scaffolding.TypeScaffoldingInfo
  langs:
  - csharp
  - vb
  name: IsInferred
  nameWithType: TypeScaffoldingInfo.IsInferred
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.TypeScaffoldingInfo.IsInferred
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/TypeScaffoldingInfo.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: IsInferred
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/TypeScaffoldingInfo.cs
    startLine: 22
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding
  syntax:
    content: public virtual bool IsInferred { get; }
    content.vb: Public Overridable ReadOnly Property IsInferred As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Scaffolding.TypeScaffoldingInfo.ScaffoldUnicode
  commentId: P:Microsoft.EntityFrameworkCore.Scaffolding.TypeScaffoldingInfo.ScaffoldUnicode
  id: ScaffoldUnicode
  parent: Microsoft.EntityFrameworkCore.Scaffolding.TypeScaffoldingInfo
  langs:
  - csharp
  - vb
  name: ScaffoldUnicode
  nameWithType: TypeScaffoldingInfo.ScaffoldUnicode
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.TypeScaffoldingInfo.ScaffoldUnicode
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/TypeScaffoldingInfo.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ScaffoldUnicode
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/TypeScaffoldingInfo.cs
    startLine: 23
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding
  syntax:
    content: public virtual bool ? ScaffoldUnicode { get; }
    content.vb: Public Overridable ReadOnly Property ScaffoldUnicode As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Scaffolding.TypeScaffoldingInfo.ScaffoldMaxLength
  commentId: P:Microsoft.EntityFrameworkCore.Scaffolding.TypeScaffoldingInfo.ScaffoldMaxLength
  id: ScaffoldMaxLength
  parent: Microsoft.EntityFrameworkCore.Scaffolding.TypeScaffoldingInfo
  langs:
  - csharp
  - vb
  name: ScaffoldMaxLength
  nameWithType: TypeScaffoldingInfo.ScaffoldMaxLength
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.TypeScaffoldingInfo.ScaffoldMaxLength
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/TypeScaffoldingInfo.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ScaffoldMaxLength
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/TypeScaffoldingInfo.cs
    startLine: 24
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding
  syntax:
    content: public virtual int ? ScaffoldMaxLength { get; }
    content.vb: Public Overridable ReadOnly Property ScaffoldMaxLength As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
references:
- uid: Microsoft.EntityFrameworkCore.Scaffolding
  commentId: N:Microsoft.EntityFrameworkCore.Scaffolding
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Scaffolding
  nameWithType: Microsoft.EntityFrameworkCore.Scaffolding
  fullName: Microsoft.EntityFrameworkCore.Scaffolding
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
