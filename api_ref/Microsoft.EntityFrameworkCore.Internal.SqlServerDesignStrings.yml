### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings
  commentId: T:Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings
  id: SqlServerDesignStrings
  parent: Microsoft.EntityFrameworkCore.Internal
  children:
  - Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.CannotInterpretComputedValue(System.Object,System.Object,System.Object,System.Object)
  - Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.CannotInterpretDefaultValue(System.Object,System.Object,System.Object,System.Object)
  - Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.ColumnNameEmptyOnForeignKey(System.Object,System.Object,System.Object)
  - Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.ColumnNameEmptyOnIndex(System.Object,System.Object,System.Object)
  - Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.ColumnNameEmptyOnTable(System.Object,System.Object)
  - Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.ColumnNotInSelectionSet(System.Object,System.Object,System.Object)
  - Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.DataTypeDoesNotAllowSqlServerIdentityStrategy(System.Object,System.Object)
  - Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.ForeignKeyColumnNotInSelectionSet(System.Object,System.Object,System.Object,System.Object)
  - Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.ForeignKeyNameEmpty(System.Object,System.Object)
  - Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.FoundColumn(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)
  - Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.FoundDefaultSchema(System.Object)
  - Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.FoundForeignKeyColumn(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)
  - Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.FoundIndexColumn(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)
  - Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.FoundSequence(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)
  - Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.FoundTable(System.Object,System.Object)
  - Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.FoundTypeAlias(System.Object,System.Object)
  - Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.IndexColumnNotInSelectionSet(System.Object,System.Object,System.Object,System.Object)
  - Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.IndexNameEmpty(System.Object,System.Object)
  - Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.PrincipalTableNotInSelectionSet(System.Object,System.Object,System.Object,System.Object,System.Object)
  - Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.SequenceNameEmpty(System.Object)
  - Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.TableNotInSelectionSet(System.Object,System.Object)
  - Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.UnableToConvertDefaultValue(System.Object,System.Object,System.Object,System.Object,System.Object)
  - Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.UnableToFindColumnForForeignKey(System.Object,System.Object,System.Object,System.Object)
  - Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.UnableToFindColumnForIndex(System.Object,System.Object,System.Object,System.Object)
  - Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.UnableToFindTableForColumn(System.Object,System.Object,System.Object)
  - Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.UnableToFindTableForIndex(System.Object,System.Object,System.Object)
  langs:
  - csharp
  - vb
  name: SqlServerDesignStrings
  nameWithType: SqlServerDesignStrings
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Properties/SqlServerDesignStrings.Designer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: SqlServerDesignStrings
    path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Properties/SqlServerDesignStrings.Designer.cs
    startLine: 13
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Design
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public static class SqlServerDesignStrings
    content.vb: Public Module SqlServerDesignStrings
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.CannotInterpretComputedValue(System.Object,System.Object,System.Object,System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.CannotInterpretComputedValue(System.Object,System.Object,System.Object,System.Object)
  id: CannotInterpretComputedValue(System.Object,System.Object,System.Object,System.Object)
  parent: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings
  langs:
  - csharp
  - vb
  name: CannotInterpretComputedValue(Object, Object, Object, Object)
  nameWithType: SqlServerDesignStrings.CannotInterpretComputedValue(Object, Object, Object, Object)
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.CannotInterpretComputedValue(System.Object, System.Object, System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Properties/SqlServerDesignStrings.Designer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CannotInterpretComputedValue
    path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Properties/SqlServerDesignStrings.Designer.cs
    startLine: 21
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Design
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\nFor column {columnId} unable to interpret computed value {computedValue}. Will not generate code setting a computed value for the property {propertyName} on entity type {entityTypeName}.\n"
  example: []
  syntax:
    content: public static string CannotInterpretComputedValue(object columnId, object computedValue, object propertyName, object entityTypeName)
    content.vb: Public Shared Function CannotInterpretComputedValue(columnId As Object, computedValue As Object, propertyName As Object, entityTypeName As Object) As String
    parameters:
    - id: columnId
      type: System.Object
    - id: computedValue
      type: System.Object
    - id: propertyName
      type: System.Object
    - id: entityTypeName
      type: System.Object
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.CannotInterpretComputedValue*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.CannotInterpretDefaultValue(System.Object,System.Object,System.Object,System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.CannotInterpretDefaultValue(System.Object,System.Object,System.Object,System.Object)
  id: CannotInterpretDefaultValue(System.Object,System.Object,System.Object,System.Object)
  parent: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings
  langs:
  - csharp
  - vb
  name: CannotInterpretDefaultValue(Object, Object, Object, Object)
  nameWithType: SqlServerDesignStrings.CannotInterpretDefaultValue(Object, Object, Object, Object)
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.CannotInterpretDefaultValue(System.Object, System.Object, System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Properties/SqlServerDesignStrings.Designer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CannotInterpretDefaultValue
    path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Properties/SqlServerDesignStrings.Designer.cs
    startLine: 29
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Design
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\nFor column {columnId} unable to interpret default value {defaultValue}. Will not generate code setting a default value for the property {propertyName} on entity type {entityTypeName}.\n"
  example: []
  syntax:
    content: public static string CannotInterpretDefaultValue(object columnId, object defaultValue, object propertyName, object entityTypeName)
    content.vb: Public Shared Function CannotInterpretDefaultValue(columnId As Object, defaultValue As Object, propertyName As Object, entityTypeName As Object) As String
    parameters:
    - id: columnId
      type: System.Object
    - id: defaultValue
      type: System.Object
    - id: propertyName
      type: System.Object
    - id: entityTypeName
      type: System.Object
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.CannotInterpretDefaultValue*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.ColumnNameEmptyOnForeignKey(System.Object,System.Object,System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.ColumnNameEmptyOnForeignKey(System.Object,System.Object,System.Object)
  id: ColumnNameEmptyOnForeignKey(System.Object,System.Object,System.Object)
  parent: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings
  langs:
  - csharp
  - vb
  name: ColumnNameEmptyOnForeignKey(Object, Object, Object)
  nameWithType: SqlServerDesignStrings.ColumnNameEmptyOnForeignKey(Object, Object, Object)
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.ColumnNameEmptyOnForeignKey(System.Object, System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Properties/SqlServerDesignStrings.Designer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ColumnNameEmptyOnForeignKey
    path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Properties/SqlServerDesignStrings.Designer.cs
    startLine: 37
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Design
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\nFound a column on foreign key [{schemaName}].[{tableName}].[{fkName}] with an empty or null name. Not including column in foreign key\n"
  example: []
  syntax:
    content: public static string ColumnNameEmptyOnForeignKey(object schemaName, object tableName, object fkName)
    content.vb: Public Shared Function ColumnNameEmptyOnForeignKey(schemaName As Object, tableName As Object, fkName As Object) As String
    parameters:
    - id: schemaName
      type: System.Object
    - id: tableName
      type: System.Object
    - id: fkName
      type: System.Object
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.ColumnNameEmptyOnForeignKey*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.ColumnNameEmptyOnIndex(System.Object,System.Object,System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.ColumnNameEmptyOnIndex(System.Object,System.Object,System.Object)
  id: ColumnNameEmptyOnIndex(System.Object,System.Object,System.Object)
  parent: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings
  langs:
  - csharp
  - vb
  name: ColumnNameEmptyOnIndex(Object, Object, Object)
  nameWithType: SqlServerDesignStrings.ColumnNameEmptyOnIndex(Object, Object, Object)
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.ColumnNameEmptyOnIndex(System.Object, System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Properties/SqlServerDesignStrings.Designer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ColumnNameEmptyOnIndex
    path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Properties/SqlServerDesignStrings.Designer.cs
    startLine: 45
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Design
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\nFound a column on index [{schemaName}].[{tableName}].[{indexName}] with an empty or null name. Not including column in index.\n"
  example: []
  syntax:
    content: public static string ColumnNameEmptyOnIndex(object schemaName, object tableName, object indexName)
    content.vb: Public Shared Function ColumnNameEmptyOnIndex(schemaName As Object, tableName As Object, indexName As Object) As String
    parameters:
    - id: schemaName
      type: System.Object
    - id: tableName
      type: System.Object
    - id: indexName
      type: System.Object
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.ColumnNameEmptyOnIndex*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.ColumnNameEmptyOnTable(System.Object,System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.ColumnNameEmptyOnTable(System.Object,System.Object)
  id: ColumnNameEmptyOnTable(System.Object,System.Object)
  parent: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings
  langs:
  - csharp
  - vb
  name: ColumnNameEmptyOnTable(Object, Object)
  nameWithType: SqlServerDesignStrings.ColumnNameEmptyOnTable(Object, Object)
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.ColumnNameEmptyOnTable(System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Properties/SqlServerDesignStrings.Designer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ColumnNameEmptyOnTable
    path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Properties/SqlServerDesignStrings.Designer.cs
    startLine: 53
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Design
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\nFound a column on table [{schemaName}].[{tableName}] with an empty or null name. Skipping column.\n"
  example: []
  syntax:
    content: public static string ColumnNameEmptyOnTable(object schemaName, object tableName)
    content.vb: Public Shared Function ColumnNameEmptyOnTable(schemaName As Object, tableName As Object) As String
    parameters:
    - id: schemaName
      type: System.Object
    - id: tableName
      type: System.Object
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.ColumnNameEmptyOnTable*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.ColumnNotInSelectionSet(System.Object,System.Object,System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.ColumnNotInSelectionSet(System.Object,System.Object,System.Object)
  id: ColumnNotInSelectionSet(System.Object,System.Object,System.Object)
  parent: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings
  langs:
  - csharp
  - vb
  name: ColumnNotInSelectionSet(Object, Object, Object)
  nameWithType: SqlServerDesignStrings.ColumnNotInSelectionSet(Object, Object, Object)
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.ColumnNotInSelectionSet(System.Object, System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Properties/SqlServerDesignStrings.Designer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ColumnNotInSelectionSet
    path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Properties/SqlServerDesignStrings.Designer.cs
    startLine: 61
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Design
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\nColumn {columnName} belongs to table [{schema}].[{tableName}] which is not included in the selection set. Skipping.\n"
  example: []
  syntax:
    content: public static string ColumnNotInSelectionSet(object columnName, object schema, object tableName)
    content.vb: Public Shared Function ColumnNotInSelectionSet(columnName As Object, schema As Object, tableName As Object) As String
    parameters:
    - id: columnName
      type: System.Object
    - id: schema
      type: System.Object
    - id: tableName
      type: System.Object
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.ColumnNotInSelectionSet*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.DataTypeDoesNotAllowSqlServerIdentityStrategy(System.Object,System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.DataTypeDoesNotAllowSqlServerIdentityStrategy(System.Object,System.Object)
  id: DataTypeDoesNotAllowSqlServerIdentityStrategy(System.Object,System.Object)
  parent: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings
  langs:
  - csharp
  - vb
  name: DataTypeDoesNotAllowSqlServerIdentityStrategy(Object, Object)
  nameWithType: SqlServerDesignStrings.DataTypeDoesNotAllowSqlServerIdentityStrategy(Object, Object)
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.DataTypeDoesNotAllowSqlServerIdentityStrategy(System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Properties/SqlServerDesignStrings.Designer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: DataTypeDoesNotAllowSqlServerIdentityStrategy
    path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Properties/SqlServerDesignStrings.Designer.cs
    startLine: 69
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Design
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\nFor column {columnId}. This column is set up as an Identity column, but the SQL Server data type is {sqlServerDataType}. This will be mapped to CLR type byte which does not allow the SqlServerValueGenerationStrategy.IdentityColumn setting. Generating a matching Property but ignoring the Identity setting.\n"
  example: []
  syntax:
    content: public static string DataTypeDoesNotAllowSqlServerIdentityStrategy(object columnId, object sqlServerDataType)
    content.vb: Public Shared Function DataTypeDoesNotAllowSqlServerIdentityStrategy(columnId As Object, sqlServerDataType As Object) As String
    parameters:
    - id: columnId
      type: System.Object
    - id: sqlServerDataType
      type: System.Object
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.DataTypeDoesNotAllowSqlServerIdentityStrategy*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.ForeignKeyColumnNotInSelectionSet(System.Object,System.Object,System.Object,System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.ForeignKeyColumnNotInSelectionSet(System.Object,System.Object,System.Object,System.Object)
  id: ForeignKeyColumnNotInSelectionSet(System.Object,System.Object,System.Object,System.Object)
  parent: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings
  langs:
  - csharp
  - vb
  name: ForeignKeyColumnNotInSelectionSet(Object, Object, Object, Object)
  nameWithType: SqlServerDesignStrings.ForeignKeyColumnNotInSelectionSet(Object, Object, Object, Object)
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.ForeignKeyColumnNotInSelectionSet(System.Object, System.Object, System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Properties/SqlServerDesignStrings.Designer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ForeignKeyColumnNotInSelectionSet
    path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Properties/SqlServerDesignStrings.Designer.cs
    startLine: 77
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Design
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\nForeign key column {columnName} belongs to foreign key {fkName} on table [{schema}].[{tableName}] which is not included in the selection set. Skipping.\n"
  example: []
  syntax:
    content: public static string ForeignKeyColumnNotInSelectionSet(object columnName, object fkName, object schema, object tableName)
    content.vb: Public Shared Function ForeignKeyColumnNotInSelectionSet(columnName As Object, fkName As Object, schema As Object, tableName As Object) As String
    parameters:
    - id: columnName
      type: System.Object
    - id: fkName
      type: System.Object
    - id: schema
      type: System.Object
    - id: tableName
      type: System.Object
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.ForeignKeyColumnNotInSelectionSet*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.ForeignKeyNameEmpty(System.Object,System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.ForeignKeyNameEmpty(System.Object,System.Object)
  id: ForeignKeyNameEmpty(System.Object,System.Object)
  parent: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings
  langs:
  - csharp
  - vb
  name: ForeignKeyNameEmpty(Object, Object)
  nameWithType: SqlServerDesignStrings.ForeignKeyNameEmpty(Object, Object)
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.ForeignKeyNameEmpty(System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Properties/SqlServerDesignStrings.Designer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ForeignKeyNameEmpty
    path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Properties/SqlServerDesignStrings.Designer.cs
    startLine: 85
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Design
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\nFound a foreign key on table [{schemaName}].[{tableName}] with an empty or null name. Skipping foreign key.\n"
  example: []
  syntax:
    content: public static string ForeignKeyNameEmpty(object schemaName, object tableName)
    content.vb: Public Shared Function ForeignKeyNameEmpty(schemaName As Object, tableName As Object) As String
    parameters:
    - id: schemaName
      type: System.Object
    - id: tableName
      type: System.Object
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.ForeignKeyNameEmpty*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.FoundColumn(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.FoundColumn(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)
  id: FoundColumn(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)
  parent: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings
  langs:
  - csharp
  - vb
  name: FoundColumn(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object)
  nameWithType: SqlServerDesignStrings.FoundColumn(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object)
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.FoundColumn(System.Object, System.Object, System.Object, System.Object, System.Object, System.Object, System.Object, System.Object, System.Object, System.Object, System.Object, System.Object, System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Properties/SqlServerDesignStrings.Designer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: FoundColumn
    path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Properties/SqlServerDesignStrings.Designer.cs
    startLine: 93
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Design
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\nFound column with schema: {schema}, table: {tableName}, column name: {columnName}, data type: {dataType}, ordinal: {ordinal}, nullable: {isNullable}, primary key ordinal: {primaryKeyOrdinal}, default value: {defaultValue}, computed value: {computedValue}, precision: {precision}, scale: {scale}, maximum length: {maxLength}, identity: {isIdentity}, computed: {isComputed}.\n"
  example: []
  syntax:
    content: public static string FoundColumn(object schema, object tableName, object columnName, object dataType, object ordinal, object isNullable, object primaryKeyOrdinal, object defaultValue, object computedValue, object precision, object scale, object maxLength, object isIdentity, object isComputed)
    content.vb: Public Shared Function FoundColumn(schema As Object, tableName As Object, columnName As Object, dataType As Object, ordinal As Object, isNullable As Object, primaryKeyOrdinal As Object, defaultValue As Object, computedValue As Object, precision As Object, scale As Object, maxLength As Object, isIdentity As Object, isComputed As Object) As String
    parameters:
    - id: schema
      type: System.Object
    - id: tableName
      type: System.Object
    - id: columnName
      type: System.Object
    - id: dataType
      type: System.Object
    - id: ordinal
      type: System.Object
    - id: isNullable
      type: System.Object
    - id: primaryKeyOrdinal
      type: System.Object
    - id: defaultValue
      type: System.Object
    - id: computedValue
      type: System.Object
    - id: precision
      type: System.Object
    - id: scale
      type: System.Object
    - id: maxLength
      type: System.Object
    - id: isIdentity
      type: System.Object
    - id: isComputed
      type: System.Object
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.FoundColumn*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.FoundDefaultSchema(System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.FoundDefaultSchema(System.Object)
  id: FoundDefaultSchema(System.Object)
  parent: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings
  langs:
  - csharp
  - vb
  name: FoundDefaultSchema(Object)
  nameWithType: SqlServerDesignStrings.FoundDefaultSchema(Object)
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.FoundDefaultSchema(System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Properties/SqlServerDesignStrings.Designer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: FoundDefaultSchema
    path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Properties/SqlServerDesignStrings.Designer.cs
    startLine: 101
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Design
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\nFound default schema {defaultSchema}.\n"
  example: []
  syntax:
    content: public static string FoundDefaultSchema(object defaultSchema)
    content.vb: Public Shared Function FoundDefaultSchema(defaultSchema As Object) As String
    parameters:
    - id: defaultSchema
      type: System.Object
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.FoundDefaultSchema*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.FoundForeignKeyColumn(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.FoundForeignKeyColumn(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)
  id: FoundForeignKeyColumn(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)
  parent: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings
  langs:
  - csharp
  - vb
  name: FoundForeignKeyColumn(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object)
  nameWithType: SqlServerDesignStrings.FoundForeignKeyColumn(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object)
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.FoundForeignKeyColumn(System.Object, System.Object, System.Object, System.Object, System.Object, System.Object, System.Object, System.Object, System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Properties/SqlServerDesignStrings.Designer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: FoundForeignKeyColumn
    path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Properties/SqlServerDesignStrings.Designer.cs
    startLine: 109
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Design
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\nFound foreign key column with schema: {schema}, table: {tableName}, foreign key name: {fkName}, principal table schema: {principalTableSchema}, principal table: {principalTableName}, column name: {columnName}, principal column name: {principalColumnName}, update action: {updateAction}, delete action: {deleteAction}, ordinal: {ordinal}.\n"
  example: []
  syntax:
    content: public static string FoundForeignKeyColumn(object schema, object tableName, object fkName, object principalTableSchema, object principalTableName, object columnName, object principalColumnName, object updateAction, object deleteAction, object ordinal)
    content.vb: Public Shared Function FoundForeignKeyColumn(schema As Object, tableName As Object, fkName As Object, principalTableSchema As Object, principalTableName As Object, columnName As Object, principalColumnName As Object, updateAction As Object, deleteAction As Object, ordinal As Object) As String
    parameters:
    - id: schema
      type: System.Object
    - id: tableName
      type: System.Object
    - id: fkName
      type: System.Object
    - id: principalTableSchema
      type: System.Object
    - id: principalTableName
      type: System.Object
    - id: columnName
      type: System.Object
    - id: principalColumnName
      type: System.Object
    - id: updateAction
      type: System.Object
    - id: deleteAction
      type: System.Object
    - id: ordinal
      type: System.Object
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.FoundForeignKeyColumn*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.FoundIndexColumn(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.FoundIndexColumn(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)
  id: FoundIndexColumn(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)
  parent: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings
  langs:
  - csharp
  - vb
  name: FoundIndexColumn(Object, Object, Object, Object, Object, Object, Object)
  nameWithType: SqlServerDesignStrings.FoundIndexColumn(Object, Object, Object, Object, Object, Object, Object)
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.FoundIndexColumn(System.Object, System.Object, System.Object, System.Object, System.Object, System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Properties/SqlServerDesignStrings.Designer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: FoundIndexColumn
    path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Properties/SqlServerDesignStrings.Designer.cs
    startLine: 117
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Design
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\nFound index column with schema: {schema}, table: {tableName}, index name: {indexName}, unique: {isUnique}, type description: {typeDesc}, column name: {columnName}, ordinal: {ordinal}.\n"
  example: []
  syntax:
    content: public static string FoundIndexColumn(object schema, object tableName, object indexName, object isUnique, object typeDesc, object columnName, object ordinal)
    content.vb: Public Shared Function FoundIndexColumn(schema As Object, tableName As Object, indexName As Object, isUnique As Object, typeDesc As Object, columnName As Object, ordinal As Object) As String
    parameters:
    - id: schema
      type: System.Object
    - id: tableName
      type: System.Object
    - id: indexName
      type: System.Object
    - id: isUnique
      type: System.Object
    - id: typeDesc
      type: System.Object
    - id: columnName
      type: System.Object
    - id: ordinal
      type: System.Object
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.FoundIndexColumn*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.FoundSequence(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.FoundSequence(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)
  id: FoundSequence(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)
  parent: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings
  langs:
  - csharp
  - vb
  name: FoundSequence(Object, Object, Object, Object, Object, Object, Object, Object)
  nameWithType: SqlServerDesignStrings.FoundSequence(Object, Object, Object, Object, Object, Object, Object, Object)
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.FoundSequence(System.Object, System.Object, System.Object, System.Object, System.Object, System.Object, System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Properties/SqlServerDesignStrings.Designer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: FoundSequence
    path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Properties/SqlServerDesignStrings.Designer.cs
    startLine: 125
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Design
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\nFound sequence with schema: {schema}, name: {name}, data type: {dataType}, cyclic: {isCyclic}, increment: {increment}, start: {start}, minimum: {min}, maximum: {max}.\n"
  example: []
  syntax:
    content: public static string FoundSequence(object schema, object name, object dataType, object isCyclic, object increment, object start, object min, object max)
    content.vb: Public Shared Function FoundSequence(schema As Object, name As Object, dataType As Object, isCyclic As Object, increment As Object, start As Object, min As Object, max As Object) As String
    parameters:
    - id: schema
      type: System.Object
    - id: name
      type: System.Object
    - id: dataType
      type: System.Object
    - id: isCyclic
      type: System.Object
    - id: increment
      type: System.Object
    - id: start
      type: System.Object
    - id: min
      type: System.Object
    - id: max
      type: System.Object
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.FoundSequence*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.FoundTable(System.Object,System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.FoundTable(System.Object,System.Object)
  id: FoundTable(System.Object,System.Object)
  parent: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings
  langs:
  - csharp
  - vb
  name: FoundTable(Object, Object)
  nameWithType: SqlServerDesignStrings.FoundTable(Object, Object)
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.FoundTable(System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Properties/SqlServerDesignStrings.Designer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: FoundTable
    path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Properties/SqlServerDesignStrings.Designer.cs
    startLine: 133
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Design
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\nFound table with schema: {schema}, name: {name}.\n"
  example: []
  syntax:
    content: public static string FoundTable(object schema, object name)
    content.vb: Public Shared Function FoundTable(schema As Object, name As Object) As String
    parameters:
    - id: schema
      type: System.Object
    - id: name
      type: System.Object
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.FoundTable*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.FoundTypeAlias(System.Object,System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.FoundTypeAlias(System.Object,System.Object)
  id: FoundTypeAlias(System.Object,System.Object)
  parent: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings
  langs:
  - csharp
  - vb
  name: FoundTypeAlias(Object, Object)
  nameWithType: SqlServerDesignStrings.FoundTypeAlias(Object, Object)
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.FoundTypeAlias(System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Properties/SqlServerDesignStrings.Designer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: FoundTypeAlias
    path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Properties/SqlServerDesignStrings.Designer.cs
    startLine: 141
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Design
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\nFound type alias {alias} which maps to underlying data type {dataType}.\n"
  example: []
  syntax:
    content: public static string FoundTypeAlias(object alias, object dataType)
    content.vb: Public Shared Function FoundTypeAlias(alias As Object, dataType As Object) As String
    parameters:
    - id: alias
      type: System.Object
    - id: dataType
      type: System.Object
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.FoundTypeAlias*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.IndexColumnNotInSelectionSet(System.Object,System.Object,System.Object,System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.IndexColumnNotInSelectionSet(System.Object,System.Object,System.Object,System.Object)
  id: IndexColumnNotInSelectionSet(System.Object,System.Object,System.Object,System.Object)
  parent: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings
  langs:
  - csharp
  - vb
  name: IndexColumnNotInSelectionSet(Object, Object, Object, Object)
  nameWithType: SqlServerDesignStrings.IndexColumnNotInSelectionSet(Object, Object, Object, Object)
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.IndexColumnNotInSelectionSet(System.Object, System.Object, System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Properties/SqlServerDesignStrings.Designer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: IndexColumnNotInSelectionSet
    path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Properties/SqlServerDesignStrings.Designer.cs
    startLine: 149
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Design
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\nIndex column {columnName} belongs to index {indexName} on table [{schema}].[{tableName}] which is not included in the selection set. Skipping.\n"
  example: []
  syntax:
    content: public static string IndexColumnNotInSelectionSet(object columnName, object indexName, object schema, object tableName)
    content.vb: Public Shared Function IndexColumnNotInSelectionSet(columnName As Object, indexName As Object, schema As Object, tableName As Object) As String
    parameters:
    - id: columnName
      type: System.Object
    - id: indexName
      type: System.Object
    - id: schema
      type: System.Object
    - id: tableName
      type: System.Object
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.IndexColumnNotInSelectionSet*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.IndexNameEmpty(System.Object,System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.IndexNameEmpty(System.Object,System.Object)
  id: IndexNameEmpty(System.Object,System.Object)
  parent: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings
  langs:
  - csharp
  - vb
  name: IndexNameEmpty(Object, Object)
  nameWithType: SqlServerDesignStrings.IndexNameEmpty(Object, Object)
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.IndexNameEmpty(System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Properties/SqlServerDesignStrings.Designer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: IndexNameEmpty
    path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Properties/SqlServerDesignStrings.Designer.cs
    startLine: 157
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Design
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\nFound an index on table [{schemaName}].[{tableName}] with an empty or null name. Skipping index.\n"
  example: []
  syntax:
    content: public static string IndexNameEmpty(object schemaName, object tableName)
    content.vb: Public Shared Function IndexNameEmpty(schemaName As Object, tableName As Object) As String
    parameters:
    - id: schemaName
      type: System.Object
    - id: tableName
      type: System.Object
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.IndexNameEmpty*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.PrincipalTableNotInSelectionSet(System.Object,System.Object,System.Object,System.Object,System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.PrincipalTableNotInSelectionSet(System.Object,System.Object,System.Object,System.Object,System.Object)
  id: PrincipalTableNotInSelectionSet(System.Object,System.Object,System.Object,System.Object,System.Object)
  parent: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings
  langs:
  - csharp
  - vb
  name: PrincipalTableNotInSelectionSet(Object, Object, Object, Object, Object)
  nameWithType: SqlServerDesignStrings.PrincipalTableNotInSelectionSet(Object, Object, Object, Object, Object)
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.PrincipalTableNotInSelectionSet(System.Object, System.Object, System.Object, System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Properties/SqlServerDesignStrings.Designer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: PrincipalTableNotInSelectionSet
    path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Properties/SqlServerDesignStrings.Designer.cs
    startLine: 165
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Design
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\nFor foreign key {fkName} on table [{schema}].[{tableName}], unable to model the end of the foreign key on principal table [{principalTableSchema}].[{principalTableName}]. This is usually because the principal table was not included in the selection set.\n"
  example: []
  syntax:
    content: public static string PrincipalTableNotInSelectionSet(object fkName, object schema, object tableName, object principalTableSchema, object principalTableName)
    content.vb: Public Shared Function PrincipalTableNotInSelectionSet(fkName As Object, schema As Object, tableName As Object, principalTableSchema As Object, principalTableName As Object) As String
    parameters:
    - id: fkName
      type: System.Object
    - id: schema
      type: System.Object
    - id: tableName
      type: System.Object
    - id: principalTableSchema
      type: System.Object
    - id: principalTableName
      type: System.Object
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.PrincipalTableNotInSelectionSet*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.SequenceNameEmpty(System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.SequenceNameEmpty(System.Object)
  id: SequenceNameEmpty(System.Object)
  parent: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings
  langs:
  - csharp
  - vb
  name: SequenceNameEmpty(Object)
  nameWithType: SqlServerDesignStrings.SequenceNameEmpty(Object)
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.SequenceNameEmpty(System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Properties/SqlServerDesignStrings.Designer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: SequenceNameEmpty
    path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Properties/SqlServerDesignStrings.Designer.cs
    startLine: 173
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Design
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\nFound a sequence in schema [{schemaName}] with an empty or null name. Skipping sequence.\n"
  example: []
  syntax:
    content: public static string SequenceNameEmpty(object schemaName)
    content.vb: Public Shared Function SequenceNameEmpty(schemaName As Object) As String
    parameters:
    - id: schemaName
      type: System.Object
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.SequenceNameEmpty*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.TableNotInSelectionSet(System.Object,System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.TableNotInSelectionSet(System.Object,System.Object)
  id: TableNotInSelectionSet(System.Object,System.Object)
  parent: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings
  langs:
  - csharp
  - vb
  name: TableNotInSelectionSet(Object, Object)
  nameWithType: SqlServerDesignStrings.TableNotInSelectionSet(Object, Object)
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.TableNotInSelectionSet(System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Properties/SqlServerDesignStrings.Designer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: TableNotInSelectionSet
    path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Properties/SqlServerDesignStrings.Designer.cs
    startLine: 181
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Design
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\nTable [{schema}].[{tableName}] is not included in the selection set. Skipping.\n"
  example: []
  syntax:
    content: public static string TableNotInSelectionSet(object schema, object tableName)
    content.vb: Public Shared Function TableNotInSelectionSet(schema As Object, tableName As Object) As String
    parameters:
    - id: schema
      type: System.Object
    - id: tableName
      type: System.Object
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.TableNotInSelectionSet*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.UnableToConvertDefaultValue(System.Object,System.Object,System.Object,System.Object,System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.UnableToConvertDefaultValue(System.Object,System.Object,System.Object,System.Object,System.Object)
  id: UnableToConvertDefaultValue(System.Object,System.Object,System.Object,System.Object,System.Object)
  parent: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings
  langs:
  - csharp
  - vb
  name: UnableToConvertDefaultValue(Object, Object, Object, Object, Object)
  nameWithType: SqlServerDesignStrings.UnableToConvertDefaultValue(Object, Object, Object, Object, Object)
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.UnableToConvertDefaultValue(System.Object, System.Object, System.Object, System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Properties/SqlServerDesignStrings.Designer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: UnableToConvertDefaultValue
    path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Properties/SqlServerDesignStrings.Designer.cs
    startLine: 189
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Design
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\nFor column {columnId} unable to convert default value {defaultValue} into type {propertyType}. Will not generate code setting a default value for the property {propertyName} on entity type {entityTypeName}.\n"
  example: []
  syntax:
    content: public static string UnableToConvertDefaultValue(object columnId, object defaultValue, object propertyType, object propertyName, object entityTypeName)
    content.vb: Public Shared Function UnableToConvertDefaultValue(columnId As Object, defaultValue As Object, propertyType As Object, propertyName As Object, entityTypeName As Object) As String
    parameters:
    - id: columnId
      type: System.Object
    - id: defaultValue
      type: System.Object
    - id: propertyType
      type: System.Object
    - id: propertyName
      type: System.Object
    - id: entityTypeName
      type: System.Object
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.UnableToConvertDefaultValue*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.UnableToFindColumnForForeignKey(System.Object,System.Object,System.Object,System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.UnableToFindColumnForForeignKey(System.Object,System.Object,System.Object,System.Object)
  id: UnableToFindColumnForForeignKey(System.Object,System.Object,System.Object,System.Object)
  parent: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings
  langs:
  - csharp
  - vb
  name: UnableToFindColumnForForeignKey(Object, Object, Object, Object)
  nameWithType: SqlServerDesignStrings.UnableToFindColumnForForeignKey(Object, Object, Object, Object)
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.UnableToFindColumnForForeignKey(System.Object, System.Object, System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Properties/SqlServerDesignStrings.Designer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: UnableToFindColumnForForeignKey
    path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Properties/SqlServerDesignStrings.Designer.cs
    startLine: 197
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Design
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\nForeign Key {fkName} contains a column named {columnName} which cannot be found on table [{schemaName}].[{tableName}]. Not including column in foreign key.\n"
  example: []
  syntax:
    content: public static string UnableToFindColumnForForeignKey(object fkName, object columnName, object schemaName, object tableName)
    content.vb: Public Shared Function UnableToFindColumnForForeignKey(fkName As Object, columnName As Object, schemaName As Object, tableName As Object) As String
    parameters:
    - id: fkName
      type: System.Object
    - id: columnName
      type: System.Object
    - id: schemaName
      type: System.Object
    - id: tableName
      type: System.Object
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.UnableToFindColumnForForeignKey*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.UnableToFindColumnForIndex(System.Object,System.Object,System.Object,System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.UnableToFindColumnForIndex(System.Object,System.Object,System.Object,System.Object)
  id: UnableToFindColumnForIndex(System.Object,System.Object,System.Object,System.Object)
  parent: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings
  langs:
  - csharp
  - vb
  name: UnableToFindColumnForIndex(Object, Object, Object, Object)
  nameWithType: SqlServerDesignStrings.UnableToFindColumnForIndex(Object, Object, Object, Object)
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.UnableToFindColumnForIndex(System.Object, System.Object, System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Properties/SqlServerDesignStrings.Designer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: UnableToFindColumnForIndex
    path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Properties/SqlServerDesignStrings.Designer.cs
    startLine: 205
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Design
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\nIndex {indexName} contains a column named {columnName} which cannot be found on table [{schemaName}].[{tableName}]. Not including column in index.\n"
  example: []
  syntax:
    content: public static string UnableToFindColumnForIndex(object indexName, object columnName, object schemaName, object tableName)
    content.vb: Public Shared Function UnableToFindColumnForIndex(indexName As Object, columnName As Object, schemaName As Object, tableName As Object) As String
    parameters:
    - id: indexName
      type: System.Object
    - id: columnName
      type: System.Object
    - id: schemaName
      type: System.Object
    - id: tableName
      type: System.Object
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.UnableToFindColumnForIndex*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.UnableToFindTableForColumn(System.Object,System.Object,System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.UnableToFindTableForColumn(System.Object,System.Object,System.Object)
  id: UnableToFindTableForColumn(System.Object,System.Object,System.Object)
  parent: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings
  langs:
  - csharp
  - vb
  name: UnableToFindTableForColumn(Object, Object, Object)
  nameWithType: SqlServerDesignStrings.UnableToFindTableForColumn(Object, Object, Object)
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.UnableToFindTableForColumn(System.Object, System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Properties/SqlServerDesignStrings.Designer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: UnableToFindTableForColumn
    path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Properties/SqlServerDesignStrings.Designer.cs
    startLine: 213
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Design
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\nFor column {columnName}. Unable to find parent table [{schemaName}].[{tablename}]. Skipping column.\n"
  example: []
  syntax:
    content: public static string UnableToFindTableForColumn(object columnName, object schemaName, object tablename)
    content.vb: Public Shared Function UnableToFindTableForColumn(columnName As Object, schemaName As Object, tablename As Object) As String
    parameters:
    - id: columnName
      type: System.Object
    - id: schemaName
      type: System.Object
    - id: tablename
      type: System.Object
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.UnableToFindTableForColumn*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.UnableToFindTableForIndex(System.Object,System.Object,System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.UnableToFindTableForIndex(System.Object,System.Object,System.Object)
  id: UnableToFindTableForIndex(System.Object,System.Object,System.Object)
  parent: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings
  langs:
  - csharp
  - vb
  name: UnableToFindTableForIndex(Object, Object, Object)
  nameWithType: SqlServerDesignStrings.UnableToFindTableForIndex(Object, Object, Object)
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.UnableToFindTableForIndex(System.Object, System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Properties/SqlServerDesignStrings.Designer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: UnableToFindTableForIndex
    path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Properties/SqlServerDesignStrings.Designer.cs
    startLine: 221
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Design
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\nFor index {indexName}. Unable to find parent table [{schemaName}].[{tableName}]. Skipping index.\n"
  example: []
  syntax:
    content: public static string UnableToFindTableForIndex(object indexName, object schemaName, object tableName)
    content.vb: Public Shared Function UnableToFindTableForIndex(indexName As Object, schemaName As Object, tableName As Object) As String
    parameters:
    - id: indexName
      type: System.Object
    - id: schemaName
      type: System.Object
    - id: tableName
      type: System.Object
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.UnableToFindTableForIndex*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.EntityFrameworkCore.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Internal
  fullName: Microsoft.EntityFrameworkCore.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.CannotInterpretComputedValue*
  commentId: Overload:Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.CannotInterpretComputedValue
  isExternal: false
  name: CannotInterpretComputedValue
  nameWithType: SqlServerDesignStrings.CannotInterpretComputedValue
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.CannotInterpretComputedValue
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.CannotInterpretDefaultValue*
  commentId: Overload:Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.CannotInterpretDefaultValue
  isExternal: false
  name: CannotInterpretDefaultValue
  nameWithType: SqlServerDesignStrings.CannotInterpretDefaultValue
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.CannotInterpretDefaultValue
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.ColumnNameEmptyOnForeignKey*
  commentId: Overload:Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.ColumnNameEmptyOnForeignKey
  isExternal: false
  name: ColumnNameEmptyOnForeignKey
  nameWithType: SqlServerDesignStrings.ColumnNameEmptyOnForeignKey
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.ColumnNameEmptyOnForeignKey
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.ColumnNameEmptyOnIndex*
  commentId: Overload:Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.ColumnNameEmptyOnIndex
  isExternal: false
  name: ColumnNameEmptyOnIndex
  nameWithType: SqlServerDesignStrings.ColumnNameEmptyOnIndex
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.ColumnNameEmptyOnIndex
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.ColumnNameEmptyOnTable*
  commentId: Overload:Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.ColumnNameEmptyOnTable
  isExternal: false
  name: ColumnNameEmptyOnTable
  nameWithType: SqlServerDesignStrings.ColumnNameEmptyOnTable
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.ColumnNameEmptyOnTable
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.ColumnNotInSelectionSet*
  commentId: Overload:Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.ColumnNotInSelectionSet
  isExternal: false
  name: ColumnNotInSelectionSet
  nameWithType: SqlServerDesignStrings.ColumnNotInSelectionSet
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.ColumnNotInSelectionSet
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.DataTypeDoesNotAllowSqlServerIdentityStrategy*
  commentId: Overload:Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.DataTypeDoesNotAllowSqlServerIdentityStrategy
  isExternal: false
  name: DataTypeDoesNotAllowSqlServerIdentityStrategy
  nameWithType: SqlServerDesignStrings.DataTypeDoesNotAllowSqlServerIdentityStrategy
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.DataTypeDoesNotAllowSqlServerIdentityStrategy
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.ForeignKeyColumnNotInSelectionSet*
  commentId: Overload:Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.ForeignKeyColumnNotInSelectionSet
  isExternal: false
  name: ForeignKeyColumnNotInSelectionSet
  nameWithType: SqlServerDesignStrings.ForeignKeyColumnNotInSelectionSet
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.ForeignKeyColumnNotInSelectionSet
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.ForeignKeyNameEmpty*
  commentId: Overload:Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.ForeignKeyNameEmpty
  isExternal: false
  name: ForeignKeyNameEmpty
  nameWithType: SqlServerDesignStrings.ForeignKeyNameEmpty
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.ForeignKeyNameEmpty
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.FoundColumn*
  commentId: Overload:Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.FoundColumn
  isExternal: false
  name: FoundColumn
  nameWithType: SqlServerDesignStrings.FoundColumn
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.FoundColumn
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.FoundDefaultSchema*
  commentId: Overload:Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.FoundDefaultSchema
  isExternal: false
  name: FoundDefaultSchema
  nameWithType: SqlServerDesignStrings.FoundDefaultSchema
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.FoundDefaultSchema
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.FoundForeignKeyColumn*
  commentId: Overload:Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.FoundForeignKeyColumn
  isExternal: false
  name: FoundForeignKeyColumn
  nameWithType: SqlServerDesignStrings.FoundForeignKeyColumn
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.FoundForeignKeyColumn
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.FoundIndexColumn*
  commentId: Overload:Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.FoundIndexColumn
  isExternal: false
  name: FoundIndexColumn
  nameWithType: SqlServerDesignStrings.FoundIndexColumn
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.FoundIndexColumn
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.FoundSequence*
  commentId: Overload:Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.FoundSequence
  isExternal: false
  name: FoundSequence
  nameWithType: SqlServerDesignStrings.FoundSequence
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.FoundSequence
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.FoundTable*
  commentId: Overload:Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.FoundTable
  isExternal: false
  name: FoundTable
  nameWithType: SqlServerDesignStrings.FoundTable
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.FoundTable
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.FoundTypeAlias*
  commentId: Overload:Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.FoundTypeAlias
  isExternal: false
  name: FoundTypeAlias
  nameWithType: SqlServerDesignStrings.FoundTypeAlias
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.FoundTypeAlias
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.IndexColumnNotInSelectionSet*
  commentId: Overload:Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.IndexColumnNotInSelectionSet
  isExternal: false
  name: IndexColumnNotInSelectionSet
  nameWithType: SqlServerDesignStrings.IndexColumnNotInSelectionSet
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.IndexColumnNotInSelectionSet
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.IndexNameEmpty*
  commentId: Overload:Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.IndexNameEmpty
  isExternal: false
  name: IndexNameEmpty
  nameWithType: SqlServerDesignStrings.IndexNameEmpty
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.IndexNameEmpty
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.PrincipalTableNotInSelectionSet*
  commentId: Overload:Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.PrincipalTableNotInSelectionSet
  isExternal: false
  name: PrincipalTableNotInSelectionSet
  nameWithType: SqlServerDesignStrings.PrincipalTableNotInSelectionSet
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.PrincipalTableNotInSelectionSet
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.SequenceNameEmpty*
  commentId: Overload:Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.SequenceNameEmpty
  isExternal: false
  name: SequenceNameEmpty
  nameWithType: SqlServerDesignStrings.SequenceNameEmpty
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.SequenceNameEmpty
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.TableNotInSelectionSet*
  commentId: Overload:Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.TableNotInSelectionSet
  isExternal: false
  name: TableNotInSelectionSet
  nameWithType: SqlServerDesignStrings.TableNotInSelectionSet
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.TableNotInSelectionSet
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.UnableToConvertDefaultValue*
  commentId: Overload:Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.UnableToConvertDefaultValue
  isExternal: false
  name: UnableToConvertDefaultValue
  nameWithType: SqlServerDesignStrings.UnableToConvertDefaultValue
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.UnableToConvertDefaultValue
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.UnableToFindColumnForForeignKey*
  commentId: Overload:Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.UnableToFindColumnForForeignKey
  isExternal: false
  name: UnableToFindColumnForForeignKey
  nameWithType: SqlServerDesignStrings.UnableToFindColumnForForeignKey
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.UnableToFindColumnForForeignKey
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.UnableToFindColumnForIndex*
  commentId: Overload:Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.UnableToFindColumnForIndex
  isExternal: false
  name: UnableToFindColumnForIndex
  nameWithType: SqlServerDesignStrings.UnableToFindColumnForIndex
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.UnableToFindColumnForIndex
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.UnableToFindTableForColumn*
  commentId: Overload:Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.UnableToFindTableForColumn
  isExternal: false
  name: UnableToFindTableForColumn
  nameWithType: SqlServerDesignStrings.UnableToFindTableForColumn
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.UnableToFindTableForColumn
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.UnableToFindTableForIndex*
  commentId: Overload:Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.UnableToFindTableForIndex
  isExternal: false
  name: UnableToFindTableForIndex
  nameWithType: SqlServerDesignStrings.UnableToFindTableForIndex
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignStrings.UnableToFindTableForIndex
