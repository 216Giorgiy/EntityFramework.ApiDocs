### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase
  commentId: T:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase
  id: ModelBuilderTest.ManyToOneTestBase
  parent: Microsoft.EntityFrameworkCore.Tests
  children:
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Can_add_annotations
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Can_change_delete_behavior
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Can_have_both_convention_properties_specified
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Can_have_both_convention_properties_specified_in_any_order
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Can_have_FK_by_convention_specified_with_explicit_principal_key
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Can_have_FK_by_convention_specified_with_explicit_principal_key_in_any_order
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Can_have_principal_key_by_convention_specified_with_explicit_PK
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Can_have_principal_key_by_convention_specified_with_explicit_PK_in_any_order
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Can_set_foreign_key_property_when_matching_property_added
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Can_use_alternate_composite_key
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Can_use_alternate_composite_key_in_any_order
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Can_use_explicitly_specified_PK
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Can_use_non_PK_principal
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_both_navigations_and_creates_composite_FK_specified
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_both_navigations_and_creates_FK_specified
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_both_navigations_and_creates_new_FK
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_both_navigations_and_creates_shadow_FK
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_both_navigations_and_does_not_use_existing_FK
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_both_navigations_and_finds_existing_composite_FK
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_both_navigations_and_matches_shadow_FK_by_convention
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_both_navigations_and_overrides_existing_FK_if_uniqueness_does_not_match
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_both_navigations_and_uses_specified_FK_even_if_found_by_convention
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_both_navigations_with_existing_FK_not_found_by_convention
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_relationship_on_existing_FK_is_using_different_principal_key
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_relationship_on_existing_FK_is_using_different_principal_key_different_order
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_relationship_with_navigation_to_dependent
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_relationship_with_navigation_to_principal
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_relationship_with_no_navigations
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_relationship_with_no_navigations_and_specified_composite_FK
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_relationship_with_no_navigations_and_specified_FK
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_shadow_FK_property_with_non_shadow_PK
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_shadow_FK_property_with_shadow_PK
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_shadow_FK_with_navigation_to_dependent
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_shadow_FK_with_navigation_to_principal
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_shadow_FK_with_no_navigations_with
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_shadow_property_for_foreign_key_according_to_navigation_to_principal_name_when_present
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_shadow_property_for_foreign_key_according_to_target_type_when_navigation_to_principal_name_not_present
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_specified_composite_FK_with_navigation_to_dependent
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_specified_composite_FK_with_navigation_to_principal
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_specified_FK_with_navigation_to_dependent
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_specified_FK_with_navigation_to_principal
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Finds_existing_navigation_to_dependent_and_uses_associated_FK
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Finds_existing_navigation_to_principal_and_uses_associated_FK
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Finds_existing_navigations_and_uses_associated_FK
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Handles_identity_correctly_while_removing_navigation
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Non_nullable_FK_are_required_by_default
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Non_nullable_FK_can_be_made_optional_separetely
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Non_nullable_FK_cannot_be_made_optional
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Nullable_FK_are_optional_by_default
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Nullable_FK_can_be_made_required
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.One_to_many_relationship_has_no_ambiguity_explicit
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Removes_existing_unidirectional_one_to_one_relationship
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Throws_on_existing_one_to_one_relationship
  langs:
  - csharp
  - vb
  name: ModelBuilderTest.ManyToOneTestBase
  nameWithType: ModelBuilderTest.ManyToOneTestBase
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase
  type: Class
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ManyToOneTestBase
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
    startLine: 15
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: 'public abstract class ManyToOneTestBase : ModelBuilderTest.ModelBuilderTestBase'
    content.vb: >-
      Public MustInherit Class ManyToOneTestBase
          Inherits ModelBuilderTest.ModelBuilderTestBase
  inheritance:
  - System.Object
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase
  inheritedMembers:
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.StringComparer)
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IProperty},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IProperty},Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.PropertyComparer)
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.INavigation},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.INavigation},Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.NavigationComparer)
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IKey},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IKey},Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.KeyComparer)
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IForeignKey},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IForeignKey},Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.ForeignKeyStrictComparer)
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IIndex},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IIndex},Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.IndexComparer)
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.CreateModelBuilder
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.HobNobBuilder
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.CreateTestModelBuilder(Microsoft.EntityFrameworkCore.ModelBuilder)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Finds_existing_navigations_and_uses_associated_FK
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Finds_existing_navigations_and_uses_associated_FK
  id: Finds_existing_navigations_and_uses_associated_FK
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase
  langs:
  - csharp
  - vb
  name: Finds_existing_navigations_and_uses_associated_FK()
  nameWithType: ModelBuilderTest.ManyToOneTestBase.Finds_existing_navigations_and_uses_associated_FK()
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Finds_existing_navigations_and_uses_associated_FK()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Finds_existing_navigations_and_uses_associated_FK
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
    startLine: 17
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Finds_existing_navigations_and_uses_associated_FK()
    content.vb: >-
      <Fact>

      Public Overridable Sub Finds_existing_navigations_and_uses_associated_FK
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Finds_existing_navigation_to_principal_and_uses_associated_FK
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Finds_existing_navigation_to_principal_and_uses_associated_FK
  id: Finds_existing_navigation_to_principal_and_uses_associated_FK
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase
  langs:
  - csharp
  - vb
  name: Finds_existing_navigation_to_principal_and_uses_associated_FK()
  nameWithType: ModelBuilderTest.ManyToOneTestBase.Finds_existing_navigation_to_principal_and_uses_associated_FK()
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Finds_existing_navigation_to_principal_and_uses_associated_FK()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Finds_existing_navigation_to_principal_and_uses_associated_FK
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
    startLine: 55
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Finds_existing_navigation_to_principal_and_uses_associated_FK()
    content.vb: >-
      <Fact>

      Public Overridable Sub Finds_existing_navigation_to_principal_and_uses_associated_FK
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Finds_existing_navigation_to_dependent_and_uses_associated_FK
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Finds_existing_navigation_to_dependent_and_uses_associated_FK
  id: Finds_existing_navigation_to_dependent_and_uses_associated_FK
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase
  langs:
  - csharp
  - vb
  name: Finds_existing_navigation_to_dependent_and_uses_associated_FK()
  nameWithType: ModelBuilderTest.ManyToOneTestBase.Finds_existing_navigation_to_dependent_and_uses_associated_FK()
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Finds_existing_navigation_to_dependent_and_uses_associated_FK()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Finds_existing_navigation_to_dependent_and_uses_associated_FK
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
    startLine: 88
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Finds_existing_navigation_to_dependent_and_uses_associated_FK()
    content.vb: >-
      <Fact>

      Public Overridable Sub Finds_existing_navigation_to_dependent_and_uses_associated_FK
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_both_navigations_and_does_not_use_existing_FK
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_both_navigations_and_does_not_use_existing_FK
  id: Creates_both_navigations_and_does_not_use_existing_FK
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase
  langs:
  - csharp
  - vb
  name: Creates_both_navigations_and_does_not_use_existing_FK()
  nameWithType: ModelBuilderTest.ManyToOneTestBase.Creates_both_navigations_and_does_not_use_existing_FK()
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_both_navigations_and_does_not_use_existing_FK()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Creates_both_navigations_and_does_not_use_existing_FK
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
    startLine: 124
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Creates_both_navigations_and_does_not_use_existing_FK()
    content.vb: >-
      <Fact>

      Public Overridable Sub Creates_both_navigations_and_does_not_use_existing_FK
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_both_navigations_and_creates_new_FK
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_both_navigations_and_creates_new_FK
  id: Creates_both_navigations_and_creates_new_FK
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase
  langs:
  - csharp
  - vb
  name: Creates_both_navigations_and_creates_new_FK()
  nameWithType: ModelBuilderTest.ManyToOneTestBase.Creates_both_navigations_and_creates_new_FK()
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_both_navigations_and_creates_new_FK()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Creates_both_navigations_and_creates_new_FK
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
    startLine: 158
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Creates_both_navigations_and_creates_new_FK()
    content.vb: >-
      <Fact>

      Public Overridable Sub Creates_both_navigations_and_creates_new_FK
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_relationship_with_navigation_to_principal
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_relationship_with_navigation_to_principal
  id: Creates_relationship_with_navigation_to_principal
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase
  langs:
  - csharp
  - vb
  name: Creates_relationship_with_navigation_to_principal()
  nameWithType: ModelBuilderTest.ManyToOneTestBase.Creates_relationship_with_navigation_to_principal()
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_relationship_with_navigation_to_principal()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Creates_relationship_with_navigation_to_principal
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
    startLine: 197
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Creates_relationship_with_navigation_to_principal()
    content.vb: >-
      <Fact>

      Public Overridable Sub Creates_relationship_with_navigation_to_principal
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_relationship_with_navigation_to_dependent
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_relationship_with_navigation_to_dependent
  id: Creates_relationship_with_navigation_to_dependent
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase
  langs:
  - csharp
  - vb
  name: Creates_relationship_with_navigation_to_dependent()
  nameWithType: ModelBuilderTest.ManyToOneTestBase.Creates_relationship_with_navigation_to_dependent()
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_relationship_with_navigation_to_dependent()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Creates_relationship_with_navigation_to_dependent
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
    startLine: 231
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Creates_relationship_with_navigation_to_dependent()
    content.vb: >-
      <Fact>

      Public Overridable Sub Creates_relationship_with_navigation_to_dependent
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_relationship_with_no_navigations
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_relationship_with_no_navigations
  id: Creates_relationship_with_no_navigations
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase
  langs:
  - csharp
  - vb
  name: Creates_relationship_with_no_navigations()
  nameWithType: ModelBuilderTest.ManyToOneTestBase.Creates_relationship_with_no_navigations()
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_relationship_with_no_navigations()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Creates_relationship_with_no_navigations
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
    startLine: 265
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Creates_relationship_with_no_navigations()
    content.vb: >-
      <Fact>

      Public Overridable Sub Creates_relationship_with_no_navigations
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_both_navigations_and_uses_specified_FK_even_if_found_by_convention
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_both_navigations_and_uses_specified_FK_even_if_found_by_convention
  id: Creates_both_navigations_and_uses_specified_FK_even_if_found_by_convention
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase
  langs:
  - csharp
  - vb
  name: Creates_both_navigations_and_uses_specified_FK_even_if_found_by_convention()
  nameWithType: ModelBuilderTest.ManyToOneTestBase.Creates_both_navigations_and_uses_specified_FK_even_if_found_by_convention()
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_both_navigations_and_uses_specified_FK_even_if_found_by_convention()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Creates_both_navigations_and_uses_specified_FK_even_if_found_by_convention
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
    startLine: 304
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Creates_both_navigations_and_uses_specified_FK_even_if_found_by_convention()
    content.vb: >-
      <Fact>

      Public Overridable Sub Creates_both_navigations_and_uses_specified_FK_even_if_found_by_convention
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_both_navigations_with_existing_FK_not_found_by_convention
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_both_navigations_with_existing_FK_not_found_by_convention
  id: Creates_both_navigations_with_existing_FK_not_found_by_convention
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase
  langs:
  - csharp
  - vb
  name: Creates_both_navigations_with_existing_FK_not_found_by_convention()
  nameWithType: ModelBuilderTest.ManyToOneTestBase.Creates_both_navigations_with_existing_FK_not_found_by_convention()
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_both_navigations_with_existing_FK_not_found_by_convention()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Creates_both_navigations_with_existing_FK_not_found_by_convention
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
    startLine: 345
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Creates_both_navigations_with_existing_FK_not_found_by_convention()
    content.vb: >-
      <Fact>

      Public Overridable Sub Creates_both_navigations_with_existing_FK_not_found_by_convention
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_both_navigations_and_creates_FK_specified
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_both_navigations_and_creates_FK_specified
  id: Creates_both_navigations_and_creates_FK_specified
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase
  langs:
  - csharp
  - vb
  name: Creates_both_navigations_and_creates_FK_specified()
  nameWithType: ModelBuilderTest.ManyToOneTestBase.Creates_both_navigations_and_creates_FK_specified()
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_both_navigations_and_creates_FK_specified()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Creates_both_navigations_and_creates_FK_specified
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
    startLine: 384
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Creates_both_navigations_and_creates_FK_specified()
    content.vb: >-
      <Fact>

      Public Overridable Sub Creates_both_navigations_and_creates_FK_specified
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_specified_FK_with_navigation_to_principal
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_specified_FK_with_navigation_to_principal
  id: Creates_specified_FK_with_navigation_to_principal
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase
  langs:
  - csharp
  - vb
  name: Creates_specified_FK_with_navigation_to_principal()
  nameWithType: ModelBuilderTest.ManyToOneTestBase.Creates_specified_FK_with_navigation_to_principal()
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_specified_FK_with_navigation_to_principal()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Creates_specified_FK_with_navigation_to_principal
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
    startLine: 424
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Creates_specified_FK_with_navigation_to_principal()
    content.vb: >-
      <Fact>

      Public Overridable Sub Creates_specified_FK_with_navigation_to_principal
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_specified_FK_with_navigation_to_dependent
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_specified_FK_with_navigation_to_dependent
  id: Creates_specified_FK_with_navigation_to_dependent
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase
  langs:
  - csharp
  - vb
  name: Creates_specified_FK_with_navigation_to_dependent()
  nameWithType: ModelBuilderTest.ManyToOneTestBase.Creates_specified_FK_with_navigation_to_dependent()
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_specified_FK_with_navigation_to_dependent()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Creates_specified_FK_with_navigation_to_dependent
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
    startLine: 458
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Creates_specified_FK_with_navigation_to_dependent()
    content.vb: >-
      <Fact>

      Public Overridable Sub Creates_specified_FK_with_navigation_to_dependent
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_relationship_with_no_navigations_and_specified_FK
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_relationship_with_no_navigations_and_specified_FK
  id: Creates_relationship_with_no_navigations_and_specified_FK
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase
  langs:
  - csharp
  - vb
  name: Creates_relationship_with_no_navigations_and_specified_FK()
  nameWithType: ModelBuilderTest.ManyToOneTestBase.Creates_relationship_with_no_navigations_and_specified_FK()
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_relationship_with_no_navigations_and_specified_FK()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Creates_relationship_with_no_navigations_and_specified_FK
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
    startLine: 494
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Creates_relationship_with_no_navigations_and_specified_FK()
    content.vb: >-
      <Fact>

      Public Overridable Sub Creates_relationship_with_no_navigations_and_specified_FK
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_both_navigations_and_creates_shadow_FK
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_both_navigations_and_creates_shadow_FK
  id: Creates_both_navigations_and_creates_shadow_FK
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase
  langs:
  - csharp
  - vb
  name: Creates_both_navigations_and_creates_shadow_FK()
  nameWithType: ModelBuilderTest.ManyToOneTestBase.Creates_both_navigations_and_creates_shadow_FK()
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_both_navigations_and_creates_shadow_FK()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Creates_both_navigations_and_creates_shadow_FK
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
    startLine: 533
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Creates_both_navigations_and_creates_shadow_FK()
    content.vb: >-
      <Fact>

      Public Overridable Sub Creates_both_navigations_and_creates_shadow_FK
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_shadow_FK_with_navigation_to_principal
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_shadow_FK_with_navigation_to_principal
  id: Creates_shadow_FK_with_navigation_to_principal
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase
  langs:
  - csharp
  - vb
  name: Creates_shadow_FK_with_navigation_to_principal()
  nameWithType: ModelBuilderTest.ManyToOneTestBase.Creates_shadow_FK_with_navigation_to_principal()
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_shadow_FK_with_navigation_to_principal()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Creates_shadow_FK_with_navigation_to_principal
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
    startLine: 574
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Creates_shadow_FK_with_navigation_to_principal()
    content.vb: >-
      <Fact>

      Public Overridable Sub Creates_shadow_FK_with_navigation_to_principal
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_shadow_FK_with_navigation_to_dependent
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_shadow_FK_with_navigation_to_dependent
  id: Creates_shadow_FK_with_navigation_to_dependent
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase
  langs:
  - csharp
  - vb
  name: Creates_shadow_FK_with_navigation_to_dependent()
  nameWithType: ModelBuilderTest.ManyToOneTestBase.Creates_shadow_FK_with_navigation_to_dependent()
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_shadow_FK_with_navigation_to_dependent()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Creates_shadow_FK_with_navigation_to_dependent
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
    startLine: 610
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Creates_shadow_FK_with_navigation_to_dependent()
    content.vb: >-
      <Fact>

      Public Overridable Sub Creates_shadow_FK_with_navigation_to_dependent
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_shadow_FK_with_no_navigations_with
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_shadow_FK_with_no_navigations_with
  id: Creates_shadow_FK_with_no_navigations_with
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase
  langs:
  - csharp
  - vb
  name: Creates_shadow_FK_with_no_navigations_with()
  nameWithType: ModelBuilderTest.ManyToOneTestBase.Creates_shadow_FK_with_no_navigations_with()
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_shadow_FK_with_no_navigations_with()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Creates_shadow_FK_with_no_navigations_with
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
    startLine: 646
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Creates_shadow_FK_with_no_navigations_with()
    content.vb: >-
      <Fact>

      Public Overridable Sub Creates_shadow_FK_with_no_navigations_with
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_both_navigations_and_matches_shadow_FK_by_convention
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_both_navigations_and_matches_shadow_FK_by_convention
  id: Creates_both_navigations_and_matches_shadow_FK_by_convention
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase
  langs:
  - csharp
  - vb
  name: Creates_both_navigations_and_matches_shadow_FK_by_convention()
  nameWithType: ModelBuilderTest.ManyToOneTestBase.Creates_both_navigations_and_matches_shadow_FK_by_convention()
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_both_navigations_and_matches_shadow_FK_by_convention()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Creates_both_navigations_and_matches_shadow_FK_by_convention
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
    startLine: 686
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Creates_both_navigations_and_matches_shadow_FK_by_convention()
    content.vb: >-
      <Fact>

      Public Overridable Sub Creates_both_navigations_and_matches_shadow_FK_by_convention
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_both_navigations_and_overrides_existing_FK_if_uniqueness_does_not_match
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_both_navigations_and_overrides_existing_FK_if_uniqueness_does_not_match
  id: Creates_both_navigations_and_overrides_existing_FK_if_uniqueness_does_not_match
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase
  langs:
  - csharp
  - vb
  name: Creates_both_navigations_and_overrides_existing_FK_if_uniqueness_does_not_match()
  nameWithType: ModelBuilderTest.ManyToOneTestBase.Creates_both_navigations_and_overrides_existing_FK_if_uniqueness_does_not_match()
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_both_navigations_and_overrides_existing_FK_if_uniqueness_does_not_match()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Creates_both_navigations_and_overrides_existing_FK_if_uniqueness_does_not_match
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
    startLine: 724
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Creates_both_navigations_and_overrides_existing_FK_if_uniqueness_does_not_match()
    content.vb: >-
      <Fact>

      Public Overridable Sub Creates_both_navigations_and_overrides_existing_FK_if_uniqueness_does_not_match
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Can_use_explicitly_specified_PK
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Can_use_explicitly_specified_PK
  id: Can_use_explicitly_specified_PK
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase
  langs:
  - csharp
  - vb
  name: Can_use_explicitly_specified_PK()
  nameWithType: ModelBuilderTest.ManyToOneTestBase.Can_use_explicitly_specified_PK()
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Can_use_explicitly_specified_PK()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_use_explicitly_specified_PK
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
    startLine: 762
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Can_use_explicitly_specified_PK()
    content.vb: >-
      <Fact>

      Public Overridable Sub Can_use_explicitly_specified_PK
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Can_use_non_PK_principal
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Can_use_non_PK_principal
  id: Can_use_non_PK_principal
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase
  langs:
  - csharp
  - vb
  name: Can_use_non_PK_principal()
  nameWithType: ModelBuilderTest.ManyToOneTestBase.Can_use_non_PK_principal()
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Can_use_non_PK_principal()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_use_non_PK_principal
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
    startLine: 805
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Can_use_non_PK_principal()
    content.vb: >-
      <Fact>

      Public Overridable Sub Can_use_non_PK_principal
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Can_have_both_convention_properties_specified
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Can_have_both_convention_properties_specified
  id: Can_have_both_convention_properties_specified
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase
  langs:
  - csharp
  - vb
  name: Can_have_both_convention_properties_specified()
  nameWithType: ModelBuilderTest.ManyToOneTestBase.Can_have_both_convention_properties_specified()
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Can_have_both_convention_properties_specified()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_have_both_convention_properties_specified
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
    startLine: 858
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Can_have_both_convention_properties_specified()
    content.vb: >-
      <Fact>

      Public Overridable Sub Can_have_both_convention_properties_specified
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Can_have_both_convention_properties_specified_in_any_order
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Can_have_both_convention_properties_specified_in_any_order
  id: Can_have_both_convention_properties_specified_in_any_order
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase
  langs:
  - csharp
  - vb
  name: Can_have_both_convention_properties_specified_in_any_order()
  nameWithType: ModelBuilderTest.ManyToOneTestBase.Can_have_both_convention_properties_specified_in_any_order()
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Can_have_both_convention_properties_specified_in_any_order()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_have_both_convention_properties_specified_in_any_order
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
    startLine: 902
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Can_have_both_convention_properties_specified_in_any_order()
    content.vb: >-
      <Fact>

      Public Overridable Sub Can_have_both_convention_properties_specified_in_any_order
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Can_have_FK_by_convention_specified_with_explicit_principal_key
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Can_have_FK_by_convention_specified_with_explicit_principal_key
  id: Can_have_FK_by_convention_specified_with_explicit_principal_key
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase
  langs:
  - csharp
  - vb
  name: Can_have_FK_by_convention_specified_with_explicit_principal_key()
  nameWithType: ModelBuilderTest.ManyToOneTestBase.Can_have_FK_by_convention_specified_with_explicit_principal_key()
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Can_have_FK_by_convention_specified_with_explicit_principal_key()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_have_FK_by_convention_specified_with_explicit_principal_key
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
    startLine: 946
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Can_have_FK_by_convention_specified_with_explicit_principal_key()
    content.vb: >-
      <Fact>

      Public Overridable Sub Can_have_FK_by_convention_specified_with_explicit_principal_key
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Can_have_FK_by_convention_specified_with_explicit_principal_key_in_any_order
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Can_have_FK_by_convention_specified_with_explicit_principal_key_in_any_order
  id: Can_have_FK_by_convention_specified_with_explicit_principal_key_in_any_order
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase
  langs:
  - csharp
  - vb
  name: Can_have_FK_by_convention_specified_with_explicit_principal_key_in_any_order()
  nameWithType: ModelBuilderTest.ManyToOneTestBase.Can_have_FK_by_convention_specified_with_explicit_principal_key_in_any_order()
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Can_have_FK_by_convention_specified_with_explicit_principal_key_in_any_order()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_have_FK_by_convention_specified_with_explicit_principal_key_in_any_order
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
    startLine: 997
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Can_have_FK_by_convention_specified_with_explicit_principal_key_in_any_order()
    content.vb: >-
      <Fact>

      Public Overridable Sub Can_have_FK_by_convention_specified_with_explicit_principal_key_in_any_order
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Can_have_principal_key_by_convention_specified_with_explicit_PK
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Can_have_principal_key_by_convention_specified_with_explicit_PK
  id: Can_have_principal_key_by_convention_specified_with_explicit_PK
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase
  langs:
  - csharp
  - vb
  name: Can_have_principal_key_by_convention_specified_with_explicit_PK()
  nameWithType: ModelBuilderTest.ManyToOneTestBase.Can_have_principal_key_by_convention_specified_with_explicit_PK()
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Can_have_principal_key_by_convention_specified_with_explicit_PK()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_have_principal_key_by_convention_specified_with_explicit_PK
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
    startLine: 1048
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Can_have_principal_key_by_convention_specified_with_explicit_PK()
    content.vb: >-
      <Fact>

      Public Overridable Sub Can_have_principal_key_by_convention_specified_with_explicit_PK
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Can_have_principal_key_by_convention_specified_with_explicit_PK_in_any_order
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Can_have_principal_key_by_convention_specified_with_explicit_PK_in_any_order
  id: Can_have_principal_key_by_convention_specified_with_explicit_PK_in_any_order
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase
  langs:
  - csharp
  - vb
  name: Can_have_principal_key_by_convention_specified_with_explicit_PK_in_any_order()
  nameWithType: ModelBuilderTest.ManyToOneTestBase.Can_have_principal_key_by_convention_specified_with_explicit_PK_in_any_order()
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Can_have_principal_key_by_convention_specified_with_explicit_PK_in_any_order()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_have_principal_key_by_convention_specified_with_explicit_PK_in_any_order
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
    startLine: 1097
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Can_have_principal_key_by_convention_specified_with_explicit_PK_in_any_order()
    content.vb: >-
      <Fact>

      Public Overridable Sub Can_have_principal_key_by_convention_specified_with_explicit_PK_in_any_order
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_both_navigations_and_finds_existing_composite_FK
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_both_navigations_and_finds_existing_composite_FK
  id: Creates_both_navigations_and_finds_existing_composite_FK
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase
  langs:
  - csharp
  - vb
  name: Creates_both_navigations_and_finds_existing_composite_FK()
  nameWithType: ModelBuilderTest.ManyToOneTestBase.Creates_both_navigations_and_finds_existing_composite_FK()
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_both_navigations_and_finds_existing_composite_FK()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Creates_both_navigations_and_finds_existing_composite_FK
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
    startLine: 1146
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Creates_both_navigations_and_finds_existing_composite_FK()
    content.vb: >-
      <Fact>

      Public Overridable Sub Creates_both_navigations_and_finds_existing_composite_FK
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_both_navigations_and_creates_composite_FK_specified
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_both_navigations_and_creates_composite_FK_specified
  id: Creates_both_navigations_and_creates_composite_FK_specified
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase
  langs:
  - csharp
  - vb
  name: Creates_both_navigations_and_creates_composite_FK_specified()
  nameWithType: ModelBuilderTest.ManyToOneTestBase.Creates_both_navigations_and_creates_composite_FK_specified()
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_both_navigations_and_creates_composite_FK_specified()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Creates_both_navigations_and_creates_composite_FK_specified
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
    startLine: 1186
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Creates_both_navigations_and_creates_composite_FK_specified()
    content.vb: >-
      <Fact>

      Public Overridable Sub Creates_both_navigations_and_creates_composite_FK_specified
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Can_use_alternate_composite_key
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Can_use_alternate_composite_key
  id: Can_use_alternate_composite_key
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase
  langs:
  - csharp
  - vb
  name: Can_use_alternate_composite_key()
  nameWithType: ModelBuilderTest.ManyToOneTestBase.Can_use_alternate_composite_key()
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Can_use_alternate_composite_key()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_use_alternate_composite_key
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
    startLine: 1229
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Can_use_alternate_composite_key()
    content.vb: >-
      <Fact>

      Public Overridable Sub Can_use_alternate_composite_key
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Can_use_alternate_composite_key_in_any_order
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Can_use_alternate_composite_key_in_any_order
  id: Can_use_alternate_composite_key_in_any_order
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase
  langs:
  - csharp
  - vb
  name: Can_use_alternate_composite_key_in_any_order()
  nameWithType: ModelBuilderTest.ManyToOneTestBase.Can_use_alternate_composite_key_in_any_order()
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Can_use_alternate_composite_key_in_any_order()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_use_alternate_composite_key_in_any_order
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
    startLine: 1283
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Can_use_alternate_composite_key_in_any_order()
    content.vb: >-
      <Fact>

      Public Overridable Sub Can_use_alternate_composite_key_in_any_order
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_specified_composite_FK_with_navigation_to_principal
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_specified_composite_FK_with_navigation_to_principal
  id: Creates_specified_composite_FK_with_navigation_to_principal
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase
  langs:
  - csharp
  - vb
  name: Creates_specified_composite_FK_with_navigation_to_principal()
  nameWithType: ModelBuilderTest.ManyToOneTestBase.Creates_specified_composite_FK_with_navigation_to_principal()
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_specified_composite_FK_with_navigation_to_principal()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Creates_specified_composite_FK_with_navigation_to_principal
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
    startLine: 1337
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Creates_specified_composite_FK_with_navigation_to_principal()
    content.vb: >-
      <Fact>

      Public Overridable Sub Creates_specified_composite_FK_with_navigation_to_principal
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_specified_composite_FK_with_navigation_to_dependent
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_specified_composite_FK_with_navigation_to_dependent
  id: Creates_specified_composite_FK_with_navigation_to_dependent
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase
  langs:
  - csharp
  - vb
  name: Creates_specified_composite_FK_with_navigation_to_dependent()
  nameWithType: ModelBuilderTest.ManyToOneTestBase.Creates_specified_composite_FK_with_navigation_to_dependent()
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_specified_composite_FK_with_navigation_to_dependent()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Creates_specified_composite_FK_with_navigation_to_dependent
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
    startLine: 1376
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Creates_specified_composite_FK_with_navigation_to_dependent()
    content.vb: >-
      <Fact>

      Public Overridable Sub Creates_specified_composite_FK_with_navigation_to_dependent
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_relationship_with_no_navigations_and_specified_composite_FK
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_relationship_with_no_navigations_and_specified_composite_FK
  id: Creates_relationship_with_no_navigations_and_specified_composite_FK
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase
  langs:
  - csharp
  - vb
  name: Creates_relationship_with_no_navigations_and_specified_composite_FK()
  nameWithType: ModelBuilderTest.ManyToOneTestBase.Creates_relationship_with_no_navigations_and_specified_composite_FK()
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_relationship_with_no_navigations_and_specified_composite_FK()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Creates_relationship_with_no_navigations_and_specified_composite_FK
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
    startLine: 1415
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Creates_relationship_with_no_navigations_and_specified_composite_FK()
    content.vb: >-
      <Fact>

      Public Overridable Sub Creates_relationship_with_no_navigations_and_specified_composite_FK
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_relationship_on_existing_FK_is_using_different_principal_key
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_relationship_on_existing_FK_is_using_different_principal_key
  id: Creates_relationship_on_existing_FK_is_using_different_principal_key
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase
  langs:
  - csharp
  - vb
  name: Creates_relationship_on_existing_FK_is_using_different_principal_key()
  nameWithType: ModelBuilderTest.ManyToOneTestBase.Creates_relationship_on_existing_FK_is_using_different_principal_key()
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_relationship_on_existing_FK_is_using_different_principal_key()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Creates_relationship_on_existing_FK_is_using_different_principal_key
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
    startLine: 1461
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Creates_relationship_on_existing_FK_is_using_different_principal_key()
    content.vb: >-
      <Fact>

      Public Overridable Sub Creates_relationship_on_existing_FK_is_using_different_principal_key
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_relationship_on_existing_FK_is_using_different_principal_key_different_order
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_relationship_on_existing_FK_is_using_different_principal_key_different_order
  id: Creates_relationship_on_existing_FK_is_using_different_principal_key_different_order
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase
  langs:
  - csharp
  - vb
  name: Creates_relationship_on_existing_FK_is_using_different_principal_key_different_order()
  nameWithType: ModelBuilderTest.ManyToOneTestBase.Creates_relationship_on_existing_FK_is_using_different_principal_key_different_order()
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_relationship_on_existing_FK_is_using_different_principal_key_different_order()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Creates_relationship_on_existing_FK_is_using_different_principal_key_different_order
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
    startLine: 1501
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Creates_relationship_on_existing_FK_is_using_different_principal_key_different_order()
    content.vb: >-
      <Fact>

      Public Overridable Sub Creates_relationship_on_existing_FK_is_using_different_principal_key_different_order
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Throws_on_existing_one_to_one_relationship
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Throws_on_existing_one_to_one_relationship
  id: Throws_on_existing_one_to_one_relationship
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase
  langs:
  - csharp
  - vb
  name: Throws_on_existing_one_to_one_relationship()
  nameWithType: ModelBuilderTest.ManyToOneTestBase.Throws_on_existing_one_to_one_relationship()
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Throws_on_existing_one_to_one_relationship()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Throws_on_existing_one_to_one_relationship
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
    startLine: 1540
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Throws_on_existing_one_to_one_relationship()
    content.vb: >-
      <Fact>

      Public Overridable Sub Throws_on_existing_one_to_one_relationship
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Removes_existing_unidirectional_one_to_one_relationship
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Removes_existing_unidirectional_one_to_one_relationship
  id: Removes_existing_unidirectional_one_to_one_relationship
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase
  langs:
  - csharp
  - vb
  name: Removes_existing_unidirectional_one_to_one_relationship()
  nameWithType: ModelBuilderTest.ManyToOneTestBase.Removes_existing_unidirectional_one_to_one_relationship()
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Removes_existing_unidirectional_one_to_one_relationship()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Removes_existing_unidirectional_one_to_one_relationship
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
    startLine: 1565
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Removes_existing_unidirectional_one_to_one_relationship()
    content.vb: >-
      <Fact>

      Public Overridable Sub Removes_existing_unidirectional_one_to_one_relationship
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Can_add_annotations
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Can_add_annotations
  id: Can_add_annotations
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase
  langs:
  - csharp
  - vb
  name: Can_add_annotations()
  nameWithType: ModelBuilderTest.ManyToOneTestBase.Can_add_annotations()
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Can_add_annotations()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_add_annotations
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
    startLine: 1599
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Can_add_annotations()
    content.vb: >-
      <Fact>

      Public Overridable Sub Can_add_annotations
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Nullable_FK_are_optional_by_default
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Nullable_FK_are_optional_by_default
  id: Nullable_FK_are_optional_by_default
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase
  langs:
  - csharp
  - vb
  name: Nullable_FK_are_optional_by_default()
  nameWithType: ModelBuilderTest.ManyToOneTestBase.Nullable_FK_are_optional_by_default()
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Nullable_FK_are_optional_by_default()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Nullable_FK_are_optional_by_default
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
    startLine: 1619
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Nullable_FK_are_optional_by_default()
    content.vb: >-
      <Fact>

      Public Overridable Sub Nullable_FK_are_optional_by_default
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Non_nullable_FK_are_required_by_default
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Non_nullable_FK_are_required_by_default
  id: Non_nullable_FK_are_required_by_default
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase
  langs:
  - csharp
  - vb
  name: Non_nullable_FK_are_required_by_default()
  nameWithType: ModelBuilderTest.ManyToOneTestBase.Non_nullable_FK_are_required_by_default()
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Non_nullable_FK_are_required_by_default()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Non_nullable_FK_are_required_by_default
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
    startLine: 1639
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Non_nullable_FK_are_required_by_default()
    content.vb: >-
      <Fact>

      Public Overridable Sub Non_nullable_FK_are_required_by_default
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Nullable_FK_can_be_made_required
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Nullable_FK_can_be_made_required
  id: Nullable_FK_can_be_made_required
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase
  langs:
  - csharp
  - vb
  name: Nullable_FK_can_be_made_required()
  nameWithType: ModelBuilderTest.ManyToOneTestBase.Nullable_FK_can_be_made_required()
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Nullable_FK_can_be_made_required()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Nullable_FK_can_be_made_required
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
    startLine: 1659
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Nullable_FK_can_be_made_required()
    content.vb: >-
      <Fact>

      Public Overridable Sub Nullable_FK_can_be_made_required
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Non_nullable_FK_cannot_be_made_optional
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Non_nullable_FK_cannot_be_made_optional
  id: Non_nullable_FK_cannot_be_made_optional
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase
  langs:
  - csharp
  - vb
  name: Non_nullable_FK_cannot_be_made_optional()
  nameWithType: ModelBuilderTest.ManyToOneTestBase.Non_nullable_FK_cannot_be_made_optional()
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Non_nullable_FK_cannot_be_made_optional()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Non_nullable_FK_cannot_be_made_optional
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
    startLine: 1680
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Non_nullable_FK_cannot_be_made_optional()
    content.vb: >-
      <Fact>

      Public Overridable Sub Non_nullable_FK_cannot_be_made_optional
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Non_nullable_FK_can_be_made_optional_separetely
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Non_nullable_FK_can_be_made_optional_separetely
  id: Non_nullable_FK_can_be_made_optional_separetely
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase
  langs:
  - csharp
  - vb
  name: Non_nullable_FK_can_be_made_optional_separetely()
  nameWithType: ModelBuilderTest.ManyToOneTestBase.Non_nullable_FK_can_be_made_optional_separetely()
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Non_nullable_FK_can_be_made_optional_separetely()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Non_nullable_FK_can_be_made_optional_separetely
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
    startLine: 1693
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Non_nullable_FK_can_be_made_optional_separetely()
    content.vb: >-
      <Fact>

      Public Overridable Sub Non_nullable_FK_can_be_made_optional_separetely
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Can_change_delete_behavior
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Can_change_delete_behavior
  id: Can_change_delete_behavior
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase
  langs:
  - csharp
  - vb
  name: Can_change_delete_behavior()
  nameWithType: ModelBuilderTest.ManyToOneTestBase.Can_change_delete_behavior()
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Can_change_delete_behavior()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_change_delete_behavior
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
    startLine: 1717
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Can_change_delete_behavior()
    content.vb: >-
      <Fact>

      Public Overridable Sub Can_change_delete_behavior
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Can_set_foreign_key_property_when_matching_property_added
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Can_set_foreign_key_property_when_matching_property_added
  id: Can_set_foreign_key_property_when_matching_property_added
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase
  langs:
  - csharp
  - vb
  name: Can_set_foreign_key_property_when_matching_property_added()
  nameWithType: ModelBuilderTest.ManyToOneTestBase.Can_set_foreign_key_property_when_matching_property_added()
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Can_set_foreign_key_property_when_matching_property_added()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_set_foreign_key_property_when_matching_property_added
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
    startLine: 1742
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Can_set_foreign_key_property_when_matching_property_added()
    content.vb: >-
      <Fact>

      Public Overridable Sub Can_set_foreign_key_property_when_matching_property_added
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_shadow_property_for_foreign_key_according_to_navigation_to_principal_name_when_present
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_shadow_property_for_foreign_key_according_to_navigation_to_principal_name_when_present
  id: Creates_shadow_property_for_foreign_key_according_to_navigation_to_principal_name_when_present
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase
  langs:
  - csharp
  - vb
  name: Creates_shadow_property_for_foreign_key_according_to_navigation_to_principal_name_when_present()
  nameWithType: ModelBuilderTest.ManyToOneTestBase.Creates_shadow_property_for_foreign_key_according_to_navigation_to_principal_name_when_present()
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_shadow_property_for_foreign_key_according_to_navigation_to_principal_name_when_present()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Creates_shadow_property_for_foreign_key_according_to_navigation_to_principal_name_when_present
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
    startLine: 1758
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Creates_shadow_property_for_foreign_key_according_to_navigation_to_principal_name_when_present()
    content.vb: >-
      <Fact>

      Public Overridable Sub Creates_shadow_property_for_foreign_key_according_to_navigation_to_principal_name_when_present
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_shadow_property_for_foreign_key_according_to_target_type_when_navigation_to_principal_name_not_present
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_shadow_property_for_foreign_key_according_to_target_type_when_navigation_to_principal_name_not_present
  id: Creates_shadow_property_for_foreign_key_according_to_target_type_when_navigation_to_principal_name_not_present
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase
  langs:
  - csharp
  - vb
  name: Creates_shadow_property_for_foreign_key_according_to_target_type_when_navigation_to_principal_name_not_present()
  nameWithType: ModelBuilderTest.ManyToOneTestBase.Creates_shadow_property_for_foreign_key_according_to_target_type_when_navigation_to_principal_name_not_present()
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_shadow_property_for_foreign_key_according_to_target_type_when_navigation_to_principal_name_not_present()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Creates_shadow_property_for_foreign_key_according_to_target_type_when_navigation_to_principal_name_not_present
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
    startLine: 1768
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Creates_shadow_property_for_foreign_key_according_to_target_type_when_navigation_to_principal_name_not_present()
    content.vb: >-
      <Fact>

      Public Overridable Sub Creates_shadow_property_for_foreign_key_according_to_target_type_when_navigation_to_principal_name_not_present
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_shadow_FK_property_with_non_shadow_PK
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_shadow_FK_property_with_non_shadow_PK
  id: Creates_shadow_FK_property_with_non_shadow_PK
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase
  langs:
  - csharp
  - vb
  name: Creates_shadow_FK_property_with_non_shadow_PK()
  nameWithType: ModelBuilderTest.ManyToOneTestBase.Creates_shadow_FK_property_with_non_shadow_PK()
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_shadow_FK_property_with_non_shadow_PK()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Creates_shadow_FK_property_with_non_shadow_PK
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
    startLine: 1777
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Creates_shadow_FK_property_with_non_shadow_PK()
    content.vb: >-
      <Fact>

      Public Overridable Sub Creates_shadow_FK_property_with_non_shadow_PK
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_shadow_FK_property_with_shadow_PK
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_shadow_FK_property_with_shadow_PK
  id: Creates_shadow_FK_property_with_shadow_PK
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase
  langs:
  - csharp
  - vb
  name: Creates_shadow_FK_property_with_shadow_PK()
  nameWithType: ModelBuilderTest.ManyToOneTestBase.Creates_shadow_FK_property_with_shadow_PK()
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Creates_shadow_FK_property_with_shadow_PK()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Creates_shadow_FK_property_with_shadow_PK
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
    startLine: 1795
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Creates_shadow_FK_property_with_shadow_PK()
    content.vb: >-
      <Fact>

      Public Overridable Sub Creates_shadow_FK_property_with_shadow_PK
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Handles_identity_correctly_while_removing_navigation
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Handles_identity_correctly_while_removing_navigation
  id: Handles_identity_correctly_while_removing_navigation
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase
  langs:
  - csharp
  - vb
  name: Handles_identity_correctly_while_removing_navigation()
  nameWithType: ModelBuilderTest.ManyToOneTestBase.Handles_identity_correctly_while_removing_navigation()
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.Handles_identity_correctly_while_removing_navigation()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Handles_identity_correctly_while_removing_navigation
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
    startLine: 1813
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Handles_identity_correctly_while_removing_navigation()
    content.vb: >-
      <Fact>

      Public Overridable Sub Handles_identity_correctly_while_removing_navigation
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.One_to_many_relationship_has_no_ambiguity_explicit
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.One_to_many_relationship_has_no_ambiguity_explicit
  id: One_to_many_relationship_has_no_ambiguity_explicit
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase
  langs:
  - csharp
  - vb
  name: One_to_many_relationship_has_no_ambiguity_explicit()
  nameWithType: ModelBuilderTest.ManyToOneTestBase.One_to_many_relationship_has_no_ambiguity_explicit()
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ManyToOneTestBase.One_to_many_relationship_has_no_ambiguity_explicit()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: One_to_many_relationship_has_no_ambiguity_explicit
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ManyToOneTestBase.cs
    startLine: 1825
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void One_to_many_relationship_has_no_ambiguity_explicit()
    content.vb: >-
      <Fact>

      Public Overridable Sub One_to_many_relationship_has_no_ambiguity_explicit
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.EntityFrameworkCore.Tests
  commentId: N:Microsoft.EntityFrameworkCore.Tests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Tests
  nameWithType: Microsoft.EntityFrameworkCore.Tests
  fullName: Microsoft.EntityFrameworkCore.Tests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase
  commentId: T:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase
  parent: Microsoft.EntityFrameworkCore.Tests
  isExternal: false
  name: ModelBuilderTest.ModelBuilderTestBase
  nameWithType: ModelBuilderTest.ModelBuilderTestBase
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.StringComparer)
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.StringComparer)
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase
  isExternal: true
  name: AssertEqual(IEnumerable<String>, IEnumerable<String>, StringComparer)
  nameWithType: ModelBuilderTest.ModelBuilderTestBase.AssertEqual(IEnumerable<String>, IEnumerable<String>, StringComparer)
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual(System.Collections.Generic.IEnumerable<System.String>, System.Collections.Generic.IEnumerable<System.String>, System.StringComparer)
  nameWithType.vb: ModelBuilderTest.ModelBuilderTestBase.AssertEqual(IEnumerable(Of String), IEnumerable(Of String), StringComparer)
  fullname.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual(System.Collections.Generic.IEnumerable(Of System.String), System.Collections.Generic.IEnumerable(Of System.String), System.StringComparer)
  name.vb: AssertEqual(IEnumerable(Of String), IEnumerable(Of String), StringComparer)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.StringComparer)
    name: AssertEqual
    nameWithType: ModelBuilderTest.ModelBuilderTestBase.AssertEqual
    fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.StringComparer
    name: StringComparer
    nameWithType: StringComparer
    fullName: System.StringComparer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.StringComparer)
    name: AssertEqual
    nameWithType: ModelBuilderTest.ModelBuilderTestBase.AssertEqual
    fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.StringComparer
    name: StringComparer
    nameWithType: StringComparer
    fullName: System.StringComparer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IProperty},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IProperty},Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.PropertyComparer)
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IProperty},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IProperty},Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.PropertyComparer)
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase
  isExternal: true
  name: AssertEqual(IEnumerable<IProperty>, IEnumerable<IProperty>, PropertyComparer)
  nameWithType: ModelBuilderTest.ModelBuilderTestBase.AssertEqual(IEnumerable<IProperty>, IEnumerable<IProperty>, PropertyComparer)
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual(System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Metadata.IProperty>, System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Metadata.IProperty>, Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.PropertyComparer)
  nameWithType.vb: ModelBuilderTest.ModelBuilderTestBase.AssertEqual(IEnumerable(Of IProperty), IEnumerable(Of IProperty), PropertyComparer)
  fullname.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual(System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Metadata.IProperty), System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Metadata.IProperty), Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.PropertyComparer)
  name.vb: AssertEqual(IEnumerable(Of IProperty), IEnumerable(Of IProperty), PropertyComparer)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IProperty},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IProperty},Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.PropertyComparer)
    name: AssertEqual
    nameWithType: ModelBuilderTest.ModelBuilderTestBase.AssertEqual
    fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
    name: IProperty
    nameWithType: IProperty
    fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
    name: IProperty
    nameWithType: IProperty
    fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.PropertyComparer
    name: PropertyComparer
    nameWithType: PropertyComparer
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.PropertyComparer
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IProperty},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IProperty},Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.PropertyComparer)
    name: AssertEqual
    nameWithType: ModelBuilderTest.ModelBuilderTestBase.AssertEqual
    fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
    name: IProperty
    nameWithType: IProperty
    fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
    name: IProperty
    nameWithType: IProperty
    fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.PropertyComparer
    name: PropertyComparer
    nameWithType: PropertyComparer
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.PropertyComparer
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.INavigation},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.INavigation},Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.NavigationComparer)
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.INavigation},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.INavigation},Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.NavigationComparer)
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase
  isExternal: true
  name: AssertEqual(IEnumerable<INavigation>, IEnumerable<INavigation>, NavigationComparer)
  nameWithType: ModelBuilderTest.ModelBuilderTestBase.AssertEqual(IEnumerable<INavigation>, IEnumerable<INavigation>, NavigationComparer)
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual(System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Metadata.INavigation>, System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Metadata.INavigation>, Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.NavigationComparer)
  nameWithType.vb: ModelBuilderTest.ModelBuilderTestBase.AssertEqual(IEnumerable(Of INavigation), IEnumerable(Of INavigation), NavigationComparer)
  fullname.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual(System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Metadata.INavigation), System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Metadata.INavigation), Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.NavigationComparer)
  name.vb: AssertEqual(IEnumerable(Of INavigation), IEnumerable(Of INavigation), NavigationComparer)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.INavigation},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.INavigation},Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.NavigationComparer)
    name: AssertEqual
    nameWithType: ModelBuilderTest.ModelBuilderTestBase.AssertEqual
    fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.INavigation
    name: INavigation
    nameWithType: INavigation
    fullName: Microsoft.EntityFrameworkCore.Metadata.INavigation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.INavigation
    name: INavigation
    nameWithType: INavigation
    fullName: Microsoft.EntityFrameworkCore.Metadata.INavigation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.NavigationComparer
    name: NavigationComparer
    nameWithType: NavigationComparer
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.NavigationComparer
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.INavigation},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.INavigation},Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.NavigationComparer)
    name: AssertEqual
    nameWithType: ModelBuilderTest.ModelBuilderTestBase.AssertEqual
    fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.INavigation
    name: INavigation
    nameWithType: INavigation
    fullName: Microsoft.EntityFrameworkCore.Metadata.INavigation
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.INavigation
    name: INavigation
    nameWithType: INavigation
    fullName: Microsoft.EntityFrameworkCore.Metadata.INavigation
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.NavigationComparer
    name: NavigationComparer
    nameWithType: NavigationComparer
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.NavigationComparer
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IKey},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IKey},Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.KeyComparer)
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IKey},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IKey},Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.KeyComparer)
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase
  isExternal: true
  name: AssertEqual(IEnumerable<IKey>, IEnumerable<IKey>, KeyComparer)
  nameWithType: ModelBuilderTest.ModelBuilderTestBase.AssertEqual(IEnumerable<IKey>, IEnumerable<IKey>, KeyComparer)
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual(System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Metadata.IKey>, System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Metadata.IKey>, Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.KeyComparer)
  nameWithType.vb: ModelBuilderTest.ModelBuilderTestBase.AssertEqual(IEnumerable(Of IKey), IEnumerable(Of IKey), KeyComparer)
  fullname.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual(System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Metadata.IKey), System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Metadata.IKey), Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.KeyComparer)
  name.vb: AssertEqual(IEnumerable(Of IKey), IEnumerable(Of IKey), KeyComparer)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IKey},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IKey},Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.KeyComparer)
    name: AssertEqual
    nameWithType: ModelBuilderTest.ModelBuilderTestBase.AssertEqual
    fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.IKey
    name: IKey
    nameWithType: IKey
    fullName: Microsoft.EntityFrameworkCore.Metadata.IKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.IKey
    name: IKey
    nameWithType: IKey
    fullName: Microsoft.EntityFrameworkCore.Metadata.IKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.KeyComparer
    name: KeyComparer
    nameWithType: KeyComparer
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.KeyComparer
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IKey},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IKey},Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.KeyComparer)
    name: AssertEqual
    nameWithType: ModelBuilderTest.ModelBuilderTestBase.AssertEqual
    fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IKey
    name: IKey
    nameWithType: IKey
    fullName: Microsoft.EntityFrameworkCore.Metadata.IKey
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IKey
    name: IKey
    nameWithType: IKey
    fullName: Microsoft.EntityFrameworkCore.Metadata.IKey
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.KeyComparer
    name: KeyComparer
    nameWithType: KeyComparer
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.KeyComparer
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IForeignKey},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IForeignKey},Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.ForeignKeyStrictComparer)
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IForeignKey},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IForeignKey},Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.ForeignKeyStrictComparer)
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase
  isExternal: true
  name: AssertEqual(IEnumerable<IForeignKey>, IEnumerable<IForeignKey>, ForeignKeyStrictComparer)
  nameWithType: ModelBuilderTest.ModelBuilderTestBase.AssertEqual(IEnumerable<IForeignKey>, IEnumerable<IForeignKey>, ForeignKeyStrictComparer)
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual(System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Metadata.IForeignKey>, System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Metadata.IForeignKey>, Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.ForeignKeyStrictComparer)
  nameWithType.vb: ModelBuilderTest.ModelBuilderTestBase.AssertEqual(IEnumerable(Of IForeignKey), IEnumerable(Of IForeignKey), ForeignKeyStrictComparer)
  fullname.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual(System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Metadata.IForeignKey), System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Metadata.IForeignKey), Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.ForeignKeyStrictComparer)
  name.vb: AssertEqual(IEnumerable(Of IForeignKey), IEnumerable(Of IForeignKey), ForeignKeyStrictComparer)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IForeignKey},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IForeignKey},Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.ForeignKeyStrictComparer)
    name: AssertEqual
    nameWithType: ModelBuilderTest.ModelBuilderTestBase.AssertEqual
    fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    name: IForeignKey
    nameWithType: IForeignKey
    fullName: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    name: IForeignKey
    nameWithType: IForeignKey
    fullName: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.ForeignKeyStrictComparer
    name: ForeignKeyStrictComparer
    nameWithType: ForeignKeyStrictComparer
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.ForeignKeyStrictComparer
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IForeignKey},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IForeignKey},Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.ForeignKeyStrictComparer)
    name: AssertEqual
    nameWithType: ModelBuilderTest.ModelBuilderTestBase.AssertEqual
    fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    name: IForeignKey
    nameWithType: IForeignKey
    fullName: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    name: IForeignKey
    nameWithType: IForeignKey
    fullName: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.ForeignKeyStrictComparer
    name: ForeignKeyStrictComparer
    nameWithType: ForeignKeyStrictComparer
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.ForeignKeyStrictComparer
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IIndex},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IIndex},Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.IndexComparer)
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IIndex},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IIndex},Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.IndexComparer)
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase
  isExternal: true
  name: AssertEqual(IEnumerable<IIndex>, IEnumerable<IIndex>, IndexComparer)
  nameWithType: ModelBuilderTest.ModelBuilderTestBase.AssertEqual(IEnumerable<IIndex>, IEnumerable<IIndex>, IndexComparer)
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual(System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Metadata.IIndex>, System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Metadata.IIndex>, Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.IndexComparer)
  nameWithType.vb: ModelBuilderTest.ModelBuilderTestBase.AssertEqual(IEnumerable(Of IIndex), IEnumerable(Of IIndex), IndexComparer)
  fullname.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual(System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Metadata.IIndex), System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Metadata.IIndex), Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.IndexComparer)
  name.vb: AssertEqual(IEnumerable(Of IIndex), IEnumerable(Of IIndex), IndexComparer)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IIndex},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IIndex},Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.IndexComparer)
    name: AssertEqual
    nameWithType: ModelBuilderTest.ModelBuilderTestBase.AssertEqual
    fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.IIndex
    name: IIndex
    nameWithType: IIndex
    fullName: Microsoft.EntityFrameworkCore.Metadata.IIndex
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.IIndex
    name: IIndex
    nameWithType: IIndex
    fullName: Microsoft.EntityFrameworkCore.Metadata.IIndex
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.IndexComparer
    name: IndexComparer
    nameWithType: IndexComparer
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.IndexComparer
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IIndex},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IIndex},Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.IndexComparer)
    name: AssertEqual
    nameWithType: ModelBuilderTest.ModelBuilderTestBase.AssertEqual
    fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IIndex
    name: IIndex
    nameWithType: IIndex
    fullName: Microsoft.EntityFrameworkCore.Metadata.IIndex
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IIndex
    name: IIndex
    nameWithType: IIndex
    fullName: Microsoft.EntityFrameworkCore.Metadata.IIndex
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.IndexComparer
    name: IndexComparer
    nameWithType: IndexComparer
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.IndexComparer
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.CreateModelBuilder
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.CreateModelBuilder
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase
  isExternal: false
  name: CreateModelBuilder()
  nameWithType: ModelBuilderTest.ModelBuilderTestBase.CreateModelBuilder()
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.CreateModelBuilder()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.CreateModelBuilder
    name: CreateModelBuilder
    nameWithType: ModelBuilderTest.ModelBuilderTestBase.CreateModelBuilder
    fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.CreateModelBuilder
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.CreateModelBuilder
    name: CreateModelBuilder
    nameWithType: ModelBuilderTest.ModelBuilderTestBase.CreateModelBuilder
    fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.CreateModelBuilder
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.HobNobBuilder
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.HobNobBuilder
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase
  isExternal: false
  name: HobNobBuilder()
  nameWithType: ModelBuilderTest.ModelBuilderTestBase.HobNobBuilder()
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.HobNobBuilder()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.HobNobBuilder
    name: HobNobBuilder
    nameWithType: ModelBuilderTest.ModelBuilderTestBase.HobNobBuilder
    fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.HobNobBuilder
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.HobNobBuilder
    name: HobNobBuilder
    nameWithType: ModelBuilderTest.ModelBuilderTestBase.HobNobBuilder
    fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.HobNobBuilder
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.CreateTestModelBuilder(Microsoft.EntityFrameworkCore.ModelBuilder)
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.CreateTestModelBuilder(Microsoft.EntityFrameworkCore.ModelBuilder)
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase
  isExternal: false
  name: CreateTestModelBuilder(ModelBuilder)
  nameWithType: ModelBuilderTest.ModelBuilderTestBase.CreateTestModelBuilder(ModelBuilder)
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.CreateTestModelBuilder(Microsoft.EntityFrameworkCore.ModelBuilder)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.CreateTestModelBuilder(Microsoft.EntityFrameworkCore.ModelBuilder)
    name: CreateTestModelBuilder
    nameWithType: ModelBuilderTest.ModelBuilderTestBase.CreateTestModelBuilder
    fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.CreateTestModelBuilder
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.ModelBuilder
    name: ModelBuilder
    nameWithType: ModelBuilder
    fullName: Microsoft.EntityFrameworkCore.ModelBuilder
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.CreateTestModelBuilder(Microsoft.EntityFrameworkCore.ModelBuilder)
    name: CreateTestModelBuilder
    nameWithType: ModelBuilderTest.ModelBuilderTestBase.CreateTestModelBuilder
    fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.CreateTestModelBuilder
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.ModelBuilder
    name: ModelBuilder
    nameWithType: ModelBuilder
    fullName: Microsoft.EntityFrameworkCore.ModelBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
