### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.PredicateNegationExpressionOptimizer
  commentId: T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.PredicateNegationExpressionOptimizer
  id: PredicateNegationExpressionOptimizer
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  children:
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.PredicateNegationExpressionOptimizer.VisitBinary(System.Linq.Expressions.BinaryExpression)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.PredicateNegationExpressionOptimizer.VisitUnary(System.Linq.Expressions.UnaryExpression)
  langs:
  - csharp
  - vb
  name: PredicateNegationExpressionOptimizer
  nameWithType: PredicateNegationExpressionOptimizer
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.PredicateNegationExpressionOptimizer
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/PredicateNegationExpressionOptimizer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: PredicateNegationExpressionOptimizer
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/PredicateNegationExpressionOptimizer.cs
    startLine: 14
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public class PredicateNegationExpressionOptimizer : RelinqExpressionVisitor'
    content.vb: >-
      Public Class PredicateNegationExpressionOptimizer
          Inherits RelinqExpressionVisitor
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.PredicateNegationExpressionOptimizer.VisitBinary(System.Linq.Expressions.BinaryExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.PredicateNegationExpressionOptimizer.VisitBinary(System.Linq.Expressions.BinaryExpression)
  id: VisitBinary(System.Linq.Expressions.BinaryExpression)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.PredicateNegationExpressionOptimizer
  langs:
  - csharp
  - vb
  name: VisitBinary(BinaryExpression)
  nameWithType: PredicateNegationExpressionOptimizer.VisitBinary(BinaryExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.PredicateNegationExpressionOptimizer.VisitBinary(System.Linq.Expressions.BinaryExpression)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/PredicateNegationExpressionOptimizer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: VisitBinary
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/PredicateNegationExpressionOptimizer.cs
    startLine: 29
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected override Expression VisitBinary(BinaryExpression node)
    content.vb: Protected Overrides Function VisitBinary(node As BinaryExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.BinaryExpression
    return:
      type: System.Linq.Expressions.Expression
  overload: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.PredicateNegationExpressionOptimizer.VisitBinary*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.PredicateNegationExpressionOptimizer.VisitUnary(System.Linq.Expressions.UnaryExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.PredicateNegationExpressionOptimizer.VisitUnary(System.Linq.Expressions.UnaryExpression)
  id: VisitUnary(System.Linq.Expressions.UnaryExpression)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.PredicateNegationExpressionOptimizer
  langs:
  - csharp
  - vb
  name: VisitUnary(UnaryExpression)
  nameWithType: PredicateNegationExpressionOptimizer.VisitUnary(UnaryExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.PredicateNegationExpressionOptimizer.VisitUnary(System.Linq.Expressions.UnaryExpression)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/PredicateNegationExpressionOptimizer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: VisitUnary
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/PredicateNegationExpressionOptimizer.cs
    startLine: 89
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected override Expression VisitUnary(UnaryExpression node)
    content.vb: Protected Overrides Function VisitUnary(node As UnaryExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.UnaryExpression
    return:
      type: System.Linq.Expressions.Expression
  overload: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.PredicateNegationExpressionOptimizer.VisitUnary*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.PredicateNegationExpressionOptimizer.VisitBinary*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.PredicateNegationExpressionOptimizer.VisitBinary
  isExternal: false
  name: VisitBinary
  nameWithType: PredicateNegationExpressionOptimizer.VisitBinary
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.PredicateNegationExpressionOptimizer.VisitBinary
- uid: System.Linq.Expressions.BinaryExpression
  commentId: T:System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: true
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  commentId: T:System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: true
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: false
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.PredicateNegationExpressionOptimizer.VisitUnary*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.PredicateNegationExpressionOptimizer.VisitUnary
  isExternal: false
  name: VisitUnary
  nameWithType: PredicateNegationExpressionOptimizer.VisitUnary
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.PredicateNegationExpressionOptimizer.VisitUnary
- uid: System.Linq.Expressions.UnaryExpression
  commentId: T:System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: true
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
