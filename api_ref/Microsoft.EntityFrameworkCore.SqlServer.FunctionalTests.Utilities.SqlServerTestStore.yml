### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore
  commentId: T:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore
  id: SqlServerTestStore
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  children:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.CommandTimeout
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.Connection
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ConnectionString
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.CreateConnectionString(System.String)
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.CreateConnectionString(System.String,System.String)
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.CreateDatabase(System.String,System.String,System.Boolean,System.Boolean)
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.CreateScratch(System.Boolean,System.Boolean)
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.CreateScratchAsync(System.Boolean,System.Boolean)
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.Dispose
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ExecuteNonQuery(System.String,System.Object[])
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ExecuteNonQueryAsync(System.String,System.Object[])
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ExecuteScalarAsync``1(System.String,System.Threading.CancellationToken,System.Object[])
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.GetOrCreateShared(System.String,System.Action)
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.GetOrCreateShared(System.String,System.Boolean,System.Action)
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.QueryAsync``1(System.String,System.Object[])
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.Transaction
  langs:
  - csharp
  - vb
  name: SqlServerTestStore
  nameWithType: SqlServerTestStore
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore
  type: Class
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: SqlServerTestStore
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
    startLine: 16
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  syntax:
    content: 'public class SqlServerTestStore : RelationalTestStore, IDisposable'
    content.vb: >-
      Public Class SqlServerTestStore
          Inherits RelationalTestStore
          Implements IDisposable
  inheritance:
  - System.Object
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestStore
  - Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore
  implements:
  - System.IDisposable
  inheritedMembers:
  - Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore.OpenConnection
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestStore.CreateShared(System.String,System.Action)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.CommandTimeout
  commentId: F:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.CommandTimeout
  id: CommandTimeout
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore
  langs:
  - csharp
  - vb
  name: CommandTimeout
  nameWithType: SqlServerTestStore.CommandTimeout
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.CommandTimeout
  type: Field
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: CommandTimeout
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
    startLine: 18
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  syntax:
    content: public const int CommandTimeout = 90
    content.vb: Public Const CommandTimeout As Integer = 90
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.GetOrCreateShared(System.String,System.Boolean,System.Action)
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.GetOrCreateShared(System.String,System.Boolean,System.Action)
  id: GetOrCreateShared(System.String,System.Boolean,System.Action)
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore
  langs:
  - csharp
  - vb
  name: GetOrCreateShared(String, Boolean, Action)
  nameWithType: SqlServerTestStore.GetOrCreateShared(String, Boolean, Action)
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.GetOrCreateShared(System.String, System.Boolean, System.Action)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GetOrCreateShared
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
    startLine: 26
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  syntax:
    content: public static SqlServerTestStore GetOrCreateShared(string name, bool useTransaction, Action initializeDatabase)
    content.vb: Public Shared Function GetOrCreateShared(name As String, useTransaction As Boolean, initializeDatabase As Action) As SqlServerTestStore
    parameters:
    - id: name
      type: System.String
    - id: useTransaction
      type: System.Boolean
    - id: initializeDatabase
      type: System.Action
    return:
      type: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.GetOrCreateShared(System.String,System.Action)
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.GetOrCreateShared(System.String,System.Action)
  id: GetOrCreateShared(System.String,System.Action)
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore
  langs:
  - csharp
  - vb
  name: GetOrCreateShared(String, Action)
  nameWithType: SqlServerTestStore.GetOrCreateShared(String, Action)
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.GetOrCreateShared(System.String, System.Action)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GetOrCreateShared
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
    startLine: 29
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  syntax:
    content: public static SqlServerTestStore GetOrCreateShared(string name, Action initializeDatabase)
    content.vb: Public Shared Function GetOrCreateShared(name As String, initializeDatabase As Action) As SqlServerTestStore
    parameters:
    - id: name
      type: System.String
    - id: initializeDatabase
      type: System.Action
    return:
      type: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.CreateScratchAsync(System.Boolean,System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.CreateScratchAsync(System.Boolean,System.Boolean)
  id: CreateScratchAsync(System.Boolean,System.Boolean)
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore
  langs:
  - csharp
  - vb
  name: CreateScratchAsync(Boolean, Boolean)
  nameWithType: SqlServerTestStore.CreateScratchAsync(Boolean, Boolean)
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.CreateScratchAsync(System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: CreateScratchAsync
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
    startLine: 36
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  summary: "\n    A non-transactional, transient, isolated test database. Use this in the case\n    where transactions are not appropriate.\n"
  example: []
  syntax:
    content: public static Task<SqlServerTestStore> CreateScratchAsync(bool createDatabase = true, bool useFileName = false)
    content.vb: Public Shared Function CreateScratchAsync(createDatabase As Boolean = True, useFileName As Boolean = False) As Task(Of SqlServerTestStore)
    parameters:
    - id: createDatabase
      type: System.Boolean
    - id: useFileName
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task{Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.CreateScratch(System.Boolean,System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.CreateScratch(System.Boolean,System.Boolean)
  id: CreateScratch(System.Boolean,System.Boolean)
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore
  langs:
  - csharp
  - vb
  name: CreateScratch(Boolean, Boolean)
  nameWithType: SqlServerTestStore.CreateScratch(Boolean, Boolean)
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.CreateScratch(System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: CreateScratch
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
    startLine: 39
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  syntax:
    content: public static SqlServerTestStore CreateScratch(bool createDatabase = true, bool useFileName = false)
    content.vb: Public Shared Function CreateScratch(createDatabase As Boolean = True, useFileName As Boolean = False) As SqlServerTestStore
    parameters:
    - id: createDatabase
      type: System.Boolean
    - id: useFileName
      type: System.Boolean
    return:
      type: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ConnectionString
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ConnectionString
  id: ConnectionString
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore
  langs:
  - csharp
  - vb
  name: ConnectionString
  nameWithType: SqlServerTestStore.ConnectionString
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ConnectionString
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ConnectionString
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
    startLine: 49
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  syntax:
    content: public override string ConnectionString { get; }
    content.vb: Public Overrides ReadOnly Property ConnectionString As String
    parameters: []
    return:
      type: System.String
  overridden: Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore.ConnectionString
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.CreateDatabase(System.String,System.String,System.Boolean,System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.CreateDatabase(System.String,System.String,System.Boolean,System.Boolean)
  id: CreateDatabase(System.String,System.String,System.Boolean,System.Boolean)
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore
  langs:
  - csharp
  - vb
  name: CreateDatabase(String, String, Boolean, Boolean)
  nameWithType: SqlServerTestStore.CreateDatabase(String, String, Boolean, Boolean)
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.CreateDatabase(System.String, System.String, System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: CreateDatabase
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
    startLine: 102
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  syntax:
    content: public static void CreateDatabase(string name, string scriptPath = null, bool nonMasterScript = false, bool recreateIfAlreadyExists = false)
    content.vb: Public Shared Sub CreateDatabase(name As String, scriptPath As String = Nothing, nonMasterScript As Boolean = False, recreateIfAlreadyExists As Boolean = False)
    parameters:
    - id: name
      type: System.String
    - id: scriptPath
      type: System.String
    - id: nonMasterScript
      type: System.Boolean
    - id: recreateIfAlreadyExists
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.Connection
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.Connection
  id: Connection
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore
  langs:
  - csharp
  - vb
  name: Connection
  nameWithType: SqlServerTestStore.Connection
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.Connection
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Connection
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
    startLine: 384
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  syntax:
    content: public override DbConnection Connection { get; }
    content.vb: Public Overrides ReadOnly Property Connection As DbConnection
    parameters: []
    return:
      type: System.Data.Common.DbConnection
  overridden: Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore.Connection
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.Transaction
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.Transaction
  id: Transaction
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore
  langs:
  - csharp
  - vb
  name: Transaction
  nameWithType: SqlServerTestStore.Transaction
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.Transaction
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Transaction
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
    startLine: 386
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  syntax:
    content: public override DbTransaction Transaction { get; }
    content.vb: Public Overrides ReadOnly Property Transaction As DbTransaction
    parameters: []
    return:
      type: System.Data.Common.DbTransaction
  overridden: Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore.Transaction
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ExecuteScalarAsync``1(System.String,System.Threading.CancellationToken,System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ExecuteScalarAsync``1(System.String,System.Threading.CancellationToken,System.Object[])
  id: ExecuteScalarAsync``1(System.String,System.Threading.CancellationToken,System.Object[])
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore
  langs:
  - csharp
  - vb
  name: ExecuteScalarAsync<T>(String, CancellationToken, Object[])
  nameWithType: SqlServerTestStore.ExecuteScalarAsync<T>(String, CancellationToken, Object[])
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ExecuteScalarAsync<T>(System.String, System.Threading.CancellationToken, System.Object[])
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ExecuteScalarAsync
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
    startLine: 388
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  syntax:
    content: public Task<T> ExecuteScalarAsync<T>(string sql, CancellationToken cancellationToken, params object[] parameters)
    content.vb: Public Function ExecuteScalarAsync(Of T)(sql As String, cancellationToken As CancellationToken, ParamArray parameters As Object()) As Task(Of T)
    parameters:
    - id: sql
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: parameters
      type: System.Object[]
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task{{T}}
  nameWithType.vb: SqlServerTestStore.ExecuteScalarAsync(Of T)(String, CancellationToken, Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ExecuteScalarAsync(Of T)(System.String, System.Threading.CancellationToken, System.Object())
  name.vb: ExecuteScalarAsync(Of T)(String, CancellationToken, Object())
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ExecuteNonQuery(System.String,System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ExecuteNonQuery(System.String,System.Object[])
  id: ExecuteNonQuery(System.String,System.Object[])
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore
  langs:
  - csharp
  - vb
  name: ExecuteNonQuery(String, Object[])
  nameWithType: SqlServerTestStore.ExecuteNonQuery(String, Object[])
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ExecuteNonQuery(System.String, System.Object[])
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ExecuteNonQuery
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
    startLine: 396
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  syntax:
    content: public int ExecuteNonQuery(string sql, params object[] parameters)
    content.vb: Public Function ExecuteNonQuery(sql As String, ParamArray parameters As Object()) As Integer
    parameters:
    - id: sql
      type: System.String
    - id: parameters
      type: System.Object[]
    return:
      type: System.Int32
  nameWithType.vb: SqlServerTestStore.ExecuteNonQuery(String, Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ExecuteNonQuery(System.String, System.Object())
  name.vb: ExecuteNonQuery(String, Object())
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ExecuteNonQueryAsync(System.String,System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ExecuteNonQueryAsync(System.String,System.Object[])
  id: ExecuteNonQueryAsync(System.String,System.Object[])
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore
  langs:
  - csharp
  - vb
  name: ExecuteNonQueryAsync(String, Object[])
  nameWithType: SqlServerTestStore.ExecuteNonQueryAsync(String, Object[])
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ExecuteNonQueryAsync(System.String, System.Object[])
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ExecuteNonQueryAsync
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
    startLine: 404
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  syntax:
    content: public Task<int> ExecuteNonQueryAsync(string sql, params object[] parameters)
    content.vb: Public Function ExecuteNonQueryAsync(sql As String, ParamArray parameters As Object()) As Task(Of Integer)
    parameters:
    - id: sql
      type: System.String
    - id: parameters
      type: System.Object[]
    return:
      type: System.Threading.Tasks.Task{System.Int32}
  nameWithType.vb: SqlServerTestStore.ExecuteNonQueryAsync(String, Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ExecuteNonQueryAsync(System.String, System.Object())
  name.vb: ExecuteNonQueryAsync(String, Object())
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.QueryAsync``1(System.String,System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.QueryAsync``1(System.String,System.Object[])
  id: QueryAsync``1(System.String,System.Object[])
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore
  langs:
  - csharp
  - vb
  name: QueryAsync<T>(String, Object[])
  nameWithType: SqlServerTestStore.QueryAsync<T>(String, Object[])
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.QueryAsync<T>(System.String, System.Object[])
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: QueryAsync
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
    startLine: 412
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  syntax:
    content: public Task<IEnumerable<T>> QueryAsync<T>(string sql, params object[] parameters)
    content.vb: Public Function QueryAsync(Of T)(sql As String, ParamArray parameters As Object()) As Task(Of IEnumerable(Of T))
    parameters:
    - id: sql
      type: System.String
    - id: parameters
      type: System.Object[]
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{{T}}}
  nameWithType.vb: SqlServerTestStore.QueryAsync(Of T)(String, Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.QueryAsync(Of T)(System.String, System.Object())
  name.vb: QueryAsync(Of T)(String, Object())
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.Dispose
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.Dispose
  id: Dispose
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: SqlServerTestStore.Dispose()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.Dispose()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Dispose
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
    startLine: 450
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  syntax:
    content: public override void Dispose()
    content.vb: Public Overrides Sub Dispose
  overridden: Microsoft.EntityFrameworkCore.Specification.Tests.TestStore.Dispose
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.CreateConnectionString(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.CreateConnectionString(System.String)
  id: CreateConnectionString(System.String)
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore
  langs:
  - csharp
  - vb
  name: CreateConnectionString(String)
  nameWithType: SqlServerTestStore.CreateConnectionString(String)
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.CreateConnectionString(System.String)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: CreateConnectionString
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
    startLine: 462
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  syntax:
    content: public static string CreateConnectionString(string name)
    content.vb: Public Shared Function CreateConnectionString(name As String) As String
    parameters:
    - id: name
      type: System.String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.CreateConnectionString(System.String,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.CreateConnectionString(System.String,System.String)
  id: CreateConnectionString(System.String,System.String)
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore
  langs:
  - csharp
  - vb
  name: CreateConnectionString(String, String)
  nameWithType: SqlServerTestStore.CreateConnectionString(String, String)
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.CreateConnectionString(System.String, System.String)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: CreateConnectionString
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
    startLine: 465
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  syntax:
    content: public static string CreateConnectionString(string name, string fileName)
    content.vb: Public Shared Function CreateConnectionString(name As String, fileName As String) As String
    parameters:
    - id: name
      type: System.String
    - id: fileName
      type: System.String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  commentId: N:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  isExternal: false
  name: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  nameWithType: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestStore
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.TestStore
  parent: Microsoft.EntityFrameworkCore.Specification.Tests
  isExternal: false
  name: TestStore
  nameWithType: TestStore
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestStore
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore
  parent: Microsoft.EntityFrameworkCore.Specification.Tests
  isExternal: false
  name: RelationalTestStore
  nameWithType: RelationalTestStore
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore.OpenConnection
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore.OpenConnection
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore
  isExternal: false
  name: OpenConnection()
  nameWithType: RelationalTestStore.OpenConnection()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore.OpenConnection()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore.OpenConnection
    name: OpenConnection
    nameWithType: RelationalTestStore.OpenConnection
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore.OpenConnection
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore.OpenConnection
    name: OpenConnection
    nameWithType: RelationalTestStore.OpenConnection
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore.OpenConnection
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestStore.CreateShared(System.String,System.Action)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TestStore.CreateShared(System.String,System.Action)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestStore
  isExternal: true
  name: CreateShared(String, Action)
  nameWithType: TestStore.CreateShared(String, Action)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestStore.CreateShared(System.String, System.Action)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestStore.CreateShared(System.String,System.Action)
    name: CreateShared
    nameWithType: TestStore.CreateShared
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestStore.CreateShared
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestStore.CreateShared(System.String,System.Action)
    name: CreateShared
    nameWithType: TestStore.CreateShared
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestStore.CreateShared
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<SqlServerTestStore, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<SqlServerTestStore, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of SqlServerTestStore, TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore, TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of SqlServerTestStore, TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<SqlServerTestStore, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<SqlServerTestStore, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of SqlServerTestStore, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of SqlServerTestStore, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Specification.Tests
  commentId: N:Microsoft.EntityFrameworkCore.Specification.Tests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Specification.Tests
  nameWithType: Microsoft.EntityFrameworkCore.Specification.Tests
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore
  commentId: T:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  isExternal: false
  name: SqlServerTestStore
  nameWithType: SqlServerTestStore
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore
- uid: System.Threading.Tasks.Task{Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore}
  commentId: T:System.Threading.Tasks.Task{Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<SqlServerTestStore>
  nameWithType: Task<SqlServerTestStore>
  fullName: System.Threading.Tasks.Task<Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore>
  nameWithType.vb: Task(Of SqlServerTestStore)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore)
  name.vb: Task(Of SqlServerTestStore)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore
    name: SqlServerTestStore
    nameWithType: SqlServerTestStore
    fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore
    name: SqlServerTestStore
    nameWithType: SqlServerTestStore
    fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore.ConnectionString
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore.ConnectionString
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore
  isExternal: false
  name: ConnectionString
  nameWithType: RelationalTestStore.ConnectionString
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore.ConnectionString
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore.Connection
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore.Connection
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore
  isExternal: false
  name: Connection
  nameWithType: RelationalTestStore.Connection
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore.Connection
- uid: System.Data.Common.DbConnection
  commentId: T:System.Data.Common.DbConnection
  parent: System.Data.Common
  isExternal: true
  name: DbConnection
  nameWithType: DbConnection
  fullName: System.Data.Common.DbConnection
- uid: System.Data.Common
  commentId: N:System.Data.Common
  isExternal: false
  name: System.Data.Common
  nameWithType: System.Data.Common
  fullName: System.Data.Common
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore.Transaction
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore.Transaction
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore
  isExternal: false
  name: Transaction
  nameWithType: RelationalTestStore.Transaction
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore.Transaction
- uid: System.Data.Common.DbTransaction
  commentId: T:System.Data.Common.DbTransaction
  parent: System.Data.Common
  isExternal: true
  name: DbTransaction
  nameWithType: DbTransaction
  fullName: System.Data.Common.DbTransaction
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Object[]
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullname.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Threading.Tasks.Task{{T}}
  commentId: T:System.Threading.Tasks.Task{`0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<T>
  nameWithType: Task<T>
  fullName: System.Threading.Tasks.Task<T>
  nameWithType.vb: Task(Of T)
  fullname.vb: System.Threading.Tasks.Task(Of T)
  name.vb: Task(Of T)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: T:System.Threading.Tasks.Task{System.Int32}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Int32>
  nameWithType: Task<Int32>
  fullName: System.Threading.Tasks.Task<System.Int32>
  nameWithType.vb: Task(Of Int32)
  fullname.vb: System.Threading.Tasks.Task(Of System.Int32)
  name.vb: Task(Of Int32)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{{T}}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{``0}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IEnumerable<T>>
  nameWithType: Task<IEnumerable<T>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<T>>
  nameWithType.vb: Task(Of IEnumerable(Of T))
  fullname.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IEnumerable(Of T))
  name.vb: Task(Of IEnumerable(Of T))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestStore.Dispose
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TestStore.Dispose
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestStore
  isExternal: false
  name: Dispose()
  nameWithType: TestStore.Dispose()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestStore.Dispose()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestStore.Dispose
    name: Dispose
    nameWithType: TestStore.Dispose
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestStore.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestStore.Dispose
    name: Dispose
    nameWithType: TestStore.Dispose
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestStore.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
