### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore
  commentId: T:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore
  id: SqlServerTestStore
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  children:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.CommandTimeout
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.Connection
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ConnectionString
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.Create(System.String)
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.CreateConnectionString(System.String)
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.CreateConnectionString(System.String,System.String)
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.CreateScratch(System.Boolean,System.Boolean)
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.Dispose
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ExecuteNonQuery(System.String,System.Object[])
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ExecuteNonQueryAsync(System.String,System.Object[])
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ExecuteScalar``1(System.String,System.Object[])
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ExecuteScalarAsync``1(System.String,System.Object[])
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ExecuteScript(System.String,System.String)
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.GetExecutionStrategy
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.GetOrCreateShared(System.String,System.Action,System.Boolean)
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.Name
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.OpenConnection
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.OpenConnectionAsync
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.Query``1(System.String,System.Object[])
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.QueryAsync``1(System.String,System.Object[])
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.Transaction
  langs:
  - csharp
  - vb
  name: SqlServerTestStore
  nameWithType: SqlServerTestStore
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore
  type: Class
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: SqlServerTestStore
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
    startLine: 20
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  syntax:
    content: 'public class SqlServerTestStore : RelationalTestStore, IDisposable'
    content.vb: >-
      Public Class SqlServerTestStore
          Inherits RelationalTestStore
          Implements IDisposable
  inheritance:
  - System.Object
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestStore
  - Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore
  implements:
  - System.IDisposable
  inheritedMembers:
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestStore.CreateShared(System.String,System.Action)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.CommandTimeout
  commentId: F:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.CommandTimeout
  id: CommandTimeout
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore
  langs:
  - csharp
  - vb
  name: CommandTimeout
  nameWithType: SqlServerTestStore.CommandTimeout
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.CommandTimeout
  type: Field
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CommandTimeout
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
    startLine: 22
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  syntax:
    content: public const int CommandTimeout = 90
    content.vb: Public Const CommandTimeout As Integer = 90
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.GetOrCreateShared(System.String,System.Action,System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.GetOrCreateShared(System.String,System.Action,System.Boolean)
  id: GetOrCreateShared(System.String,System.Action,System.Boolean)
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore
  langs:
  - csharp
  - vb
  name: GetOrCreateShared(String, Action, Boolean)
  nameWithType: SqlServerTestStore.GetOrCreateShared(String, Action, Boolean)
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.GetOrCreateShared(System.String, System.Action, System.Boolean)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetOrCreateShared
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
    startLine: 30
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  syntax:
    content: public static SqlServerTestStore GetOrCreateShared(string name, Action initializeDatabase, bool cleanDatabase = true)
    content.vb: Public Shared Function GetOrCreateShared(name As String, initializeDatabase As Action, cleanDatabase As Boolean = True) As SqlServerTestStore
    parameters:
    - id: name
      type: System.String
    - id: initializeDatabase
      type: System.Action
    - id: cleanDatabase
      type: System.Boolean
    return:
      type: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore
  overload: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.GetOrCreateShared*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.Create(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.Create(System.String)
  id: Create(System.String)
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore
  langs:
  - csharp
  - vb
  name: Create(String)
  nameWithType: SqlServerTestStore.Create(String)
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.Create(System.String)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Create
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
    startLine: 33
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  syntax:
    content: public static SqlServerTestStore Create(string name)
    content.vb: Public Shared Function Create(name As String) As SqlServerTestStore
    parameters:
    - id: name
      type: System.String
    return:
      type: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore
  overload: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.Create*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.CreateScratch(System.Boolean,System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.CreateScratch(System.Boolean,System.Boolean)
  id: CreateScratch(System.Boolean,System.Boolean)
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore
  langs:
  - csharp
  - vb
  name: CreateScratch(Boolean, Boolean)
  nameWithType: SqlServerTestStore.CreateScratch(Boolean, Boolean)
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.CreateScratch(System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateScratch
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
    startLine: 36
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  syntax:
    content: public static SqlServerTestStore CreateScratch(bool createDatabase = true, bool useFileName = false)
    content.vb: Public Shared Function CreateScratch(createDatabase As Boolean = True, useFileName As Boolean = False) As SqlServerTestStore
    parameters:
    - id: createDatabase
      type: System.Boolean
    - id: useFileName
      type: System.Boolean
    return:
      type: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore
  overload: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.CreateScratch*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.Name
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.Name
  id: Name
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: SqlServerTestStore.Name
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.Name
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Name
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
    startLine: 45
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  syntax:
    content: public string Name { get; }
    content.vb: Public ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ConnectionString
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ConnectionString
  id: ConnectionString
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore
  langs:
  - csharp
  - vb
  name: ConnectionString
  nameWithType: SqlServerTestStore.ConnectionString
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ConnectionString
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ConnectionString
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
    startLine: 46
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  syntax:
    content: public override string ConnectionString { get; }
    content.vb: Public Overrides ReadOnly Property ConnectionString As String
    parameters: []
    return:
      type: System.String
  overridden: Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore.ConnectionString
  overload: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ConnectionString*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ExecuteScript(System.String,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ExecuteScript(System.String,System.String)
  id: ExecuteScript(System.String,System.String)
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore
  langs:
  - csharp
  - vb
  name: ExecuteScript(String, String)
  nameWithType: SqlServerTestStore.ExecuteScript(String, String)
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ExecuteScript(System.String, System.String)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ExecuteScript
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
    startLine: 123
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  syntax:
    content: public static void ExecuteScript(string databaseName, string scriptPath)
    content.vb: Public Shared Sub ExecuteScript(databaseName As String, scriptPath As String)
    parameters:
    - id: databaseName
      type: System.String
    - id: scriptPath
      type: System.String
  overload: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ExecuteScript*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.GetExecutionStrategy
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.GetExecutionStrategy
  id: GetExecutionStrategy
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore
  langs:
  - csharp
  - vb
  name: GetExecutionStrategy()
  nameWithType: SqlServerTestStore.GetExecutionStrategy()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.GetExecutionStrategy()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetExecutionStrategy
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
    startLine: 282
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  syntax:
    content: public static IExecutionStrategy GetExecutionStrategy()
    content.vb: Public Shared Function GetExecutionStrategy As IExecutionStrategy
    return:
      type: Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy
  overload: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.GetExecutionStrategy*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.Connection
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.Connection
  id: Connection
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore
  langs:
  - csharp
  - vb
  name: Connection
  nameWithType: SqlServerTestStore.Connection
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.Connection
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Connection
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
    startLine: 285
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  syntax:
    content: public override DbConnection Connection { get; }
    content.vb: Public Overrides ReadOnly Property Connection As DbConnection
    parameters: []
    return:
      type: System.Data.Common.DbConnection
  overridden: Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore.Connection
  overload: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.Connection*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.Transaction
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.Transaction
  id: Transaction
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore
  langs:
  - csharp
  - vb
  name: Transaction
  nameWithType: SqlServerTestStore.Transaction
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.Transaction
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Transaction
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
    startLine: 287
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  syntax:
    content: public override DbTransaction Transaction { get; }
    content.vb: Public Overrides ReadOnly Property Transaction As DbTransaction
    parameters: []
    return:
      type: System.Data.Common.DbTransaction
  overridden: Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore.Transaction
  overload: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.Transaction*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.OpenConnection
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.OpenConnection
  id: OpenConnection
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore
  langs:
  - csharp
  - vb
  name: OpenConnection()
  nameWithType: SqlServerTestStore.OpenConnection()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.OpenConnection()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: OpenConnection
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
    startLine: 289
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  syntax:
    content: public override void OpenConnection()
    content.vb: Public Overrides Sub OpenConnection
  overridden: Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore.OpenConnection
  overload: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.OpenConnection*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.OpenConnectionAsync
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.OpenConnectionAsync
  id: OpenConnectionAsync
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore
  langs:
  - csharp
  - vb
  name: OpenConnectionAsync()
  nameWithType: SqlServerTestStore.OpenConnectionAsync()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.OpenConnectionAsync()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: OpenConnectionAsync
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
    startLine: 294
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  syntax:
    content: public Task OpenConnectionAsync()
    content.vb: Public Function OpenConnectionAsync As Task
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.OpenConnectionAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ExecuteScalar``1(System.String,System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ExecuteScalar``1(System.String,System.Object[])
  id: ExecuteScalar``1(System.String,System.Object[])
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore
  langs:
  - csharp
  - vb
  name: ExecuteScalar<T>(String, Object[])
  nameWithType: SqlServerTestStore.ExecuteScalar<T>(String, Object[])
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ExecuteScalar<T>(System.String, System.Object[])
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ExecuteScalar
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
    startLine: 299
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  syntax:
    content: public T ExecuteScalar<T>(string sql, params object[] parameters)
    content.vb: Public Function ExecuteScalar(Of T)(sql As String, ParamArray parameters As Object()) As T
    parameters:
    - id: sql
      type: System.String
    - id: parameters
      type: System.Object[]
    typeParameters:
    - id: T
    return:
      type: '{T}'
  overload: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ExecuteScalar*
  nameWithType.vb: SqlServerTestStore.ExecuteScalar(Of T)(String, Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ExecuteScalar(Of T)(System.String, System.Object())
  name.vb: ExecuteScalar(Of T)(String, Object())
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ExecuteScalarAsync``1(System.String,System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ExecuteScalarAsync``1(System.String,System.Object[])
  id: ExecuteScalarAsync``1(System.String,System.Object[])
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore
  langs:
  - csharp
  - vb
  name: ExecuteScalarAsync<T>(String, Object[])
  nameWithType: SqlServerTestStore.ExecuteScalarAsync<T>(String, Object[])
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ExecuteScalarAsync<T>(System.String, System.Object[])
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ExecuteScalarAsync
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
    startLine: 305
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  syntax:
    content: public Task<T> ExecuteScalarAsync<T>(string sql, params object[] parameters)
    content.vb: Public Function ExecuteScalarAsync(Of T)(sql As String, ParamArray parameters As Object()) As Task(Of T)
    parameters:
    - id: sql
      type: System.String
    - id: parameters
      type: System.Object[]
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task{{T}}
  overload: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ExecuteScalarAsync*
  nameWithType.vb: SqlServerTestStore.ExecuteScalarAsync(Of T)(String, Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ExecuteScalarAsync(Of T)(System.String, System.Object())
  name.vb: ExecuteScalarAsync(Of T)(String, Object())
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ExecuteNonQuery(System.String,System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ExecuteNonQuery(System.String,System.Object[])
  id: ExecuteNonQuery(System.String,System.Object[])
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore
  langs:
  - csharp
  - vb
  name: ExecuteNonQuery(String, Object[])
  nameWithType: SqlServerTestStore.ExecuteNonQuery(String, Object[])
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ExecuteNonQuery(System.String, System.Object[])
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ExecuteNonQuery
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
    startLine: 311
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  syntax:
    content: public int ExecuteNonQuery(string sql, params object[] parameters)
    content.vb: Public Function ExecuteNonQuery(sql As String, ParamArray parameters As Object()) As Integer
    parameters:
    - id: sql
      type: System.String
    - id: parameters
      type: System.Object[]
    return:
      type: System.Int32
  overload: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ExecuteNonQuery*
  nameWithType.vb: SqlServerTestStore.ExecuteNonQuery(String, Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ExecuteNonQuery(System.String, System.Object())
  name.vb: ExecuteNonQuery(String, Object())
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ExecuteNonQueryAsync(System.String,System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ExecuteNonQueryAsync(System.String,System.Object[])
  id: ExecuteNonQueryAsync(System.String,System.Object[])
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore
  langs:
  - csharp
  - vb
  name: ExecuteNonQueryAsync(String, Object[])
  nameWithType: SqlServerTestStore.ExecuteNonQueryAsync(String, Object[])
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ExecuteNonQueryAsync(System.String, System.Object[])
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ExecuteNonQueryAsync
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
    startLine: 317
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  syntax:
    content: public Task<int> ExecuteNonQueryAsync(string sql, params object[] parameters)
    content.vb: Public Function ExecuteNonQueryAsync(sql As String, ParamArray parameters As Object()) As Task(Of Integer)
    parameters:
    - id: sql
      type: System.String
    - id: parameters
      type: System.Object[]
    return:
      type: System.Threading.Tasks.Task{System.Int32}
  overload: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ExecuteNonQueryAsync*
  nameWithType.vb: SqlServerTestStore.ExecuteNonQueryAsync(String, Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ExecuteNonQueryAsync(System.String, System.Object())
  name.vb: ExecuteNonQueryAsync(String, Object())
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.Query``1(System.String,System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.Query``1(System.String,System.Object[])
  id: Query``1(System.String,System.Object[])
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore
  langs:
  - csharp
  - vb
  name: Query<T>(String, Object[])
  nameWithType: SqlServerTestStore.Query<T>(String, Object[])
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.Query<T>(System.String, System.Object[])
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Query
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
    startLine: 323
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  syntax:
    content: public IEnumerable<T> Query<T>(string sql, params object[] parameters)
    content.vb: Public Function Query(Of T)(sql As String, ParamArray parameters As Object()) As IEnumerable(Of T)
    parameters:
    - id: sql
      type: System.String
    - id: parameters
      type: System.Object[]
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.IEnumerable{{T}}
  overload: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.Query*
  nameWithType.vb: SqlServerTestStore.Query(Of T)(String, Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.Query(Of T)(System.String, System.Object())
  name.vb: Query(Of T)(String, Object())
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.QueryAsync``1(System.String,System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.QueryAsync``1(System.String,System.Object[])
  id: QueryAsync``1(System.String,System.Object[])
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore
  langs:
  - csharp
  - vb
  name: QueryAsync<T>(String, Object[])
  nameWithType: SqlServerTestStore.QueryAsync<T>(String, Object[])
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.QueryAsync<T>(System.String, System.Object[])
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: QueryAsync
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
    startLine: 340
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  syntax:
    content: public Task<IEnumerable<T>> QueryAsync<T>(string sql, params object[] parameters)
    content.vb: Public Function QueryAsync(Of T)(sql As String, ParamArray parameters As Object()) As Task(Of IEnumerable(Of T))
    parameters:
    - id: sql
      type: System.String
    - id: parameters
      type: System.Object[]
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{{T}}}
  overload: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.QueryAsync*
  nameWithType.vb: SqlServerTestStore.QueryAsync(Of T)(String, Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.QueryAsync(Of T)(System.String, System.Object())
  name.vb: QueryAsync(Of T)(String, Object())
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.Dispose
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.Dispose
  id: Dispose
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: SqlServerTestStore.Dispose()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.Dispose()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Dispose
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
    startLine: 442
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  syntax:
    content: public override void Dispose()
    content.vb: Public Overrides Sub Dispose
  overridden: Microsoft.EntityFrameworkCore.Specification.Tests.TestStore.Dispose
  overload: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.Dispose*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.CreateConnectionString(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.CreateConnectionString(System.String)
  id: CreateConnectionString(System.String)
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore
  langs:
  - csharp
  - vb
  name: CreateConnectionString(String)
  nameWithType: SqlServerTestStore.CreateConnectionString(String)
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.CreateConnectionString(System.String)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateConnectionString
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
    startLine: 452
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  syntax:
    content: public static string CreateConnectionString(string name)
    content.vb: Public Shared Function CreateConnectionString(name As String) As String
    parameters:
    - id: name
      type: System.String
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.CreateConnectionString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.CreateConnectionString(System.String,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.CreateConnectionString(System.String,System.String)
  id: CreateConnectionString(System.String,System.String)
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore
  langs:
  - csharp
  - vb
  name: CreateConnectionString(String, String)
  nameWithType: SqlServerTestStore.CreateConnectionString(String, String)
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.CreateConnectionString(System.String, System.String)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateConnectionString
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/SqlServerTestStore.cs
    startLine: 455
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  syntax:
    content: public static string CreateConnectionString(string name, string fileName)
    content.vb: Public Shared Function CreateConnectionString(name As String, fileName As String) As String
    parameters:
    - id: name
      type: System.String
    - id: fileName
      type: System.String
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.CreateConnectionString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  commentId: N:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  isExternal: false
  name: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  nameWithType: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestStore
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.TestStore
  parent: Microsoft.EntityFrameworkCore.Specification.Tests
  isExternal: false
  name: TestStore
  nameWithType: TestStore
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestStore
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore
  parent: Microsoft.EntityFrameworkCore.Specification.Tests
  isExternal: false
  name: RelationalTestStore
  nameWithType: RelationalTestStore
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestStore.CreateShared(System.String,System.Action)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TestStore.CreateShared(System.String,System.Action)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestStore
  isExternal: true
  name: CreateShared(String, Action)
  nameWithType: TestStore.CreateShared(String, Action)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestStore.CreateShared(System.String, System.Action)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestStore.CreateShared(System.String,System.Action)
    name: CreateShared
    nameWithType: TestStore.CreateShared
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestStore.CreateShared
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestStore.CreateShared(System.String,System.Action)
    name: CreateShared
    nameWithType: TestStore.CreateShared
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestStore.CreateShared
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Specification.Tests
  commentId: N:Microsoft.EntityFrameworkCore.Specification.Tests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Specification.Tests
  nameWithType: Microsoft.EntityFrameworkCore.Specification.Tests
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.GetOrCreateShared*
  commentId: Overload:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.GetOrCreateShared
  isExternal: false
  name: GetOrCreateShared
  nameWithType: SqlServerTestStore.GetOrCreateShared
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.GetOrCreateShared
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore
  commentId: T:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  isExternal: false
  name: SqlServerTestStore
  nameWithType: SqlServerTestStore
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.Create*
  commentId: Overload:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.Create
  isExternal: false
  name: Create
  nameWithType: SqlServerTestStore.Create
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.Create
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.CreateScratch*
  commentId: Overload:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.CreateScratch
  isExternal: false
  name: CreateScratch
  nameWithType: SqlServerTestStore.CreateScratch
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.CreateScratch
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.Name*
  commentId: Overload:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.Name
  isExternal: false
  name: Name
  nameWithType: SqlServerTestStore.Name
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.Name
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore.ConnectionString
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore.ConnectionString
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore
  isExternal: false
  name: ConnectionString
  nameWithType: RelationalTestStore.ConnectionString
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore.ConnectionString
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ConnectionString*
  commentId: Overload:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ConnectionString
  isExternal: false
  name: ConnectionString
  nameWithType: SqlServerTestStore.ConnectionString
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ConnectionString
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ExecuteScript*
  commentId: Overload:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ExecuteScript
  isExternal: false
  name: ExecuteScript
  nameWithType: SqlServerTestStore.ExecuteScript
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ExecuteScript
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.GetExecutionStrategy*
  commentId: Overload:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.GetExecutionStrategy
  isExternal: false
  name: GetExecutionStrategy
  nameWithType: SqlServerTestStore.GetExecutionStrategy
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.GetExecutionStrategy
- uid: Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IExecutionStrategy
  nameWithType: IExecutionStrategy
  fullName: Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy
- uid: Microsoft.EntityFrameworkCore.Storage
  commentId: N:Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Storage
  nameWithType: Microsoft.EntityFrameworkCore.Storage
  fullName: Microsoft.EntityFrameworkCore.Storage
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore.Connection
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore.Connection
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore
  isExternal: false
  name: Connection
  nameWithType: RelationalTestStore.Connection
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore.Connection
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.Connection*
  commentId: Overload:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.Connection
  isExternal: false
  name: Connection
  nameWithType: SqlServerTestStore.Connection
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.Connection
- uid: System.Data.Common.DbConnection
  commentId: T:System.Data.Common.DbConnection
  parent: System.Data.Common
  isExternal: true
  name: DbConnection
  nameWithType: DbConnection
  fullName: System.Data.Common.DbConnection
- uid: System.Data.Common
  commentId: N:System.Data.Common
  isExternal: false
  name: System.Data.Common
  nameWithType: System.Data.Common
  fullName: System.Data.Common
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore.Transaction
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore.Transaction
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore
  isExternal: false
  name: Transaction
  nameWithType: RelationalTestStore.Transaction
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore.Transaction
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.Transaction*
  commentId: Overload:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.Transaction
  isExternal: false
  name: Transaction
  nameWithType: SqlServerTestStore.Transaction
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.Transaction
- uid: System.Data.Common.DbTransaction
  commentId: T:System.Data.Common.DbTransaction
  parent: System.Data.Common
  isExternal: true
  name: DbTransaction
  nameWithType: DbTransaction
  fullName: System.Data.Common.DbTransaction
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore.OpenConnection
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore.OpenConnection
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore
  isExternal: false
  name: OpenConnection()
  nameWithType: RelationalTestStore.OpenConnection()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore.OpenConnection()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore.OpenConnection
    name: OpenConnection
    nameWithType: RelationalTestStore.OpenConnection
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore.OpenConnection
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore.OpenConnection
    name: OpenConnection
    nameWithType: RelationalTestStore.OpenConnection
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore.OpenConnection
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.OpenConnection*
  commentId: Overload:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.OpenConnection
  isExternal: false
  name: OpenConnection
  nameWithType: SqlServerTestStore.OpenConnection
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.OpenConnection
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.OpenConnectionAsync*
  commentId: Overload:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.OpenConnectionAsync
  isExternal: false
  name: OpenConnectionAsync
  nameWithType: SqlServerTestStore.OpenConnectionAsync
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.OpenConnectionAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ExecuteScalar*
  commentId: Overload:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ExecuteScalar
  isExternal: false
  name: ExecuteScalar<T>
  nameWithType: SqlServerTestStore.ExecuteScalar<T>
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ExecuteScalar<T>
  nameWithType.vb: SqlServerTestStore.ExecuteScalar(Of T)
  fullname.vb: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ExecuteScalar(Of T)
  name.vb: ExecuteScalar(Of T)
- uid: System.Object[]
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullname.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ExecuteScalarAsync*
  commentId: Overload:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ExecuteScalarAsync
  isExternal: false
  name: ExecuteScalarAsync<T>
  nameWithType: SqlServerTestStore.ExecuteScalarAsync<T>
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ExecuteScalarAsync<T>
  nameWithType.vb: SqlServerTestStore.ExecuteScalarAsync(Of T)
  fullname.vb: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ExecuteScalarAsync(Of T)
  name.vb: ExecuteScalarAsync(Of T)
- uid: System.Threading.Tasks.Task{{T}}
  commentId: T:System.Threading.Tasks.Task{`0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<T>
  nameWithType: Task<T>
  fullName: System.Threading.Tasks.Task<T>
  nameWithType.vb: Task(Of T)
  fullname.vb: System.Threading.Tasks.Task(Of T)
  name.vb: Task(Of T)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ExecuteNonQuery*
  commentId: Overload:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ExecuteNonQuery
  isExternal: false
  name: ExecuteNonQuery
  nameWithType: SqlServerTestStore.ExecuteNonQuery
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ExecuteNonQuery
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ExecuteNonQueryAsync*
  commentId: Overload:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ExecuteNonQueryAsync
  isExternal: false
  name: ExecuteNonQueryAsync
  nameWithType: SqlServerTestStore.ExecuteNonQueryAsync
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.ExecuteNonQueryAsync
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: T:System.Threading.Tasks.Task{System.Int32}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Int32>
  nameWithType: Task<Int32>
  fullName: System.Threading.Tasks.Task<System.Int32>
  nameWithType.vb: Task(Of Int32)
  fullname.vb: System.Threading.Tasks.Task(Of System.Int32)
  name.vb: Task(Of Int32)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.Query*
  commentId: Overload:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.Query
  isExternal: false
  name: Query<T>
  nameWithType: SqlServerTestStore.Query<T>
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.Query<T>
  nameWithType.vb: SqlServerTestStore.Query(Of T)
  fullname.vb: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.Query(Of T)
  name.vb: Query(Of T)
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.QueryAsync*
  commentId: Overload:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.QueryAsync
  isExternal: false
  name: QueryAsync<T>
  nameWithType: SqlServerTestStore.QueryAsync<T>
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.QueryAsync<T>
  nameWithType.vb: SqlServerTestStore.QueryAsync(Of T)
  fullname.vb: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.QueryAsync(Of T)
  name.vb: QueryAsync(Of T)
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{{T}}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{``0}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IEnumerable<T>>
  nameWithType: Task<IEnumerable<T>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<T>>
  nameWithType.vb: Task(Of IEnumerable(Of T))
  fullname.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IEnumerable(Of T))
  name.vb: Task(Of IEnumerable(Of T))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestStore.Dispose
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TestStore.Dispose
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestStore
  isExternal: false
  name: Dispose()
  nameWithType: TestStore.Dispose()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestStore.Dispose()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestStore.Dispose
    name: Dispose
    nameWithType: TestStore.Dispose
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestStore.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestStore.Dispose
    name: Dispose
    nameWithType: TestStore.Dispose
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestStore.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.Dispose*
  commentId: Overload:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.Dispose
  isExternal: false
  name: Dispose
  nameWithType: SqlServerTestStore.Dispose
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.Dispose
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.CreateConnectionString*
  commentId: Overload:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.CreateConnectionString
  isExternal: false
  name: CreateConnectionString
  nameWithType: SqlServerTestStore.CreateConnectionString
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerTestStore.CreateConnectionString
