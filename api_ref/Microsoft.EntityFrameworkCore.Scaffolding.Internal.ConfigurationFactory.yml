### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory
  id: ConfigurationFactory
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  children:
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.#ctor(Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider,Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities,Microsoft.EntityFrameworkCore.Scaffolding.Internal.ScaffoldingUtilities)
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CreateAttributeConfiguration(System.String,System.String[])
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CreateCustomConfiguration(System.String,System.String,System.String,System.Boolean)
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CreateEntityConfiguration(Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.ModelConfiguration,Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CreateFluentApiConfiguration(System.Boolean,System.String,System.String[])
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CreateIndexConfiguration(System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.Index)
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CreateKeyFluentApiConfiguration(System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.Key)
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CreateModelConfiguration(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.CustomConfiguration)
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CreateNavigationPropertyConfiguration(System.String,System.String)
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CreateNavigationPropertyInitializerConfiguration(System.String,System.String)
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CreateOptionsBuilderConfiguration(System.Collections.Generic.ICollection{System.String})
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CreatePropertyConfiguration(Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration,Microsoft.EntityFrameworkCore.Metadata.IProperty)
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CreateRelationshipConfiguration(Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration,Microsoft.EntityFrameworkCore.Metadata.IForeignKey,System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior)
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CreateSequenceConfiguration
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CSharpUtilities
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.ExtensionsProvider
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.ScaffoldingUtilities
  langs:
  - csharp
  - vb
  name: ConfigurationFactory
  nameWithType: ConfigurationFactory
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ConfigurationFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ConfigurationFactory
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ConfigurationFactory.cs
    startLine: 16
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public class ConfigurationFactory
    content.vb: Public Class ConfigurationFactory
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.#ctor(Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider,Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities,Microsoft.EntityFrameworkCore.Scaffolding.Internal.ScaffoldingUtilities)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.#ctor(Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider,Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities,Microsoft.EntityFrameworkCore.Scaffolding.Internal.ScaffoldingUtilities)
  id: '#ctor(Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider,Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities,Microsoft.EntityFrameworkCore.Scaffolding.Internal.ScaffoldingUtilities)'
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory
  langs:
  - csharp
  - vb
  name: ConfigurationFactory(IRelationalAnnotationProvider, CSharpUtilities, ScaffoldingUtilities)
  nameWithType: ConfigurationFactory.ConfigurationFactory(IRelationalAnnotationProvider, CSharpUtilities, ScaffoldingUtilities)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.ConfigurationFactory(Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider, Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities, Microsoft.EntityFrameworkCore.Scaffolding.Internal.ScaffoldingUtilities)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ConfigurationFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ConfigurationFactory.cs
    startLine: 22
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public ConfigurationFactory(IRelationalAnnotationProvider extensionsProvider, CSharpUtilities cSharpUtilities, ScaffoldingUtilities scaffoldingUtilities)
    content.vb: Public Sub New(extensionsProvider As IRelationalAnnotationProvider, cSharpUtilities As CSharpUtilities, scaffoldingUtilities As ScaffoldingUtilities)
    parameters:
    - id: extensionsProvider
      type: Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider
    - id: cSharpUtilities
      type: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities
    - id: scaffoldingUtilities
      type: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ScaffoldingUtilities
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.ExtensionsProvider
  commentId: P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.ExtensionsProvider
  id: ExtensionsProvider
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory
  langs:
  - csharp
  - vb
  name: ExtensionsProvider
  nameWithType: ConfigurationFactory.ExtensionsProvider
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.ExtensionsProvider
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ConfigurationFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ExtensionsProvider
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ConfigurationFactory.cs
    startLine: 39
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual IRelationalAnnotationProvider ExtensionsProvider { get; }
    content.vb: Protected Overridable ReadOnly Property ExtensionsProvider As IRelationalAnnotationProvider
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CSharpUtilities
  commentId: P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CSharpUtilities
  id: CSharpUtilities
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory
  langs:
  - csharp
  - vb
  name: CSharpUtilities
  nameWithType: ConfigurationFactory.CSharpUtilities
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CSharpUtilities
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ConfigurationFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CSharpUtilities
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ConfigurationFactory.cs
    startLine: 45
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual CSharpUtilities CSharpUtilities { get; }
    content.vb: Protected Overridable ReadOnly Property CSharpUtilities As CSharpUtilities
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.ScaffoldingUtilities
  commentId: P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.ScaffoldingUtilities
  id: ScaffoldingUtilities
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory
  langs:
  - csharp
  - vb
  name: ScaffoldingUtilities
  nameWithType: ConfigurationFactory.ScaffoldingUtilities
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.ScaffoldingUtilities
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ConfigurationFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ScaffoldingUtilities
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ConfigurationFactory.cs
    startLine: 51
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual ScaffoldingUtilities ScaffoldingUtilities { get; }
    content.vb: Protected Overridable ReadOnly Property ScaffoldingUtilities As ScaffoldingUtilities
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ScaffoldingUtilities
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CreateModelConfiguration(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.CustomConfiguration)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CreateModelConfiguration(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.CustomConfiguration)
  id: CreateModelConfiguration(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.CustomConfiguration)
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory
  langs:
  - csharp
  - vb
  name: CreateModelConfiguration(IModel, CustomConfiguration)
  nameWithType: ConfigurationFactory.CreateModelConfiguration(IModel, CustomConfiguration)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CreateModelConfiguration(Microsoft.EntityFrameworkCore.Metadata.IModel, Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.CustomConfiguration)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ConfigurationFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateModelConfiguration
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ConfigurationFactory.cs
    startLine: 57
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual ModelConfiguration CreateModelConfiguration(IModel model, CustomConfiguration customConfiguration)
    content.vb: Public Overridable Function CreateModelConfiguration(model As IModel, customConfiguration As CustomConfiguration) As ModelConfiguration
    parameters:
    - id: model
      type: Microsoft.EntityFrameworkCore.Metadata.IModel
    - id: customConfiguration
      type: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.CustomConfiguration
    return:
      type: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.ModelConfiguration
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CreateCustomConfiguration(System.String,System.String,System.String,System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CreateCustomConfiguration(System.String,System.String,System.String,System.Boolean)
  id: CreateCustomConfiguration(System.String,System.String,System.String,System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory
  langs:
  - csharp
  - vb
  name: CreateCustomConfiguration(String, String, String, Boolean)
  nameWithType: ConfigurationFactory.CreateCustomConfiguration(String, String, String, Boolean)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CreateCustomConfiguration(System.String, System.String, System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ConfigurationFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateCustomConfiguration
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ConfigurationFactory.cs
    startLine: 66
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual CustomConfiguration CreateCustomConfiguration(string connectionString, string contextClassName, string namespace, bool useFluentApiOnly)
    content.vb: Public Overridable Function CreateCustomConfiguration(connectionString As String, contextClassName As String, namespace As String, useFluentApiOnly As Boolean) As CustomConfiguration
    parameters:
    - id: connectionString
      type: System.String
    - id: contextClassName
      type: System.String
    - id: namespace
      type: System.String
    - id: useFluentApiOnly
      type: System.Boolean
    return:
      type: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.CustomConfiguration
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CreateOptionsBuilderConfiguration(System.Collections.Generic.ICollection{System.String})
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CreateOptionsBuilderConfiguration(System.Collections.Generic.ICollection{System.String})
  id: CreateOptionsBuilderConfiguration(System.Collections.Generic.ICollection{System.String})
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory
  langs:
  - csharp
  - vb
  name: CreateOptionsBuilderConfiguration(ICollection<String>)
  nameWithType: ConfigurationFactory.CreateOptionsBuilderConfiguration(ICollection<String>)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CreateOptionsBuilderConfiguration(System.Collections.Generic.ICollection<System.String>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ConfigurationFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateOptionsBuilderConfiguration
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ConfigurationFactory.cs
    startLine: 76
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual OptionsBuilderConfiguration CreateOptionsBuilderConfiguration(ICollection<string> methodBodyLines)
    content.vb: Public Overridable Function CreateOptionsBuilderConfiguration(methodBodyLines As ICollection(Of String)) As OptionsBuilderConfiguration
    parameters:
    - id: methodBodyLines
      type: System.Collections.Generic.ICollection{System.String}
    return:
      type: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.OptionsBuilderConfiguration
  nameWithType.vb: ConfigurationFactory.CreateOptionsBuilderConfiguration(ICollection(Of String))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CreateOptionsBuilderConfiguration(System.Collections.Generic.ICollection(Of System.String))
  name.vb: CreateOptionsBuilderConfiguration(ICollection(Of String))
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CreateEntityConfiguration(Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.ModelConfiguration,Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CreateEntityConfiguration(Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.ModelConfiguration,Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  id: CreateEntityConfiguration(Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.ModelConfiguration,Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory
  langs:
  - csharp
  - vb
  name: CreateEntityConfiguration(ModelConfiguration, IEntityType)
  nameWithType: ConfigurationFactory.CreateEntityConfiguration(ModelConfiguration, IEntityType)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CreateEntityConfiguration(Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.ModelConfiguration, Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ConfigurationFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateEntityConfiguration
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ConfigurationFactory.cs
    startLine: 88
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual EntityConfiguration CreateEntityConfiguration(ModelConfiguration modelConfiguration, IEntityType entityType)
    content.vb: Public Overridable Function CreateEntityConfiguration(modelConfiguration As ModelConfiguration, entityType As IEntityType) As EntityConfiguration
    parameters:
    - id: modelConfiguration
      type: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.ModelConfiguration
    - id: entityType
      type: Microsoft.EntityFrameworkCore.Metadata.IEntityType
    return:
      type: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CreateRelationshipConfiguration(Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration,Microsoft.EntityFrameworkCore.Metadata.IForeignKey,System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CreateRelationshipConfiguration(Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration,Microsoft.EntityFrameworkCore.Metadata.IForeignKey,System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior)
  id: CreateRelationshipConfiguration(Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration,Microsoft.EntityFrameworkCore.Metadata.IForeignKey,System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior)
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory
  langs:
  - csharp
  - vb
  name: CreateRelationshipConfiguration(EntityConfiguration, IForeignKey, String, String, DeleteBehavior)
  nameWithType: ConfigurationFactory.CreateRelationshipConfiguration(EntityConfiguration, IForeignKey, String, String, DeleteBehavior)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CreateRelationshipConfiguration(Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration, Microsoft.EntityFrameworkCore.Metadata.IForeignKey, System.String, System.String, Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ConfigurationFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateRelationshipConfiguration
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ConfigurationFactory.cs
    startLine: 102
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual RelationshipConfiguration CreateRelationshipConfiguration(EntityConfiguration entityConfiguration, IForeignKey foreignKey, string dependentEndNavigationPropertyName, string principalEndNavigationPropertyName, DeleteBehavior onDeleteAction)
    content.vb: Public Overridable Function CreateRelationshipConfiguration(entityConfiguration As EntityConfiguration, foreignKey As IForeignKey, dependentEndNavigationPropertyName As String, principalEndNavigationPropertyName As String, onDeleteAction As DeleteBehavior) As RelationshipConfiguration
    parameters:
    - id: entityConfiguration
      type: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration
    - id: foreignKey
      type: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    - id: dependentEndNavigationPropertyName
      type: System.String
    - id: principalEndNavigationPropertyName
      type: System.String
    - id: onDeleteAction
      type: Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior
    return:
      type: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.RelationshipConfiguration
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CreatePropertyConfiguration(Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration,Microsoft.EntityFrameworkCore.Metadata.IProperty)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CreatePropertyConfiguration(Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration,Microsoft.EntityFrameworkCore.Metadata.IProperty)
  id: CreatePropertyConfiguration(Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration,Microsoft.EntityFrameworkCore.Metadata.IProperty)
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory
  langs:
  - csharp
  - vb
  name: CreatePropertyConfiguration(EntityConfiguration, IProperty)
  nameWithType: ConfigurationFactory.CreatePropertyConfiguration(EntityConfiguration, IProperty)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CreatePropertyConfiguration(Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration, Microsoft.EntityFrameworkCore.Metadata.IProperty)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ConfigurationFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreatePropertyConfiguration
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ConfigurationFactory.cs
    startLine: 126
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual PropertyConfiguration CreatePropertyConfiguration(EntityConfiguration entityConfiguration, IProperty property)
    content.vb: Public Overridable Function CreatePropertyConfiguration(entityConfiguration As EntityConfiguration, property As IProperty) As PropertyConfiguration
    parameters:
    - id: entityConfiguration
      type: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration
    - id: property
      type: Microsoft.EntityFrameworkCore.Metadata.IProperty
    return:
      type: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CreateNavigationPropertyConfiguration(System.String,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CreateNavigationPropertyConfiguration(System.String,System.String)
  id: CreateNavigationPropertyConfiguration(System.String,System.String)
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory
  langs:
  - csharp
  - vb
  name: CreateNavigationPropertyConfiguration(String, String)
  nameWithType: ConfigurationFactory.CreateNavigationPropertyConfiguration(String, String)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CreateNavigationPropertyConfiguration(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ConfigurationFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateNavigationPropertyConfiguration
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ConfigurationFactory.cs
    startLine: 140
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual NavigationPropertyConfiguration CreateNavigationPropertyConfiguration(string type, string name)
    content.vb: Public Overridable Function CreateNavigationPropertyConfiguration(type As String, name As String) As NavigationPropertyConfiguration
    parameters:
    - id: type
      type: System.String
    - id: name
      type: System.String
    return:
      type: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.NavigationPropertyConfiguration
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CreateNavigationPropertyInitializerConfiguration(System.String,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CreateNavigationPropertyInitializerConfiguration(System.String,System.String)
  id: CreateNavigationPropertyInitializerConfiguration(System.String,System.String)
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory
  langs:
  - csharp
  - vb
  name: CreateNavigationPropertyInitializerConfiguration(String, String)
  nameWithType: ConfigurationFactory.CreateNavigationPropertyInitializerConfiguration(String, String)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CreateNavigationPropertyInitializerConfiguration(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ConfigurationFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateNavigationPropertyInitializerConfiguration
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ConfigurationFactory.cs
    startLine: 153
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual NavigationPropertyInitializerConfiguration CreateNavigationPropertyInitializerConfiguration(string navPropName, string principalEntityTypeName)
    content.vb: Public Overridable Function CreateNavigationPropertyInitializerConfiguration(navPropName As String, principalEntityTypeName As String) As NavigationPropertyInitializerConfiguration
    parameters:
    - id: navPropName
      type: System.String
    - id: principalEntityTypeName
      type: System.String
    return:
      type: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.NavigationPropertyInitializerConfiguration
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CreateFluentApiConfiguration(System.Boolean,System.String,System.String[])
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CreateFluentApiConfiguration(System.Boolean,System.String,System.String[])
  id: CreateFluentApiConfiguration(System.Boolean,System.String,System.String[])
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory
  langs:
  - csharp
  - vb
  name: CreateFluentApiConfiguration(Boolean, String, String[])
  nameWithType: ConfigurationFactory.CreateFluentApiConfiguration(Boolean, String, String[])
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CreateFluentApiConfiguration(System.Boolean, System.String, System.String[])
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ConfigurationFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateFluentApiConfiguration
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ConfigurationFactory.cs
    startLine: 166
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual FluentApiConfiguration CreateFluentApiConfiguration(bool attributeEquivalentExists, string methodName, params string[] methodArguments)
    content.vb: Public Overridable Function CreateFluentApiConfiguration(attributeEquivalentExists As Boolean, methodName As String, ParamArray methodArguments As String()) As FluentApiConfiguration
    parameters:
    - id: attributeEquivalentExists
      type: System.Boolean
    - id: methodName
      type: System.String
    - id: methodArguments
      type: System.String[]
    return:
      type: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.FluentApiConfiguration
  nameWithType.vb: ConfigurationFactory.CreateFluentApiConfiguration(Boolean, String, String())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CreateFluentApiConfiguration(System.Boolean, System.String, System.String())
  name.vb: CreateFluentApiConfiguration(Boolean, String, String())
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CreateKeyFluentApiConfiguration(System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.Key)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CreateKeyFluentApiConfiguration(System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.Key)
  id: CreateKeyFluentApiConfiguration(System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.Key)
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory
  langs:
  - csharp
  - vb
  name: CreateKeyFluentApiConfiguration(String, Key)
  nameWithType: ConfigurationFactory.CreateKeyFluentApiConfiguration(String, Key)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CreateKeyFluentApiConfiguration(System.String, Microsoft.EntityFrameworkCore.Metadata.Internal.Key)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ConfigurationFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateKeyFluentApiConfiguration
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ConfigurationFactory.cs
    startLine: 184
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual KeyFluentApiConfiguration CreateKeyFluentApiConfiguration(string lambdaIdentifier, Key key)
    content.vb: Public Overridable Function CreateKeyFluentApiConfiguration(lambdaIdentifier As String, key As Key) As KeyFluentApiConfiguration
    parameters:
    - id: lambdaIdentifier
      type: System.String
    - id: key
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.Key
    return:
      type: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.KeyFluentApiConfiguration
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CreateAttributeConfiguration(System.String,System.String[])
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CreateAttributeConfiguration(System.String,System.String[])
  id: CreateAttributeConfiguration(System.String,System.String[])
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory
  langs:
  - csharp
  - vb
  name: CreateAttributeConfiguration(String, String[])
  nameWithType: ConfigurationFactory.CreateAttributeConfiguration(String, String[])
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CreateAttributeConfiguration(System.String, System.String[])
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ConfigurationFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateAttributeConfiguration
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ConfigurationFactory.cs
    startLine: 198
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual AttributeConfiguration CreateAttributeConfiguration(string attributeName, params string[] attributeArguments)
    content.vb: Public Overridable Function CreateAttributeConfiguration(attributeName As String, ParamArray attributeArguments As String()) As AttributeConfiguration
    parameters:
    - id: attributeName
      type: System.String
    - id: attributeArguments
      type: System.String[]
    return:
      type: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.AttributeConfiguration
  nameWithType.vb: ConfigurationFactory.CreateAttributeConfiguration(String, String())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CreateAttributeConfiguration(System.String, System.String())
  name.vb: CreateAttributeConfiguration(String, String())
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CreateIndexConfiguration(System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.Index)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CreateIndexConfiguration(System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.Index)
  id: CreateIndexConfiguration(System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.Index)
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory
  langs:
  - csharp
  - vb
  name: CreateIndexConfiguration(String, Index)
  nameWithType: ConfigurationFactory.CreateIndexConfiguration(String, Index)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CreateIndexConfiguration(System.String, Microsoft.EntityFrameworkCore.Metadata.Internal.Index)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ConfigurationFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateIndexConfiguration
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ConfigurationFactory.cs
    startLine: 212
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual IndexConfiguration CreateIndexConfiguration(string lambdaIdentifier, Index index)
    content.vb: Public Overridable Function CreateIndexConfiguration(lambdaIdentifier As String, index As Index) As IndexConfiguration
    parameters:
    - id: lambdaIdentifier
      type: System.String
    - id: index
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.Index
    return:
      type: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IndexConfiguration
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CreateSequenceConfiguration
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CreateSequenceConfiguration
  id: CreateSequenceConfiguration
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory
  langs:
  - csharp
  - vb
  name: CreateSequenceConfiguration()
  nameWithType: ConfigurationFactory.CreateSequenceConfiguration()
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CreateSequenceConfiguration()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ConfigurationFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateSequenceConfiguration
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ConfigurationFactory.cs
    startLine: 226
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual SequenceConfiguration CreateSequenceConfiguration()
    content.vb: Public Overridable Function CreateSequenceConfiguration As SequenceConfiguration
    return:
      type: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.SequenceConfiguration
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Scaffolding.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IRelationalAnnotationProvider
  nameWithType: IRelationalAnnotationProvider
  fullName: Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  isExternal: false
  name: CSharpUtilities
  nameWithType: CSharpUtilities
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ScaffoldingUtilities
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ScaffoldingUtilities
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  isExternal: false
  name: ScaffoldingUtilities
  nameWithType: ScaffoldingUtilities
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ScaffoldingUtilities
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: Microsoft.EntityFrameworkCore.Metadata.IModel
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IModel
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IModel
  nameWithType: IModel
  fullName: Microsoft.EntityFrameworkCore.Metadata.IModel
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.CustomConfiguration
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.CustomConfiguration
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  isExternal: false
  name: CustomConfiguration
  nameWithType: CustomConfiguration
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.CustomConfiguration
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.ModelConfiguration
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.ModelConfiguration
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  isExternal: false
  name: ModelConfiguration
  nameWithType: ModelConfiguration
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.ModelConfiguration
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.ICollection{System.String}
  commentId: T:System.Collections.Generic.ICollection{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<String>
  nameWithType: ICollection<String>
  fullName: System.Collections.Generic.ICollection<System.String>
  nameWithType.vb: ICollection(Of String)
  fullname.vb: System.Collections.Generic.ICollection(Of System.String)
  name.vb: ICollection(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.OptionsBuilderConfiguration
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.OptionsBuilderConfiguration
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  isExternal: false
  name: OptionsBuilderConfiguration
  nameWithType: OptionsBuilderConfiguration
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.OptionsBuilderConfiguration
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullname.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.EntityFrameworkCore.Metadata.IEntityType
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IEntityType
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IEntityType
  nameWithType: IEntityType
  fullName: Microsoft.EntityFrameworkCore.Metadata.IEntityType
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  isExternal: false
  name: EntityConfiguration
  nameWithType: EntityConfiguration
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration
- uid: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IForeignKey
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IForeignKey
  nameWithType: IForeignKey
  fullName: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
- uid: Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: DeleteBehavior
  nameWithType: DeleteBehavior
  fullName: Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.RelationshipConfiguration
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.RelationshipConfiguration
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  isExternal: false
  name: RelationshipConfiguration
  nameWithType: RelationshipConfiguration
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.RelationshipConfiguration
- uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IProperty
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IProperty
  nameWithType: IProperty
  fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  isExternal: false
  name: PropertyConfiguration
  nameWithType: PropertyConfiguration
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.NavigationPropertyConfiguration
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.NavigationPropertyConfiguration
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  isExternal: false
  name: NavigationPropertyConfiguration
  nameWithType: NavigationPropertyConfiguration
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.NavigationPropertyConfiguration
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.NavigationPropertyInitializerConfiguration
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.NavigationPropertyInitializerConfiguration
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  isExternal: false
  name: NavigationPropertyInitializerConfiguration
  nameWithType: NavigationPropertyInitializerConfiguration
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.NavigationPropertyInitializerConfiguration
- uid: System.String[]
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullname.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.FluentApiConfiguration
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.FluentApiConfiguration
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  isExternal: false
  name: FluentApiConfiguration
  nameWithType: FluentApiConfiguration
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.FluentApiConfiguration
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.Key
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.Key
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Key
  nameWithType: Key
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.Key
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.KeyFluentApiConfiguration
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.KeyFluentApiConfiguration
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  isExternal: false
  name: KeyFluentApiConfiguration
  nameWithType: KeyFluentApiConfiguration
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.KeyFluentApiConfiguration
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.AttributeConfiguration
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.AttributeConfiguration
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  isExternal: false
  name: AttributeConfiguration
  nameWithType: AttributeConfiguration
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.AttributeConfiguration
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.Index
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.Index
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Index
  nameWithType: Index
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.Index
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IndexConfiguration
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IndexConfiguration
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  isExternal: false
  name: IndexConfiguration
  nameWithType: IndexConfiguration
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IndexConfiguration
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.SequenceConfiguration
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.SequenceConfiguration
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  isExternal: false
  name: SequenceConfiguration
  nameWithType: SequenceConfiguration
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.SequenceConfiguration
