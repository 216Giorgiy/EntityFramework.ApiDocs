### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.NullSemanticsQueryRelationalFixture`1
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.NullSemanticsQueryRelationalFixture`1
  id: NullSemanticsQueryRelationalFixture`1
  parent: Microsoft.EntityFrameworkCore.Specification.Tests
  children:
  - Microsoft.EntityFrameworkCore.Specification.Tests.NullSemanticsQueryRelationalFixture`1.CreateContext(`0,System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.NullSemanticsQueryRelationalFixture`1.CreateTestStore
  - Microsoft.EntityFrameworkCore.Specification.Tests.NullSemanticsQueryRelationalFixture`1.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  langs:
  - csharp
  - vb
  name: NullSemanticsQueryRelationalFixture<TTestStore>
  nameWithType: NullSemanticsQueryRelationalFixture<TTestStore>
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.NullSemanticsQueryRelationalFixture<TTestStore>
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/NullSemanticsQueryRelationalFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: NullSemanticsQueryRelationalFixture
    path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/NullSemanticsQueryRelationalFixture.cs
    startLine: 7
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      public abstract class NullSemanticsQueryRelationalFixture<TTestStore>
          where TTestStore : TestStore
    content.vb: Public MustInherit Class NullSemanticsQueryRelationalFixture(Of TTestStore As TestStore)
    typeParameters:
    - id: TTestStore
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Specification.Tests.NullSemanticsQueryRelationalFixture`1.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  nameWithType.vb: NullSemanticsQueryRelationalFixture(Of TTestStore)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.NullSemanticsQueryRelationalFixture(Of TTestStore)
  name.vb: NullSemanticsQueryRelationalFixture(Of TTestStore)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.NullSemanticsQueryRelationalFixture`1.CreateTestStore
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.NullSemanticsQueryRelationalFixture`1.CreateTestStore
  id: CreateTestStore
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.NullSemanticsQueryRelationalFixture`1
  langs:
  - csharp
  - vb
  name: CreateTestStore()
  nameWithType: NullSemanticsQueryRelationalFixture<TTestStore>.CreateTestStore()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.NullSemanticsQueryRelationalFixture<TTestStore>.CreateTestStore()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/NullSemanticsQueryRelationalFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: CreateTestStore
    path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/NullSemanticsQueryRelationalFixture.cs
    startLine: 10
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public abstract TTestStore CreateTestStore()
    content.vb: Public MustOverride Function CreateTestStore As TTestStore
    return:
      type: '{TTestStore}'
  nameWithType.vb: NullSemanticsQueryRelationalFixture(Of TTestStore).CreateTestStore()
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.NullSemanticsQueryRelationalFixture(Of TTestStore).CreateTestStore()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.NullSemanticsQueryRelationalFixture`1.CreateContext(`0,System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.NullSemanticsQueryRelationalFixture`1.CreateContext(`0,System.Boolean)
  id: CreateContext(`0,System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.NullSemanticsQueryRelationalFixture`1
  langs:
  - csharp
  - vb
  name: CreateContext(TTestStore, Boolean)
  nameWithType: NullSemanticsQueryRelationalFixture<TTestStore>.CreateContext(TTestStore, Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.NullSemanticsQueryRelationalFixture<TTestStore>.CreateContext(TTestStore, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/NullSemanticsQueryRelationalFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: CreateContext
    path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/NullSemanticsQueryRelationalFixture.cs
    startLine: 12
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public abstract NullSemanticsContext CreateContext(TTestStore testStore, bool useRelationalNulls)
    content.vb: Public MustOverride Function CreateContext(testStore As TTestStore, useRelationalNulls As Boolean) As NullSemanticsContext
    parameters:
    - id: testStore
      type: '{TTestStore}'
    - id: useRelationalNulls
      type: System.Boolean
    return:
      type: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.NullSemanticsModel.NullSemanticsContext
  nameWithType.vb: NullSemanticsQueryRelationalFixture(Of TTestStore).CreateContext(TTestStore, Boolean)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.NullSemanticsQueryRelationalFixture(Of TTestStore).CreateContext(TTestStore, System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.NullSemanticsQueryRelationalFixture`1.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.NullSemanticsQueryRelationalFixture`1.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  id: OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.NullSemanticsQueryRelationalFixture`1
  langs:
  - csharp
  - vb
  name: OnModelCreating(ModelBuilder)
  nameWithType: NullSemanticsQueryRelationalFixture<TTestStore>.OnModelCreating(ModelBuilder)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.NullSemanticsQueryRelationalFixture<TTestStore>.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/NullSemanticsQueryRelationalFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: OnModelCreating
    path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/NullSemanticsQueryRelationalFixture.cs
    startLine: 14
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: protected virtual void OnModelCreating(ModelBuilder modelBuilder)
    content.vb: Protected Overridable Sub OnModelCreating(modelBuilder As ModelBuilder)
    parameters:
    - id: modelBuilder
      type: Microsoft.EntityFrameworkCore.ModelBuilder
  nameWithType.vb: NullSemanticsQueryRelationalFixture(Of TTestStore).OnModelCreating(ModelBuilder)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.NullSemanticsQueryRelationalFixture(Of TTestStore).OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
references:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests
  commentId: N:Microsoft.EntityFrameworkCore.Specification.Tests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Specification.Tests
  nameWithType: Microsoft.EntityFrameworkCore.Specification.Tests
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.NullSemanticsQueryRelationalFixture`1.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<NullSemanticsQueryRelationalFixture<TTestStore>, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<NullSemanticsQueryRelationalFixture<TTestStore>, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Specification.Tests.NullSemanticsQueryRelationalFixture<TTestStore>, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of NullSemanticsQueryRelationalFixture(Of TTestStore), TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Specification.Tests.NullSemanticsQueryRelationalFixture(Of TTestStore), TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of NullSemanticsQueryRelationalFixture(Of TTestStore), TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<NullSemanticsQueryRelationalFixture<TTestStore>, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<NullSemanticsQueryRelationalFixture<TTestStore>, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Specification.Tests.NullSemanticsQueryRelationalFixture<TTestStore>, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of NullSemanticsQueryRelationalFixture(Of TTestStore), TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of NullSemanticsQueryRelationalFixture(Of TTestStore), TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Specification.Tests.NullSemanticsQueryRelationalFixture(Of TTestStore), TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: '{TTestStore}'
  commentId: '!:TTestStore'
  definition: TTestStore
  name: TTestStore
  nameWithType: TTestStore
  fullName: TTestStore
- uid: TTestStore
  isExternal: false
  name: TTestStore
  nameWithType: TTestStore
  fullName: TTestStore
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.NullSemanticsModel.NullSemanticsContext
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.NullSemanticsModel.NullSemanticsContext
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.NullSemanticsModel
  isExternal: false
  name: NullSemanticsContext
  nameWithType: NullSemanticsContext
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.NullSemanticsModel.NullSemanticsContext
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.NullSemanticsModel
  commentId: N:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.NullSemanticsModel
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.NullSemanticsModel
  nameWithType: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.NullSemanticsModel
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.NullSemanticsModel
- uid: Microsoft.EntityFrameworkCore.ModelBuilder
  commentId: T:Microsoft.EntityFrameworkCore.ModelBuilder
  parent: Microsoft.EntityFrameworkCore
  isExternal: false
  name: ModelBuilder
  nameWithType: ModelBuilder
  fullName: Microsoft.EntityFrameworkCore.ModelBuilder
- uid: Microsoft.EntityFrameworkCore
  commentId: N:Microsoft.EntityFrameworkCore
  isExternal: false
  name: Microsoft.EntityFrameworkCore
  nameWithType: Microsoft.EntityFrameworkCore
  fullName: Microsoft.EntityFrameworkCore
