### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.ThenIncludeExpressionNode
  commentId: T:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.ThenIncludeExpressionNode
  id: ThenIncludeExpressionNode
  parent: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
  children:
  - Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.ThenIncludeExpressionNode.#ctor(Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionParseInfo,System.Linq.Expressions.LambdaExpression)
  - Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.ThenIncludeExpressionNode.ApplyNodeSpecificSemantics(Remotion.Linq.QueryModel,Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)
  - Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.ThenIncludeExpressionNode.CreateResultOperator(Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)
  - Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.ThenIncludeExpressionNode.Resolve(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)
  - Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.ThenIncludeExpressionNode.SupportedMethods
  langs:
  - csharp
  - vb
  name: ThenIncludeExpressionNode
  nameWithType: ThenIncludeExpressionNode
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.ThenIncludeExpressionNode
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/ThenIncludeExpressionNode.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ThenIncludeExpressionNode
    path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/ThenIncludeExpressionNode.cs
    startLine: 18
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public class ThenIncludeExpressionNode : ResultOperatorExpressionNodeBase, IExpressionNode'
    content.vb: >-
      Public Class ThenIncludeExpressionNode
          Inherits ResultOperatorExpressionNodeBase
          Implements IExpressionNode
  inheritance:
  - System.Object
  - Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase
  - Remotion.Linq.Parsing.Structure.IntermediateModel.ResultOperatorExpressionNodeBase
  implements:
  - Remotion.Linq.Parsing.Structure.IntermediateModel.IExpressionNode
  inheritedMembers:
  - Remotion.Linq.Parsing.Structure.IntermediateModel.ResultOperatorExpressionNodeBase.WrapQueryModelAfterEndOfQuery(Remotion.Linq.QueryModel,Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)
  - Remotion.Linq.Parsing.Structure.IntermediateModel.ResultOperatorExpressionNodeBase.ParsedExpression
  - Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase.Apply(Remotion.Linq.QueryModel,Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)
  - Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase.SetResultTypeOverride(Remotion.Linq.QueryModel)
  - Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase.CreateResolveNotSupportedException
  - Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase.CreateOutputParameterNotSupportedException
  - Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase.AssociatedIdentifier
  - Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase.Source
  - Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase.NodeResultType
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.ThenIncludeExpressionNode.SupportedMethods
  commentId: F:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.ThenIncludeExpressionNode.SupportedMethods
  id: SupportedMethods
  parent: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.ThenIncludeExpressionNode
  langs:
  - csharp
  - vb
  name: SupportedMethods
  nameWithType: ThenIncludeExpressionNode.SupportedMethods
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.ThenIncludeExpressionNode.SupportedMethods
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/ThenIncludeExpressionNode.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: SupportedMethods
    path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/ThenIncludeExpressionNode.cs
    startLine: 24
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public static readonly IReadOnlyCollection<MethodInfo> SupportedMethods
    content.vb: Public Shared ReadOnly SupportedMethods As IReadOnlyCollection(Of MethodInfo)
    return:
      type: System.Collections.Generic.IReadOnlyCollection{System.Reflection.MethodInfo}
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.ThenIncludeExpressionNode.#ctor(Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionParseInfo,System.Linq.Expressions.LambdaExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.ThenIncludeExpressionNode.#ctor(Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionParseInfo,System.Linq.Expressions.LambdaExpression)
  id: '#ctor(Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionParseInfo,System.Linq.Expressions.LambdaExpression)'
  parent: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.ThenIncludeExpressionNode
  langs:
  - csharp
  - vb
  name: ThenIncludeExpressionNode(MethodCallExpressionParseInfo, LambdaExpression)
  nameWithType: ThenIncludeExpressionNode.ThenIncludeExpressionNode(MethodCallExpressionParseInfo, LambdaExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.ThenIncludeExpressionNode.ThenIncludeExpressionNode(Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionParseInfo, System.Linq.Expressions.LambdaExpression)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/ThenIncludeExpressionNode.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/ThenIncludeExpressionNode.cs
    startLine: 36
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public ThenIncludeExpressionNode(MethodCallExpressionParseInfo parseInfo, LambdaExpression navigationPropertyPathLambda)
    content.vb: Public Sub New(parseInfo As MethodCallExpressionParseInfo, navigationPropertyPathLambda As LambdaExpression)
    parameters:
    - id: parseInfo
      type: Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionParseInfo
    - id: navigationPropertyPathLambda
      type: System.Linq.Expressions.LambdaExpression
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.ThenIncludeExpressionNode.ApplyNodeSpecificSemantics(Remotion.Linq.QueryModel,Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.ThenIncludeExpressionNode.ApplyNodeSpecificSemantics(Remotion.Linq.QueryModel,Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)
  id: ApplyNodeSpecificSemantics(Remotion.Linq.QueryModel,Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)
  parent: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.ThenIncludeExpressionNode
  langs:
  - csharp
  - vb
  name: ApplyNodeSpecificSemantics(QueryModel, ClauseGenerationContext)
  nameWithType: ThenIncludeExpressionNode.ApplyNodeSpecificSemantics(QueryModel, ClauseGenerationContext)
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.ThenIncludeExpressionNode.ApplyNodeSpecificSemantics(Remotion.Linq.QueryModel, Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/ThenIncludeExpressionNode.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ApplyNodeSpecificSemantics
    path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/ThenIncludeExpressionNode.cs
    startLine: 48
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected override void ApplyNodeSpecificSemantics(QueryModel queryModel, ClauseGenerationContext clauseGenerationContext)
    content.vb: Protected Overrides Sub ApplyNodeSpecificSemantics(queryModel As QueryModel, clauseGenerationContext As ClauseGenerationContext)
    parameters:
    - id: queryModel
      type: Remotion.Linq.QueryModel
    - id: clauseGenerationContext
      type: Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext
  overridden: Remotion.Linq.Parsing.Structure.IntermediateModel.ResultOperatorExpressionNodeBase.ApplyNodeSpecificSemantics(Remotion.Linq.QueryModel,Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.ThenIncludeExpressionNode.CreateResultOperator(Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.ThenIncludeExpressionNode.CreateResultOperator(Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)
  id: CreateResultOperator(Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)
  parent: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.ThenIncludeExpressionNode
  langs:
  - csharp
  - vb
  name: CreateResultOperator(ClauseGenerationContext)
  nameWithType: ThenIncludeExpressionNode.CreateResultOperator(ClauseGenerationContext)
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.ThenIncludeExpressionNode.CreateResultOperator(Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/ThenIncludeExpressionNode.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateResultOperator
    path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/ThenIncludeExpressionNode.cs
    startLine: 64
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected override ResultOperatorBase CreateResultOperator(ClauseGenerationContext clauseGenerationContext)
    content.vb: Protected Overrides Function CreateResultOperator(clauseGenerationContext As ClauseGenerationContext) As ResultOperatorBase
    parameters:
    - id: clauseGenerationContext
      type: Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext
    return:
      type: Remotion.Linq.Clauses.ResultOperatorBase
  overridden: Remotion.Linq.Parsing.Structure.IntermediateModel.ResultOperatorExpressionNodeBase.CreateResultOperator(Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.ThenIncludeExpressionNode.Resolve(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.ThenIncludeExpressionNode.Resolve(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)
  id: Resolve(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)
  parent: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.ThenIncludeExpressionNode
  langs:
  - csharp
  - vb
  name: Resolve(ParameterExpression, Expression, ClauseGenerationContext)
  nameWithType: ThenIncludeExpressionNode.Resolve(ParameterExpression, Expression, ClauseGenerationContext)
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.ThenIncludeExpressionNode.Resolve(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression, Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/ThenIncludeExpressionNode.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Resolve
    path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/ThenIncludeExpressionNode.cs
    startLine: 71
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public override Expression Resolve(ParameterExpression inputParameter, Expression expressionToBeResolved, ClauseGenerationContext clauseGenerationContext)
    content.vb: Public Overrides Function Resolve(inputParameter As ParameterExpression, expressionToBeResolved As Expression, clauseGenerationContext As ClauseGenerationContext) As Expression
    parameters:
    - id: inputParameter
      type: System.Linq.Expressions.ParameterExpression
    - id: expressionToBeResolved
      type: System.Linq.Expressions.Expression
    - id: clauseGenerationContext
      type: Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext
    return:
      type: System.Linq.Expressions.Expression
  overridden: Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase.Resolve(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase
  commentId: T:Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase
  parent: Remotion.Linq.Parsing.Structure.IntermediateModel
  isExternal: true
  name: MethodCallExpressionNodeBase
  nameWithType: MethodCallExpressionNodeBase
  fullName: Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase
- uid: Remotion.Linq.Parsing.Structure.IntermediateModel.ResultOperatorExpressionNodeBase
  commentId: T:Remotion.Linq.Parsing.Structure.IntermediateModel.ResultOperatorExpressionNodeBase
  parent: Remotion.Linq.Parsing.Structure.IntermediateModel
  isExternal: true
  name: ResultOperatorExpressionNodeBase
  nameWithType: ResultOperatorExpressionNodeBase
  fullName: Remotion.Linq.Parsing.Structure.IntermediateModel.ResultOperatorExpressionNodeBase
- uid: Remotion.Linq.Parsing.Structure.IntermediateModel.IExpressionNode
  commentId: T:Remotion.Linq.Parsing.Structure.IntermediateModel.IExpressionNode
  parent: Remotion.Linq.Parsing.Structure.IntermediateModel
  isExternal: true
  name: IExpressionNode
  nameWithType: IExpressionNode
  fullName: Remotion.Linq.Parsing.Structure.IntermediateModel.IExpressionNode
- uid: Remotion.Linq.Parsing.Structure.IntermediateModel.ResultOperatorExpressionNodeBase.WrapQueryModelAfterEndOfQuery(Remotion.Linq.QueryModel,Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)
  commentId: M:Remotion.Linq.Parsing.Structure.IntermediateModel.ResultOperatorExpressionNodeBase.WrapQueryModelAfterEndOfQuery(Remotion.Linq.QueryModel,Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)
  parent: Remotion.Linq.Parsing.Structure.IntermediateModel.ResultOperatorExpressionNodeBase
  isExternal: true
  name: WrapQueryModelAfterEndOfQuery(QueryModel, ClauseGenerationContext)
  nameWithType: ResultOperatorExpressionNodeBase.WrapQueryModelAfterEndOfQuery(QueryModel, ClauseGenerationContext)
  fullName: Remotion.Linq.Parsing.Structure.IntermediateModel.ResultOperatorExpressionNodeBase.WrapQueryModelAfterEndOfQuery(Remotion.Linq.QueryModel, Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)
  spec.csharp:
  - uid: Remotion.Linq.Parsing.Structure.IntermediateModel.ResultOperatorExpressionNodeBase.WrapQueryModelAfterEndOfQuery(Remotion.Linq.QueryModel,Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)
    name: WrapQueryModelAfterEndOfQuery
    nameWithType: ResultOperatorExpressionNodeBase.WrapQueryModelAfterEndOfQuery
    fullName: Remotion.Linq.Parsing.Structure.IntermediateModel.ResultOperatorExpressionNodeBase.WrapQueryModelAfterEndOfQuery
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext
    name: ClauseGenerationContext
    nameWithType: ClauseGenerationContext
    fullName: Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.Structure.IntermediateModel.ResultOperatorExpressionNodeBase.WrapQueryModelAfterEndOfQuery(Remotion.Linq.QueryModel,Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)
    name: WrapQueryModelAfterEndOfQuery
    nameWithType: ResultOperatorExpressionNodeBase.WrapQueryModelAfterEndOfQuery
    fullName: Remotion.Linq.Parsing.Structure.IntermediateModel.ResultOperatorExpressionNodeBase.WrapQueryModelAfterEndOfQuery
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext
    name: ClauseGenerationContext
    nameWithType: ClauseGenerationContext
    fullName: Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.Structure.IntermediateModel.ResultOperatorExpressionNodeBase.ParsedExpression
  commentId: P:Remotion.Linq.Parsing.Structure.IntermediateModel.ResultOperatorExpressionNodeBase.ParsedExpression
  parent: Remotion.Linq.Parsing.Structure.IntermediateModel.ResultOperatorExpressionNodeBase
  isExternal: true
  name: ParsedExpression
  nameWithType: ResultOperatorExpressionNodeBase.ParsedExpression
  fullName: Remotion.Linq.Parsing.Structure.IntermediateModel.ResultOperatorExpressionNodeBase.ParsedExpression
- uid: Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase.Apply(Remotion.Linq.QueryModel,Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)
  commentId: M:Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase.Apply(Remotion.Linq.QueryModel,Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)
  parent: Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase
  isExternal: true
  name: Apply(QueryModel, ClauseGenerationContext)
  nameWithType: MethodCallExpressionNodeBase.Apply(QueryModel, ClauseGenerationContext)
  fullName: Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase.Apply(Remotion.Linq.QueryModel, Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)
  spec.csharp:
  - uid: Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase.Apply(Remotion.Linq.QueryModel,Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)
    name: Apply
    nameWithType: MethodCallExpressionNodeBase.Apply
    fullName: Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase.Apply
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext
    name: ClauseGenerationContext
    nameWithType: ClauseGenerationContext
    fullName: Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase.Apply(Remotion.Linq.QueryModel,Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)
    name: Apply
    nameWithType: MethodCallExpressionNodeBase.Apply
    fullName: Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase.Apply
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext
    name: ClauseGenerationContext
    nameWithType: ClauseGenerationContext
    fullName: Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase.SetResultTypeOverride(Remotion.Linq.QueryModel)
  commentId: M:Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase.SetResultTypeOverride(Remotion.Linq.QueryModel)
  parent: Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase
  isExternal: true
  name: SetResultTypeOverride(QueryModel)
  nameWithType: MethodCallExpressionNodeBase.SetResultTypeOverride(QueryModel)
  fullName: Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase.SetResultTypeOverride(Remotion.Linq.QueryModel)
  spec.csharp:
  - uid: Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase.SetResultTypeOverride(Remotion.Linq.QueryModel)
    name: SetResultTypeOverride
    nameWithType: MethodCallExpressionNodeBase.SetResultTypeOverride
    fullName: Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase.SetResultTypeOverride
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase.SetResultTypeOverride(Remotion.Linq.QueryModel)
    name: SetResultTypeOverride
    nameWithType: MethodCallExpressionNodeBase.SetResultTypeOverride
    fullName: Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase.SetResultTypeOverride
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase.CreateResolveNotSupportedException
  commentId: M:Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase.CreateResolveNotSupportedException
  parent: Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase
  isExternal: true
  name: CreateResolveNotSupportedException()
  nameWithType: MethodCallExpressionNodeBase.CreateResolveNotSupportedException()
  fullName: Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase.CreateResolveNotSupportedException()
  spec.csharp:
  - uid: Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase.CreateResolveNotSupportedException
    name: CreateResolveNotSupportedException
    nameWithType: MethodCallExpressionNodeBase.CreateResolveNotSupportedException
    fullName: Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase.CreateResolveNotSupportedException
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase.CreateResolveNotSupportedException
    name: CreateResolveNotSupportedException
    nameWithType: MethodCallExpressionNodeBase.CreateResolveNotSupportedException
    fullName: Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase.CreateResolveNotSupportedException
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase.CreateOutputParameterNotSupportedException
  commentId: M:Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase.CreateOutputParameterNotSupportedException
  parent: Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase
  isExternal: true
  name: CreateOutputParameterNotSupportedException()
  nameWithType: MethodCallExpressionNodeBase.CreateOutputParameterNotSupportedException()
  fullName: Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase.CreateOutputParameterNotSupportedException()
  spec.csharp:
  - uid: Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase.CreateOutputParameterNotSupportedException
    name: CreateOutputParameterNotSupportedException
    nameWithType: MethodCallExpressionNodeBase.CreateOutputParameterNotSupportedException
    fullName: Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase.CreateOutputParameterNotSupportedException
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase.CreateOutputParameterNotSupportedException
    name: CreateOutputParameterNotSupportedException
    nameWithType: MethodCallExpressionNodeBase.CreateOutputParameterNotSupportedException
    fullName: Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase.CreateOutputParameterNotSupportedException
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase.AssociatedIdentifier
  commentId: P:Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase.AssociatedIdentifier
  parent: Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase
  isExternal: true
  name: AssociatedIdentifier
  nameWithType: MethodCallExpressionNodeBase.AssociatedIdentifier
  fullName: Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase.AssociatedIdentifier
- uid: Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase.Source
  commentId: P:Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase.Source
  parent: Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase
  isExternal: true
  name: Source
  nameWithType: MethodCallExpressionNodeBase.Source
  fullName: Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase.Source
- uid: Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase.NodeResultType
  commentId: P:Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase.NodeResultType
  parent: Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase
  isExternal: true
  name: NodeResultType
  nameWithType: MethodCallExpressionNodeBase.NodeResultType
  fullName: Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase.NodeResultType
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Remotion.Linq.Parsing.Structure.IntermediateModel
  commentId: N:Remotion.Linq.Parsing.Structure.IntermediateModel
  isExternal: false
  name: Remotion.Linq.Parsing.Structure.IntermediateModel
  nameWithType: Remotion.Linq.Parsing.Structure.IntermediateModel
  fullName: Remotion.Linq.Parsing.Structure.IntermediateModel
- uid: System.Collections.Generic.IReadOnlyCollection{System.Reflection.MethodInfo}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{System.Reflection.MethodInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  name: IReadOnlyCollection<MethodInfo>
  nameWithType: IReadOnlyCollection<MethodInfo>
  fullName: System.Collections.Generic.IReadOnlyCollection<System.Reflection.MethodInfo>
  nameWithType.vb: IReadOnlyCollection(Of MethodInfo)
  fullname.vb: System.Collections.Generic.IReadOnlyCollection(Of System.Reflection.MethodInfo)
  name.vb: IReadOnlyCollection(Of MethodInfo)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    nameWithType: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    nameWithType: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullname.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionParseInfo
  commentId: T:Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionParseInfo
  parent: Remotion.Linq.Parsing.Structure.IntermediateModel
  isExternal: true
  name: MethodCallExpressionParseInfo
  nameWithType: MethodCallExpressionParseInfo
  fullName: Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionParseInfo
- uid: System.Linq.Expressions.LambdaExpression
  commentId: T:System.Linq.Expressions.LambdaExpression
  parent: System.Linq.Expressions
  isExternal: true
  name: LambdaExpression
  nameWithType: LambdaExpression
  fullName: System.Linq.Expressions.LambdaExpression
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: false
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
- uid: Remotion.Linq.Parsing.Structure.IntermediateModel.ResultOperatorExpressionNodeBase.ApplyNodeSpecificSemantics(Remotion.Linq.QueryModel,Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)
  commentId: M:Remotion.Linq.Parsing.Structure.IntermediateModel.ResultOperatorExpressionNodeBase.ApplyNodeSpecificSemantics(Remotion.Linq.QueryModel,Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)
  parent: Remotion.Linq.Parsing.Structure.IntermediateModel.ResultOperatorExpressionNodeBase
  isExternal: true
  name: ApplyNodeSpecificSemantics(QueryModel, ClauseGenerationContext)
  nameWithType: ResultOperatorExpressionNodeBase.ApplyNodeSpecificSemantics(QueryModel, ClauseGenerationContext)
  fullName: Remotion.Linq.Parsing.Structure.IntermediateModel.ResultOperatorExpressionNodeBase.ApplyNodeSpecificSemantics(Remotion.Linq.QueryModel, Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)
  spec.csharp:
  - uid: Remotion.Linq.Parsing.Structure.IntermediateModel.ResultOperatorExpressionNodeBase.ApplyNodeSpecificSemantics(Remotion.Linq.QueryModel,Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)
    name: ApplyNodeSpecificSemantics
    nameWithType: ResultOperatorExpressionNodeBase.ApplyNodeSpecificSemantics
    fullName: Remotion.Linq.Parsing.Structure.IntermediateModel.ResultOperatorExpressionNodeBase.ApplyNodeSpecificSemantics
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext
    name: ClauseGenerationContext
    nameWithType: ClauseGenerationContext
    fullName: Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.Structure.IntermediateModel.ResultOperatorExpressionNodeBase.ApplyNodeSpecificSemantics(Remotion.Linq.QueryModel,Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)
    name: ApplyNodeSpecificSemantics
    nameWithType: ResultOperatorExpressionNodeBase.ApplyNodeSpecificSemantics
    fullName: Remotion.Linq.Parsing.Structure.IntermediateModel.ResultOperatorExpressionNodeBase.ApplyNodeSpecificSemantics
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext
    name: ClauseGenerationContext
    nameWithType: ClauseGenerationContext
    fullName: Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.QueryModel
  commentId: T:Remotion.Linq.QueryModel
  parent: Remotion.Linq
  isExternal: true
  name: QueryModel
  nameWithType: QueryModel
  fullName: Remotion.Linq.QueryModel
- uid: Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext
  commentId: T:Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext
  parent: Remotion.Linq.Parsing.Structure.IntermediateModel
  isExternal: true
  name: ClauseGenerationContext
  nameWithType: ClauseGenerationContext
  fullName: Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext
- uid: Remotion.Linq
  commentId: N:Remotion.Linq
  isExternal: false
  name: Remotion.Linq
  nameWithType: Remotion.Linq
  fullName: Remotion.Linq
- uid: Remotion.Linq.Parsing.Structure.IntermediateModel.ResultOperatorExpressionNodeBase.CreateResultOperator(Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)
  commentId: M:Remotion.Linq.Parsing.Structure.IntermediateModel.ResultOperatorExpressionNodeBase.CreateResultOperator(Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)
  parent: Remotion.Linq.Parsing.Structure.IntermediateModel.ResultOperatorExpressionNodeBase
  isExternal: true
  name: CreateResultOperator(ClauseGenerationContext)
  nameWithType: ResultOperatorExpressionNodeBase.CreateResultOperator(ClauseGenerationContext)
  fullName: Remotion.Linq.Parsing.Structure.IntermediateModel.ResultOperatorExpressionNodeBase.CreateResultOperator(Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)
  spec.csharp:
  - uid: Remotion.Linq.Parsing.Structure.IntermediateModel.ResultOperatorExpressionNodeBase.CreateResultOperator(Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)
    name: CreateResultOperator
    nameWithType: ResultOperatorExpressionNodeBase.CreateResultOperator
    fullName: Remotion.Linq.Parsing.Structure.IntermediateModel.ResultOperatorExpressionNodeBase.CreateResultOperator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext
    name: ClauseGenerationContext
    nameWithType: ClauseGenerationContext
    fullName: Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.Structure.IntermediateModel.ResultOperatorExpressionNodeBase.CreateResultOperator(Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)
    name: CreateResultOperator
    nameWithType: ResultOperatorExpressionNodeBase.CreateResultOperator
    fullName: Remotion.Linq.Parsing.Structure.IntermediateModel.ResultOperatorExpressionNodeBase.CreateResultOperator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext
    name: ClauseGenerationContext
    nameWithType: ClauseGenerationContext
    fullName: Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Clauses.ResultOperatorBase
  commentId: T:Remotion.Linq.Clauses.ResultOperatorBase
  parent: Remotion.Linq.Clauses
  isExternal: true
  name: ResultOperatorBase
  nameWithType: ResultOperatorBase
  fullName: Remotion.Linq.Clauses.ResultOperatorBase
- uid: Remotion.Linq.Clauses
  commentId: N:Remotion.Linq.Clauses
  isExternal: false
  name: Remotion.Linq.Clauses
  nameWithType: Remotion.Linq.Clauses
  fullName: Remotion.Linq.Clauses
- uid: Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase.Resolve(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)
  commentId: M:Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase.Resolve(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)
  parent: Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase
  isExternal: true
  name: Resolve(ParameterExpression, Expression, ClauseGenerationContext)
  nameWithType: MethodCallExpressionNodeBase.Resolve(ParameterExpression, Expression, ClauseGenerationContext)
  fullName: Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase.Resolve(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression, Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)
  spec.csharp:
  - uid: Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase.Resolve(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)
    name: Resolve
    nameWithType: MethodCallExpressionNodeBase.Resolve
    fullName: Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase.Resolve
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    nameWithType: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext
    name: ClauseGenerationContext
    nameWithType: ClauseGenerationContext
    fullName: Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase.Resolve(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)
    name: Resolve
    nameWithType: MethodCallExpressionNodeBase.Resolve
    fullName: Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase.Resolve
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    nameWithType: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext
    name: ClauseGenerationContext
    nameWithType: ClauseGenerationContext
    fullName: Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.ParameterExpression
  commentId: T:System.Linq.Expressions.ParameterExpression
  parent: System.Linq.Expressions
  isExternal: true
  name: ParameterExpression
  nameWithType: ParameterExpression
  fullName: System.Linq.Expressions.ParameterExpression
- uid: System.Linq.Expressions.Expression
  commentId: T:System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: true
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
