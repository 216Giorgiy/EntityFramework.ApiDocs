### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Metadata.ISequence
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.ISequence
  id: ISequence
  parent: Microsoft.EntityFrameworkCore.Metadata
  children:
  - Microsoft.EntityFrameworkCore.Metadata.ISequence.ClrType
  - Microsoft.EntityFrameworkCore.Metadata.ISequence.IncrementBy
  - Microsoft.EntityFrameworkCore.Metadata.ISequence.IsCyclic
  - Microsoft.EntityFrameworkCore.Metadata.ISequence.MaxValue
  - Microsoft.EntityFrameworkCore.Metadata.ISequence.MinValue
  - Microsoft.EntityFrameworkCore.Metadata.ISequence.Model
  - Microsoft.EntityFrameworkCore.Metadata.ISequence.Name
  - Microsoft.EntityFrameworkCore.Metadata.ISequence.Schema
  - Microsoft.EntityFrameworkCore.Metadata.ISequence.StartValue
  langs:
  - csharp
  - vb
  name: ISequence
  nameWithType: ISequence
  fullName: Microsoft.EntityFrameworkCore.Metadata.ISequence
  type: Interface
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/ISequence.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ISequence
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/ISequence.cs
    startLine: 7
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata
  syntax:
    content: public interface ISequence
    content.vb: Public Interface ISequence
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.EntityFrameworkCore.Metadata.ISequence.Name
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.ISequence.Name
  id: Name
  parent: Microsoft.EntityFrameworkCore.Metadata.ISequence
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ISequence.Name
  fullName: Microsoft.EntityFrameworkCore.Metadata.ISequence.Name
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/ISequence.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Name
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/ISequence.cs
    startLine: 9
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata
  syntax:
    content: string Name { get; }
    content.vb: ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Metadata.ISequence.Name*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.ISequence.Schema
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.ISequence.Schema
  id: Schema
  parent: Microsoft.EntityFrameworkCore.Metadata.ISequence
  langs:
  - csharp
  - vb
  name: Schema
  nameWithType: ISequence.Schema
  fullName: Microsoft.EntityFrameworkCore.Metadata.ISequence.Schema
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/ISequence.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Schema
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/ISequence.cs
    startLine: 10
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata
  syntax:
    content: string Schema { get; }
    content.vb: ReadOnly Property Schema As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Metadata.ISequence.Schema*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.ISequence.StartValue
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.ISequence.StartValue
  id: StartValue
  parent: Microsoft.EntityFrameworkCore.Metadata.ISequence
  langs:
  - csharp
  - vb
  name: StartValue
  nameWithType: ISequence.StartValue
  fullName: Microsoft.EntityFrameworkCore.Metadata.ISequence.StartValue
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/ISequence.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: StartValue
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/ISequence.cs
    startLine: 11
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata
  syntax:
    content: long StartValue { get; }
    content.vb: ReadOnly Property StartValue As Long
    parameters: []
    return:
      type: System.Int64
  overload: Microsoft.EntityFrameworkCore.Metadata.ISequence.StartValue*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.ISequence.IncrementBy
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.ISequence.IncrementBy
  id: IncrementBy
  parent: Microsoft.EntityFrameworkCore.Metadata.ISequence
  langs:
  - csharp
  - vb
  name: IncrementBy
  nameWithType: ISequence.IncrementBy
  fullName: Microsoft.EntityFrameworkCore.Metadata.ISequence.IncrementBy
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/ISequence.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: IncrementBy
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/ISequence.cs
    startLine: 12
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata
  syntax:
    content: int IncrementBy { get; }
    content.vb: ReadOnly Property IncrementBy As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.EntityFrameworkCore.Metadata.ISequence.IncrementBy*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.ISequence.MinValue
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.ISequence.MinValue
  id: MinValue
  parent: Microsoft.EntityFrameworkCore.Metadata.ISequence
  langs:
  - csharp
  - vb
  name: MinValue
  nameWithType: ISequence.MinValue
  fullName: Microsoft.EntityFrameworkCore.Metadata.ISequence.MinValue
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/ISequence.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: MinValue
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/ISequence.cs
    startLine: 13
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata
  syntax:
    content: long ? MinValue { get; }
    content.vb: ReadOnly Property MinValue As Long?
    parameters: []
    return:
      type: System.Nullable{System.Int64}
  overload: Microsoft.EntityFrameworkCore.Metadata.ISequence.MinValue*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.ISequence.MaxValue
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.ISequence.MaxValue
  id: MaxValue
  parent: Microsoft.EntityFrameworkCore.Metadata.ISequence
  langs:
  - csharp
  - vb
  name: MaxValue
  nameWithType: ISequence.MaxValue
  fullName: Microsoft.EntityFrameworkCore.Metadata.ISequence.MaxValue
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/ISequence.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: MaxValue
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/ISequence.cs
    startLine: 14
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata
  syntax:
    content: long ? MaxValue { get; }
    content.vb: ReadOnly Property MaxValue As Long?
    parameters: []
    return:
      type: System.Nullable{System.Int64}
  overload: Microsoft.EntityFrameworkCore.Metadata.ISequence.MaxValue*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.ISequence.ClrType
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.ISequence.ClrType
  id: ClrType
  parent: Microsoft.EntityFrameworkCore.Metadata.ISequence
  langs:
  - csharp
  - vb
  name: ClrType
  nameWithType: ISequence.ClrType
  fullName: Microsoft.EntityFrameworkCore.Metadata.ISequence.ClrType
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/ISequence.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ClrType
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/ISequence.cs
    startLine: 15
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata
  syntax:
    content: Type ClrType { get; }
    content.vb: ReadOnly Property ClrType As Type
    parameters: []
    return:
      type: System.Type
  overload: Microsoft.EntityFrameworkCore.Metadata.ISequence.ClrType*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.ISequence.Model
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.ISequence.Model
  id: Model
  parent: Microsoft.EntityFrameworkCore.Metadata.ISequence
  langs:
  - csharp
  - vb
  name: Model
  nameWithType: ISequence.Model
  fullName: Microsoft.EntityFrameworkCore.Metadata.ISequence.Model
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/ISequence.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Model
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/ISequence.cs
    startLine: 16
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata
  syntax:
    content: IModel Model { get; }
    content.vb: ReadOnly Property Model As IModel
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.IModel
  overload: Microsoft.EntityFrameworkCore.Metadata.ISequence.Model*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.ISequence.IsCyclic
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.ISequence.IsCyclic
  id: IsCyclic
  parent: Microsoft.EntityFrameworkCore.Metadata.ISequence
  langs:
  - csharp
  - vb
  name: IsCyclic
  nameWithType: ISequence.IsCyclic
  fullName: Microsoft.EntityFrameworkCore.Metadata.ISequence.IsCyclic
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/ISequence.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: IsCyclic
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/ISequence.cs
    startLine: 17
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata
  syntax:
    content: bool IsCyclic { get; }
    content.vb: ReadOnly Property IsCyclic As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: Microsoft.EntityFrameworkCore.Metadata.ISequence.IsCyclic*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: Microsoft.EntityFrameworkCore.Metadata.ISequence.Name*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.ISequence.Name
  isExternal: false
  name: Name
  nameWithType: ISequence.Name
  fullName: Microsoft.EntityFrameworkCore.Metadata.ISequence.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Metadata.ISequence.Schema*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.ISequence.Schema
  isExternal: false
  name: Schema
  nameWithType: ISequence.Schema
  fullName: Microsoft.EntityFrameworkCore.Metadata.ISequence.Schema
- uid: Microsoft.EntityFrameworkCore.Metadata.ISequence.StartValue*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.ISequence.StartValue
  isExternal: false
  name: StartValue
  nameWithType: ISequence.StartValue
  fullName: Microsoft.EntityFrameworkCore.Metadata.ISequence.StartValue
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Microsoft.EntityFrameworkCore.Metadata.ISequence.IncrementBy*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.ISequence.IncrementBy
  isExternal: false
  name: IncrementBy
  nameWithType: ISequence.IncrementBy
  fullName: Microsoft.EntityFrameworkCore.Metadata.ISequence.IncrementBy
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.EntityFrameworkCore.Metadata.ISequence.MinValue*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.ISequence.MinValue
  isExternal: false
  name: MinValue
  nameWithType: ISequence.MinValue
  fullName: Microsoft.EntityFrameworkCore.Metadata.ISequence.MinValue
- uid: System.Nullable{System.Int64}
  commentId: T:System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullname.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.ISequence.MaxValue*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.ISequence.MaxValue
  isExternal: false
  name: MaxValue
  nameWithType: ISequence.MaxValue
  fullName: Microsoft.EntityFrameworkCore.Metadata.ISequence.MaxValue
- uid: Microsoft.EntityFrameworkCore.Metadata.ISequence.ClrType*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.ISequence.ClrType
  isExternal: false
  name: ClrType
  nameWithType: ISequence.ClrType
  fullName: Microsoft.EntityFrameworkCore.Metadata.ISequence.ClrType
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Microsoft.EntityFrameworkCore.Metadata.ISequence.Model*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.ISequence.Model
  isExternal: false
  name: Model
  nameWithType: ISequence.Model
  fullName: Microsoft.EntityFrameworkCore.Metadata.ISequence.Model
- uid: Microsoft.EntityFrameworkCore.Metadata.IModel
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IModel
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IModel
  nameWithType: IModel
  fullName: Microsoft.EntityFrameworkCore.Metadata.IModel
- uid: Microsoft.EntityFrameworkCore.Metadata.ISequence.IsCyclic*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.ISequence.IsCyclic
  isExternal: false
  name: IsCyclic
  nameWithType: ISequence.IsCyclic
  fullName: Microsoft.EntityFrameworkCore.Metadata.ISequence.IsCyclic
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
