### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.DbContextHelpers
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.DbContextHelpers
  id: DbContextHelpers
  parent: Microsoft.EntityFrameworkCore.Specification.Tests
  children:
  - Microsoft.EntityFrameworkCore.Specification.Tests.DbContextHelpers.ExecuteWithStrategyInTransaction``1(System.Func{``0},System.Action{Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction},System.Action{``0},System.Action{``0},System.Action{``0},System.Action{``0})
  - Microsoft.EntityFrameworkCore.Specification.Tests.DbContextHelpers.ExecuteWithStrategyInTransactionAsync``1(System.Func{``0},System.Action{Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction},System.Func{``0,System.Threading.Tasks.Task},System.Func{``0,System.Threading.Tasks.Task},System.Func{``0,System.Threading.Tasks.Task},System.Func{``0,System.Threading.Tasks.Task})
  langs:
  - csharp
  - vb
  name: DbContextHelpers
  nameWithType: DbContextHelpers
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.DbContextHelpers
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestUtilities/DbContextHelpers.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: DbContextHelpers
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestUtilities/DbContextHelpers.cs
    startLine: 11
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public static class DbContextHelpers
    content.vb: Public Module DbContextHelpers
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.DbContextHelpers.ExecuteWithStrategyInTransaction``1(System.Func{``0},System.Action{Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction},System.Action{``0},System.Action{``0},System.Action{``0},System.Action{``0})
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.DbContextHelpers.ExecuteWithStrategyInTransaction``1(System.Func{``0},System.Action{Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction},System.Action{``0},System.Action{``0},System.Action{``0},System.Action{``0})
  id: ExecuteWithStrategyInTransaction``1(System.Func{``0},System.Action{Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction},System.Action{``0},System.Action{``0},System.Action{``0},System.Action{``0})
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.DbContextHelpers
  langs:
  - csharp
  - vb
  name: ExecuteWithStrategyInTransaction<TContext>(Func<TContext>, Action<DatabaseFacade, IDbContextTransaction>, Action<TContext>, Action<TContext>, Action<TContext>, Action<TContext>)
  nameWithType: DbContextHelpers.ExecuteWithStrategyInTransaction<TContext>(Func<TContext>, Action<DatabaseFacade, IDbContextTransaction>, Action<TContext>, Action<TContext>, Action<TContext>, Action<TContext>)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.DbContextHelpers.ExecuteWithStrategyInTransaction<TContext>(System.Func<TContext>, System.Action<Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction>, System.Action<TContext>, System.Action<TContext>, System.Action<TContext>, System.Action<TContext>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestUtilities/DbContextHelpers.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ExecuteWithStrategyInTransaction
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestUtilities/DbContextHelpers.cs
    startLine: 13
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: 'public static void ExecuteWithStrategyInTransaction<TContext>(Func<TContext> createContext, Action<DatabaseFacade, IDbContextTransaction> useTransaction, Action<TContext> testOperation, Action<TContext> nestedTestOperation1 = null, Action<TContext> nestedTestOperation2 = null, Action<TContext> nestedTestOperation3 = null)where TContext : DbContext'
    content.vb: Public Shared Sub ExecuteWithStrategyInTransaction(Of TContext As DbContext)(createContext As Func(Of TContext), useTransaction As Action(Of DatabaseFacade, IDbContextTransaction), testOperation As Action(Of TContext), nestedTestOperation1 As Action(Of TContext) = Nothing, nestedTestOperation2 As Action(Of TContext) = Nothing, nestedTestOperation3 As Action(Of TContext) = Nothing)
    parameters:
    - id: createContext
      type: System.Func{{TContext}}
    - id: useTransaction
      type: System.Action{Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction}
    - id: testOperation
      type: System.Action{{TContext}}
    - id: nestedTestOperation1
      type: System.Action{{TContext}}
    - id: nestedTestOperation2
      type: System.Action{{TContext}}
    - id: nestedTestOperation3
      type: System.Action{{TContext}}
    typeParameters:
    - id: TContext
  nameWithType.vb: DbContextHelpers.ExecuteWithStrategyInTransaction(Of TContext)(Func(Of TContext), Action(Of DatabaseFacade, IDbContextTransaction), Action(Of TContext), Action(Of TContext), Action(Of TContext), Action(Of TContext))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.DbContextHelpers.ExecuteWithStrategyInTransaction(Of TContext)(System.Func(Of TContext), System.Action(Of Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction), System.Action(Of TContext), System.Action(Of TContext), System.Action(Of TContext), System.Action(Of TContext))
  name.vb: ExecuteWithStrategyInTransaction(Of TContext)(Func(Of TContext), Action(Of DatabaseFacade, IDbContextTransaction), Action(Of TContext), Action(Of TContext), Action(Of TContext), Action(Of TContext))
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.DbContextHelpers.ExecuteWithStrategyInTransactionAsync``1(System.Func{``0},System.Action{Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction},System.Func{``0,System.Threading.Tasks.Task},System.Func{``0,System.Threading.Tasks.Task},System.Func{``0,System.Threading.Tasks.Task},System.Func{``0,System.Threading.Tasks.Task})
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.DbContextHelpers.ExecuteWithStrategyInTransactionAsync``1(System.Func{``0},System.Action{Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction},System.Func{``0,System.Threading.Tasks.Task},System.Func{``0,System.Threading.Tasks.Task},System.Func{``0,System.Threading.Tasks.Task},System.Func{``0,System.Threading.Tasks.Task})
  id: ExecuteWithStrategyInTransactionAsync``1(System.Func{``0},System.Action{Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction},System.Func{``0,System.Threading.Tasks.Task},System.Func{``0,System.Threading.Tasks.Task},System.Func{``0,System.Threading.Tasks.Task},System.Func{``0,System.Threading.Tasks.Task})
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.DbContextHelpers
  langs:
  - csharp
  - vb
  name: ExecuteWithStrategyInTransactionAsync<TContext>(Func<TContext>, Action<DatabaseFacade, IDbContextTransaction>, Func<TContext, Task>, Func<TContext, Task>, Func<TContext, Task>, Func<TContext, Task>)
  nameWithType: DbContextHelpers.ExecuteWithStrategyInTransactionAsync<TContext>(Func<TContext>, Action<DatabaseFacade, IDbContextTransaction>, Func<TContext, Task>, Func<TContext, Task>, Func<TContext, Task>, Func<TContext, Task>)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.DbContextHelpers.ExecuteWithStrategyInTransactionAsync<TContext>(System.Func<TContext>, System.Action<Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction>, System.Func<TContext, System.Threading.Tasks.Task>, System.Func<TContext, System.Threading.Tasks.Task>, System.Func<TContext, System.Threading.Tasks.Task>, System.Func<TContext, System.Threading.Tasks.Task>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestUtilities/DbContextHelpers.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ExecuteWithStrategyInTransactionAsync
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestUtilities/DbContextHelpers.cs
    startLine: 64
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: 'public static Task ExecuteWithStrategyInTransactionAsync<TContext>(Func<TContext> createContext, Action<DatabaseFacade, IDbContextTransaction> useTransaction, Func<TContext, Task> testOperation, Func<TContext, Task> nestedTestOperation1 = null, Func<TContext, Task> nestedTestOperation2 = null, Func<TContext, Task> nestedTestOperation3 = null)where TContext : DbContext'
    content.vb: Public Shared Function ExecuteWithStrategyInTransactionAsync(Of TContext As DbContext)(createContext As Func(Of TContext), useTransaction As Action(Of DatabaseFacade, IDbContextTransaction), testOperation As Func(Of TContext, Task), nestedTestOperation1 As Func(Of TContext, Task) = Nothing, nestedTestOperation2 As Func(Of TContext, Task) = Nothing, nestedTestOperation3 As Func(Of TContext, Task) = Nothing) As Task
    parameters:
    - id: createContext
      type: System.Func{{TContext}}
    - id: useTransaction
      type: System.Action{Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction}
    - id: testOperation
      type: System.Func{{TContext},System.Threading.Tasks.Task}
    - id: nestedTestOperation1
      type: System.Func{{TContext},System.Threading.Tasks.Task}
    - id: nestedTestOperation2
      type: System.Func{{TContext},System.Threading.Tasks.Task}
    - id: nestedTestOperation3
      type: System.Func{{TContext},System.Threading.Tasks.Task}
    typeParameters:
    - id: TContext
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: DbContextHelpers.ExecuteWithStrategyInTransactionAsync(Of TContext)(Func(Of TContext), Action(Of DatabaseFacade, IDbContextTransaction), Func(Of TContext, Task), Func(Of TContext, Task), Func(Of TContext, Task), Func(Of TContext, Task))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.DbContextHelpers.ExecuteWithStrategyInTransactionAsync(Of TContext)(System.Func(Of TContext), System.Action(Of Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction), System.Func(Of TContext, System.Threading.Tasks.Task), System.Func(Of TContext, System.Threading.Tasks.Task), System.Func(Of TContext, System.Threading.Tasks.Task), System.Func(Of TContext, System.Threading.Tasks.Task))
  name.vb: ExecuteWithStrategyInTransactionAsync(Of TContext)(Func(Of TContext), Action(Of DatabaseFacade, IDbContextTransaction), Func(Of TContext, Task), Func(Of TContext, Task), Func(Of TContext, Task), Func(Of TContext, Task))
references:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests
  commentId: N:Microsoft.EntityFrameworkCore.Specification.Tests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Specification.Tests
  nameWithType: Microsoft.EntityFrameworkCore.Specification.Tests
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Func{{TContext}}
  commentId: T:System.Func{``0}
  parent: System
  definition: System.Func`1
  name: Func<TContext>
  nameWithType: Func<TContext>
  fullName: System.Func<TContext>
  nameWithType.vb: Func(Of TContext)
  fullname.vb: System.Func(Of TContext)
  name.vb: Func(Of TContext)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TContext
    nameWithType: TContext
    fullName: TContext
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TContext
    nameWithType: TContext
    fullName: TContext
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction}
  commentId: T:System.Action{Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction}
  parent: System
  definition: System.Action`2
  name: Action<DatabaseFacade, IDbContextTransaction>
  nameWithType: Action<DatabaseFacade, IDbContextTransaction>
  fullName: System.Action<Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction>
  nameWithType.vb: Action(Of DatabaseFacade, IDbContextTransaction)
  fullname.vb: System.Action(Of Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: Action(Of DatabaseFacade, IDbContextTransaction)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
    name: DatabaseFacade
    nameWithType: DatabaseFacade
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
    name: DatabaseFacade
    nameWithType: DatabaseFacade
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{{TContext}}
  commentId: T:System.Action{``0}
  parent: System
  definition: System.Action`1
  name: Action<TContext>
  nameWithType: Action<TContext>
  fullName: System.Action<TContext>
  nameWithType.vb: Action(Of TContext)
  fullname.vb: System.Action(Of TContext)
  name.vb: Action(Of TContext)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TContext
    nameWithType: TContext
    fullName: TContext
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TContext
    nameWithType: TContext
    fullName: TContext
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullname.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullname.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullname.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{{TContext},System.Threading.Tasks.Task}
  commentId: T:System.Func{``0,System.Threading.Tasks.Task}
  parent: System
  definition: System.Func`2
  name: Func<TContext, Task>
  nameWithType: Func<TContext, Task>
  fullName: System.Func<TContext, System.Threading.Tasks.Task>
  nameWithType.vb: Func(Of TContext, Task)
  fullname.vb: System.Func(Of TContext, System.Threading.Tasks.Task)
  name.vb: Func(Of TContext, Task)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TContext
    nameWithType: TContext
    fullName: TContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TContext
    nameWithType: TContext
    fullName: TContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullname.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
