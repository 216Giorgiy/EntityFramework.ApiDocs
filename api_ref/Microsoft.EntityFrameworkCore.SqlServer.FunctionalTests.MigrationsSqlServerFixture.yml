### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MigrationsSqlServerFixture
  commentId: T:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MigrationsSqlServerFixture
  id: MigrationsSqlServerFixture
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  children:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MigrationsSqlServerFixture.#ctor
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MigrationsSqlServerFixture.CreateContext
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MigrationsSqlServerFixture.CreateEmptyContext
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MigrationsSqlServerFixture.Dispose
  langs:
  - csharp
  - vb
  name: MigrationsSqlServerFixture
  nameWithType: MigrationsSqlServerFixture
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MigrationsSqlServerFixture
  type: Class
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/MigrationsSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: MigrationsSqlServerFixture
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/MigrationsSqlServerFixture.cs
    startLine: 11
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: 'public class MigrationsSqlServerFixture : MigrationsFixtureBase, IDisposable'
    content.vb: >-
      Public Class MigrationsSqlServerFixture
          Inherits MigrationsFixtureBase
          Implements IDisposable
  inheritance:
  - System.Object
  - Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsFixtureBase
  implements:
  - System.IDisposable
  inheritedMembers:
  - Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsFixtureBase.ActiveProvider
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MigrationsSqlServerFixture.#ctor
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MigrationsSqlServerFixture.#ctor
  id: '#ctor'
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MigrationsSqlServerFixture
  langs:
  - csharp
  - vb
  name: MigrationsSqlServerFixture()
  nameWithType: MigrationsSqlServerFixture.MigrationsSqlServerFixture()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MigrationsSqlServerFixture.MigrationsSqlServerFixture()
  type: Constructor
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/MigrationsSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/MigrationsSqlServerFixture.cs
    startLine: 16
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public MigrationsSqlServerFixture()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MigrationsSqlServerFixture.CreateContext
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MigrationsSqlServerFixture.CreateContext
  id: CreateContext
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MigrationsSqlServerFixture
  langs:
  - csharp
  - vb
  name: CreateContext()
  nameWithType: MigrationsSqlServerFixture.CreateContext()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MigrationsSqlServerFixture.CreateContext()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/MigrationsSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateContext
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/MigrationsSqlServerFixture.cs
    startLine: 29
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public override MigrationsFixtureBase.MigrationsContext CreateContext()
    content.vb: Public Overrides Function CreateContext As MigrationsFixtureBase.MigrationsContext
    return:
      type: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsFixtureBase.MigrationsContext
  overridden: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsFixtureBase.CreateContext
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MigrationsSqlServerFixture.CreateEmptyContext
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MigrationsSqlServerFixture.CreateEmptyContext
  id: CreateEmptyContext
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MigrationsSqlServerFixture
  langs:
  - csharp
  - vb
  name: CreateEmptyContext()
  nameWithType: MigrationsSqlServerFixture.CreateEmptyContext()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MigrationsSqlServerFixture.CreateEmptyContext()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/MigrationsSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateEmptyContext
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/MigrationsSqlServerFixture.cs
    startLine: 36
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public override MigrationsFixtureBase.EmptyMigrationsContext CreateEmptyContext()
    content.vb: Public Overrides Function CreateEmptyContext As MigrationsFixtureBase.EmptyMigrationsContext
    return:
      type: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsFixtureBase.EmptyMigrationsContext
  overridden: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsFixtureBase.CreateEmptyContext
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MigrationsSqlServerFixture.Dispose
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MigrationsSqlServerFixture.Dispose
  id: Dispose
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MigrationsSqlServerFixture
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: MigrationsSqlServerFixture.Dispose()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MigrationsSqlServerFixture.Dispose()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/MigrationsSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Dispose
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/MigrationsSqlServerFixture.cs
    startLine: 38
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  commentId: N:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  nameWithType: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsFixtureBase
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsFixtureBase
  parent: Microsoft.EntityFrameworkCore.Specification.Tests
  isExternal: false
  name: MigrationsFixtureBase
  nameWithType: MigrationsFixtureBase
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsFixtureBase
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsFixtureBase.ActiveProvider
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsFixtureBase.ActiveProvider
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsFixtureBase
  isExternal: false
  name: ActiveProvider
  nameWithType: MigrationsFixtureBase.ActiveProvider
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsFixtureBase.ActiveProvider
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Specification.Tests
  commentId: N:Microsoft.EntityFrameworkCore.Specification.Tests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Specification.Tests
  nameWithType: Microsoft.EntityFrameworkCore.Specification.Tests
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsFixtureBase.CreateContext
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsFixtureBase.CreateContext
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsFixtureBase
  isExternal: false
  name: CreateContext()
  nameWithType: MigrationsFixtureBase.CreateContext()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsFixtureBase.CreateContext()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsFixtureBase.CreateContext
    name: CreateContext
    nameWithType: MigrationsFixtureBase.CreateContext
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsFixtureBase.CreateContext
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsFixtureBase.CreateContext
    name: CreateContext
    nameWithType: MigrationsFixtureBase.CreateContext
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsFixtureBase.CreateContext
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsFixtureBase.MigrationsContext
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsFixtureBase.MigrationsContext
  parent: Microsoft.EntityFrameworkCore.Specification.Tests
  isExternal: false
  name: MigrationsFixtureBase.MigrationsContext
  nameWithType: MigrationsFixtureBase.MigrationsContext
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsFixtureBase.MigrationsContext
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsFixtureBase.CreateEmptyContext
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsFixtureBase.CreateEmptyContext
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsFixtureBase
  isExternal: false
  name: CreateEmptyContext()
  nameWithType: MigrationsFixtureBase.CreateEmptyContext()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsFixtureBase.CreateEmptyContext()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsFixtureBase.CreateEmptyContext
    name: CreateEmptyContext
    nameWithType: MigrationsFixtureBase.CreateEmptyContext
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsFixtureBase.CreateEmptyContext
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsFixtureBase.CreateEmptyContext
    name: CreateEmptyContext
    nameWithType: MigrationsFixtureBase.CreateEmptyContext
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsFixtureBase.CreateEmptyContext
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsFixtureBase.EmptyMigrationsContext
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsFixtureBase.EmptyMigrationsContext
  parent: Microsoft.EntityFrameworkCore.Specification.Tests
  isExternal: false
  name: MigrationsFixtureBase.EmptyMigrationsContext
  nameWithType: MigrationsFixtureBase.EmptyMigrationsContext
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsFixtureBase.EmptyMigrationsContext
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
