### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Query.Internal.MaterializerFactory
  commentId: T:Microsoft.EntityFrameworkCore.Query.Internal.MaterializerFactory
  id: MaterializerFactory
  parent: Microsoft.EntityFrameworkCore.Query.Internal
  children:
  - Microsoft.EntityFrameworkCore.Query.Internal.MaterializerFactory.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource)
  - Microsoft.EntityFrameworkCore.Query.Internal.MaterializerFactory.CreateMaterializer(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  langs:
  - csharp
  - vb
  name: MaterializerFactory
  nameWithType: MaterializerFactory
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.MaterializerFactory
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.InMemory/Query/Internal/MaterializerFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: MaterializerFactory
    path: src/Microsoft.EntityFrameworkCore.InMemory/Query/Internal/MaterializerFactory.cs
    startLine: 18
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public class MaterializerFactory : IMaterializerFactory'
    content.vb: >-
      Public Class MaterializerFactory
          Implements IMaterializerFactory
  inheritance:
  - System.Object
  implements:
  - Microsoft.EntityFrameworkCore.Query.Internal.IMaterializerFactory
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Query.Internal.MaterializerFactory.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Query.Internal.MaterializerFactory.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.MaterializerFactory.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource)
  id: '#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource)'
  parent: Microsoft.EntityFrameworkCore.Query.Internal.MaterializerFactory
  langs:
  - csharp
  - vb
  name: MaterializerFactory(IEntityMaterializerSource)
  nameWithType: MaterializerFactory.MaterializerFactory(IEntityMaterializerSource)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.MaterializerFactory.MaterializerFactory(Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.InMemory/Query/Internal/MaterializerFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.InMemory/Query/Internal/MaterializerFactory.cs
    startLine: 26
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public MaterializerFactory(IEntityMaterializerSource entityMaterializerSource)
    content.vb: Public Sub New(entityMaterializerSource As IEntityMaterializerSource)
    parameters:
    - id: entityMaterializerSource
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Query.Internal.MaterializerFactory.CreateMaterializer(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.MaterializerFactory.CreateMaterializer(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  id: CreateMaterializer(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  parent: Microsoft.EntityFrameworkCore.Query.Internal.MaterializerFactory
  langs:
  - csharp
  - vb
  name: CreateMaterializer(IEntityType)
  nameWithType: MaterializerFactory.CreateMaterializer(IEntityType)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.MaterializerFactory.CreateMaterializer(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.InMemory/Query/Internal/MaterializerFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: CreateMaterializer
    path: src/Microsoft.EntityFrameworkCore.InMemory/Query/Internal/MaterializerFactory.cs
    startLine: 37
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual Expression<Func<IEntityType, ValueBuffer, object>> CreateMaterializer(IEntityType entityType)
    content.vb: Public Overridable Function CreateMaterializer(entityType As IEntityType) As Expression(Of Func(Of IEntityType, ValueBuffer, Object))
    parameters:
    - id: entityType
      type: Microsoft.EntityFrameworkCore.Metadata.IEntityType
    return:
      type: System.Linq.Expressions.Expression{System.Func{Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Object}}
  implements:
  - Microsoft.EntityFrameworkCore.Query.Internal.IMaterializerFactory.CreateMaterializer(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.EntityFrameworkCore.Query.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Query.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Query.Internal
  fullName: Microsoft.EntityFrameworkCore.Query.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Query.Internal.IMaterializerFactory
  commentId: T:Microsoft.EntityFrameworkCore.Query.Internal.IMaterializerFactory
  parent: Microsoft.EntityFrameworkCore.Query.Internal
  isExternal: false
  name: IMaterializerFactory
  nameWithType: IMaterializerFactory
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.IMaterializerFactory
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.Internal.MaterializerFactory.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<MaterializerFactory, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<MaterializerFactory, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Query.Internal.MaterializerFactory, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of MaterializerFactory, TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Query.Internal.MaterializerFactory, TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of MaterializerFactory, TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<MaterializerFactory, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<MaterializerFactory, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Query.Internal.MaterializerFactory, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of MaterializerFactory, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of MaterializerFactory, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Query.Internal.MaterializerFactory, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: IEntityMaterializerSource
  nameWithType: IEntityMaterializerSource
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource
- uid: Microsoft.EntityFrameworkCore.Query.Internal.IMaterializerFactory.CreateMaterializer(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.IMaterializerFactory.CreateMaterializer(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  parent: Microsoft.EntityFrameworkCore.Query.Internal.IMaterializerFactory
  isExternal: false
  name: CreateMaterializer(IEntityType)
  nameWithType: IMaterializerFactory.CreateMaterializer(IEntityType)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.IMaterializerFactory.CreateMaterializer(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.Internal.IMaterializerFactory.CreateMaterializer(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
    name: CreateMaterializer
    nameWithType: IMaterializerFactory.CreateMaterializer
    fullName: Microsoft.EntityFrameworkCore.Query.Internal.IMaterializerFactory.CreateMaterializer
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IEntityType
    name: IEntityType
    nameWithType: IEntityType
    fullName: Microsoft.EntityFrameworkCore.Metadata.IEntityType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.Internal.IMaterializerFactory.CreateMaterializer(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
    name: CreateMaterializer
    nameWithType: IMaterializerFactory.CreateMaterializer
    fullName: Microsoft.EntityFrameworkCore.Query.Internal.IMaterializerFactory.CreateMaterializer
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IEntityType
    name: IEntityType
    nameWithType: IEntityType
    fullName: Microsoft.EntityFrameworkCore.Metadata.IEntityType
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.IEntityType
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IEntityType
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IEntityType
  nameWithType: IEntityType
  fullName: Microsoft.EntityFrameworkCore.Metadata.IEntityType
- uid: System.Linq.Expressions.Expression{System.Func{Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Object}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Object}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  name: Expression<Func<IEntityType, ValueBuffer, Object>>
  nameWithType: Expression<Func<IEntityType, ValueBuffer, Object>>
  fullName: System.Linq.Expressions.Expression<System.Func<Microsoft.EntityFrameworkCore.Metadata.IEntityType, Microsoft.EntityFrameworkCore.Storage.ValueBuffer, System.Object>>
  nameWithType.vb: Expression(Of Func(Of IEntityType, ValueBuffer, Object))
  fullname.vb: System.Linq.Expressions.Expression(Of System.Func(Of Microsoft.EntityFrameworkCore.Metadata.IEntityType, Microsoft.EntityFrameworkCore.Storage.ValueBuffer, System.Object))
  name.vb: Expression(Of Func(Of IEntityType, ValueBuffer, Object))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.IEntityType
    name: IEntityType
    nameWithType: IEntityType
    fullName: Microsoft.EntityFrameworkCore.Metadata.IEntityType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.ValueBuffer
    name: ValueBuffer
    nameWithType: ValueBuffer
    fullName: Microsoft.EntityFrameworkCore.Storage.ValueBuffer
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IEntityType
    name: IEntityType
    nameWithType: IEntityType
    fullName: Microsoft.EntityFrameworkCore.Metadata.IEntityType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.ValueBuffer
    name: ValueBuffer
    nameWithType: ValueBuffer
    fullName: Microsoft.EntityFrameworkCore.Storage.ValueBuffer
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: System.Linq.Expressions.Expression`1
  commentId: T:System.Linq.Expressions.Expression`1
  isExternal: true
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
  nameWithType.vb: Expression(Of TDelegate)
  fullname.vb: System.Linq.Expressions.Expression(Of TDelegate)
  name.vb: Expression(Of TDelegate)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TDelegate
    nameWithType: TDelegate
    fullName: TDelegate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDelegate
    nameWithType: TDelegate
    fullName: TDelegate
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: false
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
