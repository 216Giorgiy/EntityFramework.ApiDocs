### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions
  id: RelationalCommandBuilderExtensions
  parent: Microsoft.EntityFrameworkCore.Storage
  children:
  - Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AddCompositeParameter(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder,System.String,System.Action{Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder})
  - Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AddParameter(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder,System.String,System.String)
  - Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AddParameter(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder,System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.IProperty)
  - Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AddParameter(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder,System.String,System.String,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,System.Boolean)
  - Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AddPropertyParameter(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder,System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.IProperty)
  - Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.Append(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder,System.Object)
  - Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AppendLine(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder)
  - Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AppendLine(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder,System.Object)
  - Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AppendLines(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder,System.Object)
  - Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.DecrementIndent(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder)
  - Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.GetLength(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder)
  - Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.IncrementIndent(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder)
  - Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.Indent(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder)
  langs:
  - csharp
  - vb
  name: RelationalCommandBuilderExtensions
  nameWithType: RelationalCommandBuilderExtensions
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/RelationalCommandBuilderExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: RelationalCommandBuilderExtensions
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/RelationalCommandBuilderExtensions.cs
    startLine: 14
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\nExtension methods for the <xref href=\"Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public static class RelationalCommandBuilderExtensions
    content.vb: Public Module RelationalCommandBuilderExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.Append(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder,System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.Append(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder,System.Object)
  id: Append(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder,System.Object)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions
  langs:
  - csharp
  - vb
  name: Append(IRelationalCommandBuilder, Object)
  nameWithType: RelationalCommandBuilderExtensions.Append(IRelationalCommandBuilder, Object)
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.Append(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/RelationalCommandBuilderExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Append
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/RelationalCommandBuilderExtensions.cs
    startLine: 22
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\nAppends an object to the command text.\n"
  example: []
  syntax:
    content: public static IRelationalCommandBuilder Append(this IRelationalCommandBuilder commandBuilder, object o)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Append(commandBuilder As IRelationalCommandBuilder, o As Object) As IRelationalCommandBuilder
    parameters:
    - id: commandBuilder
      type: Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder
      description: 'The command builder. '
    - id: o
      type: System.Object
      description: 'The object to be written. '
    return:
      type: Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder
      description: 'The same builder instance so that multiple calls can be chained. '
  overload: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.Append*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AppendLine(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AppendLine(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder)
  id: AppendLine(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions
  langs:
  - csharp
  - vb
  name: AppendLine(IRelationalCommandBuilder)
  nameWithType: RelationalCommandBuilderExtensions.AppendLine(IRelationalCommandBuilder)
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AppendLine(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/RelationalCommandBuilderExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AppendLine
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/RelationalCommandBuilderExtensions.cs
    startLine: 39
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\nAppends a blank line to the command text.\n"
  example: []
  syntax:
    content: public static IRelationalCommandBuilder AppendLine(this IRelationalCommandBuilder commandBuilder)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AppendLine(commandBuilder As IRelationalCommandBuilder) As IRelationalCommandBuilder
    parameters:
    - id: commandBuilder
      type: Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder
      description: 'The command builder. '
    return:
      type: Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder
      description: 'The same builder instance so that multiple calls can be chained. '
  overload: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AppendLine*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AppendLine(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder,System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AppendLine(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder,System.Object)
  id: AppendLine(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder,System.Object)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions
  langs:
  - csharp
  - vb
  name: AppendLine(IRelationalCommandBuilder, Object)
  nameWithType: RelationalCommandBuilderExtensions.AppendLine(IRelationalCommandBuilder, Object)
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AppendLine(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/RelationalCommandBuilderExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AppendLine
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/RelationalCommandBuilderExtensions.cs
    startLine: 54
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\nAppends an object to the command text on a new line.\n"
  example: []
  syntax:
    content: public static IRelationalCommandBuilder AppendLine(this IRelationalCommandBuilder commandBuilder, object o)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AppendLine(commandBuilder As IRelationalCommandBuilder, o As Object) As IRelationalCommandBuilder
    parameters:
    - id: commandBuilder
      type: Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder
      description: 'The command builder. '
    - id: o
      type: System.Object
      description: 'The object to be written. '
    return:
      type: Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder
      description: 'The same builder instance so that multiple calls can be chained. '
  overload: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AppendLine*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AppendLines(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder,System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AppendLines(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder,System.Object)
  id: AppendLines(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder,System.Object)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions
  langs:
  - csharp
  - vb
  name: AppendLines(IRelationalCommandBuilder, Object)
  nameWithType: RelationalCommandBuilderExtensions.AppendLines(IRelationalCommandBuilder, Object)
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AppendLines(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/RelationalCommandBuilderExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AppendLines
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/RelationalCommandBuilderExtensions.cs
    startLine: 73
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\nAppends an object, that contains multiple lines of text, to the command text.\nEach line read from the object is appended on a new line.\n"
  example: []
  syntax:
    content: public static IRelationalCommandBuilder AppendLines(this IRelationalCommandBuilder commandBuilder, object o)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AppendLines(commandBuilder As IRelationalCommandBuilder, o As Object) As IRelationalCommandBuilder
    parameters:
    - id: commandBuilder
      type: Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder
      description: 'The command builder. '
    - id: o
      type: System.Object
      description: 'The object to be written. '
    return:
      type: Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder
      description: 'The same builder instance so that multiple calls can be chained. '
  overload: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AppendLines*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.IncrementIndent(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.IncrementIndent(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder)
  id: IncrementIndent(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions
  langs:
  - csharp
  - vb
  name: IncrementIndent(IRelationalCommandBuilder)
  nameWithType: RelationalCommandBuilderExtensions.IncrementIndent(IRelationalCommandBuilder)
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.IncrementIndent(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/RelationalCommandBuilderExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: IncrementIndent
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/RelationalCommandBuilderExtensions.cs
    startLine: 90
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\nIncrements the indent of subsequent lines.\n"
  example: []
  syntax:
    content: public static IRelationalCommandBuilder IncrementIndent(this IRelationalCommandBuilder commandBuilder)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function IncrementIndent(commandBuilder As IRelationalCommandBuilder) As IRelationalCommandBuilder
    parameters:
    - id: commandBuilder
      type: Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder
      description: 'The command builder. '
    return:
      type: Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder
      description: 'The same builder instance so that multiple calls can be chained. '
  overload: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.IncrementIndent*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.DecrementIndent(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.DecrementIndent(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder)
  id: DecrementIndent(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions
  langs:
  - csharp
  - vb
  name: DecrementIndent(IRelationalCommandBuilder)
  nameWithType: RelationalCommandBuilderExtensions.DecrementIndent(IRelationalCommandBuilder)
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.DecrementIndent(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/RelationalCommandBuilderExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: DecrementIndent
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/RelationalCommandBuilderExtensions.cs
    startLine: 104
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\nDecrements the indent of subsequent lines.\n"
  example: []
  syntax:
    content: public static IRelationalCommandBuilder DecrementIndent(this IRelationalCommandBuilder commandBuilder)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DecrementIndent(commandBuilder As IRelationalCommandBuilder) As IRelationalCommandBuilder
    parameters:
    - id: commandBuilder
      type: Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder
      description: 'The command builder. '
    return:
      type: Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder
      description: 'The same builder instance so that multiple calls can be chained. '
  overload: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.DecrementIndent*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.Indent(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.Indent(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder)
  id: Indent(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions
  langs:
  - csharp
  - vb
  name: Indent(IRelationalCommandBuilder)
  nameWithType: RelationalCommandBuilderExtensions.Indent(IRelationalCommandBuilder)
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.Indent(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/RelationalCommandBuilderExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Indent
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/RelationalCommandBuilderExtensions.cs
    startLine: 118
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\nIncreases the indent of the command text.\n"
  example: []
  syntax:
    content: public static IDisposable Indent(this IRelationalCommandBuilder commandBuilder)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Indent(commandBuilder As IRelationalCommandBuilder) As IDisposable
    parameters:
    - id: commandBuilder
      type: Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder
      description: 'The command builder. '
    return:
      type: System.IDisposable
      description: 'The same builder instance so that multiple calls can be chained. '
  overload: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.Indent*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.GetLength(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.GetLength(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder)
  id: GetLength(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions
  langs:
  - csharp
  - vb
  name: GetLength(IRelationalCommandBuilder)
  nameWithType: RelationalCommandBuilderExtensions.GetLength(IRelationalCommandBuilder)
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.GetLength(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/RelationalCommandBuilderExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetLength
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/RelationalCommandBuilderExtensions.cs
    startLine: 126
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\nGets the length of the command text.\n"
  example: []
  syntax:
    content: public static int GetLength(this IRelationalCommandBuilder commandBuilder)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetLength(commandBuilder As IRelationalCommandBuilder) As Integer
    parameters:
    - id: commandBuilder
      type: Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder
      description: 'The command builder. '
    return:
      type: System.Int32
      description: 'The length of the command text. '
  overload: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.GetLength*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AddParameter(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder,System.String,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AddParameter(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder,System.String,System.String)
  id: AddParameter(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddParameter(IRelationalCommandBuilder, String, String)
  nameWithType: RelationalCommandBuilderExtensions.AddParameter(IRelationalCommandBuilder, String, String)
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AddParameter(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/RelationalCommandBuilderExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AddParameter
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/RelationalCommandBuilderExtensions.cs
    startLine: 142
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\nAdds a parameter.\n"
  example: []
  syntax:
    content: public static IRelationalCommandBuilder AddParameter(this IRelationalCommandBuilder commandBuilder, string invariantName, string name)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddParameter(commandBuilder As IRelationalCommandBuilder, invariantName As String, name As String) As IRelationalCommandBuilder
    parameters:
    - id: commandBuilder
      type: Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder
      description: 'The command builder. '
    - id: invariantName
      type: System.String
      description: "\nThe key that identifies this parameter. Note that <xref href=\"Microsoft.EntityFrameworkCore.Storage.IRelationalParameter\" data-throw-if-not-resolved=\"false\"></xref> just represents a\nplaceholder for a parameter and not the actual value. This is because the same command can be\nreused multiple times with different parameter values.\n"
    - id: name
      type: System.String
      description: "\nThe name to be used for the parameter when the command is executed against the database.\n"
    return:
      type: Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder
      description: 'The same builder instance so that multiple calls can be chained. '
  overload: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AddParameter*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AddParameter(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder,System.String,System.String,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AddParameter(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder,System.String,System.String,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,System.Boolean)
  id: AddParameter(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder,System.String,System.String,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,System.Boolean)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddParameter(IRelationalCommandBuilder, String, String, RelationalTypeMapping, Boolean)
  nameWithType: RelationalCommandBuilderExtensions.AddParameter(IRelationalCommandBuilder, String, String, RelationalTypeMapping, Boolean)
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AddParameter(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder, System.String, System.String, Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/RelationalCommandBuilderExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AddParameter
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/RelationalCommandBuilderExtensions.cs
    startLine: 175
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\nAdds a parameter.\n"
  example: []
  syntax:
    content: public static IRelationalCommandBuilder AddParameter(this IRelationalCommandBuilder commandBuilder, string invariantName, string name, RelationalTypeMapping typeMapping, bool nullable)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddParameter(commandBuilder As IRelationalCommandBuilder, invariantName As String, name As String, typeMapping As RelationalTypeMapping, nullable As Boolean) As IRelationalCommandBuilder
    parameters:
    - id: commandBuilder
      type: Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder
      description: 'The command builder. '
    - id: invariantName
      type: System.String
      description: "\nThe key that identifies this parameter. Note that <xref href=\"Microsoft.EntityFrameworkCore.Storage.IRelationalParameter\" data-throw-if-not-resolved=\"false\"></xref> just represents a\nplaceholder for a parameter and not the actual value. This is because the same command can be\nreused multiple times with different parameter values.\n"
    - id: name
      type: System.String
      description: "\nThe name to be used for the parameter when the command is executed against the database.\n"
    - id: typeMapping
      type: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping
      description: "\nThe type mapping for the property that values for this parameter will come from.\n"
    - id: nullable
      type: System.Boolean
      description: "\nA value indicating whether the parameter can contain null values.\n"
    return:
      type: Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder
      description: 'The same builder instance so that multiple calls can be chained. '
  overload: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AddParameter*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AddParameter(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder,System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.IProperty)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AddParameter(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder,System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.IProperty)
  id: AddParameter(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder,System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.IProperty)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddParameter(IRelationalCommandBuilder, String, String, IProperty)
  nameWithType: RelationalCommandBuilderExtensions.AddParameter(IRelationalCommandBuilder, String, String, IProperty)
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AddParameter(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder, System.String, System.String, Microsoft.EntityFrameworkCore.Metadata.IProperty)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/RelationalCommandBuilderExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AddParameter
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/RelationalCommandBuilderExtensions.cs
    startLine: 206
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\nAdds a parameter.\n"
  example: []
  syntax:
    content: public static IRelationalCommandBuilder AddParameter(this IRelationalCommandBuilder commandBuilder, string invariantName, string name, IProperty property)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddParameter(commandBuilder As IRelationalCommandBuilder, invariantName As String, name As String, property As IProperty) As IRelationalCommandBuilder
    parameters:
    - id: commandBuilder
      type: Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder
      description: 'The command builder. '
    - id: invariantName
      type: System.String
      description: "\nThe key that identifies this parameter. Note that <xref href=\"Microsoft.EntityFrameworkCore.Storage.IRelationalParameter\" data-throw-if-not-resolved=\"false\"></xref> just represents a\nplaceholder for a parameter and not the actual value. This is because the same command can be\nreused multiple times with different parameter values.\n"
    - id: name
      type: System.String
      description: "\nThe name to be used for the parameter when the command is executed against the database.\n"
    - id: property
      type: Microsoft.EntityFrameworkCore.Metadata.IProperty
      description: ''
    return:
      type: Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder
      description: 'The same builder instance so that multiple calls can be chained. '
  overload: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AddParameter*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AddCompositeParameter(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder,System.String,System.Action{Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder})
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AddCompositeParameter(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder,System.String,System.Action{Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder})
  id: AddCompositeParameter(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder,System.String,System.Action{Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder})
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddCompositeParameter(IRelationalCommandBuilder, String, Action<IRelationalParameterBuilder>)
  nameWithType: RelationalCommandBuilderExtensions.AddCompositeParameter(IRelationalCommandBuilder, String, Action<IRelationalParameterBuilder>)
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AddCompositeParameter(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder, System.String, System.Action<Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/RelationalCommandBuilderExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AddCompositeParameter
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/RelationalCommandBuilderExtensions.cs
    startLine: 236
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\nAdds a parameter that is ultimately represented as multiple <xref href=\"System.Data.Common.DbParameter\" data-throw-if-not-resolved=\"false\"></xref>s in the\nfinal command.\n"
  example: []
  syntax:
    content: public static IRelationalCommandBuilder AddCompositeParameter(this IRelationalCommandBuilder commandBuilder, string invariantName, Action<IRelationalParameterBuilder> buildAction)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddCompositeParameter(commandBuilder As IRelationalCommandBuilder, invariantName As String, buildAction As Action(Of IRelationalParameterBuilder)) As IRelationalCommandBuilder
    parameters:
    - id: commandBuilder
      type: Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder
      description: 'The command builder. '
    - id: invariantName
      type: System.String
      description: "\nThe key that identifies this parameter. Note that <xref href=\"Microsoft.EntityFrameworkCore.Storage.IRelationalParameter\" data-throw-if-not-resolved=\"false\"></xref> just represents a\nplaceholder for a parameter and not the actual value. This is because the same command can be\nreused multiple times with different parameter values.\n"
    - id: buildAction
      type: System.Action{Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder}
      description: "\nThe action to add the multiple parameters that this placeholder represents.\n"
    return:
      type: Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder
      description: 'The same builder instance so that multiple calls can be chained. '
  overload: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AddCompositeParameter*
  nameWithType.vb: RelationalCommandBuilderExtensions.AddCompositeParameter(IRelationalCommandBuilder, String, Action(Of IRelationalParameterBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AddCompositeParameter(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder, System.String, System.Action(Of Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder))
  name.vb: AddCompositeParameter(IRelationalCommandBuilder, String, Action(Of IRelationalParameterBuilder))
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AddPropertyParameter(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder,System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.IProperty)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AddPropertyParameter(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder,System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.IProperty)
  id: AddPropertyParameter(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder,System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.IProperty)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddPropertyParameter(IRelationalCommandBuilder, String, String, IProperty)
  nameWithType: RelationalCommandBuilderExtensions.AddPropertyParameter(IRelationalCommandBuilder, String, String, IProperty)
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AddPropertyParameter(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder, System.String, System.String, Microsoft.EntityFrameworkCore.Metadata.IProperty)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/RelationalCommandBuilderExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AddPropertyParameter
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/RelationalCommandBuilderExtensions.cs
    startLine: 266
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\nAdds a parameter.\n"
  example: []
  syntax:
    content: public static IRelationalCommandBuilder AddPropertyParameter(this IRelationalCommandBuilder commandBuilder, string invariantName, string name, IProperty property)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddPropertyParameter(commandBuilder As IRelationalCommandBuilder, invariantName As String, name As String, property As IProperty) As IRelationalCommandBuilder
    parameters:
    - id: commandBuilder
      type: Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder
      description: 'The command builder. '
    - id: invariantName
      type: System.String
      description: "\nThe key that identifies this parameter. Note that <xref href=\"Microsoft.EntityFrameworkCore.Storage.IRelationalParameter\" data-throw-if-not-resolved=\"false\"></xref> just represents a\nplaceholder for a parameter and not the actual value. This is because the same command can be\nreused multiple times with different parameter values.\n"
    - id: name
      type: System.String
      description: "\nThe name to be used for the parameter when the command is executed against the database.\n"
    - id: property
      type: Microsoft.EntityFrameworkCore.Metadata.IProperty
      description: "\nThe property that values for this parameter will come from.\n"
    return:
      type: Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder
      description: 'The same builder instance so that multiple calls can be chained. '
  overload: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AddPropertyParameter*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IRelationalCommandBuilder
  nameWithType: IRelationalCommandBuilder
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder
- uid: Microsoft.EntityFrameworkCore.Storage
  commentId: N:Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Storage
  nameWithType: Microsoft.EntityFrameworkCore.Storage
  fullName: Microsoft.EntityFrameworkCore.Storage
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.Append*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.Append
  isExternal: false
  name: Append
  nameWithType: RelationalCommandBuilderExtensions.Append
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.Append
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AppendLine*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AppendLine
  isExternal: false
  name: AppendLine
  nameWithType: RelationalCommandBuilderExtensions.AppendLine
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AppendLine
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AppendLines*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AppendLines
  isExternal: false
  name: AppendLines
  nameWithType: RelationalCommandBuilderExtensions.AppendLines
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AppendLines
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.IncrementIndent*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.IncrementIndent
  isExternal: false
  name: IncrementIndent
  nameWithType: RelationalCommandBuilderExtensions.IncrementIndent
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.IncrementIndent
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.DecrementIndent*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.DecrementIndent
  isExternal: false
  name: DecrementIndent
  nameWithType: RelationalCommandBuilderExtensions.DecrementIndent
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.DecrementIndent
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.Indent*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.Indent
  isExternal: false
  name: Indent
  nameWithType: RelationalCommandBuilderExtensions.Indent
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.Indent
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.GetLength*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.GetLength
  isExternal: false
  name: GetLength
  nameWithType: RelationalCommandBuilderExtensions.GetLength
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.GetLength
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalParameter
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IRelationalParameter
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IRelationalParameter
  nameWithType: IRelationalParameter
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalParameter
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AddParameter*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AddParameter
  isExternal: false
  name: AddParameter
  nameWithType: RelationalCommandBuilderExtensions.AddParameter
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AddParameter
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping
  commentId: T:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: RelationalTypeMapping
  nameWithType: RelationalTypeMapping
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IProperty
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IProperty
  nameWithType: IProperty
  fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: System.Data.Common.DbParameter
  commentId: T:System.Data.Common.DbParameter
  parent: System.Data.Common
  isExternal: true
  name: DbParameter
  nameWithType: DbParameter
  fullName: System.Data.Common.DbParameter
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AddCompositeParameter*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AddCompositeParameter
  isExternal: false
  name: AddCompositeParameter
  nameWithType: RelationalCommandBuilderExtensions.AddCompositeParameter
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AddCompositeParameter
- uid: System.Action{Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder}
  commentId: T:System.Action{Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder}
  parent: System
  definition: System.Action`1
  name: Action<IRelationalParameterBuilder>
  nameWithType: Action<IRelationalParameterBuilder>
  fullName: System.Action<Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder>
  nameWithType.vb: Action(Of IRelationalParameterBuilder)
  fullname.vb: System.Action(Of Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder)
  name.vb: Action(Of IRelationalParameterBuilder)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder
    name: IRelationalParameterBuilder
    nameWithType: IRelationalParameterBuilder
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder
    name: IRelationalParameterBuilder
    nameWithType: IRelationalParameterBuilder
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.Common
  commentId: N:System.Data.Common
  isExternal: false
  name: System.Data.Common
  nameWithType: System.Data.Common
  fullName: System.Data.Common
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullname.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AddPropertyParameter*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AddPropertyParameter
  isExternal: false
  name: AddPropertyParameter
  nameWithType: RelationalCommandBuilderExtensions.AddPropertyParameter
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AddPropertyParameter
