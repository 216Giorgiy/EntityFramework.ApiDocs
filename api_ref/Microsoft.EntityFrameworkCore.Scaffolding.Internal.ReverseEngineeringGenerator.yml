### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringGenerator
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringGenerator
  id: ReverseEngineeringGenerator
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  children:
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringGenerator.#ctor(ILoggerFactory,Microsoft.EntityFrameworkCore.Scaffolding.IScaffoldingModelFactory,Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory,Microsoft.EntityFrameworkCore.Scaffolding.Internal.CodeWriter)
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringGenerator.CheckOutputFiles(System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.IModel,System.Boolean)
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringGenerator.CodeWriter
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringGenerator.GenerateAsync(Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration,System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringGenerator.GetMetadataModel(Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration)
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringGenerator.Logger
  langs:
  - csharp
  - vb
  name: ReverseEngineeringGenerator
  nameWithType: ReverseEngineeringGenerator
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringGenerator
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ReverseEngineeringGenerator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ReverseEngineeringGenerator
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ReverseEngineeringGenerator.cs
    startLine: 21
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public class ReverseEngineeringGenerator
    content.vb: Public Class ReverseEngineeringGenerator
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringGenerator.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringGenerator.#ctor(ILoggerFactory,Microsoft.EntityFrameworkCore.Scaffolding.IScaffoldingModelFactory,Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory,Microsoft.EntityFrameworkCore.Scaffolding.Internal.CodeWriter)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringGenerator.#ctor(ILoggerFactory,Microsoft.EntityFrameworkCore.Scaffolding.IScaffoldingModelFactory,Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory,Microsoft.EntityFrameworkCore.Scaffolding.Internal.CodeWriter)
  id: '#ctor(ILoggerFactory,Microsoft.EntityFrameworkCore.Scaffolding.IScaffoldingModelFactory,Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory,Microsoft.EntityFrameworkCore.Scaffolding.Internal.CodeWriter)'
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringGenerator
  langs:
  - csharp
  - vb
  name: ReverseEngineeringGenerator(ILoggerFactory, IScaffoldingModelFactory, ConfigurationFactory, CodeWriter)
  nameWithType: ReverseEngineeringGenerator.ReverseEngineeringGenerator(ILoggerFactory, IScaffoldingModelFactory, ConfigurationFactory, CodeWriter)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringGenerator.ReverseEngineeringGenerator(ILoggerFactory, Microsoft.EntityFrameworkCore.Scaffolding.IScaffoldingModelFactory, Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory, Microsoft.EntityFrameworkCore.Scaffolding.Internal.CodeWriter)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ReverseEngineeringGenerator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ReverseEngineeringGenerator.cs
    startLine: 30
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public ReverseEngineeringGenerator(ILoggerFactory loggerFactory, IScaffoldingModelFactory scaffoldingModelFactory, ConfigurationFactory configurationFactory, CodeWriter codeWriter)
    content.vb: Public Sub New(loggerFactory As ILoggerFactory, scaffoldingModelFactory As IScaffoldingModelFactory, configurationFactory As ConfigurationFactory, codeWriter As CodeWriter)
    parameters:
    - id: loggerFactory
      type: ILoggerFactory
    - id: scaffoldingModelFactory
      type: Microsoft.EntityFrameworkCore.Scaffolding.IScaffoldingModelFactory
    - id: configurationFactory
      type: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory
    - id: codeWriter
      type: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CodeWriter
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringGenerator.Logger
  commentId: P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringGenerator.Logger
  id: Logger
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringGenerator
  langs:
  - csharp
  - vb
  name: Logger
  nameWithType: ReverseEngineeringGenerator.Logger
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringGenerator.Logger
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ReverseEngineeringGenerator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Logger
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ReverseEngineeringGenerator.cs
    startLine: 51
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual ILogger Logger { get; }
    content.vb: Public Overridable ReadOnly Property Logger As ILogger
    parameters: []
    return:
      type: ILogger
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringGenerator.CodeWriter
  commentId: P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringGenerator.CodeWriter
  id: CodeWriter
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringGenerator
  langs:
  - csharp
  - vb
  name: CodeWriter
  nameWithType: ReverseEngineeringGenerator.CodeWriter
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringGenerator.CodeWriter
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ReverseEngineeringGenerator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: CodeWriter
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ReverseEngineeringGenerator.cs
    startLine: 57
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual CodeWriter CodeWriter { get; }
    content.vb: Public Overridable ReadOnly Property CodeWriter As CodeWriter
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CodeWriter
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringGenerator.GenerateAsync(Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration,System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringGenerator.GenerateAsync(Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration,System.Threading.CancellationToken)
  id: GenerateAsync(Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration,System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringGenerator
  langs:
  - csharp
  - vb
  name: GenerateAsync(ReverseEngineeringConfiguration, CancellationToken)
  nameWithType: ReverseEngineeringGenerator.GenerateAsync(ReverseEngineeringConfiguration, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringGenerator.GenerateAsync(Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ReverseEngineeringGenerator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GenerateAsync
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ReverseEngineeringGenerator.cs
    startLine: 63
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual Task<ReverseEngineerFiles> GenerateAsync(ReverseEngineeringConfiguration configuration, CancellationToken cancellationToken = null)
    content.vb: Public Overridable Function GenerateAsync(configuration As ReverseEngineeringConfiguration, cancellationToken As CancellationToken = Nothing) As Task(Of ReverseEngineerFiles)
    parameters:
    - id: configuration
      type: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineerFiles}
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringGenerator.GetMetadataModel(Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringGenerator.GetMetadataModel(Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration)
  id: GetMetadataModel(Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration)
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringGenerator
  langs:
  - csharp
  - vb
  name: GetMetadataModel(ReverseEngineeringConfiguration)
  nameWithType: ReverseEngineeringGenerator.GetMetadataModel(ReverseEngineeringConfiguration)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringGenerator.GetMetadataModel(Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ReverseEngineeringGenerator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GetMetadataModel
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ReverseEngineeringGenerator.cs
    startLine: 103
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual IModel GetMetadataModel(ReverseEngineeringConfiguration configuration)
    content.vb: Public Overridable Function GetMetadataModel(configuration As ReverseEngineeringConfiguration) As IModel
    parameters:
    - id: configuration
      type: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.IModel
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringGenerator.CheckOutputFiles(System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.IModel,System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringGenerator.CheckOutputFiles(System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.IModel,System.Boolean)
  id: CheckOutputFiles(System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.IModel,System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringGenerator
  langs:
  - csharp
  - vb
  name: CheckOutputFiles(String, String, IModel, Boolean)
  nameWithType: ReverseEngineeringGenerator.CheckOutputFiles(String, String, IModel, Boolean)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringGenerator.CheckOutputFiles(System.String, System.String, Microsoft.EntityFrameworkCore.Metadata.IModel, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ReverseEngineeringGenerator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: CheckOutputFiles
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ReverseEngineeringGenerator.cs
    startLine: 123
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual void CheckOutputFiles(string outputPath, string dbContextClassName, IModel metadataModel, bool overwriteFiles)
    content.vb: Public Overridable Sub CheckOutputFiles(outputPath As String, dbContextClassName As String, metadataModel As IModel, overwriteFiles As Boolean)
    parameters:
    - id: outputPath
      type: System.String
    - id: dbContextClassName
      type: System.String
    - id: metadataModel
      type: Microsoft.EntityFrameworkCore.Metadata.IModel
    - id: overwriteFiles
      type: System.Boolean
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Scaffolding.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringGenerator.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<ReverseEngineeringGenerator, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<ReverseEngineeringGenerator, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringGenerator, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of ReverseEngineeringGenerator, TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringGenerator, TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of ReverseEngineeringGenerator, TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<ReverseEngineeringGenerator, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<ReverseEngineeringGenerator, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringGenerator, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of ReverseEngineeringGenerator, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of ReverseEngineeringGenerator, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringGenerator, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: ILoggerFactory
  isExternal: true
  name: ILoggerFactory
  nameWithType: ILoggerFactory
  fullName: ILoggerFactory
- uid: Microsoft.EntityFrameworkCore.Scaffolding.IScaffoldingModelFactory
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.IScaffoldingModelFactory
  parent: Microsoft.EntityFrameworkCore.Scaffolding
  isExternal: false
  name: IScaffoldingModelFactory
  nameWithType: IScaffoldingModelFactory
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.IScaffoldingModelFactory
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  isExternal: false
  name: ConfigurationFactory
  nameWithType: ConfigurationFactory
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CodeWriter
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CodeWriter
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  isExternal: false
  name: CodeWriter
  nameWithType: CodeWriter
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CodeWriter
- uid: Microsoft.EntityFrameworkCore.Scaffolding
  commentId: N:Microsoft.EntityFrameworkCore.Scaffolding
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Scaffolding
  nameWithType: Microsoft.EntityFrameworkCore.Scaffolding
  fullName: Microsoft.EntityFrameworkCore.Scaffolding
- uid: ILogger
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: ILogger
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  isExternal: false
  name: ReverseEngineeringConfiguration
  nameWithType: ReverseEngineeringConfiguration
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineerFiles}
  commentId: T:System.Threading.Tasks.Task{Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineerFiles}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ReverseEngineerFiles>
  nameWithType: Task<ReverseEngineerFiles>
  fullName: System.Threading.Tasks.Task<Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineerFiles>
  nameWithType.vb: Task(Of ReverseEngineerFiles)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineerFiles)
  name.vb: Task(Of ReverseEngineerFiles)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineerFiles
    name: ReverseEngineerFiles
    nameWithType: ReverseEngineerFiles
    fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineerFiles
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineerFiles
    name: ReverseEngineerFiles
    nameWithType: ReverseEngineerFiles
    fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineerFiles
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.EntityFrameworkCore.Metadata.IModel
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IModel
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IModel
  nameWithType: IModel
  fullName: Microsoft.EntityFrameworkCore.Metadata.IModel
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
