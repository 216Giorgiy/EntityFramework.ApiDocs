### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Storage.DatabaseErrorLogState
  commentId: T:Microsoft.EntityFrameworkCore.Storage.DatabaseErrorLogState
  id: DatabaseErrorLogState
  parent: Microsoft.EntityFrameworkCore.Storage
  children:
  - Microsoft.EntityFrameworkCore.Storage.DatabaseErrorLogState.#ctor(System.Type)
  - Microsoft.EntityFrameworkCore.Storage.DatabaseErrorLogState.ContextType
  langs:
  - csharp
  - vb
  name: DatabaseErrorLogState
  nameWithType: DatabaseErrorLogState
  fullName: Microsoft.EntityFrameworkCore.Storage.DatabaseErrorLogState
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Storage/DatabaseErrorLogState.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: DatabaseErrorLogState
    path: src/Microsoft.EntityFrameworkCore/Storage/DatabaseErrorLogState.cs
    startLine: 13
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\nProvided as the state to <see cref=\"!:ILogger\"></see> when logging an exception that occurred while accessing the database.\n"
  example: []
  syntax:
    content: public class DatabaseErrorLogState
    content.vb: Public Class DatabaseErrorLogState
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Storage.DatabaseErrorLogState.#ctor(System.Type)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.DatabaseErrorLogState.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: Microsoft.EntityFrameworkCore.Storage.DatabaseErrorLogState
  langs:
  - csharp
  - vb
  name: DatabaseErrorLogState(Type)
  nameWithType: DatabaseErrorLogState.DatabaseErrorLogState(Type)
  fullName: Microsoft.EntityFrameworkCore.Storage.DatabaseErrorLogState.DatabaseErrorLogState(System.Type)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Storage/DatabaseErrorLogState.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore/Storage/DatabaseErrorLogState.cs
    startLine: 19
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.EntityFrameworkCore.Storage.DatabaseErrorLogState\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public DatabaseErrorLogState(Type contextType)
    content.vb: Public Sub New(contextType As Type)
    parameters:
    - id: contextType
      type: System.Type
      description: 'The type of the derived context that the error occurred for. '
  overload: Microsoft.EntityFrameworkCore.Storage.DatabaseErrorLogState.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Storage.DatabaseErrorLogState.ContextType
  commentId: P:Microsoft.EntityFrameworkCore.Storage.DatabaseErrorLogState.ContextType
  id: ContextType
  parent: Microsoft.EntityFrameworkCore.Storage.DatabaseErrorLogState
  langs:
  - csharp
  - vb
  name: ContextType
  nameWithType: DatabaseErrorLogState.ContextType
  fullName: Microsoft.EntityFrameworkCore.Storage.DatabaseErrorLogState.ContextType
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Storage/DatabaseErrorLogState.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ContextType
    path: src/Microsoft.EntityFrameworkCore/Storage/DatabaseErrorLogState.cs
    startLine: 29
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\nGets the type of the derived context that the error occurred for.\n"
  example: []
  syntax:
    content: public virtual Type ContextType { get; }
    content.vb: Public Overridable ReadOnly Property ContextType As Type
    parameters: []
    return:
      type: System.Type
  overload: Microsoft.EntityFrameworkCore.Storage.DatabaseErrorLogState.ContextType*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
references:
- uid: Microsoft.EntityFrameworkCore.Storage
  commentId: N:Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Storage
  nameWithType: Microsoft.EntityFrameworkCore.Storage
  fullName: Microsoft.EntityFrameworkCore.Storage
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Storage.DatabaseErrorLogState
  commentId: T:Microsoft.EntityFrameworkCore.Storage.DatabaseErrorLogState
  isExternal: false
  name: DatabaseErrorLogState
  nameWithType: DatabaseErrorLogState
  fullName: Microsoft.EntityFrameworkCore.Storage.DatabaseErrorLogState
- uid: Microsoft.EntityFrameworkCore.Storage.DatabaseErrorLogState.#ctor*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.DatabaseErrorLogState.#ctor
  isExternal: false
  name: DatabaseErrorLogState
  nameWithType: DatabaseErrorLogState.DatabaseErrorLogState
  fullName: Microsoft.EntityFrameworkCore.Storage.DatabaseErrorLogState.DatabaseErrorLogState
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Microsoft.EntityFrameworkCore.Storage.DatabaseErrorLogState.ContextType*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.DatabaseErrorLogState.ContextType
  isExternal: false
  name: ContextType
  nameWithType: DatabaseErrorLogState.ContextType
  fullName: Microsoft.EntityFrameworkCore.Storage.DatabaseErrorLogState.ContextType
