### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalConventionSetBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalConventionSetBuilder
  id: RelationalConventionSetBuilder
  parent: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
  children:
  - Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalConventionSetBuilder.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext,Microsoft.EntityFrameworkCore.Internal.IDbSetFinder)
  - Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalConventionSetBuilder.AddConventions(Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet)
  - Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalConventionSetBuilder.ReplaceConvention``2(System.Collections.Generic.IList{``0},``1)
  langs:
  - csharp
  - vb
  name: RelationalConventionSetBuilder
  nameWithType: RelationalConventionSetBuilder
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalConventionSetBuilder
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Conventions/Internal/RelationalConventionSetBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: RelationalConventionSetBuilder
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Conventions/Internal/RelationalConventionSetBuilder.cs
    startLine: 17
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public abstract class RelationalConventionSetBuilder : IConventionSetBuilder'
    content.vb: >-
      Public MustInherit Class RelationalConventionSetBuilder
          Implements IConventionSetBuilder
  inheritance:
  - System.Object
  implements:
  - Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalConventionSetBuilder.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext,Microsoft.EntityFrameworkCore.Internal.IDbSetFinder)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalConventionSetBuilder.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext,Microsoft.EntityFrameworkCore.Internal.IDbSetFinder)
  id: '#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext,Microsoft.EntityFrameworkCore.Internal.IDbSetFinder)'
  parent: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalConventionSetBuilder
  langs:
  - csharp
  - vb
  name: RelationalConventionSetBuilder(IRelationalTypeMapper, ICurrentDbContext, IDbSetFinder)
  nameWithType: RelationalConventionSetBuilder.RelationalConventionSetBuilder(IRelationalTypeMapper, ICurrentDbContext, IDbSetFinder)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalConventionSetBuilder.RelationalConventionSetBuilder(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper, Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext, Microsoft.EntityFrameworkCore.Internal.IDbSetFinder)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Conventions/Internal/RelationalConventionSetBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Conventions/Internal/RelationalConventionSetBuilder.cs
    startLine: 27
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected RelationalConventionSetBuilder(IRelationalTypeMapper typeMapper, ICurrentDbContext currentContext, IDbSetFinder setFinder)
    content.vb: Protected Sub New(typeMapper As IRelationalTypeMapper, currentContext As ICurrentDbContext, setFinder As IDbSetFinder)
    parameters:
    - id: typeMapper
      type: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper
    - id: currentContext
      type: Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext
    - id: setFinder
      type: Microsoft.EntityFrameworkCore.Internal.IDbSetFinder
  overload: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalConventionSetBuilder.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalConventionSetBuilder.AddConventions(Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalConventionSetBuilder.AddConventions(Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet)
  id: AddConventions(Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet)
  parent: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalConventionSetBuilder
  langs:
  - csharp
  - vb
  name: AddConventions(ConventionSet)
  nameWithType: RelationalConventionSetBuilder.AddConventions(ConventionSet)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalConventionSetBuilder.AddConventions(Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Conventions/Internal/RelationalConventionSetBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AddConventions
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Conventions/Internal/RelationalConventionSetBuilder.cs
    startLine: 43
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual ConventionSet AddConventions(ConventionSet conventionSet)
    content.vb: Public Overridable Function AddConventions(conventionSet As ConventionSet) As ConventionSet
    parameters:
    - id: conventionSet
      type: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet
  overload: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalConventionSetBuilder.AddConventions*
  implements:
  - Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder.AddConventions(Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalConventionSetBuilder.ReplaceConvention``2(System.Collections.Generic.IList{``0},``1)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalConventionSetBuilder.ReplaceConvention``2(System.Collections.Generic.IList{``0},``1)
  id: ReplaceConvention``2(System.Collections.Generic.IList{``0},``1)
  parent: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalConventionSetBuilder
  langs:
  - csharp
  - vb
  name: ReplaceConvention<T1, T2>(IList<T1>, T2)
  nameWithType: RelationalConventionSetBuilder.ReplaceConvention<T1, T2>(IList<T1>, T2)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalConventionSetBuilder.ReplaceConvention<T1, T2>(System.Collections.Generic.IList<T1>, T2)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Conventions/Internal/RelationalConventionSetBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ReplaceConvention
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Conventions/Internal/RelationalConventionSetBuilder.cs
    startLine: 87
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'protected virtual void ReplaceConvention<T1, T2>(IList<T1> conventionsList, T2 newConvention)where T2 : T1'
    content.vb: Protected Overridable Sub ReplaceConvention(Of T1, T2 As T1)(conventionsList As IList(Of T1), newConvention As T2)
    parameters:
    - id: conventionsList
      type: System.Collections.Generic.IList{{T1}}
    - id: newConvention
      type: '{T2}'
    typeParameters:
    - id: T1
    - id: T2
  overload: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalConventionSetBuilder.ReplaceConvention*
  nameWithType.vb: RelationalConventionSetBuilder.ReplaceConvention(Of T1, T2)(IList(Of T1), T2)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalConventionSetBuilder.ReplaceConvention(Of T1, T2)(System.Collections.Generic.IList(Of T1), T2)
  name.vb: ReplaceConvention(Of T1, T2)(IList(Of T1), T2)
references:
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder
  parent: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
  isExternal: false
  name: IConventionSetBuilder
  nameWithType: IConventionSetBuilder
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalConventionSetBuilder.#ctor*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalConventionSetBuilder.#ctor
  isExternal: false
  name: RelationalConventionSetBuilder
  nameWithType: RelationalConventionSetBuilder.RelationalConventionSetBuilder
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalConventionSetBuilder.RelationalConventionSetBuilder
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IRelationalTypeMapper
  nameWithType: IRelationalTypeMapper
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper
- uid: Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext
  commentId: T:Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext
  parent: Microsoft.EntityFrameworkCore.Internal
  isExternal: false
  name: ICurrentDbContext
  nameWithType: ICurrentDbContext
  fullName: Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext
- uid: Microsoft.EntityFrameworkCore.Internal.IDbSetFinder
  commentId: T:Microsoft.EntityFrameworkCore.Internal.IDbSetFinder
  parent: Microsoft.EntityFrameworkCore.Internal
  isExternal: false
  name: IDbSetFinder
  nameWithType: IDbSetFinder
  fullName: Microsoft.EntityFrameworkCore.Internal.IDbSetFinder
- uid: Microsoft.EntityFrameworkCore.Storage
  commentId: N:Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Storage
  nameWithType: Microsoft.EntityFrameworkCore.Storage
  fullName: Microsoft.EntityFrameworkCore.Storage
- uid: Microsoft.EntityFrameworkCore.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Internal
  fullName: Microsoft.EntityFrameworkCore.Internal
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalConventionSetBuilder.AddConventions*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalConventionSetBuilder.AddConventions
  isExternal: false
  name: AddConventions
  nameWithType: RelationalConventionSetBuilder.AddConventions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalConventionSetBuilder.AddConventions
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder.AddConventions(Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder.AddConventions(Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet)
  parent: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder
  isExternal: false
  name: AddConventions(ConventionSet)
  nameWithType: IConventionSetBuilder.AddConventions(ConventionSet)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder.AddConventions(Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder.AddConventions(Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet)
    name: AddConventions
    nameWithType: IConventionSetBuilder.AddConventions
    fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder.AddConventions
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet
    name: ConventionSet
    nameWithType: ConventionSet
    fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder.AddConventions(Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet)
    name: AddConventions
    nameWithType: IConventionSetBuilder.AddConventions
    fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder.AddConventions
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet
    name: ConventionSet
    nameWithType: ConventionSet
    fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet
  parent: Microsoft.EntityFrameworkCore.Metadata.Conventions
  isExternal: false
  name: ConventionSet
  nameWithType: ConventionSet
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Conventions
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Conventions
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Conventions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalConventionSetBuilder.ReplaceConvention*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalConventionSetBuilder.ReplaceConvention
  isExternal: false
  name: ReplaceConvention<T1, T2>
  nameWithType: RelationalConventionSetBuilder.ReplaceConvention<T1, T2>
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalConventionSetBuilder.ReplaceConvention<T1, T2>
  nameWithType.vb: RelationalConventionSetBuilder.ReplaceConvention(Of T1, T2)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalConventionSetBuilder.ReplaceConvention(Of T1, T2)
  name.vb: ReplaceConvention(Of T1, T2)
- uid: System.Collections.Generic.IList{{T1}}
  commentId: T:System.Collections.Generic.IList{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<T1>
  nameWithType: IList<T1>
  fullName: System.Collections.Generic.IList<T1>
  nameWithType.vb: IList(Of T1)
  fullname.vb: System.Collections.Generic.IList(Of T1)
  name.vb: IList(Of T1)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T2}'
  commentId: '!:T2'
  definition: T2
  name: T2
  nameWithType: T2
  fullName: T2
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: T2
  isExternal: false
  name: T2
  nameWithType: T2
  fullName: T2
