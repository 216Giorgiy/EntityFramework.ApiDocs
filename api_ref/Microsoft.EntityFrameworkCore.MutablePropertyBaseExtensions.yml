### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.MutablePropertyBaseExtensions
  commentId: T:Microsoft.EntityFrameworkCore.MutablePropertyBaseExtensions
  id: MutablePropertyBaseExtensions
  parent: Microsoft.EntityFrameworkCore
  children:
  - Microsoft.EntityFrameworkCore.MutablePropertyBaseExtensions.SetField(Microsoft.EntityFrameworkCore.Metadata.IMutablePropertyBase,System.String)
  - Microsoft.EntityFrameworkCore.MutablePropertyBaseExtensions.SetPropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.IMutablePropertyBase,System.Nullable{Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode})
  langs:
  - csharp
  - vb
  name: MutablePropertyBaseExtensions
  nameWithType: MutablePropertyBaseExtensions
  fullName: Microsoft.EntityFrameworkCore.MutablePropertyBaseExtensions
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Extensions/MutablePropertyBaseExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: MutablePropertyBaseExtensions
    path: src/Microsoft.EntityFrameworkCore/Extensions/MutablePropertyBaseExtensions.cs
    startLine: 13
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore
  summary: "\nExtension methods for <xref href=\"Microsoft.EntityFrameworkCore.Metadata.IMutablePropertyBase\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static class MutablePropertyBaseExtensions
    content.vb: Public Module MutablePropertyBaseExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.EntityFrameworkCore.MutablePropertyBaseExtensions.SetField(Microsoft.EntityFrameworkCore.Metadata.IMutablePropertyBase,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.MutablePropertyBaseExtensions.SetField(Microsoft.EntityFrameworkCore.Metadata.IMutablePropertyBase,System.String)
  id: SetField(Microsoft.EntityFrameworkCore.Metadata.IMutablePropertyBase,System.String)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.MutablePropertyBaseExtensions
  langs:
  - csharp
  - vb
  name: SetField(IMutablePropertyBase, String)
  nameWithType: MutablePropertyBaseExtensions.SetField(IMutablePropertyBase, String)
  fullName: Microsoft.EntityFrameworkCore.MutablePropertyBaseExtensions.SetField(Microsoft.EntityFrameworkCore.Metadata.IMutablePropertyBase, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Extensions/MutablePropertyBaseExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: SetField
    path: src/Microsoft.EntityFrameworkCore/Extensions/MutablePropertyBaseExtensions.cs
    startLine: 34
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore
  summary: "\n<p>\n    Sets the backing field to use for this property.\n</p>\n<p>\n    Backing fields are normally found by convention as described\n    here: http://go.microsoft.com/fwlink/?LinkId=723277.\n    This method is useful for setting backing fields explicitly in cases where the\n    correct field is not found by convention.\n</p>\n<p>\n    By default, the backing field, if one is found or has been specified, is used when\n    new objects are constructed, typically when entities are queried from the database.\n    Properties are used for all other accesses. This can be changed by calling\n<xref href=\"Microsoft.EntityFrameworkCore.MutablePropertyBaseExtensions.SetPropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.IMutablePropertyBase%2cSystem.Nullable%7bMicrosoft.EntityFrameworkCore.Metadata.PropertyAccessMode%7d)\" data-throw-if-not-resolved=\"false\"></xref>.\n</p>\n"
  example: []
  syntax:
    content: public static void SetField(this IMutablePropertyBase property, string fieldName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub SetField(property As IMutablePropertyBase, fieldName As String)
    parameters:
    - id: property
      type: Microsoft.EntityFrameworkCore.Metadata.IMutablePropertyBase
      description: 'The property for which the backing field should be set. '
    - id: fieldName
      type: System.String
      description: 'The name of the field to use. '
  overload: Microsoft.EntityFrameworkCore.MutablePropertyBaseExtensions.SetField*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.MutablePropertyBaseExtensions.SetPropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.IMutablePropertyBase,System.Nullable{Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode})
  commentId: M:Microsoft.EntityFrameworkCore.MutablePropertyBaseExtensions.SetPropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.IMutablePropertyBase,System.Nullable{Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode})
  id: SetPropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.IMutablePropertyBase,System.Nullable{Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode})
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.MutablePropertyBaseExtensions
  langs:
  - csharp
  - vb
  name: SetPropertyAccessMode(IMutablePropertyBase, Nullable<PropertyAccessMode>)
  nameWithType: MutablePropertyBaseExtensions.SetPropertyAccessMode(IMutablePropertyBase, Nullable<PropertyAccessMode>)
  fullName: Microsoft.EntityFrameworkCore.MutablePropertyBaseExtensions.SetPropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.IMutablePropertyBase, System.Nullable<Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Extensions/MutablePropertyBaseExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: SetPropertyAccessMode
    path: src/Microsoft.EntityFrameworkCore/Extensions/MutablePropertyBaseExtensions.cs
    startLine: 43
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore
  summary: "\nSets the <xref href=\"Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode\" data-throw-if-not-resolved=\"false\"></xref> to use for this property.\n"
  example: []
  syntax:
    content: public static void SetPropertyAccessMode(this IMutablePropertyBase property, PropertyAccessMode? propertyAccessMode)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub SetPropertyAccessMode(property As IMutablePropertyBase, propertyAccessMode As PropertyAccessMode?)
    parameters:
    - id: property
      type: Microsoft.EntityFrameworkCore.Metadata.IMutablePropertyBase
      description: 'The property for which to set the access mode. '
    - id: propertyAccessMode
      type: System.Nullable{Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode}
      description: The <xref href="Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode" data-throw-if-not-resolved="false"></xref>, or null to clear the mode set.
  overload: Microsoft.EntityFrameworkCore.MutablePropertyBaseExtensions.SetPropertyAccessMode*
  nameWithType.vb: MutablePropertyBaseExtensions.SetPropertyAccessMode(IMutablePropertyBase, Nullable(Of PropertyAccessMode))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.EntityFrameworkCore.MutablePropertyBaseExtensions.SetPropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.IMutablePropertyBase, System.Nullable(Of Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode))
  name.vb: SetPropertyAccessMode(IMutablePropertyBase, Nullable(Of PropertyAccessMode))
references:
- uid: Microsoft.EntityFrameworkCore.Metadata.IMutablePropertyBase
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IMutablePropertyBase
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IMutablePropertyBase
  nameWithType: IMutablePropertyBase
  fullName: Microsoft.EntityFrameworkCore.Metadata.IMutablePropertyBase
- uid: Microsoft.EntityFrameworkCore
  commentId: N:Microsoft.EntityFrameworkCore
  isExternal: false
  name: Microsoft.EntityFrameworkCore
  nameWithType: Microsoft.EntityFrameworkCore
  fullName: Microsoft.EntityFrameworkCore
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.MutablePropertyBaseExtensions.SetPropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.IMutablePropertyBase,System.Nullable{Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode})
  commentId: M:Microsoft.EntityFrameworkCore.MutablePropertyBaseExtensions.SetPropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.IMutablePropertyBase,System.Nullable{Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode})
  isExternal: true
  name: SetPropertyAccessMode(IMutablePropertyBase, Nullable<PropertyAccessMode>)
  nameWithType: MutablePropertyBaseExtensions.SetPropertyAccessMode(IMutablePropertyBase, Nullable<PropertyAccessMode>)
  fullName: Microsoft.EntityFrameworkCore.MutablePropertyBaseExtensions.SetPropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.IMutablePropertyBase, System.Nullable<Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode>)
  nameWithType.vb: MutablePropertyBaseExtensions.SetPropertyAccessMode(IMutablePropertyBase, Nullable(Of PropertyAccessMode))
  fullname.vb: Microsoft.EntityFrameworkCore.MutablePropertyBaseExtensions.SetPropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.IMutablePropertyBase, System.Nullable(Of Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode))
  name.vb: SetPropertyAccessMode(IMutablePropertyBase, Nullable(Of PropertyAccessMode))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.MutablePropertyBaseExtensions.SetPropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.IMutablePropertyBase,System.Nullable{Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode})
    name: SetPropertyAccessMode
    nameWithType: MutablePropertyBaseExtensions.SetPropertyAccessMode
    fullName: Microsoft.EntityFrameworkCore.MutablePropertyBaseExtensions.SetPropertyAccessMode
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IMutablePropertyBase
    name: IMutablePropertyBase
    nameWithType: IMutablePropertyBase
    fullName: Microsoft.EntityFrameworkCore.Metadata.IMutablePropertyBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode
    name: PropertyAccessMode
    nameWithType: PropertyAccessMode
    fullName: Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.MutablePropertyBaseExtensions.SetPropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.IMutablePropertyBase,System.Nullable{Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode})
    name: SetPropertyAccessMode
    nameWithType: MutablePropertyBaseExtensions.SetPropertyAccessMode
    fullName: Microsoft.EntityFrameworkCore.MutablePropertyBaseExtensions.SetPropertyAccessMode
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IMutablePropertyBase
    name: IMutablePropertyBase
    nameWithType: IMutablePropertyBase
    fullName: Microsoft.EntityFrameworkCore.Metadata.IMutablePropertyBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode
    name: PropertyAccessMode
    nameWithType: PropertyAccessMode
    fullName: Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.MutablePropertyBaseExtensions.SetField*
  commentId: Overload:Microsoft.EntityFrameworkCore.MutablePropertyBaseExtensions.SetField
  isExternal: false
  name: SetField
  nameWithType: MutablePropertyBaseExtensions.SetField
  fullName: Microsoft.EntityFrameworkCore.MutablePropertyBaseExtensions.SetField
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: PropertyAccessMode
  nameWithType: PropertyAccessMode
  fullName: Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode
- uid: Microsoft.EntityFrameworkCore.MutablePropertyBaseExtensions.SetPropertyAccessMode*
  commentId: Overload:Microsoft.EntityFrameworkCore.MutablePropertyBaseExtensions.SetPropertyAccessMode
  isExternal: false
  name: SetPropertyAccessMode
  nameWithType: MutablePropertyBaseExtensions.SetPropertyAccessMode
  fullName: Microsoft.EntityFrameworkCore.MutablePropertyBaseExtensions.SetPropertyAccessMode
- uid: System.Nullable{Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode}
  commentId: T:System.Nullable{Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode}
  parent: System
  definition: System.Nullable`1
  name: Nullable<PropertyAccessMode>
  nameWithType: Nullable<PropertyAccessMode>
  fullName: System.Nullable<Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode>
  nameWithType.vb: Nullable(Of PropertyAccessMode)
  fullname.vb: System.Nullable(Of Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode)
  name.vb: Nullable(Of PropertyAccessMode)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode
    name: PropertyAccessMode
    nameWithType: PropertyAccessMode
    fullName: Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode
    name: PropertyAccessMode
    nameWithType: PropertyAccessMode
    fullName: Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
