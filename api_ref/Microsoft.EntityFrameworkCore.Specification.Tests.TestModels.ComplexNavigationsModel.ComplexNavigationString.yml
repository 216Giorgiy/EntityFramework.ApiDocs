### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ComplexNavigationsModel.ComplexNavigationString
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ComplexNavigationsModel.ComplexNavigationString
  id: ComplexNavigationString
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ComplexNavigationsModel
  children:
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ComplexNavigationsModel.ComplexNavigationString.DefaultText
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ComplexNavigationsModel.ComplexNavigationString.Globalizations
  langs:
  - csharp
  - vb
  name: ComplexNavigationString
  nameWithType: ComplexNavigationString
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ComplexNavigationsModel.ComplexNavigationString
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/ComplexNavigationsModel/ComplexNavigationString.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ComplexNavigationString
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/ComplexNavigationsModel/ComplexNavigationString.cs
    startLine: 7
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ComplexNavigationsModel
  syntax:
    content: public class ComplexNavigationString
    content.vb: Public Class ComplexNavigationString
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ComplexNavigationsModel.ComplexNavigationString.DefaultText
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ComplexNavigationsModel.ComplexNavigationString.DefaultText
  id: DefaultText
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ComplexNavigationsModel.ComplexNavigationString
  langs:
  - csharp
  - vb
  name: DefaultText
  nameWithType: ComplexNavigationString.DefaultText
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ComplexNavigationsModel.ComplexNavigationString.DefaultText
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/ComplexNavigationsModel/ComplexNavigationString.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: DefaultText
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/ComplexNavigationsModel/ComplexNavigationString.cs
    startLine: 9
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ComplexNavigationsModel
  syntax:
    content: public string DefaultText { get; set; }
    content.vb: Public Property DefaultText As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ComplexNavigationsModel.ComplexNavigationString.DefaultText*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ComplexNavigationsModel.ComplexNavigationString.Globalizations
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ComplexNavigationsModel.ComplexNavigationString.Globalizations
  id: Globalizations
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ComplexNavigationsModel.ComplexNavigationString
  langs:
  - csharp
  - vb
  name: Globalizations
  nameWithType: ComplexNavigationString.Globalizations
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ComplexNavigationsModel.ComplexNavigationString.Globalizations
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/ComplexNavigationsModel/ComplexNavigationString.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Globalizations
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/ComplexNavigationsModel/ComplexNavigationString.cs
    startLine: 10
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ComplexNavigationsModel
  syntax:
    content: public IList<ComplexNavigationGlobalization> Globalizations { get; set; }
    content.vb: Public Property Globalizations As IList(Of ComplexNavigationGlobalization)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ComplexNavigationsModel.ComplexNavigationGlobalization}
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ComplexNavigationsModel.ComplexNavigationString.Globalizations*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ComplexNavigationsModel
  commentId: N:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ComplexNavigationsModel
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ComplexNavigationsModel
  nameWithType: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ComplexNavigationsModel
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ComplexNavigationsModel
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ComplexNavigationsModel.ComplexNavigationString.DefaultText*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ComplexNavigationsModel.ComplexNavigationString.DefaultText
  isExternal: false
  name: DefaultText
  nameWithType: ComplexNavigationString.DefaultText
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ComplexNavigationsModel.ComplexNavigationString.DefaultText
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ComplexNavigationsModel.ComplexNavigationString.Globalizations*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ComplexNavigationsModel.ComplexNavigationString.Globalizations
  isExternal: false
  name: Globalizations
  nameWithType: ComplexNavigationString.Globalizations
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ComplexNavigationsModel.ComplexNavigationString.Globalizations
- uid: System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ComplexNavigationsModel.ComplexNavigationGlobalization}
  commentId: T:System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ComplexNavigationsModel.ComplexNavigationGlobalization}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ComplexNavigationGlobalization>
  nameWithType: IList<ComplexNavigationGlobalization>
  fullName: System.Collections.Generic.IList<Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ComplexNavigationsModel.ComplexNavigationGlobalization>
  nameWithType.vb: IList(Of ComplexNavigationGlobalization)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ComplexNavigationsModel.ComplexNavigationGlobalization)
  name.vb: IList(Of ComplexNavigationGlobalization)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ComplexNavigationsModel.ComplexNavigationGlobalization
    name: ComplexNavigationGlobalization
    nameWithType: ComplexNavigationGlobalization
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ComplexNavigationsModel.ComplexNavigationGlobalization
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ComplexNavigationsModel.ComplexNavigationGlobalization
    name: ComplexNavigationGlobalization
    nameWithType: ComplexNavigationGlobalization
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ComplexNavigationsModel.ComplexNavigationGlobalization
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
