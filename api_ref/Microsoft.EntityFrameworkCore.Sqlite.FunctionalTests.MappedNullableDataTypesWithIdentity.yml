### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappedNullableDataTypesWithIdentity
  commentId: T:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappedNullableDataTypesWithIdentity
  id: MappedNullableDataTypesWithIdentity
  parent: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  children:
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappedNullableDataTypesWithIdentity.AltId
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappedNullableDataTypesWithIdentity.Blob
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappedNullableDataTypesWithIdentity.Id
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappedNullableDataTypesWithIdentity.Int
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappedNullableDataTypesWithIdentity.Integer
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappedNullableDataTypesWithIdentity.Real
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappedNullableDataTypesWithIdentity.SomeString
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappedNullableDataTypesWithIdentity.Text
  langs:
  - csharp
  - vb
  name: MappedNullableDataTypesWithIdentity
  nameWithType: MappedNullableDataTypesWithIdentity
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappedNullableDataTypesWithIdentity
  type: Class
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/BuiltInDataTypesSqliteFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: MappedNullableDataTypesWithIdentity
    path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/BuiltInDataTypesSqliteFixture.cs
    startLine: 214
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  syntax:
    content: public class MappedNullableDataTypesWithIdentity
    content.vb: Public Class MappedNullableDataTypesWithIdentity
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappedNullableDataTypesWithIdentity.Id
  commentId: P:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappedNullableDataTypesWithIdentity.Id
  id: Id
  parent: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappedNullableDataTypesWithIdentity
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: MappedNullableDataTypesWithIdentity.Id
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappedNullableDataTypesWithIdentity.Id
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/BuiltInDataTypesSqliteFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Id
    path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/BuiltInDataTypesSqliteFixture.cs
    startLine: 216
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  syntax:
    content: public int Id { get; set; }
    content.vb: Public Property Id As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappedNullableDataTypesWithIdentity.AltId
  commentId: P:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappedNullableDataTypesWithIdentity.AltId
  id: AltId
  parent: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappedNullableDataTypesWithIdentity
  langs:
  - csharp
  - vb
  name: AltId
  nameWithType: MappedNullableDataTypesWithIdentity.AltId
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappedNullableDataTypesWithIdentity.AltId
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/BuiltInDataTypesSqliteFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AltId
    path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/BuiltInDataTypesSqliteFixture.cs
    startLine: 217
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  syntax:
    content: public int AltId { get; set; }
    content.vb: Public Property AltId As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappedNullableDataTypesWithIdentity.Integer
  commentId: P:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappedNullableDataTypesWithIdentity.Integer
  id: Integer
  parent: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappedNullableDataTypesWithIdentity
  langs:
  - csharp
  - vb
  name: Integer
  nameWithType: MappedNullableDataTypesWithIdentity.Integer
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappedNullableDataTypesWithIdentity.Integer
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/BuiltInDataTypesSqliteFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Integer
    path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/BuiltInDataTypesSqliteFixture.cs
    startLine: 218
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  syntax:
    content: public long ? Integer { get; set; }
    content.vb: Public Property Integer As Long?
    parameters: []
    return:
      type: System.Nullable{System.Int64}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappedNullableDataTypesWithIdentity.Real
  commentId: P:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappedNullableDataTypesWithIdentity.Real
  id: Real
  parent: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappedNullableDataTypesWithIdentity
  langs:
  - csharp
  - vb
  name: Real
  nameWithType: MappedNullableDataTypesWithIdentity.Real
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappedNullableDataTypesWithIdentity.Real
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/BuiltInDataTypesSqliteFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Real
    path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/BuiltInDataTypesSqliteFixture.cs
    startLine: 219
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  syntax:
    content: public double ? Real { get; set; }
    content.vb: Public Property Real As Double?
    parameters: []
    return:
      type: System.Nullable{System.Double}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappedNullableDataTypesWithIdentity.Text
  commentId: P:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappedNullableDataTypesWithIdentity.Text
  id: Text
  parent: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappedNullableDataTypesWithIdentity
  langs:
  - csharp
  - vb
  name: Text
  nameWithType: MappedNullableDataTypesWithIdentity.Text
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappedNullableDataTypesWithIdentity.Text
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/BuiltInDataTypesSqliteFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Text
    path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/BuiltInDataTypesSqliteFixture.cs
    startLine: 220
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  syntax:
    content: public string Text { get; set; }
    content.vb: Public Property Text As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappedNullableDataTypesWithIdentity.Blob
  commentId: P:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappedNullableDataTypesWithIdentity.Blob
  id: Blob
  parent: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappedNullableDataTypesWithIdentity
  langs:
  - csharp
  - vb
  name: Blob
  nameWithType: MappedNullableDataTypesWithIdentity.Blob
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappedNullableDataTypesWithIdentity.Blob
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/BuiltInDataTypesSqliteFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Blob
    path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/BuiltInDataTypesSqliteFixture.cs
    startLine: 221
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  syntax:
    content: public byte[] Blob { get; set; }
    content.vb: Public Property Blob As Byte()
    parameters: []
    return:
      type: System.Byte[]
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappedNullableDataTypesWithIdentity.SomeString
  commentId: P:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappedNullableDataTypesWithIdentity.SomeString
  id: SomeString
  parent: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappedNullableDataTypesWithIdentity
  langs:
  - csharp
  - vb
  name: SomeString
  nameWithType: MappedNullableDataTypesWithIdentity.SomeString
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappedNullableDataTypesWithIdentity.SomeString
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/BuiltInDataTypesSqliteFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: SomeString
    path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/BuiltInDataTypesSqliteFixture.cs
    startLine: 222
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  syntax:
    content: public string SomeString { get; set; }
    content.vb: Public Property SomeString As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappedNullableDataTypesWithIdentity.Int
  commentId: P:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappedNullableDataTypesWithIdentity.Int
  id: Int
  parent: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappedNullableDataTypesWithIdentity
  langs:
  - csharp
  - vb
  name: Int
  nameWithType: MappedNullableDataTypesWithIdentity.Int
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappedNullableDataTypesWithIdentity.Int
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/BuiltInDataTypesSqliteFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Int
    path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/BuiltInDataTypesSqliteFixture.cs
    startLine: 223
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  syntax:
    content: public int ? Int { get; set; }
    content.vb: Public Property Int As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  commentId: N:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  nameWithType: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Nullable{System.Int64}
  commentId: T:System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullname.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Double}
  commentId: T:System.Nullable{System.Double}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Double>
  nameWithType: Nullable<Double>
  fullName: System.Nullable<System.Double>
  nameWithType.vb: Nullable(Of Double)
  fullname.vb: System.Nullable(Of System.Double)
  name.vb: Nullable(Of Double)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
