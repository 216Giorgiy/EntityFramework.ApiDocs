### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.Update.UpdateSqlGeneratorTestBase.Duck
  commentId: T:Microsoft.EntityFrameworkCore.Relational.Tests.Update.UpdateSqlGeneratorTestBase.Duck
  id: UpdateSqlGeneratorTestBase.Duck
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.Update
  children:
  - Microsoft.EntityFrameworkCore.Relational.Tests.Update.UpdateSqlGeneratorTestBase.Duck.Computed
  - Microsoft.EntityFrameworkCore.Relational.Tests.Update.UpdateSqlGeneratorTestBase.Duck.ConcurrencyToken
  - Microsoft.EntityFrameworkCore.Relational.Tests.Update.UpdateSqlGeneratorTestBase.Duck.Id
  - Microsoft.EntityFrameworkCore.Relational.Tests.Update.UpdateSqlGeneratorTestBase.Duck.Name
  - Microsoft.EntityFrameworkCore.Relational.Tests.Update.UpdateSqlGeneratorTestBase.Duck.Quacks
  langs:
  - csharp
  - vb
  name: UpdateSqlGeneratorTestBase.Duck
  nameWithType: UpdateSqlGeneratorTestBase.Duck
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Update.UpdateSqlGeneratorTestBase.Duck
  type: Class
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Update/UpdateSqlGeneratorTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Duck
    path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Update/UpdateSqlGeneratorTestBase.cs
    startLine: 414
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Tests.Update
  syntax:
    content: protected class Duck
    content.vb: Protected Class Duck
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - protected
  - class
  modifiers.vb:
  - Protected
  - Class
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.Update.UpdateSqlGeneratorTestBase.Duck.Id
  commentId: P:Microsoft.EntityFrameworkCore.Relational.Tests.Update.UpdateSqlGeneratorTestBase.Duck.Id
  id: Id
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.Update.UpdateSqlGeneratorTestBase.Duck
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: UpdateSqlGeneratorTestBase.Duck.Id
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Update.UpdateSqlGeneratorTestBase.Duck.Id
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Update/UpdateSqlGeneratorTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Id
    path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Update/UpdateSqlGeneratorTestBase.cs
    startLine: 416
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Tests.Update
  syntax:
    content: public int Id { get; set; }
    content.vb: Public Property Id As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.Update.UpdateSqlGeneratorTestBase.Duck.Name
  commentId: P:Microsoft.EntityFrameworkCore.Relational.Tests.Update.UpdateSqlGeneratorTestBase.Duck.Name
  id: Name
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.Update.UpdateSqlGeneratorTestBase.Duck
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: UpdateSqlGeneratorTestBase.Duck.Name
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Update.UpdateSqlGeneratorTestBase.Duck.Name
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Update/UpdateSqlGeneratorTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Name
    path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Update/UpdateSqlGeneratorTestBase.cs
    startLine: 417
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Tests.Update
  syntax:
    content: public string Name { get; set; }
    content.vb: Public Property Name As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.Update.UpdateSqlGeneratorTestBase.Duck.Quacks
  commentId: P:Microsoft.EntityFrameworkCore.Relational.Tests.Update.UpdateSqlGeneratorTestBase.Duck.Quacks
  id: Quacks
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.Update.UpdateSqlGeneratorTestBase.Duck
  langs:
  - csharp
  - vb
  name: Quacks
  nameWithType: UpdateSqlGeneratorTestBase.Duck.Quacks
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Update.UpdateSqlGeneratorTestBase.Duck.Quacks
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Update/UpdateSqlGeneratorTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Quacks
    path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Update/UpdateSqlGeneratorTestBase.cs
    startLine: 418
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Tests.Update
  syntax:
    content: public int Quacks { get; set; }
    content.vb: Public Property Quacks As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.Update.UpdateSqlGeneratorTestBase.Duck.Computed
  commentId: P:Microsoft.EntityFrameworkCore.Relational.Tests.Update.UpdateSqlGeneratorTestBase.Duck.Computed
  id: Computed
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.Update.UpdateSqlGeneratorTestBase.Duck
  langs:
  - csharp
  - vb
  name: Computed
  nameWithType: UpdateSqlGeneratorTestBase.Duck.Computed
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Update.UpdateSqlGeneratorTestBase.Duck.Computed
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Update/UpdateSqlGeneratorTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Computed
    path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Update/UpdateSqlGeneratorTestBase.cs
    startLine: 419
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Tests.Update
  syntax:
    content: public Guid Computed { get; set; }
    content.vb: Public Property Computed As Guid
    parameters: []
    return:
      type: System.Guid
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.Update.UpdateSqlGeneratorTestBase.Duck.ConcurrencyToken
  commentId: P:Microsoft.EntityFrameworkCore.Relational.Tests.Update.UpdateSqlGeneratorTestBase.Duck.ConcurrencyToken
  id: ConcurrencyToken
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.Update.UpdateSqlGeneratorTestBase.Duck
  langs:
  - csharp
  - vb
  name: ConcurrencyToken
  nameWithType: UpdateSqlGeneratorTestBase.Duck.ConcurrencyToken
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Update.UpdateSqlGeneratorTestBase.Duck.ConcurrencyToken
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Update/UpdateSqlGeneratorTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ConcurrencyToken
    path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Update/UpdateSqlGeneratorTestBase.cs
    startLine: 420
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Tests.Update
  syntax:
    content: public byte[] ConcurrencyToken { get; set; }
    content.vb: Public Property ConcurrencyToken As Byte()
    parameters: []
    return:
      type: System.Byte[]
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.Update
  commentId: N:Microsoft.EntityFrameworkCore.Relational.Tests.Update
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Relational.Tests.Update
  nameWithType: Microsoft.EntityFrameworkCore.Relational.Tests.Update
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Update
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
