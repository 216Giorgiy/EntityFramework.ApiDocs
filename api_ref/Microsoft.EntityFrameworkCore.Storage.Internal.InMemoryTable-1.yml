### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTable`1
  commentId: T:Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTable`1
  id: InMemoryTable`1
  parent: Microsoft.EntityFrameworkCore.Storage.Internal
  children:
  - Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTable`1.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory{`0})
  - Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTable`1.Create(Microsoft.EntityFrameworkCore.Update.IUpdateEntry)
  - Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTable`1.Delete(Microsoft.EntityFrameworkCore.Update.IUpdateEntry)
  - Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTable`1.SnapshotRows
  - Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTable`1.Update(Microsoft.EntityFrameworkCore.Update.IUpdateEntry)
  langs:
  - csharp
  - vb
  name: InMemoryTable<TKey>
  nameWithType: InMemoryTable<TKey>
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTable<TKey>
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/InMemoryTable.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: InMemoryTable
    path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/InMemoryTable.cs
    startLine: 16
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public class InMemoryTable<TKey> : IInMemoryTable'
    content.vb: >-
      Public Class InMemoryTable(Of TKey)
          Implements IInMemoryTable
    typeParameters:
    - id: TKey
  inheritance:
  - System.Object
  implements:
  - Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryTable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTable`1.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  nameWithType.vb: InMemoryTable(Of TKey)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTable(Of TKey)
  name.vb: InMemoryTable(Of TKey)
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTable`1.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory{`0})
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTable`1.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory{`0})
  id: '#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory{`0})'
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTable`1
  langs:
  - csharp
  - vb
  name: InMemoryTable(IPrincipalKeyValueFactory<TKey>)
  nameWithType: InMemoryTable<TKey>.InMemoryTable(IPrincipalKeyValueFactory<TKey>)
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTable<TKey>.InMemoryTable(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory<TKey>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/InMemoryTable.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/InMemoryTable.cs
    startLine: 25
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public InMemoryTable(IPrincipalKeyValueFactory<TKey> keyValueFactory)
    content.vb: Public Sub New(keyValueFactory As IPrincipalKeyValueFactory(Of TKey))
    parameters:
    - id: keyValueFactory
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory{{TKey}}
  nameWithType.vb: InMemoryTable(Of TKey).InMemoryTable(IPrincipalKeyValueFactory(Of TKey))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTable(Of TKey).InMemoryTable(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory(Of TKey))
  name.vb: InMemoryTable(IPrincipalKeyValueFactory(Of TKey))
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTable`1.SnapshotRows
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTable`1.SnapshotRows
  id: SnapshotRows
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTable`1
  langs:
  - csharp
  - vb
  name: SnapshotRows()
  nameWithType: InMemoryTable<TKey>.SnapshotRows()
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTable<TKey>.SnapshotRows()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/InMemoryTable.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: SnapshotRows
    path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/InMemoryTable.cs
    startLine: 35
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual IReadOnlyList<object[]> SnapshotRows()
    content.vb: Public Overridable Function SnapshotRows As IReadOnlyList(Of Object())
    return:
      type: System.Collections.Generic.IReadOnlyList{System.Object[]}
  implements:
  - Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryTable.SnapshotRows
  nameWithType.vb: InMemoryTable(Of TKey).SnapshotRows()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTable(Of TKey).SnapshotRows()
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTable`1.Create(Microsoft.EntityFrameworkCore.Update.IUpdateEntry)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTable`1.Create(Microsoft.EntityFrameworkCore.Update.IUpdateEntry)
  id: Create(Microsoft.EntityFrameworkCore.Update.IUpdateEntry)
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTable`1
  langs:
  - csharp
  - vb
  name: Create(IUpdateEntry)
  nameWithType: InMemoryTable<TKey>.Create(IUpdateEntry)
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTable<TKey>.Create(Microsoft.EntityFrameworkCore.Update.IUpdateEntry)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/InMemoryTable.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Create
    path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/InMemoryTable.cs
    startLine: 42
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual void Create(IUpdateEntry entry)
    content.vb: Public Overridable Sub Create(entry As IUpdateEntry)
    parameters:
    - id: entry
      type: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
  implements:
  - Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryTable.Create(Microsoft.EntityFrameworkCore.Update.IUpdateEntry)
  nameWithType.vb: InMemoryTable(Of TKey).Create(IUpdateEntry)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTable(Of TKey).Create(Microsoft.EntityFrameworkCore.Update.IUpdateEntry)
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTable`1.Delete(Microsoft.EntityFrameworkCore.Update.IUpdateEntry)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTable`1.Delete(Microsoft.EntityFrameworkCore.Update.IUpdateEntry)
  id: Delete(Microsoft.EntityFrameworkCore.Update.IUpdateEntry)
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTable`1
  langs:
  - csharp
  - vb
  name: Delete(IUpdateEntry)
  nameWithType: InMemoryTable<TKey>.Delete(IUpdateEntry)
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTable<TKey>.Delete(Microsoft.EntityFrameworkCore.Update.IUpdateEntry)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/InMemoryTable.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Delete
    path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/InMemoryTable.cs
    startLine: 49
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual void Delete(IUpdateEntry entry)
    content.vb: Public Overridable Sub Delete(entry As IUpdateEntry)
    parameters:
    - id: entry
      type: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
  implements:
  - Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryTable.Delete(Microsoft.EntityFrameworkCore.Update.IUpdateEntry)
  nameWithType.vb: InMemoryTable(Of TKey).Delete(IUpdateEntry)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTable(Of TKey).Delete(Microsoft.EntityFrameworkCore.Update.IUpdateEntry)
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTable`1.Update(Microsoft.EntityFrameworkCore.Update.IUpdateEntry)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTable`1.Update(Microsoft.EntityFrameworkCore.Update.IUpdateEntry)
  id: Update(Microsoft.EntityFrameworkCore.Update.IUpdateEntry)
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTable`1
  langs:
  - csharp
  - vb
  name: Update(IUpdateEntry)
  nameWithType: InMemoryTable<TKey>.Update(IUpdateEntry)
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTable<TKey>.Update(Microsoft.EntityFrameworkCore.Update.IUpdateEntry)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/InMemoryTable.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Update
    path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/InMemoryTable.cs
    startLine: 67
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual void Update(IUpdateEntry entry)
    content.vb: Public Overridable Sub Update(entry As IUpdateEntry)
    parameters:
    - id: entry
      type: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
  implements:
  - Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryTable.Update(Microsoft.EntityFrameworkCore.Update.IUpdateEntry)
  nameWithType.vb: InMemoryTable(Of TKey).Update(IUpdateEntry)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTable(Of TKey).Update(Microsoft.EntityFrameworkCore.Update.IUpdateEntry)
references:
- uid: Microsoft.EntityFrameworkCore.Storage.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Storage.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Storage.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Storage.Internal
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryTable
  commentId: T:Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryTable
  parent: Microsoft.EntityFrameworkCore.Storage.Internal
  isExternal: false
  name: IInMemoryTable
  nameWithType: IInMemoryTable
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryTable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTable`1.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<InMemoryTable<TKey>, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<InMemoryTable<TKey>, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTable<TKey>, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of InMemoryTable(Of TKey), TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTable(Of TKey), TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of InMemoryTable(Of TKey), TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<InMemoryTable<TKey>, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<InMemoryTable<TKey>, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTable<TKey>, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of InMemoryTable(Of TKey), TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of InMemoryTable(Of TKey), TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryTable(Of TKey), TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory{{TKey}}
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory{`0}
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  definition: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory`1
  name: IPrincipalKeyValueFactory<TKey>
  nameWithType: IPrincipalKeyValueFactory<TKey>
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory<TKey>
  nameWithType.vb: IPrincipalKeyValueFactory(Of TKey)
  fullname.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory(Of TKey)
  name.vb: IPrincipalKeyValueFactory(Of TKey)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory`1
    name: IPrincipalKeyValueFactory
    nameWithType: IPrincipalKeyValueFactory
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory`1
    name: IPrincipalKeyValueFactory
    nameWithType: IPrincipalKeyValueFactory
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory`1
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory`1
  isExternal: false
  name: IPrincipalKeyValueFactory<TKey>
  nameWithType: IPrincipalKeyValueFactory<TKey>
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory<TKey>
  nameWithType.vb: IPrincipalKeyValueFactory(Of TKey)
  fullname.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory(Of TKey)
  name.vb: IPrincipalKeyValueFactory(Of TKey)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory`1
    name: IPrincipalKeyValueFactory
    nameWithType: IPrincipalKeyValueFactory
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory`1
    name: IPrincipalKeyValueFactory
    nameWithType: IPrincipalKeyValueFactory
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  commentId: N:Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  nameWithType: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryTable.SnapshotRows
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryTable.SnapshotRows
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryTable
  isExternal: false
  name: SnapshotRows()
  nameWithType: IInMemoryTable.SnapshotRows()
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryTable.SnapshotRows()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryTable.SnapshotRows
    name: SnapshotRows
    nameWithType: IInMemoryTable.SnapshotRows
    fullName: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryTable.SnapshotRows
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryTable.SnapshotRows
    name: SnapshotRows
    nameWithType: IInMemoryTable.SnapshotRows
    fullName: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryTable.SnapshotRows
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList{System.Object[]}
  commentId: T:System.Collections.Generic.IReadOnlyList{System.Object[]}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<Object[]>
  nameWithType: IReadOnlyList<Object[]>
  fullName: System.Collections.Generic.IReadOnlyList<System.Object[]>
  nameWithType.vb: IReadOnlyList(Of Object())
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of System.Object())
  name.vb: IReadOnlyList(Of Object())
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryTable.Create(Microsoft.EntityFrameworkCore.Update.IUpdateEntry)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryTable.Create(Microsoft.EntityFrameworkCore.Update.IUpdateEntry)
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryTable
  isExternal: false
  name: Create(IUpdateEntry)
  nameWithType: IInMemoryTable.Create(IUpdateEntry)
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryTable.Create(Microsoft.EntityFrameworkCore.Update.IUpdateEntry)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryTable.Create(Microsoft.EntityFrameworkCore.Update.IUpdateEntry)
    name: Create
    nameWithType: IInMemoryTable.Create
    fullName: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryTable.Create
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
    name: IUpdateEntry
    nameWithType: IUpdateEntry
    fullName: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryTable.Create(Microsoft.EntityFrameworkCore.Update.IUpdateEntry)
    name: Create
    nameWithType: IInMemoryTable.Create
    fullName: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryTable.Create
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
    name: IUpdateEntry
    nameWithType: IUpdateEntry
    fullName: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
  commentId: T:Microsoft.EntityFrameworkCore.Update.IUpdateEntry
  parent: Microsoft.EntityFrameworkCore.Update
  isExternal: false
  name: IUpdateEntry
  nameWithType: IUpdateEntry
  fullName: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
- uid: Microsoft.EntityFrameworkCore.Update
  commentId: N:Microsoft.EntityFrameworkCore.Update
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Update
  nameWithType: Microsoft.EntityFrameworkCore.Update
  fullName: Microsoft.EntityFrameworkCore.Update
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryTable.Delete(Microsoft.EntityFrameworkCore.Update.IUpdateEntry)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryTable.Delete(Microsoft.EntityFrameworkCore.Update.IUpdateEntry)
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryTable
  isExternal: false
  name: Delete(IUpdateEntry)
  nameWithType: IInMemoryTable.Delete(IUpdateEntry)
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryTable.Delete(Microsoft.EntityFrameworkCore.Update.IUpdateEntry)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryTable.Delete(Microsoft.EntityFrameworkCore.Update.IUpdateEntry)
    name: Delete
    nameWithType: IInMemoryTable.Delete
    fullName: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryTable.Delete
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
    name: IUpdateEntry
    nameWithType: IUpdateEntry
    fullName: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryTable.Delete(Microsoft.EntityFrameworkCore.Update.IUpdateEntry)
    name: Delete
    nameWithType: IInMemoryTable.Delete
    fullName: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryTable.Delete
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
    name: IUpdateEntry
    nameWithType: IUpdateEntry
    fullName: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryTable.Update(Microsoft.EntityFrameworkCore.Update.IUpdateEntry)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryTable.Update(Microsoft.EntityFrameworkCore.Update.IUpdateEntry)
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryTable
  isExternal: false
  name: Update(IUpdateEntry)
  nameWithType: IInMemoryTable.Update(IUpdateEntry)
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryTable.Update(Microsoft.EntityFrameworkCore.Update.IUpdateEntry)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryTable.Update(Microsoft.EntityFrameworkCore.Update.IUpdateEntry)
    name: Update
    nameWithType: IInMemoryTable.Update
    fullName: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryTable.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
    name: IUpdateEntry
    nameWithType: IUpdateEntry
    fullName: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryTable.Update(Microsoft.EntityFrameworkCore.Update.IUpdateEntry)
    name: Update
    nameWithType: IInMemoryTable.Update
    fullName: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryTable.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
    name: IUpdateEntry
    nameWithType: IUpdateEntry
    fullName: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
  - name: )
    nameWithType: )
    fullName: )
