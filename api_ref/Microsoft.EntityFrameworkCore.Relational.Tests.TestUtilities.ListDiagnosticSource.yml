### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities.ListDiagnosticSource
  commentId: T:Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities.ListDiagnosticSource
  id: ListDiagnosticSource
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities
  children:
  - Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities.ListDiagnosticSource.#ctor(System.Collections.Generic.List{System.Tuple{System.String,System.Object}})
  - Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities.ListDiagnosticSource.DiagnosticList
  - Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities.ListDiagnosticSource.IsEnabled(System.String)
  - Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities.ListDiagnosticSource.Write(System.String,System.Object)
  langs:
  - csharp
  - vb
  name: ListDiagnosticSource
  nameWithType: ListDiagnosticSource
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities.ListDiagnosticSource
  type: Class
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Relational.Tests/TestUtilities/ListDiagnosticSource.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ListDiagnosticSource
    path: test/Microsoft.EntityFrameworkCore.Relational.Tests/TestUtilities/ListDiagnosticSource.cs
    startLine: 9
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities
  syntax:
    content: 'public class ListDiagnosticSource : DiagnosticSource'
    content.vb: >-
      Public Class ListDiagnosticSource
          Inherits DiagnosticSource
  inheritance:
  - System.Object
  - System.Diagnostics.DiagnosticSource
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities.ListDiagnosticSource.#ctor(System.Collections.Generic.List{System.Tuple{System.String,System.Object}})
  commentId: M:Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities.ListDiagnosticSource.#ctor(System.Collections.Generic.List{System.Tuple{System.String,System.Object}})
  id: '#ctor(System.Collections.Generic.List{System.Tuple{System.String,System.Object}})'
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities.ListDiagnosticSource
  langs:
  - csharp
  - vb
  name: ListDiagnosticSource(List<Tuple<String, Object>>)
  nameWithType: ListDiagnosticSource.ListDiagnosticSource(List<Tuple<String, Object>>)
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities.ListDiagnosticSource.ListDiagnosticSource(System.Collections.Generic.List<System.Tuple<System.String, System.Object>>)
  type: Constructor
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Relational.Tests/TestUtilities/ListDiagnosticSource.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: test/Microsoft.EntityFrameworkCore.Relational.Tests/TestUtilities/ListDiagnosticSource.cs
    startLine: 11
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities
  syntax:
    content: public ListDiagnosticSource(List<Tuple<string, object>> diagnosticList)
    content.vb: Public Sub New(diagnosticList As List(Of Tuple(Of String, Object)))
    parameters:
    - id: diagnosticList
      type: System.Collections.Generic.List{System.Tuple{System.String,System.Object}}
  nameWithType.vb: ListDiagnosticSource.ListDiagnosticSource(List(Of Tuple(Of String, Object)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities.ListDiagnosticSource.ListDiagnosticSource(System.Collections.Generic.List(Of System.Tuple(Of System.String, System.Object)))
  name.vb: ListDiagnosticSource(List(Of Tuple(Of String, Object)))
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities.ListDiagnosticSource.DiagnosticList
  commentId: P:Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities.ListDiagnosticSource.DiagnosticList
  id: DiagnosticList
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities.ListDiagnosticSource
  langs:
  - csharp
  - vb
  name: DiagnosticList
  nameWithType: ListDiagnosticSource.DiagnosticList
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities.ListDiagnosticSource.DiagnosticList
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Relational.Tests/TestUtilities/ListDiagnosticSource.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: DiagnosticList
    path: test/Microsoft.EntityFrameworkCore.Relational.Tests/TestUtilities/ListDiagnosticSource.cs
    startLine: 16
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities
  syntax:
    content: public List<Tuple<string, object>> DiagnosticList { get; }
    content.vb: Public ReadOnly Property DiagnosticList As List(Of Tuple(Of String, Object))
    parameters: []
    return:
      type: System.Collections.Generic.List{System.Tuple{System.String,System.Object}}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities.ListDiagnosticSource.Write(System.String,System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities.ListDiagnosticSource.Write(System.String,System.Object)
  id: Write(System.String,System.Object)
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities.ListDiagnosticSource
  langs:
  - csharp
  - vb
  name: Write(String, Object)
  nameWithType: ListDiagnosticSource.Write(String, Object)
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities.ListDiagnosticSource.Write(System.String, System.Object)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Relational.Tests/TestUtilities/ListDiagnosticSource.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Write
    path: test/Microsoft.EntityFrameworkCore.Relational.Tests/TestUtilities/ListDiagnosticSource.cs
    startLine: 18
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities
  syntax:
    content: public override void Write(string diagnosticName, object parameters)
    content.vb: Public Overrides Sub Write(diagnosticName As String, parameters As Object)
    parameters:
    - id: diagnosticName
      type: System.String
    - id: parameters
      type: System.Object
  overridden: System.Diagnostics.DiagnosticSource.Write(System.String,System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities.ListDiagnosticSource.IsEnabled(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities.ListDiagnosticSource.IsEnabled(System.String)
  id: IsEnabled(System.String)
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities.ListDiagnosticSource
  langs:
  - csharp
  - vb
  name: IsEnabled(String)
  nameWithType: ListDiagnosticSource.IsEnabled(String)
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities.ListDiagnosticSource.IsEnabled(System.String)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Relational.Tests/TestUtilities/ListDiagnosticSource.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: IsEnabled
    path: test/Microsoft.EntityFrameworkCore.Relational.Tests/TestUtilities/ListDiagnosticSource.cs
    startLine: 21
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities
  syntax:
    content: public override bool IsEnabled(string diagnosticName)
    content.vb: Public Overrides Function IsEnabled(diagnosticName As String) As Boolean
    parameters:
    - id: diagnosticName
      type: System.String
    return:
      type: System.Boolean
  overridden: System.Diagnostics.DiagnosticSource.IsEnabled(System.String)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities
  commentId: N:Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities
  nameWithType: Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Diagnostics.DiagnosticSource
  commentId: T:System.Diagnostics.DiagnosticSource
  parent: System.Diagnostics
  isExternal: true
  name: DiagnosticSource
  nameWithType: DiagnosticSource
  fullName: System.Diagnostics.DiagnosticSource
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Diagnostics
  commentId: N:System.Diagnostics
  isExternal: false
  name: System.Diagnostics
  nameWithType: System.Diagnostics
  fullName: System.Diagnostics
- uid: System.Collections.Generic.List{System.Tuple{System.String,System.Object}}
  commentId: T:System.Collections.Generic.List{System.Tuple{System.String,System.Object}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Tuple<String, Object>>
  nameWithType: List<Tuple<String, Object>>
  fullName: System.Collections.Generic.List<System.Tuple<System.String, System.Object>>
  nameWithType.vb: List(Of Tuple(Of String, Object))
  fullname.vb: System.Collections.Generic.List(Of System.Tuple(Of System.String, System.Object))
  name.vb: List(Of Tuple(Of String, Object))
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullname.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Diagnostics.DiagnosticSource.Write(System.String,System.Object)
  commentId: M:System.Diagnostics.DiagnosticSource.Write(System.String,System.Object)
  parent: System.Diagnostics.DiagnosticSource
  isExternal: true
  name: Write(String, Object)
  nameWithType: DiagnosticSource.Write(String, Object)
  fullName: System.Diagnostics.DiagnosticSource.Write(System.String, System.Object)
  spec.csharp:
  - uid: System.Diagnostics.DiagnosticSource.Write(System.String,System.Object)
    name: Write
    nameWithType: DiagnosticSource.Write
    fullName: System.Diagnostics.DiagnosticSource.Write
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Diagnostics.DiagnosticSource.Write(System.String,System.Object)
    name: Write
    nameWithType: DiagnosticSource.Write
    fullName: System.Diagnostics.DiagnosticSource.Write
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.DiagnosticSource.IsEnabled(System.String)
  commentId: M:System.Diagnostics.DiagnosticSource.IsEnabled(System.String)
  parent: System.Diagnostics.DiagnosticSource
  isExternal: true
  name: IsEnabled(String)
  nameWithType: DiagnosticSource.IsEnabled(String)
  fullName: System.Diagnostics.DiagnosticSource.IsEnabled(System.String)
  spec.csharp:
  - uid: System.Diagnostics.DiagnosticSource.IsEnabled(System.String)
    name: IsEnabled
    nameWithType: DiagnosticSource.IsEnabled
    fullName: System.Diagnostics.DiagnosticSource.IsEnabled
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Diagnostics.DiagnosticSource.IsEnabled(System.String)
    name: IsEnabled
    nameWithType: DiagnosticSource.IsEnabled
    fullName: System.Diagnostics.DiagnosticSource.IsEnabled
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
