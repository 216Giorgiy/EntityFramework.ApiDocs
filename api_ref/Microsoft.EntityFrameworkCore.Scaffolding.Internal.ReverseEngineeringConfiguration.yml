### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration
  id: ReverseEngineeringConfiguration
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  children:
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration.CheckValidity
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration.ConnectionString
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration.ContextClassName
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration.CustomTemplatePath
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration.OutputPath
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration.OverwriteFiles
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration.ProjectPath
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration.ProjectRootNamespace
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration.TableSelectionSet
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration.UseFluentApiOnly
  langs:
  - csharp
  - vb
  name: ReverseEngineeringConfiguration
  nameWithType: ReverseEngineeringConfiguration
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ReverseEngineeringConfiguration.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ReverseEngineeringConfiguration
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ReverseEngineeringConfiguration.cs
    startLine: 13
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public class ReverseEngineeringConfiguration
    content.vb: Public Class ReverseEngineeringConfiguration
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration.ConnectionString
  commentId: P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration.ConnectionString
  id: ConnectionString
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration
  langs:
  - csharp
  - vb
  name: ConnectionString
  nameWithType: ReverseEngineeringConfiguration.ConnectionString
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration.ConnectionString
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ReverseEngineeringConfiguration.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ConnectionString
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ReverseEngineeringConfiguration.cs
    startLine: 19
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual string ConnectionString { get; set; }
    content.vb: Public Overridable Property ConnectionString As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration.ContextClassName
  commentId: P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration.ContextClassName
  id: ContextClassName
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration
  langs:
  - csharp
  - vb
  name: ContextClassName
  nameWithType: ReverseEngineeringConfiguration.ContextClassName
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration.ContextClassName
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ReverseEngineeringConfiguration.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ContextClassName
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ReverseEngineeringConfiguration.cs
    startLine: 25
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual string ContextClassName { get; set; }
    content.vb: Public Overridable Property ContextClassName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration.CustomTemplatePath
  commentId: P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration.CustomTemplatePath
  id: CustomTemplatePath
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration
  langs:
  - csharp
  - vb
  name: CustomTemplatePath
  nameWithType: ReverseEngineeringConfiguration.CustomTemplatePath
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration.CustomTemplatePath
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ReverseEngineeringConfiguration.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: CustomTemplatePath
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ReverseEngineeringConfiguration.cs
    startLine: 31
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual string CustomTemplatePath { get; set; }
    content.vb: Public Overridable Property CustomTemplatePath As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration.ProjectPath
  commentId: P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration.ProjectPath
  id: ProjectPath
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration
  langs:
  - csharp
  - vb
  name: ProjectPath
  nameWithType: ReverseEngineeringConfiguration.ProjectPath
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration.ProjectPath
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ReverseEngineeringConfiguration.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ProjectPath
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ReverseEngineeringConfiguration.cs
    startLine: 37
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual string ProjectPath { get; set; }
    content.vb: Public Overridable Property ProjectPath As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration.ProjectRootNamespace
  commentId: P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration.ProjectRootNamespace
  id: ProjectRootNamespace
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration
  langs:
  - csharp
  - vb
  name: ProjectRootNamespace
  nameWithType: ReverseEngineeringConfiguration.ProjectRootNamespace
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration.ProjectRootNamespace
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ReverseEngineeringConfiguration.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ProjectRootNamespace
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ReverseEngineeringConfiguration.cs
    startLine: 43
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual string ProjectRootNamespace { get; set; }
    content.vb: Public Overridable Property ProjectRootNamespace As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration.OutputPath
  commentId: P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration.OutputPath
  id: OutputPath
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration
  langs:
  - csharp
  - vb
  name: OutputPath
  nameWithType: ReverseEngineeringConfiguration.OutputPath
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration.OutputPath
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ReverseEngineeringConfiguration.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: OutputPath
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ReverseEngineeringConfiguration.cs
    startLine: 49
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual string OutputPath { get; set; }
    content.vb: Public Overridable Property OutputPath As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration.TableSelectionSet
  commentId: P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration.TableSelectionSet
  id: TableSelectionSet
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration
  langs:
  - csharp
  - vb
  name: TableSelectionSet
  nameWithType: ReverseEngineeringConfiguration.TableSelectionSet
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration.TableSelectionSet
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ReverseEngineeringConfiguration.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: TableSelectionSet
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ReverseEngineeringConfiguration.cs
    startLine: 55
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual TableSelectionSet TableSelectionSet { get; set; }
    content.vb: Public Overridable Property TableSelectionSet As TableSelectionSet
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration.UseFluentApiOnly
  commentId: P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration.UseFluentApiOnly
  id: UseFluentApiOnly
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration
  langs:
  - csharp
  - vb
  name: UseFluentApiOnly
  nameWithType: ReverseEngineeringConfiguration.UseFluentApiOnly
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration.UseFluentApiOnly
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ReverseEngineeringConfiguration.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: UseFluentApiOnly
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ReverseEngineeringConfiguration.cs
    startLine: 61
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual bool UseFluentApiOnly { get; set; }
    content.vb: Public Overridable Property UseFluentApiOnly As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration.OverwriteFiles
  commentId: P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration.OverwriteFiles
  id: OverwriteFiles
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration
  langs:
  - csharp
  - vb
  name: OverwriteFiles
  nameWithType: ReverseEngineeringConfiguration.OverwriteFiles
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration.OverwriteFiles
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ReverseEngineeringConfiguration.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: OverwriteFiles
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ReverseEngineeringConfiguration.cs
    startLine: 67
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual bool OverwriteFiles { get; set; }
    content.vb: Public Overridable Property OverwriteFiles As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration.CheckValidity
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration.CheckValidity
  id: CheckValidity
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration
  langs:
  - csharp
  - vb
  name: CheckValidity()
  nameWithType: ReverseEngineeringConfiguration.CheckValidity()
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration.CheckValidity()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ReverseEngineeringConfiguration.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: CheckValidity
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/ReverseEngineeringConfiguration.cs
    startLine: 73
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual void CheckValidity()
    content.vb: Public Overridable Sub CheckValidity
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Scaffolding.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<ReverseEngineeringConfiguration, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<ReverseEngineeringConfiguration, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of ReverseEngineeringConfiguration, TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration, TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of ReverseEngineeringConfiguration, TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<ReverseEngineeringConfiguration, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<ReverseEngineeringConfiguration, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of ReverseEngineeringConfiguration, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of ReverseEngineeringConfiguration, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet
  parent: Microsoft.EntityFrameworkCore.Scaffolding
  isExternal: false
  name: TableSelectionSet
  nameWithType: TableSelectionSet
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet
- uid: Microsoft.EntityFrameworkCore.Scaffolding
  commentId: N:Microsoft.EntityFrameworkCore.Scaffolding
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Scaffolding
  nameWithType: Microsoft.EntityFrameworkCore.Scaffolding
  fullName: Microsoft.EntityFrameworkCore.Scaffolding
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
