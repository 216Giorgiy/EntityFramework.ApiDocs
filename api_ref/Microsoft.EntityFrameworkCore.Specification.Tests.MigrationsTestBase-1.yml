### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1
  id: MigrationsTestBase`1
  parent: Microsoft.EntityFrameworkCore.Specification.Tests
  children:
  - Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.#ctor(`0)
  - Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.ActiveProvider
  - Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.AssertFirstMigration(System.Data.Common.DbConnection)
  - Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.AssertFirstMigrationAsync(System.Data.Common.DbConnection)
  - Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.AssertSecondMigration(System.Data.Common.DbConnection)
  - Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.AssertSecondMigrationAsync(System.Data.Common.DbConnection)
  - Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.BuildFirstMigration(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  - Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.BuildSecondMigration(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  - Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.Can_apply_all_migrations
  - Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.Can_apply_all_migrations_async
  - Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.Can_apply_one_migration
  - Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.Can_execute_operations
  - Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.Can_generate_down_script_using_names
  - Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.Can_generate_down_scripts
  - Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.Can_generate_idempotent_down_scripts
  - Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.Can_generate_idempotent_up_scripts
  - Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.Can_generate_migration_from_initial_database_to_initial
  - Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.Can_generate_no_migration_script
  - Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.Can_generate_one_down_script
  - Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.Can_generate_one_up_script
  - Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.Can_generate_up_script_using_names
  - Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.Can_generate_up_scripts
  - Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.Can_get_active_provider
  - Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.Can_revert_all_migrations
  - Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.Can_revert_one_migrations
  - Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.ExecuteAsync(System.IServiceProvider,System.Action{Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder})
  - Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.Fixture
  - Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.Sql
  langs:
  - csharp
  - vb
  name: MigrationsTestBase<TFixture>
  nameWithType: MigrationsTestBase<TFixture>
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase<TFixture>
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/MigrationsTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: MigrationsTestBase
    path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/MigrationsTestBase.cs
    startLine: 17
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: 'public abstract class MigrationsTestBase<TFixture> : IClassFixture<TFixture> where TFixture : MigrationsFixtureBase, new ()'
    content.vb: >-
      Public MustInherit Class MigrationsTestBase(Of TFixture As {MigrationsFixtureBase, New})
          Implements IClassFixture(Of TFixture)
    typeParameters:
    - id: TFixture
  inheritance:
  - System.Object
  implements:
  - Xunit.IClassFixture{{TFixture}}
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: MigrationsTestBase(Of TFixture)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase(Of TFixture)
  name.vb: MigrationsTestBase(Of TFixture)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.Fixture
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.Fixture
  id: Fixture
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1
  langs:
  - csharp
  - vb
  name: Fixture
  nameWithType: MigrationsTestBase<TFixture>.Fixture
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase<TFixture>.Fixture
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/MigrationsTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Fixture
    path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/MigrationsTestBase.cs
    startLine: 20
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: protected TFixture Fixture { get; }
    content.vb: Protected ReadOnly Property Fixture As TFixture
    parameters: []
    return:
      type: '{TFixture}'
  nameWithType.vb: MigrationsTestBase(Of TFixture).Fixture
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase(Of TFixture).Fixture
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.#ctor(`0)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.#ctor(`0)
  id: '#ctor(`0)'
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1
  langs:
  - csharp
  - vb
  name: MigrationsTestBase(TFixture)
  nameWithType: MigrationsTestBase<TFixture>.MigrationsTestBase(TFixture)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase<TFixture>.MigrationsTestBase(TFixture)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/MigrationsTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/MigrationsTestBase.cs
    startLine: 22
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: protected MigrationsTestBase(TFixture fixture)
    content.vb: Protected Sub New(fixture As TFixture)
    parameters:
    - id: fixture
      type: '{TFixture}'
  nameWithType.vb: MigrationsTestBase(Of TFixture).MigrationsTestBase(TFixture)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase(Of TFixture).MigrationsTestBase(TFixture)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.Sql
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.Sql
  id: Sql
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1
  langs:
  - csharp
  - vb
  name: Sql
  nameWithType: MigrationsTestBase<TFixture>.Sql
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase<TFixture>.Sql
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/MigrationsTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Sql
    path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/MigrationsTestBase.cs
    startLine: 27
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: protected string Sql { get; }
    content.vb: Protected ReadOnly Property Sql As String
    parameters: []
    return:
      type: System.String
  nameWithType.vb: MigrationsTestBase(Of TFixture).Sql
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase(Of TFixture).Sql
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.ActiveProvider
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.ActiveProvider
  id: ActiveProvider
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1
  langs:
  - csharp
  - vb
  name: ActiveProvider
  nameWithType: MigrationsTestBase<TFixture>.ActiveProvider
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase<TFixture>.ActiveProvider
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/MigrationsTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ActiveProvider
    path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/MigrationsTestBase.cs
    startLine: 29
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: protected string ActiveProvider { get; }
    content.vb: Protected ReadOnly Property ActiveProvider As String
    parameters: []
    return:
      type: System.String
  nameWithType.vb: MigrationsTestBase(Of TFixture).ActiveProvider
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase(Of TFixture).ActiveProvider
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.Can_apply_all_migrations
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.Can_apply_all_migrations
  id: Can_apply_all_migrations
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1
  langs:
  - csharp
  - vb
  name: Can_apply_all_migrations()
  nameWithType: MigrationsTestBase<TFixture>.Can_apply_all_migrations()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase<TFixture>.Can_apply_all_migrations()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/MigrationsTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_apply_all_migrations
    path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/MigrationsTestBase.cs
    startLine: 31
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public void Can_apply_all_migrations()
    content.vb: Public Sub Can_apply_all_migrations
  nameWithType.vb: MigrationsTestBase(Of TFixture).Can_apply_all_migrations()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase(Of TFixture).Can_apply_all_migrations()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.Can_apply_one_migration
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.Can_apply_one_migration
  id: Can_apply_one_migration
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1
  langs:
  - csharp
  - vb
  name: Can_apply_one_migration()
  nameWithType: MigrationsTestBase<TFixture>.Can_apply_one_migration()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase<TFixture>.Can_apply_one_migration()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/MigrationsTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_apply_one_migration
    path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/MigrationsTestBase.cs
    startLine: 49
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public void Can_apply_one_migration()
    content.vb: >-
      <Fact>

      Public Sub Can_apply_one_migration
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: MigrationsTestBase(Of TFixture).Can_apply_one_migration()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase(Of TFixture).Can_apply_one_migration()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.Can_revert_all_migrations
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.Can_revert_all_migrations
  id: Can_revert_all_migrations
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1
  langs:
  - csharp
  - vb
  name: Can_revert_all_migrations()
  nameWithType: MigrationsTestBase<TFixture>.Can_revert_all_migrations()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase<TFixture>.Can_revert_all_migrations()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/MigrationsTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_revert_all_migrations
    path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/MigrationsTestBase.cs
    startLine: 66
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public void Can_revert_all_migrations()
    content.vb: Public Sub Can_revert_all_migrations
  nameWithType.vb: MigrationsTestBase(Of TFixture).Can_revert_all_migrations()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase(Of TFixture).Can_revert_all_migrations()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.Can_revert_one_migrations
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.Can_revert_one_migrations
  id: Can_revert_one_migrations
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1
  langs:
  - csharp
  - vb
  name: Can_revert_one_migrations()
  nameWithType: MigrationsTestBase<TFixture>.Can_revert_one_migrations()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase<TFixture>.Can_revert_one_migrations()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/MigrationsTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_revert_one_migrations
    path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/MigrationsTestBase.cs
    startLine: 82
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public void Can_revert_one_migrations()
    content.vb: Public Sub Can_revert_one_migrations
  nameWithType.vb: MigrationsTestBase(Of TFixture).Can_revert_one_migrations()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase(Of TFixture).Can_revert_one_migrations()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.Can_apply_all_migrations_async
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.Can_apply_all_migrations_async
  id: Can_apply_all_migrations_async
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1
  langs:
  - csharp
  - vb
  name: Can_apply_all_migrations_async()
  nameWithType: MigrationsTestBase<TFixture>.Can_apply_all_migrations_async()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase<TFixture>.Can_apply_all_migrations_async()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/MigrationsTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_apply_all_migrations_async
    path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/MigrationsTestBase.cs
    startLine: 100
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public Task Can_apply_all_migrations_async()
    content.vb: Public Function Can_apply_all_migrations_async As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: MigrationsTestBase(Of TFixture).Can_apply_all_migrations_async()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase(Of TFixture).Can_apply_all_migrations_async()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.Can_generate_no_migration_script
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.Can_generate_no_migration_script
  id: Can_generate_no_migration_script
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1
  langs:
  - csharp
  - vb
  name: Can_generate_no_migration_script()
  nameWithType: MigrationsTestBase<TFixture>.Can_generate_no_migration_script()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase<TFixture>.Can_generate_no_migration_script()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/MigrationsTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_generate_no_migration_script
    path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/MigrationsTestBase.cs
    startLine: 118
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Can_generate_no_migration_script()
    content.vb: >-
      <Fact>

      Public Overridable Sub Can_generate_no_migration_script
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: MigrationsTestBase(Of TFixture).Can_generate_no_migration_script()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase(Of TFixture).Can_generate_no_migration_script()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.Can_generate_migration_from_initial_database_to_initial
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.Can_generate_migration_from_initial_database_to_initial
  id: Can_generate_migration_from_initial_database_to_initial
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1
  langs:
  - csharp
  - vb
  name: Can_generate_migration_from_initial_database_to_initial()
  nameWithType: MigrationsTestBase<TFixture>.Can_generate_migration_from_initial_database_to_initial()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase<TFixture>.Can_generate_migration_from_initial_database_to_initial()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/MigrationsTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_generate_migration_from_initial_database_to_initial
    path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/MigrationsTestBase.cs
    startLine: 129
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Can_generate_migration_from_initial_database_to_initial()
    content.vb: >-
      <Fact>

      Public Overridable Sub Can_generate_migration_from_initial_database_to_initial
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: MigrationsTestBase(Of TFixture).Can_generate_migration_from_initial_database_to_initial()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase(Of TFixture).Can_generate_migration_from_initial_database_to_initial()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.Can_generate_up_scripts
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.Can_generate_up_scripts
  id: Can_generate_up_scripts
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1
  langs:
  - csharp
  - vb
  name: Can_generate_up_scripts()
  nameWithType: MigrationsTestBase<TFixture>.Can_generate_up_scripts()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase<TFixture>.Can_generate_up_scripts()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/MigrationsTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_generate_up_scripts
    path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/MigrationsTestBase.cs
    startLine: 140
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Can_generate_up_scripts()
    content.vb: >-
      <Fact>

      Public Overridable Sub Can_generate_up_scripts
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: MigrationsTestBase(Of TFixture).Can_generate_up_scripts()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase(Of TFixture).Can_generate_up_scripts()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.Can_generate_one_up_script
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.Can_generate_one_up_script
  id: Can_generate_one_up_script
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1
  langs:
  - csharp
  - vb
  name: Can_generate_one_up_script()
  nameWithType: MigrationsTestBase<TFixture>.Can_generate_one_up_script()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase<TFixture>.Can_generate_one_up_script()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/MigrationsTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_generate_one_up_script
    path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/MigrationsTestBase.cs
    startLine: 151
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Can_generate_one_up_script()
    content.vb: >-
      <Fact>

      Public Overridable Sub Can_generate_one_up_script
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: MigrationsTestBase(Of TFixture).Can_generate_one_up_script()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase(Of TFixture).Can_generate_one_up_script()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.Can_generate_up_script_using_names
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.Can_generate_up_script_using_names
  id: Can_generate_up_script_using_names
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1
  langs:
  - csharp
  - vb
  name: Can_generate_up_script_using_names()
  nameWithType: MigrationsTestBase<TFixture>.Can_generate_up_script_using_names()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase<TFixture>.Can_generate_up_script_using_names()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/MigrationsTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_generate_up_script_using_names
    path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/MigrationsTestBase.cs
    startLine: 162
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Can_generate_up_script_using_names()
    content.vb: >-
      <Fact>

      Public Overridable Sub Can_generate_up_script_using_names
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: MigrationsTestBase(Of TFixture).Can_generate_up_script_using_names()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase(Of TFixture).Can_generate_up_script_using_names()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.Can_generate_idempotent_up_scripts
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.Can_generate_idempotent_up_scripts
  id: Can_generate_idempotent_up_scripts
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1
  langs:
  - csharp
  - vb
  name: Can_generate_idempotent_up_scripts()
  nameWithType: MigrationsTestBase<TFixture>.Can_generate_idempotent_up_scripts()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase<TFixture>.Can_generate_idempotent_up_scripts()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/MigrationsTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_generate_idempotent_up_scripts
    path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/MigrationsTestBase.cs
    startLine: 173
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Can_generate_idempotent_up_scripts()
    content.vb: >-
      <Fact>

      Public Overridable Sub Can_generate_idempotent_up_scripts
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: MigrationsTestBase(Of TFixture).Can_generate_idempotent_up_scripts()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase(Of TFixture).Can_generate_idempotent_up_scripts()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.Can_generate_down_scripts
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.Can_generate_down_scripts
  id: Can_generate_down_scripts
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1
  langs:
  - csharp
  - vb
  name: Can_generate_down_scripts()
  nameWithType: MigrationsTestBase<TFixture>.Can_generate_down_scripts()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase<TFixture>.Can_generate_down_scripts()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/MigrationsTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_generate_down_scripts
    path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/MigrationsTestBase.cs
    startLine: 184
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Can_generate_down_scripts()
    content.vb: >-
      <Fact>

      Public Overridable Sub Can_generate_down_scripts
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: MigrationsTestBase(Of TFixture).Can_generate_down_scripts()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase(Of TFixture).Can_generate_down_scripts()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.Can_generate_one_down_script
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.Can_generate_one_down_script
  id: Can_generate_one_down_script
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1
  langs:
  - csharp
  - vb
  name: Can_generate_one_down_script()
  nameWithType: MigrationsTestBase<TFixture>.Can_generate_one_down_script()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase<TFixture>.Can_generate_one_down_script()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/MigrationsTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_generate_one_down_script
    path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/MigrationsTestBase.cs
    startLine: 198
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Can_generate_one_down_script()
    content.vb: >-
      <Fact>

      Public Overridable Sub Can_generate_one_down_script
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: MigrationsTestBase(Of TFixture).Can_generate_one_down_script()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase(Of TFixture).Can_generate_one_down_script()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.Can_generate_down_script_using_names
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.Can_generate_down_script_using_names
  id: Can_generate_down_script_using_names
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1
  langs:
  - csharp
  - vb
  name: Can_generate_down_script_using_names()
  nameWithType: MigrationsTestBase<TFixture>.Can_generate_down_script_using_names()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase<TFixture>.Can_generate_down_script_using_names()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/MigrationsTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_generate_down_script_using_names
    path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/MigrationsTestBase.cs
    startLine: 212
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Can_generate_down_script_using_names()
    content.vb: >-
      <Fact>

      Public Overridable Sub Can_generate_down_script_using_names
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: MigrationsTestBase(Of TFixture).Can_generate_down_script_using_names()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase(Of TFixture).Can_generate_down_script_using_names()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.Can_generate_idempotent_down_scripts
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.Can_generate_idempotent_down_scripts
  id: Can_generate_idempotent_down_scripts
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1
  langs:
  - csharp
  - vb
  name: Can_generate_idempotent_down_scripts()
  nameWithType: MigrationsTestBase<TFixture>.Can_generate_idempotent_down_scripts()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase<TFixture>.Can_generate_idempotent_down_scripts()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/MigrationsTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_generate_idempotent_down_scripts
    path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/MigrationsTestBase.cs
    startLine: 226
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Can_generate_idempotent_down_scripts()
    content.vb: >-
      <Fact>

      Public Overridable Sub Can_generate_idempotent_down_scripts
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: MigrationsTestBase(Of TFixture).Can_generate_idempotent_down_scripts()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase(Of TFixture).Can_generate_idempotent_down_scripts()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.Can_get_active_provider
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.Can_get_active_provider
  id: Can_get_active_provider
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1
  langs:
  - csharp
  - vb
  name: Can_get_active_provider()
  nameWithType: MigrationsTestBase<TFixture>.Can_get_active_provider()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase<TFixture>.Can_get_active_provider()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/MigrationsTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_get_active_provider
    path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/MigrationsTestBase.cs
    startLine: 241
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Can_get_active_provider()
    content.vb: >-
      <Fact>

      Public Overridable Sub Can_get_active_provider
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: MigrationsTestBase(Of TFixture).Can_get_active_provider()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase(Of TFixture).Can_get_active_provider()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.Can_execute_operations
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.Can_execute_operations
  id: Can_execute_operations
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1
  langs:
  - csharp
  - vb
  name: Can_execute_operations()
  nameWithType: MigrationsTestBase<TFixture>.Can_execute_operations()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase<TFixture>.Can_execute_operations()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/MigrationsTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_execute_operations
    path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/MigrationsTestBase.cs
    startLine: 259
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  remarks: "\n    Creating databases and executing DDL is slow. This oddly-structured test allows us to get the most ammount of\n    coverage using the least ammount of database operations.\n"
  example: []
  syntax:
    content: >-
      [Fact]

      public virtual Task Can_execute_operations()
    content.vb: >-
      <Fact>

      Public Overridable Function Can_execute_operations As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: MigrationsTestBase(Of TFixture).Can_execute_operations()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase(Of TFixture).Can_execute_operations()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.ExecuteAsync(System.IServiceProvider,System.Action{Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder})
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.ExecuteAsync(System.IServiceProvider,System.Action{Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder})
  id: ExecuteAsync(System.IServiceProvider,System.Action{Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder})
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1
  langs:
  - csharp
  - vb
  name: ExecuteAsync(IServiceProvider, Action<MigrationBuilder>)
  nameWithType: MigrationsTestBase<TFixture>.ExecuteAsync(IServiceProvider, Action<MigrationBuilder>)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase<TFixture>.ExecuteAsync(System.IServiceProvider, System.Action<Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/MigrationsTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ExecuteAsync
    path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/MigrationsTestBase.cs
    startLine: 279
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: protected virtual Task ExecuteAsync(IServiceProvider services, Action<MigrationBuilder> buildMigration)
    content.vb: Protected Overridable Function ExecuteAsync(services As IServiceProvider, buildMigration As Action(Of MigrationBuilder)) As Task
    parameters:
    - id: services
      type: System.IServiceProvider
    - id: buildMigration
      type: System.Action{Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder}
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: MigrationsTestBase(Of TFixture).ExecuteAsync(IServiceProvider, Action(Of MigrationBuilder))
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase(Of TFixture).ExecuteAsync(System.IServiceProvider, System.Action(Of Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder))
  name.vb: ExecuteAsync(IServiceProvider, Action(Of MigrationBuilder))
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.BuildFirstMigration(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.BuildFirstMigration(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  id: BuildFirstMigration(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1
  langs:
  - csharp
  - vb
  name: BuildFirstMigration(MigrationBuilder)
  nameWithType: MigrationsTestBase<TFixture>.BuildFirstMigration(MigrationBuilder)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase<TFixture>.BuildFirstMigration(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/MigrationsTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: BuildFirstMigration
    path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/MigrationsTestBase.cs
    startLine: 295
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: protected virtual void BuildFirstMigration(MigrationBuilder migrationBuilder)
    content.vb: Protected Overridable Sub BuildFirstMigration(migrationBuilder As MigrationBuilder)
    parameters:
    - id: migrationBuilder
      type: Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder
  nameWithType.vb: MigrationsTestBase(Of TFixture).BuildFirstMigration(MigrationBuilder)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase(Of TFixture).BuildFirstMigration(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.AssertFirstMigrationAsync(System.Data.Common.DbConnection)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.AssertFirstMigrationAsync(System.Data.Common.DbConnection)
  id: AssertFirstMigrationAsync(System.Data.Common.DbConnection)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1
  langs:
  - csharp
  - vb
  name: AssertFirstMigrationAsync(DbConnection)
  nameWithType: MigrationsTestBase<TFixture>.AssertFirstMigrationAsync(DbConnection)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase<TFixture>.AssertFirstMigrationAsync(System.Data.Common.DbConnection)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/MigrationsTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AssertFirstMigrationAsync
    path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/MigrationsTestBase.cs
    startLine: 313
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: protected virtual Task AssertFirstMigrationAsync(DbConnection connection)
    content.vb: Protected Overridable Function AssertFirstMigrationAsync(connection As DbConnection) As Task
    parameters:
    - id: connection
      type: System.Data.Common.DbConnection
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: MigrationsTestBase(Of TFixture).AssertFirstMigrationAsync(DbConnection)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase(Of TFixture).AssertFirstMigrationAsync(System.Data.Common.DbConnection)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.AssertFirstMigration(System.Data.Common.DbConnection)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.AssertFirstMigration(System.Data.Common.DbConnection)
  id: AssertFirstMigration(System.Data.Common.DbConnection)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1
  langs:
  - csharp
  - vb
  name: AssertFirstMigration(DbConnection)
  nameWithType: MigrationsTestBase<TFixture>.AssertFirstMigration(DbConnection)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase<TFixture>.AssertFirstMigration(System.Data.Common.DbConnection)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/MigrationsTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AssertFirstMigration
    path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/MigrationsTestBase.cs
    startLine: 320
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: protected virtual void AssertFirstMigration(DbConnection connection)
    content.vb: Protected Overridable Sub AssertFirstMigration(connection As DbConnection)
    parameters:
    - id: connection
      type: System.Data.Common.DbConnection
  nameWithType.vb: MigrationsTestBase(Of TFixture).AssertFirstMigration(DbConnection)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase(Of TFixture).AssertFirstMigration(System.Data.Common.DbConnection)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.BuildSecondMigration(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.BuildSecondMigration(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  id: BuildSecondMigration(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1
  langs:
  - csharp
  - vb
  name: BuildSecondMigration(MigrationBuilder)
  nameWithType: MigrationsTestBase<TFixture>.BuildSecondMigration(MigrationBuilder)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase<TFixture>.BuildSecondMigration(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/MigrationsTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: BuildSecondMigration
    path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/MigrationsTestBase.cs
    startLine: 324
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: protected virtual void BuildSecondMigration(MigrationBuilder migrationBuilder)
    content.vb: Protected Overridable Sub BuildSecondMigration(migrationBuilder As MigrationBuilder)
    parameters:
    - id: migrationBuilder
      type: Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder
  nameWithType.vb: MigrationsTestBase(Of TFixture).BuildSecondMigration(MigrationBuilder)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase(Of TFixture).BuildSecondMigration(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.AssertSecondMigrationAsync(System.Data.Common.DbConnection)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.AssertSecondMigrationAsync(System.Data.Common.DbConnection)
  id: AssertSecondMigrationAsync(System.Data.Common.DbConnection)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1
  langs:
  - csharp
  - vb
  name: AssertSecondMigrationAsync(DbConnection)
  nameWithType: MigrationsTestBase<TFixture>.AssertSecondMigrationAsync(DbConnection)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase<TFixture>.AssertSecondMigrationAsync(System.Data.Common.DbConnection)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/MigrationsTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AssertSecondMigrationAsync
    path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/MigrationsTestBase.cs
    startLine: 335
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: protected virtual Task AssertSecondMigrationAsync(DbConnection connection)
    content.vb: Protected Overridable Function AssertSecondMigrationAsync(connection As DbConnection) As Task
    parameters:
    - id: connection
      type: System.Data.Common.DbConnection
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: MigrationsTestBase(Of TFixture).AssertSecondMigrationAsync(DbConnection)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase(Of TFixture).AssertSecondMigrationAsync(System.Data.Common.DbConnection)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.AssertSecondMigration(System.Data.Common.DbConnection)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1.AssertSecondMigration(System.Data.Common.DbConnection)
  id: AssertSecondMigration(System.Data.Common.DbConnection)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase`1
  langs:
  - csharp
  - vb
  name: AssertSecondMigration(DbConnection)
  nameWithType: MigrationsTestBase<TFixture>.AssertSecondMigration(DbConnection)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase<TFixture>.AssertSecondMigration(System.Data.Common.DbConnection)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/MigrationsTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AssertSecondMigration
    path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/MigrationsTestBase.cs
    startLine: 342
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: protected virtual void AssertSecondMigration(DbConnection connection)
    content.vb: Protected Overridable Sub AssertSecondMigration(connection As DbConnection)
    parameters:
    - id: connection
      type: System.Data.Common.DbConnection
  nameWithType.vb: MigrationsTestBase(Of TFixture).AssertSecondMigration(DbConnection)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.MigrationsTestBase(Of TFixture).AssertSecondMigration(System.Data.Common.DbConnection)
references:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests
  commentId: N:Microsoft.EntityFrameworkCore.Specification.Tests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Specification.Tests
  nameWithType: Microsoft.EntityFrameworkCore.Specification.Tests
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Xunit.IClassFixture{{TFixture}}
  commentId: T:Xunit.IClassFixture{`0}
  parent: Xunit
  definition: Xunit.IClassFixture`1
  name: IClassFixture<TFixture>
  nameWithType: IClassFixture<TFixture>
  fullName: Xunit.IClassFixture<TFixture>
  nameWithType.vb: IClassFixture(Of TFixture)
  fullname.vb: Xunit.IClassFixture(Of TFixture)
  name.vb: IClassFixture(Of TFixture)
  spec.csharp:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    nameWithType: IClassFixture
    fullName: Xunit.IClassFixture
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TFixture
    nameWithType: TFixture
    fullName: TFixture
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    nameWithType: IClassFixture
    fullName: Xunit.IClassFixture
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TFixture
    nameWithType: TFixture
    fullName: TFixture
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Xunit.IClassFixture`1
  commentId: T:Xunit.IClassFixture`1
  isExternal: true
  name: IClassFixture<TFixture>
  nameWithType: IClassFixture<TFixture>
  fullName: Xunit.IClassFixture<TFixture>
  nameWithType.vb: IClassFixture(Of TFixture)
  fullname.vb: Xunit.IClassFixture(Of TFixture)
  name.vb: IClassFixture(Of TFixture)
  spec.csharp:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    nameWithType: IClassFixture
    fullName: Xunit.IClassFixture
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TFixture
    nameWithType: TFixture
    fullName: TFixture
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    nameWithType: IClassFixture
    fullName: Xunit.IClassFixture
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TFixture
    nameWithType: TFixture
    fullName: TFixture
  - name: )
    nameWithType: )
    fullName: )
- uid: Xunit
  commentId: N:Xunit
  isExternal: false
  name: Xunit
  nameWithType: Xunit
  fullName: Xunit
- uid: '{TFixture}'
  commentId: '!:TFixture'
  definition: TFixture
  name: TFixture
  nameWithType: TFixture
  fullName: TFixture
- uid: TFixture
  isExternal: false
  name: TFixture
  nameWithType: TFixture
  fullName: TFixture
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.IServiceProvider
  commentId: T:System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Action{Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder}
  commentId: T:System.Action{Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder}
  parent: System
  definition: System.Action`1
  name: Action<MigrationBuilder>
  nameWithType: Action<MigrationBuilder>
  fullName: System.Action<Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder>
  nameWithType.vb: Action(Of MigrationBuilder)
  fullname.vb: System.Action(Of Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name.vb: Action(Of MigrationBuilder)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder
    name: MigrationBuilder
    nameWithType: MigrationBuilder
    fullName: Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder
    name: MigrationBuilder
    nameWithType: MigrationBuilder
    fullName: Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullname.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder
  parent: Microsoft.EntityFrameworkCore.Migrations
  isExternal: false
  name: MigrationBuilder
  nameWithType: MigrationBuilder
  fullName: Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder
- uid: Microsoft.EntityFrameworkCore.Migrations
  commentId: N:Microsoft.EntityFrameworkCore.Migrations
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Migrations
  nameWithType: Microsoft.EntityFrameworkCore.Migrations
  fullName: Microsoft.EntityFrameworkCore.Migrations
- uid: System.Data.Common.DbConnection
  commentId: T:System.Data.Common.DbConnection
  parent: System.Data.Common
  isExternal: true
  name: DbConnection
  nameWithType: DbConnection
  fullName: System.Data.Common.DbConnection
- uid: System.Data.Common
  commentId: N:System.Data.Common
  isExternal: false
  name: System.Data.Common
  nameWithType: System.Data.Common
  fullName: System.Data.Common
