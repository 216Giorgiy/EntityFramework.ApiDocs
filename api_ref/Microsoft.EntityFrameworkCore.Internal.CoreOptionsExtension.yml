### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension
  commentId: T:Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension
  id: CoreOptionsExtension
  parent: Microsoft.EntityFrameworkCore.Internal
  children:
  - Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension.#ctor
  - Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension.#ctor(Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension)
  - Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension.ApplyServices(IServiceCollection)
  - Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension.InternalServiceProvider
  - Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension.IsSensitiveDataLoggingEnabled
  - Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension.LoggerFactory
  - Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension.MemoryCache
  - Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension.Model
  - Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension.QueryTrackingBehavior
  - Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension.ReplacedServices
  - Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension.ReplaceService(System.Type,System.Type)
  - Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension.SensitiveDataLoggingWarned
  - Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension.WarningsConfiguration
  langs:
  - csharp
  - vb
  name: CoreOptionsExtension
  nameWithType: CoreOptionsExtension
  fullName: Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/CoreOptionsExtension.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: CoreOptionsExtension
    path: src/Microsoft.EntityFrameworkCore/Internal/CoreOptionsExtension.cs
    startLine: 18
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public class CoreOptionsExtension : IDbContextOptionsExtension'
    content.vb: >-
      Public Class CoreOptionsExtension
          Implements IDbContextOptionsExtension
  inheritance:
  - System.Object
  implements:
  - Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptionsExtension
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension.#ctor
  commentId: M:Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension.#ctor
  id: '#ctor'
  parent: Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension
  langs:
  - csharp
  - vb
  name: CoreOptionsExtension()
  nameWithType: CoreOptionsExtension.CoreOptionsExtension()
  fullName: Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension.CoreOptionsExtension()
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/CoreOptionsExtension.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore/Internal/CoreOptionsExtension.cs
    startLine: 33
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public CoreOptionsExtension()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension.#ctor(Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension.#ctor(Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension)
  id: '#ctor(Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension)'
  parent: Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension
  langs:
  - csharp
  - vb
  name: CoreOptionsExtension(CoreOptionsExtension)
  nameWithType: CoreOptionsExtension.CoreOptionsExtension(CoreOptionsExtension)
  fullName: Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension.CoreOptionsExtension(Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/CoreOptionsExtension.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore/Internal/CoreOptionsExtension.cs
    startLine: 41
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public CoreOptionsExtension(CoreOptionsExtension copyFrom)
    content.vb: Public Sub New(copyFrom As CoreOptionsExtension)
    parameters:
    - id: copyFrom
      type: Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension.IsSensitiveDataLoggingEnabled
  commentId: P:Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension.IsSensitiveDataLoggingEnabled
  id: IsSensitiveDataLoggingEnabled
  parent: Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension
  langs:
  - csharp
  - vb
  name: IsSensitiveDataLoggingEnabled
  nameWithType: CoreOptionsExtension.IsSensitiveDataLoggingEnabled
  fullName: Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension.IsSensitiveDataLoggingEnabled
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/CoreOptionsExtension.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: IsSensitiveDataLoggingEnabled
    path: src/Microsoft.EntityFrameworkCore/Internal/CoreOptionsExtension.cs
    startLine: 61
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual bool IsSensitiveDataLoggingEnabled { get; set; }
    content.vb: Public Overridable Property IsSensitiveDataLoggingEnabled As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension.SensitiveDataLoggingWarned
  commentId: P:Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension.SensitiveDataLoggingWarned
  id: SensitiveDataLoggingWarned
  parent: Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension
  langs:
  - csharp
  - vb
  name: SensitiveDataLoggingWarned
  nameWithType: CoreOptionsExtension.SensitiveDataLoggingWarned
  fullName: Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension.SensitiveDataLoggingWarned
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/CoreOptionsExtension.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: SensitiveDataLoggingWarned
    path: src/Microsoft.EntityFrameworkCore/Internal/CoreOptionsExtension.cs
    startLine: 71
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual bool SensitiveDataLoggingWarned { get; set; }
    content.vb: Public Overridable Property SensitiveDataLoggingWarned As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension.Model
  commentId: P:Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension.Model
  id: Model
  parent: Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension
  langs:
  - csharp
  - vb
  name: Model
  nameWithType: CoreOptionsExtension.Model
  fullName: Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension.Model
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/CoreOptionsExtension.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Model
    path: src/Microsoft.EntityFrameworkCore/Internal/CoreOptionsExtension.cs
    startLine: 77
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual IModel Model { get; set; }
    content.vb: Public Overridable Property Model As IModel
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.IModel
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension.LoggerFactory
  commentId: P:Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension.LoggerFactory
  id: LoggerFactory
  parent: Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension
  langs:
  - csharp
  - vb
  name: LoggerFactory
  nameWithType: CoreOptionsExtension.LoggerFactory
  fullName: Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension.LoggerFactory
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/CoreOptionsExtension.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: LoggerFactory
    path: src/Microsoft.EntityFrameworkCore/Internal/CoreOptionsExtension.cs
    startLine: 87
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual ILoggerFactory LoggerFactory { get; set; }
    content.vb: Public Overridable Property LoggerFactory As ILoggerFactory
    parameters: []
    return:
      type: ILoggerFactory
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension.MemoryCache
  commentId: P:Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension.MemoryCache
  id: MemoryCache
  parent: Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension
  langs:
  - csharp
  - vb
  name: MemoryCache
  nameWithType: CoreOptionsExtension.MemoryCache
  fullName: Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension.MemoryCache
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/CoreOptionsExtension.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: MemoryCache
    path: src/Microsoft.EntityFrameworkCore/Internal/CoreOptionsExtension.cs
    startLine: 97
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual IMemoryCache MemoryCache { get; set; }
    content.vb: Public Overridable Property MemoryCache As IMemoryCache
    parameters: []
    return:
      type: IMemoryCache
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension.InternalServiceProvider
  commentId: P:Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension.InternalServiceProvider
  id: InternalServiceProvider
  parent: Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension
  langs:
  - csharp
  - vb
  name: InternalServiceProvider
  nameWithType: CoreOptionsExtension.InternalServiceProvider
  fullName: Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension.InternalServiceProvider
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/CoreOptionsExtension.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: InternalServiceProvider
    path: src/Microsoft.EntityFrameworkCore/Internal/CoreOptionsExtension.cs
    startLine: 107
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual IServiceProvider InternalServiceProvider { get; set; }
    content.vb: Public Overridable Property InternalServiceProvider As IServiceProvider
    parameters: []
    return:
      type: System.IServiceProvider
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension.WarningsConfiguration
  commentId: P:Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension.WarningsConfiguration
  id: WarningsConfiguration
  parent: Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension
  langs:
  - csharp
  - vb
  name: WarningsConfiguration
  nameWithType: CoreOptionsExtension.WarningsConfiguration
  fullName: Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension.WarningsConfiguration
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/CoreOptionsExtension.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: WarningsConfiguration
    path: src/Microsoft.EntityFrameworkCore/Internal/CoreOptionsExtension.cs
    startLine: 117
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual WarningsConfiguration WarningsConfiguration { get; set; }
    content.vb: Public Overridable Property WarningsConfiguration As WarningsConfiguration
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Internal.WarningsConfiguration
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension.QueryTrackingBehavior
  commentId: P:Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension.QueryTrackingBehavior
  id: QueryTrackingBehavior
  parent: Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension
  langs:
  - csharp
  - vb
  name: QueryTrackingBehavior
  nameWithType: CoreOptionsExtension.QueryTrackingBehavior
  fullName: Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension.QueryTrackingBehavior
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/CoreOptionsExtension.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: QueryTrackingBehavior
    path: src/Microsoft.EntityFrameworkCore/Internal/CoreOptionsExtension.cs
    startLine: 127
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual QueryTrackingBehavior QueryTrackingBehavior { get; set; }
    content.vb: Public Overridable Property QueryTrackingBehavior As QueryTrackingBehavior
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.QueryTrackingBehavior
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension.ReplaceService(System.Type,System.Type)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension.ReplaceService(System.Type,System.Type)
  id: ReplaceService(System.Type,System.Type)
  parent: Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension
  langs:
  - csharp
  - vb
  name: ReplaceService(Type, Type)
  nameWithType: CoreOptionsExtension.ReplaceService(Type, Type)
  fullName: Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension.ReplaceService(System.Type, System.Type)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/CoreOptionsExtension.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ReplaceService
    path: src/Microsoft.EntityFrameworkCore/Internal/CoreOptionsExtension.cs
    startLine: 137
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual void ReplaceService(Type serviceType, Type implementationType)
    content.vb: Public Overridable Sub ReplaceService(serviceType As Type, implementationType As Type)
    parameters:
    - id: serviceType
      type: System.Type
    - id: implementationType
      type: System.Type
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension.ReplacedServices
  commentId: P:Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension.ReplacedServices
  id: ReplacedServices
  parent: Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension
  langs:
  - csharp
  - vb
  name: ReplacedServices
  nameWithType: CoreOptionsExtension.ReplacedServices
  fullName: Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension.ReplacedServices
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/CoreOptionsExtension.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ReplacedServices
    path: src/Microsoft.EntityFrameworkCore/Internal/CoreOptionsExtension.cs
    startLine: 144
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual IReadOnlyDictionary<Type, Type> ReplacedServices { get; }
    content.vb: Public Overridable ReadOnly Property ReplacedServices As IReadOnlyDictionary(Of Type, Type)
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyDictionary{System.Type,System.Type}
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension.ApplyServices(IServiceCollection)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension.ApplyServices(IServiceCollection)
  id: ApplyServices(IServiceCollection)
  parent: Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension
  langs:
  - csharp
  - vb
  name: ApplyServices(IServiceCollection)
  nameWithType: CoreOptionsExtension.ApplyServices(IServiceCollection)
  fullName: Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension.ApplyServices(IServiceCollection)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/CoreOptionsExtension.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ApplyServices
    path: src/Microsoft.EntityFrameworkCore/Internal/CoreOptionsExtension.cs
    startLine: 150
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual void ApplyServices(IServiceCollection builder)
    content.vb: Public Overridable Sub ApplyServices(builder As IServiceCollection)
    parameters:
    - id: builder
      type: IServiceCollection
  implements:
  - Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptionsExtension.ApplyServices(IServiceCollection)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.EntityFrameworkCore.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Internal
  fullName: Microsoft.EntityFrameworkCore.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptionsExtension
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptionsExtension
  parent: Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: IDbContextOptionsExtension
  nameWithType: IDbContextOptionsExtension
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptionsExtension
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<CoreOptionsExtension, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<CoreOptionsExtension, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of CoreOptionsExtension, TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension, TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of CoreOptionsExtension, TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<CoreOptionsExtension, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<CoreOptionsExtension, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of CoreOptionsExtension, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of CoreOptionsExtension, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Infrastructure
  commentId: N:Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Infrastructure
  nameWithType: Microsoft.EntityFrameworkCore.Infrastructure
  fullName: Microsoft.EntityFrameworkCore.Infrastructure
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension
  commentId: T:Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension
  parent: Microsoft.EntityFrameworkCore.Internal
  isExternal: false
  name: CoreOptionsExtension
  nameWithType: CoreOptionsExtension
  fullName: Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.EntityFrameworkCore.Metadata.IModel
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IModel
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IModel
  nameWithType: IModel
  fullName: Microsoft.EntityFrameworkCore.Metadata.IModel
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: ILoggerFactory
  isExternal: true
  name: ILoggerFactory
  nameWithType: ILoggerFactory
  fullName: ILoggerFactory
- uid: IMemoryCache
  isExternal: true
  name: IMemoryCache
  nameWithType: IMemoryCache
  fullName: IMemoryCache
- uid: System.IServiceProvider
  commentId: T:System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: Microsoft.EntityFrameworkCore.Internal.WarningsConfiguration
  commentId: T:Microsoft.EntityFrameworkCore.Internal.WarningsConfiguration
  parent: Microsoft.EntityFrameworkCore.Internal
  isExternal: false
  name: WarningsConfiguration
  nameWithType: WarningsConfiguration
  fullName: Microsoft.EntityFrameworkCore.Internal.WarningsConfiguration
- uid: Microsoft.EntityFrameworkCore.QueryTrackingBehavior
  commentId: T:Microsoft.EntityFrameworkCore.QueryTrackingBehavior
  parent: Microsoft.EntityFrameworkCore
  isExternal: false
  name: QueryTrackingBehavior
  nameWithType: QueryTrackingBehavior
  fullName: Microsoft.EntityFrameworkCore.QueryTrackingBehavior
- uid: Microsoft.EntityFrameworkCore
  commentId: N:Microsoft.EntityFrameworkCore
  isExternal: false
  name: Microsoft.EntityFrameworkCore
  nameWithType: Microsoft.EntityFrameworkCore
  fullName: Microsoft.EntityFrameworkCore
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Collections.Generic.IReadOnlyDictionary{System.Type,System.Type}
  commentId: T:System.Collections.Generic.IReadOnlyDictionary{System.Type,System.Type}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyDictionary`2
  name: IReadOnlyDictionary<Type, Type>
  nameWithType: IReadOnlyDictionary<Type, Type>
  fullName: System.Collections.Generic.IReadOnlyDictionary<System.Type, System.Type>
  nameWithType.vb: IReadOnlyDictionary(Of Type, Type)
  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of System.Type, System.Type)
  name.vb: IReadOnlyDictionary(Of Type, Type)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyDictionary`2
  commentId: T:System.Collections.Generic.IReadOnlyDictionary`2
  isExternal: true
  name: IReadOnlyDictionary<TKey, TValue>
  nameWithType: IReadOnlyDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>
  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue)
  name.vb: IReadOnlyDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptionsExtension.ApplyServices(IServiceCollection)
  commentId: M:Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptionsExtension.ApplyServices(IServiceCollection)
  parent: Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptionsExtension
  isExternal: true
  name: ApplyServices(IServiceCollection)
  nameWithType: IDbContextOptionsExtension.ApplyServices(IServiceCollection)
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptionsExtension.ApplyServices(IServiceCollection)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptionsExtension.ApplyServices(IServiceCollection)
    name: ApplyServices
    nameWithType: IDbContextOptionsExtension.ApplyServices
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptionsExtension.ApplyServices
  - name: (
    nameWithType: (
    fullName: (
  - uid: IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: IServiceCollection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptionsExtension.ApplyServices(IServiceCollection)
    name: ApplyServices
    nameWithType: IDbContextOptionsExtension.ApplyServices
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptionsExtension.ApplyServices
  - name: (
    nameWithType: (
    fullName: (
  - uid: IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: IServiceCollection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IServiceCollection
  isExternal: true
  name: IServiceCollection
  nameWithType: IServiceCollection
  fullName: IServiceCollection
