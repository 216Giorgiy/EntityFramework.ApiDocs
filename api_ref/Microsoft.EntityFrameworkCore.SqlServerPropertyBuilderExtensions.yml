### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions
  commentId: T:Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions
  id: SqlServerPropertyBuilderExtensions
  parent: Microsoft.EntityFrameworkCore
  children:
  - Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerHasColumnName(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder,System.String)
  - Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerHasColumnName``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{``0},System.String)
  - Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerHasColumnType(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder,System.String)
  - Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerHasColumnType``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{``0},System.String)
  - Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerHasComputedColumnSql(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder,System.String)
  - Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerHasComputedColumnSql``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{``0},System.String)
  - Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerHasDefaultValue(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder,System.Object)
  - Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerHasDefaultValue``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{``0},System.Object)
  - Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerHasDefaultValueSql(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder,System.String)
  - Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerHasDefaultValueSql``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{``0},System.String)
  - Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerUseSequenceHiLo(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder,System.String,System.String)
  - Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerUseSequenceHiLo``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{``0},System.String,System.String)
  - Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.UseSqlServerIdentityColumn(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder)
  - Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.UseSqlServerIdentityColumn``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{``0})
  langs:
  - csharp
  - vb
  name: SqlServerPropertyBuilderExtensions
  nameWithType: SqlServerPropertyBuilderExtensions
  fullName: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer/Extensions/SqlServerPropertyBuilderExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: SqlServerPropertyBuilderExtensions
    path: src/Microsoft.EntityFrameworkCore.SqlServer/Extensions/SqlServerPropertyBuilderExtensions.cs
    startLine: 16
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer
  namespace: Microsoft.EntityFrameworkCore
  summary: "\nSQL Server specific extension methods for <xref href=\"Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static class SqlServerPropertyBuilderExtensions
    content.vb: Public Module SqlServerPropertyBuilderExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerHasColumnName(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerHasColumnName(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder,System.String)
  id: ForSqlServerHasColumnName(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder,System.String)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions
  langs:
  - csharp
  - vb
  name: ForSqlServerHasColumnName(PropertyBuilder, String)
  nameWithType: SqlServerPropertyBuilderExtensions.ForSqlServerHasColumnName(PropertyBuilder, String)
  fullName: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerHasColumnName(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer/Extensions/SqlServerPropertyBuilderExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ForSqlServerHasColumnName
    path: src/Microsoft.EntityFrameworkCore.SqlServer/Extensions/SqlServerPropertyBuilderExtensions.cs
    startLine: 24
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer
  namespace: Microsoft.EntityFrameworkCore
  summary: "\nConfigures the column that the property maps to when targeting SQL Server.\n"
  example: []
  syntax:
    content: public static PropertyBuilder ForSqlServerHasColumnName(this PropertyBuilder propertyBuilder, string name)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ForSqlServerHasColumnName(propertyBuilder As PropertyBuilder, name As String) As PropertyBuilder
    parameters:
    - id: propertyBuilder
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder
      description: 'The builder for the property being configured. '
    - id: name
      type: System.String
      description: 'The name of the column. '
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder
      description: 'The same builder instance so that multiple calls can be chained. '
  overload: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerHasColumnName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerHasColumnName``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{``0},System.String)
  commentId: M:Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerHasColumnName``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{``0},System.String)
  id: ForSqlServerHasColumnName``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{``0},System.String)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions
  langs:
  - csharp
  - vb
  name: ForSqlServerHasColumnName<TProperty>(PropertyBuilder<TProperty>, String)
  nameWithType: SqlServerPropertyBuilderExtensions.ForSqlServerHasColumnName<TProperty>(PropertyBuilder<TProperty>, String)
  fullName: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerHasColumnName<TProperty>(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder<TProperty>, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer/Extensions/SqlServerPropertyBuilderExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ForSqlServerHasColumnName
    path: src/Microsoft.EntityFrameworkCore.SqlServer/Extensions/SqlServerPropertyBuilderExtensions.cs
    startLine: 43
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer
  namespace: Microsoft.EntityFrameworkCore
  summary: "\nConfigures the column that the property maps to when targeting SQL Server.\n"
  example: []
  syntax:
    content: public static PropertyBuilder<TProperty> ForSqlServerHasColumnName<TProperty>(this PropertyBuilder<TProperty> propertyBuilder, string name)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ForSqlServerHasColumnName(Of TProperty)(propertyBuilder As PropertyBuilder(Of TProperty), name As String) As PropertyBuilder(Of TProperty)
    parameters:
    - id: propertyBuilder
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{{TProperty}}
      description: 'The builder for the property being configured. '
    - id: name
      type: System.String
      description: 'The name of the column. '
    typeParameters:
    - id: TProperty
      description: 'The type of the property being configured. '
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{{TProperty}}
      description: 'The same builder instance so that multiple calls can be chained. '
  overload: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerHasColumnName*
  nameWithType.vb: SqlServerPropertyBuilderExtensions.ForSqlServerHasColumnName(Of TProperty)(PropertyBuilder(Of TProperty), String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerHasColumnName(Of TProperty)(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder(Of TProperty), System.String)
  name.vb: ForSqlServerHasColumnName(Of TProperty)(PropertyBuilder(Of TProperty), String)
- uid: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerHasColumnType(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerHasColumnType(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder,System.String)
  id: ForSqlServerHasColumnType(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder,System.String)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions
  langs:
  - csharp
  - vb
  name: ForSqlServerHasColumnType(PropertyBuilder, String)
  nameWithType: SqlServerPropertyBuilderExtensions.ForSqlServerHasColumnType(PropertyBuilder, String)
  fullName: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerHasColumnType(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer/Extensions/SqlServerPropertyBuilderExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ForSqlServerHasColumnType
    path: src/Microsoft.EntityFrameworkCore.SqlServer/Extensions/SqlServerPropertyBuilderExtensions.cs
    startLine: 55
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer
  namespace: Microsoft.EntityFrameworkCore
  summary: "\nConfigures the data type of the column that the property maps to when targeting SQL Server.\nThis should be the complete type name, including precision, scale, length, etc.\n"
  example: []
  syntax:
    content: public static PropertyBuilder ForSqlServerHasColumnType(this PropertyBuilder propertyBuilder, string typeName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ForSqlServerHasColumnType(propertyBuilder As PropertyBuilder, typeName As String) As PropertyBuilder
    parameters:
    - id: propertyBuilder
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder
      description: 'The builder for the property being configured. '
    - id: typeName
      type: System.String
      description: 'The name of the data type of the column. '
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder
      description: 'The same builder instance so that multiple calls can be chained. '
  overload: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerHasColumnType*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerHasColumnType``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{``0},System.String)
  commentId: M:Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerHasColumnType``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{``0},System.String)
  id: ForSqlServerHasColumnType``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{``0},System.String)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions
  langs:
  - csharp
  - vb
  name: ForSqlServerHasColumnType<TProperty>(PropertyBuilder<TProperty>, String)
  nameWithType: SqlServerPropertyBuilderExtensions.ForSqlServerHasColumnType<TProperty>(PropertyBuilder<TProperty>, String)
  fullName: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerHasColumnType<TProperty>(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder<TProperty>, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer/Extensions/SqlServerPropertyBuilderExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ForSqlServerHasColumnType
    path: src/Microsoft.EntityFrameworkCore.SqlServer/Extensions/SqlServerPropertyBuilderExtensions.cs
    startLine: 75
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer
  namespace: Microsoft.EntityFrameworkCore
  summary: "\nConfigures the data type of the column that the property maps to when targeting SQL Server.\nThis should be the complete type name, including precision, scale, length, etc.\n"
  example: []
  syntax:
    content: public static PropertyBuilder<TProperty> ForSqlServerHasColumnType<TProperty>(this PropertyBuilder<TProperty> propertyBuilder, string typeName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ForSqlServerHasColumnType(Of TProperty)(propertyBuilder As PropertyBuilder(Of TProperty), typeName As String) As PropertyBuilder(Of TProperty)
    parameters:
    - id: propertyBuilder
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{{TProperty}}
      description: 'The builder for the property being configured. '
    - id: typeName
      type: System.String
      description: 'The name of the data type of the column. '
    typeParameters:
    - id: TProperty
      description: 'The type of the property being configured. '
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{{TProperty}}
      description: 'The same builder instance so that multiple calls can be chained. '
  overload: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerHasColumnType*
  nameWithType.vb: SqlServerPropertyBuilderExtensions.ForSqlServerHasColumnType(Of TProperty)(PropertyBuilder(Of TProperty), String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerHasColumnType(Of TProperty)(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder(Of TProperty), System.String)
  name.vb: ForSqlServerHasColumnType(Of TProperty)(PropertyBuilder(Of TProperty), String)
- uid: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerHasDefaultValueSql(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerHasDefaultValueSql(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder,System.String)
  id: ForSqlServerHasDefaultValueSql(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder,System.String)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions
  langs:
  - csharp
  - vb
  name: ForSqlServerHasDefaultValueSql(PropertyBuilder, String)
  nameWithType: SqlServerPropertyBuilderExtensions.ForSqlServerHasDefaultValueSql(PropertyBuilder, String)
  fullName: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerHasDefaultValueSql(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer/Extensions/SqlServerPropertyBuilderExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ForSqlServerHasDefaultValueSql
    path: src/Microsoft.EntityFrameworkCore.SqlServer/Extensions/SqlServerPropertyBuilderExtensions.cs
    startLine: 86
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer
  namespace: Microsoft.EntityFrameworkCore
  summary: "\nConfigures the default value expression for the column that the property maps to when targeting SQL Server.\n"
  example: []
  syntax:
    content: public static PropertyBuilder ForSqlServerHasDefaultValueSql(this PropertyBuilder propertyBuilder, string sql)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ForSqlServerHasDefaultValueSql(propertyBuilder As PropertyBuilder, sql As String) As PropertyBuilder
    parameters:
    - id: propertyBuilder
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder
      description: 'The builder for the property being configured. '
    - id: sql
      type: System.String
      description: 'The SQL expression for the default value of the column. '
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder
      description: 'The same builder instance so that multiple calls can be chained. '
  overload: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerHasDefaultValueSql*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerHasDefaultValueSql``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{``0},System.String)
  commentId: M:Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerHasDefaultValueSql``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{``0},System.String)
  id: ForSqlServerHasDefaultValueSql``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{``0},System.String)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions
  langs:
  - csharp
  - vb
  name: ForSqlServerHasDefaultValueSql<TProperty>(PropertyBuilder<TProperty>, String)
  nameWithType: SqlServerPropertyBuilderExtensions.ForSqlServerHasDefaultValueSql<TProperty>(PropertyBuilder<TProperty>, String)
  fullName: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerHasDefaultValueSql<TProperty>(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder<TProperty>, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer/Extensions/SqlServerPropertyBuilderExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ForSqlServerHasDefaultValueSql
    path: src/Microsoft.EntityFrameworkCore.SqlServer/Extensions/SqlServerPropertyBuilderExtensions.cs
    startLine: 105
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer
  namespace: Microsoft.EntityFrameworkCore
  summary: "\nConfigures the default value expression for the column that the property maps to when targeting SQL Server.\n"
  example: []
  syntax:
    content: public static PropertyBuilder<TProperty> ForSqlServerHasDefaultValueSql<TProperty>(this PropertyBuilder<TProperty> propertyBuilder, string sql)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ForSqlServerHasDefaultValueSql(Of TProperty)(propertyBuilder As PropertyBuilder(Of TProperty), sql As String) As PropertyBuilder(Of TProperty)
    parameters:
    - id: propertyBuilder
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{{TProperty}}
      description: 'The builder for the property being configured. '
    - id: sql
      type: System.String
      description: 'The SQL expression for the default value of the column. '
    typeParameters:
    - id: TProperty
      description: 'The type of the property being configured. '
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{{TProperty}}
      description: 'The same builder instance so that multiple calls can be chained. '
  overload: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerHasDefaultValueSql*
  nameWithType.vb: SqlServerPropertyBuilderExtensions.ForSqlServerHasDefaultValueSql(Of TProperty)(PropertyBuilder(Of TProperty), String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerHasDefaultValueSql(Of TProperty)(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder(Of TProperty), System.String)
  name.vb: ForSqlServerHasDefaultValueSql(Of TProperty)(PropertyBuilder(Of TProperty), String)
- uid: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerHasDefaultValue(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder,System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerHasDefaultValue(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder,System.Object)
  id: ForSqlServerHasDefaultValue(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder,System.Object)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions
  langs:
  - csharp
  - vb
  name: ForSqlServerHasDefaultValue(PropertyBuilder, Object)
  nameWithType: SqlServerPropertyBuilderExtensions.ForSqlServerHasDefaultValue(PropertyBuilder, Object)
  fullName: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerHasDefaultValue(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer/Extensions/SqlServerPropertyBuilderExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ForSqlServerHasDefaultValue
    path: src/Microsoft.EntityFrameworkCore.SqlServer/Extensions/SqlServerPropertyBuilderExtensions.cs
    startLine: 116
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer
  namespace: Microsoft.EntityFrameworkCore
  summary: "\nConfigures the default value for the column that the property maps to when targeting SQL Server.\n"
  example: []
  syntax:
    content: public static PropertyBuilder ForSqlServerHasDefaultValue(this PropertyBuilder propertyBuilder, object value)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ForSqlServerHasDefaultValue(propertyBuilder As PropertyBuilder, value As Object) As PropertyBuilder
    parameters:
    - id: propertyBuilder
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder
      description: 'The builder for the property being configured. '
    - id: value
      type: System.Object
      description: 'The default value of the column. '
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder
      description: 'The same builder instance so that multiple calls can be chained. '
  overload: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerHasDefaultValue*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerHasDefaultValue``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{``0},System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerHasDefaultValue``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{``0},System.Object)
  id: ForSqlServerHasDefaultValue``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{``0},System.Object)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions
  langs:
  - csharp
  - vb
  name: ForSqlServerHasDefaultValue<TProperty>(PropertyBuilder<TProperty>, Object)
  nameWithType: SqlServerPropertyBuilderExtensions.ForSqlServerHasDefaultValue<TProperty>(PropertyBuilder<TProperty>, Object)
  fullName: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerHasDefaultValue<TProperty>(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder<TProperty>, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer/Extensions/SqlServerPropertyBuilderExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ForSqlServerHasDefaultValue
    path: src/Microsoft.EntityFrameworkCore.SqlServer/Extensions/SqlServerPropertyBuilderExtensions.cs
    startLine: 134
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer
  namespace: Microsoft.EntityFrameworkCore
  summary: "\nConfigures the default value for the column that the property maps to when targeting SQL Server.\n"
  example: []
  syntax:
    content: public static PropertyBuilder<TProperty> ForSqlServerHasDefaultValue<TProperty>(this PropertyBuilder<TProperty> propertyBuilder, object value)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ForSqlServerHasDefaultValue(Of TProperty)(propertyBuilder As PropertyBuilder(Of TProperty), value As Object) As PropertyBuilder(Of TProperty)
    parameters:
    - id: propertyBuilder
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{{TProperty}}
      description: 'The builder for the property being configured. '
    - id: value
      type: System.Object
      description: 'The default value of the column. '
    typeParameters:
    - id: TProperty
      description: 'The type of the property being configured. '
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{{TProperty}}
      description: 'The same builder instance so that multiple calls can be chained. '
  overload: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerHasDefaultValue*
  nameWithType.vb: SqlServerPropertyBuilderExtensions.ForSqlServerHasDefaultValue(Of TProperty)(PropertyBuilder(Of TProperty), Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerHasDefaultValue(Of TProperty)(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder(Of TProperty), System.Object)
  name.vb: ForSqlServerHasDefaultValue(Of TProperty)(PropertyBuilder(Of TProperty), Object)
- uid: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerHasComputedColumnSql(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerHasComputedColumnSql(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder,System.String)
  id: ForSqlServerHasComputedColumnSql(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder,System.String)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions
  langs:
  - csharp
  - vb
  name: ForSqlServerHasComputedColumnSql(PropertyBuilder, String)
  nameWithType: SqlServerPropertyBuilderExtensions.ForSqlServerHasComputedColumnSql(PropertyBuilder, String)
  fullName: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerHasComputedColumnSql(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer/Extensions/SqlServerPropertyBuilderExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ForSqlServerHasComputedColumnSql
    path: src/Microsoft.EntityFrameworkCore.SqlServer/Extensions/SqlServerPropertyBuilderExtensions.cs
    startLine: 145
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer
  namespace: Microsoft.EntityFrameworkCore
  summary: "\nConfigures the property to map to a computed column when targeting SQL Server.\n"
  example: []
  syntax:
    content: public static PropertyBuilder ForSqlServerHasComputedColumnSql(this PropertyBuilder propertyBuilder, string sql)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ForSqlServerHasComputedColumnSql(propertyBuilder As PropertyBuilder, sql As String) As PropertyBuilder
    parameters:
    - id: propertyBuilder
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder
      description: 'The builder for the property being configured. '
    - id: sql
      type: System.String
      description: 'The SQL expression that computes values for the column. '
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder
      description: 'The same builder instance so that multiple calls can be chained. '
  overload: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerHasComputedColumnSql*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerHasComputedColumnSql``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{``0},System.String)
  commentId: M:Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerHasComputedColumnSql``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{``0},System.String)
  id: ForSqlServerHasComputedColumnSql``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{``0},System.String)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions
  langs:
  - csharp
  - vb
  name: ForSqlServerHasComputedColumnSql<TProperty>(PropertyBuilder<TProperty>, String)
  nameWithType: SqlServerPropertyBuilderExtensions.ForSqlServerHasComputedColumnSql<TProperty>(PropertyBuilder<TProperty>, String)
  fullName: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerHasComputedColumnSql<TProperty>(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder<TProperty>, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer/Extensions/SqlServerPropertyBuilderExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ForSqlServerHasComputedColumnSql
    path: src/Microsoft.EntityFrameworkCore.SqlServer/Extensions/SqlServerPropertyBuilderExtensions.cs
    startLine: 164
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer
  namespace: Microsoft.EntityFrameworkCore
  summary: "\nConfigures the property to map to a computed column when targeting SQL Server.\n"
  example: []
  syntax:
    content: public static PropertyBuilder<TProperty> ForSqlServerHasComputedColumnSql<TProperty>(this PropertyBuilder<TProperty> propertyBuilder, string sql)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ForSqlServerHasComputedColumnSql(Of TProperty)(propertyBuilder As PropertyBuilder(Of TProperty), sql As String) As PropertyBuilder(Of TProperty)
    parameters:
    - id: propertyBuilder
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{{TProperty}}
      description: 'The builder for the property being configured. '
    - id: sql
      type: System.String
      description: 'The SQL expression that computes values for the column. '
    typeParameters:
    - id: TProperty
      description: 'The type of the property being configured. '
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{{TProperty}}
      description: 'The same builder instance so that multiple calls can be chained. '
  overload: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerHasComputedColumnSql*
  nameWithType.vb: SqlServerPropertyBuilderExtensions.ForSqlServerHasComputedColumnSql(Of TProperty)(PropertyBuilder(Of TProperty), String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerHasComputedColumnSql(Of TProperty)(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder(Of TProperty), System.String)
  name.vb: ForSqlServerHasComputedColumnSql(Of TProperty)(PropertyBuilder(Of TProperty), String)
- uid: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerUseSequenceHiLo(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder,System.String,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerUseSequenceHiLo(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder,System.String,System.String)
  id: ForSqlServerUseSequenceHiLo(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions
  langs:
  - csharp
  - vb
  name: ForSqlServerUseSequenceHiLo(PropertyBuilder, String, String)
  nameWithType: SqlServerPropertyBuilderExtensions.ForSqlServerUseSequenceHiLo(PropertyBuilder, String, String)
  fullName: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerUseSequenceHiLo(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer/Extensions/SqlServerPropertyBuilderExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ForSqlServerUseSequenceHiLo
    path: src/Microsoft.EntityFrameworkCore.SqlServer/Extensions/SqlServerPropertyBuilderExtensions.cs
    startLine: 177
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer
  namespace: Microsoft.EntityFrameworkCore
  summary: "\nConfigures the property to use a sequence-based hi-lo pattern to generate values for new entities,\nwhen targeting SQL Server. This method sets the property to be <xref href=\"Microsoft.EntityFrameworkCore.Metadata.ValueGenerated.OnAdd\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static PropertyBuilder ForSqlServerUseSequenceHiLo(this PropertyBuilder propertyBuilder, string name = null, string schema = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ForSqlServerUseSequenceHiLo(propertyBuilder As PropertyBuilder, name As String = Nothing, schema As String = Nothing) As PropertyBuilder
    parameters:
    - id: propertyBuilder
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder
      description: 'The builder for the property being configured. '
    - id: name
      type: System.String
      description: 'The name of the sequence. '
    - id: schema
      type: System.String
      description: 'The schema of the sequence. '
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder
      description: 'The same builder instance so that multiple calls can be chained. '
  overload: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerUseSequenceHiLo*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerUseSequenceHiLo``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{``0},System.String,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerUseSequenceHiLo``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{``0},System.String,System.String)
  id: ForSqlServerUseSequenceHiLo``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{``0},System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions
  langs:
  - csharp
  - vb
  name: ForSqlServerUseSequenceHiLo<TProperty>(PropertyBuilder<TProperty>, String, String)
  nameWithType: SqlServerPropertyBuilderExtensions.ForSqlServerUseSequenceHiLo<TProperty>(PropertyBuilder<TProperty>, String, String)
  fullName: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerUseSequenceHiLo<TProperty>(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder<TProperty>, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer/Extensions/SqlServerPropertyBuilderExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ForSqlServerUseSequenceHiLo
    path: src/Microsoft.EntityFrameworkCore.SqlServer/Extensions/SqlServerPropertyBuilderExtensions.cs
    startLine: 214
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer
  namespace: Microsoft.EntityFrameworkCore
  summary: "\nConfigures the property to use a sequence-based hi-lo pattern to generate values for new entities,\nwhen targeting SQL Server. This method sets the property to be <xref href=\"Microsoft.EntityFrameworkCore.Metadata.ValueGenerated.OnAdd\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static PropertyBuilder<TProperty> ForSqlServerUseSequenceHiLo<TProperty>(this PropertyBuilder<TProperty> propertyBuilder, string name = null, string schema = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ForSqlServerUseSequenceHiLo(Of TProperty)(propertyBuilder As PropertyBuilder(Of TProperty), name As String = Nothing, schema As String = Nothing) As PropertyBuilder(Of TProperty)
    parameters:
    - id: propertyBuilder
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{{TProperty}}
      description: 'The builder for the property being configured. '
    - id: name
      type: System.String
      description: 'The name of the sequence. '
    - id: schema
      type: System.String
      description: 'The schema of the sequence. '
    typeParameters:
    - id: TProperty
      description: 'The type of the property being configured. '
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{{TProperty}}
      description: 'The same builder instance so that multiple calls can be chained. '
  overload: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerUseSequenceHiLo*
  nameWithType.vb: SqlServerPropertyBuilderExtensions.ForSqlServerUseSequenceHiLo(Of TProperty)(PropertyBuilder(Of TProperty), String, String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerUseSequenceHiLo(Of TProperty)(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder(Of TProperty), System.String, System.String)
  name.vb: ForSqlServerUseSequenceHiLo(Of TProperty)(PropertyBuilder(Of TProperty), String, String)
- uid: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.UseSqlServerIdentityColumn(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder)
  commentId: M:Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.UseSqlServerIdentityColumn(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder)
  id: UseSqlServerIdentityColumn(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions
  langs:
  - csharp
  - vb
  name: UseSqlServerIdentityColumn(PropertyBuilder)
  nameWithType: SqlServerPropertyBuilderExtensions.UseSqlServerIdentityColumn(PropertyBuilder)
  fullName: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.UseSqlServerIdentityColumn(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer/Extensions/SqlServerPropertyBuilderExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: UseSqlServerIdentityColumn
    path: src/Microsoft.EntityFrameworkCore.SqlServer/Extensions/SqlServerPropertyBuilderExtensions.cs
    startLine: 226
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer
  namespace: Microsoft.EntityFrameworkCore
  summary: "\nConfigures the property to use the SQL Server IDENTITY feature to generate values for new entities,\nwhen targeting SQL Server. This method sets the property to be <xref href=\"Microsoft.EntityFrameworkCore.Metadata.ValueGenerated.OnAdd\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static PropertyBuilder UseSqlServerIdentityColumn(this PropertyBuilder propertyBuilder)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UseSqlServerIdentityColumn(propertyBuilder As PropertyBuilder) As PropertyBuilder
    parameters:
    - id: propertyBuilder
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder
      description: 'The builder for the property being configured. '
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder
      description: 'The same builder instance so that multiple calls can be chained. '
  overload: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.UseSqlServerIdentityColumn*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.UseSqlServerIdentityColumn``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{``0})
  commentId: M:Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.UseSqlServerIdentityColumn``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{``0})
  id: UseSqlServerIdentityColumn``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{``0})
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions
  langs:
  - csharp
  - vb
  name: UseSqlServerIdentityColumn<TProperty>(PropertyBuilder<TProperty>)
  nameWithType: SqlServerPropertyBuilderExtensions.UseSqlServerIdentityColumn<TProperty>(PropertyBuilder<TProperty>)
  fullName: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.UseSqlServerIdentityColumn<TProperty>(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder<TProperty>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer/Extensions/SqlServerPropertyBuilderExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: UseSqlServerIdentityColumn
    path: src/Microsoft.EntityFrameworkCore.SqlServer/Extensions/SqlServerPropertyBuilderExtensions.cs
    startLine: 243
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer
  namespace: Microsoft.EntityFrameworkCore
  summary: "\nConfigures the property to use the SQL Server IDENTITY feature to generate values for new entities,\nwhen targeting SQL Server. This method sets the property to be <xref href=\"Microsoft.EntityFrameworkCore.Metadata.ValueGenerated.OnAdd\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static PropertyBuilder<TProperty> UseSqlServerIdentityColumn<TProperty>(this PropertyBuilder<TProperty> propertyBuilder)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UseSqlServerIdentityColumn(Of TProperty)(propertyBuilder As PropertyBuilder(Of TProperty)) As PropertyBuilder(Of TProperty)
    parameters:
    - id: propertyBuilder
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{{TProperty}}
      description: 'The builder for the property being configured. '
    typeParameters:
    - id: TProperty
      description: 'The type of the property being configured. '
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{{TProperty}}
      description: 'The same builder instance so that multiple calls can be chained. '
  overload: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.UseSqlServerIdentityColumn*
  nameWithType.vb: SqlServerPropertyBuilderExtensions.UseSqlServerIdentityColumn(Of TProperty)(PropertyBuilder(Of TProperty))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.UseSqlServerIdentityColumn(Of TProperty)(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder(Of TProperty))
  name.vb: UseSqlServerIdentityColumn(Of TProperty)(PropertyBuilder(Of TProperty))
references:
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders
  isExternal: false
  name: PropertyBuilder
  nameWithType: PropertyBuilder
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder
- uid: Microsoft.EntityFrameworkCore
  commentId: N:Microsoft.EntityFrameworkCore
  isExternal: false
  name: Microsoft.EntityFrameworkCore
  nameWithType: Microsoft.EntityFrameworkCore
  fullName: Microsoft.EntityFrameworkCore
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Builders
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Builders
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Builders
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerHasColumnName*
  commentId: Overload:Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerHasColumnName
  isExternal: false
  name: ForSqlServerHasColumnName
  nameWithType: SqlServerPropertyBuilderExtensions.ForSqlServerHasColumnName
  fullName: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerHasColumnName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{{TProperty}}
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{``0}
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders
  definition: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder`1
  name: PropertyBuilder<TProperty>
  nameWithType: PropertyBuilder<TProperty>
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder<TProperty>
  nameWithType.vb: PropertyBuilder(Of TProperty)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder(Of TProperty)
  name.vb: PropertyBuilder(Of TProperty)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder`1
    name: PropertyBuilder
    nameWithType: PropertyBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: TProperty
    nameWithType: TProperty
    fullName: TProperty
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder`1
    name: PropertyBuilder
    nameWithType: PropertyBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TProperty
    nameWithType: TProperty
    fullName: TProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder`1
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder`1
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders
  isExternal: false
  name: PropertyBuilder<TProperty>
  nameWithType: PropertyBuilder<TProperty>
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder<TProperty>
  nameWithType.vb: PropertyBuilder(Of TProperty)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder(Of TProperty)
  name.vb: PropertyBuilder(Of TProperty)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder`1
    name: PropertyBuilder
    nameWithType: PropertyBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: TProperty
    nameWithType: TProperty
    fullName: TProperty
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder`1
    name: PropertyBuilder
    nameWithType: PropertyBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TProperty
    nameWithType: TProperty
    fullName: TProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerHasColumnType*
  commentId: Overload:Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerHasColumnType
  isExternal: false
  name: ForSqlServerHasColumnType
  nameWithType: SqlServerPropertyBuilderExtensions.ForSqlServerHasColumnType
  fullName: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerHasColumnType
- uid: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerHasDefaultValueSql*
  commentId: Overload:Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerHasDefaultValueSql
  isExternal: false
  name: ForSqlServerHasDefaultValueSql
  nameWithType: SqlServerPropertyBuilderExtensions.ForSqlServerHasDefaultValueSql
  fullName: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerHasDefaultValueSql
- uid: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerHasDefaultValue*
  commentId: Overload:Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerHasDefaultValue
  isExternal: false
  name: ForSqlServerHasDefaultValue
  nameWithType: SqlServerPropertyBuilderExtensions.ForSqlServerHasDefaultValue
  fullName: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerHasDefaultValue
- uid: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerHasComputedColumnSql*
  commentId: Overload:Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerHasComputedColumnSql
  isExternal: false
  name: ForSqlServerHasComputedColumnSql
  nameWithType: SqlServerPropertyBuilderExtensions.ForSqlServerHasComputedColumnSql
  fullName: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerHasComputedColumnSql
- uid: Microsoft.EntityFrameworkCore.Metadata.ValueGenerated.OnAdd
  commentId: F:Microsoft.EntityFrameworkCore.Metadata.ValueGenerated.OnAdd
- uid: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerUseSequenceHiLo*
  commentId: Overload:Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerUseSequenceHiLo
  isExternal: false
  name: ForSqlServerUseSequenceHiLo
  nameWithType: SqlServerPropertyBuilderExtensions.ForSqlServerUseSequenceHiLo
  fullName: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.ForSqlServerUseSequenceHiLo
- uid: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.UseSqlServerIdentityColumn*
  commentId: Overload:Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.UseSqlServerIdentityColumn
  isExternal: false
  name: UseSqlServerIdentityColumn
  nameWithType: SqlServerPropertyBuilderExtensions.UseSqlServerIdentityColumn
  fullName: Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions.UseSqlServerIdentityColumn
