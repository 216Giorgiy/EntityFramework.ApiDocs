### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Internal.EntityFinder`1
  commentId: T:Microsoft.EntityFrameworkCore.Internal.EntityFinder`1
  id: EntityFinder`1
  parent: Microsoft.EntityFrameworkCore.Internal
  children:
  - Microsoft.EntityFrameworkCore.Internal.EntityFinder`1.#ctor(Microsoft.EntityFrameworkCore.DbContext)
  - Microsoft.EntityFrameworkCore.Internal.EntityFinder`1.Find(System.Object[])
  - Microsoft.EntityFrameworkCore.Internal.EntityFinder`1.FindAsync(System.Object[],System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.Internal.EntityFinder`1.GetDatabaseValues(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  - Microsoft.EntityFrameworkCore.Internal.EntityFinder`1.GetDatabaseValuesAsync(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.Internal.EntityFinder`1.Load(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  - Microsoft.EntityFrameworkCore.Internal.EntityFinder`1.LoadAsync(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.Internal.EntityFinder`1.Microsoft#EntityFrameworkCore#Internal#IEntityFinder#Find(System.Object[])
  - Microsoft.EntityFrameworkCore.Internal.EntityFinder`1.Microsoft#EntityFrameworkCore#Internal#IEntityFinder#FindAsync(System.Object[],System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.Internal.EntityFinder`1.Microsoft#EntityFrameworkCore#Internal#IEntityFinder#Query(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  - Microsoft.EntityFrameworkCore.Internal.EntityFinder`1.Query(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  langs:
  - csharp
  - vb
  name: EntityFinder<TEntity>
  nameWithType: EntityFinder<TEntity>
  fullName: Microsoft.EntityFrameworkCore.Internal.EntityFinder<TEntity>
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/EntityFinder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: EntityFinder
    path: src/Microsoft.EntityFrameworkCore/Internal/EntityFinder.cs
    startLine: 22
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public class EntityFinder<TEntity> : IEntityFinder<TEntity>, IEntityFinder where TEntity : class'
    content.vb: >-
      Public Class EntityFinder(Of TEntity As Class)
          Implements IEntityFinder(Of TEntity), IEntityFinder
    typeParameters:
    - id: TEntity
  inheritance:
  - System.Object
  implements:
  - Microsoft.EntityFrameworkCore.Internal.IEntityFinder{{TEntity}}
  - Microsoft.EntityFrameworkCore.Internal.IEntityFinder
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Internal.EntityFinder`1.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  nameWithType.vb: EntityFinder(Of TEntity)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.EntityFrameworkCore.Internal.EntityFinder(Of TEntity)
  name.vb: EntityFinder(Of TEntity)
- uid: Microsoft.EntityFrameworkCore.Internal.EntityFinder`1.#ctor(Microsoft.EntityFrameworkCore.DbContext)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.EntityFinder`1.#ctor(Microsoft.EntityFrameworkCore.DbContext)
  id: '#ctor(Microsoft.EntityFrameworkCore.DbContext)'
  parent: Microsoft.EntityFrameworkCore.Internal.EntityFinder`1
  langs:
  - csharp
  - vb
  name: EntityFinder(DbContext)
  nameWithType: EntityFinder<TEntity>.EntityFinder(DbContext)
  fullName: Microsoft.EntityFrameworkCore.Internal.EntityFinder<TEntity>.EntityFinder(Microsoft.EntityFrameworkCore.DbContext)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/EntityFinder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore/Internal/EntityFinder.cs
    startLine: 33
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public EntityFinder(DbContext context)
    content.vb: Public Sub New(context As DbContext)
    parameters:
    - id: context
      type: Microsoft.EntityFrameworkCore.DbContext
  nameWithType.vb: EntityFinder(Of TEntity).EntityFinder(DbContext)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Internal.EntityFinder(Of TEntity).EntityFinder(Microsoft.EntityFrameworkCore.DbContext)
- uid: Microsoft.EntityFrameworkCore.Internal.EntityFinder`1.Find(System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.Internal.EntityFinder`1.Find(System.Object[])
  id: Find(System.Object[])
  parent: Microsoft.EntityFrameworkCore.Internal.EntityFinder`1
  langs:
  - csharp
  - vb
  name: Find(Object[])
  nameWithType: EntityFinder<TEntity>.Find(Object[])
  fullName: Microsoft.EntityFrameworkCore.Internal.EntityFinder<TEntity>.Find(System.Object[])
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/EntityFinder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Find
    path: src/Microsoft.EntityFrameworkCore/Internal/EntityFinder.cs
    startLine: 44
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual TEntity Find(object[] keyValues)
    content.vb: Public Overridable Function Find(keyValues As Object()) As TEntity
    parameters:
    - id: keyValues
      type: System.Object[]
    return:
      type: '{TEntity}'
  implements:
  - Microsoft.EntityFrameworkCore.Internal.IEntityFinder{{TEntity}}.Find(System.Object[])
  nameWithType.vb: EntityFinder(Of TEntity).Find(Object())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Internal.EntityFinder(Of TEntity).Find(System.Object())
  name.vb: Find(Object())
- uid: Microsoft.EntityFrameworkCore.Internal.EntityFinder`1.Microsoft#EntityFrameworkCore#Internal#IEntityFinder#Find(System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.Internal.EntityFinder`1.Microsoft#EntityFrameworkCore#Internal#IEntityFinder#Find(System.Object[])
  id: Microsoft#EntityFrameworkCore#Internal#IEntityFinder#Find(System.Object[])
  isEii: true
  parent: Microsoft.EntityFrameworkCore.Internal.EntityFinder`1
  langs:
  - csharp
  - vb
  name: IEntityFinder.Find(Object[])
  nameWithType: EntityFinder<TEntity>.IEntityFinder.Find(Object[])
  fullName: Microsoft.EntityFrameworkCore.Internal.EntityFinder<TEntity>.Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Find(System.Object[])
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/EntityFinder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Find
    path: src/Microsoft.EntityFrameworkCore/Internal/EntityFinder.cs
    startLine: 57
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: object IEntityFinder.Find(object[] keyValues)
    content.vb: Function Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Find(keyValues As Object()) As Object Implements IEntityFinder.Find
    parameters:
    - id: keyValues
      type: System.Object[]
    return:
      type: System.Object
  implements:
  - Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Find(System.Object[])
  nameWithType.vb: EntityFinder(Of TEntity).Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Find(Object())
  fullName.vb: Microsoft.EntityFrameworkCore.Internal.EntityFinder(Of TEntity).Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Find(System.Object())
  name.vb: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Find(Object())
- uid: Microsoft.EntityFrameworkCore.Internal.EntityFinder`1.FindAsync(System.Object[],System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.EntityFinder`1.FindAsync(System.Object[],System.Threading.CancellationToken)
  id: FindAsync(System.Object[],System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.Internal.EntityFinder`1
  langs:
  - csharp
  - vb
  name: FindAsync(Object[], CancellationToken)
  nameWithType: EntityFinder<TEntity>.FindAsync(Object[], CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Internal.EntityFinder<TEntity>.FindAsync(System.Object[], System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/EntityFinder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: FindAsync
    path: src/Microsoft.EntityFrameworkCore/Internal/EntityFinder.cs
    startLine: 64
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual Task<TEntity> FindAsync(object[] keyValues, CancellationToken cancellationToken = null)
    content.vb: Public Overridable Function FindAsync(keyValues As Object(), cancellationToken As CancellationToken = Nothing) As Task(Of TEntity)
    parameters:
    - id: keyValues
      type: System.Object[]
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{{TEntity}}
  implements:
  - Microsoft.EntityFrameworkCore.Internal.IEntityFinder{{TEntity}}.FindAsync(System.Object[],System.Threading.CancellationToken)
  nameWithType.vb: EntityFinder(Of TEntity).FindAsync(Object(), CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Internal.EntityFinder(Of TEntity).FindAsync(System.Object(), System.Threading.CancellationToken)
  name.vb: FindAsync(Object(), CancellationToken)
- uid: Microsoft.EntityFrameworkCore.Internal.EntityFinder`1.Microsoft#EntityFrameworkCore#Internal#IEntityFinder#FindAsync(System.Object[],System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.EntityFinder`1.Microsoft#EntityFrameworkCore#Internal#IEntityFinder#FindAsync(System.Object[],System.Threading.CancellationToken)
  id: Microsoft#EntityFrameworkCore#Internal#IEntityFinder#FindAsync(System.Object[],System.Threading.CancellationToken)
  isEii: true
  parent: Microsoft.EntityFrameworkCore.Internal.EntityFinder`1
  langs:
  - csharp
  - vb
  name: IEntityFinder.FindAsync(Object[], CancellationToken)
  nameWithType: EntityFinder<TEntity>.IEntityFinder.FindAsync(Object[], CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Internal.EntityFinder<TEntity>.Microsoft.EntityFrameworkCore.Internal.IEntityFinder.FindAsync(System.Object[], System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/EntityFinder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.FindAsync
    path: src/Microsoft.EntityFrameworkCore/Internal/EntityFinder.cs
    startLine: 79
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: Task<object> IEntityFinder.FindAsync(object[] keyValues, CancellationToken cancellationToken)
    content.vb: Function Microsoft.EntityFrameworkCore.Internal.IEntityFinder.FindAsync(keyValues As Object(), cancellationToken As CancellationToken) As Task(Of Object) Implements IEntityFinder.FindAsync
    parameters:
    - id: keyValues
      type: System.Object[]
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Object}
  implements:
  - Microsoft.EntityFrameworkCore.Internal.IEntityFinder.FindAsync(System.Object[],System.Threading.CancellationToken)
  nameWithType.vb: EntityFinder(Of TEntity).Microsoft.EntityFrameworkCore.Internal.IEntityFinder.FindAsync(Object(), CancellationToken)
  fullName.vb: Microsoft.EntityFrameworkCore.Internal.EntityFinder(Of TEntity).Microsoft.EntityFrameworkCore.Internal.IEntityFinder.FindAsync(System.Object(), System.Threading.CancellationToken)
  name.vb: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.FindAsync(Object(), CancellationToken)
- uid: Microsoft.EntityFrameworkCore.Internal.EntityFinder`1.Load(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.EntityFinder`1.Load(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  id: Load(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  parent: Microsoft.EntityFrameworkCore.Internal.EntityFinder`1
  langs:
  - csharp
  - vb
  name: Load(INavigation, InternalEntityEntry)
  nameWithType: EntityFinder<TEntity>.Load(INavigation, InternalEntityEntry)
  fullName: Microsoft.EntityFrameworkCore.Internal.EntityFinder<TEntity>.Load(Microsoft.EntityFrameworkCore.Metadata.INavigation, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/EntityFinder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Load
    path: src/Microsoft.EntityFrameworkCore/Internal/EntityFinder.cs
    startLine: 95
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual void Load(INavigation navigation, InternalEntityEntry entry)
    content.vb: Public Overridable Sub Load(navigation As INavigation, entry As InternalEntityEntry)
    parameters:
    - id: navigation
      type: Microsoft.EntityFrameworkCore.Metadata.INavigation
    - id: entry
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  implements:
  - Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Load(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  nameWithType.vb: EntityFinder(Of TEntity).Load(INavigation, InternalEntityEntry)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Internal.EntityFinder(Of TEntity).Load(Microsoft.EntityFrameworkCore.Metadata.INavigation, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
- uid: Microsoft.EntityFrameworkCore.Internal.EntityFinder`1.LoadAsync(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.EntityFinder`1.LoadAsync(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.Threading.CancellationToken)
  id: LoadAsync(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.Internal.EntityFinder`1
  langs:
  - csharp
  - vb
  name: LoadAsync(INavigation, InternalEntityEntry, CancellationToken)
  nameWithType: EntityFinder<TEntity>.LoadAsync(INavigation, InternalEntityEntry, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Internal.EntityFinder<TEntity>.LoadAsync(Microsoft.EntityFrameworkCore.Metadata.INavigation, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/EntityFinder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: LoadAsync
    path: src/Microsoft.EntityFrameworkCore/Internal/EntityFinder.cs
    startLine: 111
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual Task LoadAsync(INavigation navigation, InternalEntityEntry entry, CancellationToken cancellationToken = null)
    content.vb: Public Overridable Function LoadAsync(navigation As INavigation, entry As InternalEntityEntry, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: navigation
      type: Microsoft.EntityFrameworkCore.Metadata.INavigation
    - id: entry
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
  implements:
  - Microsoft.EntityFrameworkCore.Internal.IEntityFinder.LoadAsync(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.Threading.CancellationToken)
  nameWithType.vb: EntityFinder(Of TEntity).LoadAsync(INavigation, InternalEntityEntry, CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Internal.EntityFinder(Of TEntity).LoadAsync(Microsoft.EntityFrameworkCore.Metadata.INavigation, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry, System.Threading.CancellationToken)
- uid: Microsoft.EntityFrameworkCore.Internal.EntityFinder`1.Query(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.EntityFinder`1.Query(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  id: Query(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  parent: Microsoft.EntityFrameworkCore.Internal.EntityFinder`1
  langs:
  - csharp
  - vb
  name: Query(INavigation, InternalEntityEntry)
  nameWithType: EntityFinder<TEntity>.Query(INavigation, InternalEntityEntry)
  fullName: Microsoft.EntityFrameworkCore.Internal.EntityFinder<TEntity>.Query(Microsoft.EntityFrameworkCore.Metadata.INavigation, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/EntityFinder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Query
    path: src/Microsoft.EntityFrameworkCore/Internal/EntityFinder.cs
    startLine: 130
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual IQueryable<TEntity> Query(INavigation navigation, InternalEntityEntry entry)
    content.vb: Public Overridable Function Query(navigation As INavigation, entry As InternalEntityEntry) As IQueryable(Of TEntity)
    parameters:
    - id: navigation
      type: Microsoft.EntityFrameworkCore.Metadata.INavigation
    - id: entry
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    return:
      type: System.Linq.IQueryable{{TEntity}}
  implements:
  - Microsoft.EntityFrameworkCore.Internal.IEntityFinder{{TEntity}}.Query(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  nameWithType.vb: EntityFinder(Of TEntity).Query(INavigation, InternalEntityEntry)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Internal.EntityFinder(Of TEntity).Query(Microsoft.EntityFrameworkCore.Metadata.INavigation, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
- uid: Microsoft.EntityFrameworkCore.Internal.EntityFinder`1.GetDatabaseValues(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.EntityFinder`1.GetDatabaseValues(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  id: GetDatabaseValues(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  parent: Microsoft.EntityFrameworkCore.Internal.EntityFinder`1
  langs:
  - csharp
  - vb
  name: GetDatabaseValues(InternalEntityEntry)
  nameWithType: EntityFinder<TEntity>.GetDatabaseValues(InternalEntityEntry)
  fullName: Microsoft.EntityFrameworkCore.Internal.EntityFinder<TEntity>.GetDatabaseValues(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/EntityFinder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GetDatabaseValues
    path: src/Microsoft.EntityFrameworkCore/Internal/EntityFinder.cs
    startLine: 148
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual object[] GetDatabaseValues(InternalEntityEntry entry)
    content.vb: Public Overridable Function GetDatabaseValues(entry As InternalEntityEntry) As Object()
    parameters:
    - id: entry
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    return:
      type: System.Object[]
  implements:
  - Microsoft.EntityFrameworkCore.Internal.IEntityFinder.GetDatabaseValues(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  nameWithType.vb: EntityFinder(Of TEntity).GetDatabaseValues(InternalEntityEntry)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Internal.EntityFinder(Of TEntity).GetDatabaseValues(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
- uid: Microsoft.EntityFrameworkCore.Internal.EntityFinder`1.GetDatabaseValuesAsync(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.EntityFinder`1.GetDatabaseValuesAsync(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.Threading.CancellationToken)
  id: GetDatabaseValuesAsync(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.Internal.EntityFinder`1
  langs:
  - csharp
  - vb
  name: GetDatabaseValuesAsync(InternalEntityEntry, CancellationToken)
  nameWithType: EntityFinder<TEntity>.GetDatabaseValuesAsync(InternalEntityEntry, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Internal.EntityFinder<TEntity>.GetDatabaseValuesAsync(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/EntityFinder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GetDatabaseValuesAsync
    path: src/Microsoft.EntityFrameworkCore/Internal/EntityFinder.cs
    startLine: 155
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual Task<object[]> GetDatabaseValuesAsync(InternalEntityEntry entry, CancellationToken cancellationToken = null)
    content.vb: Public Overridable Function GetDatabaseValuesAsync(entry As InternalEntityEntry, cancellationToken As CancellationToken = Nothing) As Task(Of Object())
    parameters:
    - id: entry
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Object[]}
  implements:
  - Microsoft.EntityFrameworkCore.Internal.IEntityFinder.GetDatabaseValuesAsync(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.Threading.CancellationToken)
  nameWithType.vb: EntityFinder(Of TEntity).GetDatabaseValuesAsync(InternalEntityEntry, CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Internal.EntityFinder(Of TEntity).GetDatabaseValuesAsync(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry, System.Threading.CancellationToken)
- uid: Microsoft.EntityFrameworkCore.Internal.EntityFinder`1.Microsoft#EntityFrameworkCore#Internal#IEntityFinder#Query(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.EntityFinder`1.Microsoft#EntityFrameworkCore#Internal#IEntityFinder#Query(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  id: Microsoft#EntityFrameworkCore#Internal#IEntityFinder#Query(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  isEii: true
  parent: Microsoft.EntityFrameworkCore.Internal.EntityFinder`1
  langs:
  - csharp
  - vb
  name: IEntityFinder.Query(INavigation, InternalEntityEntry)
  nameWithType: EntityFinder<TEntity>.IEntityFinder.Query(INavigation, InternalEntityEntry)
  fullName: Microsoft.EntityFrameworkCore.Internal.EntityFinder<TEntity>.Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Query(Microsoft.EntityFrameworkCore.Metadata.INavigation, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/EntityFinder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Query
    path: src/Microsoft.EntityFrameworkCore/Internal/EntityFinder.cs
    startLine: 186
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: IQueryable IEntityFinder.Query(INavigation navigation, InternalEntityEntry entry)
    content.vb: Function Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Query(navigation As INavigation, entry As InternalEntityEntry) As IQueryable Implements IEntityFinder.Query
    parameters:
    - id: navigation
      type: Microsoft.EntityFrameworkCore.Metadata.INavigation
    - id: entry
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    return:
      type: System.Linq.IQueryable
  implements:
  - Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Query(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  nameWithType.vb: EntityFinder(Of TEntity).Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Query(INavigation, InternalEntityEntry)
  fullName.vb: Microsoft.EntityFrameworkCore.Internal.EntityFinder(Of TEntity).Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Query(Microsoft.EntityFrameworkCore.Metadata.INavigation, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  name.vb: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Query(INavigation, InternalEntityEntry)
references:
- uid: Microsoft.EntityFrameworkCore.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Internal
  fullName: Microsoft.EntityFrameworkCore.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder{{TEntity}}
  commentId: T:Microsoft.EntityFrameworkCore.Internal.IEntityFinder{`0}
  parent: Microsoft.EntityFrameworkCore.Internal
  definition: Microsoft.EntityFrameworkCore.Internal.IEntityFinder`1
  name: IEntityFinder<TEntity>
  nameWithType: IEntityFinder<TEntity>
  fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder<TEntity>
  nameWithType.vb: IEntityFinder(Of TEntity)
  fullname.vb: Microsoft.EntityFrameworkCore.Internal.IEntityFinder(Of TEntity)
  name.vb: IEntityFinder(Of TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder`1
    name: IEntityFinder
    nameWithType: IEntityFinder
    fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder`1
    name: IEntityFinder
    nameWithType: IEntityFinder
    fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder
  commentId: T:Microsoft.EntityFrameworkCore.Internal.IEntityFinder
  parent: Microsoft.EntityFrameworkCore.Internal
  isExternal: false
  name: IEntityFinder
  nameWithType: IEntityFinder
  fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Internal.EntityFinder`1.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<EntityFinder<TEntity>, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<EntityFinder<TEntity>, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Internal.EntityFinder<TEntity>, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of EntityFinder(Of TEntity), TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Internal.EntityFinder(Of TEntity), TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of EntityFinder(Of TEntity), TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<EntityFinder<TEntity>, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<EntityFinder<TEntity>, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Internal.EntityFinder<TEntity>, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of EntityFinder(Of TEntity), TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of EntityFinder(Of TEntity), TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Internal.EntityFinder(Of TEntity), TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder`1
  commentId: T:Microsoft.EntityFrameworkCore.Internal.IEntityFinder`1
  isExternal: false
  name: IEntityFinder<TEntity>
  nameWithType: IEntityFinder<TEntity>
  fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder<TEntity>
  nameWithType.vb: IEntityFinder(Of TEntity)
  fullname.vb: Microsoft.EntityFrameworkCore.Internal.IEntityFinder(Of TEntity)
  name.vb: IEntityFinder(Of TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder`1
    name: IEntityFinder
    nameWithType: IEntityFinder
    fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder`1
    name: IEntityFinder
    nameWithType: IEntityFinder
    fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: Microsoft.EntityFrameworkCore.DbContext
  commentId: T:Microsoft.EntityFrameworkCore.DbContext
  parent: Microsoft.EntityFrameworkCore
  isExternal: false
  name: DbContext
  nameWithType: DbContext
  fullName: Microsoft.EntityFrameworkCore.DbContext
- uid: Microsoft.EntityFrameworkCore
  commentId: N:Microsoft.EntityFrameworkCore
  isExternal: false
  name: Microsoft.EntityFrameworkCore
  nameWithType: Microsoft.EntityFrameworkCore
  fullName: Microsoft.EntityFrameworkCore
- uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder{{TEntity}}.Find(System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.Internal.IEntityFinder{`0}.Find(System.Object[])
  parent: Microsoft.EntityFrameworkCore.Internal.IEntityFinder{{TEntity}}
  definition: Microsoft.EntityFrameworkCore.Internal.IEntityFinder`1.Find(System.Object[])
  name: Find(Object[])
  nameWithType: IEntityFinder<TEntity>.Find(Object[])
  fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder<TEntity>.Find(System.Object[])
  nameWithType.vb: IEntityFinder(Of TEntity).Find(Object())
  fullname.vb: Microsoft.EntityFrameworkCore.Internal.IEntityFinder(Of TEntity).Find(System.Object())
  name.vb: Find(Object())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder`1.Find(System.Object[])
    name: Find
    nameWithType: IEntityFinder<TEntity>.Find
    fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder<TEntity>.Find
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder`1.Find(System.Object[])
    name: Find
    nameWithType: IEntityFinder(Of TEntity).Find
    fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder(Of TEntity).Find
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object[]
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullname.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: '{TEntity}'
  commentId: '!:TEntity'
  definition: TEntity
  name: TEntity
  nameWithType: TEntity
  fullName: TEntity
- uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder`1.Find(System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.Internal.IEntityFinder`1.Find(System.Object[])
  isExternal: true
  name: Find(Object[])
  nameWithType: IEntityFinder<TEntity>.Find(Object[])
  fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder<TEntity>.Find(System.Object[])
  nameWithType.vb: IEntityFinder(Of TEntity).Find(Object())
  fullname.vb: Microsoft.EntityFrameworkCore.Internal.IEntityFinder(Of TEntity).Find(System.Object())
  name.vb: Find(Object())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder`1.Find(System.Object[])
    name: Find
    nameWithType: IEntityFinder<TEntity>.Find
    fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder<TEntity>.Find
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder`1.Find(System.Object[])
    name: Find
    nameWithType: IEntityFinder(Of TEntity).Find
    fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder(Of TEntity).Find
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: TEntity
  isExternal: false
  name: TEntity
  nameWithType: TEntity
  fullName: TEntity
- uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Find(System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Find(System.Object[])
  parent: Microsoft.EntityFrameworkCore.Internal.IEntityFinder
  isExternal: true
  name: Find(Object[])
  nameWithType: IEntityFinder.Find(Object[])
  fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Find(System.Object[])
  nameWithType.vb: IEntityFinder.Find(Object())
  fullname.vb: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Find(System.Object())
  name.vb: Find(Object())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Find(System.Object[])
    name: Find
    nameWithType: IEntityFinder.Find
    fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Find
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Find(System.Object[])
    name: Find
    nameWithType: IEntityFinder.Find
    fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Find
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder{{TEntity}}.FindAsync(System.Object[],System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.IEntityFinder{`0}.FindAsync(System.Object[],System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.Internal.IEntityFinder{{TEntity}}
  definition: Microsoft.EntityFrameworkCore.Internal.IEntityFinder`1.FindAsync(System.Object[],System.Threading.CancellationToken)
  name: FindAsync(Object[], CancellationToken)
  nameWithType: IEntityFinder<TEntity>.FindAsync(Object[], CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder<TEntity>.FindAsync(System.Object[], System.Threading.CancellationToken)
  nameWithType.vb: IEntityFinder(Of TEntity).FindAsync(Object(), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.Internal.IEntityFinder(Of TEntity).FindAsync(System.Object(), System.Threading.CancellationToken)
  name.vb: FindAsync(Object(), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder`1.FindAsync(System.Object[],System.Threading.CancellationToken)
    name: FindAsync
    nameWithType: IEntityFinder<TEntity>.FindAsync
    fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder<TEntity>.FindAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder`1.FindAsync(System.Object[],System.Threading.CancellationToken)
    name: FindAsync
    nameWithType: IEntityFinder(Of TEntity).FindAsync
    fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder(Of TEntity).FindAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{{TEntity}}
  commentId: T:System.Threading.Tasks.Task{``0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TEntity>
  nameWithType: Task<TEntity>
  fullName: System.Threading.Tasks.Task<TEntity>
  nameWithType.vb: Task(Of TEntity)
  fullname.vb: System.Threading.Tasks.Task(Of TEntity)
  name.vb: Task(Of TEntity)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder`1.FindAsync(System.Object[],System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.IEntityFinder`1.FindAsync(System.Object[],System.Threading.CancellationToken)
  isExternal: true
  name: FindAsync(Object[], CancellationToken)
  nameWithType: IEntityFinder<TEntity>.FindAsync(Object[], CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder<TEntity>.FindAsync(System.Object[], System.Threading.CancellationToken)
  nameWithType.vb: IEntityFinder(Of TEntity).FindAsync(Object(), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.Internal.IEntityFinder(Of TEntity).FindAsync(System.Object(), System.Threading.CancellationToken)
  name.vb: FindAsync(Object(), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder`1.FindAsync(System.Object[],System.Threading.CancellationToken)
    name: FindAsync
    nameWithType: IEntityFinder<TEntity>.FindAsync
    fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder<TEntity>.FindAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder`1.FindAsync(System.Object[],System.Threading.CancellationToken)
    name: FindAsync
    nameWithType: IEntityFinder(Of TEntity).FindAsync
    fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder(Of TEntity).FindAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.FindAsync(System.Object[],System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.IEntityFinder.FindAsync(System.Object[],System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.Internal.IEntityFinder
  isExternal: true
  name: FindAsync(Object[], CancellationToken)
  nameWithType: IEntityFinder.FindAsync(Object[], CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.FindAsync(System.Object[], System.Threading.CancellationToken)
  nameWithType.vb: IEntityFinder.FindAsync(Object(), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.FindAsync(System.Object(), System.Threading.CancellationToken)
  name.vb: FindAsync(Object(), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.FindAsync(System.Object[],System.Threading.CancellationToken)
    name: FindAsync
    nameWithType: IEntityFinder.FindAsync
    fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.FindAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.FindAsync(System.Object[],System.Threading.CancellationToken)
    name: FindAsync
    nameWithType: IEntityFinder.FindAsync
    fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.FindAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Object}
  commentId: T:System.Threading.Tasks.Task{System.Object}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Object>
  nameWithType: Task<Object>
  fullName: System.Threading.Tasks.Task<System.Object>
  nameWithType.vb: Task(Of Object)
  fullname.vb: System.Threading.Tasks.Task(Of System.Object)
  name.vb: Task(Of Object)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Load(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Load(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  parent: Microsoft.EntityFrameworkCore.Internal.IEntityFinder
  isExternal: false
  name: Load(INavigation, InternalEntityEntry)
  nameWithType: IEntityFinder.Load(INavigation, InternalEntityEntry)
  fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Load(Microsoft.EntityFrameworkCore.Metadata.INavigation, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Load(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
    name: Load
    nameWithType: IEntityFinder.Load
    fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.INavigation
    name: INavigation
    nameWithType: INavigation
    fullName: Microsoft.EntityFrameworkCore.Metadata.INavigation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Load(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
    name: Load
    nameWithType: IEntityFinder.Load
    fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.INavigation
    name: INavigation
    nameWithType: INavigation
    fullName: Microsoft.EntityFrameworkCore.Metadata.INavigation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.INavigation
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.INavigation
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: INavigation
  nameWithType: INavigation
  fullName: Microsoft.EntityFrameworkCore.Metadata.INavigation
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  isExternal: false
  name: InternalEntityEntry
  nameWithType: InternalEntityEntry
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  commentId: N:Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  nameWithType: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
- uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.LoadAsync(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.IEntityFinder.LoadAsync(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.Internal.IEntityFinder
  isExternal: true
  name: LoadAsync(INavigation, InternalEntityEntry, CancellationToken)
  nameWithType: IEntityFinder.LoadAsync(INavigation, InternalEntityEntry, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.LoadAsync(Microsoft.EntityFrameworkCore.Metadata.INavigation, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.LoadAsync(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.Threading.CancellationToken)
    name: LoadAsync
    nameWithType: IEntityFinder.LoadAsync
    fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.LoadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.INavigation
    name: INavigation
    nameWithType: INavigation
    fullName: Microsoft.EntityFrameworkCore.Metadata.INavigation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.LoadAsync(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.Threading.CancellationToken)
    name: LoadAsync
    nameWithType: IEntityFinder.LoadAsync
    fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.LoadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.INavigation
    name: INavigation
    nameWithType: INavigation
    fullName: Microsoft.EntityFrameworkCore.Metadata.INavigation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder{{TEntity}}.Query(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.IEntityFinder{`0}.Query(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  parent: Microsoft.EntityFrameworkCore.Internal.IEntityFinder{{TEntity}}
  definition: Microsoft.EntityFrameworkCore.Internal.IEntityFinder`1.Query(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  name: Query(INavigation, InternalEntityEntry)
  nameWithType: IEntityFinder<TEntity>.Query(INavigation, InternalEntityEntry)
  fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder<TEntity>.Query(Microsoft.EntityFrameworkCore.Metadata.INavigation, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  nameWithType.vb: IEntityFinder(Of TEntity).Query(INavigation, InternalEntityEntry)
  fullname.vb: Microsoft.EntityFrameworkCore.Internal.IEntityFinder(Of TEntity).Query(Microsoft.EntityFrameworkCore.Metadata.INavigation, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder`1.Query(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
    name: Query
    nameWithType: IEntityFinder<TEntity>.Query
    fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder<TEntity>.Query
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.INavigation
    name: INavigation
    nameWithType: INavigation
    fullName: Microsoft.EntityFrameworkCore.Metadata.INavigation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder`1.Query(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
    name: Query
    nameWithType: IEntityFinder(Of TEntity).Query
    fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder(Of TEntity).Query
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.INavigation
    name: INavigation
    nameWithType: INavigation
    fullName: Microsoft.EntityFrameworkCore.Metadata.INavigation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{{TEntity}}
  commentId: T:System.Linq.IQueryable{`0}
  parent: System.Linq
  definition: System.Linq.IQueryable`1
  name: IQueryable<TEntity>
  nameWithType: IQueryable<TEntity>
  fullName: System.Linq.IQueryable<TEntity>
  nameWithType.vb: IQueryable(Of TEntity)
  fullname.vb: System.Linq.IQueryable(Of TEntity)
  name.vb: IQueryable(Of TEntity)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder`1.Query(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.IEntityFinder`1.Query(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  isExternal: false
  name: Query(INavigation, InternalEntityEntry)
  nameWithType: IEntityFinder<TEntity>.Query(INavigation, InternalEntityEntry)
  fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder<TEntity>.Query(Microsoft.EntityFrameworkCore.Metadata.INavigation, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  nameWithType.vb: IEntityFinder(Of TEntity).Query(INavigation, InternalEntityEntry)
  fullname.vb: Microsoft.EntityFrameworkCore.Internal.IEntityFinder(Of TEntity).Query(Microsoft.EntityFrameworkCore.Metadata.INavigation, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder`1.Query(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
    name: Query
    nameWithType: IEntityFinder<TEntity>.Query
    fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder<TEntity>.Query
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.INavigation
    name: INavigation
    nameWithType: INavigation
    fullName: Microsoft.EntityFrameworkCore.Metadata.INavigation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder`1.Query(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
    name: Query
    nameWithType: IEntityFinder(Of TEntity).Query
    fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder(Of TEntity).Query
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.INavigation
    name: INavigation
    nameWithType: INavigation
    fullName: Microsoft.EntityFrameworkCore.Metadata.INavigation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable`1
  commentId: T:System.Linq.IQueryable`1
  isExternal: true
  name: IQueryable<T>
  nameWithType: IQueryable<T>
  fullName: System.Linq.IQueryable<T>
  nameWithType.vb: IQueryable(Of T)
  fullname.vb: System.Linq.IQueryable(Of T)
  name.vb: IQueryable(Of T)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq
  commentId: N:System.Linq
  isExternal: false
  name: System.Linq
  nameWithType: System.Linq
  fullName: System.Linq
- uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.GetDatabaseValues(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.IEntityFinder.GetDatabaseValues(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  parent: Microsoft.EntityFrameworkCore.Internal.IEntityFinder
  isExternal: false
  name: GetDatabaseValues(InternalEntityEntry)
  nameWithType: IEntityFinder.GetDatabaseValues(InternalEntityEntry)
  fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.GetDatabaseValues(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.GetDatabaseValues(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
    name: GetDatabaseValues
    nameWithType: IEntityFinder.GetDatabaseValues
    fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.GetDatabaseValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.GetDatabaseValues(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
    name: GetDatabaseValues
    nameWithType: IEntityFinder.GetDatabaseValues
    fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.GetDatabaseValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.GetDatabaseValuesAsync(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.IEntityFinder.GetDatabaseValuesAsync(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.Internal.IEntityFinder
  isExternal: true
  name: GetDatabaseValuesAsync(InternalEntityEntry, CancellationToken)
  nameWithType: IEntityFinder.GetDatabaseValuesAsync(InternalEntityEntry, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.GetDatabaseValuesAsync(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.GetDatabaseValuesAsync(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.Threading.CancellationToken)
    name: GetDatabaseValuesAsync
    nameWithType: IEntityFinder.GetDatabaseValuesAsync
    fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.GetDatabaseValuesAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.GetDatabaseValuesAsync(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.Threading.CancellationToken)
    name: GetDatabaseValuesAsync
    nameWithType: IEntityFinder.GetDatabaseValuesAsync
    fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.GetDatabaseValuesAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Object[]}
  commentId: T:System.Threading.Tasks.Task{System.Object[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Object[]>
  nameWithType: Task<Object[]>
  fullName: System.Threading.Tasks.Task<System.Object[]>
  nameWithType.vb: Task(Of Object())
  fullname.vb: System.Threading.Tasks.Task(Of System.Object())
  name.vb: Task(Of Object())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Query(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Query(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  parent: Microsoft.EntityFrameworkCore.Internal.IEntityFinder
  isExternal: false
  name: Query(INavigation, InternalEntityEntry)
  nameWithType: IEntityFinder.Query(INavigation, InternalEntityEntry)
  fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Query(Microsoft.EntityFrameworkCore.Metadata.INavigation, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Query(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
    name: Query
    nameWithType: IEntityFinder.Query
    fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Query
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.INavigation
    name: INavigation
    nameWithType: INavigation
    fullName: Microsoft.EntityFrameworkCore.Metadata.INavigation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Query(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
    name: Query
    nameWithType: IEntityFinder.Query
    fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Query
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.INavigation
    name: INavigation
    nameWithType: INavigation
    fullName: Microsoft.EntityFrameworkCore.Metadata.INavigation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable
  commentId: T:System.Linq.IQueryable
  parent: System.Linq
  isExternal: true
  name: IQueryable
  nameWithType: IQueryable
  fullName: System.Linq.IQueryable
