### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
  commentId: T:Microsoft.EntityFrameworkCore.Update.IUpdateEntry
  id: IUpdateEntry
  parent: Microsoft.EntityFrameworkCore.Update
  children:
  - Microsoft.EntityFrameworkCore.Update.IUpdateEntry.EntityState
  - Microsoft.EntityFrameworkCore.Update.IUpdateEntry.EntityType
  - Microsoft.EntityFrameworkCore.Update.IUpdateEntry.GetCurrentValue(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  - Microsoft.EntityFrameworkCore.Update.IUpdateEntry.GetCurrentValue``1(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  - Microsoft.EntityFrameworkCore.Update.IUpdateEntry.GetOriginalValue(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  - Microsoft.EntityFrameworkCore.Update.IUpdateEntry.GetOriginalValue``1(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  - Microsoft.EntityFrameworkCore.Update.IUpdateEntry.HasTemporaryValue(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  - Microsoft.EntityFrameworkCore.Update.IUpdateEntry.IsModified(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  - Microsoft.EntityFrameworkCore.Update.IUpdateEntry.IsStoreGenerated(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  - Microsoft.EntityFrameworkCore.Update.IUpdateEntry.SetCurrentValue(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,System.Object)
  - Microsoft.EntityFrameworkCore.Update.IUpdateEntry.ToEntityEntry
  langs:
  - csharp
  - vb
  name: IUpdateEntry
  nameWithType: IUpdateEntry
  fullName: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
  type: Interface
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Update/IUpdateEntry.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: IUpdateEntry
    path: src/Microsoft.EntityFrameworkCore/Update/IUpdateEntry.cs
    startLine: 18
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Update
  summary: "\n<p>\n    The information passed to a database provider to save changes to an entity to the database.\n</p>\n<p>\n    This interface is typically used by database providers (and other extensions). It is generally\n    not used in application code.\n</p>\n"
  example: []
  syntax:
    content: public interface IUpdateEntry
    content.vb: Public Interface IUpdateEntry
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Update.IUpdateEntry.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.EntityFrameworkCore.Update.IUpdateEntry.EntityType
  commentId: P:Microsoft.EntityFrameworkCore.Update.IUpdateEntry.EntityType
  id: EntityType
  parent: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
  langs:
  - csharp
  - vb
  name: EntityType
  nameWithType: IUpdateEntry.EntityType
  fullName: Microsoft.EntityFrameworkCore.Update.IUpdateEntry.EntityType
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Update/IUpdateEntry.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: EntityType
    path: src/Microsoft.EntityFrameworkCore/Update/IUpdateEntry.cs
    startLine: 23
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Update
  summary: "\n    The type of entity to be saved to the database.\n"
  example: []
  syntax:
    content: IEntityType EntityType { get; }
    content.vb: ReadOnly Property EntityType As IEntityType
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.IEntityType
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Update.IUpdateEntry.EntityState
  commentId: P:Microsoft.EntityFrameworkCore.Update.IUpdateEntry.EntityState
  id: EntityState
  parent: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
  langs:
  - csharp
  - vb
  name: EntityState
  nameWithType: IUpdateEntry.EntityState
  fullName: Microsoft.EntityFrameworkCore.Update.IUpdateEntry.EntityState
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Update/IUpdateEntry.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: EntityState
    path: src/Microsoft.EntityFrameworkCore/Update/IUpdateEntry.cs
    startLine: 28
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Update
  summary: "\n    The state of the entity to be saved.\n"
  example: []
  syntax:
    content: EntityState EntityState { get; }
    content.vb: ReadOnly Property EntityState As EntityState
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.EntityState
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Update.IUpdateEntry.IsModified(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  commentId: M:Microsoft.EntityFrameworkCore.Update.IUpdateEntry.IsModified(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  id: IsModified(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  parent: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
  langs:
  - csharp
  - vb
  name: IsModified(IProperty)
  nameWithType: IUpdateEntry.IsModified(IProperty)
  fullName: Microsoft.EntityFrameworkCore.Update.IUpdateEntry.IsModified(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Update/IUpdateEntry.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: IsModified
    path: src/Microsoft.EntityFrameworkCore/Update/IUpdateEntry.cs
    startLine: 36
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Update
  summary: "\n    Gets a value indicating if the specified property is modified. If true, the current value assigned\n    to the property should be saved to the database.\n"
  example: []
  syntax:
    content: bool IsModified(IProperty property)
    content.vb: Function IsModified(property As IProperty) As Boolean
    parameters:
    - id: property
      type: Microsoft.EntityFrameworkCore.Metadata.IProperty
      description: 'The property to be checked. '
    return:
      type: System.Boolean
      description: 'True if the property is modified, otherwise false. '
- uid: Microsoft.EntityFrameworkCore.Update.IUpdateEntry.HasTemporaryValue(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  commentId: M:Microsoft.EntityFrameworkCore.Update.IUpdateEntry.HasTemporaryValue(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  id: HasTemporaryValue(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  parent: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
  langs:
  - csharp
  - vb
  name: HasTemporaryValue(IProperty)
  nameWithType: IUpdateEntry.HasTemporaryValue(IProperty)
  fullName: Microsoft.EntityFrameworkCore.Update.IUpdateEntry.HasTemporaryValue(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Update/IUpdateEntry.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: HasTemporaryValue
    path: src/Microsoft.EntityFrameworkCore/Update/IUpdateEntry.cs
    startLine: 43
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Update
  summary: "\n    Gets a value indicating if the specified property has a temporary value.\n"
  example: []
  syntax:
    content: bool HasTemporaryValue(IProperty property)
    content.vb: Function HasTemporaryValue(property As IProperty) As Boolean
    parameters:
    - id: property
      type: Microsoft.EntityFrameworkCore.Metadata.IProperty
      description: 'The property to be checked. '
    return:
      type: System.Boolean
      description: 'True if the property has a temporary value, otherwise false. '
- uid: Microsoft.EntityFrameworkCore.Update.IUpdateEntry.IsStoreGenerated(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  commentId: M:Microsoft.EntityFrameworkCore.Update.IUpdateEntry.IsStoreGenerated(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  id: IsStoreGenerated(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  parent: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
  langs:
  - csharp
  - vb
  name: IsStoreGenerated(IProperty)
  nameWithType: IUpdateEntry.IsStoreGenerated(IProperty)
  fullName: Microsoft.EntityFrameworkCore.Update.IUpdateEntry.IsStoreGenerated(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Update/IUpdateEntry.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: IsStoreGenerated
    path: src/Microsoft.EntityFrameworkCore/Update/IUpdateEntry.cs
    startLine: 50
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Update
  summary: "\n    Gets a value indicating if the specified property should have a value generated by the database.\n"
  example: []
  syntax:
    content: bool IsStoreGenerated(IProperty property)
    content.vb: Function IsStoreGenerated(property As IProperty) As Boolean
    parameters:
    - id: property
      type: Microsoft.EntityFrameworkCore.Metadata.IProperty
      description: 'The property to be checked. '
    return:
      type: System.Boolean
      description: 'True if the property should have a value generated by the database, otherwise false. '
- uid: Microsoft.EntityFrameworkCore.Update.IUpdateEntry.GetCurrentValue(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  commentId: M:Microsoft.EntityFrameworkCore.Update.IUpdateEntry.GetCurrentValue(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  id: GetCurrentValue(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  parent: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
  langs:
  - csharp
  - vb
  name: GetCurrentValue(IPropertyBase)
  nameWithType: IUpdateEntry.GetCurrentValue(IPropertyBase)
  fullName: Microsoft.EntityFrameworkCore.Update.IUpdateEntry.GetCurrentValue(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Update/IUpdateEntry.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GetCurrentValue
    path: src/Microsoft.EntityFrameworkCore/Update/IUpdateEntry.cs
    startLine: 57
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Update
  summary: "\n    Gets the value assigned to the property.\n"
  example: []
  syntax:
    content: object GetCurrentValue(IPropertyBase propertyBase)
    content.vb: Function GetCurrentValue(propertyBase As IPropertyBase) As Object
    parameters:
    - id: propertyBase
      type: Microsoft.EntityFrameworkCore.Metadata.IPropertyBase
      description: 'The property to get the value for. '
    return:
      type: System.Object
      description: 'The value for the property. '
- uid: Microsoft.EntityFrameworkCore.Update.IUpdateEntry.GetOriginalValue(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  commentId: M:Microsoft.EntityFrameworkCore.Update.IUpdateEntry.GetOriginalValue(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  id: GetOriginalValue(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  parent: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
  langs:
  - csharp
  - vb
  name: GetOriginalValue(IPropertyBase)
  nameWithType: IUpdateEntry.GetOriginalValue(IPropertyBase)
  fullName: Microsoft.EntityFrameworkCore.Update.IUpdateEntry.GetOriginalValue(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Update/IUpdateEntry.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GetOriginalValue
    path: src/Microsoft.EntityFrameworkCore/Update/IUpdateEntry.cs
    startLine: 64
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Update
  summary: "\n    Gets the value assigned to the property when it was retrieved from the database.\n"
  example: []
  syntax:
    content: object GetOriginalValue(IPropertyBase propertyBase)
    content.vb: Function GetOriginalValue(propertyBase As IPropertyBase) As Object
    parameters:
    - id: propertyBase
      type: Microsoft.EntityFrameworkCore.Metadata.IPropertyBase
      description: 'The property to get the value for. '
    return:
      type: System.Object
      description: 'The value for the property. '
- uid: Microsoft.EntityFrameworkCore.Update.IUpdateEntry.GetCurrentValue``1(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  commentId: M:Microsoft.EntityFrameworkCore.Update.IUpdateEntry.GetCurrentValue``1(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  id: GetCurrentValue``1(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  parent: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
  langs:
  - csharp
  - vb
  name: GetCurrentValue<TProperty>(IPropertyBase)
  nameWithType: IUpdateEntry.GetCurrentValue<TProperty>(IPropertyBase)
  fullName: Microsoft.EntityFrameworkCore.Update.IUpdateEntry.GetCurrentValue<TProperty>(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Update/IUpdateEntry.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GetCurrentValue
    path: src/Microsoft.EntityFrameworkCore/Update/IUpdateEntry.cs
    startLine: 72
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Update
  summary: "\n    Gets the value assigned to the property.\n"
  example: []
  syntax:
    content: TProperty GetCurrentValue<TProperty>(IPropertyBase propertyBase)
    content.vb: Function GetCurrentValue(Of TProperty)(propertyBase As IPropertyBase) As TProperty
    parameters:
    - id: propertyBase
      type: Microsoft.EntityFrameworkCore.Metadata.IPropertyBase
      description: 'The property to get the value for. '
    typeParameters:
    - id: TProperty
      description: 'The type of the property. '
    return:
      type: '{TProperty}'
      description: 'The value for the property. '
  nameWithType.vb: IUpdateEntry.GetCurrentValue(Of TProperty)(IPropertyBase)
  fullName.vb: Microsoft.EntityFrameworkCore.Update.IUpdateEntry.GetCurrentValue(Of TProperty)(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)
  name.vb: GetCurrentValue(Of TProperty)(IPropertyBase)
- uid: Microsoft.EntityFrameworkCore.Update.IUpdateEntry.GetOriginalValue``1(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  commentId: M:Microsoft.EntityFrameworkCore.Update.IUpdateEntry.GetOriginalValue``1(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  id: GetOriginalValue``1(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  parent: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
  langs:
  - csharp
  - vb
  name: GetOriginalValue<TProperty>(IProperty)
  nameWithType: IUpdateEntry.GetOriginalValue<TProperty>(IProperty)
  fullName: Microsoft.EntityFrameworkCore.Update.IUpdateEntry.GetOriginalValue<TProperty>(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Update/IUpdateEntry.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GetOriginalValue
    path: src/Microsoft.EntityFrameworkCore/Update/IUpdateEntry.cs
    startLine: 80
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Update
  summary: "\n    Gets the value assigned to the property when it was retrieved from the database.\n"
  example: []
  syntax:
    content: TProperty GetOriginalValue<TProperty>(IProperty property)
    content.vb: Function GetOriginalValue(Of TProperty)(property As IProperty) As TProperty
    parameters:
    - id: property
      type: Microsoft.EntityFrameworkCore.Metadata.IProperty
      description: 'The property to get the value for. '
    typeParameters:
    - id: TProperty
      description: 'The type of the property. '
    return:
      type: '{TProperty}'
      description: 'The value for the property. '
  nameWithType.vb: IUpdateEntry.GetOriginalValue(Of TProperty)(IProperty)
  fullName.vb: Microsoft.EntityFrameworkCore.Update.IUpdateEntry.GetOriginalValue(Of TProperty)(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  name.vb: GetOriginalValue(Of TProperty)(IProperty)
- uid: Microsoft.EntityFrameworkCore.Update.IUpdateEntry.SetCurrentValue(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Update.IUpdateEntry.SetCurrentValue(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,System.Object)
  id: SetCurrentValue(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,System.Object)
  parent: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
  langs:
  - csharp
  - vb
  name: SetCurrentValue(IPropertyBase, Object)
  nameWithType: IUpdateEntry.SetCurrentValue(IPropertyBase, Object)
  fullName: Microsoft.EntityFrameworkCore.Update.IUpdateEntry.SetCurrentValue(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Update/IUpdateEntry.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: SetCurrentValue
    path: src/Microsoft.EntityFrameworkCore/Update/IUpdateEntry.cs
    startLine: 87
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Update
  summary: "\n    Gets the value assigned to the property.\n"
  example: []
  syntax:
    content: void SetCurrentValue(IPropertyBase propertyBase, object value)
    content.vb: Sub SetCurrentValue(propertyBase As IPropertyBase, value As Object)
    parameters:
    - id: propertyBase
      type: Microsoft.EntityFrameworkCore.Metadata.IPropertyBase
      description: 'The property to set the value for. '
    - id: value
      type: System.Object
      description: 'The value to set. '
- uid: Microsoft.EntityFrameworkCore.Update.IUpdateEntry.ToEntityEntry
  commentId: M:Microsoft.EntityFrameworkCore.Update.IUpdateEntry.ToEntityEntry
  id: ToEntityEntry
  parent: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
  langs:
  - csharp
  - vb
  name: ToEntityEntry()
  nameWithType: IUpdateEntry.ToEntityEntry()
  fullName: Microsoft.EntityFrameworkCore.Update.IUpdateEntry.ToEntityEntry()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Update/IUpdateEntry.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ToEntityEntry
    path: src/Microsoft.EntityFrameworkCore/Update/IUpdateEntry.cs
    startLine: 95
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Update
  summary: "\n    Gets an <xref href=\"Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry\" data-throw-if-not-resolved=\"false\"></xref> for the entity being saved. <xref href=\"Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry\" data-throw-if-not-resolved=\"false\"></xref> is an API optimized for\n    application developers and <xref href=\"Microsoft.EntityFrameworkCore.Update.IUpdateEntry\" data-throw-if-not-resolved=\"false\"></xref> is optimized for database providers, but there may be instances\n    where a database provider wants to access information from <xref href=\"Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: EntityEntry ToEntityEntry()
    content.vb: Function ToEntityEntry As EntityEntry
    return:
      type: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry
      description: 'An <xref href="Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry" data-throw-if-not-resolved="false"></xref> for this entity. '
references:
- uid: Microsoft.EntityFrameworkCore.Update
  commentId: N:Microsoft.EntityFrameworkCore.Update
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Update
  nameWithType: Microsoft.EntityFrameworkCore.Update
  fullName: Microsoft.EntityFrameworkCore.Update
- uid: Microsoft.EntityFrameworkCore.Update.IUpdateEntry.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<IUpdateEntry, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<IUpdateEntry, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Update.IUpdateEntry, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of IUpdateEntry, TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Update.IUpdateEntry, TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of IUpdateEntry, TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<IUpdateEntry, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<IUpdateEntry, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Update.IUpdateEntry, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of IUpdateEntry, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of IUpdateEntry, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Update.IUpdateEntry, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: Microsoft.EntityFrameworkCore.Metadata.IEntityType
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IEntityType
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IEntityType
  nameWithType: IEntityType
  fullName: Microsoft.EntityFrameworkCore.Metadata.IEntityType
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: Microsoft.EntityFrameworkCore.EntityState
  commentId: T:Microsoft.EntityFrameworkCore.EntityState
  parent: Microsoft.EntityFrameworkCore
  isExternal: false
  name: EntityState
  nameWithType: EntityState
  fullName: Microsoft.EntityFrameworkCore.EntityState
- uid: Microsoft.EntityFrameworkCore
  commentId: N:Microsoft.EntityFrameworkCore
  isExternal: false
  name: Microsoft.EntityFrameworkCore
  nameWithType: Microsoft.EntityFrameworkCore
  fullName: Microsoft.EntityFrameworkCore
- uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IProperty
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IProperty
  nameWithType: IProperty
  fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Metadata.IPropertyBase
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IPropertyBase
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IPropertyBase
  nameWithType: IPropertyBase
  fullName: Microsoft.EntityFrameworkCore.Metadata.IPropertyBase
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: '{TProperty}'
  commentId: '!:TProperty'
  definition: TProperty
  name: TProperty
  nameWithType: TProperty
  fullName: TProperty
- uid: TProperty
  isExternal: false
  name: TProperty
  nameWithType: TProperty
  fullName: TProperty
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry
  parent: Microsoft.EntityFrameworkCore.ChangeTracking
  isExternal: false
  name: EntityEntry
  nameWithType: EntityEntry
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry
- uid: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
  commentId: T:Microsoft.EntityFrameworkCore.Update.IUpdateEntry
  parent: Microsoft.EntityFrameworkCore.Update
  isExternal: false
  name: IUpdateEntry
  nameWithType: IUpdateEntry
  fullName: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
- uid: Microsoft.EntityFrameworkCore.ChangeTracking
  commentId: N:Microsoft.EntityFrameworkCore.ChangeTracking
  isExternal: false
  name: Microsoft.EntityFrameworkCore.ChangeTracking
  nameWithType: Microsoft.EntityFrameworkCore.ChangeTracking
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking
