### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.CompositeRelationalParameter
  commentId: T:Microsoft.EntityFrameworkCore.Storage.Internal.CompositeRelationalParameter
  id: CompositeRelationalParameter
  parent: Microsoft.EntityFrameworkCore.Storage.Internal
  children:
  - Microsoft.EntityFrameworkCore.Storage.Internal.CompositeRelationalParameter.#ctor(System.String,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Storage.IRelationalParameter})
  - Microsoft.EntityFrameworkCore.Storage.Internal.CompositeRelationalParameter.AddDbParameter(System.Data.Common.DbCommand,System.Object)
  - Microsoft.EntityFrameworkCore.Storage.Internal.CompositeRelationalParameter.InvariantName
  - Microsoft.EntityFrameworkCore.Storage.Internal.CompositeRelationalParameter.RelationalParameters
  langs:
  - csharp
  - vb
  name: CompositeRelationalParameter
  nameWithType: CompositeRelationalParameter
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.CompositeRelationalParameter
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/Internal/CompositeRelationalParameter.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CompositeRelationalParameter
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/Internal/CompositeRelationalParameter.cs
    startLine: 16
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public class CompositeRelationalParameter : IRelationalParameter'
    content.vb: >-
      Public Class CompositeRelationalParameter
          Implements IRelationalParameter
  inheritance:
  - System.Object
  implements:
  - Microsoft.EntityFrameworkCore.Storage.IRelationalParameter
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.CompositeRelationalParameter.#ctor(System.String,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Storage.IRelationalParameter})
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.CompositeRelationalParameter.#ctor(System.String,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Storage.IRelationalParameter})
  id: '#ctor(System.String,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Storage.IRelationalParameter})'
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.CompositeRelationalParameter
  langs:
  - csharp
  - vb
  name: CompositeRelationalParameter(String, IReadOnlyList<IRelationalParameter>)
  nameWithType: CompositeRelationalParameter.CompositeRelationalParameter(String, IReadOnlyList<IRelationalParameter>)
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.CompositeRelationalParameter.CompositeRelationalParameter(System.String, System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Storage.IRelationalParameter>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/Internal/CompositeRelationalParameter.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/Internal/CompositeRelationalParameter.cs
    startLine: 22
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public CompositeRelationalParameter(string invariantName, IReadOnlyList<IRelationalParameter> relationalParameters)
    content.vb: Public Sub New(invariantName As String, relationalParameters As IReadOnlyList(Of IRelationalParameter))
    parameters:
    - id: invariantName
      type: System.String
    - id: relationalParameters
      type: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Storage.IRelationalParameter}
  nameWithType.vb: CompositeRelationalParameter.CompositeRelationalParameter(String, IReadOnlyList(Of IRelationalParameter))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Storage.Internal.CompositeRelationalParameter.CompositeRelationalParameter(System.String, System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Storage.IRelationalParameter))
  name.vb: CompositeRelationalParameter(String, IReadOnlyList(Of IRelationalParameter))
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.CompositeRelationalParameter.InvariantName
  commentId: P:Microsoft.EntityFrameworkCore.Storage.Internal.CompositeRelationalParameter.InvariantName
  id: InvariantName
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.CompositeRelationalParameter
  langs:
  - csharp
  - vb
  name: InvariantName
  nameWithType: CompositeRelationalParameter.InvariantName
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.CompositeRelationalParameter.InvariantName
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/Internal/CompositeRelationalParameter.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: InvariantName
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/Internal/CompositeRelationalParameter.cs
    startLine: 38
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual string InvariantName { get; }
    content.vb: Public Overridable ReadOnly Property InvariantName As String
    parameters: []
    return:
      type: System.String
  implements:
  - Microsoft.EntityFrameworkCore.Storage.IRelationalParameter.InvariantName
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.CompositeRelationalParameter.RelationalParameters
  commentId: P:Microsoft.EntityFrameworkCore.Storage.Internal.CompositeRelationalParameter.RelationalParameters
  id: RelationalParameters
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.CompositeRelationalParameter
  langs:
  - csharp
  - vb
  name: RelationalParameters
  nameWithType: CompositeRelationalParameter.RelationalParameters
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.CompositeRelationalParameter.RelationalParameters
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/Internal/CompositeRelationalParameter.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: RelationalParameters
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/Internal/CompositeRelationalParameter.cs
    startLine: 44
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual IReadOnlyList<IRelationalParameter> RelationalParameters { get; }
    content.vb: Public Overridable ReadOnly Property RelationalParameters As IReadOnlyList(Of IRelationalParameter)
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Storage.IRelationalParameter}
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.CompositeRelationalParameter.AddDbParameter(System.Data.Common.DbCommand,System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.CompositeRelationalParameter.AddDbParameter(System.Data.Common.DbCommand,System.Object)
  id: AddDbParameter(System.Data.Common.DbCommand,System.Object)
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.CompositeRelationalParameter
  langs:
  - csharp
  - vb
  name: AddDbParameter(DbCommand, Object)
  nameWithType: CompositeRelationalParameter.AddDbParameter(DbCommand, Object)
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.CompositeRelationalParameter.AddDbParameter(System.Data.Common.DbCommand, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/Internal/CompositeRelationalParameter.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AddDbParameter
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/Internal/CompositeRelationalParameter.cs
    startLine: 50
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual void AddDbParameter(DbCommand command, object value)
    content.vb: Public Overridable Sub AddDbParameter(command As DbCommand, value As Object)
    parameters:
    - id: command
      type: System.Data.Common.DbCommand
    - id: value
      type: System.Object
  implements:
  - Microsoft.EntityFrameworkCore.Storage.IRelationalParameter.AddDbParameter(System.Data.Common.DbCommand,System.Object)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.EntityFrameworkCore.Storage.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Storage.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Storage.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Storage.Internal
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalParameter
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IRelationalParameter
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IRelationalParameter
  nameWithType: IRelationalParameter
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalParameter
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Storage
  commentId: N:Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Storage
  nameWithType: Microsoft.EntityFrameworkCore.Storage
  fullName: Microsoft.EntityFrameworkCore.Storage
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Storage.IRelationalParameter}
  commentId: T:System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Storage.IRelationalParameter}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<IRelationalParameter>
  nameWithType: IReadOnlyList<IRelationalParameter>
  fullName: System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Storage.IRelationalParameter>
  nameWithType.vb: IReadOnlyList(Of IRelationalParameter)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Storage.IRelationalParameter)
  name.vb: IReadOnlyList(Of IRelationalParameter)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalParameter
    name: IRelationalParameter
    nameWithType: IRelationalParameter
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalParameter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalParameter
    name: IRelationalParameter
    nameWithType: IRelationalParameter
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalParameter
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalParameter.InvariantName
  commentId: P:Microsoft.EntityFrameworkCore.Storage.IRelationalParameter.InvariantName
  parent: Microsoft.EntityFrameworkCore.Storage.IRelationalParameter
  isExternal: false
  name: InvariantName
  nameWithType: IRelationalParameter.InvariantName
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalParameter.InvariantName
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalParameter.AddDbParameter(System.Data.Common.DbCommand,System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.IRelationalParameter.AddDbParameter(System.Data.Common.DbCommand,System.Object)
  parent: Microsoft.EntityFrameworkCore.Storage.IRelationalParameter
  isExternal: true
  name: AddDbParameter(DbCommand, Object)
  nameWithType: IRelationalParameter.AddDbParameter(DbCommand, Object)
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalParameter.AddDbParameter(System.Data.Common.DbCommand, System.Object)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalParameter.AddDbParameter(System.Data.Common.DbCommand,System.Object)
    name: AddDbParameter
    nameWithType: IRelationalParameter.AddDbParameter
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalParameter.AddDbParameter
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.Common.DbCommand
    name: DbCommand
    nameWithType: DbCommand
    fullName: System.Data.Common.DbCommand
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalParameter.AddDbParameter(System.Data.Common.DbCommand,System.Object)
    name: AddDbParameter
    nameWithType: IRelationalParameter.AddDbParameter
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalParameter.AddDbParameter
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.Common.DbCommand
    name: DbCommand
    nameWithType: DbCommand
    fullName: System.Data.Common.DbCommand
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.Common.DbCommand
  commentId: T:System.Data.Common.DbCommand
  parent: System.Data.Common
  isExternal: true
  name: DbCommand
  nameWithType: DbCommand
  fullName: System.Data.Common.DbCommand
- uid: System.Data.Common
  commentId: N:System.Data.Common
  isExternal: false
  name: System.Data.Common
  nameWithType: System.Data.Common
  fullName: System.Data.Common
