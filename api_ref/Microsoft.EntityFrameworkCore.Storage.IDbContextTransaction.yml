### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
  id: IDbContextTransaction
  parent: Microsoft.EntityFrameworkCore.Storage
  children:
  - Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction.Commit
  - Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction.Rollback
  langs:
  - csharp
  - vb
  name: IDbContextTransaction
  nameWithType: IDbContextTransaction
  fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
  type: Interface
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Storage/IDbContextTransaction.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: IDbContextTransaction
    path: src/Microsoft.EntityFrameworkCore/Storage/IDbContextTransaction.cs
    startLine: 17
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n<p>\n    A transaction against the database.\n</p>\n<p>\n    Instances of this class are typically obtained from <xref href=\"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.BeginTransaction\" data-throw-if-not-resolved=\"false\"></xref> and it is not designed\n    to be directly constructed in your application code.\n</p>\n"
  example: []
  syntax:
    content: 'public interface IDbContextTransaction : IDisposable'
    content.vb: >-
      Public Interface IDbContextTransaction
          Inherits IDisposable
  inheritedMembers:
  - System.IDisposable.Dispose
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction.Microsoft.EntityFrameworkCore.Storage.DbContextTransactionExtensions.GetDbTransaction
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction.Commit
  commentId: M:Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction.Commit
  id: Commit
  parent: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
  langs:
  - csharp
  - vb
  name: Commit()
  nameWithType: IDbContextTransaction.Commit()
  fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction.Commit()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Storage/IDbContextTransaction.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Commit
    path: src/Microsoft.EntityFrameworkCore/Storage/IDbContextTransaction.cs
    startLine: 22
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\nCommits all changes made to the database in the current transaction.\n"
  example: []
  syntax:
    content: void Commit()
    content.vb: Sub Commit
  overload: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction.Commit*
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction.Rollback
  commentId: M:Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction.Rollback
  id: Rollback
  parent: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
  langs:
  - csharp
  - vb
  name: Rollback()
  nameWithType: IDbContextTransaction.Rollback()
  fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction.Rollback()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Storage/IDbContextTransaction.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Rollback
    path: src/Microsoft.EntityFrameworkCore/Storage/IDbContextTransaction.cs
    startLine: 27
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\nDiscards all changes made to the database in the current transaction.\n"
  example: []
  syntax:
    content: void Rollback()
    content.vb: Sub Rollback
  overload: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction.Rollback*
references:
- uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.BeginTransaction
  commentId: M:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.BeginTransaction
- uid: Microsoft.EntityFrameworkCore.Storage
  commentId: N:Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Storage
  nameWithType: Microsoft.EntityFrameworkCore.Storage
  fullName: Microsoft.EntityFrameworkCore.Storage
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction.Microsoft.EntityFrameworkCore.Storage.DbContextTransactionExtensions.GetDbTransaction
  commentId: M:Microsoft.EntityFrameworkCore.Storage.DbContextTransactionExtensions.GetDbTransaction(Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Microsoft.EntityFrameworkCore.Storage.DbContextTransactionExtensions
  definition: Microsoft.EntityFrameworkCore.Storage.DbContextTransactionExtensions.GetDbTransaction(Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: GetDbTransaction()
  nameWithType: DbContextTransactionExtensions.GetDbTransaction()
  fullName: Microsoft.EntityFrameworkCore.Storage.DbContextTransactionExtensions.GetDbTransaction()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.DbContextTransactionExtensions.GetDbTransaction
    name: GetDbTransaction
    nameWithType: DbContextTransactionExtensions.GetDbTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.DbContextTransactionExtensions.GetDbTransaction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.DbContextTransactionExtensions.GetDbTransaction
    name: GetDbTransaction
    nameWithType: DbContextTransactionExtensions.GetDbTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.DbContextTransactionExtensions.GetDbTransaction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Microsoft.EntityFrameworkCore.Storage.DbContextTransactionExtensions.GetDbTransaction(Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.DbContextTransactionExtensions.GetDbTransaction(Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: false
  name: GetDbTransaction(IDbContextTransaction)
  nameWithType: DbContextTransactionExtensions.GetDbTransaction(IDbContextTransaction)
  fullName: Microsoft.EntityFrameworkCore.Storage.DbContextTransactionExtensions.GetDbTransaction(Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.DbContextTransactionExtensions.GetDbTransaction(Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: GetDbTransaction
    nameWithType: DbContextTransactionExtensions.GetDbTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.DbContextTransactionExtensions.GetDbTransaction
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.DbContextTransactionExtensions.GetDbTransaction(Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: GetDbTransaction
    nameWithType: DbContextTransactionExtensions.GetDbTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.DbContextTransactionExtensions.GetDbTransaction
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.DbContextTransactionExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Storage.DbContextTransactionExtensions
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: DbContextTransactionExtensions
  nameWithType: DbContextTransactionExtensions
  fullName: Microsoft.EntityFrameworkCore.Storage.DbContextTransactionExtensions
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction.Commit*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction.Commit
  isExternal: false
  name: Commit
  nameWithType: IDbContextTransaction.Commit
  fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction.Commit
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction.Rollback*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction.Rollback
  isExternal: false
  name: Rollback
  nameWithType: IDbContextTransaction.Rollback
  fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction.Rollback
