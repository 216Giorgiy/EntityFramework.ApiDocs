### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1
  id: EntityTypeBuilder`1
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders
  children:
  - Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.HasAlternateKey(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  - Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.HasAnnotation(System.String,System.Object)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.HasBaseType(System.String)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.HasBaseType(System.Type)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.HasBaseType``1
  - Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.HasChangeTrackingStrategy(Microsoft.EntityFrameworkCore.Metadata.ChangeTrackingStrategy)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.HasIndex(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  - Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.HasKey(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  - Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.HasMany``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})
  - Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.HasOne``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
  - Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.Ignore(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  - Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.Ignore(System.String)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.New(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.Property``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
  - Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.UsePropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode)
  langs:
  - csharp
  - vb
  name: EntityTypeBuilder<TEntity>
  nameWithType: EntityTypeBuilder<TEntity>
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<TEntity>
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/EntityTypeBuilder`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: EntityTypeBuilder
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/EntityTypeBuilder`.cs
    startLine: 24
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\n<p>\n    Provides a simple API for configuring an <xref href=\"Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType\" data-throw-if-not-resolved=\"false\"></xref>.\n</p>\n<p>\n    Instances of this class are returned from methods when using the <xref href=\"Microsoft.EntityFrameworkCore.ModelBuilder\" data-throw-if-not-resolved=\"false\"></xref> API\n    and it is not designed to be directly constructed in your application code.\n</p>\n"
  example: []
  syntax:
    content: 'public class EntityTypeBuilder<TEntity> : EntityTypeBuilder, IInfrastructure<IMutableModel>, IInfrastructure<InternalEntityTypeBuilder> where TEntity : class'
    content.vb: >-
      Public Class EntityTypeBuilder(Of TEntity As Class)
          Inherits EntityTypeBuilder
          Implements IInfrastructure(Of IMutableModel), IInfrastructure(Of InternalEntityTypeBuilder)
    typeParameters:
    - id: TEntity
      description: 'The entity type being configured. '
  inheritance:
  - System.Object
  - Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
  implements:
  - Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.Metadata.IMutableModel}
  - Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder}
  inheritedMembers:
  - Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#Metadata#Internal#InternalEntityTypeBuilder}#Instance
  - Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Metadata
  - Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#Metadata#IMutableModel}#Instance
  - Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasKey(System.String[])
  - Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasAlternateKey(System.String[])
  - Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property``1(System.String)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property(System.Type,System.String)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property(System.String)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasIndex(System.String[])
  - Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasOne(System.Type,System.String)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasOne(System.String,System.String)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasMany(System.Type,System.String)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasMany(System.String,System.String)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasOneBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.String)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasOneBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.Reflection.PropertyInfo)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasManyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.String)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasManyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.Reflection.PropertyInfo)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable(System.String)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable``1(System.String)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable(System.String,System.String)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable``1(System.String,System.String)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerIsMemoryOptimized(System.Boolean)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerIsMemoryOptimized``1(System.Boolean)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Microsoft.EntityFrameworkCore.SqliteEntityTypeBuilderExtensions.ForSqliteToTable(System.String)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.Microsoft.EntityFrameworkCore.SqliteEntityTypeBuilderExtensions.ForSqliteToTable``1(System.String)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(System.String)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable``1(System.String)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(System.String,System.String)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable``1(System.String,System.String)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator
  - Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator(System.String,System.Type)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator``1(System.String)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator``2(System.Linq.Expressions.Expression{System.Func{{TEntity},{TDiscriminator}}})
  nameWithType.vb: EntityTypeBuilder(Of TEntity)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of TEntity)
  name.vb: EntityTypeBuilder(Of TEntity)
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder)
  id: '#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder)'
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1
  langs:
  - csharp
  - vb
  name: EntityTypeBuilder(InternalEntityTypeBuilder)
  nameWithType: EntityTypeBuilder<TEntity>.EntityTypeBuilder(InternalEntityTypeBuilder)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<TEntity>.EntityTypeBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/EntityTypeBuilder`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/EntityTypeBuilder`.cs
    startLine: 31
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public EntityTypeBuilder(InternalEntityTypeBuilder builder)
    content.vb: Public Sub New(builder As InternalEntityTypeBuilder)
    parameters:
    - id: builder
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  overload: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.#ctor*
  nameWithType.vb: EntityTypeBuilder(Of TEntity).EntityTypeBuilder(InternalEntityTypeBuilder)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of TEntity).EntityTypeBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder)
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.New(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.New(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder)
  id: New(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder)
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1
  langs:
  - csharp
  - vb
  name: New(InternalEntityTypeBuilder)
  nameWithType: EntityTypeBuilder<TEntity>.New(InternalEntityTypeBuilder)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<TEntity>.New(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/EntityTypeBuilder`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: New
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/EntityTypeBuilder`.cs
    startLine: 43
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\nCreates a new builder based on the provided internal builder. This overridden implementation creates\n<xref href=\"Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder%601\" data-throw-if-not-resolved=\"false\"></xref> instances so that logic inherited from the base class will\nuse those instead of <xref href=\"Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: protected override EntityTypeBuilder New(InternalEntityTypeBuilder builder)
    content.vb: Protected Overrides Function New(builder As InternalEntityTypeBuilder) As EntityTypeBuilder
    parameters:
    - id: builder
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
      description: 'The internal builder to create the new builder from. '
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
      description: 'The newly created builder. '
  overridden: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.New(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder)
  overload: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.New*
  nameWithType.vb: EntityTypeBuilder(Of TEntity).New(InternalEntityTypeBuilder)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of TEntity).New(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder)
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.HasAnnotation(System.String,System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.HasAnnotation(System.String,System.Object)
  id: HasAnnotation(System.String,System.Object)
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1
  langs:
  - csharp
  - vb
  name: HasAnnotation(String, Object)
  nameWithType: EntityTypeBuilder<TEntity>.HasAnnotation(String, Object)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<TEntity>.HasAnnotation(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/EntityTypeBuilder`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: HasAnnotation
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/EntityTypeBuilder`.cs
    startLine: 53
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\nAdds or updates an annotation on the entity type. If an annotation with the key specified in\n<em>annotation</em> already exists it's value will be updated.\n"
  example: []
  syntax:
    content: public virtual EntityTypeBuilder<TEntity> HasAnnotation(string annotation, object value)
    content.vb: Public Overridable Function HasAnnotation(annotation As String, value As Object) As EntityTypeBuilder(Of TEntity)
    parameters:
    - id: annotation
      type: System.String
      description: 'The key of the annotation to be added or updated. '
    - id: value
      type: System.Object
      description: 'The value to be stored in the annotation. '
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1
      description: 'The same typeBuilder instance so that multiple configuration calls can be chained. '
  overload: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.HasAnnotation*
  nameWithType.vb: EntityTypeBuilder(Of TEntity).HasAnnotation(String, Object)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of TEntity).HasAnnotation(System.String, System.Object)
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.HasBaseType(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.HasBaseType(System.String)
  id: HasBaseType(System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1
  langs:
  - csharp
  - vb
  name: HasBaseType(String)
  nameWithType: EntityTypeBuilder<TEntity>.HasBaseType(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<TEntity>.HasBaseType(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/EntityTypeBuilder`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: HasBaseType
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/EntityTypeBuilder`.cs
    startLine: 61
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\nSets the base type of this entity in an inheritance hierarchy.\n"
  example: []
  syntax:
    content: public virtual EntityTypeBuilder<TEntity> HasBaseType(string name)
    content.vb: Public Overridable Function HasBaseType(name As String) As EntityTypeBuilder(Of TEntity)
    parameters:
    - id: name
      type: System.String
      description: 'The name of the base type. '
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1
      description: 'The same builder instance so that multiple configuration calls can be chained. '
  overload: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.HasBaseType*
  nameWithType.vb: EntityTypeBuilder(Of TEntity).HasBaseType(String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of TEntity).HasBaseType(System.String)
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.HasBaseType(System.Type)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.HasBaseType(System.Type)
  id: HasBaseType(System.Type)
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1
  langs:
  - csharp
  - vb
  name: HasBaseType(Type)
  nameWithType: EntityTypeBuilder<TEntity>.HasBaseType(Type)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<TEntity>.HasBaseType(System.Type)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/EntityTypeBuilder`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: HasBaseType
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/EntityTypeBuilder`.cs
    startLine: 69
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\nSets the base type of this entity in an inheritance hierarchy.\n"
  example: []
  syntax:
    content: public virtual EntityTypeBuilder<TEntity> HasBaseType(Type entityType)
    content.vb: Public Overridable Function HasBaseType(entityType As Type) As EntityTypeBuilder(Of TEntity)
    parameters:
    - id: entityType
      type: System.Type
      description: 'The base type. '
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1
      description: 'The same builder instance so that multiple configuration calls can be chained. '
  overload: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.HasBaseType*
  nameWithType.vb: EntityTypeBuilder(Of TEntity).HasBaseType(Type)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of TEntity).HasBaseType(System.Type)
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.HasBaseType``1
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.HasBaseType``1
  id: HasBaseType``1
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1
  langs:
  - csharp
  - vb
  name: HasBaseType<TBaseType>()
  nameWithType: EntityTypeBuilder<TEntity>.HasBaseType<TBaseType>()
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<TEntity>.HasBaseType<TBaseType>()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/EntityTypeBuilder`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: HasBaseType
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/EntityTypeBuilder`.cs
    startLine: 77
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\nSets the base type of this entity in an inheritance hierarchy.\n"
  example: []
  syntax:
    content: public virtual EntityTypeBuilder<TEntity> HasBaseType<TBaseType>()
    content.vb: Public Overridable Function HasBaseType(Of TBaseType) As EntityTypeBuilder(Of TEntity)
    typeParameters:
    - id: TBaseType
      description: 'The base type. '
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1
      description: 'The same builder instance so that multiple configuration calls can be chained. '
  overload: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.HasBaseType*
  nameWithType.vb: EntityTypeBuilder(Of TEntity).HasBaseType(Of TBaseType)()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of TEntity).HasBaseType(Of TBaseType)()
  name.vb: HasBaseType(Of TBaseType)()
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.HasKey(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.HasKey(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  id: HasKey(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1
  langs:
  - csharp
  - vb
  name: HasKey(Expression<Func<TEntity, Object>>)
  nameWithType: EntityTypeBuilder<TEntity>.HasKey(Expression<Func<TEntity, Object>>)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<TEntity>.HasKey(System.Linq.Expressions.Expression<System.Func<TEntity, System.Object>>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/EntityTypeBuilder`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: HasKey
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/EntityTypeBuilder`.cs
    startLine: 93
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\nSets the properties that make up the primary key for this entity type.\n"
  example: []
  syntax:
    content: public virtual KeyBuilder HasKey(Expression<Func<TEntity, object>> keyExpression)
    content.vb: Public Overridable Function HasKey(keyExpression As Expression(Of Func(Of TEntity, Object))) As KeyBuilder
    parameters:
    - id: keyExpression
      type: System.Linq.Expressions.Expression{System.Func{{TEntity},System.Object}}
      description: "\n<p>\n    A lambda expression representing the primary key property(s) (<code>blog =&gt; blog.Url</code>).\n</p>\n<p>\n    If the primary key is made up of multiple properties then specify an anonymous type including the\n    properties (<code>post =&gt; new { post.Title, post.BlogId }</code>).\n</p>\n"
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder
      description: 'An object that can be used to configure the primary key. '
  overload: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.HasKey*
  nameWithType.vb: EntityTypeBuilder(Of TEntity).HasKey(Expression(Of Func(Of TEntity, Object)))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of TEntity).HasKey(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, System.Object)))
  name.vb: HasKey(Expression(Of Func(Of TEntity, Object)))
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.HasAlternateKey(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.HasAlternateKey(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  id: HasAlternateKey(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1
  langs:
  - csharp
  - vb
  name: HasAlternateKey(Expression<Func<TEntity, Object>>)
  nameWithType: EntityTypeBuilder<TEntity>.HasAlternateKey(Expression<Func<TEntity, Object>>)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<TEntity>.HasAlternateKey(System.Linq.Expressions.Expression<System.Func<TEntity, System.Object>>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/EntityTypeBuilder`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: HasAlternateKey
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/EntityTypeBuilder`.cs
    startLine: 111
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\nCreates a new unique constraint for this entity type if one does not already exist over the specified\nproperties.\n"
  example: []
  syntax:
    content: public virtual KeyBuilder HasAlternateKey(Expression<Func<TEntity, object>> keyExpression)
    content.vb: Public Overridable Function HasAlternateKey(keyExpression As Expression(Of Func(Of TEntity, Object))) As KeyBuilder
    parameters:
    - id: keyExpression
      type: System.Linq.Expressions.Expression{System.Func{{TEntity},System.Object}}
      description: "\n<p>\n    A lambda expression representing the unique constraint property(s) (<code>blog =&gt; blog.Url</code>).\n</p>\n<p>\n    If the unique constraint is made up of multiple properties then specify an anonymous type including\n    the properties (<code>post =&gt; new { post.Title, post.BlogId }</code>).\n</p>\n"
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder
      description: 'An object that can be used to configure the unique constraint. '
  overload: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.HasAlternateKey*
  nameWithType.vb: EntityTypeBuilder(Of TEntity).HasAlternateKey(Expression(Of Func(Of TEntity, Object)))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of TEntity).HasAlternateKey(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, System.Object)))
  name.vb: HasAlternateKey(Expression(Of Func(Of TEntity, Object)))
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.Property``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.Property``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
  id: Property``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1
  langs:
  - csharp
  - vb
  name: Property<TProperty>(Expression<Func<TEntity, TProperty>>)
  nameWithType: EntityTypeBuilder<TEntity>.Property<TProperty>(Expression<Func<TEntity, TProperty>>)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<TEntity>.Property<TProperty>(System.Linq.Expressions.Expression<System.Func<TEntity, TProperty>>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/EntityTypeBuilder`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Property
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/EntityTypeBuilder`.cs
    startLine: 124
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\nReturns an object that can be used to configure a property of the entity type.\nIf the specified property is not already part of the model, it will be added.\n"
  example: []
  syntax:
    content: public virtual PropertyBuilder<TProperty> Property<TProperty>(Expression<Func<TEntity, TProperty>> propertyExpression)
    content.vb: Public Overridable Function Property(Of TProperty)(propertyExpression As Expression(Of Func(Of TEntity, TProperty))) As PropertyBuilder(Of TProperty)
    parameters:
    - id: propertyExpression
      type: System.Linq.Expressions.Expression{System.Func{{TEntity},{TProperty}}}
      description: "\nA lambda expression representing the property to be configured (\n<code>blog =&gt; blog.Url</code>).\n"
    typeParameters:
    - id: TProperty
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{{TProperty}}
      description: 'An object that can be used to configure the property. '
  overload: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.Property*
  nameWithType.vb: EntityTypeBuilder(Of TEntity).Property(Of TProperty)(Expression(Of Func(Of TEntity, TProperty)))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of TEntity).Property(Of TProperty)(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, TProperty)))
  name.vb: Property(Of TProperty)(Expression(Of Func(Of TEntity, TProperty)))
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.Ignore(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.Ignore(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  id: Ignore(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1
  langs:
  - csharp
  - vb
  name: Ignore(Expression<Func<TEntity, Object>>)
  nameWithType: EntityTypeBuilder<TEntity>.Ignore(Expression<Func<TEntity, Object>>)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<TEntity>.Ignore(System.Linq.Expressions.Expression<System.Func<TEntity, System.Object>>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/EntityTypeBuilder`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Ignore
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/EntityTypeBuilder`.cs
    startLine: 136
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\nExcludes the given property from the entity type. This method is typically used to remove properties\nfrom the entity type that were added by convention.\n"
  example: []
  syntax:
    content: public virtual EntityTypeBuilder<TEntity> Ignore(Expression<Func<TEntity, object>> propertyExpression)
    content.vb: Public Overridable Function Ignore(propertyExpression As Expression(Of Func(Of TEntity, Object))) As EntityTypeBuilder(Of TEntity)
    parameters:
    - id: propertyExpression
      type: System.Linq.Expressions.Expression{System.Func{{TEntity},System.Object}}
      description: "\nA lambda expression representing the property to be ignored\n(<code>blog =&gt; blog.Url</code>).\n"
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1
  overload: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.Ignore*
  nameWithType.vb: EntityTypeBuilder(Of TEntity).Ignore(Expression(Of Func(Of TEntity, Object)))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of TEntity).Ignore(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, System.Object)))
  name.vb: Ignore(Expression(Of Func(Of TEntity, Object)))
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.Ignore(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.Ignore(System.String)
  id: Ignore(System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1
  langs:
  - csharp
  - vb
  name: Ignore(String)
  nameWithType: EntityTypeBuilder<TEntity>.Ignore(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<TEntity>.Ignore(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/EntityTypeBuilder`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Ignore
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/EntityTypeBuilder`.cs
    startLine: 151
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\nExcludes the given property from the entity type. This method is typically used to remove properties\nfrom the entity type that were added by convention.\n"
  example: []
  syntax:
    content: public virtual EntityTypeBuilder<TEntity> Ignore(string propertyName)
    content.vb: Public Overridable Function Ignore(propertyName As String) As EntityTypeBuilder(Of TEntity)
    parameters:
    - id: propertyName
      type: System.String
      description: 'The name of then property to be removed from the entity type. '
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1
  overload: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.Ignore*
  nameWithType.vb: EntityTypeBuilder(Of TEntity).Ignore(String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of TEntity).Ignore(System.String)
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.HasIndex(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.HasIndex(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  id: HasIndex(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1
  langs:
  - csharp
  - vb
  name: HasIndex(Expression<Func<TEntity, Object>>)
  nameWithType: EntityTypeBuilder<TEntity>.HasIndex(Expression<Func<TEntity, Object>>)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<TEntity>.HasIndex(System.Linq.Expressions.Expression<System.Func<TEntity, System.Object>>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/EntityTypeBuilder`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: HasIndex
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/EntityTypeBuilder`.cs
    startLine: 175
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\nConfigures an index on the specified properties. If there is an existing index on the given\nset of properties, then the existing index will be returned for configuration.\n"
  example: []
  syntax:
    content: public virtual IndexBuilder HasIndex(Expression<Func<TEntity, object>> indexExpression)
    content.vb: Public Overridable Function HasIndex(indexExpression As Expression(Of Func(Of TEntity, Object))) As IndexBuilder
    parameters:
    - id: indexExpression
      type: System.Linq.Expressions.Expression{System.Func{{TEntity},System.Object}}
      description: "\n<p>\n    A lambda expression representing the property(s) to be included in the index\n    (<code>blog =&gt; blog.Url</code>).\n</p>\n<p>\n    If the index is made up of multiple properties then specify an anonymous type including the\n    properties (<code>post =&gt; new { post.Title, post.BlogId }</code>).\n</p>\n"
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder
      description: 'An object that can be used to configure the index. '
  overload: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.HasIndex*
  nameWithType.vb: EntityTypeBuilder(Of TEntity).HasIndex(Expression(Of Func(Of TEntity, Object)))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of TEntity).HasIndex(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, System.Object)))
  name.vb: HasIndex(Expression(Of Func(Of TEntity, Object)))
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.HasOne``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.HasOne``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
  id: HasOne``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1
  langs:
  - csharp
  - vb
  name: HasOne<TRelatedEntity>(Expression<Func<TEntity, TRelatedEntity>>)
  nameWithType: EntityTypeBuilder<TEntity>.HasOne<TRelatedEntity>(Expression<Func<TEntity, TRelatedEntity>>)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<TEntity>.HasOne<TRelatedEntity>(System.Linq.Expressions.Expression<System.Func<TEntity, TRelatedEntity>>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/EntityTypeBuilder`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: HasOne
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/EntityTypeBuilder`.cs
    startLine: 202
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\n<p>\n    Configures a relationship where this entity type has a reference that points\n    to a single instance of the other type in the relationship.\n</p>\n<p>\n    After calling this method, you should chain a call to\n<xref href=\"Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder%602.WithMany(System.Linq.Expressions.Expression%7bSystem.Func%7b%601%2cSystem.Collections.Generic.IEnumerable%7b%600%7d%7d%7d)\" data-throw-if-not-resolved=\"false\"></xref>\nor\n<xref href=\"Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder%602.WithOne(System.Linq.Expressions.Expression%7bSystem.Func%7b%601%2c%600%7d%7d)\" data-throw-if-not-resolved=\"false\"></xref>\nto fully configure the relationship. Calling just this method without the chained call will not\nproduce a valid relationship.\n</p>\n"
  example: []
  syntax:
    content: 'public virtual ReferenceNavigationBuilder<TEntity, TRelatedEntity> HasOne<TRelatedEntity>(Expression<Func<TEntity, TRelatedEntity>> navigationExpression = null)where TRelatedEntity : class'
    content.vb: Public Overridable Function HasOne(Of TRelatedEntity As Class)(navigationExpression As Expression(Of Func(Of TEntity, TRelatedEntity)) = Nothing) As ReferenceNavigationBuilder(Of TEntity, TRelatedEntity)
    parameters:
    - id: navigationExpression
      type: System.Linq.Expressions.Expression{System.Func{{TEntity},{TRelatedEntity}}}
      description: "\nA lambda expression representing the reference navigation property on this entity type that represents\nthe relationship (<code>post =&gt; post.Blog</code>). If no property is specified, the relationship will be\nconfigured without a navigation property on this end.\n"
    typeParameters:
    - id: TRelatedEntity
      description: 'The entity type that this relationship targets. '
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder{{TEntity},{TRelatedEntity}}
      description: 'An object that can be used to configure the relationship. '
  overload: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.HasOne*
  nameWithType.vb: EntityTypeBuilder(Of TEntity).HasOne(Of TRelatedEntity)(Expression(Of Func(Of TEntity, TRelatedEntity)))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of TEntity).HasOne(Of TRelatedEntity)(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, TRelatedEntity)))
  name.vb: HasOne(Of TRelatedEntity)(Expression(Of Func(Of TEntity, TRelatedEntity)))
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.HasMany``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.HasMany``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})
  id: HasMany``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1
  langs:
  - csharp
  - vb
  name: HasMany<TRelatedEntity>(Expression<Func<TEntity, IEnumerable<TRelatedEntity>>>)
  nameWithType: EntityTypeBuilder<TEntity>.HasMany<TRelatedEntity>(Expression<Func<TEntity, IEnumerable<TRelatedEntity>>>)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<TEntity>.HasMany<TRelatedEntity>(System.Linq.Expressions.Expression<System.Func<TEntity, System.Collections.Generic.IEnumerable<TRelatedEntity>>>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/EntityTypeBuilder`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: HasMany
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/EntityTypeBuilder`.cs
    startLine: 236
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\n<p>\n    Configures a relationship where this entity type has a collection that contains\n    instances of the other type in the relationship.\n</p>\n<p>\n    After calling this method, you should chain a call to\n<xref href=\"Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder%602.WithOne(System.Linq.Expressions.Expression%7bSystem.Func%7b%601%2c%600%7d%7d)\" data-throw-if-not-resolved=\"false\"></xref>\nto fully configure the relationship. Calling just this method without the chained call will not\nproduce a valid relationship.\n</p>\n"
  example: []
  syntax:
    content: 'public virtual CollectionNavigationBuilder<TEntity, TRelatedEntity> HasMany<TRelatedEntity>(Expression<Func<TEntity, IEnumerable<TRelatedEntity>>> navigationExpression = null)where TRelatedEntity : class'
    content.vb: Public Overridable Function HasMany(Of TRelatedEntity As Class)(navigationExpression As Expression(Of Func(Of TEntity, IEnumerable(Of TRelatedEntity))) = Nothing) As CollectionNavigationBuilder(Of TEntity, TRelatedEntity)
    parameters:
    - id: navigationExpression
      type: System.Linq.Expressions.Expression{System.Func{{TEntity},System.Collections.Generic.IEnumerable{{TRelatedEntity}}}}
      description: "\nA lambda expression representing the collection navigation property on this entity type that represents\nthe relationship (<code>blog =&gt; blog.Posts</code>). If no property is specified, the relationship will be\nconfigured without a navigation property on this end.\n"
    typeParameters:
    - id: TRelatedEntity
      description: 'The entity type that this relationship targets. '
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder{{TEntity},{TRelatedEntity}}
      description: 'An object that can be used to configure the relationship. '
  overload: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.HasMany*
  nameWithType.vb: EntityTypeBuilder(Of TEntity).HasMany(Of TRelatedEntity)(Expression(Of Func(Of TEntity, IEnumerable(Of TRelatedEntity))))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of TEntity).HasMany(Of TRelatedEntity)(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, System.Collections.Generic.IEnumerable(Of TRelatedEntity))))
  name.vb: HasMany(Of TRelatedEntity)(Expression(Of Func(Of TEntity, IEnumerable(Of TRelatedEntity))))
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.HasChangeTrackingStrategy(Microsoft.EntityFrameworkCore.Metadata.ChangeTrackingStrategy)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.HasChangeTrackingStrategy(Microsoft.EntityFrameworkCore.Metadata.ChangeTrackingStrategy)
  id: HasChangeTrackingStrategy(Microsoft.EntityFrameworkCore.Metadata.ChangeTrackingStrategy)
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1
  langs:
  - csharp
  - vb
  name: HasChangeTrackingStrategy(ChangeTrackingStrategy)
  nameWithType: EntityTypeBuilder<TEntity>.HasChangeTrackingStrategy(ChangeTrackingStrategy)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<TEntity>.HasChangeTrackingStrategy(Microsoft.EntityFrameworkCore.Metadata.ChangeTrackingStrategy)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/EntityTypeBuilder`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: HasChangeTrackingStrategy
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/EntityTypeBuilder`.cs
    startLine: 256
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\nConfigures the <xref href=\"Microsoft.EntityFrameworkCore.Metadata.ChangeTrackingStrategy\" data-throw-if-not-resolved=\"false\"></xref> to be used for this entity type.\nThis strategy indicates how the context detects changes to properties for an instance of the entity type.\n"
  example: []
  syntax:
    content: public virtual EntityTypeBuilder<TEntity> HasChangeTrackingStrategy(ChangeTrackingStrategy changeTrackingStrategy)
    content.vb: Public Overridable Function HasChangeTrackingStrategy(changeTrackingStrategy As ChangeTrackingStrategy) As EntityTypeBuilder(Of TEntity)
    parameters:
    - id: changeTrackingStrategy
      type: Microsoft.EntityFrameworkCore.Metadata.ChangeTrackingStrategy
      description: 'The change tracking strategy to be used. '
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1
      description: 'The same builder instance so that multiple configuration calls can be chained. '
  overload: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.HasChangeTrackingStrategy*
  nameWithType.vb: EntityTypeBuilder(Of TEntity).HasChangeTrackingStrategy(ChangeTrackingStrategy)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of TEntity).HasChangeTrackingStrategy(Microsoft.EntityFrameworkCore.Metadata.ChangeTrackingStrategy)
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.UsePropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.UsePropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode)
  id: UsePropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode)
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1
  langs:
  - csharp
  - vb
  name: UsePropertyAccessMode(PropertyAccessMode)
  nameWithType: EntityTypeBuilder<TEntity>.UsePropertyAccessMode(PropertyAccessMode)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<TEntity>.UsePropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/EntityTypeBuilder`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: UsePropertyAccessMode
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/EntityTypeBuilder`.cs
    startLine: 276
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\n<p>\n    Sets the <xref href=\"Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode\" data-throw-if-not-resolved=\"false\"></xref> to use for all properties of this entity type.\n</p>\n<p>\n    By default, the backing field, if one is found by convention or has been specified, is used when\n    new objects are constructed, typically when entities are queried from the database.\n    Properties are used for all other accesses.  Calling this method witll change that behavior\n    for all properties of this entity type as described in the <xref href=\"Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode\" data-throw-if-not-resolved=\"false\"></xref> enum.\n</p>\n<p>\n    Calling this method overrrides for all properties of this entity type any access mode that was\n    set on the model.\n</p>\n"
  example: []
  syntax:
    content: public virtual EntityTypeBuilder<TEntity> UsePropertyAccessMode(PropertyAccessMode propertyAccessMode)
    content.vb: Public Overridable Function UsePropertyAccessMode(propertyAccessMode As PropertyAccessMode) As EntityTypeBuilder(Of TEntity)
    parameters:
    - id: propertyAccessMode
      type: Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode
      description: 'The <xref href="Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode" data-throw-if-not-resolved="false"></xref> to use for properties of this entity type. '
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1
      description: 'The same builder instance so that multiple configuration calls can be chained. '
  overload: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.UsePropertyAccessMode*
  nameWithType.vb: EntityTypeBuilder(Of TEntity).UsePropertyAccessMode(PropertyAccessMode)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of TEntity).UsePropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode)
references:
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: EntityType
  nameWithType: EntityType
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
- uid: Microsoft.EntityFrameworkCore.ModelBuilder
  commentId: T:Microsoft.EntityFrameworkCore.ModelBuilder
  parent: Microsoft.EntityFrameworkCore
  isExternal: false
  name: ModelBuilder
  nameWithType: ModelBuilder
  fullName: Microsoft.EntityFrameworkCore.ModelBuilder
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Builders
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Builders
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Builders
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders
  isExternal: false
  name: EntityTypeBuilder
  nameWithType: EntityTypeBuilder
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.Metadata.IMutableModel}
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.Metadata.IMutableModel}
  parent: Microsoft.EntityFrameworkCore.Infrastructure
  definition: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
  name: IInfrastructure<IMutableModel>
  nameWithType: IInfrastructure<IMutableModel>
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.Metadata.IMutableModel>
  nameWithType.vb: IInfrastructure(Of IMutableModel)
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of Microsoft.EntityFrameworkCore.Metadata.IMutableModel)
  name.vb: IInfrastructure(Of IMutableModel)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.IMutableModel
    name: IMutableModel
    nameWithType: IMutableModel
    fullName: Microsoft.EntityFrameworkCore.Metadata.IMutableModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IMutableModel
    name: IMutableModel
    nameWithType: IMutableModel
    fullName: Microsoft.EntityFrameworkCore.Metadata.IMutableModel
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder}
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder}
  parent: Microsoft.EntityFrameworkCore.Infrastructure
  definition: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
  name: IInfrastructure<InternalEntityTypeBuilder>
  nameWithType: IInfrastructure<InternalEntityTypeBuilder>
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder>
  nameWithType.vb: IInfrastructure(Of InternalEntityTypeBuilder)
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder)
  name.vb: IInfrastructure(Of InternalEntityTypeBuilder)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
    name: InternalEntityTypeBuilder
    nameWithType: InternalEntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
    name: InternalEntityTypeBuilder
    nameWithType: InternalEntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#Metadata#Internal#InternalEntityTypeBuilder}#Instance
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#Metadata#Internal#InternalEntityTypeBuilder}#Instance
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
  isExternal: false
  name: IInfrastructure<InternalEntityTypeBuilder>.Instance
  nameWithType: EntityTypeBuilder.IInfrastructure<InternalEntityTypeBuilder>.Instance
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder>.Instance
  nameWithType.vb: EntityTypeBuilder.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder>.Instance
  name.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder>.Instance
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Metadata
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Metadata
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
  isExternal: false
  name: Metadata
  nameWithType: EntityTypeBuilder.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Metadata
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#Metadata#IMutableModel}#Instance
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#Metadata#IMutableModel}#Instance
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
  isExternal: false
  name: IInfrastructure<IMutableModel>.Instance
  nameWithType: EntityTypeBuilder.IInfrastructure<IMutableModel>.Instance
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.Metadata.IMutableModel>.Instance
  nameWithType.vb: EntityTypeBuilder.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.Metadata.IMutableModel>.Instance
  name.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.Metadata.IMutableModel>.Instance
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasKey(System.String[])
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasKey(System.String[])
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
  isExternal: true
  name: HasKey(String[])
  nameWithType: EntityTypeBuilder.HasKey(String[])
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasKey(System.String[])
  nameWithType.vb: EntityTypeBuilder.HasKey(String())
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasKey(System.String())
  name.vb: HasKey(String())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasKey(System.String[])
    name: HasKey
    nameWithType: EntityTypeBuilder.HasKey
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasKey(System.String[])
    name: HasKey
    nameWithType: EntityTypeBuilder.HasKey
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasAlternateKey(System.String[])
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasAlternateKey(System.String[])
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
  isExternal: true
  name: HasAlternateKey(String[])
  nameWithType: EntityTypeBuilder.HasAlternateKey(String[])
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasAlternateKey(System.String[])
  nameWithType.vb: EntityTypeBuilder.HasAlternateKey(String())
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasAlternateKey(System.String())
  name.vb: HasAlternateKey(String())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasAlternateKey(System.String[])
    name: HasAlternateKey
    nameWithType: EntityTypeBuilder.HasAlternateKey
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasAlternateKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasAlternateKey(System.String[])
    name: HasAlternateKey
    nameWithType: EntityTypeBuilder.HasAlternateKey
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasAlternateKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property``1(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property``1(System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
  isExternal: true
  name: Property<TProperty>(String)
  nameWithType: EntityTypeBuilder.Property<TProperty>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property<TProperty>(System.String)
  nameWithType.vb: EntityTypeBuilder.Property(Of TProperty)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property(Of TProperty)(System.String)
  name.vb: Property(Of TProperty)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property``1(System.String)
    name: Property<TProperty>
    nameWithType: EntityTypeBuilder.Property<TProperty>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property<TProperty>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property``1(System.String)
    name: Property(Of TProperty)
    nameWithType: EntityTypeBuilder.Property(Of TProperty)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property(Of TProperty)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property(System.Type,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property(System.Type,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
  isExternal: true
  name: Property(Type, String)
  nameWithType: EntityTypeBuilder.Property(Type, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property(System.Type, System.String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property(System.Type,System.String)
    name: Property
    nameWithType: EntityTypeBuilder.Property
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property(System.Type,System.String)
    name: Property
    nameWithType: EntityTypeBuilder.Property
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property(System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
  isExternal: true
  name: Property(String)
  nameWithType: EntityTypeBuilder.Property(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property(System.String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property(System.String)
    name: Property
    nameWithType: EntityTypeBuilder.Property
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property(System.String)
    name: Property
    nameWithType: EntityTypeBuilder.Property
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasIndex(System.String[])
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasIndex(System.String[])
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
  isExternal: true
  name: HasIndex(String[])
  nameWithType: EntityTypeBuilder.HasIndex(String[])
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasIndex(System.String[])
  nameWithType.vb: EntityTypeBuilder.HasIndex(String())
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasIndex(System.String())
  name.vb: HasIndex(String())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasIndex(System.String[])
    name: HasIndex
    nameWithType: EntityTypeBuilder.HasIndex
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasIndex
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasIndex(System.String[])
    name: HasIndex
    nameWithType: EntityTypeBuilder.HasIndex
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasIndex
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasOne(System.Type,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasOne(System.Type,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
  isExternal: true
  name: HasOne(Type, String)
  nameWithType: EntityTypeBuilder.HasOne(Type, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasOne(System.Type, System.String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasOne(System.Type,System.String)
    name: HasOne
    nameWithType: EntityTypeBuilder.HasOne
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasOne(System.Type,System.String)
    name: HasOne
    nameWithType: EntityTypeBuilder.HasOne
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasOne(System.String,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasOne(System.String,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
  isExternal: true
  name: HasOne(String, String)
  nameWithType: EntityTypeBuilder.HasOne(String, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasOne(System.String, System.String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasOne(System.String,System.String)
    name: HasOne
    nameWithType: EntityTypeBuilder.HasOne
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasOne(System.String,System.String)
    name: HasOne
    nameWithType: EntityTypeBuilder.HasOne
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasMany(System.Type,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasMany(System.Type,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
  isExternal: true
  name: HasMany(Type, String)
  nameWithType: EntityTypeBuilder.HasMany(Type, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasMany(System.Type, System.String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasMany(System.Type,System.String)
    name: HasMany
    nameWithType: EntityTypeBuilder.HasMany
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasMany
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasMany(System.Type,System.String)
    name: HasMany
    nameWithType: EntityTypeBuilder.HasMany
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasMany
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasMany(System.String,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasMany(System.String,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
  isExternal: true
  name: HasMany(String, String)
  nameWithType: EntityTypeBuilder.HasMany(String, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasMany(System.String, System.String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasMany(System.String,System.String)
    name: HasMany
    nameWithType: EntityTypeBuilder.HasMany
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasMany
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasMany(System.String,System.String)
    name: HasMany
    nameWithType: EntityTypeBuilder.HasMany
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasMany
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasOneBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasOneBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
  isExternal: true
  name: HasOneBuilder(EntityType, String)
  nameWithType: EntityTypeBuilder.HasOneBuilder(EntityType, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasOneBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType, System.String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasOneBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.String)
    name: HasOneBuilder
    nameWithType: EntityTypeBuilder.HasOneBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasOneBuilder
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
    name: EntityType
    nameWithType: EntityType
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasOneBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.String)
    name: HasOneBuilder
    nameWithType: EntityTypeBuilder.HasOneBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasOneBuilder
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
    name: EntityType
    nameWithType: EntityType
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasOneBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.Reflection.PropertyInfo)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasOneBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.Reflection.PropertyInfo)
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
  isExternal: true
  name: HasOneBuilder(EntityType, PropertyInfo)
  nameWithType: EntityTypeBuilder.HasOneBuilder(EntityType, PropertyInfo)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasOneBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType, System.Reflection.PropertyInfo)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasOneBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.Reflection.PropertyInfo)
    name: HasOneBuilder
    nameWithType: EntityTypeBuilder.HasOneBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasOneBuilder
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
    name: EntityType
    nameWithType: EntityType
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    nameWithType: PropertyInfo
    fullName: System.Reflection.PropertyInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasOneBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.Reflection.PropertyInfo)
    name: HasOneBuilder
    nameWithType: EntityTypeBuilder.HasOneBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasOneBuilder
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
    name: EntityType
    nameWithType: EntityType
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    nameWithType: PropertyInfo
    fullName: System.Reflection.PropertyInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasManyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasManyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
  isExternal: true
  name: HasManyBuilder(EntityType, String)
  nameWithType: EntityTypeBuilder.HasManyBuilder(EntityType, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasManyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType, System.String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasManyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.String)
    name: HasManyBuilder
    nameWithType: EntityTypeBuilder.HasManyBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasManyBuilder
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
    name: EntityType
    nameWithType: EntityType
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasManyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.String)
    name: HasManyBuilder
    nameWithType: EntityTypeBuilder.HasManyBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasManyBuilder
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
    name: EntityType
    nameWithType: EntityType
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasManyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.Reflection.PropertyInfo)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasManyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.Reflection.PropertyInfo)
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
  isExternal: true
  name: HasManyBuilder(EntityType, PropertyInfo)
  nameWithType: EntityTypeBuilder.HasManyBuilder(EntityType, PropertyInfo)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasManyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType, System.Reflection.PropertyInfo)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasManyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.Reflection.PropertyInfo)
    name: HasManyBuilder
    nameWithType: EntityTypeBuilder.HasManyBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasManyBuilder
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
    name: EntityType
    nameWithType: EntityType
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    nameWithType: PropertyInfo
    fullName: System.Reflection.PropertyInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasManyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.Reflection.PropertyInfo)
    name: HasManyBuilder
    nameWithType: EntityTypeBuilder.HasManyBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasManyBuilder
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
    name: EntityType
    nameWithType: EntityType
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    nameWithType: PropertyInfo
    fullName: System.Reflection.PropertyInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String)
  parent: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions
  definition: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String)
  name: ForSqlServerToTable(String)
  nameWithType: SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable(String)
  fullName: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable(System.String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable(System.String)
    name: ForSqlServerToTable
    nameWithType: SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable
    fullName: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable(System.String)
    name: ForSqlServerToTable
    nameWithType: SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable
    fullName: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable``1(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable``1(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{``0},System.String)
  parent: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions
  definition: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable``1(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{``0},System.String)
  name: ForSqlServerToTable<TEntity>(String)
  nameWithType: SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable<TEntity>(String)
  fullName: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable<TEntity>(System.String)
  nameWithType.vb: SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable(Of TEntity)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable(Of TEntity)(System.String)
  name.vb: ForSqlServerToTable(Of TEntity)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable``1(System.String)
    name: ForSqlServerToTable<TEntity>
    nameWithType: SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable<TEntity>
    fullName: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable``1(System.String)
    name: ForSqlServerToTable(Of TEntity)
    nameWithType: SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable(System.String,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String,System.String)
  parent: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions
  definition: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String,System.String)
  name: ForSqlServerToTable(String, String)
  nameWithType: SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable(String, String)
  fullName: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable(System.String, System.String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable(System.String,System.String)
    name: ForSqlServerToTable
    nameWithType: SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable
    fullName: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable(System.String,System.String)
    name: ForSqlServerToTable
    nameWithType: SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable
    fullName: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable``1(System.String,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable``1(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{``0},System.String,System.String)
  parent: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions
  definition: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable``1(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{``0},System.String,System.String)
  name: ForSqlServerToTable<TEntity>(String, String)
  nameWithType: SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable<TEntity>(String, String)
  fullName: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable<TEntity>(System.String, System.String)
  nameWithType.vb: SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable(Of TEntity)(String, String)
  fullname.vb: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable(Of TEntity)(System.String, System.String)
  name.vb: ForSqlServerToTable(Of TEntity)(String, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable``1(System.String,System.String)
    name: ForSqlServerToTable<TEntity>
    nameWithType: SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable<TEntity>
    fullName: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable``1(System.String,System.String)
    name: ForSqlServerToTable(Of TEntity)
    nameWithType: SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerIsMemoryOptimized(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerIsMemoryOptimized(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.Boolean)
  parent: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions
  definition: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerIsMemoryOptimized(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.Boolean)
  name: ForSqlServerIsMemoryOptimized(Boolean)
  nameWithType: SqlServerEntityTypeBuilderExtensions.ForSqlServerIsMemoryOptimized(Boolean)
  fullName: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerIsMemoryOptimized(System.Boolean)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerIsMemoryOptimized(System.Boolean)
    name: ForSqlServerIsMemoryOptimized
    nameWithType: SqlServerEntityTypeBuilderExtensions.ForSqlServerIsMemoryOptimized
    fullName: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerIsMemoryOptimized
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerIsMemoryOptimized(System.Boolean)
    name: ForSqlServerIsMemoryOptimized
    nameWithType: SqlServerEntityTypeBuilderExtensions.ForSqlServerIsMemoryOptimized
    fullName: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerIsMemoryOptimized
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerIsMemoryOptimized``1(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerIsMemoryOptimized``1(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{``0},System.Boolean)
  parent: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions
  definition: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerIsMemoryOptimized``1(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{``0},System.Boolean)
  name: ForSqlServerIsMemoryOptimized<TEntity>(Boolean)
  nameWithType: SqlServerEntityTypeBuilderExtensions.ForSqlServerIsMemoryOptimized<TEntity>(Boolean)
  fullName: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerIsMemoryOptimized<TEntity>(System.Boolean)
  nameWithType.vb: SqlServerEntityTypeBuilderExtensions.ForSqlServerIsMemoryOptimized(Of TEntity)(Boolean)
  fullname.vb: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerIsMemoryOptimized(Of TEntity)(System.Boolean)
  name.vb: ForSqlServerIsMemoryOptimized(Of TEntity)(Boolean)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerIsMemoryOptimized``1(System.Boolean)
    name: ForSqlServerIsMemoryOptimized<TEntity>
    nameWithType: SqlServerEntityTypeBuilderExtensions.ForSqlServerIsMemoryOptimized<TEntity>
    fullName: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerIsMemoryOptimized<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerIsMemoryOptimized``1(System.Boolean)
    name: ForSqlServerIsMemoryOptimized(Of TEntity)
    nameWithType: SqlServerEntityTypeBuilderExtensions.ForSqlServerIsMemoryOptimized(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerIsMemoryOptimized(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Microsoft.EntityFrameworkCore.SqliteEntityTypeBuilderExtensions.ForSqliteToTable(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.SqliteEntityTypeBuilderExtensions.ForSqliteToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String)
  parent: Microsoft.EntityFrameworkCore.SqliteEntityTypeBuilderExtensions
  definition: Microsoft.EntityFrameworkCore.SqliteEntityTypeBuilderExtensions.ForSqliteToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String)
  name: ForSqliteToTable(String)
  nameWithType: SqliteEntityTypeBuilderExtensions.ForSqliteToTable(String)
  fullName: Microsoft.EntityFrameworkCore.SqliteEntityTypeBuilderExtensions.ForSqliteToTable(System.String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.SqliteEntityTypeBuilderExtensions.ForSqliteToTable(System.String)
    name: ForSqliteToTable
    nameWithType: SqliteEntityTypeBuilderExtensions.ForSqliteToTable
    fullName: Microsoft.EntityFrameworkCore.SqliteEntityTypeBuilderExtensions.ForSqliteToTable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.SqliteEntityTypeBuilderExtensions.ForSqliteToTable(System.String)
    name: ForSqliteToTable
    nameWithType: SqliteEntityTypeBuilderExtensions.ForSqliteToTable
    fullName: Microsoft.EntityFrameworkCore.SqliteEntityTypeBuilderExtensions.ForSqliteToTable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.Microsoft.EntityFrameworkCore.SqliteEntityTypeBuilderExtensions.ForSqliteToTable``1(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.SqliteEntityTypeBuilderExtensions.ForSqliteToTable``1(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{``0},System.String)
  parent: Microsoft.EntityFrameworkCore.SqliteEntityTypeBuilderExtensions
  definition: Microsoft.EntityFrameworkCore.SqliteEntityTypeBuilderExtensions.ForSqliteToTable``1(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{``0},System.String)
  name: ForSqliteToTable<TEntity>(String)
  nameWithType: SqliteEntityTypeBuilderExtensions.ForSqliteToTable<TEntity>(String)
  fullName: Microsoft.EntityFrameworkCore.SqliteEntityTypeBuilderExtensions.ForSqliteToTable<TEntity>(System.String)
  nameWithType.vb: SqliteEntityTypeBuilderExtensions.ForSqliteToTable(Of TEntity)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.SqliteEntityTypeBuilderExtensions.ForSqliteToTable(Of TEntity)(System.String)
  name.vb: ForSqliteToTable(Of TEntity)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.SqliteEntityTypeBuilderExtensions.ForSqliteToTable``1(System.String)
    name: ForSqliteToTable<TEntity>
    nameWithType: SqliteEntityTypeBuilderExtensions.ForSqliteToTable<TEntity>
    fullName: Microsoft.EntityFrameworkCore.SqliteEntityTypeBuilderExtensions.ForSqliteToTable<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.SqliteEntityTypeBuilderExtensions.ForSqliteToTable``1(System.String)
    name: ForSqliteToTable(Of TEntity)
    nameWithType: SqliteEntityTypeBuilderExtensions.ForSqliteToTable(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.SqliteEntityTypeBuilderExtensions.ForSqliteToTable(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String)
  parent: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions
  definition: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String)
  name: ToTable(String)
  nameWithType: RelationalEntityTypeBuilderExtensions.ToTable(String)
  fullName: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(System.String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(System.String)
    name: ToTable
    nameWithType: RelationalEntityTypeBuilderExtensions.ToTable
    fullName: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(System.String)
    name: ToTable
    nameWithType: RelationalEntityTypeBuilderExtensions.ToTable
    fullName: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable``1(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable``1(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{``0},System.String)
  parent: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions
  definition: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable``1(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{``0},System.String)
  name: ToTable<TEntity>(String)
  nameWithType: RelationalEntityTypeBuilderExtensions.ToTable<TEntity>(String)
  fullName: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable<TEntity>(System.String)
  nameWithType.vb: RelationalEntityTypeBuilderExtensions.ToTable(Of TEntity)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(Of TEntity)(System.String)
  name.vb: ToTable(Of TEntity)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable``1(System.String)
    name: ToTable<TEntity>
    nameWithType: RelationalEntityTypeBuilderExtensions.ToTable<TEntity>
    fullName: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable``1(System.String)
    name: ToTable(Of TEntity)
    nameWithType: RelationalEntityTypeBuilderExtensions.ToTable(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(System.String,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String,System.String)
  parent: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions
  definition: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String,System.String)
  name: ToTable(String, String)
  nameWithType: RelationalEntityTypeBuilderExtensions.ToTable(String, String)
  fullName: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(System.String, System.String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(System.String,System.String)
    name: ToTable
    nameWithType: RelationalEntityTypeBuilderExtensions.ToTable
    fullName: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(System.String,System.String)
    name: ToTable
    nameWithType: RelationalEntityTypeBuilderExtensions.ToTable
    fullName: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable``1(System.String,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable``1(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{``0},System.String,System.String)
  parent: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions
  definition: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable``1(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{``0},System.String,System.String)
  name: ToTable<TEntity>(String, String)
  nameWithType: RelationalEntityTypeBuilderExtensions.ToTable<TEntity>(String, String)
  fullName: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable<TEntity>(System.String, System.String)
  nameWithType.vb: RelationalEntityTypeBuilderExtensions.ToTable(Of TEntity)(String, String)
  fullname.vb: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(Of TEntity)(System.String, System.String)
  name.vb: ToTable(Of TEntity)(String, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable``1(System.String,System.String)
    name: ToTable<TEntity>
    nameWithType: RelationalEntityTypeBuilderExtensions.ToTable<TEntity>
    fullName: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable``1(System.String,System.String)
    name: ToTable(Of TEntity)
    nameWithType: RelationalEntityTypeBuilderExtensions.ToTable(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator
  commentId: M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder)
  parent: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions
  definition: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder)
  name: HasDiscriminator()
  nameWithType: RelationalEntityTypeBuilderExtensions.HasDiscriminator()
  fullName: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator
    name: HasDiscriminator
    nameWithType: RelationalEntityTypeBuilderExtensions.HasDiscriminator
    fullName: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator
    name: HasDiscriminator
    nameWithType: RelationalEntityTypeBuilderExtensions.HasDiscriminator
    fullName: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator(System.String,System.Type)
  commentId: M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String,System.Type)
  parent: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions
  definition: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String,System.Type)
  name: HasDiscriminator(String, Type)
  nameWithType: RelationalEntityTypeBuilderExtensions.HasDiscriminator(String, Type)
  fullName: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator(System.String, System.Type)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator(System.String,System.Type)
    name: HasDiscriminator
    nameWithType: RelationalEntityTypeBuilderExtensions.HasDiscriminator
    fullName: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator(System.String,System.Type)
    name: HasDiscriminator
    nameWithType: RelationalEntityTypeBuilderExtensions.HasDiscriminator
    fullName: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator``1(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator``1(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String)
  parent: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions
  definition: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator``1(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String)
  name: HasDiscriminator<TDiscriminator>(String)
  nameWithType: RelationalEntityTypeBuilderExtensions.HasDiscriminator<TDiscriminator>(String)
  fullName: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator<TDiscriminator>(System.String)
  nameWithType.vb: RelationalEntityTypeBuilderExtensions.HasDiscriminator(Of TDiscriminator)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator(Of TDiscriminator)(System.String)
  name.vb: HasDiscriminator(Of TDiscriminator)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator``1(System.String)
    name: HasDiscriminator<TDiscriminator>
    nameWithType: RelationalEntityTypeBuilderExtensions.HasDiscriminator<TDiscriminator>
    fullName: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator<TDiscriminator>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator``1(System.String)
    name: HasDiscriminator(Of TDiscriminator)
    nameWithType: RelationalEntityTypeBuilderExtensions.HasDiscriminator(Of TDiscriminator)
    fullName: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator(Of TDiscriminator)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator``2(System.Linq.Expressions.Expression{System.Func{{TEntity},{TDiscriminator}}})
  commentId: M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator``2(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  parent: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions
  definition: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator``2(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  name: HasDiscriminator<TEntity, TDiscriminator>(Expression<Func<TEntity, TDiscriminator>>)
  nameWithType: RelationalEntityTypeBuilderExtensions.HasDiscriminator<TEntity, TDiscriminator>(Expression<Func<TEntity, TDiscriminator>>)
  fullName: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator<TEntity, TDiscriminator>(System.Linq.Expressions.Expression<System.Func<TEntity, TDiscriminator>>)
  nameWithType.vb: RelationalEntityTypeBuilderExtensions.HasDiscriminator(Of TEntity, TDiscriminator)(Expression(Of Func(Of TEntity, TDiscriminator)))
  fullname.vb: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator(Of TEntity, TDiscriminator)(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, TDiscriminator)))
  name.vb: HasDiscriminator(Of TEntity, TDiscriminator)(Expression(Of Func(Of TEntity, TDiscriminator)))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})
    name: HasDiscriminator<TEntity, TDiscriminator>
    nameWithType: RelationalEntityTypeBuilderExtensions.HasDiscriminator<TEntity, TDiscriminator>
    fullName: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator<TEntity, TDiscriminator>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDiscriminator
    nameWithType: TDiscriminator
    fullName: TDiscriminator
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})
    name: HasDiscriminator(Of TEntity, TDiscriminator)
    nameWithType: RelationalEntityTypeBuilderExtensions.HasDiscriminator(Of TEntity, TDiscriminator)
    fullName: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator(Of TEntity, TDiscriminator)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDiscriminator
    nameWithType: TDiscriminator
    fullName: TDiscriminator
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: Microsoft.EntityFrameworkCore
  commentId: N:Microsoft.EntityFrameworkCore
  isExternal: false
  name: Microsoft.EntityFrameworkCore
  nameWithType: Microsoft.EntityFrameworkCore
  fullName: Microsoft.EntityFrameworkCore
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
  isExternal: false
  name: IInfrastructure<T>
  nameWithType: IInfrastructure<T>
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<T>
  nameWithType.vb: IInfrastructure(Of T)
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of T)
  name.vb: IInfrastructure(Of T)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure
  commentId: N:Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Infrastructure
  nameWithType: Microsoft.EntityFrameworkCore.Infrastructure
  fullName: Microsoft.EntityFrameworkCore.Infrastructure
- uid: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String)
  isExternal: true
  name: ForSqlServerToTable(EntityTypeBuilder, String)
  nameWithType: SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable(EntityTypeBuilder, String)
  fullName: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder, System.String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String)
    name: ForSqlServerToTable
    nameWithType: SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable
    fullName: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
    name: EntityTypeBuilder
    nameWithType: EntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String)
    name: ForSqlServerToTable
    nameWithType: SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable
    fullName: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
    name: EntityTypeBuilder
    nameWithType: EntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions
  commentId: T:Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions
  parent: Microsoft.EntityFrameworkCore
  isExternal: false
  name: SqlServerEntityTypeBuilderExtensions
  nameWithType: SqlServerEntityTypeBuilderExtensions
  fullName: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions
- uid: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable``1(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{``0},System.String)
  commentId: M:Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable``1(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{``0},System.String)
  isExternal: true
  name: ForSqlServerToTable<TEntity>(EntityTypeBuilder<TEntity>, String)
  nameWithType: SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable<TEntity>(EntityTypeBuilder<TEntity>, String)
  fullName: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable<TEntity>(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<TEntity>, System.String)
  nameWithType.vb: SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable(Of TEntity)(EntityTypeBuilder(Of TEntity), String)
  fullname.vb: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable(Of TEntity)(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of TEntity), System.String)
  name.vb: ForSqlServerToTable(Of TEntity)(EntityTypeBuilder(Of TEntity), String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable``1(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{``0},System.String)
    name: ForSqlServerToTable<TEntity>
    nameWithType: SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable<TEntity>
    fullName: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1
    name: EntityTypeBuilder
    nameWithType: EntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable``1(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{``0},System.String)
    name: ForSqlServerToTable(Of TEntity)
    nameWithType: SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1
    name: EntityTypeBuilder
    nameWithType: EntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String,System.String)
  isExternal: true
  name: ForSqlServerToTable(EntityTypeBuilder, String, String)
  nameWithType: SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable(EntityTypeBuilder, String, String)
  fullName: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String,System.String)
    name: ForSqlServerToTable
    nameWithType: SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable
    fullName: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
    name: EntityTypeBuilder
    nameWithType: EntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String,System.String)
    name: ForSqlServerToTable
    nameWithType: SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable
    fullName: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
    name: EntityTypeBuilder
    nameWithType: EntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable``1(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{``0},System.String,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable``1(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{``0},System.String,System.String)
  isExternal: true
  name: ForSqlServerToTable<TEntity>(EntityTypeBuilder<TEntity>, String, String)
  nameWithType: SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable<TEntity>(EntityTypeBuilder<TEntity>, String, String)
  fullName: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable<TEntity>(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<TEntity>, System.String, System.String)
  nameWithType.vb: SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable(Of TEntity)(EntityTypeBuilder(Of TEntity), String, String)
  fullname.vb: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable(Of TEntity)(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of TEntity), System.String, System.String)
  name.vb: ForSqlServerToTable(Of TEntity)(EntityTypeBuilder(Of TEntity), String, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable``1(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{``0},System.String,System.String)
    name: ForSqlServerToTable<TEntity>
    nameWithType: SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable<TEntity>
    fullName: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1
    name: EntityTypeBuilder
    nameWithType: EntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable``1(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{``0},System.String,System.String)
    name: ForSqlServerToTable(Of TEntity)
    nameWithType: SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerToTable(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1
    name: EntityTypeBuilder
    nameWithType: EntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerIsMemoryOptimized(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerIsMemoryOptimized(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.Boolean)
  isExternal: true
  name: ForSqlServerIsMemoryOptimized(EntityTypeBuilder, Boolean)
  nameWithType: SqlServerEntityTypeBuilderExtensions.ForSqlServerIsMemoryOptimized(EntityTypeBuilder, Boolean)
  fullName: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerIsMemoryOptimized(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder, System.Boolean)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerIsMemoryOptimized(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.Boolean)
    name: ForSqlServerIsMemoryOptimized
    nameWithType: SqlServerEntityTypeBuilderExtensions.ForSqlServerIsMemoryOptimized
    fullName: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerIsMemoryOptimized
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
    name: EntityTypeBuilder
    nameWithType: EntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerIsMemoryOptimized(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.Boolean)
    name: ForSqlServerIsMemoryOptimized
    nameWithType: SqlServerEntityTypeBuilderExtensions.ForSqlServerIsMemoryOptimized
    fullName: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerIsMemoryOptimized
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
    name: EntityTypeBuilder
    nameWithType: EntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerIsMemoryOptimized``1(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{``0},System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerIsMemoryOptimized``1(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{``0},System.Boolean)
  isExternal: true
  name: ForSqlServerIsMemoryOptimized<TEntity>(EntityTypeBuilder<TEntity>, Boolean)
  nameWithType: SqlServerEntityTypeBuilderExtensions.ForSqlServerIsMemoryOptimized<TEntity>(EntityTypeBuilder<TEntity>, Boolean)
  fullName: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerIsMemoryOptimized<TEntity>(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<TEntity>, System.Boolean)
  nameWithType.vb: SqlServerEntityTypeBuilderExtensions.ForSqlServerIsMemoryOptimized(Of TEntity)(EntityTypeBuilder(Of TEntity), Boolean)
  fullname.vb: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerIsMemoryOptimized(Of TEntity)(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of TEntity), System.Boolean)
  name.vb: ForSqlServerIsMemoryOptimized(Of TEntity)(EntityTypeBuilder(Of TEntity), Boolean)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerIsMemoryOptimized``1(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{``0},System.Boolean)
    name: ForSqlServerIsMemoryOptimized<TEntity>
    nameWithType: SqlServerEntityTypeBuilderExtensions.ForSqlServerIsMemoryOptimized<TEntity>
    fullName: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerIsMemoryOptimized<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1
    name: EntityTypeBuilder
    nameWithType: EntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerIsMemoryOptimized``1(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{``0},System.Boolean)
    name: ForSqlServerIsMemoryOptimized(Of TEntity)
    nameWithType: SqlServerEntityTypeBuilderExtensions.ForSqlServerIsMemoryOptimized(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.SqlServerEntityTypeBuilderExtensions.ForSqlServerIsMemoryOptimized(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1
    name: EntityTypeBuilder
    nameWithType: EntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.SqliteEntityTypeBuilderExtensions.ForSqliteToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.SqliteEntityTypeBuilderExtensions.ForSqliteToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String)
  isExternal: true
  name: ForSqliteToTable(EntityTypeBuilder, String)
  nameWithType: SqliteEntityTypeBuilderExtensions.ForSqliteToTable(EntityTypeBuilder, String)
  fullName: Microsoft.EntityFrameworkCore.SqliteEntityTypeBuilderExtensions.ForSqliteToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder, System.String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.SqliteEntityTypeBuilderExtensions.ForSqliteToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String)
    name: ForSqliteToTable
    nameWithType: SqliteEntityTypeBuilderExtensions.ForSqliteToTable
    fullName: Microsoft.EntityFrameworkCore.SqliteEntityTypeBuilderExtensions.ForSqliteToTable
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
    name: EntityTypeBuilder
    nameWithType: EntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.SqliteEntityTypeBuilderExtensions.ForSqliteToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String)
    name: ForSqliteToTable
    nameWithType: SqliteEntityTypeBuilderExtensions.ForSqliteToTable
    fullName: Microsoft.EntityFrameworkCore.SqliteEntityTypeBuilderExtensions.ForSqliteToTable
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
    name: EntityTypeBuilder
    nameWithType: EntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.SqliteEntityTypeBuilderExtensions
  commentId: T:Microsoft.EntityFrameworkCore.SqliteEntityTypeBuilderExtensions
  parent: Microsoft.EntityFrameworkCore
  isExternal: false
  name: SqliteEntityTypeBuilderExtensions
  nameWithType: SqliteEntityTypeBuilderExtensions
  fullName: Microsoft.EntityFrameworkCore.SqliteEntityTypeBuilderExtensions
- uid: Microsoft.EntityFrameworkCore.SqliteEntityTypeBuilderExtensions.ForSqliteToTable``1(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{``0},System.String)
  commentId: M:Microsoft.EntityFrameworkCore.SqliteEntityTypeBuilderExtensions.ForSqliteToTable``1(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{``0},System.String)
  isExternal: true
  name: ForSqliteToTable<TEntity>(EntityTypeBuilder<TEntity>, String)
  nameWithType: SqliteEntityTypeBuilderExtensions.ForSqliteToTable<TEntity>(EntityTypeBuilder<TEntity>, String)
  fullName: Microsoft.EntityFrameworkCore.SqliteEntityTypeBuilderExtensions.ForSqliteToTable<TEntity>(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<TEntity>, System.String)
  nameWithType.vb: SqliteEntityTypeBuilderExtensions.ForSqliteToTable(Of TEntity)(EntityTypeBuilder(Of TEntity), String)
  fullname.vb: Microsoft.EntityFrameworkCore.SqliteEntityTypeBuilderExtensions.ForSqliteToTable(Of TEntity)(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of TEntity), System.String)
  name.vb: ForSqliteToTable(Of TEntity)(EntityTypeBuilder(Of TEntity), String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.SqliteEntityTypeBuilderExtensions.ForSqliteToTable``1(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{``0},System.String)
    name: ForSqliteToTable<TEntity>
    nameWithType: SqliteEntityTypeBuilderExtensions.ForSqliteToTable<TEntity>
    fullName: Microsoft.EntityFrameworkCore.SqliteEntityTypeBuilderExtensions.ForSqliteToTable<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1
    name: EntityTypeBuilder
    nameWithType: EntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.SqliteEntityTypeBuilderExtensions.ForSqliteToTable``1(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{``0},System.String)
    name: ForSqliteToTable(Of TEntity)
    nameWithType: SqliteEntityTypeBuilderExtensions.ForSqliteToTable(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.SqliteEntityTypeBuilderExtensions.ForSqliteToTable(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1
    name: EntityTypeBuilder
    nameWithType: EntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String)
  isExternal: true
  name: ToTable(EntityTypeBuilder, String)
  nameWithType: RelationalEntityTypeBuilderExtensions.ToTable(EntityTypeBuilder, String)
  fullName: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder, System.String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String)
    name: ToTable
    nameWithType: RelationalEntityTypeBuilderExtensions.ToTable
    fullName: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
    name: EntityTypeBuilder
    nameWithType: EntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String)
    name: ToTable
    nameWithType: RelationalEntityTypeBuilderExtensions.ToTable
    fullName: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
    name: EntityTypeBuilder
    nameWithType: EntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions
  commentId: T:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions
  parent: Microsoft.EntityFrameworkCore
  isExternal: false
  name: RelationalEntityTypeBuilderExtensions
  nameWithType: RelationalEntityTypeBuilderExtensions
  fullName: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions
- uid: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable``1(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{``0},System.String)
  commentId: M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable``1(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{``0},System.String)
  isExternal: true
  name: ToTable<TEntity>(EntityTypeBuilder<TEntity>, String)
  nameWithType: RelationalEntityTypeBuilderExtensions.ToTable<TEntity>(EntityTypeBuilder<TEntity>, String)
  fullName: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable<TEntity>(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<TEntity>, System.String)
  nameWithType.vb: RelationalEntityTypeBuilderExtensions.ToTable(Of TEntity)(EntityTypeBuilder(Of TEntity), String)
  fullname.vb: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(Of TEntity)(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of TEntity), System.String)
  name.vb: ToTable(Of TEntity)(EntityTypeBuilder(Of TEntity), String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable``1(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{``0},System.String)
    name: ToTable<TEntity>
    nameWithType: RelationalEntityTypeBuilderExtensions.ToTable<TEntity>
    fullName: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1
    name: EntityTypeBuilder
    nameWithType: EntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable``1(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{``0},System.String)
    name: ToTable(Of TEntity)
    nameWithType: RelationalEntityTypeBuilderExtensions.ToTable(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1
    name: EntityTypeBuilder
    nameWithType: EntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String,System.String)
  isExternal: true
  name: ToTable(EntityTypeBuilder, String, String)
  nameWithType: RelationalEntityTypeBuilderExtensions.ToTable(EntityTypeBuilder, String, String)
  fullName: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String,System.String)
    name: ToTable
    nameWithType: RelationalEntityTypeBuilderExtensions.ToTable
    fullName: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
    name: EntityTypeBuilder
    nameWithType: EntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String,System.String)
    name: ToTable
    nameWithType: RelationalEntityTypeBuilderExtensions.ToTable
    fullName: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
    name: EntityTypeBuilder
    nameWithType: EntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable``1(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{``0},System.String,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable``1(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{``0},System.String,System.String)
  isExternal: true
  name: ToTable<TEntity>(EntityTypeBuilder<TEntity>, String, String)
  nameWithType: RelationalEntityTypeBuilderExtensions.ToTable<TEntity>(EntityTypeBuilder<TEntity>, String, String)
  fullName: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable<TEntity>(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<TEntity>, System.String, System.String)
  nameWithType.vb: RelationalEntityTypeBuilderExtensions.ToTable(Of TEntity)(EntityTypeBuilder(Of TEntity), String, String)
  fullname.vb: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(Of TEntity)(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of TEntity), System.String, System.String)
  name.vb: ToTable(Of TEntity)(EntityTypeBuilder(Of TEntity), String, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable``1(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{``0},System.String,System.String)
    name: ToTable<TEntity>
    nameWithType: RelationalEntityTypeBuilderExtensions.ToTable<TEntity>
    fullName: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1
    name: EntityTypeBuilder
    nameWithType: EntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable``1(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{``0},System.String,System.String)
    name: ToTable(Of TEntity)
    nameWithType: RelationalEntityTypeBuilderExtensions.ToTable(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1
    name: EntityTypeBuilder
    nameWithType: EntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder)
  commentId: M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder)
  isExternal: false
  name: HasDiscriminator(EntityTypeBuilder)
  nameWithType: RelationalEntityTypeBuilderExtensions.HasDiscriminator(EntityTypeBuilder)
  fullName: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder)
    name: HasDiscriminator
    nameWithType: RelationalEntityTypeBuilderExtensions.HasDiscriminator
    fullName: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
    name: EntityTypeBuilder
    nameWithType: EntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder)
    name: HasDiscriminator
    nameWithType: RelationalEntityTypeBuilderExtensions.HasDiscriminator
    fullName: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
    name: EntityTypeBuilder
    nameWithType: EntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String,System.Type)
  commentId: M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String,System.Type)
  isExternal: true
  name: HasDiscriminator(EntityTypeBuilder, String, Type)
  nameWithType: RelationalEntityTypeBuilderExtensions.HasDiscriminator(EntityTypeBuilder, String, Type)
  fullName: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder, System.String, System.Type)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String,System.Type)
    name: HasDiscriminator
    nameWithType: RelationalEntityTypeBuilderExtensions.HasDiscriminator
    fullName: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
    name: EntityTypeBuilder
    nameWithType: EntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String,System.Type)
    name: HasDiscriminator
    nameWithType: RelationalEntityTypeBuilderExtensions.HasDiscriminator
    fullName: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
    name: EntityTypeBuilder
    nameWithType: EntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator``1(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator``1(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String)
  isExternal: true
  name: HasDiscriminator<TDiscriminator>(EntityTypeBuilder, String)
  nameWithType: RelationalEntityTypeBuilderExtensions.HasDiscriminator<TDiscriminator>(EntityTypeBuilder, String)
  fullName: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator<TDiscriminator>(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder, System.String)
  nameWithType.vb: RelationalEntityTypeBuilderExtensions.HasDiscriminator(Of TDiscriminator)(EntityTypeBuilder, String)
  fullname.vb: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator(Of TDiscriminator)(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder, System.String)
  name.vb: HasDiscriminator(Of TDiscriminator)(EntityTypeBuilder, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator``1(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String)
    name: HasDiscriminator<TDiscriminator>
    nameWithType: RelationalEntityTypeBuilderExtensions.HasDiscriminator<TDiscriminator>
    fullName: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator<TDiscriminator>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
    name: EntityTypeBuilder
    nameWithType: EntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator``1(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String)
    name: HasDiscriminator(Of TDiscriminator)
    nameWithType: RelationalEntityTypeBuilderExtensions.HasDiscriminator(Of TDiscriminator)
    fullName: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator(Of TDiscriminator)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
    name: EntityTypeBuilder
    nameWithType: EntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator``2(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  commentId: M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator``2(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  isExternal: true
  name: HasDiscriminator<TEntity, TDiscriminator>(EntityTypeBuilder<TEntity>, Expression<Func<TEntity, TDiscriminator>>)
  nameWithType: RelationalEntityTypeBuilderExtensions.HasDiscriminator<TEntity, TDiscriminator>(EntityTypeBuilder<TEntity>, Expression<Func<TEntity, TDiscriminator>>)
  fullName: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator<TEntity, TDiscriminator>(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<TEntity>, System.Linq.Expressions.Expression<System.Func<TEntity, TDiscriminator>>)
  nameWithType.vb: RelationalEntityTypeBuilderExtensions.HasDiscriminator(Of TEntity, TDiscriminator)(EntityTypeBuilder(Of TEntity), Expression(Of Func(Of TEntity, TDiscriminator)))
  fullname.vb: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator(Of TEntity, TDiscriminator)(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of TEntity), System.Linq.Expressions.Expression(Of System.Func(Of TEntity, TDiscriminator)))
  name.vb: HasDiscriminator(Of TEntity, TDiscriminator)(EntityTypeBuilder(Of TEntity), Expression(Of Func(Of TEntity, TDiscriminator)))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator``2(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
    name: HasDiscriminator<TEntity, TDiscriminator>
    nameWithType: RelationalEntityTypeBuilderExtensions.HasDiscriminator<TEntity, TDiscriminator>
    fullName: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator<TEntity, TDiscriminator>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1
    name: EntityTypeBuilder
    nameWithType: EntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDiscriminator
    nameWithType: TDiscriminator
    fullName: TDiscriminator
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator``2(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
    name: HasDiscriminator(Of TEntity, TDiscriminator)
    nameWithType: RelationalEntityTypeBuilderExtensions.HasDiscriminator(Of TEntity, TDiscriminator)
    fullName: Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator(Of TEntity, TDiscriminator)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1
    name: EntityTypeBuilder
    nameWithType: EntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDiscriminator
    nameWithType: TDiscriminator
    fullName: TDiscriminator
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.#ctor*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.#ctor
  isExternal: false
  name: EntityTypeBuilder
  nameWithType: EntityTypeBuilder<TEntity>.EntityTypeBuilder
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<TEntity>.EntityTypeBuilder
  nameWithType.vb: EntityTypeBuilder(Of TEntity).EntityTypeBuilder
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of TEntity).EntityTypeBuilder
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: InternalEntityTypeBuilder
  nameWithType: InternalEntityTypeBuilder
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders
  isExternal: false
  name: EntityTypeBuilder<TEntity>
  nameWithType: EntityTypeBuilder<TEntity>
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<TEntity>
  nameWithType.vb: EntityTypeBuilder(Of TEntity)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of TEntity)
  name.vb: EntityTypeBuilder(Of TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1
    name: EntityTypeBuilder
    nameWithType: EntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1
    name: EntityTypeBuilder
    nameWithType: EntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.New(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.New(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder)
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
  isExternal: false
  name: New(InternalEntityTypeBuilder)
  nameWithType: EntityTypeBuilder.New(InternalEntityTypeBuilder)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.New(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.New(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder)
    name: New
    nameWithType: EntityTypeBuilder.New
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.New
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
    name: InternalEntityTypeBuilder
    nameWithType: InternalEntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.New(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder)
    name: New
    nameWithType: EntityTypeBuilder.New
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.New
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
    name: InternalEntityTypeBuilder
    nameWithType: InternalEntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.New*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.New
  isExternal: false
  name: New
  nameWithType: EntityTypeBuilder<TEntity>.New
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<TEntity>.New
  nameWithType.vb: EntityTypeBuilder(Of TEntity).New
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of TEntity).New
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.HasAnnotation*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.HasAnnotation
  isExternal: false
  name: HasAnnotation
  nameWithType: EntityTypeBuilder<TEntity>.HasAnnotation
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<TEntity>.HasAnnotation
  nameWithType.vb: EntityTypeBuilder(Of TEntity).HasAnnotation
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of TEntity).HasAnnotation
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.HasBaseType*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.HasBaseType
  isExternal: false
  name: HasBaseType
  nameWithType: EntityTypeBuilder<TEntity>.HasBaseType
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<TEntity>.HasBaseType
  nameWithType.vb: EntityTypeBuilder(Of TEntity).HasBaseType
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of TEntity).HasBaseType
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.HasKey*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.HasKey
  isExternal: false
  name: HasKey
  nameWithType: EntityTypeBuilder<TEntity>.HasKey
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<TEntity>.HasKey
  nameWithType.vb: EntityTypeBuilder(Of TEntity).HasKey
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of TEntity).HasKey
- uid: System.Linq.Expressions.Expression{System.Func{{TEntity},System.Object}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{`0,System.Object}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  name: Expression<Func<TEntity, Object>>
  nameWithType: Expression<Func<TEntity, Object>>
  fullName: System.Linq.Expressions.Expression<System.Func<TEntity, System.Object>>
  nameWithType.vb: Expression(Of Func(Of TEntity, Object))
  fullname.vb: System.Linq.Expressions.Expression(Of System.Func(Of TEntity, System.Object))
  name.vb: Expression(Of Func(Of TEntity, Object))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders
  isExternal: false
  name: KeyBuilder
  nameWithType: KeyBuilder
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder
- uid: System.Linq.Expressions.Expression`1
  commentId: T:System.Linq.Expressions.Expression`1
  isExternal: true
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
  nameWithType.vb: Expression(Of TDelegate)
  fullname.vb: System.Linq.Expressions.Expression(Of TDelegate)
  name.vb: Expression(Of TDelegate)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TDelegate
    nameWithType: TDelegate
    fullName: TDelegate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDelegate
    nameWithType: TDelegate
    fullName: TDelegate
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: false
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.HasAlternateKey*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.HasAlternateKey
  isExternal: false
  name: HasAlternateKey
  nameWithType: EntityTypeBuilder<TEntity>.HasAlternateKey
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<TEntity>.HasAlternateKey
  nameWithType.vb: EntityTypeBuilder(Of TEntity).HasAlternateKey
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of TEntity).HasAlternateKey
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.Property*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.Property
  isExternal: false
  name: Property<TProperty>
  nameWithType: EntityTypeBuilder<TEntity>.Property<TProperty>
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<TEntity>.Property<TProperty>
  nameWithType.vb: EntityTypeBuilder(Of TEntity).Property(Of TProperty)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of TEntity).Property(Of TProperty)
  name.vb: Property(Of TProperty)
- uid: System.Linq.Expressions.Expression{System.Func{{TEntity},{TProperty}}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{``0,``1}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  name: Expression<Func<TEntity, TProperty>>
  nameWithType: Expression<Func<TEntity, TProperty>>
  fullName: System.Linq.Expressions.Expression<System.Func<TEntity, TProperty>>
  nameWithType.vb: Expression(Of Func(Of TEntity, TProperty))
  fullname.vb: System.Linq.Expressions.Expression(Of System.Func(Of TEntity, TProperty))
  name.vb: Expression(Of Func(Of TEntity, TProperty))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProperty
    nameWithType: TProperty
    fullName: TProperty
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProperty
    nameWithType: TProperty
    fullName: TProperty
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{{TProperty}}
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{``0}
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders
  definition: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder`1
  name: PropertyBuilder<TProperty>
  nameWithType: PropertyBuilder<TProperty>
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder<TProperty>
  nameWithType.vb: PropertyBuilder(Of TProperty)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder(Of TProperty)
  name.vb: PropertyBuilder(Of TProperty)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder`1
    name: PropertyBuilder
    nameWithType: PropertyBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: TProperty
    nameWithType: TProperty
    fullName: TProperty
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder`1
    name: PropertyBuilder
    nameWithType: PropertyBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TProperty
    nameWithType: TProperty
    fullName: TProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder`1
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder`1
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders
  isExternal: false
  name: PropertyBuilder<TProperty>
  nameWithType: PropertyBuilder<TProperty>
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder<TProperty>
  nameWithType.vb: PropertyBuilder(Of TProperty)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder(Of TProperty)
  name.vb: PropertyBuilder(Of TProperty)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder`1
    name: PropertyBuilder
    nameWithType: PropertyBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: TProperty
    nameWithType: TProperty
    fullName: TProperty
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder`1
    name: PropertyBuilder
    nameWithType: PropertyBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TProperty
    nameWithType: TProperty
    fullName: TProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.Ignore*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.Ignore
  isExternal: false
  name: Ignore
  nameWithType: EntityTypeBuilder<TEntity>.Ignore
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<TEntity>.Ignore
  nameWithType.vb: EntityTypeBuilder(Of TEntity).Ignore
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of TEntity).Ignore
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.HasIndex*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.HasIndex
  isExternal: false
  name: HasIndex
  nameWithType: EntityTypeBuilder<TEntity>.HasIndex
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<TEntity>.HasIndex
  nameWithType.vb: EntityTypeBuilder(Of TEntity).HasIndex
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of TEntity).HasIndex
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders
  isExternal: false
  name: IndexBuilder
  nameWithType: IndexBuilder
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder`2.WithMany(System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.IEnumerable{`0}}})
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder`2.WithMany(System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.IEnumerable{`0}}})
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder`2.WithOne(System.Linq.Expressions.Expression{System.Func{`1,`0}})
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder`2.WithOne(System.Linq.Expressions.Expression{System.Func{`1,`0}})
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.HasOne*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.HasOne
  isExternal: false
  name: HasOne<TRelatedEntity>
  nameWithType: EntityTypeBuilder<TEntity>.HasOne<TRelatedEntity>
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<TEntity>.HasOne<TRelatedEntity>
  nameWithType.vb: EntityTypeBuilder(Of TEntity).HasOne(Of TRelatedEntity)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of TEntity).HasOne(Of TRelatedEntity)
  name.vb: HasOne(Of TRelatedEntity)
- uid: System.Linq.Expressions.Expression{System.Func{{TEntity},{TRelatedEntity}}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{`0,``0}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  name: Expression<Func<TEntity, TRelatedEntity>>
  nameWithType: Expression<Func<TEntity, TRelatedEntity>>
  fullName: System.Linq.Expressions.Expression<System.Func<TEntity, TRelatedEntity>>
  nameWithType.vb: Expression(Of Func(Of TEntity, TRelatedEntity))
  fullname.vb: System.Linq.Expressions.Expression(Of System.Func(Of TEntity, TRelatedEntity))
  name.vb: Expression(Of Func(Of TEntity, TRelatedEntity))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRelatedEntity
    nameWithType: TRelatedEntity
    fullName: TRelatedEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRelatedEntity
    nameWithType: TRelatedEntity
    fullName: TRelatedEntity
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder{{TEntity},{TRelatedEntity}}
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder{`0,``0}
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders
  definition: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder`2
  name: ReferenceNavigationBuilder<TEntity, TRelatedEntity>
  nameWithType: ReferenceNavigationBuilder<TEntity, TRelatedEntity>
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder<TEntity, TRelatedEntity>
  nameWithType.vb: ReferenceNavigationBuilder(Of TEntity, TRelatedEntity)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder(Of TEntity, TRelatedEntity)
  name.vb: ReferenceNavigationBuilder(Of TEntity, TRelatedEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder`2
    name: ReferenceNavigationBuilder
    nameWithType: ReferenceNavigationBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRelatedEntity
    nameWithType: TRelatedEntity
    fullName: TRelatedEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder`2
    name: ReferenceNavigationBuilder
    nameWithType: ReferenceNavigationBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRelatedEntity
    nameWithType: TRelatedEntity
    fullName: TRelatedEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder`2
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder`2
  isExternal: false
  name: ReferenceNavigationBuilder<TEntity, TRelatedEntity>
  nameWithType: ReferenceNavigationBuilder<TEntity, TRelatedEntity>
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder<TEntity, TRelatedEntity>
  nameWithType.vb: ReferenceNavigationBuilder(Of TEntity, TRelatedEntity)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder(Of TEntity, TRelatedEntity)
  name.vb: ReferenceNavigationBuilder(Of TEntity, TRelatedEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder`2
    name: ReferenceNavigationBuilder
    nameWithType: ReferenceNavigationBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRelatedEntity
    nameWithType: TRelatedEntity
    fullName: TRelatedEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder`2
    name: ReferenceNavigationBuilder
    nameWithType: ReferenceNavigationBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRelatedEntity
    nameWithType: TRelatedEntity
    fullName: TRelatedEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder`2.WithOne(System.Linq.Expressions.Expression{System.Func{`1,`0}})
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder`2.WithOne(System.Linq.Expressions.Expression{System.Func{`1,`0}})
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.HasMany*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.HasMany
  isExternal: false
  name: HasMany<TRelatedEntity>
  nameWithType: EntityTypeBuilder<TEntity>.HasMany<TRelatedEntity>
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<TEntity>.HasMany<TRelatedEntity>
  nameWithType.vb: EntityTypeBuilder(Of TEntity).HasMany(Of TRelatedEntity)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of TEntity).HasMany(Of TRelatedEntity)
  name.vb: HasMany(Of TRelatedEntity)
- uid: System.Linq.Expressions.Expression{System.Func{{TEntity},System.Collections.Generic.IEnumerable{{TRelatedEntity}}}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  name: Expression<Func<TEntity, IEnumerable<TRelatedEntity>>>
  nameWithType: Expression<Func<TEntity, IEnumerable<TRelatedEntity>>>
  fullName: System.Linq.Expressions.Expression<System.Func<TEntity, System.Collections.Generic.IEnumerable<TRelatedEntity>>>
  nameWithType.vb: Expression(Of Func(Of TEntity, IEnumerable(Of TRelatedEntity)))
  fullname.vb: System.Linq.Expressions.Expression(Of System.Func(Of TEntity, System.Collections.Generic.IEnumerable(Of TRelatedEntity)))
  name.vb: Expression(Of Func(Of TEntity, IEnumerable(Of TRelatedEntity)))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRelatedEntity
    nameWithType: TRelatedEntity
    fullName: TRelatedEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRelatedEntity
    nameWithType: TRelatedEntity
    fullName: TRelatedEntity
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder{{TEntity},{TRelatedEntity}}
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder{`0,``0}
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders
  definition: Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder`2
  name: CollectionNavigationBuilder<TEntity, TRelatedEntity>
  nameWithType: CollectionNavigationBuilder<TEntity, TRelatedEntity>
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder<TEntity, TRelatedEntity>
  nameWithType.vb: CollectionNavigationBuilder(Of TEntity, TRelatedEntity)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder(Of TEntity, TRelatedEntity)
  name.vb: CollectionNavigationBuilder(Of TEntity, TRelatedEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder`2
    name: CollectionNavigationBuilder
    nameWithType: CollectionNavigationBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRelatedEntity
    nameWithType: TRelatedEntity
    fullName: TRelatedEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder`2
    name: CollectionNavigationBuilder
    nameWithType: CollectionNavigationBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRelatedEntity
    nameWithType: TRelatedEntity
    fullName: TRelatedEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder`2
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder`2
  isExternal: false
  name: CollectionNavigationBuilder<TEntity, TRelatedEntity>
  nameWithType: CollectionNavigationBuilder<TEntity, TRelatedEntity>
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder<TEntity, TRelatedEntity>
  nameWithType.vb: CollectionNavigationBuilder(Of TEntity, TRelatedEntity)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder(Of TEntity, TRelatedEntity)
  name.vb: CollectionNavigationBuilder(Of TEntity, TRelatedEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder`2
    name: CollectionNavigationBuilder
    nameWithType: CollectionNavigationBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRelatedEntity
    nameWithType: TRelatedEntity
    fullName: TRelatedEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder`2
    name: CollectionNavigationBuilder
    nameWithType: CollectionNavigationBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRelatedEntity
    nameWithType: TRelatedEntity
    fullName: TRelatedEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.ChangeTrackingStrategy
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.ChangeTrackingStrategy
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: ChangeTrackingStrategy
  nameWithType: ChangeTrackingStrategy
  fullName: Microsoft.EntityFrameworkCore.Metadata.ChangeTrackingStrategy
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.HasChangeTrackingStrategy*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.HasChangeTrackingStrategy
  isExternal: false
  name: HasChangeTrackingStrategy
  nameWithType: EntityTypeBuilder<TEntity>.HasChangeTrackingStrategy
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<TEntity>.HasChangeTrackingStrategy
  nameWithType.vb: EntityTypeBuilder(Of TEntity).HasChangeTrackingStrategy
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of TEntity).HasChangeTrackingStrategy
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: PropertyAccessMode
  nameWithType: PropertyAccessMode
  fullName: Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.UsePropertyAccessMode*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.UsePropertyAccessMode
  isExternal: false
  name: UsePropertyAccessMode
  nameWithType: EntityTypeBuilder<TEntity>.UsePropertyAccessMode
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<TEntity>.UsePropertyAccessMode
  nameWithType.vb: EntityTypeBuilder(Of TEntity).UsePropertyAccessMode
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of TEntity).UsePropertyAccessMode
