### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.City
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.City
  id: City
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel
  children:
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.City.BornGears
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.City.Location
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.City.Name
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.City.StationedGears
  langs:
  - csharp
  - vb
  name: City
  nameWithType: City
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.City
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/GearsOfWarModel/City.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: City
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/GearsOfWarModel/City.cs
    startLine: 7
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel
  syntax:
    content: public class City
    content.vb: Public Class City
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.City.Name
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.City.Name
  id: Name
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.City
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: City.Name
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.City.Name
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/GearsOfWarModel/City.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Name
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/GearsOfWarModel/City.cs
    startLine: 10
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel
  syntax:
    content: public string Name { get; set; }
    content.vb: Public Property Name As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.City.Location
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.City.Location
  id: Location
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.City
  langs:
  - csharp
  - vb
  name: Location
  nameWithType: City.Location
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.City.Location
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/GearsOfWarModel/City.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Location
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/GearsOfWarModel/City.cs
    startLine: 11
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel
  syntax:
    content: public string Location { get; set; }
    content.vb: Public Property Location As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.City.BornGears
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.City.BornGears
  id: BornGears
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.City
  langs:
  - csharp
  - vb
  name: BornGears
  nameWithType: City.BornGears
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.City.BornGears
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/GearsOfWarModel/City.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: BornGears
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/GearsOfWarModel/City.cs
    startLine: 13
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel
  syntax:
    content: public List<Gear> BornGears { get; set; }
    content.vb: Public Property BornGears As List(Of Gear)
    parameters: []
    return:
      type: System.Collections.Generic.List{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.Gear}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.City.StationedGears
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.City.StationedGears
  id: StationedGears
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.City
  langs:
  - csharp
  - vb
  name: StationedGears
  nameWithType: City.StationedGears
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.City.StationedGears
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/GearsOfWarModel/City.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: StationedGears
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/GearsOfWarModel/City.cs
    startLine: 14
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel
  syntax:
    content: public List<Gear> StationedGears { get; set; }
    content.vb: Public Property StationedGears As List(Of Gear)
    parameters: []
    return:
      type: System.Collections.Generic.List{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.Gear}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel
  commentId: N:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel
  nameWithType: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.List{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.Gear}
  commentId: T:System.Collections.Generic.List{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.Gear}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Gear>
  nameWithType: List<Gear>
  fullName: System.Collections.Generic.List<Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.Gear>
  nameWithType.vb: List(Of Gear)
  fullname.vb: System.Collections.Generic.List(Of Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.Gear)
  name.vb: List(Of Gear)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.Gear
    name: Gear
    nameWithType: Gear
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.Gear
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.Gear
    name: Gear
    nameWithType: Gear
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.Gear
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullname.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
