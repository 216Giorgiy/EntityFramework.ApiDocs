### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Query.Internal.IShaperCommandContextFactory
  commentId: T:Microsoft.EntityFrameworkCore.Query.Internal.IShaperCommandContextFactory
  id: IShaperCommandContextFactory
  parent: Microsoft.EntityFrameworkCore.Query.Internal
  children:
  - Microsoft.EntityFrameworkCore.Query.Internal.IShaperCommandContextFactory.Create(System.Func{Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator})
  langs:
  - csharp
  - vb
  name: IShaperCommandContextFactory
  nameWithType: IShaperCommandContextFactory
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.IShaperCommandContextFactory
  type: Interface
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/Internal/IShaperCommandContextFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: IShaperCommandContextFactory
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/Internal/IShaperCommandContextFactory.cs
    startLine: 13
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public interface IShaperCommandContextFactory
    content.vb: Public Interface IShaperCommandContextFactory
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Query.Internal.IShaperCommandContextFactory.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.EntityFrameworkCore.Query.Internal.IShaperCommandContextFactory.Create(System.Func{Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator})
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.IShaperCommandContextFactory.Create(System.Func{Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator})
  id: Create(System.Func{Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator})
  parent: Microsoft.EntityFrameworkCore.Query.Internal.IShaperCommandContextFactory
  langs:
  - csharp
  - vb
  name: Create(Func<IQuerySqlGenerator>)
  nameWithType: IShaperCommandContextFactory.Create(Func<IQuerySqlGenerator>)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.IShaperCommandContextFactory.Create(System.Func<Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/Internal/IShaperCommandContextFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Create
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/Internal/IShaperCommandContextFactory.cs
    startLine: 19
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: ShaperCommandContext Create(Func<IQuerySqlGenerator> sqlGeneratorFunc)
    content.vb: Function Create(sqlGeneratorFunc As Func(Of IQuerySqlGenerator)) As ShaperCommandContext
    parameters:
    - id: sqlGeneratorFunc
      type: System.Func{Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator}
    return:
      type: Microsoft.EntityFrameworkCore.Query.Internal.ShaperCommandContext
  nameWithType.vb: IShaperCommandContextFactory.Create(Func(Of IQuerySqlGenerator))
  fullName.vb: Microsoft.EntityFrameworkCore.Query.Internal.IShaperCommandContextFactory.Create(System.Func(Of Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator))
  name.vb: Create(Func(Of IQuerySqlGenerator))
references:
- uid: Microsoft.EntityFrameworkCore.Query.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Query.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Query.Internal
  fullName: Microsoft.EntityFrameworkCore.Query.Internal
- uid: Microsoft.EntityFrameworkCore.Query.Internal.IShaperCommandContextFactory.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<IShaperCommandContextFactory, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<IShaperCommandContextFactory, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Query.Internal.IShaperCommandContextFactory, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of IShaperCommandContextFactory, TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Query.Internal.IShaperCommandContextFactory, TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of IShaperCommandContextFactory, TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<IShaperCommandContextFactory, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<IShaperCommandContextFactory, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Query.Internal.IShaperCommandContextFactory, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of IShaperCommandContextFactory, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of IShaperCommandContextFactory, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Query.Internal.IShaperCommandContextFactory, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: System.Func{Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator}
  commentId: T:System.Func{Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator}
  parent: System
  definition: System.Func`1
  name: Func<IQuerySqlGenerator>
  nameWithType: Func<IQuerySqlGenerator>
  fullName: System.Func<Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator>
  nameWithType.vb: Func(Of IQuerySqlGenerator)
  fullname.vb: System.Func(Of Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator)
  name.vb: Func(Of IQuerySqlGenerator)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator
    name: IQuerySqlGenerator
    nameWithType: IQuerySqlGenerator
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator
    name: IQuerySqlGenerator
    nameWithType: IQuerySqlGenerator
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ShaperCommandContext
  commentId: T:Microsoft.EntityFrameworkCore.Query.Internal.ShaperCommandContext
  parent: Microsoft.EntityFrameworkCore.Query.Internal
  isExternal: false
  name: ShaperCommandContext
  nameWithType: ShaperCommandContext
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ShaperCommandContext
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullname.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
