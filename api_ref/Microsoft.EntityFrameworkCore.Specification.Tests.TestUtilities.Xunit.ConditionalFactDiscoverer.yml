### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFactDiscoverer
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFactDiscoverer
  id: ConditionalFactDiscoverer
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit
  children:
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFactDiscoverer.#ctor(Xunit.Abstractions.IMessageSink)
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFactDiscoverer.CreateTestCase(Xunit.Abstractions.ITestFrameworkDiscoveryOptions,Xunit.Abstractions.ITestMethod,Xunit.Abstractions.IAttributeInfo)
  langs:
  - csharp
  - vb
  name: ConditionalFactDiscoverer
  nameWithType: ConditionalFactDiscoverer
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFactDiscoverer
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestUtilities/Xunit/ConditionalFactDiscoverer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ConditionalFactDiscoverer
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestUtilities/Xunit/ConditionalFactDiscoverer.cs
    startLine: 8
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit
  syntax:
    content: 'public class ConditionalFactDiscoverer : FactDiscoverer, IXunitTestCaseDiscoverer'
    content.vb: >-
      Public Class ConditionalFactDiscoverer
          Inherits FactDiscoverer
          Implements IXunitTestCaseDiscoverer
  inheritance:
  - System.Object
  - Xunit.Sdk.FactDiscoverer
  implements:
  - Xunit.Sdk.IXunitTestCaseDiscoverer
  inheritedMembers:
  - Xunit.Sdk.FactDiscoverer.Discover(Xunit.Abstractions.ITestFrameworkDiscoveryOptions,Xunit.Abstractions.ITestMethod,Xunit.Abstractions.IAttributeInfo)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFactDiscoverer.#ctor(Xunit.Abstractions.IMessageSink)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFactDiscoverer.#ctor(Xunit.Abstractions.IMessageSink)
  id: '#ctor(Xunit.Abstractions.IMessageSink)'
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFactDiscoverer
  langs:
  - csharp
  - vb
  name: ConditionalFactDiscoverer(IMessageSink)
  nameWithType: ConditionalFactDiscoverer.ConditionalFactDiscoverer(IMessageSink)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFactDiscoverer.ConditionalFactDiscoverer(Xunit.Abstractions.IMessageSink)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestUtilities/Xunit/ConditionalFactDiscoverer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestUtilities/Xunit/ConditionalFactDiscoverer.cs
    startLine: 12
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit
  syntax:
    content: public ConditionalFactDiscoverer(IMessageSink diagnosticMessageSink)
    content.vb: Public Sub New(diagnosticMessageSink As IMessageSink)
    parameters:
    - id: diagnosticMessageSink
      type: Xunit.Abstractions.IMessageSink
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFactDiscoverer.CreateTestCase(Xunit.Abstractions.ITestFrameworkDiscoveryOptions,Xunit.Abstractions.ITestMethod,Xunit.Abstractions.IAttributeInfo)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFactDiscoverer.CreateTestCase(Xunit.Abstractions.ITestFrameworkDiscoveryOptions,Xunit.Abstractions.ITestMethod,Xunit.Abstractions.IAttributeInfo)
  id: CreateTestCase(Xunit.Abstractions.ITestFrameworkDiscoveryOptions,Xunit.Abstractions.ITestMethod,Xunit.Abstractions.IAttributeInfo)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFactDiscoverer
  langs:
  - csharp
  - vb
  name: CreateTestCase(ITestFrameworkDiscoveryOptions, ITestMethod, IAttributeInfo)
  nameWithType: ConditionalFactDiscoverer.CreateTestCase(ITestFrameworkDiscoveryOptions, ITestMethod, IAttributeInfo)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalFactDiscoverer.CreateTestCase(Xunit.Abstractions.ITestFrameworkDiscoveryOptions, Xunit.Abstractions.ITestMethod, Xunit.Abstractions.IAttributeInfo)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestUtilities/Xunit/ConditionalFactDiscoverer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateTestCase
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestUtilities/Xunit/ConditionalFactDiscoverer.cs
    startLine: 18
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit
  syntax:
    content: protected override IXunitTestCase CreateTestCase(ITestFrameworkDiscoveryOptions discoveryOptions, ITestMethod testMethod, IAttributeInfo theoryAttribute)
    content.vb: Protected Overrides Function CreateTestCase(discoveryOptions As ITestFrameworkDiscoveryOptions, testMethod As ITestMethod, theoryAttribute As IAttributeInfo) As IXunitTestCase
    parameters:
    - id: discoveryOptions
      type: Xunit.Abstractions.ITestFrameworkDiscoveryOptions
    - id: testMethod
      type: Xunit.Abstractions.ITestMethod
    - id: theoryAttribute
      type: Xunit.Abstractions.IAttributeInfo
    return:
      type: Xunit.Sdk.IXunitTestCase
  overridden: Xunit.Sdk.FactDiscoverer.CreateTestCase(Xunit.Abstractions.ITestFrameworkDiscoveryOptions,Xunit.Abstractions.ITestMethod,Xunit.Abstractions.IAttributeInfo)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit
  commentId: N:Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit
  nameWithType: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Xunit.Sdk.FactDiscoverer
  commentId: T:Xunit.Sdk.FactDiscoverer
  parent: Xunit.Sdk
  isExternal: true
  name: FactDiscoverer
  nameWithType: FactDiscoverer
  fullName: Xunit.Sdk.FactDiscoverer
- uid: Xunit.Sdk.IXunitTestCaseDiscoverer
  commentId: T:Xunit.Sdk.IXunitTestCaseDiscoverer
  parent: Xunit.Sdk
  isExternal: true
  name: IXunitTestCaseDiscoverer
  nameWithType: IXunitTestCaseDiscoverer
  fullName: Xunit.Sdk.IXunitTestCaseDiscoverer
- uid: Xunit.Sdk.FactDiscoverer.Discover(Xunit.Abstractions.ITestFrameworkDiscoveryOptions,Xunit.Abstractions.ITestMethod,Xunit.Abstractions.IAttributeInfo)
  commentId: M:Xunit.Sdk.FactDiscoverer.Discover(Xunit.Abstractions.ITestFrameworkDiscoveryOptions,Xunit.Abstractions.ITestMethod,Xunit.Abstractions.IAttributeInfo)
  parent: Xunit.Sdk.FactDiscoverer
  isExternal: true
  name: Discover(ITestFrameworkDiscoveryOptions, ITestMethod, IAttributeInfo)
  nameWithType: FactDiscoverer.Discover(ITestFrameworkDiscoveryOptions, ITestMethod, IAttributeInfo)
  fullName: Xunit.Sdk.FactDiscoverer.Discover(Xunit.Abstractions.ITestFrameworkDiscoveryOptions, Xunit.Abstractions.ITestMethod, Xunit.Abstractions.IAttributeInfo)
  spec.csharp:
  - uid: Xunit.Sdk.FactDiscoverer.Discover(Xunit.Abstractions.ITestFrameworkDiscoveryOptions,Xunit.Abstractions.ITestMethod,Xunit.Abstractions.IAttributeInfo)
    name: Discover
    nameWithType: FactDiscoverer.Discover
    fullName: Xunit.Sdk.FactDiscoverer.Discover
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Xunit.Abstractions.ITestFrameworkDiscoveryOptions
    name: ITestFrameworkDiscoveryOptions
    nameWithType: ITestFrameworkDiscoveryOptions
    fullName: Xunit.Abstractions.ITestFrameworkDiscoveryOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Xunit.Abstractions.ITestMethod
    name: ITestMethod
    nameWithType: ITestMethod
    fullName: Xunit.Abstractions.ITestMethod
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Xunit.Abstractions.IAttributeInfo
    name: IAttributeInfo
    nameWithType: IAttributeInfo
    fullName: Xunit.Abstractions.IAttributeInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Xunit.Sdk.FactDiscoverer.Discover(Xunit.Abstractions.ITestFrameworkDiscoveryOptions,Xunit.Abstractions.ITestMethod,Xunit.Abstractions.IAttributeInfo)
    name: Discover
    nameWithType: FactDiscoverer.Discover
    fullName: Xunit.Sdk.FactDiscoverer.Discover
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Xunit.Abstractions.ITestFrameworkDiscoveryOptions
    name: ITestFrameworkDiscoveryOptions
    nameWithType: ITestFrameworkDiscoveryOptions
    fullName: Xunit.Abstractions.ITestFrameworkDiscoveryOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Xunit.Abstractions.ITestMethod
    name: ITestMethod
    nameWithType: ITestMethod
    fullName: Xunit.Abstractions.ITestMethod
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Xunit.Abstractions.IAttributeInfo
    name: IAttributeInfo
    nameWithType: IAttributeInfo
    fullName: Xunit.Abstractions.IAttributeInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Xunit.Sdk
  commentId: N:Xunit.Sdk
  isExternal: false
  name: Xunit.Sdk
  nameWithType: Xunit.Sdk
  fullName: Xunit.Sdk
- uid: Xunit.Abstractions.IMessageSink
  commentId: T:Xunit.Abstractions.IMessageSink
  parent: Xunit.Abstractions
  isExternal: true
  name: IMessageSink
  nameWithType: IMessageSink
  fullName: Xunit.Abstractions.IMessageSink
- uid: Xunit.Abstractions
  commentId: N:Xunit.Abstractions
  isExternal: false
  name: Xunit.Abstractions
  nameWithType: Xunit.Abstractions
  fullName: Xunit.Abstractions
- uid: Xunit.Sdk.FactDiscoverer.CreateTestCase(Xunit.Abstractions.ITestFrameworkDiscoveryOptions,Xunit.Abstractions.ITestMethod,Xunit.Abstractions.IAttributeInfo)
  commentId: M:Xunit.Sdk.FactDiscoverer.CreateTestCase(Xunit.Abstractions.ITestFrameworkDiscoveryOptions,Xunit.Abstractions.ITestMethod,Xunit.Abstractions.IAttributeInfo)
  parent: Xunit.Sdk.FactDiscoverer
  isExternal: true
  name: CreateTestCase(ITestFrameworkDiscoveryOptions, ITestMethod, IAttributeInfo)
  nameWithType: FactDiscoverer.CreateTestCase(ITestFrameworkDiscoveryOptions, ITestMethod, IAttributeInfo)
  fullName: Xunit.Sdk.FactDiscoverer.CreateTestCase(Xunit.Abstractions.ITestFrameworkDiscoveryOptions, Xunit.Abstractions.ITestMethod, Xunit.Abstractions.IAttributeInfo)
  spec.csharp:
  - uid: Xunit.Sdk.FactDiscoverer.CreateTestCase(Xunit.Abstractions.ITestFrameworkDiscoveryOptions,Xunit.Abstractions.ITestMethod,Xunit.Abstractions.IAttributeInfo)
    name: CreateTestCase
    nameWithType: FactDiscoverer.CreateTestCase
    fullName: Xunit.Sdk.FactDiscoverer.CreateTestCase
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Xunit.Abstractions.ITestFrameworkDiscoveryOptions
    name: ITestFrameworkDiscoveryOptions
    nameWithType: ITestFrameworkDiscoveryOptions
    fullName: Xunit.Abstractions.ITestFrameworkDiscoveryOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Xunit.Abstractions.ITestMethod
    name: ITestMethod
    nameWithType: ITestMethod
    fullName: Xunit.Abstractions.ITestMethod
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Xunit.Abstractions.IAttributeInfo
    name: IAttributeInfo
    nameWithType: IAttributeInfo
    fullName: Xunit.Abstractions.IAttributeInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Xunit.Sdk.FactDiscoverer.CreateTestCase(Xunit.Abstractions.ITestFrameworkDiscoveryOptions,Xunit.Abstractions.ITestMethod,Xunit.Abstractions.IAttributeInfo)
    name: CreateTestCase
    nameWithType: FactDiscoverer.CreateTestCase
    fullName: Xunit.Sdk.FactDiscoverer.CreateTestCase
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Xunit.Abstractions.ITestFrameworkDiscoveryOptions
    name: ITestFrameworkDiscoveryOptions
    nameWithType: ITestFrameworkDiscoveryOptions
    fullName: Xunit.Abstractions.ITestFrameworkDiscoveryOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Xunit.Abstractions.ITestMethod
    name: ITestMethod
    nameWithType: ITestMethod
    fullName: Xunit.Abstractions.ITestMethod
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Xunit.Abstractions.IAttributeInfo
    name: IAttributeInfo
    nameWithType: IAttributeInfo
    fullName: Xunit.Abstractions.IAttributeInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Xunit.Abstractions.ITestFrameworkDiscoveryOptions
  commentId: T:Xunit.Abstractions.ITestFrameworkDiscoveryOptions
  parent: Xunit.Abstractions
  isExternal: true
  name: ITestFrameworkDiscoveryOptions
  nameWithType: ITestFrameworkDiscoveryOptions
  fullName: Xunit.Abstractions.ITestFrameworkDiscoveryOptions
- uid: Xunit.Abstractions.ITestMethod
  commentId: T:Xunit.Abstractions.ITestMethod
  parent: Xunit.Abstractions
  isExternal: true
  name: ITestMethod
  nameWithType: ITestMethod
  fullName: Xunit.Abstractions.ITestMethod
- uid: Xunit.Abstractions.IAttributeInfo
  commentId: T:Xunit.Abstractions.IAttributeInfo
  parent: Xunit.Abstractions
  isExternal: true
  name: IAttributeInfo
  nameWithType: IAttributeInfo
  fullName: Xunit.Abstractions.IAttributeInfo
- uid: Xunit.Sdk.IXunitTestCase
  commentId: T:Xunit.Sdk.IXunitTestCase
  parent: Xunit.Sdk
  isExternal: true
  name: IXunitTestCase
  nameWithType: IXunitTestCase
  fullName: Xunit.Sdk.IXunitTestCase
