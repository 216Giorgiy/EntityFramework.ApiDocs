### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  id: AsyncQueryTestBase`1
  parent: Microsoft.EntityFrameworkCore.Specification.Tests
  children:
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.#ctor(`0)
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.All_top_level
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.All_top_level_subquery
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Any_predicate
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Any_simple
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.AssertQuery``1(System.Func{System.Linq.IQueryable{``0},System.Linq.IQueryable{System.Object}},System.Boolean,System.Int32,System.Action{System.Collections.Generic.IList{System.Object},System.Collections.Generic.IList{System.Object}})
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.AssertQuery``1(System.Func{System.Linq.IQueryable{``0},System.Linq.IQueryable{System.Object}},System.Func{System.Linq.IQueryable{``0},System.Linq.IQueryable{System.Object}},System.Boolean,System.Int32,System.Action{System.Collections.Generic.IList{System.Object},System.Collections.Generic.IList{System.Object}})
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.AssertQuery``1(System.Func{System.Linq.IQueryable{``0},System.Threading.Tasks.Task{System.Object}},System.Boolean,System.Int32,System.Action{System.Object,System.Object})
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Cast_results_to_object
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.ClientEvalPredicate(Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.Order)
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.ClientEvalPredicateStateless
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.ClientEvalSelector(Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.Order)
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Concat_nested
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Concat_non_entity
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Concat_simple
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Contains_top_level
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Contains_with_local_array_closure
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Contains_with_local_array_inline
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Contains_with_local_collection_complex_predicate_and
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Contains_with_local_collection_complex_predicate_not_matching_ins1
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Contains_with_local_collection_complex_predicate_not_matching_ins2
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Contains_with_local_collection_complex_predicate_or
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Contains_with_local_collection_empty_closure
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Contains_with_local_collection_empty_inline
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Contains_with_local_collection_false
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Contains_with_local_collection_sql_injection
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Contains_with_local_list_closure
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Contains_with_local_list_inline
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Contains_with_local_list_inline_closure_mix
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Contains_with_subquery
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Count_with_no_predicate
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Count_with_order_by
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Count_with_predicate
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.CreateContext
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Default_if_empty_top_level
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Default_if_empty_top_level_arg
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Default_if_empty_top_level_positive
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Default_if_empty_top_level_projection
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Distinct
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Distinct_Count
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Distinct_GroupBy
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Distinct_OrderBy
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Distinct_Scalar
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Distinct_Skip
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Distinct_Skip_Take
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Distinct_Take
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Distinct_Take_Count
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Except_nested
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Except_non_entity
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Except_simple
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.First_client_predicate
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.First_Predicate
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.FirstAsync
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.FirstOrDefault
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.FirstOrDefault_Predicate
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Fixture
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupBy_Count
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupBy_Distinct
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupBy_first
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupBy_LongCount
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupBy_SelectMany
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupBy_Shadow
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupBy_Shadow2
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupBy_Shadow3
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupBy_simple
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupBy_simple2
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupBy_Sum
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupBy_Sum_Min_Max_Avg
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupBy_with_anonymous_element
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupBy_with_element_selector
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupBy_with_element_selector_sum
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupBy_with_element_selector_sum_max
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupBy_with_element_selector2
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupBy_with_element_selector3
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupBy_with_result_selector
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupBy_with_two_part_key
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupJoin_customers_employees_shadow
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupJoin_customers_employees_subquery_shadow
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupJoin_customers_orders
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupJoin_customers_orders_count
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupJoin_DefaultIfEmpty
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupJoin_DefaultIfEmpty2
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupJoin_DefaultIfEmpty3
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupJoin_projection
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupJoin_simple
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupJoin_simple3
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupJoin_tracking_groups
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupJoin_tracking_groups2
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Intersect_nested
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Intersect_non_entity
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Intersect_simple
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Join_client_new_expression
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Join_composite_key
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Join_customers_orders_entities
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Join_customers_orders_projection
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Join_customers_orders_select
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Join_customers_orders_with_subquery
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Join_customers_orders_with_subquery_anonymous_property_method
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Join_customers_orders_with_subquery_predicate
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Join_OrderBy_Count
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Join_same_collection_force_alias_uniquefication
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Join_same_collection_multiple
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Join_select_many
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Join_Where_Count
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Last
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Last_Predicate
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Last_when_no_order_by
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.LastOrDefault
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.LastOrDefault_Predicate
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.LoadAsync_should_track_results
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.LocalMethod1
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.LocalMethod2
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Max_with_arg
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Max_with_no_arg
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Min_with_arg
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Min_with_no_arg
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Mixed_sync_async_in_query_cache
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Multiple_joins_Where_Order_Any
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_client_mixed
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_correlated_subquery_lol
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_Count_with_predicate
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_Count_with_predicate_client_eval
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_Count_with_predicate_client_eval_mixed
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_Distinct
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_GroupBy
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_GroupBy_SelectMany
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_GroupBy_SelectMany_shadow
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_Join
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_multiple
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_multiple_queries
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_scalar_primitive
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_Select
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_SelectMany
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_shadow
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_Take_Count
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_ThenBy
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_ThenBy_Any
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_ThenBy_predicate
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_Where_Count
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_Where_Count_client_eval
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_Where_Count_client_eval_mixed
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_Where_Count_with_predicate
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_Where_Count_with_predicate_client_eval
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_Where_Count_with_predicate_client_eval_mixed
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderByDescending
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderByDescending_ThenBy
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderByDescending_ThenByDescending
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Projection_when_arithmetic_expressions
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Projection_when_arithmetic_mixed
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Projection_when_arithmetic_mixed_subqueries
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Projection_when_null_value
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Queryable_nested_simple
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Queryable_simple
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Queryable_simple_anonymous
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_anonymous_conditional_expression
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_anonymous_empty
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_anonymous_literal
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_anonymous_nested
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_anonymous_one
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_anonymous_three
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_anonymous_two
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_anonymous_with_object
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_bool_closure
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_constant_int
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_constant_null_string
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_correlated_subquery_filtered
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_correlated_subquery_ordered
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_correlated_subquery_projection
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_customer_identity
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_customer_table
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_Distinct_Count
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_into
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_local
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_many_cross_join_same_collection
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_nested_collection
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_nested_collection_deep
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_nested_collection_in_anonymous_type
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_project_filter
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_project_filter2
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_scalar
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_scalar_primitive
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_scalar_primitive_after_take
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_Select_Distinct_Count
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_subquery_recursive_trivial
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.SelectMany_cartesian_product_with_ordering
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.SelectMany_correlated_simple
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.SelectMany_correlated_subquery_hard
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.SelectMany_correlated_subquery_simple
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.SelectMany_Count
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.SelectMany_customer_orders
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.SelectMany_entity_deep
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.SelectMany_Joined
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.SelectMany_Joined_DefaultIfEmpty
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.SelectMany_Joined_DefaultIfEmpty2
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.SelectMany_LongCount
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.SelectMany_mixed
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.SelectMany_nested_simple
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.SelectMany_OrderBy_ThenBy_Any
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.SelectMany_primitive
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.SelectMany_primitive_select_subquery
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.SelectMany_projection1
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.SelectMany_projection2
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.SelectMany_simple1
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.SelectMany_simple2
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Single_Predicate
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Single_Predicate_Cancellation(System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Single_Throws
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.SingleOrDefault_Predicate
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.SingleOrDefault_Throws
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Skip
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Skip_Distinct
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Skip_Take
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Skip_Take_Distinct
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.String_Contains_Column
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.String_Contains_Identity
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.String_Contains_Literal
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.String_Contains_MethodCall
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.String_EndsWith_Column
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.String_EndsWith_Identity
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.String_EndsWith_Literal
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.String_EndsWith_MethodCall
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.String_StartsWith_Column
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.String_StartsWith_Identity
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.String_StartsWith_Literal
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.String_StartsWith_MethodCall
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Sum_with_arg
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Sum_with_arg_expression
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Sum_with_binary_expression
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Sum_with_no_arg
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Sum_with_no_arg_empty
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Take_Distinct
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Take_Distinct_Count
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Take_OrderBy_Count
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Take_simple
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Take_simple_projection
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Take_Skip
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Take_Skip_Distinct
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Take_with_single
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Take_with_single_select_many
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Throws_on_concurrent_query_first
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Throws_on_concurrent_query_list
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.ToListAsync_can_be_canceled
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Union_nested
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Union_non_entity
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Union_simple
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_all_any_client
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_bool_closure
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_bool_member
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_bool_member_and_parameter_compared_to_binary_expression_nested
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_bool_member_compared_to_binary_expression
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_bool_member_equals_constant
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_bool_member_false
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_bool_member_false_shadow
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_bool_member_in_complex_predicate
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_bool_member_negated_twice
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_bool_member_shadow
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_bool_parameter
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_bool_parameter_compared_to_binary_expression
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_chain
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_client
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_compare_constructed
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_compare_constructed_equal
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_compare_constructed_multi_value_equal
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_compare_constructed_multi_value_not_equal
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_compare_null
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_comparison_nullable_type_not_null
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_comparison_nullable_type_null
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_complex_negated_expression_optimized
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_constant_is_not_null
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_constant_is_null
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_de_morgan_and_optimizated
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_de_morgan_or_optimizated
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_equals_method_int
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_equals_method_string
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_false
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_field_access_closure_via_query_cache
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_First
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_FirstOrDefault
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_identity_comparison
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_in_optimization_multiple
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_is_not_null
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_is_null
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_Last
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_LastOrDefault
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_method_call_closure_via_query_cache
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_method_call_nullable_type_closure_via_query_cache
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_method_call_nullable_type_reverse_closure_via_query_cache
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_negated_boolean_expression_compared_to_another_negated_boolean_expression
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_nested_field_access_closure_via_query_cache
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_nested_field_access_closure_via_query_cache_error_method_null
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_nested_field_access_closure_via_query_cache_error_null
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_nested_property_access_closure_via_query_cache
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_new_instance_field_access_closure_via_query_cache
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_not_bool_member_compared_to_binary_expression
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_not_bool_member_compared_to_not_bool_member
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_not_in_optimization1
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_not_in_optimization2
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_not_in_optimization3
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_not_in_optimization4
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_null_is_not_null
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_null_is_null
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_OrderBy_Count
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_OrderBy_Count_client_eval
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_OrderBy_Count_client_eval_mixed
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_primitive
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_primitive_tracked
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_primitive_tracked2
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_projection
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_property_access_closure_via_query_cache
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_query_composition
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_select_many_and
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_select_many_or
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_select_many_or_with_parameter
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_select_many_or2
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_select_many_or3
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_select_many_or4
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_shadow_subquery_first
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_short_member_comparison
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_simple
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_simple_closure
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_simple_closure_constant
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_simple_closure_via_query_cache
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_simple_closure_via_query_cache_nullable_type
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_simple_closure_via_query_cache_nullable_type_reverse
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_simple_reversed
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_simple_shadow
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_simple_shadow_projection
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_simple_shadow_projection_mixed
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_simple_shadow_subquery
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_Single
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_SingleOrDefault
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_static_field_access_closure_via_query_cache
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_static_property_access_closure_via_query_cache
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_string_length
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_subquery_anon
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_subquery_on_collection
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_subquery_recursive_trivial
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_true
  langs:
  - csharp
  - vb
  name: AsyncQueryTestBase<TFixture>
  nameWithType: AsyncQueryTestBase<TFixture>
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: AsyncQueryTestBase
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 22
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: 'public abstract class AsyncQueryTestBase<TFixture> : IClassFixture<TFixture> where TFixture : NorthwindQueryFixtureBase, new ()'
    content.vb: >-
      Public MustInherit Class AsyncQueryTestBase(Of TFixture As {NorthwindQueryFixtureBase, New})
          Inherits IClassFixture(Of TFixture)
    typeParameters:
    - id: TFixture
  inheritance:
  - System.Object
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  nameWithType.vb: AsyncQueryTestBase(Of TFixture)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture)
  name.vb: AsyncQueryTestBase(Of TFixture)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.ToListAsync_can_be_canceled
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.ToListAsync_can_be_canceled
  id: ToListAsync_can_be_canceled
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: ToListAsync_can_be_canceled()
  nameWithType: AsyncQueryTestBase<TFixture>.ToListAsync_can_be_canceled()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.ToListAsync_can_be_canceled()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ToListAsync_can_be_canceled
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 25
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task ToListAsync_can_be_canceled()
    content.vb: Public Overridable Function ToListAsync_can_be_canceled As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).ToListAsync_can_be_canceled()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).ToListAsync_can_be_canceled()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.LoadAsync_should_track_results
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.LoadAsync_should_track_results
  id: LoadAsync_should_track_results
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: LoadAsync_should_track_results()
  nameWithType: AsyncQueryTestBase<TFixture>.LoadAsync_should_track_results()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.LoadAsync_should_track_results()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: LoadAsync_should_track_results
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 86
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task LoadAsync_should_track_results()
    content.vb: Public Overridable Function LoadAsync_should_track_results As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).LoadAsync_should_track_results()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).LoadAsync_should_track_results()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_all_any_client
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_all_any_client
  id: Where_all_any_client
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_all_any_client()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_all_any_client()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_all_any_client()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_all_any_client
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 97
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_all_any_client()
    content.vb: Public Overridable Function Where_all_any_client As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_all_any_client()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_all_any_client()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Single_Predicate_Cancellation(System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Single_Predicate_Cancellation(System.Threading.CancellationToken)
  id: Single_Predicate_Cancellation(System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Single_Predicate_Cancellation(CancellationToken)
  nameWithType: AsyncQueryTestBase<TFixture>.Single_Predicate_Cancellation(CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Single_Predicate_Cancellation(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Single_Predicate_Cancellation
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 109
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Single_Predicate_Cancellation(CancellationToken cancellationToken)
    content.vb: Public Overridable Function Single_Predicate_Cancellation(cancellationToken As CancellationToken) As Task
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Single_Predicate_Cancellation(CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Single_Predicate_Cancellation(System.Threading.CancellationToken)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Mixed_sync_async_in_query_cache
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Mixed_sync_async_in_query_cache
  id: Mixed_sync_async_in_query_cache
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Mixed_sync_async_in_query_cache()
  nameWithType: AsyncQueryTestBase<TFixture>.Mixed_sync_async_in_query_cache()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Mixed_sync_async_in_query_cache()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Mixed_sync_async_in_query_cache
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 115
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Mixed_sync_async_in_query_cache()
    content.vb: Public Overridable Function Mixed_sync_async_in_query_cache As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Mixed_sync_async_in_query_cache()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Mixed_sync_async_in_query_cache()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Queryable_simple
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Queryable_simple
  id: Queryable_simple
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Queryable_simple()
  nameWithType: AsyncQueryTestBase<TFixture>.Queryable_simple()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Queryable_simple()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Queryable_simple
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 125
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Queryable_simple()
    content.vb: Public Overridable Function Queryable_simple As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Queryable_simple()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Queryable_simple()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Queryable_simple_anonymous
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Queryable_simple_anonymous
  id: Queryable_simple_anonymous
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Queryable_simple_anonymous()
  nameWithType: AsyncQueryTestBase<TFixture>.Queryable_simple_anonymous()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Queryable_simple_anonymous()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Queryable_simple_anonymous
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 133
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Queryable_simple_anonymous()
    content.vb: Public Overridable Function Queryable_simple_anonymous As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Queryable_simple_anonymous()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Queryable_simple_anonymous()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Queryable_nested_simple
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Queryable_nested_simple
  id: Queryable_nested_simple
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Queryable_nested_simple()
  nameWithType: AsyncQueryTestBase<TFixture>.Queryable_nested_simple()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Queryable_nested_simple()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Queryable_nested_simple
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 141
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Queryable_nested_simple()
    content.vb: Public Overridable Function Queryable_nested_simple As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Queryable_nested_simple()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Queryable_nested_simple()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Take_simple
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Take_simple
  id: Take_simple
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Take_simple()
  nameWithType: AsyncQueryTestBase<TFixture>.Take_simple()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Take_simple()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Take_simple
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 150
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Take_simple()
    content.vb: Public Overridable Function Take_simple As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Take_simple()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Take_simple()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Take_simple_projection
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Take_simple_projection
  id: Take_simple_projection
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Take_simple_projection()
  nameWithType: AsyncQueryTestBase<TFixture>.Take_simple_projection()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Take_simple_projection()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Take_simple_projection
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 159
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Take_simple_projection()
    content.vb: Public Overridable Function Take_simple_projection As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Take_simple_projection()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Take_simple_projection()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Skip
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Skip
  id: Skip
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Skip()
  nameWithType: AsyncQueryTestBase<TFixture>.Skip()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Skip()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Skip
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 167
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Skip()
    content.vb: Public Overridable Function Skip As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Skip()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Skip()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Take_Skip
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Take_Skip
  id: Take_Skip
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Take_Skip()
  nameWithType: AsyncQueryTestBase<TFixture>.Take_Skip()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Take_Skip()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Take_Skip
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 176
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Take_Skip()
    content.vb: Public Overridable Function Take_Skip As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Take_Skip()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Take_Skip()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Distinct_Skip
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Distinct_Skip
  id: Distinct_Skip
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Distinct_Skip()
  nameWithType: AsyncQueryTestBase<TFixture>.Distinct_Skip()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Distinct_Skip()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Distinct_Skip
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 185
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Distinct_Skip()
    content.vb: Public Overridable Function Distinct_Skip As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Distinct_Skip()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Distinct_Skip()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Skip_Take
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Skip_Take
  id: Skip_Take
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Skip_Take()
  nameWithType: AsyncQueryTestBase<TFixture>.Skip_Take()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Skip_Take()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Skip_Take
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 194
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Skip_Take()
    content.vb: Public Overridable Function Skip_Take As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Skip_Take()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Skip_Take()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Distinct_Skip_Take
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Distinct_Skip_Take
  id: Distinct_Skip_Take
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Distinct_Skip_Take()
  nameWithType: AsyncQueryTestBase<TFixture>.Distinct_Skip_Take()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Distinct_Skip_Take()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Distinct_Skip_Take
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 203
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Distinct_Skip_Take()
    content.vb: Public Overridable Function Distinct_Skip_Take As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Distinct_Skip_Take()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Distinct_Skip_Take()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Skip_Distinct
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Skip_Distinct
  id: Skip_Distinct
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Skip_Distinct()
  nameWithType: AsyncQueryTestBase<TFixture>.Skip_Distinct()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Skip_Distinct()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Skip_Distinct
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 212
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Skip_Distinct()
    content.vb: Public Overridable Function Skip_Distinct As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Skip_Distinct()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Skip_Distinct()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Skip_Take_Distinct
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Skip_Take_Distinct
  id: Skip_Take_Distinct
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Skip_Take_Distinct()
  nameWithType: AsyncQueryTestBase<TFixture>.Skip_Take_Distinct()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Skip_Take_Distinct()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Skip_Take_Distinct
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 220
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Skip_Take_Distinct()
    content.vb: Public Overridable Function Skip_Take_Distinct As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Skip_Take_Distinct()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Skip_Take_Distinct()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Take_Skip_Distinct
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Take_Skip_Distinct
  id: Take_Skip_Distinct
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Take_Skip_Distinct()
  nameWithType: AsyncQueryTestBase<TFixture>.Take_Skip_Distinct()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Take_Skip_Distinct()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Take_Skip_Distinct
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 228
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Take_Skip_Distinct()
    content.vb: Public Overridable Function Take_Skip_Distinct As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Take_Skip_Distinct()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Take_Skip_Distinct()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Take_Distinct
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Take_Distinct
  id: Take_Distinct
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Take_Distinct()
  nameWithType: AsyncQueryTestBase<TFixture>.Take_Distinct()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Take_Distinct()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Take_Distinct
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 236
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Take_Distinct()
    content.vb: Public Overridable Function Take_Distinct As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Take_Distinct()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Take_Distinct()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Distinct_Take
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Distinct_Take
  id: Distinct_Take
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Distinct_Take()
  nameWithType: AsyncQueryTestBase<TFixture>.Distinct_Take()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Distinct_Take()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Distinct_Take
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 244
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Distinct_Take()
    content.vb: Public Overridable Function Distinct_Take As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Distinct_Take()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Distinct_Take()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Distinct_Take_Count
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Distinct_Take_Count
  id: Distinct_Take_Count
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Distinct_Take_Count()
  nameWithType: AsyncQueryTestBase<TFixture>.Distinct_Take_Count()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Distinct_Take_Count()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Distinct_Take_Count
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 253
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Distinct_Take_Count()
    content.vb: Public Overridable Function Distinct_Take_Count As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Distinct_Take_Count()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Distinct_Take_Count()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Take_Distinct_Count
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Take_Distinct_Count
  id: Take_Distinct_Count
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Take_Distinct_Count()
  nameWithType: AsyncQueryTestBase<TFixture>.Take_Distinct_Count()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Take_Distinct_Count()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Take_Distinct_Count
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 260
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Take_Distinct_Count()
    content.vb: Public Overridable Function Take_Distinct_Count As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Take_Distinct_Count()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Take_Distinct_Count()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Any_simple
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Any_simple
  id: Any_simple
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Any_simple()
  nameWithType: AsyncQueryTestBase<TFixture>.Any_simple()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Any_simple()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Any_simple
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 267
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Any_simple()
    content.vb: Public Overridable Function Any_simple As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Any_simple()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Any_simple()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_Take_Count
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_Take_Count
  id: OrderBy_Take_Count
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: OrderBy_Take_Count()
  nameWithType: AsyncQueryTestBase<TFixture>.OrderBy_Take_Count()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.OrderBy_Take_Count()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: OrderBy_Take_Count
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 274
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task OrderBy_Take_Count()
    content.vb: Public Overridable Function OrderBy_Take_Count As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).OrderBy_Take_Count()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).OrderBy_Take_Count()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Take_OrderBy_Count
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Take_OrderBy_Count
  id: Take_OrderBy_Count
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Take_OrderBy_Count()
  nameWithType: AsyncQueryTestBase<TFixture>.Take_OrderBy_Count()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Take_OrderBy_Count()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Take_OrderBy_Count
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 281
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Take_OrderBy_Count()
    content.vb: Public Overridable Function Take_OrderBy_Count As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Take_OrderBy_Count()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Take_OrderBy_Count()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Any_predicate
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Any_predicate
  id: Any_predicate
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Any_predicate()
  nameWithType: AsyncQueryTestBase<TFixture>.Any_predicate()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Any_predicate()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Any_predicate
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 288
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Any_predicate()
    content.vb: Public Overridable Function Any_predicate As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Any_predicate()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Any_predicate()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.All_top_level
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.All_top_level
  id: All_top_level
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: All_top_level()
  nameWithType: AsyncQueryTestBase<TFixture>.All_top_level()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.All_top_level()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: All_top_level
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 295
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task All_top_level()
    content.vb: Public Overridable Function All_top_level As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).All_top_level()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).All_top_level()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.All_top_level_subquery
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.All_top_level_subquery
  id: All_top_level_subquery
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: All_top_level_subquery()
  nameWithType: AsyncQueryTestBase<TFixture>.All_top_level_subquery()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.All_top_level_subquery()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: All_top_level_subquery
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 302
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task All_top_level_subquery()
    content.vb: Public Overridable Function All_top_level_subquery As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).All_top_level_subquery()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).All_top_level_subquery()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_into
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_into
  id: Select_into
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Select_into()
  nameWithType: AsyncQueryTestBase<TFixture>.Select_into()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Select_into()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Select_into
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 310
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Select_into()
    content.vb: Public Overridable Function Select_into As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Select_into()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Select_into()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Projection_when_arithmetic_expressions
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Projection_when_arithmetic_expressions
  id: Projection_when_arithmetic_expressions
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Projection_when_arithmetic_expressions()
  nameWithType: AsyncQueryTestBase<TFixture>.Projection_when_arithmetic_expressions()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Projection_when_arithmetic_expressions()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Projection_when_arithmetic_expressions
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 322
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Projection_when_arithmetic_expressions()
    content.vb: Public Overridable Function Projection_when_arithmetic_expressions As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Projection_when_arithmetic_expressions()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Projection_when_arithmetic_expressions()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Projection_when_arithmetic_mixed
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Projection_when_arithmetic_mixed
  id: Projection_when_arithmetic_mixed
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Projection_when_arithmetic_mixed()
  nameWithType: AsyncQueryTestBase<TFixture>.Projection_when_arithmetic_mixed()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Projection_when_arithmetic_mixed()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Projection_when_arithmetic_mixed
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 339
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Projection_when_arithmetic_mixed()
    content.vb: Public Overridable Function Projection_when_arithmetic_mixed As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Projection_when_arithmetic_mixed()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Projection_when_arithmetic_mixed()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Projection_when_arithmetic_mixed_subqueries
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Projection_when_arithmetic_mixed_subqueries
  id: Projection_when_arithmetic_mixed_subqueries
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Projection_when_arithmetic_mixed_subqueries()
  nameWithType: AsyncQueryTestBase<TFixture>.Projection_when_arithmetic_mixed_subqueries()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Projection_when_arithmetic_mixed_subqueries()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Projection_when_arithmetic_mixed_subqueries
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 356
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Projection_when_arithmetic_mixed_subqueries()
    content.vb: Public Overridable Function Projection_when_arithmetic_mixed_subqueries As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Projection_when_arithmetic_mixed_subqueries()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Projection_when_arithmetic_mixed_subqueries()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Projection_when_null_value
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Projection_when_null_value
  id: Projection_when_null_value
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Projection_when_null_value()
  nameWithType: AsyncQueryTestBase<TFixture>.Projection_when_null_value()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Projection_when_null_value()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Projection_when_null_value
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 373
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Projection_when_null_value()
    content.vb: Public Overridable Function Projection_when_null_value As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Projection_when_null_value()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Projection_when_null_value()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Take_with_single
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Take_with_single
  id: Take_with_single
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Take_with_single()
  nameWithType: AsyncQueryTestBase<TFixture>.Take_with_single()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Take_with_single()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Take_with_single
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 380
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Take_with_single()
    content.vb: Public Overridable Function Take_with_single As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Take_with_single()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Take_with_single()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Take_with_single_select_many
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Take_with_single_select_many
  id: Take_with_single_select_many
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Take_with_single_select_many()
  nameWithType: AsyncQueryTestBase<TFixture>.Take_with_single_select_many()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Take_with_single_select_many()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Take_with_single_select_many
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 387
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Take_with_single_select_many()
    content.vb: Public Overridable Function Take_with_single_select_many As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Take_with_single_select_many()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Take_with_single_select_many()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Cast_results_to_object
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Cast_results_to_object
  id: Cast_results_to_object
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Cast_results_to_object()
  nameWithType: AsyncQueryTestBase<TFixture>.Cast_results_to_object()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Cast_results_to_object()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Cast_results_to_object
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 400
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Cast_results_to_object()
    content.vb: Public Overridable Function Cast_results_to_object As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Cast_results_to_object()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Cast_results_to_object()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_simple
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_simple
  id: Where_simple
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_simple()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_simple()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_simple()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_simple
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 406
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_simple()
    content.vb: Public Overridable Function Where_simple As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_simple()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_simple()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_simple_closure
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_simple_closure
  id: Where_simple_closure
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_simple_closure()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_simple_closure()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_simple_closure()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_simple_closure
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 414
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_simple_closure()
    content.vb: Public Overridable Function Where_simple_closure As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_simple_closure()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_simple_closure()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_simple_closure_constant
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_simple_closure_constant
  id: Where_simple_closure_constant
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_simple_closure_constant()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_simple_closure_constant()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_simple_closure_constant()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_simple_closure_constant
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 425
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_simple_closure_constant()
    content.vb: Public Overridable Function Where_simple_closure_constant As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_simple_closure_constant()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_simple_closure_constant()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_simple_closure_via_query_cache
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_simple_closure_via_query_cache
  id: Where_simple_closure_via_query_cache
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_simple_closure_via_query_cache()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_simple_closure_via_query_cache()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_simple_closure_via_query_cache()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_simple_closure_via_query_cache
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 436
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_simple_closure_via_query_cache()
    content.vb: Public Overridable Function Where_simple_closure_via_query_cache As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_simple_closure_via_query_cache()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_simple_closure_via_query_cache()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_method_call_nullable_type_closure_via_query_cache
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_method_call_nullable_type_closure_via_query_cache
  id: Where_method_call_nullable_type_closure_via_query_cache
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_method_call_nullable_type_closure_via_query_cache()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_method_call_nullable_type_closure_via_query_cache()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_method_call_nullable_type_closure_via_query_cache()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_method_call_nullable_type_closure_via_query_cache
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 479
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_method_call_nullable_type_closure_via_query_cache()
    content.vb: Public Overridable Function Where_method_call_nullable_type_closure_via_query_cache As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_method_call_nullable_type_closure_via_query_cache()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_method_call_nullable_type_closure_via_query_cache()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_method_call_nullable_type_reverse_closure_via_query_cache
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_method_call_nullable_type_reverse_closure_via_query_cache
  id: Where_method_call_nullable_type_reverse_closure_via_query_cache
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_method_call_nullable_type_reverse_closure_via_query_cache()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_method_call_nullable_type_reverse_closure_via_query_cache()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_method_call_nullable_type_reverse_closure_via_query_cache()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_method_call_nullable_type_reverse_closure_via_query_cache
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 495
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_method_call_nullable_type_reverse_closure_via_query_cache()
    content.vb: Public Overridable Function Where_method_call_nullable_type_reverse_closure_via_query_cache As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_method_call_nullable_type_reverse_closure_via_query_cache()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_method_call_nullable_type_reverse_closure_via_query_cache()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_method_call_closure_via_query_cache
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_method_call_closure_via_query_cache
  id: Where_method_call_closure_via_query_cache
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_method_call_closure_via_query_cache()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_method_call_closure_via_query_cache()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_method_call_closure_via_query_cache()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_method_call_closure_via_query_cache
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 511
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_method_call_closure_via_query_cache()
    content.vb: Public Overridable Function Where_method_call_closure_via_query_cache As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_method_call_closure_via_query_cache()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_method_call_closure_via_query_cache()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_field_access_closure_via_query_cache
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_field_access_closure_via_query_cache
  id: Where_field_access_closure_via_query_cache
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_field_access_closure_via_query_cache()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_field_access_closure_via_query_cache()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_field_access_closure_via_query_cache()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_field_access_closure_via_query_cache
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 527
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_field_access_closure_via_query_cache()
    content.vb: Public Overridable Function Where_field_access_closure_via_query_cache As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_field_access_closure_via_query_cache()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_field_access_closure_via_query_cache()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_property_access_closure_via_query_cache
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_property_access_closure_via_query_cache
  id: Where_property_access_closure_via_query_cache
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_property_access_closure_via_query_cache()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_property_access_closure_via_query_cache()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_property_access_closure_via_query_cache()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_property_access_closure_via_query_cache
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 543
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_property_access_closure_via_query_cache()
    content.vb: Public Overridable Function Where_property_access_closure_via_query_cache As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_property_access_closure_via_query_cache()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_property_access_closure_via_query_cache()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_static_field_access_closure_via_query_cache
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_static_field_access_closure_via_query_cache
  id: Where_static_field_access_closure_via_query_cache
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_static_field_access_closure_via_query_cache()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_static_field_access_closure_via_query_cache()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_static_field_access_closure_via_query_cache()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_static_field_access_closure_via_query_cache
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 559
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_static_field_access_closure_via_query_cache()
    content.vb: Public Overridable Function Where_static_field_access_closure_via_query_cache As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_static_field_access_closure_via_query_cache()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_static_field_access_closure_via_query_cache()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_static_property_access_closure_via_query_cache
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_static_property_access_closure_via_query_cache
  id: Where_static_property_access_closure_via_query_cache
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_static_property_access_closure_via_query_cache()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_static_property_access_closure_via_query_cache()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_static_property_access_closure_via_query_cache()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_static_property_access_closure_via_query_cache
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 575
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_static_property_access_closure_via_query_cache()
    content.vb: Public Overridable Function Where_static_property_access_closure_via_query_cache As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_static_property_access_closure_via_query_cache()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_static_property_access_closure_via_query_cache()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_nested_field_access_closure_via_query_cache
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_nested_field_access_closure_via_query_cache
  id: Where_nested_field_access_closure_via_query_cache
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_nested_field_access_closure_via_query_cache()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_nested_field_access_closure_via_query_cache()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_nested_field_access_closure_via_query_cache()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_nested_field_access_closure_via_query_cache
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 591
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_nested_field_access_closure_via_query_cache()
    content.vb: Public Overridable Function Where_nested_field_access_closure_via_query_cache As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_nested_field_access_closure_via_query_cache()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_nested_field_access_closure_via_query_cache()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_nested_property_access_closure_via_query_cache
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_nested_property_access_closure_via_query_cache
  id: Where_nested_property_access_closure_via_query_cache
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_nested_property_access_closure_via_query_cache()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_nested_property_access_closure_via_query_cache()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_nested_property_access_closure_via_query_cache()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_nested_property_access_closure_via_query_cache
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 607
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_nested_property_access_closure_via_query_cache()
    content.vb: Public Overridable Function Where_nested_property_access_closure_via_query_cache As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_nested_property_access_closure_via_query_cache()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_nested_property_access_closure_via_query_cache()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_nested_field_access_closure_via_query_cache_error_null
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_nested_field_access_closure_via_query_cache_error_null
  id: Where_nested_field_access_closure_via_query_cache_error_null
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_nested_field_access_closure_via_query_cache_error_null()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_nested_field_access_closure_via_query_cache_error_null()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_nested_field_access_closure_via_query_cache_error_null()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_nested_field_access_closure_via_query_cache_error_null
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 623
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_nested_field_access_closure_via_query_cache_error_null()
    content.vb: Public Overridable Function Where_nested_field_access_closure_via_query_cache_error_null As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_nested_field_access_closure_via_query_cache_error_null()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_nested_field_access_closure_via_query_cache_error_null()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_nested_field_access_closure_via_query_cache_error_method_null
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_nested_field_access_closure_via_query_cache_error_method_null
  id: Where_nested_field_access_closure_via_query_cache_error_method_null
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_nested_field_access_closure_via_query_cache_error_method_null()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_nested_field_access_closure_via_query_cache_error_method_null()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_nested_field_access_closure_via_query_cache_error_method_null()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_nested_field_access_closure_via_query_cache_error_method_null
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 637
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_nested_field_access_closure_via_query_cache_error_method_null()
    content.vb: Public Overridable Function Where_nested_field_access_closure_via_query_cache_error_method_null As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_nested_field_access_closure_via_query_cache_error_method_null()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_nested_field_access_closure_via_query_cache_error_method_null()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_new_instance_field_access_closure_via_query_cache
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_new_instance_field_access_closure_via_query_cache
  id: Where_new_instance_field_access_closure_via_query_cache
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_new_instance_field_access_closure_via_query_cache()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_new_instance_field_access_closure_via_query_cache()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_new_instance_field_access_closure_via_query_cache()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_new_instance_field_access_closure_via_query_cache
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 651
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_new_instance_field_access_closure_via_query_cache()
    content.vb: Public Overridable Function Where_new_instance_field_access_closure_via_query_cache As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_new_instance_field_access_closure_via_query_cache()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_new_instance_field_access_closure_via_query_cache()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_simple_closure_via_query_cache_nullable_type
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_simple_closure_via_query_cache_nullable_type
  id: Where_simple_closure_via_query_cache_nullable_type
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_simple_closure_via_query_cache_nullable_type()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_simple_closure_via_query_cache_nullable_type()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_simple_closure_via_query_cache_nullable_type()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_simple_closure_via_query_cache_nullable_type
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 663
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_simple_closure_via_query_cache_nullable_type()
    content.vb: Public Overridable Function Where_simple_closure_via_query_cache_nullable_type As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_simple_closure_via_query_cache_nullable_type()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_simple_closure_via_query_cache_nullable_type()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_simple_closure_via_query_cache_nullable_type_reverse
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_simple_closure_via_query_cache_nullable_type_reverse
  id: Where_simple_closure_via_query_cache_nullable_type_reverse
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_simple_closure_via_query_cache_nullable_type_reverse()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_simple_closure_via_query_cache_nullable_type_reverse()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_simple_closure_via_query_cache_nullable_type_reverse()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_simple_closure_via_query_cache_nullable_type_reverse
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 685
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_simple_closure_via_query_cache_nullable_type_reverse()
    content.vb: Public Overridable Function Where_simple_closure_via_query_cache_nullable_type_reverse As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_simple_closure_via_query_cache_nullable_type_reverse()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_simple_closure_via_query_cache_nullable_type_reverse()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_simple_shadow
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_simple_shadow
  id: Where_simple_shadow
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_simple_shadow()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_simple_shadow()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_simple_shadow()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_simple_shadow
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 707
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_simple_shadow()
    content.vb: Public Overridable Function Where_simple_shadow As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_simple_shadow()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_simple_shadow()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_simple_shadow_projection
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_simple_shadow_projection
  id: Where_simple_shadow_projection
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_simple_shadow_projection()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_simple_shadow_projection()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_simple_shadow_projection()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_simple_shadow_projection
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 715
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_simple_shadow_projection()
    content.vb: Public Overridable Function Where_simple_shadow_projection As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_simple_shadow_projection()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_simple_shadow_projection()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_simple_shadow_projection_mixed
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_simple_shadow_projection_mixed
  id: Where_simple_shadow_projection_mixed
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_simple_shadow_projection_mixed()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_simple_shadow_projection_mixed()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_simple_shadow_projection_mixed()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_simple_shadow_projection_mixed
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 723
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_simple_shadow_projection_mixed()
    content.vb: Public Overridable Function Where_simple_shadow_projection_mixed As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_simple_shadow_projection_mixed()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_simple_shadow_projection_mixed()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_simple_shadow_subquery
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_simple_shadow_subquery
  id: Where_simple_shadow_subquery
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_simple_shadow_subquery()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_simple_shadow_subquery()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_simple_shadow_subquery()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_simple_shadow_subquery
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 731
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_simple_shadow_subquery()
    content.vb: Public Overridable Function Where_simple_shadow_subquery As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_simple_shadow_subquery()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_simple_shadow_subquery()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_shadow_subquery_first
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_shadow_subquery_first
  id: Where_shadow_subquery_first
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_shadow_subquery_first()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_shadow_subquery_first()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_shadow_subquery_first()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_shadow_subquery_first
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 741
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_shadow_subquery_first()
    content.vb: Public Overridable Function Where_shadow_subquery_first As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_shadow_subquery_first()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_shadow_subquery_first()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_client
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_client
  id: Where_client
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_client()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_client()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_client()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_client
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 752
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_client()
    content.vb: Public Overridable Function Where_client As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_client()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_client()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.First_client_predicate
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.First_client_predicate
  id: First_client_predicate
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: First_client_predicate()
  nameWithType: AsyncQueryTestBase<TFixture>.First_client_predicate()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.First_client_predicate()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: First_client_predicate
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 760
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task First_client_predicate()
    content.vb: Public Overridable Function First_client_predicate As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).First_client_predicate()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).First_client_predicate()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_equals_method_string
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_equals_method_string
  id: Where_equals_method_string
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_equals_method_string()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_equals_method_string()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_equals_method_string()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_equals_method_string
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 767
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_equals_method_string()
    content.vb: Public Overridable Function Where_equals_method_string As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_equals_method_string()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_equals_method_string()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_equals_method_int
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_equals_method_int
  id: Where_equals_method_int
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_equals_method_int()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_equals_method_int()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_equals_method_int()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_equals_method_int
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 775
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_equals_method_int()
    content.vb: Public Overridable Function Where_equals_method_int As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_equals_method_int()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_equals_method_int()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_comparison_nullable_type_not_null
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_comparison_nullable_type_not_null
  id: Where_comparison_nullable_type_not_null
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_comparison_nullable_type_not_null()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_comparison_nullable_type_not_null()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_comparison_nullable_type_not_null()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_comparison_nullable_type_not_null
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 783
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_comparison_nullable_type_not_null()
    content.vb: Public Overridable Function Where_comparison_nullable_type_not_null As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_comparison_nullable_type_not_null()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_comparison_nullable_type_not_null()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_comparison_nullable_type_null
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_comparison_nullable_type_null
  id: Where_comparison_nullable_type_null
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_comparison_nullable_type_null()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_comparison_nullable_type_null()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_comparison_nullable_type_null()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_comparison_nullable_type_null
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 791
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_comparison_nullable_type_null()
    content.vb: Public Overridable Function Where_comparison_nullable_type_null As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_comparison_nullable_type_null()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_comparison_nullable_type_null()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_string_length
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_string_length
  id: Where_string_length
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_string_length()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_string_length()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_string_length()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_string_length
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 799
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_string_length()
    content.vb: Public Overridable Function Where_string_length As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_string_length()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_string_length()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_simple_reversed
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_simple_reversed
  id: Where_simple_reversed
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_simple_reversed()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_simple_reversed()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_simple_reversed()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_simple_reversed
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 807
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_simple_reversed()
    content.vb: Public Overridable Function Where_simple_reversed As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_simple_reversed()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_simple_reversed()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_is_null
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_is_null
  id: Where_is_null
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_is_null()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_is_null()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_is_null()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_is_null
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 815
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_is_null()
    content.vb: Public Overridable Function Where_is_null As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_is_null()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_is_null()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_null_is_null
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_null_is_null
  id: Where_null_is_null
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_null_is_null()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_null_is_null()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_null_is_null()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_null_is_null
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 822
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_null_is_null()
    content.vb: Public Overridable Function Where_null_is_null As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_null_is_null()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_null_is_null()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_constant_is_null
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_constant_is_null
  id: Where_constant_is_null
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_constant_is_null()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_constant_is_null()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_constant_is_null()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_constant_is_null
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 831
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_constant_is_null()
    content.vb: Public Overridable Function Where_constant_is_null As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_constant_is_null()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_constant_is_null()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_is_not_null
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_is_not_null
  id: Where_is_not_null
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_is_not_null()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_is_not_null()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_is_not_null()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_is_not_null
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 838
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_is_not_null()
    content.vb: Public Overridable Function Where_is_not_null As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_is_not_null()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_is_not_null()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_null_is_not_null
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_null_is_not_null
  id: Where_null_is_not_null
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_null_is_not_null()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_null_is_not_null()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_null_is_not_null()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_null_is_not_null
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 846
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_null_is_not_null()
    content.vb: Public Overridable Function Where_null_is_not_null As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_null_is_not_null()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_null_is_not_null()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_constant_is_not_null
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_constant_is_not_null
  id: Where_constant_is_not_null
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_constant_is_not_null()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_constant_is_not_null()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_constant_is_not_null()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_constant_is_not_null
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 854
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_constant_is_not_null()
    content.vb: Public Overridable Function Where_constant_is_not_null As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_constant_is_not_null()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_constant_is_not_null()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_identity_comparison
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_identity_comparison
  id: Where_identity_comparison
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_identity_comparison()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_identity_comparison()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_identity_comparison()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_identity_comparison
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 862
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_identity_comparison()
    content.vb: Public Overridable Function Where_identity_comparison As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_identity_comparison()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_identity_comparison()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_select_many_or
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_select_many_or
  id: Where_select_many_or
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_select_many_or()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_select_many_or()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_select_many_or()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_select_many_or
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 871
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_select_many_or()
    content.vb: Public Overridable Function Where_select_many_or As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_select_many_or()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_select_many_or()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_select_many_or2
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_select_many_or2
  id: Where_select_many_or2
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_select_many_or2()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_select_many_or2()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_select_many_or2()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_select_many_or2
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 882
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_select_many_or2()
    content.vb: Public Overridable Function Where_select_many_or2 As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_select_many_or2()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_select_many_or2()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_select_many_or3
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_select_many_or3
  id: Where_select_many_or3
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_select_many_or3()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_select_many_or3()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_select_many_or3()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_select_many_or3
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 893
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_select_many_or3()
    content.vb: Public Overridable Function Where_select_many_or3 As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_select_many_or3()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_select_many_or3()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_select_many_or4
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_select_many_or4
  id: Where_select_many_or4
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_select_many_or4()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_select_many_or4()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_select_many_or4()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_select_many_or4
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 905
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_select_many_or4()
    content.vb: Public Overridable Function Where_select_many_or4 As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_select_many_or4()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_select_many_or4()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_select_many_or_with_parameter
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_select_many_or_with_parameter
  id: Where_select_many_or_with_parameter
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_select_many_or_with_parameter()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_select_many_or_with_parameter()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_select_many_or_with_parameter()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_select_many_or_with_parameter
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 918
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_select_many_or_with_parameter()
    content.vb: Public Overridable Function Where_select_many_or_with_parameter As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_select_many_or_with_parameter()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_select_many_or_with_parameter()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_in_optimization_multiple
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_in_optimization_multiple
  id: Where_in_optimization_multiple
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_in_optimization_multiple()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_in_optimization_multiple()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_in_optimization_multiple()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_in_optimization_multiple
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 934
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_in_optimization_multiple()
    content.vb: Public Overridable Function Where_in_optimization_multiple As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_in_optimization_multiple()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_in_optimization_multiple()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_not_in_optimization1
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_not_in_optimization1
  id: Where_not_in_optimization1
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_not_in_optimization1()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_not_in_optimization1()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_not_in_optimization1()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_not_in_optimization1
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 947
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_not_in_optimization1()
    content.vb: Public Overridable Function Where_not_in_optimization1 As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_not_in_optimization1()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_not_in_optimization1()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_not_in_optimization2
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_not_in_optimization2
  id: Where_not_in_optimization2
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_not_in_optimization2()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_not_in_optimization2()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_not_in_optimization2()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_not_in_optimization2
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 958
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_not_in_optimization2()
    content.vb: Public Overridable Function Where_not_in_optimization2 As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_not_in_optimization2()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_not_in_optimization2()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_not_in_optimization3
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_not_in_optimization3
  id: Where_not_in_optimization3
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_not_in_optimization3()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_not_in_optimization3()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_not_in_optimization3()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_not_in_optimization3
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 969
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_not_in_optimization3()
    content.vb: Public Overridable Function Where_not_in_optimization3 As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_not_in_optimization3()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_not_in_optimization3()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_not_in_optimization4
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_not_in_optimization4
  id: Where_not_in_optimization4
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_not_in_optimization4()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_not_in_optimization4()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_not_in_optimization4()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_not_in_optimization4
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 981
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_not_in_optimization4()
    content.vb: Public Overridable Function Where_not_in_optimization4 As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_not_in_optimization4()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_not_in_optimization4()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_select_many_and
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_select_many_and
  id: Where_select_many_and
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_select_many_and()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_select_many_and()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_select_many_and()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_select_many_and
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 994
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_select_many_and()
    content.vb: Public Overridable Function Where_select_many_and As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_select_many_and()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_select_many_and()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_primitive
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_primitive
  id: Where_primitive
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_primitive()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_primitive()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_primitive()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_primitive
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1005
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_primitive()
    content.vb: Public Overridable Function Where_primitive As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_primitive()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_primitive()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_primitive_tracked
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_primitive_tracked
  id: Where_primitive_tracked
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_primitive_tracked()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_primitive_tracked()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_primitive_tracked()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_primitive_tracked
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1012
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_primitive_tracked()
    content.vb: Public Overridable Function Where_primitive_tracked As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_primitive_tracked()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_primitive_tracked()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_primitive_tracked2
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_primitive_tracked2
  id: Where_primitive_tracked2
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_primitive_tracked2()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_primitive_tracked2()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_primitive_tracked2()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_primitive_tracked2
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1020
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_primitive_tracked2()
    content.vb: Public Overridable Function Where_primitive_tracked2 As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_primitive_tracked2()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_primitive_tracked2()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_subquery_anon
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_subquery_anon
  id: Where_subquery_anon
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_subquery_anon()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_subquery_anon()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_subquery_anon()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_subquery_anon
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1028
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_subquery_anon()
    content.vb: Public Overridable Function Where_subquery_anon As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_subquery_anon()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_subquery_anon()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_bool_member
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_bool_member
  id: Where_bool_member
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_bool_member()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_bool_member()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_bool_member()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_bool_member
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1038
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_bool_member()
    content.vb: Public Overridable Function Where_bool_member As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_bool_member()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_bool_member()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_bool_member_false
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_bool_member_false
  id: Where_bool_member_false
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_bool_member_false()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_bool_member_false()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_bool_member_false()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_bool_member_false
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1044
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_bool_member_false()
    content.vb: Public Overridable Function Where_bool_member_false As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_bool_member_false()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_bool_member_false()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_bool_member_negated_twice
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_bool_member_negated_twice
  id: Where_bool_member_negated_twice
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_bool_member_negated_twice()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_bool_member_negated_twice()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_bool_member_negated_twice()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_bool_member_negated_twice
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1050
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_bool_member_negated_twice()
    content.vb: Public Overridable Function Where_bool_member_negated_twice As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_bool_member_negated_twice()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_bool_member_negated_twice()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_bool_member_shadow
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_bool_member_shadow
  id: Where_bool_member_shadow
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_bool_member_shadow()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_bool_member_shadow()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_bool_member_shadow()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_bool_member_shadow
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1057
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_bool_member_shadow()
    content.vb: Public Overridable Function Where_bool_member_shadow As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_bool_member_shadow()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_bool_member_shadow()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_bool_member_false_shadow
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_bool_member_false_shadow
  id: Where_bool_member_false_shadow
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_bool_member_false_shadow()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_bool_member_false_shadow()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_bool_member_false_shadow()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_bool_member_false_shadow
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1063
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_bool_member_false_shadow()
    content.vb: Public Overridable Function Where_bool_member_false_shadow As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_bool_member_false_shadow()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_bool_member_false_shadow()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_bool_member_equals_constant
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_bool_member_equals_constant
  id: Where_bool_member_equals_constant
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_bool_member_equals_constant()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_bool_member_equals_constant()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_bool_member_equals_constant()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_bool_member_equals_constant
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1069
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_bool_member_equals_constant()
    content.vb: Public Overridable Function Where_bool_member_equals_constant As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_bool_member_equals_constant()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_bool_member_equals_constant()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_bool_member_in_complex_predicate
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_bool_member_in_complex_predicate
  id: Where_bool_member_in_complex_predicate
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_bool_member_in_complex_predicate()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_bool_member_in_complex_predicate()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_bool_member_in_complex_predicate()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_bool_member_in_complex_predicate
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1075
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_bool_member_in_complex_predicate()
    content.vb: Public Overridable Function Where_bool_member_in_complex_predicate As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_bool_member_in_complex_predicate()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_bool_member_in_complex_predicate()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_bool_member_compared_to_binary_expression
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_bool_member_compared_to_binary_expression
  id: Where_bool_member_compared_to_binary_expression
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_bool_member_compared_to_binary_expression()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_bool_member_compared_to_binary_expression()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_bool_member_compared_to_binary_expression()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_bool_member_compared_to_binary_expression
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1082
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_bool_member_compared_to_binary_expression()
    content.vb: Public Overridable Function Where_bool_member_compared_to_binary_expression As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_bool_member_compared_to_binary_expression()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_bool_member_compared_to_binary_expression()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_not_bool_member_compared_to_not_bool_member
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_not_bool_member_compared_to_not_bool_member
  id: Where_not_bool_member_compared_to_not_bool_member
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_not_bool_member_compared_to_not_bool_member()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_not_bool_member_compared_to_not_bool_member()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_not_bool_member_compared_to_not_bool_member()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_not_bool_member_compared_to_not_bool_member
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1088
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_not_bool_member_compared_to_not_bool_member()
    content.vb: Public Overridable Function Where_not_bool_member_compared_to_not_bool_member As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_not_bool_member_compared_to_not_bool_member()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_not_bool_member_compared_to_not_bool_member()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_negated_boolean_expression_compared_to_another_negated_boolean_expression
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_negated_boolean_expression_compared_to_another_negated_boolean_expression
  id: Where_negated_boolean_expression_compared_to_another_negated_boolean_expression
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_negated_boolean_expression_compared_to_another_negated_boolean_expression()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_negated_boolean_expression_compared_to_another_negated_boolean_expression()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_negated_boolean_expression_compared_to_another_negated_boolean_expression()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_negated_boolean_expression_compared_to_another_negated_boolean_expression
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1095
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_negated_boolean_expression_compared_to_another_negated_boolean_expression()
    content.vb: Public Overridable Function Where_negated_boolean_expression_compared_to_another_negated_boolean_expression As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_negated_boolean_expression_compared_to_another_negated_boolean_expression()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_negated_boolean_expression_compared_to_another_negated_boolean_expression()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_not_bool_member_compared_to_binary_expression
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_not_bool_member_compared_to_binary_expression
  id: Where_not_bool_member_compared_to_binary_expression
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_not_bool_member_compared_to_binary_expression()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_not_bool_member_compared_to_binary_expression()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_not_bool_member_compared_to_binary_expression()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_not_bool_member_compared_to_binary_expression
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1101
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_not_bool_member_compared_to_binary_expression()
    content.vb: Public Overridable Function Where_not_bool_member_compared_to_binary_expression As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_not_bool_member_compared_to_binary_expression()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_not_bool_member_compared_to_binary_expression()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_bool_parameter
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_bool_parameter
  id: Where_bool_parameter
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_bool_parameter()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_bool_parameter()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_bool_parameter()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_bool_parameter
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1107
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_bool_parameter()
    content.vb: Public Overridable Function Where_bool_parameter As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_bool_parameter()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_bool_parameter()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_bool_parameter_compared_to_binary_expression
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_bool_parameter_compared_to_binary_expression
  id: Where_bool_parameter_compared_to_binary_expression
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_bool_parameter_compared_to_binary_expression()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_bool_parameter_compared_to_binary_expression()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_bool_parameter_compared_to_binary_expression()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_bool_parameter_compared_to_binary_expression
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1114
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_bool_parameter_compared_to_binary_expression()
    content.vb: Public Overridable Function Where_bool_parameter_compared_to_binary_expression As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_bool_parameter_compared_to_binary_expression()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_bool_parameter_compared_to_binary_expression()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_bool_member_and_parameter_compared_to_binary_expression_nested
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_bool_member_and_parameter_compared_to_binary_expression_nested
  id: Where_bool_member_and_parameter_compared_to_binary_expression_nested
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_bool_member_and_parameter_compared_to_binary_expression_nested()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_bool_member_and_parameter_compared_to_binary_expression_nested()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_bool_member_and_parameter_compared_to_binary_expression_nested()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_bool_member_and_parameter_compared_to_binary_expression_nested
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1121
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_bool_member_and_parameter_compared_to_binary_expression_nested()
    content.vb: Public Overridable Function Where_bool_member_and_parameter_compared_to_binary_expression_nested As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_bool_member_and_parameter_compared_to_binary_expression_nested()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_bool_member_and_parameter_compared_to_binary_expression_nested()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_de_morgan_or_optimizated
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_de_morgan_or_optimizated
  id: Where_de_morgan_or_optimizated
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_de_morgan_or_optimizated()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_de_morgan_or_optimizated()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_de_morgan_or_optimizated()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_de_morgan_or_optimizated
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1128
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_de_morgan_or_optimizated()
    content.vb: Public Overridable Function Where_de_morgan_or_optimizated As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_de_morgan_or_optimizated()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_de_morgan_or_optimizated()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_de_morgan_and_optimizated
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_de_morgan_and_optimizated
  id: Where_de_morgan_and_optimizated
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_de_morgan_and_optimizated()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_de_morgan_and_optimizated()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_de_morgan_and_optimizated()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_de_morgan_and_optimizated
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1134
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_de_morgan_and_optimizated()
    content.vb: Public Overridable Function Where_de_morgan_and_optimizated As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_de_morgan_and_optimizated()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_de_morgan_and_optimizated()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_complex_negated_expression_optimized
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_complex_negated_expression_optimized
  id: Where_complex_negated_expression_optimized
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_complex_negated_expression_optimized()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_complex_negated_expression_optimized()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_complex_negated_expression_optimized()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_complex_negated_expression_optimized
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1140
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_complex_negated_expression_optimized()
    content.vb: Public Overridable Function Where_complex_negated_expression_optimized As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_complex_negated_expression_optimized()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_complex_negated_expression_optimized()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_short_member_comparison
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_short_member_comparison
  id: Where_short_member_comparison
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_short_member_comparison()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_short_member_comparison()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_short_member_comparison()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_short_member_comparison
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1146
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_short_member_comparison()
    content.vb: Public Overridable Function Where_short_member_comparison As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_short_member_comparison()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_short_member_comparison()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_true
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_true
  id: Where_true
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_true()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_true()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_true()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_true
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1152
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_true()
    content.vb: Public Overridable Function Where_true As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_true()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_true()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_false
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_false
  id: Where_false
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_false()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_false()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_false()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_false
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1160
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_false()
    content.vb: Public Overridable Function Where_false As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_false()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_false()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_bool_closure
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_bool_closure
  id: Where_bool_closure
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_bool_closure()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_bool_closure()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_bool_closure()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_bool_closure
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1167
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_bool_closure()
    content.vb: Public Overridable Function Where_bool_closure As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_bool_closure()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_bool_closure()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_bool_closure
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_bool_closure
  id: Select_bool_closure
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Select_bool_closure()
  nameWithType: AsyncQueryTestBase<TFixture>.Select_bool_closure()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Select_bool_closure()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Select_bool_closure
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1182
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Select_bool_closure()
    content.vb: Public Overridable Function Select_bool_closure As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Select_bool_closure()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Select_bool_closure()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_compare_constructed_equal
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_compare_constructed_equal
  id: Where_compare_constructed_equal
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_compare_constructed_equal()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_compare_constructed_equal()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_compare_constructed_equal()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_compare_constructed_equal
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1237
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_compare_constructed_equal()
    content.vb: Public Overridable Function Where_compare_constructed_equal As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_compare_constructed_equal()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_compare_constructed_equal()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_compare_constructed_multi_value_equal
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_compare_constructed_multi_value_equal
  id: Where_compare_constructed_multi_value_equal
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_compare_constructed_multi_value_equal()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_compare_constructed_multi_value_equal()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_compare_constructed_multi_value_equal()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_compare_constructed_multi_value_equal
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1244
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_compare_constructed_multi_value_equal()
    content.vb: Public Overridable Function Where_compare_constructed_multi_value_equal As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_compare_constructed_multi_value_equal()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_compare_constructed_multi_value_equal()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_compare_constructed_multi_value_not_equal
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_compare_constructed_multi_value_not_equal
  id: Where_compare_constructed_multi_value_not_equal
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_compare_constructed_multi_value_not_equal()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_compare_constructed_multi_value_not_equal()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_compare_constructed_multi_value_not_equal()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_compare_constructed_multi_value_not_equal
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1251
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_compare_constructed_multi_value_not_equal()
    content.vb: Public Overridable Function Where_compare_constructed_multi_value_not_equal As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_compare_constructed_multi_value_not_equal()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_compare_constructed_multi_value_not_equal()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_compare_constructed
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_compare_constructed
  id: Where_compare_constructed
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_compare_constructed()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_compare_constructed()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_compare_constructed()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_compare_constructed
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1259
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_compare_constructed()
    content.vb: Public Overridable Function Where_compare_constructed As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_compare_constructed()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_compare_constructed()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_compare_null
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_compare_null
  id: Where_compare_null
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_compare_null()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_compare_null()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_compare_null()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_compare_null
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1266
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_compare_null()
    content.vb: Public Overridable Function Where_compare_null As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_compare_null()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_compare_null()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_projection
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_projection
  id: Where_projection
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_projection()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_projection()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_projection()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_projection
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1273
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_projection()
    content.vb: Public Overridable Function Where_projection As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_projection()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_projection()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_scalar
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_scalar
  id: Select_scalar
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Select_scalar()
  nameWithType: AsyncQueryTestBase<TFixture>.Select_scalar()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Select_scalar()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Select_scalar
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1280
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Select_scalar()
    content.vb: Public Overridable Function Select_scalar As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Select_scalar()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Select_scalar()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_anonymous_one
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_anonymous_one
  id: Select_anonymous_one
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Select_anonymous_one()
  nameWithType: AsyncQueryTestBase<TFixture>.Select_anonymous_one()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Select_anonymous_one()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Select_anonymous_one
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1287
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Select_anonymous_one()
    content.vb: Public Overridable Function Select_anonymous_one As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Select_anonymous_one()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Select_anonymous_one()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_anonymous_two
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_anonymous_two
  id: Select_anonymous_two
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Select_anonymous_two()
  nameWithType: AsyncQueryTestBase<TFixture>.Select_anonymous_two()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Select_anonymous_two()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Select_anonymous_two
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1294
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Select_anonymous_two()
    content.vb: Public Overridable Function Select_anonymous_two As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Select_anonymous_two()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Select_anonymous_two()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_anonymous_three
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_anonymous_three
  id: Select_anonymous_three
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Select_anonymous_three()
  nameWithType: AsyncQueryTestBase<TFixture>.Select_anonymous_three()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Select_anonymous_three()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Select_anonymous_three
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1301
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Select_anonymous_three()
    content.vb: Public Overridable Function Select_anonymous_three As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Select_anonymous_three()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Select_anonymous_three()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_anonymous_conditional_expression
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_anonymous_conditional_expression
  id: Select_anonymous_conditional_expression
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Select_anonymous_conditional_expression()
  nameWithType: AsyncQueryTestBase<TFixture>.Select_anonymous_conditional_expression()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Select_anonymous_conditional_expression()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Select_anonymous_conditional_expression
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1308
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Select_anonymous_conditional_expression()
    content.vb: Public Overridable Function Select_anonymous_conditional_expression As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Select_anonymous_conditional_expression()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Select_anonymous_conditional_expression()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_customer_table
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_customer_table
  id: Select_customer_table
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Select_customer_table()
  nameWithType: AsyncQueryTestBase<TFixture>.Select_customer_table()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Select_customer_table()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Select_customer_table
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1315
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Select_customer_table()
    content.vb: Public Overridable Function Select_customer_table As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Select_customer_table()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Select_customer_table()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_customer_identity
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_customer_identity
  id: Select_customer_identity
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Select_customer_identity()
  nameWithType: AsyncQueryTestBase<TFixture>.Select_customer_identity()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Select_customer_identity()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Select_customer_identity
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1323
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Select_customer_identity()
    content.vb: Public Overridable Function Select_customer_identity As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Select_customer_identity()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Select_customer_identity()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_anonymous_with_object
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_anonymous_with_object
  id: Select_anonymous_with_object
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Select_anonymous_with_object()
  nameWithType: AsyncQueryTestBase<TFixture>.Select_anonymous_with_object()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Select_anonymous_with_object()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Select_anonymous_with_object
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1331
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Select_anonymous_with_object()
    content.vb: Public Overridable Function Select_anonymous_with_object As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Select_anonymous_with_object()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Select_anonymous_with_object()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_anonymous_nested
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_anonymous_nested
  id: Select_anonymous_nested
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Select_anonymous_nested()
  nameWithType: AsyncQueryTestBase<TFixture>.Select_anonymous_nested()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Select_anonymous_nested()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Select_anonymous_nested
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1339
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Select_anonymous_nested()
    content.vb: Public Overridable Function Select_anonymous_nested As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Select_anonymous_nested()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Select_anonymous_nested()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_anonymous_empty
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_anonymous_empty
  id: Select_anonymous_empty
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Select_anonymous_empty()
  nameWithType: AsyncQueryTestBase<TFixture>.Select_anonymous_empty()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Select_anonymous_empty()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Select_anonymous_empty
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1346
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Select_anonymous_empty()
    content.vb: Public Overridable Function Select_anonymous_empty As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Select_anonymous_empty()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Select_anonymous_empty()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_anonymous_literal
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_anonymous_literal
  id: Select_anonymous_literal
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Select_anonymous_literal()
  nameWithType: AsyncQueryTestBase<TFixture>.Select_anonymous_literal()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Select_anonymous_literal()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Select_anonymous_literal
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1353
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Select_anonymous_literal()
    content.vb: Public Overridable Function Select_anonymous_literal As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Select_anonymous_literal()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Select_anonymous_literal()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_constant_int
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_constant_int
  id: Select_constant_int
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Select_constant_int()
  nameWithType: AsyncQueryTestBase<TFixture>.Select_constant_int()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Select_constant_int()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Select_constant_int
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1359
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Select_constant_int()
    content.vb: Public Overridable Function Select_constant_int As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Select_constant_int()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Select_constant_int()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_constant_null_string
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_constant_null_string
  id: Select_constant_null_string
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Select_constant_null_string()
  nameWithType: AsyncQueryTestBase<TFixture>.Select_constant_null_string()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Select_constant_null_string()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Select_constant_null_string
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1365
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Select_constant_null_string()
    content.vb: Public Overridable Function Select_constant_null_string As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Select_constant_null_string()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Select_constant_null_string()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_local
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_local
  id: Select_local
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Select_local()
  nameWithType: AsyncQueryTestBase<TFixture>.Select_local()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Select_local()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Select_local
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1371
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Select_local()
    content.vb: Public Overridable Function Select_local As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Select_local()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Select_local()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_scalar_primitive
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_scalar_primitive
  id: Select_scalar_primitive
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Select_scalar_primitive()
  nameWithType: AsyncQueryTestBase<TFixture>.Select_scalar_primitive()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Select_scalar_primitive()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Select_scalar_primitive
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1380
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Select_scalar_primitive()
    content.vb: Public Overridable Function Select_scalar_primitive As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Select_scalar_primitive()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Select_scalar_primitive()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_scalar_primitive_after_take
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_scalar_primitive_after_take
  id: Select_scalar_primitive_after_take
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Select_scalar_primitive_after_take()
  nameWithType: AsyncQueryTestBase<TFixture>.Select_scalar_primitive_after_take()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Select_scalar_primitive_after_take()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Select_scalar_primitive_after_take
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1387
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Select_scalar_primitive_after_take()
    content.vb: Public Overridable Function Select_scalar_primitive_after_take As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Select_scalar_primitive_after_take()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Select_scalar_primitive_after_take()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_project_filter
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_project_filter
  id: Select_project_filter
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Select_project_filter()
  nameWithType: AsyncQueryTestBase<TFixture>.Select_project_filter()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Select_project_filter()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Select_project_filter
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1394
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Select_project_filter()
    content.vb: Public Overridable Function Select_project_filter As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Select_project_filter()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Select_project_filter()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_project_filter2
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_project_filter2
  id: Select_project_filter2
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Select_project_filter2()
  nameWithType: AsyncQueryTestBase<TFixture>.Select_project_filter2()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Select_project_filter2()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Select_project_filter2
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1404
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Select_project_filter2()
    content.vb: Public Overridable Function Select_project_filter2 As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Select_project_filter2()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Select_project_filter2()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_nested_collection
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_nested_collection
  id: Select_nested_collection
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Select_nested_collection()
  nameWithType: AsyncQueryTestBase<TFixture>.Select_nested_collection()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Select_nested_collection()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Select_nested_collection
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1414
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Select_nested_collection()
    content.vb: Public Overridable Function Select_nested_collection As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Select_nested_collection()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Select_nested_collection()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_correlated_subquery_projection
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_correlated_subquery_projection
  id: Select_correlated_subquery_projection
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Select_correlated_subquery_projection()
  nameWithType: AsyncQueryTestBase<TFixture>.Select_correlated_subquery_projection()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Select_correlated_subquery_projection()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Select_correlated_subquery_projection
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1441
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Select_correlated_subquery_projection()
    content.vb: Public Overridable Function Select_correlated_subquery_projection As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Select_correlated_subquery_projection()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Select_correlated_subquery_projection()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_correlated_subquery_filtered
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_correlated_subquery_filtered
  id: Select_correlated_subquery_filtered
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Select_correlated_subquery_filtered()
  nameWithType: AsyncQueryTestBase<TFixture>.Select_correlated_subquery_filtered()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Select_correlated_subquery_filtered()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Select_correlated_subquery_filtered
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1465
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Select_correlated_subquery_filtered()
    content.vb: Public Overridable Function Select_correlated_subquery_filtered As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Select_correlated_subquery_filtered()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Select_correlated_subquery_filtered()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_correlated_subquery_ordered
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_correlated_subquery_ordered
  id: Select_correlated_subquery_ordered
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Select_correlated_subquery_ordered()
  nameWithType: AsyncQueryTestBase<TFixture>.Select_correlated_subquery_ordered()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Select_correlated_subquery_ordered()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Select_correlated_subquery_ordered
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1488
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Select_correlated_subquery_ordered()
    content.vb: Public Overridable Function Select_correlated_subquery_ordered As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Select_correlated_subquery_ordered()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Select_correlated_subquery_ordered()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_nested_collection_in_anonymous_type
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_nested_collection_in_anonymous_type
  id: Select_nested_collection_in_anonymous_type
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Select_nested_collection_in_anonymous_type()
  nameWithType: AsyncQueryTestBase<TFixture>.Select_nested_collection_in_anonymous_type()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Select_nested_collection_in_anonymous_type()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Select_nested_collection_in_anonymous_type
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1520
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Select_nested_collection_in_anonymous_type()
    content.vb: Public Overridable Function Select_nested_collection_in_anonymous_type As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Select_nested_collection_in_anonymous_type()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Select_nested_collection_in_anonymous_type()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_subquery_recursive_trivial
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_subquery_recursive_trivial
  id: Select_subquery_recursive_trivial
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Select_subquery_recursive_trivial()
  nameWithType: AsyncQueryTestBase<TFixture>.Select_subquery_recursive_trivial()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Select_subquery_recursive_trivial()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Select_subquery_recursive_trivial
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1548
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Select_subquery_recursive_trivial()
    content.vb: Public Overridable Function Select_subquery_recursive_trivial As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Select_subquery_recursive_trivial()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Select_subquery_recursive_trivial()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_subquery_on_collection
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_subquery_on_collection
  id: Where_subquery_on_collection
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_subquery_on_collection()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_subquery_on_collection()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_subquery_on_collection()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_subquery_on_collection
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1576
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_subquery_on_collection()
    content.vb: Public Overridable Function Where_subquery_on_collection As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_subquery_on_collection()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_subquery_on_collection()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_query_composition
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_query_composition
  id: Where_query_composition
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_query_composition()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_query_composition()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_query_composition()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_query_composition
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1584
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_query_composition()
    content.vb: Public Overridable Function Where_query_composition As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_query_composition()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_query_composition()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_subquery_recursive_trivial
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_subquery_recursive_trivial
  id: Where_subquery_recursive_trivial
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_subquery_recursive_trivial()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_subquery_recursive_trivial()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_subquery_recursive_trivial()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_subquery_recursive_trivial
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1595
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_subquery_recursive_trivial()
    content.vb: Public Overridable Function Where_subquery_recursive_trivial As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_subquery_recursive_trivial()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_subquery_recursive_trivial()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_nested_collection_deep
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_nested_collection_deep
  id: Select_nested_collection_deep
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Select_nested_collection_deep()
  nameWithType: AsyncQueryTestBase<TFixture>.Select_nested_collection_deep()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Select_nested_collection_deep()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Select_nested_collection_deep
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1612
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Select_nested_collection_deep()
    content.vb: Public Overridable Function Select_nested_collection_deep As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Select_nested_collection_deep()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Select_nested_collection_deep()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_scalar_primitive
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_scalar_primitive
  id: OrderBy_scalar_primitive
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: OrderBy_scalar_primitive()
  nameWithType: AsyncQueryTestBase<TFixture>.OrderBy_scalar_primitive()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.OrderBy_scalar_primitive()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: OrderBy_scalar_primitive
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1644
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task OrderBy_scalar_primitive()
    content.vb: Public Overridable Function OrderBy_scalar_primitive As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).OrderBy_scalar_primitive()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).OrderBy_scalar_primitive()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.SelectMany_mixed
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.SelectMany_mixed
  id: SelectMany_mixed
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: SelectMany_mixed()
  nameWithType: AsyncQueryTestBase<TFixture>.SelectMany_mixed()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.SelectMany_mixed()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: SelectMany_mixed
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1653
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task SelectMany_mixed()
    content.vb: Public Overridable Function SelectMany_mixed As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).SelectMany_mixed()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).SelectMany_mixed()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.SelectMany_simple1
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.SelectMany_simple1
  id: SelectMany_simple1
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: SelectMany_simple1()
  nameWithType: AsyncQueryTestBase<TFixture>.SelectMany_simple1()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.SelectMany_simple1()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: SelectMany_simple1
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1663
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task SelectMany_simple1()
    content.vb: Public Overridable Function SelectMany_simple1 As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).SelectMany_simple1()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).SelectMany_simple1()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.SelectMany_simple2
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.SelectMany_simple2
  id: SelectMany_simple2
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: SelectMany_simple2()
  nameWithType: AsyncQueryTestBase<TFixture>.SelectMany_simple2()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.SelectMany_simple2()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: SelectMany_simple2
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1672
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task SelectMany_simple2()
    content.vb: Public Overridable Function SelectMany_simple2 As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).SelectMany_simple2()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).SelectMany_simple2()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.SelectMany_entity_deep
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.SelectMany_entity_deep
  id: SelectMany_entity_deep
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: SelectMany_entity_deep()
  nameWithType: AsyncQueryTestBase<TFixture>.SelectMany_entity_deep()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.SelectMany_entity_deep()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: SelectMany_entity_deep
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1682
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task SelectMany_entity_deep()
    content.vb: Public Overridable Function SelectMany_entity_deep As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).SelectMany_entity_deep()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).SelectMany_entity_deep()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.SelectMany_projection1
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.SelectMany_projection1
  id: SelectMany_projection1
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: SelectMany_projection1()
  nameWithType: AsyncQueryTestBase<TFixture>.SelectMany_projection1()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.SelectMany_projection1()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: SelectMany_projection1
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1694
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task SelectMany_projection1()
    content.vb: Public Overridable Function SelectMany_projection1 As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).SelectMany_projection1()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).SelectMany_projection1()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.SelectMany_projection2
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.SelectMany_projection2
  id: SelectMany_projection2
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: SelectMany_projection2()
  nameWithType: AsyncQueryTestBase<TFixture>.SelectMany_projection2()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.SelectMany_projection2()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: SelectMany_projection2
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1703
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task SelectMany_projection2()
    content.vb: Public Overridable Function SelectMany_projection2 As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).SelectMany_projection2()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).SelectMany_projection2()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.SelectMany_nested_simple
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.SelectMany_nested_simple
  id: SelectMany_nested_simple
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: SelectMany_nested_simple()
  nameWithType: AsyncQueryTestBase<TFixture>.SelectMany_nested_simple()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.SelectMany_nested_simple()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: SelectMany_nested_simple
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1713
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task SelectMany_nested_simple()
    content.vb: Public Overridable Function SelectMany_nested_simple As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).SelectMany_nested_simple()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).SelectMany_nested_simple()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.SelectMany_correlated_simple
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.SelectMany_correlated_simple
  id: SelectMany_correlated_simple
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: SelectMany_correlated_simple()
  nameWithType: AsyncQueryTestBase<TFixture>.SelectMany_correlated_simple()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.SelectMany_correlated_simple()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: SelectMany_correlated_simple
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1727
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task SelectMany_correlated_simple()
    content.vb: Public Overridable Function SelectMany_correlated_simple As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).SelectMany_correlated_simple()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).SelectMany_correlated_simple()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.SelectMany_correlated_subquery_simple
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.SelectMany_correlated_subquery_simple
  id: SelectMany_correlated_subquery_simple
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: SelectMany_correlated_subquery_simple()
  nameWithType: AsyncQueryTestBase<TFixture>.SelectMany_correlated_subquery_simple()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.SelectMany_correlated_subquery_simple()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: SelectMany_correlated_subquery_simple
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1739
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task SelectMany_correlated_subquery_simple()
    content.vb: Public Overridable Function SelectMany_correlated_subquery_simple As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).SelectMany_correlated_subquery_simple()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).SelectMany_correlated_subquery_simple()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.SelectMany_correlated_subquery_hard
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.SelectMany_correlated_subquery_hard
  id: SelectMany_correlated_subquery_hard
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: SelectMany_correlated_subquery_hard()
  nameWithType: AsyncQueryTestBase<TFixture>.SelectMany_correlated_subquery_hard()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.SelectMany_correlated_subquery_hard()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: SelectMany_correlated_subquery_hard
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1751
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task SelectMany_correlated_subquery_hard()
    content.vb: Public Overridable Function SelectMany_correlated_subquery_hard As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).SelectMany_correlated_subquery_hard()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).SelectMany_correlated_subquery_hard()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.SelectMany_cartesian_product_with_ordering
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.SelectMany_cartesian_product_with_ordering
  id: SelectMany_cartesian_product_with_ordering
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: SelectMany_cartesian_product_with_ordering()
  nameWithType: AsyncQueryTestBase<TFixture>.SelectMany_cartesian_product_with_ordering()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.SelectMany_cartesian_product_with_ordering()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: SelectMany_cartesian_product_with_ordering
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1765
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task SelectMany_cartesian_product_with_ordering()
    content.vb: Public Overridable Function SelectMany_cartesian_product_with_ordering As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).SelectMany_cartesian_product_with_ordering()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).SelectMany_cartesian_product_with_ordering()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.SelectMany_primitive
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.SelectMany_primitive
  id: SelectMany_primitive
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: SelectMany_primitive()
  nameWithType: AsyncQueryTestBase<TFixture>.SelectMany_primitive()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.SelectMany_primitive()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: SelectMany_primitive
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1778
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task SelectMany_primitive()
    content.vb: Public Overridable Function SelectMany_primitive As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).SelectMany_primitive()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).SelectMany_primitive()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.SelectMany_primitive_select_subquery
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.SelectMany_primitive_select_subquery
  id: SelectMany_primitive_select_subquery
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: SelectMany_primitive_select_subquery()
  nameWithType: AsyncQueryTestBase<TFixture>.SelectMany_primitive_select_subquery()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.SelectMany_primitive_select_subquery()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: SelectMany_primitive_select_subquery
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1788
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task SelectMany_primitive_select_subquery()
    content.vb: Public Overridable Function SelectMany_primitive_select_subquery As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).SelectMany_primitive_select_subquery()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).SelectMany_primitive_select_subquery()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Join_customers_orders_projection
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Join_customers_orders_projection
  id: Join_customers_orders_projection
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Join_customers_orders_projection()
  nameWithType: AsyncQueryTestBase<TFixture>.Join_customers_orders_projection()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Join_customers_orders_projection()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Join_customers_orders_projection
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1798
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Join_customers_orders_projection()
    content.vb: Public Overridable Function Join_customers_orders_projection As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Join_customers_orders_projection()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Join_customers_orders_projection()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Join_customers_orders_entities
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Join_customers_orders_entities
  id: Join_customers_orders_entities
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Join_customers_orders_entities()
  nameWithType: AsyncQueryTestBase<TFixture>.Join_customers_orders_entities()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Join_customers_orders_entities()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Join_customers_orders_entities
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1807
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Join_customers_orders_entities()
    content.vb: Public Overridable Function Join_customers_orders_entities As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Join_customers_orders_entities()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Join_customers_orders_entities()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Join_select_many
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Join_select_many
  id: Join_select_many
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Join_select_many()
  nameWithType: AsyncQueryTestBase<TFixture>.Join_select_many()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Join_select_many()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Join_select_many
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1816
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Join_select_many()
    content.vb: Public Overridable Function Join_select_many As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Join_select_many()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Join_select_many()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Join_customers_orders_select
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Join_customers_orders_select
  id: Join_customers_orders_select
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Join_customers_orders_select()
  nameWithType: AsyncQueryTestBase<TFixture>.Join_customers_orders_select()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Join_customers_orders_select()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Join_customers_orders_select
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1826
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Join_customers_orders_select()
    content.vb: Public Overridable Function Join_customers_orders_select As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Join_customers_orders_select()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Join_customers_orders_select()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Join_customers_orders_with_subquery
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Join_customers_orders_with_subquery
  id: Join_customers_orders_with_subquery
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Join_customers_orders_with_subquery()
  nameWithType: AsyncQueryTestBase<TFixture>.Join_customers_orders_with_subquery()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Join_customers_orders_with_subquery()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Join_customers_orders_with_subquery
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1837
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Join_customers_orders_with_subquery()
    content.vb: Public Overridable Function Join_customers_orders_with_subquery As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Join_customers_orders_with_subquery()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Join_customers_orders_with_subquery()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Join_customers_orders_with_subquery_anonymous_property_method
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Join_customers_orders_with_subquery_anonymous_property_method
  id: Join_customers_orders_with_subquery_anonymous_property_method
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Join_customers_orders_with_subquery_anonymous_property_method()
  nameWithType: AsyncQueryTestBase<TFixture>.Join_customers_orders_with_subquery_anonymous_property_method()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Join_customers_orders_with_subquery_anonymous_property_method()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Join_customers_orders_with_subquery_anonymous_property_method
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1848
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Join_customers_orders_with_subquery_anonymous_property_method()
    content.vb: Public Overridable Function Join_customers_orders_with_subquery_anonymous_property_method As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Join_customers_orders_with_subquery_anonymous_property_method()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Join_customers_orders_with_subquery_anonymous_property_method()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Join_customers_orders_with_subquery_predicate
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Join_customers_orders_with_subquery_predicate
  id: Join_customers_orders_with_subquery_predicate
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Join_customers_orders_with_subquery_predicate()
  nameWithType: AsyncQueryTestBase<TFixture>.Join_customers_orders_with_subquery_predicate()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Join_customers_orders_with_subquery_predicate()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Join_customers_orders_with_subquery_predicate
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1859
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Join_customers_orders_with_subquery_predicate()
    content.vb: Public Overridable Function Join_customers_orders_with_subquery_predicate As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Join_customers_orders_with_subquery_predicate()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Join_customers_orders_with_subquery_predicate()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Join_composite_key
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Join_composite_key
  id: Join_composite_key
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Join_composite_key()
  nameWithType: AsyncQueryTestBase<TFixture>.Join_composite_key()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Join_composite_key()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Join_composite_key
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1870
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Join_composite_key()
    content.vb: Public Overridable Function Join_composite_key As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Join_composite_key()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Join_composite_key()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Join_client_new_expression
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Join_client_new_expression
  id: Join_client_new_expression
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Join_client_new_expression()
  nameWithType: AsyncQueryTestBase<TFixture>.Join_client_new_expression()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Join_client_new_expression()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Join_client_new_expression
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1880
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Join_client_new_expression()
    content.vb: Public Overridable Function Join_client_new_expression As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Join_client_new_expression()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Join_client_new_expression()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Join_Where_Count
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Join_Where_Count
  id: Join_Where_Count
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Join_Where_Count()
  nameWithType: AsyncQueryTestBase<TFixture>.Join_Where_Count()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Join_Where_Count()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Join_Where_Count
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1889
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Join_Where_Count()
    content.vb: Public Overridable Function Join_Where_Count As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Join_Where_Count()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Join_Where_Count()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Multiple_joins_Where_Order_Any
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Multiple_joins_Where_Order_Any
  id: Multiple_joins_Where_Order_Any
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Multiple_joins_Where_Order_Any()
  nameWithType: AsyncQueryTestBase<TFixture>.Multiple_joins_Where_Order_Any()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Multiple_joins_Where_Order_Any()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Multiple_joins_Where_Order_Any
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1899
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Multiple_joins_Where_Order_Any()
    content.vb: Public Overridable Function Multiple_joins_Where_Order_Any As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Multiple_joins_Where_Order_Any()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Multiple_joins_Where_Order_Any()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Join_OrderBy_Count
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Join_OrderBy_Count
  id: Join_OrderBy_Count
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Join_OrderBy_Count()
  nameWithType: AsyncQueryTestBase<TFixture>.Join_OrderBy_Count()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Join_OrderBy_Count()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Join_OrderBy_Count
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1909
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Join_OrderBy_Count()
    content.vb: Public Overridable Function Join_OrderBy_Count As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Join_OrderBy_Count()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Join_OrderBy_Count()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupJoin_customers_orders
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupJoin_customers_orders
  id: GroupJoin_customers_orders
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: GroupJoin_customers_orders()
  nameWithType: AsyncQueryTestBase<TFixture>.GroupJoin_customers_orders()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.GroupJoin_customers_orders()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GroupJoin_customers_orders
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1925
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task GroupJoin_customers_orders()
    content.vb: Public Overridable Function GroupJoin_customers_orders As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).GroupJoin_customers_orders()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).GroupJoin_customers_orders()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupJoin_customers_orders_count
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupJoin_customers_orders_count
  id: GroupJoin_customers_orders_count
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: GroupJoin_customers_orders_count()
  nameWithType: AsyncQueryTestBase<TFixture>.GroupJoin_customers_orders_count()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.GroupJoin_customers_orders_count()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GroupJoin_customers_orders_count
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1944
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task GroupJoin_customers_orders_count()
    content.vb: Public Overridable Function GroupJoin_customers_orders_count As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).GroupJoin_customers_orders_count()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).GroupJoin_customers_orders_count()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Default_if_empty_top_level
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Default_if_empty_top_level
  id: Default_if_empty_top_level
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Default_if_empty_top_level()
  nameWithType: AsyncQueryTestBase<TFixture>.Default_if_empty_top_level()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Default_if_empty_top_level()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Default_if_empty_top_level
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1953
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Default_if_empty_top_level()
    content.vb: Public Overridable Function Default_if_empty_top_level As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Default_if_empty_top_level()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Default_if_empty_top_level()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Default_if_empty_top_level_arg
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Default_if_empty_top_level_arg
  id: Default_if_empty_top_level_arg
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Default_if_empty_top_level_arg()
  nameWithType: AsyncQueryTestBase<TFixture>.Default_if_empty_top_level_arg()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Default_if_empty_top_level_arg()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Default_if_empty_top_level_arg
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1961
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Default_if_empty_top_level_arg()
    content.vb: Public Overridable Function Default_if_empty_top_level_arg As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Default_if_empty_top_level_arg()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Default_if_empty_top_level_arg()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Default_if_empty_top_level_positive
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Default_if_empty_top_level_positive
  id: Default_if_empty_top_level_positive
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Default_if_empty_top_level_positive()
  nameWithType: AsyncQueryTestBase<TFixture>.Default_if_empty_top_level_positive()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Default_if_empty_top_level_positive()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Default_if_empty_top_level_positive
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1970
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Default_if_empty_top_level_positive()
    content.vb: Public Overridable Function Default_if_empty_top_level_positive As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Default_if_empty_top_level_positive()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Default_if_empty_top_level_positive()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Default_if_empty_top_level_projection
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Default_if_empty_top_level_projection
  id: Default_if_empty_top_level_projection
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Default_if_empty_top_level_projection()
  nameWithType: AsyncQueryTestBase<TFixture>.Default_if_empty_top_level_projection()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Default_if_empty_top_level_projection()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Default_if_empty_top_level_projection
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1979
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Default_if_empty_top_level_projection()
    content.vb: Public Overridable Function Default_if_empty_top_level_projection As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Default_if_empty_top_level_projection()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Default_if_empty_top_level_projection()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupJoin_customers_employees_shadow
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupJoin_customers_employees_shadow
  id: GroupJoin_customers_employees_shadow
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: GroupJoin_customers_employees_shadow()
  nameWithType: AsyncQueryTestBase<TFixture>.GroupJoin_customers_employees_shadow()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.GroupJoin_customers_employees_shadow()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GroupJoin_customers_employees_shadow
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 1987
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task GroupJoin_customers_employees_shadow()
    content.vb: Public Overridable Function GroupJoin_customers_employees_shadow As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).GroupJoin_customers_employees_shadow()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).GroupJoin_customers_employees_shadow()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupJoin_customers_employees_subquery_shadow
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupJoin_customers_employees_subquery_shadow
  id: GroupJoin_customers_employees_subquery_shadow
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: GroupJoin_customers_employees_subquery_shadow()
  nameWithType: AsyncQueryTestBase<TFixture>.GroupJoin_customers_employees_subquery_shadow()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.GroupJoin_customers_employees_subquery_shadow()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GroupJoin_customers_employees_subquery_shadow
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2003
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task GroupJoin_customers_employees_subquery_shadow()
    content.vb: Public Overridable Function GroupJoin_customers_employees_subquery_shadow As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).GroupJoin_customers_employees_subquery_shadow()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).GroupJoin_customers_employees_subquery_shadow()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.SelectMany_customer_orders
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.SelectMany_customer_orders
  id: SelectMany_customer_orders
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: SelectMany_customer_orders()
  nameWithType: AsyncQueryTestBase<TFixture>.SelectMany_customer_orders()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.SelectMany_customer_orders()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: SelectMany_customer_orders
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2019
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task SelectMany_customer_orders()
    content.vb: Public Overridable Function SelectMany_customer_orders As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).SelectMany_customer_orders()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).SelectMany_customer_orders()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.SelectMany_Count
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.SelectMany_Count
  id: SelectMany_Count
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: SelectMany_Count()
  nameWithType: AsyncQueryTestBase<TFixture>.SelectMany_Count()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.SelectMany_Count()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: SelectMany_Count
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2029
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task SelectMany_Count()
    content.vb: Public Overridable Function SelectMany_Count As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).SelectMany_Count()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).SelectMany_Count()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.SelectMany_LongCount
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.SelectMany_LongCount
  id: SelectMany_LongCount
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: SelectMany_LongCount()
  nameWithType: AsyncQueryTestBase<TFixture>.SelectMany_LongCount()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.SelectMany_LongCount()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: SelectMany_LongCount
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2038
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task SelectMany_LongCount()
    content.vb: Public Overridable Function SelectMany_LongCount As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).SelectMany_LongCount()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).SelectMany_LongCount()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.SelectMany_OrderBy_ThenBy_Any
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.SelectMany_OrderBy_ThenBy_Any
  id: SelectMany_OrderBy_ThenBy_Any
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: SelectMany_OrderBy_ThenBy_Any()
  nameWithType: AsyncQueryTestBase<TFixture>.SelectMany_OrderBy_ThenBy_Any()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.SelectMany_OrderBy_ThenBy_Any()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: SelectMany_OrderBy_ThenBy_Any
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2047
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task SelectMany_OrderBy_ThenBy_Any()
    content.vb: Public Overridable Function SelectMany_OrderBy_ThenBy_Any As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).SelectMany_OrderBy_ThenBy_Any()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).SelectMany_OrderBy_ThenBy_Any()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy
  id: OrderBy
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: OrderBy()
  nameWithType: AsyncQueryTestBase<TFixture>.OrderBy()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.OrderBy()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: OrderBy
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2086
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task OrderBy()
    content.vb: Public Overridable Function OrderBy As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).OrderBy()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).OrderBy()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_client_mixed
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_client_mixed
  id: OrderBy_client_mixed
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: OrderBy_client_mixed()
  nameWithType: AsyncQueryTestBase<TFixture>.OrderBy_client_mixed()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.OrderBy_client_mixed()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: OrderBy_client_mixed
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2095
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task OrderBy_client_mixed()
    content.vb: Public Overridable Function OrderBy_client_mixed As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).OrderBy_client_mixed()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).OrderBy_client_mixed()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_multiple_queries
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_multiple_queries
  id: OrderBy_multiple_queries
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: OrderBy_multiple_queries()
  nameWithType: AsyncQueryTestBase<TFixture>.OrderBy_multiple_queries()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.OrderBy_multiple_queries()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: OrderBy_multiple_queries
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2104
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task OrderBy_multiple_queries()
    content.vb: Public Overridable Function OrderBy_multiple_queries As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).OrderBy_multiple_queries()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).OrderBy_multiple_queries()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_shadow
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_shadow
  id: OrderBy_shadow
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: OrderBy_shadow()
  nameWithType: AsyncQueryTestBase<TFixture>.OrderBy_shadow()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.OrderBy_shadow()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: OrderBy_shadow
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2114
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task OrderBy_shadow()
    content.vb: Public Overridable Function OrderBy_shadow As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).OrderBy_shadow()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).OrderBy_shadow()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_ThenBy_predicate
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_ThenBy_predicate
  id: OrderBy_ThenBy_predicate
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: OrderBy_ThenBy_predicate()
  nameWithType: AsyncQueryTestBase<TFixture>.OrderBy_ThenBy_predicate()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.OrderBy_ThenBy_predicate()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: OrderBy_ThenBy_predicate
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2123
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task OrderBy_ThenBy_predicate()
    content.vb: Public Overridable Function OrderBy_ThenBy_predicate As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).OrderBy_ThenBy_predicate()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).OrderBy_ThenBy_predicate()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_correlated_subquery_lol
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_correlated_subquery_lol
  id: OrderBy_correlated_subquery_lol
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: OrderBy_correlated_subquery_lol()
  nameWithType: AsyncQueryTestBase<TFixture>.OrderBy_correlated_subquery_lol()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.OrderBy_correlated_subquery_lol()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: OrderBy_correlated_subquery_lol
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2134
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task OrderBy_correlated_subquery_lol()
    content.vb: Public Overridable Function OrderBy_correlated_subquery_lol As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).OrderBy_correlated_subquery_lol()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).OrderBy_correlated_subquery_lol()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_Select
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_Select
  id: OrderBy_Select
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: OrderBy_Select()
  nameWithType: AsyncQueryTestBase<TFixture>.OrderBy_Select()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.OrderBy_Select()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: OrderBy_Select
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2144
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task OrderBy_Select()
    content.vb: Public Overridable Function OrderBy_Select As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).OrderBy_Select()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).OrderBy_Select()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_multiple
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_multiple
  id: OrderBy_multiple
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: OrderBy_multiple()
  nameWithType: AsyncQueryTestBase<TFixture>.OrderBy_multiple()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.OrderBy_multiple()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: OrderBy_multiple
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2154
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task OrderBy_multiple()
    content.vb: Public Overridable Function OrderBy_multiple As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).OrderBy_multiple()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).OrderBy_multiple()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_ThenBy
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_ThenBy
  id: OrderBy_ThenBy
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: OrderBy_ThenBy()
  nameWithType: AsyncQueryTestBase<TFixture>.OrderBy_ThenBy()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.OrderBy_ThenBy()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: OrderBy_ThenBy
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2166
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task OrderBy_ThenBy()
    content.vb: Public Overridable Function OrderBy_ThenBy As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).OrderBy_ThenBy()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).OrderBy_ThenBy()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderByDescending
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderByDescending
  id: OrderByDescending
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: OrderByDescending()
  nameWithType: AsyncQueryTestBase<TFixture>.OrderByDescending()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.OrderByDescending()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: OrderByDescending
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2175
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task OrderByDescending()
    content.vb: Public Overridable Function OrderByDescending As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).OrderByDescending()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).OrderByDescending()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderByDescending_ThenBy
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderByDescending_ThenBy
  id: OrderByDescending_ThenBy
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: OrderByDescending_ThenBy()
  nameWithType: AsyncQueryTestBase<TFixture>.OrderByDescending_ThenBy()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.OrderByDescending_ThenBy()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: OrderByDescending_ThenBy
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2184
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task OrderByDescending_ThenBy()
    content.vb: Public Overridable Function OrderByDescending_ThenBy As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).OrderByDescending_ThenBy()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).OrderByDescending_ThenBy()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderByDescending_ThenByDescending
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderByDescending_ThenByDescending
  id: OrderByDescending_ThenByDescending
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: OrderByDescending_ThenByDescending()
  nameWithType: AsyncQueryTestBase<TFixture>.OrderByDescending_ThenByDescending()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.OrderByDescending_ThenByDescending()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: OrderByDescending_ThenByDescending
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2193
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task OrderByDescending_ThenByDescending()
    content.vb: Public Overridable Function OrderByDescending_ThenByDescending As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).OrderByDescending_ThenByDescending()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).OrderByDescending_ThenByDescending()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_ThenBy_Any
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_ThenBy_Any
  id: OrderBy_ThenBy_Any
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: OrderBy_ThenBy_Any()
  nameWithType: AsyncQueryTestBase<TFixture>.OrderBy_ThenBy_Any()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.OrderBy_ThenBy_Any()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: OrderBy_ThenBy_Any
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2202
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task OrderBy_ThenBy_Any()
    content.vb: Public Overridable Function OrderBy_ThenBy_Any As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).OrderBy_ThenBy_Any()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).OrderBy_ThenBy_Any()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_Join
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_Join
  id: OrderBy_Join
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: OrderBy_Join()
  nameWithType: AsyncQueryTestBase<TFixture>.OrderBy_Join()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.OrderBy_Join()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: OrderBy_Join
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2209
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task OrderBy_Join()
    content.vb: Public Overridable Function OrderBy_Join As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).OrderBy_Join()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).OrderBy_Join()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_SelectMany
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_SelectMany
  id: OrderBy_SelectMany
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: OrderBy_SelectMany()
  nameWithType: AsyncQueryTestBase<TFixture>.OrderBy_SelectMany()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.OrderBy_SelectMany()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: OrderBy_SelectMany
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2218
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task OrderBy_SelectMany()
    content.vb: Public Overridable Function OrderBy_SelectMany As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).OrderBy_SelectMany()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).OrderBy_SelectMany()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupBy_SelectMany
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupBy_SelectMany
  id: GroupBy_SelectMany
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: GroupBy_SelectMany()
  nameWithType: AsyncQueryTestBase<TFixture>.GroupBy_SelectMany()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.GroupBy_SelectMany()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GroupBy_SelectMany
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2259
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task GroupBy_SelectMany()
    content.vb: Public Overridable Function GroupBy_SelectMany As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).GroupBy_SelectMany()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).GroupBy_SelectMany()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupBy_simple
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupBy_simple
  id: GroupBy_simple
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: GroupBy_simple()
  nameWithType: AsyncQueryTestBase<TFixture>.GroupBy_simple()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.GroupBy_simple()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GroupBy_simple
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2267
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task GroupBy_simple()
    content.vb: Public Overridable Function GroupBy_simple As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).GroupBy_simple()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).GroupBy_simple()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupBy_simple2
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupBy_simple2
  id: GroupBy_simple2
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: GroupBy_simple2()
  nameWithType: AsyncQueryTestBase<TFixture>.GroupBy_simple2()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.GroupBy_simple2()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GroupBy_simple2
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2286
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task GroupBy_simple2()
    content.vb: Public Overridable Function GroupBy_simple2 As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).GroupBy_simple2()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).GroupBy_simple2()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupBy_first
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupBy_first
  id: GroupBy_first
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: GroupBy_first()
  nameWithType: AsyncQueryTestBase<TFixture>.GroupBy_first()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.GroupBy_first()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GroupBy_first
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2305
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task GroupBy_first()
    content.vb: Public Overridable Function GroupBy_first As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).GroupBy_first()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).GroupBy_first()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupBy_Sum
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupBy_Sum
  id: GroupBy_Sum
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: GroupBy_Sum()
  nameWithType: AsyncQueryTestBase<TFixture>.GroupBy_Sum()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.GroupBy_Sum()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GroupBy_Sum
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2321
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task GroupBy_Sum()
    content.vb: Public Overridable Function GroupBy_Sum As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).GroupBy_Sum()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).GroupBy_Sum()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupBy_Count
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupBy_Count
  id: GroupBy_Count
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: GroupBy_Count()
  nameWithType: AsyncQueryTestBase<TFixture>.GroupBy_Count()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.GroupBy_Count()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GroupBy_Count
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2328
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task GroupBy_Count()
    content.vb: Public Overridable Function GroupBy_Count As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).GroupBy_Count()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).GroupBy_Count()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupBy_LongCount
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupBy_LongCount
  id: GroupBy_LongCount
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: GroupBy_LongCount()
  nameWithType: AsyncQueryTestBase<TFixture>.GroupBy_LongCount()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.GroupBy_LongCount()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GroupBy_LongCount
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2335
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task GroupBy_LongCount()
    content.vb: Public Overridable Function GroupBy_LongCount As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).GroupBy_LongCount()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).GroupBy_LongCount()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupBy_Shadow
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupBy_Shadow
  id: GroupBy_Shadow
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: GroupBy_Shadow()
  nameWithType: AsyncQueryTestBase<TFixture>.GroupBy_Shadow()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.GroupBy_Shadow()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GroupBy_Shadow
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2342
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task GroupBy_Shadow()
    content.vb: Public Overridable Function GroupBy_Shadow As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).GroupBy_Shadow()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).GroupBy_Shadow()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupBy_Shadow2
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupBy_Shadow2
  id: GroupBy_Shadow2
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: GroupBy_Shadow2()
  nameWithType: AsyncQueryTestBase<TFixture>.GroupBy_Shadow2()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.GroupBy_Shadow2()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GroupBy_Shadow2
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2352
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task GroupBy_Shadow2()
    content.vb: Public Overridable Function GroupBy_Shadow2 As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).GroupBy_Shadow2()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).GroupBy_Shadow2()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupBy_Shadow3
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupBy_Shadow3
  id: GroupBy_Shadow3
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: GroupBy_Shadow3()
  nameWithType: AsyncQueryTestBase<TFixture>.GroupBy_Shadow3()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.GroupBy_Shadow3()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GroupBy_Shadow3
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2362
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task GroupBy_Shadow3()
    content.vb: Public Overridable Function GroupBy_Shadow3 As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).GroupBy_Shadow3()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).GroupBy_Shadow3()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupBy_Sum_Min_Max_Avg
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupBy_Sum_Min_Max_Avg
  id: GroupBy_Sum_Min_Max_Avg
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: GroupBy_Sum_Min_Max_Avg()
  nameWithType: AsyncQueryTestBase<TFixture>.GroupBy_Sum_Min_Max_Avg()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.GroupBy_Sum_Min_Max_Avg()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GroupBy_Sum_Min_Max_Avg
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2371
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task GroupBy_Sum_Min_Max_Avg()
    content.vb: Public Overridable Function GroupBy_Sum_Min_Max_Avg As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).GroupBy_Sum_Min_Max_Avg()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).GroupBy_Sum_Min_Max_Avg()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupBy_with_result_selector
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupBy_with_result_selector
  id: GroupBy_with_result_selector
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: GroupBy_with_result_selector()
  nameWithType: AsyncQueryTestBase<TFixture>.GroupBy_with_result_selector()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.GroupBy_with_result_selector()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GroupBy_with_result_selector
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2385
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task GroupBy_with_result_selector()
    content.vb: Public Overridable Function GroupBy_with_result_selector As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).GroupBy_with_result_selector()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).GroupBy_with_result_selector()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupBy_with_element_selector_sum
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupBy_with_element_selector_sum
  id: GroupBy_with_element_selector_sum
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: GroupBy_with_element_selector_sum()
  nameWithType: AsyncQueryTestBase<TFixture>.GroupBy_with_element_selector_sum()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.GroupBy_with_element_selector_sum()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GroupBy_with_element_selector_sum
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2399
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task GroupBy_with_element_selector_sum()
    content.vb: Public Overridable Function GroupBy_with_element_selector_sum As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).GroupBy_with_element_selector_sum()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).GroupBy_with_element_selector_sum()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupBy_with_element_selector
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupBy_with_element_selector
  id: GroupBy_with_element_selector
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: GroupBy_with_element_selector()
  nameWithType: AsyncQueryTestBase<TFixture>.GroupBy_with_element_selector()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.GroupBy_with_element_selector()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GroupBy_with_element_selector
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2406
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task GroupBy_with_element_selector()
    content.vb: Public Overridable Function GroupBy_with_element_selector As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).GroupBy_with_element_selector()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).GroupBy_with_element_selector()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupBy_with_element_selector2
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupBy_with_element_selector2
  id: GroupBy_with_element_selector2
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: GroupBy_with_element_selector2()
  nameWithType: AsyncQueryTestBase<TFixture>.GroupBy_with_element_selector2()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.GroupBy_with_element_selector2()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GroupBy_with_element_selector2
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2428
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task GroupBy_with_element_selector2()
    content.vb: Public Overridable Function GroupBy_with_element_selector2 As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).GroupBy_with_element_selector2()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).GroupBy_with_element_selector2()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupBy_with_element_selector3
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupBy_with_element_selector3
  id: GroupBy_with_element_selector3
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: GroupBy_with_element_selector3()
  nameWithType: AsyncQueryTestBase<TFixture>.GroupBy_with_element_selector3()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.GroupBy_with_element_selector3()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GroupBy_with_element_selector3
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2450
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task GroupBy_with_element_selector3()
    content.vb: Public Overridable Function GroupBy_with_element_selector3 As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).GroupBy_with_element_selector3()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).GroupBy_with_element_selector3()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupBy_with_element_selector_sum_max
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupBy_with_element_selector_sum_max
  id: GroupBy_with_element_selector_sum_max
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: GroupBy_with_element_selector_sum_max()
  nameWithType: AsyncQueryTestBase<TFixture>.GroupBy_with_element_selector_sum_max()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.GroupBy_with_element_selector_sum_max()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GroupBy_with_element_selector_sum_max
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2460
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task GroupBy_with_element_selector_sum_max()
    content.vb: Public Overridable Function GroupBy_with_element_selector_sum_max As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).GroupBy_with_element_selector_sum_max()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).GroupBy_with_element_selector_sum_max()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupBy_with_anonymous_element
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupBy_with_anonymous_element
  id: GroupBy_with_anonymous_element
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: GroupBy_with_anonymous_element()
  nameWithType: AsyncQueryTestBase<TFixture>.GroupBy_with_anonymous_element()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.GroupBy_with_anonymous_element()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GroupBy_with_anonymous_element
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2468
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task GroupBy_with_anonymous_element()
    content.vb: Public Overridable Function GroupBy_with_anonymous_element As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).GroupBy_with_anonymous_element()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).GroupBy_with_anonymous_element()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupBy_with_two_part_key
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupBy_with_two_part_key
  id: GroupBy_with_two_part_key
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: GroupBy_with_two_part_key()
  nameWithType: AsyncQueryTestBase<TFixture>.GroupBy_with_two_part_key()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.GroupBy_with_two_part_key()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GroupBy_with_two_part_key
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2476
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task GroupBy_with_two_part_key()
    content.vb: Public Overridable Function GroupBy_with_two_part_key As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).GroupBy_with_two_part_key()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).GroupBy_with_two_part_key()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_GroupBy
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_GroupBy
  id: OrderBy_GroupBy
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: OrderBy_GroupBy()
  nameWithType: AsyncQueryTestBase<TFixture>.OrderBy_GroupBy()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.OrderBy_GroupBy()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: OrderBy_GroupBy
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2484
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task OrderBy_GroupBy()
    content.vb: Public Overridable Function OrderBy_GroupBy As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).OrderBy_GroupBy()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).OrderBy_GroupBy()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_GroupBy_SelectMany
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_GroupBy_SelectMany
  id: OrderBy_GroupBy_SelectMany
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: OrderBy_GroupBy_SelectMany()
  nameWithType: AsyncQueryTestBase<TFixture>.OrderBy_GroupBy_SelectMany()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.OrderBy_GroupBy_SelectMany()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: OrderBy_GroupBy_SelectMany
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2493
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task OrderBy_GroupBy_SelectMany()
    content.vb: Public Overridable Function OrderBy_GroupBy_SelectMany As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).OrderBy_GroupBy_SelectMany()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).OrderBy_GroupBy_SelectMany()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_GroupBy_SelectMany_shadow
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_GroupBy_SelectMany_shadow
  id: OrderBy_GroupBy_SelectMany_shadow
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: OrderBy_GroupBy_SelectMany_shadow()
  nameWithType: AsyncQueryTestBase<TFixture>.OrderBy_GroupBy_SelectMany_shadow()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.OrderBy_GroupBy_SelectMany_shadow()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: OrderBy_GroupBy_SelectMany_shadow
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2503
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task OrderBy_GroupBy_SelectMany_shadow()
    content.vb: Public Overridable Function OrderBy_GroupBy_SelectMany_shadow As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).OrderBy_GroupBy_SelectMany_shadow()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).OrderBy_GroupBy_SelectMany_shadow()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Sum_with_no_arg
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Sum_with_no_arg
  id: Sum_with_no_arg
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Sum_with_no_arg()
  nameWithType: AsyncQueryTestBase<TFixture>.Sum_with_no_arg()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Sum_with_no_arg()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Sum_with_no_arg
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2513
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Sum_with_no_arg()
    content.vb: Public Overridable Function Sum_with_no_arg As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Sum_with_no_arg()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Sum_with_no_arg()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Sum_with_binary_expression
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Sum_with_binary_expression
  id: Sum_with_binary_expression
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Sum_with_binary_expression()
  nameWithType: AsyncQueryTestBase<TFixture>.Sum_with_binary_expression()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Sum_with_binary_expression()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Sum_with_binary_expression
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2519
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Sum_with_binary_expression()
    content.vb: Public Overridable Function Sum_with_binary_expression As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Sum_with_binary_expression()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Sum_with_binary_expression()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Sum_with_no_arg_empty
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Sum_with_no_arg_empty
  id: Sum_with_no_arg_empty
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Sum_with_no_arg_empty()
  nameWithType: AsyncQueryTestBase<TFixture>.Sum_with_no_arg_empty()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Sum_with_no_arg_empty()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Sum_with_no_arg_empty
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2525
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Sum_with_no_arg_empty()
    content.vb: Public Overridable Function Sum_with_no_arg_empty As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Sum_with_no_arg_empty()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Sum_with_no_arg_empty()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Sum_with_arg
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Sum_with_arg
  id: Sum_with_arg
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Sum_with_arg()
  nameWithType: AsyncQueryTestBase<TFixture>.Sum_with_arg()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Sum_with_arg()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Sum_with_arg
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2531
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Sum_with_arg()
    content.vb: Public Overridable Function Sum_with_arg As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Sum_with_arg()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Sum_with_arg()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Sum_with_arg_expression
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Sum_with_arg_expression
  id: Sum_with_arg_expression
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Sum_with_arg_expression()
  nameWithType: AsyncQueryTestBase<TFixture>.Sum_with_arg_expression()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Sum_with_arg_expression()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Sum_with_arg_expression
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2537
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Sum_with_arg_expression()
    content.vb: Public Overridable Function Sum_with_arg_expression As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Sum_with_arg_expression()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Sum_with_arg_expression()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Min_with_no_arg
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Min_with_no_arg
  id: Min_with_no_arg
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Min_with_no_arg()
  nameWithType: AsyncQueryTestBase<TFixture>.Min_with_no_arg()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Min_with_no_arg()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Min_with_no_arg
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2543
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Min_with_no_arg()
    content.vb: Public Overridable Function Min_with_no_arg As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Min_with_no_arg()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Min_with_no_arg()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Min_with_arg
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Min_with_arg
  id: Min_with_arg
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Min_with_arg()
  nameWithType: AsyncQueryTestBase<TFixture>.Min_with_arg()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Min_with_arg()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Min_with_arg
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2549
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Min_with_arg()
    content.vb: Public Overridable Function Min_with_arg As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Min_with_arg()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Min_with_arg()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Max_with_no_arg
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Max_with_no_arg
  id: Max_with_no_arg
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Max_with_no_arg()
  nameWithType: AsyncQueryTestBase<TFixture>.Max_with_no_arg()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Max_with_no_arg()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Max_with_no_arg
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2555
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Max_with_no_arg()
    content.vb: Public Overridable Function Max_with_no_arg As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Max_with_no_arg()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Max_with_no_arg()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Max_with_arg
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Max_with_arg
  id: Max_with_arg
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Max_with_arg()
  nameWithType: AsyncQueryTestBase<TFixture>.Max_with_arg()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Max_with_arg()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Max_with_arg
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2561
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Max_with_arg()
    content.vb: Public Overridable Function Max_with_arg As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Max_with_arg()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Max_with_arg()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Count_with_no_predicate
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Count_with_no_predicate
  id: Count_with_no_predicate
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Count_with_no_predicate()
  nameWithType: AsyncQueryTestBase<TFixture>.Count_with_no_predicate()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Count_with_no_predicate()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Count_with_no_predicate
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2567
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Count_with_no_predicate()
    content.vb: Public Overridable Function Count_with_no_predicate As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Count_with_no_predicate()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Count_with_no_predicate()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Count_with_predicate
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Count_with_predicate
  id: Count_with_predicate
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Count_with_predicate()
  nameWithType: AsyncQueryTestBase<TFixture>.Count_with_predicate()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Count_with_predicate()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Count_with_predicate
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2573
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Count_with_predicate()
    content.vb: Public Overridable Function Count_with_predicate As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Count_with_predicate()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Count_with_predicate()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Count_with_order_by
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Count_with_order_by
  id: Count_with_order_by
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Count_with_order_by()
  nameWithType: AsyncQueryTestBase<TFixture>.Count_with_order_by()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Count_with_order_by()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Count_with_order_by
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2580
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Count_with_order_by()
    content.vb: Public Overridable Function Count_with_order_by As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Count_with_order_by()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Count_with_order_by()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_OrderBy_Count
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_OrderBy_Count
  id: Where_OrderBy_Count
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_OrderBy_Count()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_OrderBy_Count()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_OrderBy_Count()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_OrderBy_Count
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2586
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_OrderBy_Count()
    content.vb: Public Overridable Function Where_OrderBy_Count As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_OrderBy_Count()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_OrderBy_Count()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_Where_Count
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_Where_Count
  id: OrderBy_Where_Count
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: OrderBy_Where_Count()
  nameWithType: AsyncQueryTestBase<TFixture>.OrderBy_Where_Count()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.OrderBy_Where_Count()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: OrderBy_Where_Count
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2592
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task OrderBy_Where_Count()
    content.vb: Public Overridable Function OrderBy_Where_Count As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).OrderBy_Where_Count()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).OrderBy_Where_Count()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_Count_with_predicate
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_Count_with_predicate
  id: OrderBy_Count_with_predicate
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: OrderBy_Count_with_predicate()
  nameWithType: AsyncQueryTestBase<TFixture>.OrderBy_Count_with_predicate()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.OrderBy_Count_with_predicate()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: OrderBy_Count_with_predicate
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2598
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task OrderBy_Count_with_predicate()
    content.vb: Public Overridable Function OrderBy_Count_with_predicate As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).OrderBy_Count_with_predicate()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).OrderBy_Count_with_predicate()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_Where_Count_with_predicate
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_Where_Count_with_predicate
  id: OrderBy_Where_Count_with_predicate
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: OrderBy_Where_Count_with_predicate()
  nameWithType: AsyncQueryTestBase<TFixture>.OrderBy_Where_Count_with_predicate()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.OrderBy_Where_Count_with_predicate()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: OrderBy_Where_Count_with_predicate
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2604
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task OrderBy_Where_Count_with_predicate()
    content.vb: Public Overridable Function OrderBy_Where_Count_with_predicate As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).OrderBy_Where_Count_with_predicate()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).OrderBy_Where_Count_with_predicate()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_OrderBy_Count_client_eval
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_OrderBy_Count_client_eval
  id: Where_OrderBy_Count_client_eval
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_OrderBy_Count_client_eval()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_OrderBy_Count_client_eval()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_OrderBy_Count_client_eval()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_OrderBy_Count_client_eval
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2610
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_OrderBy_Count_client_eval()
    content.vb: Public Overridable Function Where_OrderBy_Count_client_eval As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_OrderBy_Count_client_eval()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_OrderBy_Count_client_eval()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_OrderBy_Count_client_eval_mixed
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_OrderBy_Count_client_eval_mixed
  id: Where_OrderBy_Count_client_eval_mixed
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_OrderBy_Count_client_eval_mixed()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_OrderBy_Count_client_eval_mixed()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_OrderBy_Count_client_eval_mixed()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_OrderBy_Count_client_eval_mixed
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2616
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_OrderBy_Count_client_eval_mixed()
    content.vb: Public Overridable Function Where_OrderBy_Count_client_eval_mixed As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_OrderBy_Count_client_eval_mixed()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_OrderBy_Count_client_eval_mixed()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_Where_Count_client_eval
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_Where_Count_client_eval
  id: OrderBy_Where_Count_client_eval
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: OrderBy_Where_Count_client_eval()
  nameWithType: AsyncQueryTestBase<TFixture>.OrderBy_Where_Count_client_eval()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.OrderBy_Where_Count_client_eval()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: OrderBy_Where_Count_client_eval
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2622
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task OrderBy_Where_Count_client_eval()
    content.vb: Public Overridable Function OrderBy_Where_Count_client_eval As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).OrderBy_Where_Count_client_eval()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).OrderBy_Where_Count_client_eval()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_Where_Count_client_eval_mixed
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_Where_Count_client_eval_mixed
  id: OrderBy_Where_Count_client_eval_mixed
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: OrderBy_Where_Count_client_eval_mixed()
  nameWithType: AsyncQueryTestBase<TFixture>.OrderBy_Where_Count_client_eval_mixed()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.OrderBy_Where_Count_client_eval_mixed()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: OrderBy_Where_Count_client_eval_mixed
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2628
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task OrderBy_Where_Count_client_eval_mixed()
    content.vb: Public Overridable Function OrderBy_Where_Count_client_eval_mixed As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).OrderBy_Where_Count_client_eval_mixed()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).OrderBy_Where_Count_client_eval_mixed()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_Count_with_predicate_client_eval
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_Count_with_predicate_client_eval
  id: OrderBy_Count_with_predicate_client_eval
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: OrderBy_Count_with_predicate_client_eval()
  nameWithType: AsyncQueryTestBase<TFixture>.OrderBy_Count_with_predicate_client_eval()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.OrderBy_Count_with_predicate_client_eval()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: OrderBy_Count_with_predicate_client_eval
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2634
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task OrderBy_Count_with_predicate_client_eval()
    content.vb: Public Overridable Function OrderBy_Count_with_predicate_client_eval As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).OrderBy_Count_with_predicate_client_eval()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).OrderBy_Count_with_predicate_client_eval()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_Count_with_predicate_client_eval_mixed
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_Count_with_predicate_client_eval_mixed
  id: OrderBy_Count_with_predicate_client_eval_mixed
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: OrderBy_Count_with_predicate_client_eval_mixed()
  nameWithType: AsyncQueryTestBase<TFixture>.OrderBy_Count_with_predicate_client_eval_mixed()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.OrderBy_Count_with_predicate_client_eval_mixed()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: OrderBy_Count_with_predicate_client_eval_mixed
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2640
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task OrderBy_Count_with_predicate_client_eval_mixed()
    content.vb: Public Overridable Function OrderBy_Count_with_predicate_client_eval_mixed As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).OrderBy_Count_with_predicate_client_eval_mixed()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).OrderBy_Count_with_predicate_client_eval_mixed()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_Where_Count_with_predicate_client_eval
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_Where_Count_with_predicate_client_eval
  id: OrderBy_Where_Count_with_predicate_client_eval
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: OrderBy_Where_Count_with_predicate_client_eval()
  nameWithType: AsyncQueryTestBase<TFixture>.OrderBy_Where_Count_with_predicate_client_eval()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.OrderBy_Where_Count_with_predicate_client_eval()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: OrderBy_Where_Count_with_predicate_client_eval
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2646
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task OrderBy_Where_Count_with_predicate_client_eval()
    content.vb: Public Overridable Function OrderBy_Where_Count_with_predicate_client_eval As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).OrderBy_Where_Count_with_predicate_client_eval()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).OrderBy_Where_Count_with_predicate_client_eval()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_Where_Count_with_predicate_client_eval_mixed
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_Where_Count_with_predicate_client_eval_mixed
  id: OrderBy_Where_Count_with_predicate_client_eval_mixed
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: OrderBy_Where_Count_with_predicate_client_eval_mixed()
  nameWithType: AsyncQueryTestBase<TFixture>.OrderBy_Where_Count_with_predicate_client_eval_mixed()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.OrderBy_Where_Count_with_predicate_client_eval_mixed()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: OrderBy_Where_Count_with_predicate_client_eval_mixed
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2652
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task OrderBy_Where_Count_with_predicate_client_eval_mixed()
    content.vb: Public Overridable Function OrderBy_Where_Count_with_predicate_client_eval_mixed As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).OrderBy_Where_Count_with_predicate_client_eval_mixed()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).OrderBy_Where_Count_with_predicate_client_eval_mixed()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.ClientEvalPredicateStateless
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.ClientEvalPredicateStateless
  id: ClientEvalPredicateStateless
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: ClientEvalPredicateStateless()
  nameWithType: AsyncQueryTestBase<TFixture>.ClientEvalPredicateStateless()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.ClientEvalPredicateStateless()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ClientEvalPredicateStateless
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2658
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public static bool ClientEvalPredicateStateless()
    content.vb: Public Shared Function ClientEvalPredicateStateless As Boolean
    return:
      type: System.Boolean
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).ClientEvalPredicateStateless()
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).ClientEvalPredicateStateless()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.ClientEvalPredicate(Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.Order)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.ClientEvalPredicate(Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.Order)
  id: ClientEvalPredicate(Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.Order)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: ClientEvalPredicate(Order)
  nameWithType: AsyncQueryTestBase<TFixture>.ClientEvalPredicate(Order)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.ClientEvalPredicate(Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.Order)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ClientEvalPredicate
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2660
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: protected static bool ClientEvalPredicate(Order order)
    content.vb: Protected Shared Function ClientEvalPredicate(order As Order) As Boolean
    parameters:
    - id: order
      type: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.Order
    return:
      type: System.Boolean
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).ClientEvalPredicate(Order)
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).ClientEvalPredicate(Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.Order)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.ClientEvalSelector(Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.Order)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.ClientEvalSelector(Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.Order)
  id: ClientEvalSelector(Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.Order)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: ClientEvalSelector(Order)
  nameWithType: AsyncQueryTestBase<TFixture>.ClientEvalSelector(Order)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.ClientEvalSelector(Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.Order)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ClientEvalSelector
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2664
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: protected int ClientEvalSelector(Order order)
    content.vb: Protected Function ClientEvalSelector(order As Order) As Integer
    parameters:
    - id: order
      type: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.Order
    return:
      type: System.Int32
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).ClientEvalSelector(Order)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).ClientEvalSelector(Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.Order)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Distinct
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Distinct
  id: Distinct
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Distinct()
  nameWithType: AsyncQueryTestBase<TFixture>.Distinct()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Distinct()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Distinct
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2666
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Distinct()
    content.vb: Public Overridable Function Distinct As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Distinct()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Distinct()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Distinct_Scalar
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Distinct_Scalar
  id: Distinct_Scalar
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Distinct_Scalar()
  nameWithType: AsyncQueryTestBase<TFixture>.Distinct_Scalar()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Distinct_Scalar()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Distinct_Scalar
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2674
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Distinct_Scalar()
    content.vb: Public Overridable Function Distinct_Scalar As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Distinct_Scalar()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Distinct_Scalar()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_Distinct
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.OrderBy_Distinct
  id: OrderBy_Distinct
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: OrderBy_Distinct()
  nameWithType: AsyncQueryTestBase<TFixture>.OrderBy_Distinct()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.OrderBy_Distinct()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: OrderBy_Distinct
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2682
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task OrderBy_Distinct()
    content.vb: Public Overridable Function OrderBy_Distinct As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).OrderBy_Distinct()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).OrderBy_Distinct()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Distinct_OrderBy
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Distinct_OrderBy
  id: Distinct_OrderBy
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Distinct_OrderBy()
  nameWithType: AsyncQueryTestBase<TFixture>.Distinct_OrderBy()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Distinct_OrderBy()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Distinct_OrderBy
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2690
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Distinct_OrderBy()
    content.vb: Public Overridable Function Distinct_OrderBy As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Distinct_OrderBy()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Distinct_OrderBy()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Distinct_GroupBy
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Distinct_GroupBy
  id: Distinct_GroupBy
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Distinct_GroupBy()
  nameWithType: AsyncQueryTestBase<TFixture>.Distinct_GroupBy()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Distinct_GroupBy()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Distinct_GroupBy
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2699
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Distinct_GroupBy()
    content.vb: Public Overridable Function Distinct_GroupBy As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Distinct_GroupBy()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Distinct_GroupBy()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupBy_Distinct
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupBy_Distinct
  id: GroupBy_Distinct
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: GroupBy_Distinct()
  nameWithType: AsyncQueryTestBase<TFixture>.GroupBy_Distinct()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.GroupBy_Distinct()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GroupBy_Distinct
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2710
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task GroupBy_Distinct()
    content.vb: Public Overridable Function GroupBy_Distinct As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).GroupBy_Distinct()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).GroupBy_Distinct()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Distinct_Count
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Distinct_Count
  id: Distinct_Count
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Distinct_Count()
  nameWithType: AsyncQueryTestBase<TFixture>.Distinct_Count()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Distinct_Count()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Distinct_Count
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2717
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Distinct_Count()
    content.vb: Public Overridable Function Distinct_Count As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Distinct_Count()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Distinct_Count()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_Distinct_Count
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_Distinct_Count
  id: Select_Distinct_Count
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Select_Distinct_Count()
  nameWithType: AsyncQueryTestBase<TFixture>.Select_Distinct_Count()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Select_Distinct_Count()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Select_Distinct_Count
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2724
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Select_Distinct_Count()
    content.vb: Public Overridable Function Select_Distinct_Count As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Select_Distinct_Count()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Select_Distinct_Count()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_Select_Distinct_Count
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_Select_Distinct_Count
  id: Select_Select_Distinct_Count
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Select_Select_Distinct_Count()
  nameWithType: AsyncQueryTestBase<TFixture>.Select_Select_Distinct_Count()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Select_Select_Distinct_Count()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Select_Select_Distinct_Count
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2732
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Select_Select_Distinct_Count()
    content.vb: Public Overridable Function Select_Select_Distinct_Count As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Select_Select_Distinct_Count()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Select_Select_Distinct_Count()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Single_Throws
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Single_Throws
  id: Single_Throws
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Single_Throws()
  nameWithType: AsyncQueryTestBase<TFixture>.Single_Throws()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Single_Throws()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Single_Throws
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2740
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Single_Throws()
    content.vb: Public Overridable Function Single_Throws As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Single_Throws()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Single_Throws()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Single_Predicate
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Single_Predicate
  id: Single_Predicate
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Single_Predicate()
  nameWithType: AsyncQueryTestBase<TFixture>.Single_Predicate()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Single_Predicate()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Single_Predicate
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2748
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Single_Predicate()
    content.vb: Public Overridable Function Single_Predicate As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Single_Predicate()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Single_Predicate()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_Single
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_Single
  id: Where_Single
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_Single()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_Single()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_Single()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_Single
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2755
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_Single()
    content.vb: Public Overridable Function Where_Single As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_Single()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_Single()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.SingleOrDefault_Throws
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.SingleOrDefault_Throws
  id: SingleOrDefault_Throws
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: SingleOrDefault_Throws()
  nameWithType: AsyncQueryTestBase<TFixture>.SingleOrDefault_Throws()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.SingleOrDefault_Throws()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: SingleOrDefault_Throws
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2763
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task SingleOrDefault_Throws()
    content.vb: Public Overridable Function SingleOrDefault_Throws As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).SingleOrDefault_Throws()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).SingleOrDefault_Throws()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.SingleOrDefault_Predicate
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.SingleOrDefault_Predicate
  id: SingleOrDefault_Predicate
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: SingleOrDefault_Predicate()
  nameWithType: AsyncQueryTestBase<TFixture>.SingleOrDefault_Predicate()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.SingleOrDefault_Predicate()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: SingleOrDefault_Predicate
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2771
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task SingleOrDefault_Predicate()
    content.vb: Public Overridable Function SingleOrDefault_Predicate As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).SingleOrDefault_Predicate()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).SingleOrDefault_Predicate()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_SingleOrDefault
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_SingleOrDefault
  id: Where_SingleOrDefault
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_SingleOrDefault()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_SingleOrDefault()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_SingleOrDefault()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_SingleOrDefault
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2778
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_SingleOrDefault()
    content.vb: Public Overridable Function Where_SingleOrDefault As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_SingleOrDefault()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_SingleOrDefault()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.FirstAsync
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.FirstAsync
  id: FirstAsync
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: FirstAsync()
  nameWithType: AsyncQueryTestBase<TFixture>.FirstAsync()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.FirstAsync()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: FirstAsync
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2786
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task FirstAsync()
    content.vb: Public Overridable Function FirstAsync As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).FirstAsync()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).FirstAsync()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.First_Predicate
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.First_Predicate
  id: First_Predicate
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: First_Predicate()
  nameWithType: AsyncQueryTestBase<TFixture>.First_Predicate()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.First_Predicate()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: First_Predicate
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2793
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task First_Predicate()
    content.vb: Public Overridable Function First_Predicate As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).First_Predicate()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).First_Predicate()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_First
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_First
  id: Where_First
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_First()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_First()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_First()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_First
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2800
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_First()
    content.vb: Public Overridable Function Where_First As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_First()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_First()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.FirstOrDefault
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.FirstOrDefault
  id: FirstOrDefault
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: FirstOrDefault()
  nameWithType: AsyncQueryTestBase<TFixture>.FirstOrDefault()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.FirstOrDefault()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: FirstOrDefault
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2808
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task FirstOrDefault()
    content.vb: Public Overridable Function FirstOrDefault As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).FirstOrDefault()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).FirstOrDefault()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.FirstOrDefault_Predicate
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.FirstOrDefault_Predicate
  id: FirstOrDefault_Predicate
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: FirstOrDefault_Predicate()
  nameWithType: AsyncQueryTestBase<TFixture>.FirstOrDefault_Predicate()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.FirstOrDefault_Predicate()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: FirstOrDefault_Predicate
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2815
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task FirstOrDefault_Predicate()
    content.vb: Public Overridable Function FirstOrDefault_Predicate As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).FirstOrDefault_Predicate()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).FirstOrDefault_Predicate()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_FirstOrDefault
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_FirstOrDefault
  id: Where_FirstOrDefault
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_FirstOrDefault()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_FirstOrDefault()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_FirstOrDefault()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_FirstOrDefault
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2822
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_FirstOrDefault()
    content.vb: Public Overridable Function Where_FirstOrDefault As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_FirstOrDefault()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_FirstOrDefault()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Last
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Last
  id: Last
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Last()
  nameWithType: AsyncQueryTestBase<TFixture>.Last()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Last()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Last
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2830
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Last()
    content.vb: Public Overridable Function Last As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Last()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Last()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Last_when_no_order_by
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Last_when_no_order_by
  id: Last_when_no_order_by
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Last_when_no_order_by()
  nameWithType: AsyncQueryTestBase<TFixture>.Last_when_no_order_by()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Last_when_no_order_by()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Last_when_no_order_by
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2837
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Last_when_no_order_by()
    content.vb: Public Overridable Function Last_when_no_order_by As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Last_when_no_order_by()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Last_when_no_order_by()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Last_Predicate
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Last_Predicate
  id: Last_Predicate
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Last_Predicate()
  nameWithType: AsyncQueryTestBase<TFixture>.Last_Predicate()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Last_Predicate()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Last_Predicate
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2845
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Last_Predicate()
    content.vb: Public Overridable Function Last_Predicate As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Last_Predicate()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Last_Predicate()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_Last
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_Last
  id: Where_Last
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_Last()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_Last()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_Last()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_Last
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2852
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_Last()
    content.vb: Public Overridable Function Where_Last As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_Last()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_Last()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.LastOrDefault
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.LastOrDefault
  id: LastOrDefault
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: LastOrDefault()
  nameWithType: AsyncQueryTestBase<TFixture>.LastOrDefault()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.LastOrDefault()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: LastOrDefault
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2860
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task LastOrDefault()
    content.vb: Public Overridable Function LastOrDefault As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).LastOrDefault()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).LastOrDefault()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.LastOrDefault_Predicate
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.LastOrDefault_Predicate
  id: LastOrDefault_Predicate
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: LastOrDefault_Predicate()
  nameWithType: AsyncQueryTestBase<TFixture>.LastOrDefault_Predicate()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.LastOrDefault_Predicate()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: LastOrDefault_Predicate
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2867
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task LastOrDefault_Predicate()
    content.vb: Public Overridable Function LastOrDefault_Predicate As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).LastOrDefault_Predicate()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).LastOrDefault_Predicate()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_LastOrDefault
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_LastOrDefault
  id: Where_LastOrDefault
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_LastOrDefault()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_LastOrDefault()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_LastOrDefault()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_LastOrDefault
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2874
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_LastOrDefault()
    content.vb: Public Overridable Function Where_LastOrDefault As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_LastOrDefault()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_LastOrDefault()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.String_StartsWith_Literal
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.String_StartsWith_Literal
  id: String_StartsWith_Literal
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: String_StartsWith_Literal()
  nameWithType: AsyncQueryTestBase<TFixture>.String_StartsWith_Literal()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.String_StartsWith_Literal()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: String_StartsWith_Literal
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2882
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task String_StartsWith_Literal()
    content.vb: Public Overridable Function String_StartsWith_Literal As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).String_StartsWith_Literal()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).String_StartsWith_Literal()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.String_StartsWith_Identity
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.String_StartsWith_Identity
  id: String_StartsWith_Identity
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: String_StartsWith_Identity()
  nameWithType: AsyncQueryTestBase<TFixture>.String_StartsWith_Identity()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.String_StartsWith_Identity()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: String_StartsWith_Identity
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2890
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task String_StartsWith_Identity()
    content.vb: Public Overridable Function String_StartsWith_Identity As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).String_StartsWith_Identity()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).String_StartsWith_Identity()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.String_StartsWith_Column
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.String_StartsWith_Column
  id: String_StartsWith_Column
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: String_StartsWith_Column()
  nameWithType: AsyncQueryTestBase<TFixture>.String_StartsWith_Column()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.String_StartsWith_Column()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: String_StartsWith_Column
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2898
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task String_StartsWith_Column()
    content.vb: Public Overridable Function String_StartsWith_Column As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).String_StartsWith_Column()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).String_StartsWith_Column()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.String_StartsWith_MethodCall
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.String_StartsWith_MethodCall
  id: String_StartsWith_MethodCall
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: String_StartsWith_MethodCall()
  nameWithType: AsyncQueryTestBase<TFixture>.String_StartsWith_MethodCall()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.String_StartsWith_MethodCall()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: String_StartsWith_MethodCall
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2906
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task String_StartsWith_MethodCall()
    content.vb: Public Overridable Function String_StartsWith_MethodCall As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).String_StartsWith_MethodCall()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).String_StartsWith_MethodCall()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.String_EndsWith_Literal
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.String_EndsWith_Literal
  id: String_EndsWith_Literal
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: String_EndsWith_Literal()
  nameWithType: AsyncQueryTestBase<TFixture>.String_EndsWith_Literal()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.String_EndsWith_Literal()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: String_EndsWith_Literal
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2914
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task String_EndsWith_Literal()
    content.vb: Public Overridable Function String_EndsWith_Literal As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).String_EndsWith_Literal()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).String_EndsWith_Literal()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.String_EndsWith_Identity
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.String_EndsWith_Identity
  id: String_EndsWith_Identity
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: String_EndsWith_Identity()
  nameWithType: AsyncQueryTestBase<TFixture>.String_EndsWith_Identity()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.String_EndsWith_Identity()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: String_EndsWith_Identity
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2922
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task String_EndsWith_Identity()
    content.vb: Public Overridable Function String_EndsWith_Identity As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).String_EndsWith_Identity()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).String_EndsWith_Identity()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.String_EndsWith_Column
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.String_EndsWith_Column
  id: String_EndsWith_Column
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: String_EndsWith_Column()
  nameWithType: AsyncQueryTestBase<TFixture>.String_EndsWith_Column()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.String_EndsWith_Column()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: String_EndsWith_Column
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2930
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task String_EndsWith_Column()
    content.vb: Public Overridable Function String_EndsWith_Column As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).String_EndsWith_Column()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).String_EndsWith_Column()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.String_EndsWith_MethodCall
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.String_EndsWith_MethodCall
  id: String_EndsWith_MethodCall
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: String_EndsWith_MethodCall()
  nameWithType: AsyncQueryTestBase<TFixture>.String_EndsWith_MethodCall()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.String_EndsWith_MethodCall()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: String_EndsWith_MethodCall
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2938
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task String_EndsWith_MethodCall()
    content.vb: Public Overridable Function String_EndsWith_MethodCall As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).String_EndsWith_MethodCall()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).String_EndsWith_MethodCall()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.String_Contains_Literal
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.String_Contains_Literal
  id: String_Contains_Literal
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: String_Contains_Literal()
  nameWithType: AsyncQueryTestBase<TFixture>.String_Contains_Literal()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.String_Contains_Literal()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: String_Contains_Literal
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2946
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task String_Contains_Literal()
    content.vb: Public Overridable Function String_Contains_Literal As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).String_Contains_Literal()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).String_Contains_Literal()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.String_Contains_Identity
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.String_Contains_Identity
  id: String_Contains_Identity
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: String_Contains_Identity()
  nameWithType: AsyncQueryTestBase<TFixture>.String_Contains_Identity()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.String_Contains_Identity()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: String_Contains_Identity
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2954
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task String_Contains_Identity()
    content.vb: Public Overridable Function String_Contains_Identity As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).String_Contains_Identity()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).String_Contains_Identity()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.String_Contains_Column
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.String_Contains_Column
  id: String_Contains_Column
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: String_Contains_Column()
  nameWithType: AsyncQueryTestBase<TFixture>.String_Contains_Column()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.String_Contains_Column()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: String_Contains_Column
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2962
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task String_Contains_Column()
    content.vb: Public Overridable Function String_Contains_Column As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).String_Contains_Column()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).String_Contains_Column()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.String_Contains_MethodCall
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.String_Contains_MethodCall
  id: String_Contains_MethodCall
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: String_Contains_MethodCall()
  nameWithType: AsyncQueryTestBase<TFixture>.String_Contains_MethodCall()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.String_Contains_MethodCall()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: String_Contains_MethodCall
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2970
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task String_Contains_MethodCall()
    content.vb: Public Overridable Function String_Contains_MethodCall As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).String_Contains_MethodCall()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).String_Contains_MethodCall()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.LocalMethod1
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.LocalMethod1
  id: LocalMethod1
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: LocalMethod1()
  nameWithType: AsyncQueryTestBase<TFixture>.LocalMethod1()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.LocalMethod1()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: LocalMethod1
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2978
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: protected static string LocalMethod1()
    content.vb: Protected Shared Function LocalMethod1 As String
    return:
      type: System.String
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).LocalMethod1()
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).LocalMethod1()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.LocalMethod2
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.LocalMethod2
  id: LocalMethod2
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: LocalMethod2()
  nameWithType: AsyncQueryTestBase<TFixture>.LocalMethod2()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.LocalMethod2()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: LocalMethod2
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2983
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: protected static string LocalMethod2()
    content.vb: Protected Shared Function LocalMethod2 As String
    return:
      type: System.String
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).LocalMethod2()
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).LocalMethod2()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupJoin_simple
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupJoin_simple
  id: GroupJoin_simple
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: GroupJoin_simple()
  nameWithType: AsyncQueryTestBase<TFixture>.GroupJoin_simple()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.GroupJoin_simple()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GroupJoin_simple
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2988
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task GroupJoin_simple()
    content.vb: Public Overridable Function GroupJoin_simple As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).GroupJoin_simple()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).GroupJoin_simple()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupJoin_simple3
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupJoin_simple3
  id: GroupJoin_simple3
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: GroupJoin_simple3()
  nameWithType: AsyncQueryTestBase<TFixture>.GroupJoin_simple3()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.GroupJoin_simple3()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GroupJoin_simple3
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 2998
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task GroupJoin_simple3()
    content.vb: Public Overridable Function GroupJoin_simple3 As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).GroupJoin_simple3()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).GroupJoin_simple3()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupJoin_projection
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupJoin_projection
  id: GroupJoin_projection
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: GroupJoin_projection()
  nameWithType: AsyncQueryTestBase<TFixture>.GroupJoin_projection()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.GroupJoin_projection()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GroupJoin_projection
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 3008
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task GroupJoin_projection()
    content.vb: Public Overridable Function GroupJoin_projection As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).GroupJoin_projection()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).GroupJoin_projection()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupJoin_DefaultIfEmpty
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupJoin_DefaultIfEmpty
  id: GroupJoin_DefaultIfEmpty
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: GroupJoin_DefaultIfEmpty()
  nameWithType: AsyncQueryTestBase<TFixture>.GroupJoin_DefaultIfEmpty()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.GroupJoin_DefaultIfEmpty()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GroupJoin_DefaultIfEmpty
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 3018
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task GroupJoin_DefaultIfEmpty()
    content.vb: Public Overridable Function GroupJoin_DefaultIfEmpty As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).GroupJoin_DefaultIfEmpty()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).GroupJoin_DefaultIfEmpty()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupJoin_DefaultIfEmpty2
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupJoin_DefaultIfEmpty2
  id: GroupJoin_DefaultIfEmpty2
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: GroupJoin_DefaultIfEmpty2()
  nameWithType: AsyncQueryTestBase<TFixture>.GroupJoin_DefaultIfEmpty2()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.GroupJoin_DefaultIfEmpty2()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GroupJoin_DefaultIfEmpty2
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 3028
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task GroupJoin_DefaultIfEmpty2()
    content.vb: Public Overridable Function GroupJoin_DefaultIfEmpty2 As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).GroupJoin_DefaultIfEmpty2()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).GroupJoin_DefaultIfEmpty2()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupJoin_DefaultIfEmpty3
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupJoin_DefaultIfEmpty3
  id: GroupJoin_DefaultIfEmpty3
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: GroupJoin_DefaultIfEmpty3()
  nameWithType: AsyncQueryTestBase<TFixture>.GroupJoin_DefaultIfEmpty3()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.GroupJoin_DefaultIfEmpty3()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GroupJoin_DefaultIfEmpty3
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 3038
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task GroupJoin_DefaultIfEmpty3()
    content.vb: Public Overridable Function GroupJoin_DefaultIfEmpty3 As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).GroupJoin_DefaultIfEmpty3()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).GroupJoin_DefaultIfEmpty3()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupJoin_tracking_groups
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupJoin_tracking_groups
  id: GroupJoin_tracking_groups
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: GroupJoin_tracking_groups()
  nameWithType: AsyncQueryTestBase<TFixture>.GroupJoin_tracking_groups()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.GroupJoin_tracking_groups()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GroupJoin_tracking_groups
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 3048
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task GroupJoin_tracking_groups()
    content.vb: Public Overridable Function GroupJoin_tracking_groups As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).GroupJoin_tracking_groups()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).GroupJoin_tracking_groups()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupJoin_tracking_groups2
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.GroupJoin_tracking_groups2
  id: GroupJoin_tracking_groups2
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: GroupJoin_tracking_groups2()
  nameWithType: AsyncQueryTestBase<TFixture>.GroupJoin_tracking_groups2()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.GroupJoin_tracking_groups2()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GroupJoin_tracking_groups2
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 3060
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task GroupJoin_tracking_groups2()
    content.vb: Public Overridable Function GroupJoin_tracking_groups2 As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).GroupJoin_tracking_groups2()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).GroupJoin_tracking_groups2()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.SelectMany_Joined
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.SelectMany_Joined
  id: SelectMany_Joined
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: SelectMany_Joined()
  nameWithType: AsyncQueryTestBase<TFixture>.SelectMany_Joined()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.SelectMany_Joined()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: SelectMany_Joined
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 3072
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task SelectMany_Joined()
    content.vb: Public Overridable Function SelectMany_Joined As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).SelectMany_Joined()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).SelectMany_Joined()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.SelectMany_Joined_DefaultIfEmpty
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.SelectMany_Joined_DefaultIfEmpty
  id: SelectMany_Joined_DefaultIfEmpty
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: SelectMany_Joined_DefaultIfEmpty()
  nameWithType: AsyncQueryTestBase<TFixture>.SelectMany_Joined_DefaultIfEmpty()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.SelectMany_Joined_DefaultIfEmpty()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: SelectMany_Joined_DefaultIfEmpty
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 3081
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task SelectMany_Joined_DefaultIfEmpty()
    content.vb: Public Overridable Function SelectMany_Joined_DefaultIfEmpty As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).SelectMany_Joined_DefaultIfEmpty()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).SelectMany_Joined_DefaultIfEmpty()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.SelectMany_Joined_DefaultIfEmpty2
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.SelectMany_Joined_DefaultIfEmpty2
  id: SelectMany_Joined_DefaultIfEmpty2
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: SelectMany_Joined_DefaultIfEmpty2()
  nameWithType: AsyncQueryTestBase<TFixture>.SelectMany_Joined_DefaultIfEmpty2()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.SelectMany_Joined_DefaultIfEmpty2()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: SelectMany_Joined_DefaultIfEmpty2
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 3090
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task SelectMany_Joined_DefaultIfEmpty2()
    content.vb: Public Overridable Function SelectMany_Joined_DefaultIfEmpty2 As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).SelectMany_Joined_DefaultIfEmpty2()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).SelectMany_Joined_DefaultIfEmpty2()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_many_cross_join_same_collection
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Select_many_cross_join_same_collection
  id: Select_many_cross_join_same_collection
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Select_many_cross_join_same_collection()
  nameWithType: AsyncQueryTestBase<TFixture>.Select_many_cross_join_same_collection()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Select_many_cross_join_same_collection()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Select_many_cross_join_same_collection
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 3099
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Select_many_cross_join_same_collection()
    content.vb: Public Overridable Function Select_many_cross_join_same_collection As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Select_many_cross_join_same_collection()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Select_many_cross_join_same_collection()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Join_same_collection_multiple
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Join_same_collection_multiple
  id: Join_same_collection_multiple
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Join_same_collection_multiple()
  nameWithType: AsyncQueryTestBase<TFixture>.Join_same_collection_multiple()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Join_same_collection_multiple()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Join_same_collection_multiple
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 3106
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Join_same_collection_multiple()
    content.vb: Public Overridable Function Join_same_collection_multiple As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Join_same_collection_multiple()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Join_same_collection_multiple()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Join_same_collection_force_alias_uniquefication
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Join_same_collection_force_alias_uniquefication
  id: Join_same_collection_force_alias_uniquefication
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Join_same_collection_force_alias_uniquefication()
  nameWithType: AsyncQueryTestBase<TFixture>.Join_same_collection_force_alias_uniquefication()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Join_same_collection_force_alias_uniquefication()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Join_same_collection_force_alias_uniquefication
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 3113
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Join_same_collection_force_alias_uniquefication()
    content.vb: Public Overridable Function Join_same_collection_force_alias_uniquefication As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Join_same_collection_force_alias_uniquefication()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Join_same_collection_force_alias_uniquefication()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Contains_with_subquery
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Contains_with_subquery
  id: Contains_with_subquery
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Contains_with_subquery()
  nameWithType: AsyncQueryTestBase<TFixture>.Contains_with_subquery()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Contains_with_subquery()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Contains_with_subquery
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 3120
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Contains_with_subquery()
    content.vb: Public Overridable Function Contains_with_subquery As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Contains_with_subquery()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Contains_with_subquery()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Contains_with_local_array_closure
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Contains_with_local_array_closure
  id: Contains_with_local_array_closure
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Contains_with_local_array_closure()
  nameWithType: AsyncQueryTestBase<TFixture>.Contains_with_local_array_closure()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Contains_with_local_array_closure()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Contains_with_local_array_closure
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 3127
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Contains_with_local_array_closure()
    content.vb: Public Overridable Function Contains_with_local_array_closure As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Contains_with_local_array_closure()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Contains_with_local_array_closure()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Contains_with_local_array_inline
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Contains_with_local_array_inline
  id: Contains_with_local_array_inline
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Contains_with_local_array_inline()
  nameWithType: AsyncQueryTestBase<TFixture>.Contains_with_local_array_inline()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Contains_with_local_array_inline()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Contains_with_local_array_inline
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 3135
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Contains_with_local_array_inline()
    content.vb: Public Overridable Function Contains_with_local_array_inline As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Contains_with_local_array_inline()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Contains_with_local_array_inline()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Contains_with_local_list_closure
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Contains_with_local_list_closure
  id: Contains_with_local_list_closure
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Contains_with_local_list_closure()
  nameWithType: AsyncQueryTestBase<TFixture>.Contains_with_local_list_closure()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Contains_with_local_list_closure()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Contains_with_local_list_closure
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 3142
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Contains_with_local_list_closure()
    content.vb: Public Overridable Function Contains_with_local_list_closure As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Contains_with_local_list_closure()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Contains_with_local_list_closure()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Contains_with_local_list_inline
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Contains_with_local_list_inline
  id: Contains_with_local_list_inline
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Contains_with_local_list_inline()
  nameWithType: AsyncQueryTestBase<TFixture>.Contains_with_local_list_inline()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Contains_with_local_list_inline()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Contains_with_local_list_inline
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 3150
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Contains_with_local_list_inline()
    content.vb: Public Overridable Function Contains_with_local_list_inline As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Contains_with_local_list_inline()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Contains_with_local_list_inline()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Contains_with_local_list_inline_closure_mix
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Contains_with_local_list_inline_closure_mix
  id: Contains_with_local_list_inline_closure_mix
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Contains_with_local_list_inline_closure_mix()
  nameWithType: AsyncQueryTestBase<TFixture>.Contains_with_local_list_inline_closure_mix()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Contains_with_local_list_inline_closure_mix()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Contains_with_local_list_inline_closure_mix
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 3157
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Contains_with_local_list_inline_closure_mix()
    content.vb: Public Overridable Function Contains_with_local_list_inline_closure_mix As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Contains_with_local_list_inline_closure_mix()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Contains_with_local_list_inline_closure_mix()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Contains_with_local_collection_false
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Contains_with_local_collection_false
  id: Contains_with_local_collection_false
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Contains_with_local_collection_false()
  nameWithType: AsyncQueryTestBase<TFixture>.Contains_with_local_collection_false()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Contains_with_local_collection_false()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Contains_with_local_collection_false
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 3165
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Contains_with_local_collection_false()
    content.vb: Public Overridable Function Contains_with_local_collection_false As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Contains_with_local_collection_false()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Contains_with_local_collection_false()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Contains_with_local_collection_complex_predicate_and
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Contains_with_local_collection_complex_predicate_and
  id: Contains_with_local_collection_complex_predicate_and
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Contains_with_local_collection_complex_predicate_and()
  nameWithType: AsyncQueryTestBase<TFixture>.Contains_with_local_collection_complex_predicate_and()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Contains_with_local_collection_complex_predicate_and()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Contains_with_local_collection_complex_predicate_and
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 3173
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Contains_with_local_collection_complex_predicate_and()
    content.vb: Public Overridable Function Contains_with_local_collection_complex_predicate_and As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Contains_with_local_collection_complex_predicate_and()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Contains_with_local_collection_complex_predicate_and()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Contains_with_local_collection_complex_predicate_or
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Contains_with_local_collection_complex_predicate_or
  id: Contains_with_local_collection_complex_predicate_or
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Contains_with_local_collection_complex_predicate_or()
  nameWithType: AsyncQueryTestBase<TFixture>.Contains_with_local_collection_complex_predicate_or()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Contains_with_local_collection_complex_predicate_or()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Contains_with_local_collection_complex_predicate_or
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 3181
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Contains_with_local_collection_complex_predicate_or()
    content.vb: Public Overridable Function Contains_with_local_collection_complex_predicate_or As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Contains_with_local_collection_complex_predicate_or()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Contains_with_local_collection_complex_predicate_or()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Contains_with_local_collection_complex_predicate_not_matching_ins1
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Contains_with_local_collection_complex_predicate_not_matching_ins1
  id: Contains_with_local_collection_complex_predicate_not_matching_ins1
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Contains_with_local_collection_complex_predicate_not_matching_ins1()
  nameWithType: AsyncQueryTestBase<TFixture>.Contains_with_local_collection_complex_predicate_not_matching_ins1()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Contains_with_local_collection_complex_predicate_not_matching_ins1()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Contains_with_local_collection_complex_predicate_not_matching_ins1
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 3189
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Contains_with_local_collection_complex_predicate_not_matching_ins1()
    content.vb: Public Overridable Function Contains_with_local_collection_complex_predicate_not_matching_ins1 As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Contains_with_local_collection_complex_predicate_not_matching_ins1()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Contains_with_local_collection_complex_predicate_not_matching_ins1()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Contains_with_local_collection_complex_predicate_not_matching_ins2
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Contains_with_local_collection_complex_predicate_not_matching_ins2
  id: Contains_with_local_collection_complex_predicate_not_matching_ins2
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Contains_with_local_collection_complex_predicate_not_matching_ins2()
  nameWithType: AsyncQueryTestBase<TFixture>.Contains_with_local_collection_complex_predicate_not_matching_ins2()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Contains_with_local_collection_complex_predicate_not_matching_ins2()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Contains_with_local_collection_complex_predicate_not_matching_ins2
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 3197
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Contains_with_local_collection_complex_predicate_not_matching_ins2()
    content.vb: Public Overridable Function Contains_with_local_collection_complex_predicate_not_matching_ins2 As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Contains_with_local_collection_complex_predicate_not_matching_ins2()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Contains_with_local_collection_complex_predicate_not_matching_ins2()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Contains_with_local_collection_sql_injection
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Contains_with_local_collection_sql_injection
  id: Contains_with_local_collection_sql_injection
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Contains_with_local_collection_sql_injection()
  nameWithType: AsyncQueryTestBase<TFixture>.Contains_with_local_collection_sql_injection()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Contains_with_local_collection_sql_injection()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Contains_with_local_collection_sql_injection
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 3205
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Contains_with_local_collection_sql_injection()
    content.vb: Public Overridable Function Contains_with_local_collection_sql_injection As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Contains_with_local_collection_sql_injection()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Contains_with_local_collection_sql_injection()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Contains_with_local_collection_empty_closure
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Contains_with_local_collection_empty_closure
  id: Contains_with_local_collection_empty_closure
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Contains_with_local_collection_empty_closure()
  nameWithType: AsyncQueryTestBase<TFixture>.Contains_with_local_collection_empty_closure()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Contains_with_local_collection_empty_closure()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Contains_with_local_collection_empty_closure
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 3213
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Contains_with_local_collection_empty_closure()
    content.vb: Public Overridable Function Contains_with_local_collection_empty_closure As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Contains_with_local_collection_empty_closure()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Contains_with_local_collection_empty_closure()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Contains_with_local_collection_empty_inline
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Contains_with_local_collection_empty_inline
  id: Contains_with_local_collection_empty_inline
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Contains_with_local_collection_empty_inline()
  nameWithType: AsyncQueryTestBase<TFixture>.Contains_with_local_collection_empty_inline()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Contains_with_local_collection_empty_inline()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Contains_with_local_collection_empty_inline
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 3222
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Contains_with_local_collection_empty_inline()
    content.vb: Public Overridable Function Contains_with_local_collection_empty_inline As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Contains_with_local_collection_empty_inline()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Contains_with_local_collection_empty_inline()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Contains_top_level
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Contains_top_level
  id: Contains_top_level
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Contains_top_level()
  nameWithType: AsyncQueryTestBase<TFixture>.Contains_top_level()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Contains_top_level()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Contains_top_level
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 3229
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Contains_top_level()
    content.vb: Public Overridable Function Contains_top_level As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Contains_top_level()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Contains_top_level()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_chain
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Where_chain
  id: Where_chain
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Where_chain()
  nameWithType: AsyncQueryTestBase<TFixture>.Where_chain()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Where_chain()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where_chain
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 3236
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Where_chain()
    content.vb: Public Overridable Function Where_chain As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Where_chain()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Where_chain()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Throws_on_concurrent_query_list
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Throws_on_concurrent_query_list
  id: Throws_on_concurrent_query_list
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Throws_on_concurrent_query_list()
  nameWithType: AsyncQueryTestBase<TFixture>.Throws_on_concurrent_query_list()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Throws_on_concurrent_query_list()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Throws_on_concurrent_query_list
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 3244
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Throws_on_concurrent_query_list()
    content.vb: Public Overridable Function Throws_on_concurrent_query_list As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Throws_on_concurrent_query_list()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Throws_on_concurrent_query_list()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Throws_on_concurrent_query_first
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Throws_on_concurrent_query_first
  id: Throws_on_concurrent_query_first
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Throws_on_concurrent_query_first()
  nameWithType: AsyncQueryTestBase<TFixture>.Throws_on_concurrent_query_first()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Throws_on_concurrent_query_first()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Throws_on_concurrent_query_first
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 3258
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Throws_on_concurrent_query_first()
    content.vb: Public Overridable Function Throws_on_concurrent_query_first As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Throws_on_concurrent_query_first()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Throws_on_concurrent_query_first()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Concat_simple
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Concat_simple
  id: Concat_simple
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Concat_simple()
  nameWithType: AsyncQueryTestBase<TFixture>.Concat_simple()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Concat_simple()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Concat_simple
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 3274
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Concat_simple()
    content.vb: Public Overridable Function Concat_simple As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Concat_simple()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Concat_simple()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Concat_nested
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Concat_nested
  id: Concat_nested
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Concat_nested()
  nameWithType: AsyncQueryTestBase<TFixture>.Concat_nested()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Concat_nested()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Concat_nested
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 3291
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Concat_nested()
    content.vb: Public Overridable Function Concat_nested As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Concat_nested()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Concat_nested()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Concat_non_entity
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Concat_non_entity
  id: Concat_non_entity
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Concat_non_entity()
  nameWithType: AsyncQueryTestBase<TFixture>.Concat_non_entity()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Concat_non_entity()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Concat_non_entity
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 3299
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Concat_non_entity()
    content.vb: Public Overridable Function Concat_non_entity As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Concat_non_entity()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Concat_non_entity()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Except_simple
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Except_simple
  id: Except_simple
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Except_simple()
  nameWithType: AsyncQueryTestBase<TFixture>.Except_simple()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Except_simple()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Except_simple
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 3317
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Except_simple()
    content.vb: Public Overridable Function Except_simple As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Except_simple()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Except_simple()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Except_nested
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Except_nested
  id: Except_nested
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Except_nested()
  nameWithType: AsyncQueryTestBase<TFixture>.Except_nested()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Except_nested()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Except_nested
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 3325
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Except_nested()
    content.vb: Public Overridable Function Except_nested As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Except_nested()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Except_nested()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Except_non_entity
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Except_non_entity
  id: Except_non_entity
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Except_non_entity()
  nameWithType: AsyncQueryTestBase<TFixture>.Except_non_entity()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Except_non_entity()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Except_non_entity
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 3333
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Except_non_entity()
    content.vb: Public Overridable Function Except_non_entity As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Except_non_entity()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Except_non_entity()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Intersect_simple
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Intersect_simple
  id: Intersect_simple
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Intersect_simple()
  nameWithType: AsyncQueryTestBase<TFixture>.Intersect_simple()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Intersect_simple()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Intersect_simple
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 3351
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Intersect_simple()
    content.vb: Public Overridable Function Intersect_simple As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Intersect_simple()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Intersect_simple()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Intersect_nested
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Intersect_nested
  id: Intersect_nested
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Intersect_nested()
  nameWithType: AsyncQueryTestBase<TFixture>.Intersect_nested()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Intersect_nested()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Intersect_nested
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 3359
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Intersect_nested()
    content.vb: Public Overridable Function Intersect_nested As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Intersect_nested()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Intersect_nested()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Intersect_non_entity
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Intersect_non_entity
  id: Intersect_non_entity
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Intersect_non_entity()
  nameWithType: AsyncQueryTestBase<TFixture>.Intersect_non_entity()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Intersect_non_entity()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Intersect_non_entity
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 3367
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Intersect_non_entity()
    content.vb: Public Overridable Function Intersect_non_entity As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Intersect_non_entity()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Intersect_non_entity()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Union_simple
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Union_simple
  id: Union_simple
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Union_simple()
  nameWithType: AsyncQueryTestBase<TFixture>.Union_simple()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Union_simple()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Union_simple
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 3385
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Union_simple()
    content.vb: Public Overridable Function Union_simple As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Union_simple()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Union_simple()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Union_nested
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Union_nested
  id: Union_nested
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Union_nested()
  nameWithType: AsyncQueryTestBase<TFixture>.Union_nested()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Union_nested()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Union_nested
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 3393
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Union_nested()
    content.vb: Public Overridable Function Union_nested As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Union_nested()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Union_nested()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Union_non_entity
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Union_non_entity
  id: Union_non_entity
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Union_non_entity()
  nameWithType: AsyncQueryTestBase<TFixture>.Union_non_entity()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Union_non_entity()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Union_non_entity
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 3401
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Union_non_entity()
    content.vb: Public Overridable Function Union_non_entity As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Union_non_entity()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Union_non_entity()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.CreateContext
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.CreateContext
  id: CreateContext
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: CreateContext()
  nameWithType: AsyncQueryTestBase<TFixture>.CreateContext()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.CreateContext()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: CreateContext
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 3419
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: protected NorthwindContext CreateContext()
    content.vb: Protected Function CreateContext As NorthwindContext
    return:
      type: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.NorthwindContext
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).CreateContext()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).CreateContext()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.#ctor(`0)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.#ctor(`0)
  id: '#ctor(`0)'
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: AsyncQueryTestBase(TFixture)
  nameWithType: AsyncQueryTestBase<TFixture>.AsyncQueryTestBase(TFixture)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.AsyncQueryTestBase(TFixture)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 3424
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: protected AsyncQueryTestBase(TFixture fixture)
    content.vb: Protected Sub New(fixture As TFixture)
    parameters:
    - id: fixture
      type: '{TFixture}'
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).AsyncQueryTestBase(TFixture)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).AsyncQueryTestBase(TFixture)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Fixture
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Fixture
  id: Fixture
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: Fixture
  nameWithType: AsyncQueryTestBase<TFixture>.Fixture
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.Fixture
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Fixture
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 3429
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: protected TFixture Fixture { get; }
    content.vb: Protected ReadOnly Property Fixture As TFixture
    parameters: []
    return:
      type: '{TFixture}'
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).Fixture
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).Fixture
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.AssertQuery``1(System.Func{System.Linq.IQueryable{``0},System.Linq.IQueryable{System.Object}},System.Boolean,System.Int32,System.Action{System.Collections.Generic.IList{System.Object},System.Collections.Generic.IList{System.Object}})
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.AssertQuery``1(System.Func{System.Linq.IQueryable{``0},System.Linq.IQueryable{System.Object}},System.Boolean,System.Int32,System.Action{System.Collections.Generic.IList{System.Object},System.Collections.Generic.IList{System.Object}})
  id: AssertQuery``1(System.Func{System.Linq.IQueryable{``0},System.Linq.IQueryable{System.Object}},System.Boolean,System.Int32,System.Action{System.Collections.Generic.IList{System.Object},System.Collections.Generic.IList{System.Object}})
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: AssertQuery<TItem>(Func<IQueryable<TItem>, IQueryable<Object>>, Boolean, Int32, Action<IList<Object>, IList<Object>>)
  nameWithType: AsyncQueryTestBase<TFixture>.AssertQuery<TItem>(Func<IQueryable<TItem>, IQueryable<Object>>, Boolean, Int32, Action<IList<Object>, IList<Object>>)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.AssertQuery<TItem>(System.Func<System.Linq.IQueryable<TItem>, System.Linq.IQueryable<System.Object>>, System.Boolean, System.Int32, System.Action<System.Collections.Generic.IList<System.Object>, System.Collections.Generic.IList<System.Object>>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: AssertQuery
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 3565
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: 'protected Task AssertQuery<TItem>(Func<IQueryable<TItem>, IQueryable<object>> query, bool assertOrder = false, int entryCount = 0, Action<IList<object>, IList<object>> asserter = null)where TItem : class'
    content.vb: Protected Function AssertQuery(Of TItem As Class)(query As Func(Of IQueryable(Of TItem), IQueryable(Of Object)), assertOrder As Boolean = False, entryCount As Integer = 0, asserter As Action(Of IList(Of Object), IList(Of Object)) = Nothing) As Task
    parameters:
    - id: query
      type: System.Func{System.Linq.IQueryable{{TItem}},System.Linq.IQueryable{System.Object}}
    - id: assertOrder
      type: System.Boolean
    - id: entryCount
      type: System.Int32
    - id: asserter
      type: System.Action{System.Collections.Generic.IList{System.Object},System.Collections.Generic.IList{System.Object}}
    typeParameters:
    - id: TItem
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).AssertQuery(Of TItem)(Func(Of IQueryable(Of TItem), IQueryable(Of Object)), Boolean, Int32, Action(Of IList(Of Object), IList(Of Object)))
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).AssertQuery(Of TItem)(System.Func(Of System.Linq.IQueryable(Of TItem), System.Linq.IQueryable(Of System.Object)), System.Boolean, System.Int32, System.Action(Of System.Collections.Generic.IList(Of System.Object), System.Collections.Generic.IList(Of System.Object)))
  name.vb: AssertQuery(Of TItem)(Func(Of IQueryable(Of TItem), IQueryable(Of Object)), Boolean, Int32, Action(Of IList(Of Object), IList(Of Object)))
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.AssertQuery``1(System.Func{System.Linq.IQueryable{``0},System.Threading.Tasks.Task{System.Object}},System.Boolean,System.Int32,System.Action{System.Object,System.Object})
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.AssertQuery``1(System.Func{System.Linq.IQueryable{``0},System.Threading.Tasks.Task{System.Object}},System.Boolean,System.Int32,System.Action{System.Object,System.Object})
  id: AssertQuery``1(System.Func{System.Linq.IQueryable{``0},System.Threading.Tasks.Task{System.Object}},System.Boolean,System.Int32,System.Action{System.Object,System.Object})
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: AssertQuery<TItem>(Func<IQueryable<TItem>, Task<Object>>, Boolean, Int32, Action<Object, Object>)
  nameWithType: AsyncQueryTestBase<TFixture>.AssertQuery<TItem>(Func<IQueryable<TItem>, Task<Object>>, Boolean, Int32, Action<Object, Object>)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.AssertQuery<TItem>(System.Func<System.Linq.IQueryable<TItem>, System.Threading.Tasks.Task<System.Object>>, System.Boolean, System.Int32, System.Action<System.Object, System.Object>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: AssertQuery
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 3575
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: 'protected Task AssertQuery<TItem>(Func<IQueryable<TItem>, Task<object>> query, bool assertOrder = false, int entryCount = 0, Action<object, object> asserter = null)where TItem : class'
    content.vb: Protected Function AssertQuery(Of TItem As Class)(query As Func(Of IQueryable(Of TItem), Task(Of Object)), assertOrder As Boolean = False, entryCount As Integer = 0, asserter As Action(Of Object, Object) = Nothing) As Task
    parameters:
    - id: query
      type: System.Func{System.Linq.IQueryable{{TItem}},System.Threading.Tasks.Task{System.Object}}
    - id: assertOrder
      type: System.Boolean
    - id: entryCount
      type: System.Int32
    - id: asserter
      type: System.Action{System.Object,System.Object}
    typeParameters:
    - id: TItem
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).AssertQuery(Of TItem)(Func(Of IQueryable(Of TItem), Task(Of Object)), Boolean, Int32, Action(Of Object, Object))
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).AssertQuery(Of TItem)(System.Func(Of System.Linq.IQueryable(Of TItem), System.Threading.Tasks.Task(Of System.Object)), System.Boolean, System.Int32, System.Action(Of System.Object, System.Object))
  name.vb: AssertQuery(Of TItem)(Func(Of IQueryable(Of TItem), Task(Of Object)), Boolean, Int32, Action(Of Object, Object))
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.AssertQuery``1(System.Func{System.Linq.IQueryable{``0},System.Linq.IQueryable{System.Object}},System.Func{System.Linq.IQueryable{``0},System.Linq.IQueryable{System.Object}},System.Boolean,System.Int32,System.Action{System.Collections.Generic.IList{System.Object},System.Collections.Generic.IList{System.Object}})
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.AssertQuery``1(System.Func{System.Linq.IQueryable{``0},System.Linq.IQueryable{System.Object}},System.Func{System.Linq.IQueryable{``0},System.Linq.IQueryable{System.Object}},System.Boolean,System.Int32,System.Action{System.Collections.Generic.IList{System.Object},System.Collections.Generic.IList{System.Object}})
  id: AssertQuery``1(System.Func{System.Linq.IQueryable{``0},System.Linq.IQueryable{System.Object}},System.Func{System.Linq.IQueryable{``0},System.Linq.IQueryable{System.Object}},System.Boolean,System.Int32,System.Action{System.Collections.Generic.IList{System.Object},System.Collections.Generic.IList{System.Object}})
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1
  langs:
  - csharp
  - vb
  name: AssertQuery<TItem>(Func<IQueryable<TItem>, IQueryable<Object>>, Func<IQueryable<TItem>, IQueryable<Object>>, Boolean, Int32, Action<IList<Object>, IList<Object>>)
  nameWithType: AsyncQueryTestBase<TFixture>.AssertQuery<TItem>(Func<IQueryable<TItem>, IQueryable<Object>>, Func<IQueryable<TItem>, IQueryable<Object>>, Boolean, Int32, Action<IList<Object>, IList<Object>>)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>.AssertQuery<TItem>(System.Func<System.Linq.IQueryable<TItem>, System.Linq.IQueryable<System.Object>>, System.Func<System.Linq.IQueryable<TItem>, System.Linq.IQueryable<System.Object>>, System.Boolean, System.Int32, System.Action<System.Collections.Generic.IList<System.Object>, System.Collections.Generic.IList<System.Object>>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: AssertQuery
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsyncQueryTestBase.cs
    startLine: 3663
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: 'protected Task AssertQuery<TItem>(Func<IQueryable<TItem>, IQueryable<object>> efQuery, Func<IQueryable<TItem>, IQueryable<object>> l2oQuery, bool assertOrder = false, int entryCount = 0, Action<IList<object>, IList<object>> asserter = null)where TItem : class'
    content.vb: Protected Function AssertQuery(Of TItem As Class)(efQuery As Func(Of IQueryable(Of TItem), IQueryable(Of Object)), l2oQuery As Func(Of IQueryable(Of TItem), IQueryable(Of Object)), assertOrder As Boolean = False, entryCount As Integer = 0, asserter As Action(Of IList(Of Object), IList(Of Object)) = Nothing) As Task
    parameters:
    - id: efQuery
      type: System.Func{System.Linq.IQueryable{{TItem}},System.Linq.IQueryable{System.Object}}
    - id: l2oQuery
      type: System.Func{System.Linq.IQueryable{{TItem}},System.Linq.IQueryable{System.Object}}
    - id: assertOrder
      type: System.Boolean
    - id: entryCount
      type: System.Int32
    - id: asserter
      type: System.Action{System.Collections.Generic.IList{System.Object},System.Collections.Generic.IList{System.Object}}
    typeParameters:
    - id: TItem
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AsyncQueryTestBase(Of TFixture).AssertQuery(Of TItem)(Func(Of IQueryable(Of TItem), IQueryable(Of Object)), Func(Of IQueryable(Of TItem), IQueryable(Of Object)), Boolean, Int32, Action(Of IList(Of Object), IList(Of Object)))
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture).AssertQuery(Of TItem)(System.Func(Of System.Linq.IQueryable(Of TItem), System.Linq.IQueryable(Of System.Object)), System.Func(Of System.Linq.IQueryable(Of TItem), System.Linq.IQueryable(Of System.Object)), System.Boolean, System.Int32, System.Action(Of System.Collections.Generic.IList(Of System.Object), System.Collections.Generic.IList(Of System.Object)))
  name.vb: AssertQuery(Of TItem)(Func(Of IQueryable(Of TItem), IQueryable(Of Object)), Func(Of IQueryable(Of TItem), IQueryable(Of Object)), Boolean, Int32, Action(Of IList(Of Object), IList(Of Object)))
references:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests
  commentId: N:Microsoft.EntityFrameworkCore.Specification.Tests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Specification.Tests
  nameWithType: Microsoft.EntityFrameworkCore.Specification.Tests
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase`1.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<AsyncQueryTestBase<TFixture>, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<AsyncQueryTestBase<TFixture>, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of AsyncQueryTestBase(Of TFixture), TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture), TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of AsyncQueryTestBase(Of TFixture), TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<AsyncQueryTestBase<TFixture>, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<AsyncQueryTestBase<TFixture>, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase<TFixture>, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of AsyncQueryTestBase(Of TFixture), TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of AsyncQueryTestBase(Of TFixture), TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Specification.Tests.AsyncQueryTestBase(Of TFixture), TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.Order
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.Order
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind
  isExternal: false
  name: Order
  nameWithType: Order
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.Order
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind
  commentId: N:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind
  nameWithType: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.NorthwindContext
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.NorthwindContext
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind
  isExternal: false
  name: NorthwindContext
  nameWithType: NorthwindContext
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.NorthwindContext
- uid: '{TFixture}'
  commentId: '!:TFixture'
  definition: TFixture
  name: TFixture
  nameWithType: TFixture
  fullName: TFixture
- uid: TFixture
  isExternal: false
  name: TFixture
  nameWithType: TFixture
  fullName: TFixture
- uid: System.Func{System.Linq.IQueryable{{TItem}},System.Linq.IQueryable{System.Object}}
  commentId: T:System.Func{System.Linq.IQueryable{``0},System.Linq.IQueryable{System.Object}}
  parent: System
  definition: System.Func`2
  name: Func<IQueryable<TItem>, IQueryable<Object>>
  nameWithType: Func<IQueryable<TItem>, IQueryable<Object>>
  fullName: System.Func<System.Linq.IQueryable<TItem>, System.Linq.IQueryable<System.Object>>
  nameWithType.vb: Func(Of IQueryable(Of TItem), IQueryable(Of Object))
  fullname.vb: System.Func(Of System.Linq.IQueryable(Of TItem), System.Linq.IQueryable(Of System.Object))
  name.vb: Func(Of IQueryable(Of TItem), IQueryable(Of Object))
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{System.Collections.Generic.IList{System.Object},System.Collections.Generic.IList{System.Object}}
  commentId: T:System.Action{System.Collections.Generic.IList{System.Object},System.Collections.Generic.IList{System.Object}}
  parent: System
  definition: System.Action`2
  name: Action<IList<Object>, IList<Object>>
  nameWithType: Action<IList<Object>, IList<Object>>
  fullName: System.Action<System.Collections.Generic.IList<System.Object>, System.Collections.Generic.IList<System.Object>>
  nameWithType.vb: Action(Of IList(Of Object), IList(Of Object))
  fullname.vb: System.Action(Of System.Collections.Generic.IList(Of System.Object), System.Collections.Generic.IList(Of System.Object))
  name.vb: Action(Of IList(Of Object), IList(Of Object))
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullname.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullname.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{System.Linq.IQueryable{{TItem}},System.Threading.Tasks.Task{System.Object}}
  commentId: T:System.Func{System.Linq.IQueryable{``0},System.Threading.Tasks.Task{System.Object}}
  parent: System
  definition: System.Func`2
  name: Func<IQueryable<TItem>, Task<Object>>
  nameWithType: Func<IQueryable<TItem>, Task<Object>>
  fullName: System.Func<System.Linq.IQueryable<TItem>, System.Threading.Tasks.Task<System.Object>>
  nameWithType.vb: Func(Of IQueryable(Of TItem), Task(Of Object))
  fullname.vb: System.Func(Of System.Linq.IQueryable(Of TItem), System.Threading.Tasks.Task(Of System.Object))
  name.vb: Func(Of IQueryable(Of TItem), Task(Of Object))
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{System.Object,System.Object}
  commentId: T:System.Action{System.Object,System.Object}
  parent: System
  definition: System.Action`2
  name: Action<Object, Object>
  nameWithType: Action<Object, Object>
  fullName: System.Action<System.Object, System.Object>
  nameWithType.vb: Action(Of Object, Object)
  fullname.vb: System.Action(Of System.Object, System.Object)
  name.vb: Action(Of Object, Object)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
