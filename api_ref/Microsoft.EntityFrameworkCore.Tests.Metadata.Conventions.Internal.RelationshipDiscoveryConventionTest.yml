### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest
  commentId: T:Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest
  id: RelationshipDiscoveryConventionTest
  parent: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal
  children:
  - Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Ambiguous_navigations_are_not_discovered
  - Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Ambiguous_self_ref_is_not_discovered
  - Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Bidirectional_ambiguous_cardinality_is_discovered
  - Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Collection_navigation_without_setter_is_discovered
  - Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Does_not_discover_nonNavigation_properties
  - Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Does_not_throw_on_shadow_entity_types
  - Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Entity_type_is_not_discovered_if_ignored
  - Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Entity_type_is_not_discovered_if_navigation_is_ignored
  - Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Existing_bidirectional_self_ref_is_removed_if_ambiguous
  - Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Existing_bidirectional_self_ref_removes_ambiguity_if_higher_source
  - Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Existing_navigation_from_derived_is_promoted
  - Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Existing_navigation_to_derived_is_promoted
  - Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Existing_relationship_is_removed_if_ambiguous
  - Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Existing_relationship_is_removed_if_ambiguous_inverse
  - Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Existing_relationship_removes_ambiguity_if_higher_source
  - Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Existing_relationship_removes_ambiguity_in_inverse_if_higher_source
  - Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Existing_relationship_to_base_removes_ambiguity
  - Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Existing_relationship_to_base_removes_ambiguity_in_derived_inverse
  - Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Existing_unidirectional_self_ref_is_removed_if_ambiguous
  - Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Existing_unidirectional_self_ref_removes_ambiguity_if_higher_source
  - Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Many_to_many_bidirectional_is_not_discovered
  - Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Many_to_one_bidirectional_is_discovered
  - Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Many_to_one_unidirectional_is_discovered
  - Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Many_to_one_unidirectional_is_not_upgraded_to_many_to_one_bidirectional_if_higher_source
  - Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Many_to_one_unidirectional_is_upgraded_to_many_to_one_bidirectional
  - Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Multiple_navigations_to_same_entity_type_are_discovered
  - Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Navigation_from_derived_is_not_discovered_if_ambiguous
  - Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Navigation_pairs_to_base_and_derived_are_discovered
  - Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Navigation_to_abstract_is_discovered
  - Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Navigation_to_base_is_discovered
  - Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Navigation_to_base_is_not_discovered_if_base_ignored
  - Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Navigation_to_derived_is_discovered
  - Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Navigation_to_derived_is_discovered_if_base_ignored
  - Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Navigation_to_derived_is_discovered_if_inverse_inherited
  - Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Navigation_to_derived_is_not_discovered_if_inverse_ambiguous
  - Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Navigations_are_not_discovered_if_ambiguous_inverse
  - Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Navigations_to_base_and_derived_are_discovered
  - Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Navigations_to_base_and_derived_are_discovered_if_inverse_from_base
  - Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Navigations_to_base_and_derived_are_discovered_if_inverse_from_derived
  - Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Navigations_to_derived_and_base_are_discovered_if_inverse_from_base
  - Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.One_to_many_bidirectional_is_discovered
  - Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.One_to_many_unidirectional_is_discovered
  - Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.One_to_many_unidirectional_is_not_upgraded_to_one_to_many_bidirectional_if_higher_source
  - Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.One_to_many_unidirectional_is_not_upgraded_to_one_to_one_bidirectional_if_higher_source
  - Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.One_to_many_unidirectional_is_upgraded_to_one_to_many_bidirectional
  - Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.One_to_many_unidirectional_is_upgraded_to_one_to_one_bidirectional
  - Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.One_to_many_unidirectional_self_ref_is_discovered
  - Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.One_to_many_unidirectional_self_ref_is_not_upgraded_to_one_to_one_bidirectional_if_higher_source
  - Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.One_to_many_unidirectional_self_ref_is_upgraded_to_one_to_one_bidirectional
  - Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.One_to_one_bidirectional_is_discovered
  - Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.One_to_one_bidirectional_self_ref_is_discovered
  - Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Two_one_to_many_unidirectional_are_upgraded_to_one_to_one_bidirectional
  - Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Unidirectional_ambiguous_cardinality_is_discovered
  langs:
  - csharp
  - vb
  name: RelationshipDiscoveryConventionTest
  nameWithType: RelationshipDiscoveryConventionTest
  fullName: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest
  type: Class
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: RelationshipDiscoveryConventionTest
    path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
    startLine: 16
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal
  syntax:
    content: public class RelationshipDiscoveryConventionTest
    content.vb: Public Class RelationshipDiscoveryConventionTest
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Entity_type_is_not_discovered_if_ignored
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Entity_type_is_not_discovered_if_ignored
  id: Entity_type_is_not_discovered_if_ignored
  parent: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest
  langs:
  - csharp
  - vb
  name: Entity_type_is_not_discovered_if_ignored()
  nameWithType: RelationshipDiscoveryConventionTest.Entity_type_is_not_discovered_if_ignored()
  fullName: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Entity_type_is_not_discovered_if_ignored()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Entity_type_is_not_discovered_if_ignored
    path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
    startLine: 18
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal
  syntax:
    content: >-
      [Fact]

      public void Entity_type_is_not_discovered_if_ignored()
    content.vb: >-
      <Fact>

      Public Sub Entity_type_is_not_discovered_if_ignored
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Entity_type_is_not_discovered_if_navigation_is_ignored
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Entity_type_is_not_discovered_if_navigation_is_ignored
  id: Entity_type_is_not_discovered_if_navigation_is_ignored
  parent: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest
  langs:
  - csharp
  - vb
  name: Entity_type_is_not_discovered_if_navigation_is_ignored()
  nameWithType: RelationshipDiscoveryConventionTest.Entity_type_is_not_discovered_if_navigation_is_ignored()
  fullName: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Entity_type_is_not_discovered_if_navigation_is_ignored()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Entity_type_is_not_discovered_if_navigation_is_ignored
    path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
    startLine: 32
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal
  syntax:
    content: >-
      [Fact]

      public void Entity_type_is_not_discovered_if_navigation_is_ignored()
    content.vb: >-
      <Fact>

      Public Sub Entity_type_is_not_discovered_if_navigation_is_ignored
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.One_to_one_bidirectional_is_discovered
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.One_to_one_bidirectional_is_discovered
  id: One_to_one_bidirectional_is_discovered
  parent: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest
  langs:
  - csharp
  - vb
  name: One_to_one_bidirectional_is_discovered()
  nameWithType: RelationshipDiscoveryConventionTest.One_to_one_bidirectional_is_discovered()
  fullName: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.One_to_one_bidirectional_is_discovered()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: One_to_one_bidirectional_is_discovered
    path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
    startLine: 46
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal
  syntax:
    content: >-
      [Fact]

      public void One_to_one_bidirectional_is_discovered()
    content.vb: >-
      <Fact>

      Public Sub One_to_one_bidirectional_is_discovered
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.One_to_many_unidirectional_is_upgraded_to_one_to_one_bidirectional
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.One_to_many_unidirectional_is_upgraded_to_one_to_one_bidirectional
  id: One_to_many_unidirectional_is_upgraded_to_one_to_one_bidirectional
  parent: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest
  langs:
  - csharp
  - vb
  name: One_to_many_unidirectional_is_upgraded_to_one_to_one_bidirectional()
  nameWithType: RelationshipDiscoveryConventionTest.One_to_many_unidirectional_is_upgraded_to_one_to_one_bidirectional()
  fullName: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.One_to_many_unidirectional_is_upgraded_to_one_to_one_bidirectional()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: One_to_many_unidirectional_is_upgraded_to_one_to_one_bidirectional
    path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
    startLine: 57
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal
  syntax:
    content: >-
      [Fact]

      public void One_to_many_unidirectional_is_upgraded_to_one_to_one_bidirectional()
    content.vb: >-
      <Fact>

      Public Sub One_to_many_unidirectional_is_upgraded_to_one_to_one_bidirectional
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Two_one_to_many_unidirectional_are_upgraded_to_one_to_one_bidirectional
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Two_one_to_many_unidirectional_are_upgraded_to_one_to_one_bidirectional
  id: Two_one_to_many_unidirectional_are_upgraded_to_one_to_one_bidirectional
  parent: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest
  langs:
  - csharp
  - vb
  name: Two_one_to_many_unidirectional_are_upgraded_to_one_to_one_bidirectional()
  nameWithType: RelationshipDiscoveryConventionTest.Two_one_to_many_unidirectional_are_upgraded_to_one_to_one_bidirectional()
  fullName: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Two_one_to_many_unidirectional_are_upgraded_to_one_to_one_bidirectional()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Two_one_to_many_unidirectional_are_upgraded_to_one_to_one_bidirectional
    path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
    startLine: 72
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal
  syntax:
    content: >-
      [Fact]

      public void Two_one_to_many_unidirectional_are_upgraded_to_one_to_one_bidirectional()
    content.vb: >-
      <Fact>

      Public Sub Two_one_to_many_unidirectional_are_upgraded_to_one_to_one_bidirectional
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.One_to_many_unidirectional_is_not_upgraded_to_one_to_one_bidirectional_if_higher_source
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.One_to_many_unidirectional_is_not_upgraded_to_one_to_one_bidirectional_if_higher_source
  id: One_to_many_unidirectional_is_not_upgraded_to_one_to_one_bidirectional_if_higher_source
  parent: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest
  langs:
  - csharp
  - vb
  name: One_to_many_unidirectional_is_not_upgraded_to_one_to_one_bidirectional_if_higher_source()
  nameWithType: RelationshipDiscoveryConventionTest.One_to_many_unidirectional_is_not_upgraded_to_one_to_one_bidirectional_if_higher_source()
  fullName: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.One_to_many_unidirectional_is_not_upgraded_to_one_to_one_bidirectional_if_higher_source()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: One_to_many_unidirectional_is_not_upgraded_to_one_to_one_bidirectional_if_higher_source
    path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
    startLine: 90
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal
  syntax:
    content: >-
      [Fact]

      public void One_to_many_unidirectional_is_not_upgraded_to_one_to_one_bidirectional_if_higher_source()
    content.vb: >-
      <Fact>

      Public Sub One_to_many_unidirectional_is_not_upgraded_to_one_to_one_bidirectional_if_higher_source
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.One_to_many_unidirectional_is_discovered
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.One_to_many_unidirectional_is_discovered
  id: One_to_many_unidirectional_is_discovered
  parent: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest
  langs:
  - csharp
  - vb
  name: One_to_many_unidirectional_is_discovered()
  nameWithType: RelationshipDiscoveryConventionTest.One_to_many_unidirectional_is_discovered()
  fullName: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.One_to_many_unidirectional_is_discovered()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: One_to_many_unidirectional_is_discovered
    path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
    startLine: 105
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal
  syntax:
    content: >-
      [Fact]

      public void One_to_many_unidirectional_is_discovered()
    content.vb: >-
      <Fact>

      Public Sub One_to_many_unidirectional_is_discovered
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.One_to_many_unidirectional_is_upgraded_to_one_to_many_bidirectional
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.One_to_many_unidirectional_is_upgraded_to_one_to_many_bidirectional
  id: One_to_many_unidirectional_is_upgraded_to_one_to_many_bidirectional
  parent: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest
  langs:
  - csharp
  - vb
  name: One_to_many_unidirectional_is_upgraded_to_one_to_many_bidirectional()
  nameWithType: RelationshipDiscoveryConventionTest.One_to_many_unidirectional_is_upgraded_to_one_to_many_bidirectional()
  fullName: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.One_to_many_unidirectional_is_upgraded_to_one_to_many_bidirectional()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: One_to_many_unidirectional_is_upgraded_to_one_to_many_bidirectional
    path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
    startLine: 116
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal
  syntax:
    content: >-
      [Fact]

      public void One_to_many_unidirectional_is_upgraded_to_one_to_many_bidirectional()
    content.vb: >-
      <Fact>

      Public Sub One_to_many_unidirectional_is_upgraded_to_one_to_many_bidirectional
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.One_to_many_unidirectional_is_not_upgraded_to_one_to_many_bidirectional_if_higher_source
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.One_to_many_unidirectional_is_not_upgraded_to_one_to_many_bidirectional_if_higher_source
  id: One_to_many_unidirectional_is_not_upgraded_to_one_to_many_bidirectional_if_higher_source
  parent: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest
  langs:
  - csharp
  - vb
  name: One_to_many_unidirectional_is_not_upgraded_to_one_to_many_bidirectional_if_higher_source()
  nameWithType: RelationshipDiscoveryConventionTest.One_to_many_unidirectional_is_not_upgraded_to_one_to_many_bidirectional_if_higher_source()
  fullName: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.One_to_many_unidirectional_is_not_upgraded_to_one_to_many_bidirectional_if_higher_source()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: One_to_many_unidirectional_is_not_upgraded_to_one_to_many_bidirectional_if_higher_source
    path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
    startLine: 130
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal
  syntax:
    content: >-
      [Fact]

      public void One_to_many_unidirectional_is_not_upgraded_to_one_to_many_bidirectional_if_higher_source()
    content.vb: >-
      <Fact>

      Public Sub One_to_many_unidirectional_is_not_upgraded_to_one_to_many_bidirectional_if_higher_source
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.One_to_many_bidirectional_is_discovered
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.One_to_many_bidirectional_is_discovered
  id: One_to_many_bidirectional_is_discovered
  parent: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest
  langs:
  - csharp
  - vb
  name: One_to_many_bidirectional_is_discovered()
  nameWithType: RelationshipDiscoveryConventionTest.One_to_many_bidirectional_is_discovered()
  fullName: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.One_to_many_bidirectional_is_discovered()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: One_to_many_bidirectional_is_discovered
    path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
    startLine: 145
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal
  syntax:
    content: >-
      [Fact]

      public void One_to_many_bidirectional_is_discovered()
    content.vb: >-
      <Fact>

      Public Sub One_to_many_bidirectional_is_discovered
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Many_to_one_unidirectional_is_discovered
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Many_to_one_unidirectional_is_discovered
  id: Many_to_one_unidirectional_is_discovered
  parent: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest
  langs:
  - csharp
  - vb
  name: Many_to_one_unidirectional_is_discovered()
  nameWithType: RelationshipDiscoveryConventionTest.Many_to_one_unidirectional_is_discovered()
  fullName: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Many_to_one_unidirectional_is_discovered()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Many_to_one_unidirectional_is_discovered
    path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
    startLine: 156
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal
  syntax:
    content: >-
      [Fact]

      public void Many_to_one_unidirectional_is_discovered()
    content.vb: >-
      <Fact>

      Public Sub Many_to_one_unidirectional_is_discovered
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Many_to_one_unidirectional_is_upgraded_to_many_to_one_bidirectional
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Many_to_one_unidirectional_is_upgraded_to_many_to_one_bidirectional
  id: Many_to_one_unidirectional_is_upgraded_to_many_to_one_bidirectional
  parent: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest
  langs:
  - csharp
  - vb
  name: Many_to_one_unidirectional_is_upgraded_to_many_to_one_bidirectional()
  nameWithType: RelationshipDiscoveryConventionTest.Many_to_one_unidirectional_is_upgraded_to_many_to_one_bidirectional()
  fullName: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Many_to_one_unidirectional_is_upgraded_to_many_to_one_bidirectional()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Many_to_one_unidirectional_is_upgraded_to_many_to_one_bidirectional
    path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
    startLine: 167
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal
  syntax:
    content: >-
      [Fact]

      public void Many_to_one_unidirectional_is_upgraded_to_many_to_one_bidirectional()
    content.vb: >-
      <Fact>

      Public Sub Many_to_one_unidirectional_is_upgraded_to_many_to_one_bidirectional
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Many_to_one_unidirectional_is_not_upgraded_to_many_to_one_bidirectional_if_higher_source
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Many_to_one_unidirectional_is_not_upgraded_to_many_to_one_bidirectional_if_higher_source
  id: Many_to_one_unidirectional_is_not_upgraded_to_many_to_one_bidirectional_if_higher_source
  parent: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest
  langs:
  - csharp
  - vb
  name: Many_to_one_unidirectional_is_not_upgraded_to_many_to_one_bidirectional_if_higher_source()
  nameWithType: RelationshipDiscoveryConventionTest.Many_to_one_unidirectional_is_not_upgraded_to_many_to_one_bidirectional_if_higher_source()
  fullName: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Many_to_one_unidirectional_is_not_upgraded_to_many_to_one_bidirectional_if_higher_source()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Many_to_one_unidirectional_is_not_upgraded_to_many_to_one_bidirectional_if_higher_source
    path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
    startLine: 181
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal
  syntax:
    content: >-
      [Fact]

      public void Many_to_one_unidirectional_is_not_upgraded_to_many_to_one_bidirectional_if_higher_source()
    content.vb: >-
      <Fact>

      Public Sub Many_to_one_unidirectional_is_not_upgraded_to_many_to_one_bidirectional_if_higher_source
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Many_to_one_bidirectional_is_discovered
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Many_to_one_bidirectional_is_discovered
  id: Many_to_one_bidirectional_is_discovered
  parent: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest
  langs:
  - csharp
  - vb
  name: Many_to_one_bidirectional_is_discovered()
  nameWithType: RelationshipDiscoveryConventionTest.Many_to_one_bidirectional_is_discovered()
  fullName: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Many_to_one_bidirectional_is_discovered()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Many_to_one_bidirectional_is_discovered
    path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
    startLine: 196
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal
  syntax:
    content: >-
      [Fact]

      public void Many_to_one_bidirectional_is_discovered()
    content.vb: >-
      <Fact>

      Public Sub Many_to_one_bidirectional_is_discovered
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Many_to_many_bidirectional_is_not_discovered
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Many_to_many_bidirectional_is_not_discovered
  id: Many_to_many_bidirectional_is_not_discovered
  parent: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest
  langs:
  - csharp
  - vb
  name: Many_to_many_bidirectional_is_not_discovered()
  nameWithType: RelationshipDiscoveryConventionTest.Many_to_many_bidirectional_is_not_discovered()
  fullName: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Many_to_many_bidirectional_is_not_discovered()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Many_to_many_bidirectional_is_not_discovered
    path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
    startLine: 207
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal
  syntax:
    content: >-
      [Fact]

      public void Many_to_many_bidirectional_is_not_discovered()
    content.vb: >-
      <Fact>

      Public Sub Many_to_many_bidirectional_is_not_discovered
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Ambiguous_navigations_are_not_discovered
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Ambiguous_navigations_are_not_discovered
  id: Ambiguous_navigations_are_not_discovered
  parent: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest
  langs:
  - csharp
  - vb
  name: Ambiguous_navigations_are_not_discovered()
  nameWithType: RelationshipDiscoveryConventionTest.Ambiguous_navigations_are_not_discovered()
  fullName: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Ambiguous_navigations_are_not_discovered()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Ambiguous_navigations_are_not_discovered
    path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
    startLine: 220
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal
  syntax:
    content: >-
      [Fact]

      public void Ambiguous_navigations_are_not_discovered()
    content.vb: >-
      <Fact>

      Public Sub Ambiguous_navigations_are_not_discovered
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Existing_relationship_is_removed_if_ambiguous
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Existing_relationship_is_removed_if_ambiguous
  id: Existing_relationship_is_removed_if_ambiguous
  parent: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest
  langs:
  - csharp
  - vb
  name: Existing_relationship_is_removed_if_ambiguous()
  nameWithType: RelationshipDiscoveryConventionTest.Existing_relationship_is_removed_if_ambiguous()
  fullName: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Existing_relationship_is_removed_if_ambiguous()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Existing_relationship_is_removed_if_ambiguous
    path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
    startLine: 232
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal
  syntax:
    content: >-
      [Fact]

      public void Existing_relationship_is_removed_if_ambiguous()
    content.vb: >-
      <Fact>

      Public Sub Existing_relationship_is_removed_if_ambiguous
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Existing_relationship_removes_ambiguity_if_higher_source
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Existing_relationship_removes_ambiguity_if_higher_source
  id: Existing_relationship_removes_ambiguity_if_higher_source
  parent: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest
  langs:
  - csharp
  - vb
  name: Existing_relationship_removes_ambiguity_if_higher_source()
  nameWithType: RelationshipDiscoveryConventionTest.Existing_relationship_removes_ambiguity_if_higher_source()
  fullName: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Existing_relationship_removes_ambiguity_if_higher_source()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Existing_relationship_removes_ambiguity_if_higher_source
    path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
    startLine: 248
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal
  syntax:
    content: >-
      [Fact]

      public void Existing_relationship_removes_ambiguity_if_higher_source()
    content.vb: >-
      <Fact>

      Public Sub Existing_relationship_removes_ambiguity_if_higher_source
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Navigations_are_not_discovered_if_ambiguous_inverse
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Navigations_are_not_discovered_if_ambiguous_inverse
  id: Navigations_are_not_discovered_if_ambiguous_inverse
  parent: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest
  langs:
  - csharp
  - vb
  name: Navigations_are_not_discovered_if_ambiguous_inverse()
  nameWithType: RelationshipDiscoveryConventionTest.Navigations_are_not_discovered_if_ambiguous_inverse()
  fullName: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Navigations_are_not_discovered_if_ambiguous_inverse()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Navigations_are_not_discovered_if_ambiguous_inverse
    path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
    startLine: 263
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal
  syntax:
    content: >-
      [Fact]

      public void Navigations_are_not_discovered_if_ambiguous_inverse()
    content.vb: >-
      <Fact>

      Public Sub Navigations_are_not_discovered_if_ambiguous_inverse
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Existing_relationship_is_removed_if_ambiguous_inverse
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Existing_relationship_is_removed_if_ambiguous_inverse
  id: Existing_relationship_is_removed_if_ambiguous_inverse
  parent: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest
  langs:
  - csharp
  - vb
  name: Existing_relationship_is_removed_if_ambiguous_inverse()
  nameWithType: RelationshipDiscoveryConventionTest.Existing_relationship_is_removed_if_ambiguous_inverse()
  fullName: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Existing_relationship_is_removed_if_ambiguous_inverse()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Existing_relationship_is_removed_if_ambiguous_inverse
    path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
    startLine: 278
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal
  syntax:
    content: >-
      [Fact]

      public void Existing_relationship_is_removed_if_ambiguous_inverse()
    content.vb: >-
      <Fact>

      Public Sub Existing_relationship_is_removed_if_ambiguous_inverse
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Existing_relationship_removes_ambiguity_in_inverse_if_higher_source
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Existing_relationship_removes_ambiguity_in_inverse_if_higher_source
  id: Existing_relationship_removes_ambiguity_in_inverse_if_higher_source
  parent: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest
  langs:
  - csharp
  - vb
  name: Existing_relationship_removes_ambiguity_in_inverse_if_higher_source()
  nameWithType: RelationshipDiscoveryConventionTest.Existing_relationship_removes_ambiguity_in_inverse_if_higher_source()
  fullName: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Existing_relationship_removes_ambiguity_in_inverse_if_higher_source()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Existing_relationship_removes_ambiguity_in_inverse_if_higher_source
    path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
    startLine: 294
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal
  syntax:
    content: >-
      [Fact]

      public void Existing_relationship_removes_ambiguity_in_inverse_if_higher_source()
    content.vb: >-
      <Fact>

      Public Sub Existing_relationship_removes_ambiguity_in_inverse_if_higher_source
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Multiple_navigations_to_same_entity_type_are_discovered
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Multiple_navigations_to_same_entity_type_are_discovered
  id: Multiple_navigations_to_same_entity_type_are_discovered
  parent: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest
  langs:
  - csharp
  - vb
  name: Multiple_navigations_to_same_entity_type_are_discovered()
  nameWithType: RelationshipDiscoveryConventionTest.Multiple_navigations_to_same_entity_type_are_discovered()
  fullName: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Multiple_navigations_to_same_entity_type_are_discovered()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Multiple_navigations_to_same_entity_type_are_discovered
    path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
    startLine: 309
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal
  syntax:
    content: >-
      [Fact]

      public void Multiple_navigations_to_same_entity_type_are_discovered()
    content.vb: >-
      <Fact>

      Public Sub Multiple_navigations_to_same_entity_type_are_discovered
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Navigations_to_base_and_derived_are_discovered
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Navigations_to_base_and_derived_are_discovered
  id: Navigations_to_base_and_derived_are_discovered
  parent: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest
  langs:
  - csharp
  - vb
  name: Navigations_to_base_and_derived_are_discovered()
  nameWithType: RelationshipDiscoveryConventionTest.Navigations_to_base_and_derived_are_discovered()
  fullName: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Navigations_to_base_and_derived_are_discovered()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Navigations_to_base_and_derived_are_discovered
    path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
    startLine: 339
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal
  syntax:
    content: >-
      [Fact]

      public void Navigations_to_base_and_derived_are_discovered()
    content.vb: >-
      <Fact>

      Public Sub Navigations_to_base_and_derived_are_discovered
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Navigations_to_base_and_derived_are_discovered_if_inverse_from_base
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Navigations_to_base_and_derived_are_discovered_if_inverse_from_base
  id: Navigations_to_base_and_derived_are_discovered_if_inverse_from_base
  parent: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest
  langs:
  - csharp
  - vb
  name: Navigations_to_base_and_derived_are_discovered_if_inverse_from_base()
  nameWithType: RelationshipDiscoveryConventionTest.Navigations_to_base_and_derived_are_discovered_if_inverse_from_base()
  fullName: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Navigations_to_base_and_derived_are_discovered_if_inverse_from_base()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Navigations_to_base_and_derived_are_discovered_if_inverse_from_base
    path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
    startLine: 363
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal
  syntax:
    content: >-
      [Fact]

      public void Navigations_to_base_and_derived_are_discovered_if_inverse_from_base()
    content.vb: >-
      <Fact>

      Public Sub Navigations_to_base_and_derived_are_discovered_if_inverse_from_base
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Navigations_to_derived_and_base_are_discovered_if_inverse_from_base
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Navigations_to_derived_and_base_are_discovered_if_inverse_from_base
  id: Navigations_to_derived_and_base_are_discovered_if_inverse_from_base
  parent: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest
  langs:
  - csharp
  - vb
  name: Navigations_to_derived_and_base_are_discovered_if_inverse_from_base()
  nameWithType: RelationshipDiscoveryConventionTest.Navigations_to_derived_and_base_are_discovered_if_inverse_from_base()
  fullName: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Navigations_to_derived_and_base_are_discovered_if_inverse_from_base()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Navigations_to_derived_and_base_are_discovered_if_inverse_from_base
    path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
    startLine: 386
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal
  syntax:
    content: >-
      [Fact]

      public void Navigations_to_derived_and_base_are_discovered_if_inverse_from_base()
    content.vb: >-
      <Fact>

      Public Sub Navigations_to_derived_and_base_are_discovered_if_inverse_from_base
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Navigations_to_base_and_derived_are_discovered_if_inverse_from_derived
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Navigations_to_base_and_derived_are_discovered_if_inverse_from_derived
  id: Navigations_to_base_and_derived_are_discovered_if_inverse_from_derived
  parent: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest
  langs:
  - csharp
  - vb
  name: Navigations_to_base_and_derived_are_discovered_if_inverse_from_derived()
  nameWithType: RelationshipDiscoveryConventionTest.Navigations_to_base_and_derived_are_discovered_if_inverse_from_derived()
  fullName: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Navigations_to_base_and_derived_are_discovered_if_inverse_from_derived()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Navigations_to_base_and_derived_are_discovered_if_inverse_from_derived
    path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
    startLine: 409
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal
  syntax:
    content: >-
      [Fact]

      public void Navigations_to_base_and_derived_are_discovered_if_inverse_from_derived()
    content.vb: >-
      <Fact>

      Public Sub Navigations_to_base_and_derived_are_discovered_if_inverse_from_derived
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Navigation_pairs_to_base_and_derived_are_discovered
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Navigation_pairs_to_base_and_derived_are_discovered
  id: Navigation_pairs_to_base_and_derived_are_discovered
  parent: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest
  langs:
  - csharp
  - vb
  name: Navigation_pairs_to_base_and_derived_are_discovered()
  nameWithType: RelationshipDiscoveryConventionTest.Navigation_pairs_to_base_and_derived_are_discovered()
  fullName: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Navigation_pairs_to_base_and_derived_are_discovered()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Navigation_pairs_to_base_and_derived_are_discovered
    path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
    startLine: 432
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal
  syntax:
    content: >-
      [Fact]

      public void Navigation_pairs_to_base_and_derived_are_discovered()
    content.vb: >-
      <Fact>

      Public Sub Navigation_pairs_to_base_and_derived_are_discovered
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Navigation_to_base_is_discovered
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Navigation_to_base_is_discovered
  id: Navigation_to_base_is_discovered
  parent: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest
  langs:
  - csharp
  - vb
  name: Navigation_to_base_is_discovered()
  nameWithType: RelationshipDiscoveryConventionTest.Navigation_to_base_is_discovered()
  fullName: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Navigation_to_base_is_discovered()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Navigation_to_base_is_discovered
    path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
    startLine: 455
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal
  syntax:
    content: >-
      [Fact]

      public void Navigation_to_base_is_discovered()
    content.vb: >-
      <Fact>

      Public Sub Navigation_to_base_is_discovered
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Existing_navigation_to_derived_is_promoted
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Existing_navigation_to_derived_is_promoted
  id: Existing_navigation_to_derived_is_promoted
  parent: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest
  langs:
  - csharp
  - vb
  name: Existing_navigation_to_derived_is_promoted()
  nameWithType: RelationshipDiscoveryConventionTest.Existing_navigation_to_derived_is_promoted()
  fullName: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Existing_navigation_to_derived_is_promoted()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Existing_navigation_to_derived_is_promoted
    path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
    startLine: 472
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal
  syntax:
    content: >-
      [Fact]

      public void Existing_navigation_to_derived_is_promoted()
    content.vb: >-
      <Fact>

      Public Sub Existing_navigation_to_derived_is_promoted
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Existing_navigation_from_derived_is_promoted
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Existing_navigation_from_derived_is_promoted
  id: Existing_navigation_from_derived_is_promoted
  parent: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest
  langs:
  - csharp
  - vb
  name: Existing_navigation_from_derived_is_promoted()
  nameWithType: RelationshipDiscoveryConventionTest.Existing_navigation_from_derived_is_promoted()
  fullName: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Existing_navigation_from_derived_is_promoted()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Existing_navigation_from_derived_is_promoted
    path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
    startLine: 495
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal
  syntax:
    content: >-
      [Fact]

      public void Existing_navigation_from_derived_is_promoted()
    content.vb: >-
      <Fact>

      Public Sub Existing_navigation_from_derived_is_promoted
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Navigation_from_derived_is_not_discovered_if_ambiguous
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Navigation_from_derived_is_not_discovered_if_ambiguous
  id: Navigation_from_derived_is_not_discovered_if_ambiguous
  parent: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest
  langs:
  - csharp
  - vb
  name: Navigation_from_derived_is_not_discovered_if_ambiguous()
  nameWithType: RelationshipDiscoveryConventionTest.Navigation_from_derived_is_not_discovered_if_ambiguous()
  fullName: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Navigation_from_derived_is_not_discovered_if_ambiguous()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Navigation_from_derived_is_not_discovered_if_ambiguous
    path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
    startLine: 518
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal
  syntax:
    content: >-
      [Fact]

      public void Navigation_from_derived_is_not_discovered_if_ambiguous()
    content.vb: >-
      <Fact>

      Public Sub Navigation_from_derived_is_not_discovered_if_ambiguous
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Existing_relationship_to_base_removes_ambiguity
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Existing_relationship_to_base_removes_ambiguity
  id: Existing_relationship_to_base_removes_ambiguity
  parent: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest
  langs:
  - csharp
  - vb
  name: Existing_relationship_to_base_removes_ambiguity()
  nameWithType: RelationshipDiscoveryConventionTest.Existing_relationship_to_base_removes_ambiguity()
  fullName: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Existing_relationship_to_base_removes_ambiguity()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Existing_relationship_to_base_removes_ambiguity
    path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
    startLine: 538
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal
  syntax:
    content: >-
      [Fact]

      public void Existing_relationship_to_base_removes_ambiguity()
    content.vb: >-
      <Fact>

      Public Sub Existing_relationship_to_base_removes_ambiguity
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Navigation_to_derived_is_not_discovered_if_inverse_ambiguous
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Navigation_to_derived_is_not_discovered_if_inverse_ambiguous
  id: Navigation_to_derived_is_not_discovered_if_inverse_ambiguous
  parent: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest
  langs:
  - csharp
  - vb
  name: Navigation_to_derived_is_not_discovered_if_inverse_ambiguous()
  nameWithType: RelationshipDiscoveryConventionTest.Navigation_to_derived_is_not_discovered_if_inverse_ambiguous()
  fullName: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Navigation_to_derived_is_not_discovered_if_inverse_ambiguous()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Navigation_to_derived_is_not_discovered_if_inverse_ambiguous
    path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
    startLine: 558
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal
  syntax:
    content: >-
      [Fact]

      public void Navigation_to_derived_is_not_discovered_if_inverse_ambiguous()
    content.vb: >-
      <Fact>

      Public Sub Navigation_to_derived_is_not_discovered_if_inverse_ambiguous
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Existing_relationship_to_base_removes_ambiguity_in_derived_inverse
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Existing_relationship_to_base_removes_ambiguity_in_derived_inverse
  id: Existing_relationship_to_base_removes_ambiguity_in_derived_inverse
  parent: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest
  langs:
  - csharp
  - vb
  name: Existing_relationship_to_base_removes_ambiguity_in_derived_inverse()
  nameWithType: RelationshipDiscoveryConventionTest.Existing_relationship_to_base_removes_ambiguity_in_derived_inverse()
  fullName: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Existing_relationship_to_base_removes_ambiguity_in_derived_inverse()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Existing_relationship_to_base_removes_ambiguity_in_derived_inverse
    path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
    startLine: 578
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal
  syntax:
    content: >-
      [Fact]

      public void Existing_relationship_to_base_removes_ambiguity_in_derived_inverse()
    content.vb: >-
      <Fact>

      Public Sub Existing_relationship_to_base_removes_ambiguity_in_derived_inverse
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Navigation_to_derived_is_discovered
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Navigation_to_derived_is_discovered
  id: Navigation_to_derived_is_discovered
  parent: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest
  langs:
  - csharp
  - vb
  name: Navigation_to_derived_is_discovered()
  nameWithType: RelationshipDiscoveryConventionTest.Navigation_to_derived_is_discovered()
  fullName: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Navigation_to_derived_is_discovered()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Navigation_to_derived_is_discovered
    path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
    startLine: 598
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal
  syntax:
    content: >-
      [Fact]

      public void Navigation_to_derived_is_discovered()
    content.vb: >-
      <Fact>

      Public Sub Navigation_to_derived_is_discovered
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Navigation_to_derived_is_discovered_if_inverse_inherited
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Navigation_to_derived_is_discovered_if_inverse_inherited
  id: Navigation_to_derived_is_discovered_if_inverse_inherited
  parent: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest
  langs:
  - csharp
  - vb
  name: Navigation_to_derived_is_discovered_if_inverse_inherited()
  nameWithType: RelationshipDiscoveryConventionTest.Navigation_to_derived_is_discovered_if_inverse_inherited()
  fullName: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Navigation_to_derived_is_discovered_if_inverse_inherited()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Navigation_to_derived_is_discovered_if_inverse_inherited
    path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
    startLine: 619
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal
  syntax:
    content: >-
      [Fact]

      public void Navigation_to_derived_is_discovered_if_inverse_inherited()
    content.vb: >-
      <Fact>

      Public Sub Navigation_to_derived_is_discovered_if_inverse_inherited
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Navigation_to_base_is_not_discovered_if_base_ignored
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Navigation_to_base_is_not_discovered_if_base_ignored
  id: Navigation_to_base_is_not_discovered_if_base_ignored
  parent: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest
  langs:
  - csharp
  - vb
  name: Navigation_to_base_is_not_discovered_if_base_ignored()
  nameWithType: RelationshipDiscoveryConventionTest.Navigation_to_base_is_not_discovered_if_base_ignored()
  fullName: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Navigation_to_base_is_not_discovered_if_base_ignored()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Navigation_to_base_is_not_discovered_if_base_ignored
    path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
    startLine: 640
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal
  syntax:
    content: >-
      [Fact]

      public void Navigation_to_base_is_not_discovered_if_base_ignored()
    content.vb: >-
      <Fact>

      Public Sub Navigation_to_base_is_not_discovered_if_base_ignored
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Navigation_to_derived_is_discovered_if_base_ignored
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Navigation_to_derived_is_discovered_if_base_ignored
  id: Navigation_to_derived_is_discovered_if_base_ignored
  parent: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest
  langs:
  - csharp
  - vb
  name: Navigation_to_derived_is_discovered_if_base_ignored()
  nameWithType: RelationshipDiscoveryConventionTest.Navigation_to_derived_is_discovered_if_base_ignored()
  fullName: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Navigation_to_derived_is_discovered_if_base_ignored()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Navigation_to_derived_is_discovered_if_base_ignored
    path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
    startLine: 658
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal
  syntax:
    content: >-
      [Fact]

      public void Navigation_to_derived_is_discovered_if_base_ignored()
    content.vb: >-
      <Fact>

      Public Sub Navigation_to_derived_is_discovered_if_base_ignored
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Does_not_throw_on_shadow_entity_types
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Does_not_throw_on_shadow_entity_types
  id: Does_not_throw_on_shadow_entity_types
  parent: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest
  langs:
  - csharp
  - vb
  name: Does_not_throw_on_shadow_entity_types()
  nameWithType: RelationshipDiscoveryConventionTest.Does_not_throw_on_shadow_entity_types()
  fullName: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Does_not_throw_on_shadow_entity_types()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Does_not_throw_on_shadow_entity_types
    path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
    startLine: 676
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal
  syntax:
    content: >-
      [Fact]

      public void Does_not_throw_on_shadow_entity_types()
    content.vb: >-
      <Fact>

      Public Sub Does_not_throw_on_shadow_entity_types
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Bidirectional_ambiguous_cardinality_is_discovered
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Bidirectional_ambiguous_cardinality_is_discovered
  id: Bidirectional_ambiguous_cardinality_is_discovered
  parent: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest
  langs:
  - csharp
  - vb
  name: Bidirectional_ambiguous_cardinality_is_discovered()
  nameWithType: RelationshipDiscoveryConventionTest.Bidirectional_ambiguous_cardinality_is_discovered()
  fullName: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Bidirectional_ambiguous_cardinality_is_discovered()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Bidirectional_ambiguous_cardinality_is_discovered
    path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
    startLine: 685
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal
  syntax:
    content: >-
      [Fact]

      public void Bidirectional_ambiguous_cardinality_is_discovered()
    content.vb: >-
      <Fact>

      Public Sub Bidirectional_ambiguous_cardinality_is_discovered
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Unidirectional_ambiguous_cardinality_is_discovered
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Unidirectional_ambiguous_cardinality_is_discovered
  id: Unidirectional_ambiguous_cardinality_is_discovered
  parent: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest
  langs:
  - csharp
  - vb
  name: Unidirectional_ambiguous_cardinality_is_discovered()
  nameWithType: RelationshipDiscoveryConventionTest.Unidirectional_ambiguous_cardinality_is_discovered()
  fullName: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Unidirectional_ambiguous_cardinality_is_discovered()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Unidirectional_ambiguous_cardinality_is_discovered
    path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
    startLine: 702
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal
  syntax:
    content: >-
      [Fact]

      public void Unidirectional_ambiguous_cardinality_is_discovered()
    content.vb: >-
      <Fact>

      Public Sub Unidirectional_ambiguous_cardinality_is_discovered
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.One_to_one_bidirectional_self_ref_is_discovered
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.One_to_one_bidirectional_self_ref_is_discovered
  id: One_to_one_bidirectional_self_ref_is_discovered
  parent: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest
  langs:
  - csharp
  - vb
  name: One_to_one_bidirectional_self_ref_is_discovered()
  nameWithType: RelationshipDiscoveryConventionTest.One_to_one_bidirectional_self_ref_is_discovered()
  fullName: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.One_to_one_bidirectional_self_ref_is_discovered()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: One_to_one_bidirectional_self_ref_is_discovered
    path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
    startLine: 720
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal
  syntax:
    content: >-
      [Fact]

      public void One_to_one_bidirectional_self_ref_is_discovered()
    content.vb: >-
      <Fact>

      Public Sub One_to_one_bidirectional_self_ref_is_discovered
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.One_to_many_unidirectional_self_ref_is_discovered
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.One_to_many_unidirectional_self_ref_is_discovered
  id: One_to_many_unidirectional_self_ref_is_discovered
  parent: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest
  langs:
  - csharp
  - vb
  name: One_to_many_unidirectional_self_ref_is_discovered()
  nameWithType: RelationshipDiscoveryConventionTest.One_to_many_unidirectional_self_ref_is_discovered()
  fullName: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.One_to_many_unidirectional_self_ref_is_discovered()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: One_to_many_unidirectional_self_ref_is_discovered
    path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
    startLine: 730
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal
  syntax:
    content: >-
      [Fact]

      public void One_to_many_unidirectional_self_ref_is_discovered()
    content.vb: >-
      <Fact>

      Public Sub One_to_many_unidirectional_self_ref_is_discovered
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.One_to_many_unidirectional_self_ref_is_upgraded_to_one_to_one_bidirectional
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.One_to_many_unidirectional_self_ref_is_upgraded_to_one_to_one_bidirectional
  id: One_to_many_unidirectional_self_ref_is_upgraded_to_one_to_one_bidirectional
  parent: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest
  langs:
  - csharp
  - vb
  name: One_to_many_unidirectional_self_ref_is_upgraded_to_one_to_one_bidirectional()
  nameWithType: RelationshipDiscoveryConventionTest.One_to_many_unidirectional_self_ref_is_upgraded_to_one_to_one_bidirectional()
  fullName: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.One_to_many_unidirectional_self_ref_is_upgraded_to_one_to_one_bidirectional()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: One_to_many_unidirectional_self_ref_is_upgraded_to_one_to_one_bidirectional
    path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
    startLine: 740
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal
  syntax:
    content: >-
      [Fact]

      public void One_to_many_unidirectional_self_ref_is_upgraded_to_one_to_one_bidirectional()
    content.vb: >-
      <Fact>

      Public Sub One_to_many_unidirectional_self_ref_is_upgraded_to_one_to_one_bidirectional
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.One_to_many_unidirectional_self_ref_is_not_upgraded_to_one_to_one_bidirectional_if_higher_source
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.One_to_many_unidirectional_self_ref_is_not_upgraded_to_one_to_one_bidirectional_if_higher_source
  id: One_to_many_unidirectional_self_ref_is_not_upgraded_to_one_to_one_bidirectional_if_higher_source
  parent: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest
  langs:
  - csharp
  - vb
  name: One_to_many_unidirectional_self_ref_is_not_upgraded_to_one_to_one_bidirectional_if_higher_source()
  nameWithType: RelationshipDiscoveryConventionTest.One_to_many_unidirectional_self_ref_is_not_upgraded_to_one_to_one_bidirectional_if_higher_source()
  fullName: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.One_to_many_unidirectional_self_ref_is_not_upgraded_to_one_to_one_bidirectional_if_higher_source()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: One_to_many_unidirectional_self_ref_is_not_upgraded_to_one_to_one_bidirectional_if_higher_source
    path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
    startLine: 752
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal
  syntax:
    content: >-
      [Fact]

      public void One_to_many_unidirectional_self_ref_is_not_upgraded_to_one_to_one_bidirectional_if_higher_source()
    content.vb: >-
      <Fact>

      Public Sub One_to_many_unidirectional_self_ref_is_not_upgraded_to_one_to_one_bidirectional_if_higher_source
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Ambiguous_self_ref_is_not_discovered
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Ambiguous_self_ref_is_not_discovered
  id: Ambiguous_self_ref_is_not_discovered
  parent: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest
  langs:
  - csharp
  - vb
  name: Ambiguous_self_ref_is_not_discovered()
  nameWithType: RelationshipDiscoveryConventionTest.Ambiguous_self_ref_is_not_discovered()
  fullName: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Ambiguous_self_ref_is_not_discovered()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Ambiguous_self_ref_is_not_discovered
    path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
    startLine: 766
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal
  syntax:
    content: >-
      [Fact]

      public void Ambiguous_self_ref_is_not_discovered()
    content.vb: >-
      <Fact>

      Public Sub Ambiguous_self_ref_is_not_discovered
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Existing_unidirectional_self_ref_is_removed_if_ambiguous
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Existing_unidirectional_self_ref_is_removed_if_ambiguous
  id: Existing_unidirectional_self_ref_is_removed_if_ambiguous
  parent: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest
  langs:
  - csharp
  - vb
  name: Existing_unidirectional_self_ref_is_removed_if_ambiguous()
  nameWithType: RelationshipDiscoveryConventionTest.Existing_unidirectional_self_ref_is_removed_if_ambiguous()
  fullName: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Existing_unidirectional_self_ref_is_removed_if_ambiguous()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Existing_unidirectional_self_ref_is_removed_if_ambiguous
    path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
    startLine: 778
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal
  syntax:
    content: >-
      [Fact]

      public void Existing_unidirectional_self_ref_is_removed_if_ambiguous()
    content.vb: >-
      <Fact>

      Public Sub Existing_unidirectional_self_ref_is_removed_if_ambiguous
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Existing_unidirectional_self_ref_removes_ambiguity_if_higher_source
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Existing_unidirectional_self_ref_removes_ambiguity_if_higher_source
  id: Existing_unidirectional_self_ref_removes_ambiguity_if_higher_source
  parent: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest
  langs:
  - csharp
  - vb
  name: Existing_unidirectional_self_ref_removes_ambiguity_if_higher_source()
  nameWithType: RelationshipDiscoveryConventionTest.Existing_unidirectional_self_ref_removes_ambiguity_if_higher_source()
  fullName: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Existing_unidirectional_self_ref_removes_ambiguity_if_higher_source()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Existing_unidirectional_self_ref_removes_ambiguity_if_higher_source
    path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
    startLine: 792
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal
  syntax:
    content: >-
      [Fact]

      public void Existing_unidirectional_self_ref_removes_ambiguity_if_higher_source()
    content.vb: >-
      <Fact>

      Public Sub Existing_unidirectional_self_ref_removes_ambiguity_if_higher_source
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Existing_bidirectional_self_ref_is_removed_if_ambiguous
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Existing_bidirectional_self_ref_is_removed_if_ambiguous
  id: Existing_bidirectional_self_ref_is_removed_if_ambiguous
  parent: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest
  langs:
  - csharp
  - vb
  name: Existing_bidirectional_self_ref_is_removed_if_ambiguous()
  nameWithType: RelationshipDiscoveryConventionTest.Existing_bidirectional_self_ref_is_removed_if_ambiguous()
  fullName: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Existing_bidirectional_self_ref_is_removed_if_ambiguous()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Existing_bidirectional_self_ref_is_removed_if_ambiguous
    path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
    startLine: 805
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal
  syntax:
    content: >-
      [Fact]

      public void Existing_bidirectional_self_ref_is_removed_if_ambiguous()
    content.vb: >-
      <Fact>

      Public Sub Existing_bidirectional_self_ref_is_removed_if_ambiguous
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Existing_bidirectional_self_ref_removes_ambiguity_if_higher_source
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Existing_bidirectional_self_ref_removes_ambiguity_if_higher_source
  id: Existing_bidirectional_self_ref_removes_ambiguity_if_higher_source
  parent: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest
  langs:
  - csharp
  - vb
  name: Existing_bidirectional_self_ref_removes_ambiguity_if_higher_source()
  nameWithType: RelationshipDiscoveryConventionTest.Existing_bidirectional_self_ref_removes_ambiguity_if_higher_source()
  fullName: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Existing_bidirectional_self_ref_removes_ambiguity_if_higher_source()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Existing_bidirectional_self_ref_removes_ambiguity_if_higher_source
    path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
    startLine: 819
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal
  syntax:
    content: >-
      [Fact]

      public void Existing_bidirectional_self_ref_removes_ambiguity_if_higher_source()
    content.vb: >-
      <Fact>

      Public Sub Existing_bidirectional_self_ref_removes_ambiguity_if_higher_source
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Navigation_to_abstract_is_discovered
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Navigation_to_abstract_is_discovered
  id: Navigation_to_abstract_is_discovered
  parent: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest
  langs:
  - csharp
  - vb
  name: Navigation_to_abstract_is_discovered()
  nameWithType: RelationshipDiscoveryConventionTest.Navigation_to_abstract_is_discovered()
  fullName: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Navigation_to_abstract_is_discovered()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Navigation_to_abstract_is_discovered
    path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
    startLine: 832
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal
  syntax:
    content: >-
      [Fact]

      public void Navigation_to_abstract_is_discovered()
    content.vb: >-
      <Fact>

      Public Sub Navigation_to_abstract_is_discovered
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Collection_navigation_without_setter_is_discovered
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Collection_navigation_without_setter_is_discovered
  id: Collection_navigation_without_setter_is_discovered
  parent: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest
  langs:
  - csharp
  - vb
  name: Collection_navigation_without_setter_is_discovered()
  nameWithType: RelationshipDiscoveryConventionTest.Collection_navigation_without_setter_is_discovered()
  fullName: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Collection_navigation_without_setter_is_discovered()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Collection_navigation_without_setter_is_discovered
    path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
    startLine: 851
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal
  syntax:
    content: >-
      [Fact]

      public void Collection_navigation_without_setter_is_discovered()
    content.vb: >-
      <Fact>

      Public Sub Collection_navigation_without_setter_is_discovered
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Does_not_discover_nonNavigation_properties
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Does_not_discover_nonNavigation_properties
  id: Does_not_discover_nonNavigation_properties
  parent: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest
  langs:
  - csharp
  - vb
  name: Does_not_discover_nonNavigation_properties()
  nameWithType: RelationshipDiscoveryConventionTest.Does_not_discover_nonNavigation_properties()
  fullName: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal.RelationshipDiscoveryConventionTest.Does_not_discover_nonNavigation_properties()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Does_not_discover_nonNavigation_properties
    path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/Conventions/Internal/RelationshipDiscoveryConventionTest.cs
    startLine: 865
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal
  syntax:
    content: >-
      [Fact]

      public void Does_not_discover_nonNavigation_properties()
    content.vb: >-
      <Fact>

      Public Sub Does_not_discover_nonNavigation_properties
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal
  fullName: Microsoft.EntityFrameworkCore.Tests.Metadata.Conventions.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
