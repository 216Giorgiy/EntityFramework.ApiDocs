### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IncludeExpressionVisitor
  commentId: T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IncludeExpressionVisitor
  id: IncludeExpressionVisitor
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  children:
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IncludeExpressionVisitor.#ctor(Microsoft.EntityFrameworkCore.Query.Expressions.ISelectExpressionFactory,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ICompositePredicateExpressionVisitorFactory,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IMaterializerFactory,Microsoft.EntityFrameworkCore.Query.Internal.IShaperCommandContextFactory,Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider,Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGeneratorFactory,IQuerySource,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation},Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext,System.Collections.Generic.IReadOnlyList{System.Int32},System.Boolean)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IncludeExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  langs:
  - csharp
  - vb
  name: IncludeExpressionVisitor
  nameWithType: IncludeExpressionVisitor
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IncludeExpressionVisitor
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/IncludeExpressionVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: IncludeExpressionVisitor
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/IncludeExpressionVisitor.cs
    startLine: 25
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public class IncludeExpressionVisitor : ExpressionVisitorBase'
    content.vb: >-
      Public Class IncludeExpressionVisitor
          Inherits ExpressionVisitorBase
  inheritance:
  - System.Object
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase
  inheritedMembers:
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.Visit(System.Linq.Expressions.Expression)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.VisitExtension(System.Linq.Expressions.Expression)
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IncludeExpressionVisitor.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IncludeExpressionVisitor.#ctor(Microsoft.EntityFrameworkCore.Query.Expressions.ISelectExpressionFactory,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ICompositePredicateExpressionVisitorFactory,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IMaterializerFactory,Microsoft.EntityFrameworkCore.Query.Internal.IShaperCommandContextFactory,Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider,Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGeneratorFactory,IQuerySource,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation},Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext,System.Collections.Generic.IReadOnlyList{System.Int32},System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IncludeExpressionVisitor.#ctor(Microsoft.EntityFrameworkCore.Query.Expressions.ISelectExpressionFactory,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ICompositePredicateExpressionVisitorFactory,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IMaterializerFactory,Microsoft.EntityFrameworkCore.Query.Internal.IShaperCommandContextFactory,Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider,Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGeneratorFactory,IQuerySource,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation},Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext,System.Collections.Generic.IReadOnlyList{System.Int32},System.Boolean)
  id: '#ctor(Microsoft.EntityFrameworkCore.Query.Expressions.ISelectExpressionFactory,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ICompositePredicateExpressionVisitorFactory,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IMaterializerFactory,Microsoft.EntityFrameworkCore.Query.Internal.IShaperCommandContextFactory,Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider,Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGeneratorFactory,IQuerySource,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation},Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext,System.Collections.Generic.IReadOnlyList{System.Int32},System.Boolean)'
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IncludeExpressionVisitor
  langs:
  - csharp
  - vb
  name: IncludeExpressionVisitor(ISelectExpressionFactory, ICompositePredicateExpressionVisitorFactory, IMaterializerFactory, IShaperCommandContextFactory, IRelationalAnnotationProvider, IQuerySqlGeneratorFactory, IQuerySource, IReadOnlyList<INavigation>, RelationalQueryCompilationContext, IReadOnlyList<Int32>, Boolean)
  nameWithType: IncludeExpressionVisitor.IncludeExpressionVisitor(ISelectExpressionFactory, ICompositePredicateExpressionVisitorFactory, IMaterializerFactory, IShaperCommandContextFactory, IRelationalAnnotationProvider, IQuerySqlGeneratorFactory, IQuerySource, IReadOnlyList<INavigation>, RelationalQueryCompilationContext, IReadOnlyList<Int32>, Boolean)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IncludeExpressionVisitor.IncludeExpressionVisitor(Microsoft.EntityFrameworkCore.Query.Expressions.ISelectExpressionFactory, Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ICompositePredicateExpressionVisitorFactory, Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IMaterializerFactory, Microsoft.EntityFrameworkCore.Query.Internal.IShaperCommandContextFactory, Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider, Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGeneratorFactory, IQuerySource, System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Metadata.INavigation>, Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext, System.Collections.Generic.IReadOnlyList<System.Int32>, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/IncludeExpressionVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/IncludeExpressionVisitor.cs
    startLine: 43
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public IncludeExpressionVisitor(ISelectExpressionFactory selectExpressionFactory, ICompositePredicateExpressionVisitorFactory compositePredicateExpressionVisitorFactory, IMaterializerFactory materializerFactory, IShaperCommandContextFactory shaperCommandContextFactory, IRelationalAnnotationProvider relationalAnnotationProvider, IQuerySqlGeneratorFactory querySqlGeneratorFactory, IQuerySource querySource, IReadOnlyList<INavigation> navigationPath, RelationalQueryCompilationContext queryCompilationContext, IReadOnlyList<int> queryIndexes, bool querySourceRequiresTracking)
    content.vb: Public Sub New(selectExpressionFactory As ISelectExpressionFactory, compositePredicateExpressionVisitorFactory As ICompositePredicateExpressionVisitorFactory, materializerFactory As IMaterializerFactory, shaperCommandContextFactory As IShaperCommandContextFactory, relationalAnnotationProvider As IRelationalAnnotationProvider, querySqlGeneratorFactory As IQuerySqlGeneratorFactory, querySource As IQuerySource, navigationPath As IReadOnlyList(Of INavigation), queryCompilationContext As RelationalQueryCompilationContext, queryIndexes As IReadOnlyList(Of Integer), querySourceRequiresTracking As Boolean)
    parameters:
    - id: selectExpressionFactory
      type: Microsoft.EntityFrameworkCore.Query.Expressions.ISelectExpressionFactory
    - id: compositePredicateExpressionVisitorFactory
      type: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ICompositePredicateExpressionVisitorFactory
    - id: materializerFactory
      type: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IMaterializerFactory
    - id: shaperCommandContextFactory
      type: Microsoft.EntityFrameworkCore.Query.Internal.IShaperCommandContextFactory
    - id: relationalAnnotationProvider
      type: Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider
    - id: querySqlGeneratorFactory
      type: Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGeneratorFactory
    - id: querySource
      type: IQuerySource
    - id: navigationPath
      type: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation}
    - id: queryCompilationContext
      type: Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext
    - id: queryIndexes
      type: System.Collections.Generic.IReadOnlyList{System.Int32}
    - id: querySourceRequiresTracking
      type: System.Boolean
  nameWithType.vb: IncludeExpressionVisitor.IncludeExpressionVisitor(ISelectExpressionFactory, ICompositePredicateExpressionVisitorFactory, IMaterializerFactory, IShaperCommandContextFactory, IRelationalAnnotationProvider, IQuerySqlGeneratorFactory, IQuerySource, IReadOnlyList(Of INavigation), RelationalQueryCompilationContext, IReadOnlyList(Of Int32), Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IncludeExpressionVisitor.IncludeExpressionVisitor(Microsoft.EntityFrameworkCore.Query.Expressions.ISelectExpressionFactory, Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ICompositePredicateExpressionVisitorFactory, Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IMaterializerFactory, Microsoft.EntityFrameworkCore.Query.Internal.IShaperCommandContextFactory, Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider, Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGeneratorFactory, IQuerySource, System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Metadata.INavigation), Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext, System.Collections.Generic.IReadOnlyList(Of System.Int32), System.Boolean)
  name.vb: IncludeExpressionVisitor(ISelectExpressionFactory, ICompositePredicateExpressionVisitorFactory, IMaterializerFactory, IShaperCommandContextFactory, IRelationalAnnotationProvider, IQuerySqlGeneratorFactory, IQuerySource, IReadOnlyList(Of INavigation), RelationalQueryCompilationContext, IReadOnlyList(Of Int32), Boolean)
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IncludeExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IncludeExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  id: VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IncludeExpressionVisitor
  langs:
  - csharp
  - vb
  name: VisitMethodCall(MethodCallExpression)
  nameWithType: IncludeExpressionVisitor.VisitMethodCall(MethodCallExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IncludeExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/IncludeExpressionVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: VisitMethodCall
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/IncludeExpressionVisitor.cs
    startLine: 84
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected override Expression VisitMethodCall(MethodCallExpression methodCallExpression)
    content.vb: Protected Overrides Function VisitMethodCall(methodCallExpression As MethodCallExpression) As Expression
    parameters:
    - id: methodCallExpression
      type: System.Linq.Expressions.MethodCallExpression
    return:
      type: System.Linq.Expressions.Expression
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase
  commentId: T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
  isExternal: false
  name: ExpressionVisitorBase
  nameWithType: ExpressionVisitorBase
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.Visit(System.Linq.Expressions.Expression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.Visit(System.Linq.Expressions.Expression)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase
  isExternal: true
  name: Visit(Expression)
  nameWithType: ExpressionVisitorBase.Visit(Expression)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.Visit(System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.Visit(System.Linq.Expressions.Expression)
    name: Visit
    nameWithType: ExpressionVisitorBase.Visit
    fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.Visit
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.Visit(System.Linq.Expressions.Expression)
    name: Visit
    nameWithType: ExpressionVisitorBase.Visit
    fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.Visit
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.VisitExtension(System.Linq.Expressions.Expression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.VisitExtension(System.Linq.Expressions.Expression)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase
  isExternal: true
  name: VisitExtension(Expression)
  nameWithType: ExpressionVisitorBase.VisitExtension(Expression)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.VisitExtension(System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.VisitExtension(System.Linq.Expressions.Expression)
    name: VisitExtension
    nameWithType: ExpressionVisitorBase.VisitExtension
    fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.VisitExtension
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.VisitExtension(System.Linq.Expressions.Expression)
    name: VisitExtension
    nameWithType: ExpressionVisitorBase.VisitExtension
    fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.VisitExtension
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IncludeExpressionVisitor.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<IncludeExpressionVisitor, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<IncludeExpressionVisitor, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IncludeExpressionVisitor, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of IncludeExpressionVisitor, TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IncludeExpressionVisitor, TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of IncludeExpressionVisitor, TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<IncludeExpressionVisitor, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<IncludeExpressionVisitor, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IncludeExpressionVisitor, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of IncludeExpressionVisitor, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of IncludeExpressionVisitor, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IncludeExpressionVisitor, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
  commentId: N:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
  nameWithType: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: Microsoft.EntityFrameworkCore.Query.Expressions.ISelectExpressionFactory
  commentId: T:Microsoft.EntityFrameworkCore.Query.Expressions.ISelectExpressionFactory
  parent: Microsoft.EntityFrameworkCore.Query.Expressions
  isExternal: false
  name: ISelectExpressionFactory
  nameWithType: ISelectExpressionFactory
  fullName: Microsoft.EntityFrameworkCore.Query.Expressions.ISelectExpressionFactory
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ICompositePredicateExpressionVisitorFactory
  commentId: T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ICompositePredicateExpressionVisitorFactory
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  isExternal: false
  name: ICompositePredicateExpressionVisitorFactory
  nameWithType: ICompositePredicateExpressionVisitorFactory
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ICompositePredicateExpressionVisitorFactory
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IMaterializerFactory
  commentId: T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IMaterializerFactory
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  isExternal: false
  name: IMaterializerFactory
  nameWithType: IMaterializerFactory
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IMaterializerFactory
- uid: Microsoft.EntityFrameworkCore.Query.Internal.IShaperCommandContextFactory
  commentId: T:Microsoft.EntityFrameworkCore.Query.Internal.IShaperCommandContextFactory
  parent: Microsoft.EntityFrameworkCore.Query.Internal
  isExternal: false
  name: IShaperCommandContextFactory
  nameWithType: IShaperCommandContextFactory
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.IShaperCommandContextFactory
- uid: Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IRelationalAnnotationProvider
  nameWithType: IRelationalAnnotationProvider
  fullName: Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider
- uid: Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGeneratorFactory
  commentId: T:Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGeneratorFactory
  parent: Microsoft.EntityFrameworkCore.Query.Sql
  isExternal: false
  name: IQuerySqlGeneratorFactory
  nameWithType: IQuerySqlGeneratorFactory
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGeneratorFactory
- uid: IQuerySource
  isExternal: true
  name: IQuerySource
  nameWithType: IQuerySource
  fullName: IQuerySource
- uid: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation}
  commentId: T:System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<INavigation>
  nameWithType: IReadOnlyList<INavigation>
  fullName: System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Metadata.INavigation>
  nameWithType.vb: IReadOnlyList(Of INavigation)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Metadata.INavigation)
  name.vb: IReadOnlyList(Of INavigation)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.INavigation
    name: INavigation
    nameWithType: INavigation
    fullName: Microsoft.EntityFrameworkCore.Metadata.INavigation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.INavigation
    name: INavigation
    nameWithType: INavigation
    fullName: Microsoft.EntityFrameworkCore.Metadata.INavigation
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext
  commentId: T:Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext
  parent: Microsoft.EntityFrameworkCore.Query
  isExternal: false
  name: RelationalQueryCompilationContext
  nameWithType: RelationalQueryCompilationContext
  fullName: Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext
- uid: System.Collections.Generic.IReadOnlyList{System.Int32}
  commentId: T:System.Collections.Generic.IReadOnlyList{System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<Int32>
  nameWithType: IReadOnlyList<Int32>
  fullName: System.Collections.Generic.IReadOnlyList<System.Int32>
  nameWithType.vb: IReadOnlyList(Of Int32)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of System.Int32)
  name.vb: IReadOnlyList(Of Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.EntityFrameworkCore.Query.Expressions
  commentId: N:Microsoft.EntityFrameworkCore.Query.Expressions
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query.Expressions
  nameWithType: Microsoft.EntityFrameworkCore.Query.Expressions
  fullName: Microsoft.EntityFrameworkCore.Query.Expressions
- uid: Microsoft.EntityFrameworkCore.Query.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Query.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Query.Internal
  fullName: Microsoft.EntityFrameworkCore.Query.Internal
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: Microsoft.EntityFrameworkCore.Query.Sql
  commentId: N:Microsoft.EntityFrameworkCore.Query.Sql
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query.Sql
  nameWithType: Microsoft.EntityFrameworkCore.Query.Sql
  fullName: Microsoft.EntityFrameworkCore.Query.Sql
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.EntityFrameworkCore.Query
  commentId: N:Microsoft.EntityFrameworkCore.Query
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query
  nameWithType: Microsoft.EntityFrameworkCore.Query
  fullName: Microsoft.EntityFrameworkCore.Query
- uid: System.Linq.Expressions.MethodCallExpression
  commentId: T:System.Linq.Expressions.MethodCallExpression
  parent: System.Linq.Expressions
  isExternal: true
  name: MethodCallExpression
  nameWithType: MethodCallExpression
  fullName: System.Linq.Expressions.MethodCallExpression
- uid: System.Linq.Expressions.Expression
  commentId: T:System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: true
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: false
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
