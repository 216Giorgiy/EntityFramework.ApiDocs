### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Internal.IDbContextServices
  commentId: T:Microsoft.EntityFrameworkCore.Internal.IDbContextServices
  id: IDbContextServices
  parent: Microsoft.EntityFrameworkCore.Internal
  children:
  - Microsoft.EntityFrameworkCore.Internal.IDbContextServices.ContextOptions
  - Microsoft.EntityFrameworkCore.Internal.IDbContextServices.CurrentContext
  - Microsoft.EntityFrameworkCore.Internal.IDbContextServices.DatabaseProviderServices
  - Microsoft.EntityFrameworkCore.Internal.IDbContextServices.Initialize(System.IServiceProvider,Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions,Microsoft.EntityFrameworkCore.DbContext)
  - Microsoft.EntityFrameworkCore.Internal.IDbContextServices.InternalServiceProvider
  - Microsoft.EntityFrameworkCore.Internal.IDbContextServices.LoggerFactory
  - Microsoft.EntityFrameworkCore.Internal.IDbContextServices.MemoryCache
  - Microsoft.EntityFrameworkCore.Internal.IDbContextServices.Model
  langs:
  - csharp
  - vb
  name: IDbContextServices
  nameWithType: IDbContextServices
  fullName: Microsoft.EntityFrameworkCore.Internal.IDbContextServices
  type: Interface
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/IDbContextServices.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: IDbContextServices
    path: src/Microsoft.EntityFrameworkCore/Internal/IDbContextServices.cs
    startLine: 17
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public interface IDbContextServices
    content.vb: Public Interface IDbContextServices
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Internal.IDbContextServices.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.EntityFrameworkCore.Internal.IDbContextServices.Initialize(System.IServiceProvider,Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions,Microsoft.EntityFrameworkCore.DbContext)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.IDbContextServices.Initialize(System.IServiceProvider,Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions,Microsoft.EntityFrameworkCore.DbContext)
  id: Initialize(System.IServiceProvider,Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions,Microsoft.EntityFrameworkCore.DbContext)
  parent: Microsoft.EntityFrameworkCore.Internal.IDbContextServices
  langs:
  - csharp
  - vb
  name: Initialize(IServiceProvider, IDbContextOptions, DbContext)
  nameWithType: IDbContextServices.Initialize(IServiceProvider, IDbContextOptions, DbContext)
  fullName: Microsoft.EntityFrameworkCore.Internal.IDbContextServices.Initialize(System.IServiceProvider, Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions, Microsoft.EntityFrameworkCore.DbContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/IDbContextServices.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Initialize
    path: src/Microsoft.EntityFrameworkCore/Internal/IDbContextServices.cs
    startLine: 23
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: IDbContextServices Initialize(IServiceProvider scopedProvider, IDbContextOptions contextOptions, DbContext context)
    content.vb: Function Initialize(scopedProvider As IServiceProvider, contextOptions As IDbContextOptions, context As DbContext) As IDbContextServices
    parameters:
    - id: scopedProvider
      type: System.IServiceProvider
    - id: contextOptions
      type: Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions
    - id: context
      type: Microsoft.EntityFrameworkCore.DbContext
    return:
      type: Microsoft.EntityFrameworkCore.Internal.IDbContextServices
- uid: Microsoft.EntityFrameworkCore.Internal.IDbContextServices.CurrentContext
  commentId: P:Microsoft.EntityFrameworkCore.Internal.IDbContextServices.CurrentContext
  id: CurrentContext
  parent: Microsoft.EntityFrameworkCore.Internal.IDbContextServices
  langs:
  - csharp
  - vb
  name: CurrentContext
  nameWithType: IDbContextServices.CurrentContext
  fullName: Microsoft.EntityFrameworkCore.Internal.IDbContextServices.CurrentContext
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/IDbContextServices.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: CurrentContext
    path: src/Microsoft.EntityFrameworkCore/Internal/IDbContextServices.cs
    startLine: 32
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: ICurrentDbContext CurrentContext { get; }
    content.vb: ReadOnly Property CurrentContext As ICurrentDbContext
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Internal.IDbContextServices.Model
  commentId: P:Microsoft.EntityFrameworkCore.Internal.IDbContextServices.Model
  id: Model
  parent: Microsoft.EntityFrameworkCore.Internal.IDbContextServices
  langs:
  - csharp
  - vb
  name: Model
  nameWithType: IDbContextServices.Model
  fullName: Microsoft.EntityFrameworkCore.Internal.IDbContextServices.Model
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/IDbContextServices.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Model
    path: src/Microsoft.EntityFrameworkCore/Internal/IDbContextServices.cs
    startLine: 38
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: IModel Model { get; }
    content.vb: ReadOnly Property Model As IModel
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.IModel
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Internal.IDbContextServices.LoggerFactory
  commentId: P:Microsoft.EntityFrameworkCore.Internal.IDbContextServices.LoggerFactory
  id: LoggerFactory
  parent: Microsoft.EntityFrameworkCore.Internal.IDbContextServices
  langs:
  - csharp
  - vb
  name: LoggerFactory
  nameWithType: IDbContextServices.LoggerFactory
  fullName: Microsoft.EntityFrameworkCore.Internal.IDbContextServices.LoggerFactory
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/IDbContextServices.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: LoggerFactory
    path: src/Microsoft.EntityFrameworkCore/Internal/IDbContextServices.cs
    startLine: 44
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: ILoggerFactory LoggerFactory { get; }
    content.vb: ReadOnly Property LoggerFactory As ILoggerFactory
    parameters: []
    return:
      type: ILoggerFactory
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Internal.IDbContextServices.MemoryCache
  commentId: P:Microsoft.EntityFrameworkCore.Internal.IDbContextServices.MemoryCache
  id: MemoryCache
  parent: Microsoft.EntityFrameworkCore.Internal.IDbContextServices
  langs:
  - csharp
  - vb
  name: MemoryCache
  nameWithType: IDbContextServices.MemoryCache
  fullName: Microsoft.EntityFrameworkCore.Internal.IDbContextServices.MemoryCache
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/IDbContextServices.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: MemoryCache
    path: src/Microsoft.EntityFrameworkCore/Internal/IDbContextServices.cs
    startLine: 50
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: IMemoryCache MemoryCache { get; }
    content.vb: ReadOnly Property MemoryCache As IMemoryCache
    parameters: []
    return:
      type: IMemoryCache
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Internal.IDbContextServices.ContextOptions
  commentId: P:Microsoft.EntityFrameworkCore.Internal.IDbContextServices.ContextOptions
  id: ContextOptions
  parent: Microsoft.EntityFrameworkCore.Internal.IDbContextServices
  langs:
  - csharp
  - vb
  name: ContextOptions
  nameWithType: IDbContextServices.ContextOptions
  fullName: Microsoft.EntityFrameworkCore.Internal.IDbContextServices.ContextOptions
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/IDbContextServices.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ContextOptions
    path: src/Microsoft.EntityFrameworkCore/Internal/IDbContextServices.cs
    startLine: 56
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: IDbContextOptions ContextOptions { get; }
    content.vb: ReadOnly Property ContextOptions As IDbContextOptions
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Internal.IDbContextServices.DatabaseProviderServices
  commentId: P:Microsoft.EntityFrameworkCore.Internal.IDbContextServices.DatabaseProviderServices
  id: DatabaseProviderServices
  parent: Microsoft.EntityFrameworkCore.Internal.IDbContextServices
  langs:
  - csharp
  - vb
  name: DatabaseProviderServices
  nameWithType: IDbContextServices.DatabaseProviderServices
  fullName: Microsoft.EntityFrameworkCore.Internal.IDbContextServices.DatabaseProviderServices
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/IDbContextServices.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: DatabaseProviderServices
    path: src/Microsoft.EntityFrameworkCore/Internal/IDbContextServices.cs
    startLine: 62
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: IDatabaseProviderServices DatabaseProviderServices { get; }
    content.vb: ReadOnly Property DatabaseProviderServices As IDatabaseProviderServices
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Internal.IDbContextServices.InternalServiceProvider
  commentId: P:Microsoft.EntityFrameworkCore.Internal.IDbContextServices.InternalServiceProvider
  id: InternalServiceProvider
  parent: Microsoft.EntityFrameworkCore.Internal.IDbContextServices
  langs:
  - csharp
  - vb
  name: InternalServiceProvider
  nameWithType: IDbContextServices.InternalServiceProvider
  fullName: Microsoft.EntityFrameworkCore.Internal.IDbContextServices.InternalServiceProvider
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/IDbContextServices.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: InternalServiceProvider
    path: src/Microsoft.EntityFrameworkCore/Internal/IDbContextServices.cs
    startLine: 68
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: IServiceProvider InternalServiceProvider { get; }
    content.vb: ReadOnly Property InternalServiceProvider As IServiceProvider
    parameters: []
    return:
      type: System.IServiceProvider
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Microsoft.EntityFrameworkCore.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Internal
  fullName: Microsoft.EntityFrameworkCore.Internal
- uid: Microsoft.EntityFrameworkCore.Internal.IDbContextServices.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<IDbContextServices, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<IDbContextServices, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Internal.IDbContextServices, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of IDbContextServices, TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Internal.IDbContextServices, TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of IDbContextServices, TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<IDbContextServices, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<IDbContextServices, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Internal.IDbContextServices, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of IDbContextServices, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of IDbContextServices, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Internal.IDbContextServices, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: System.IServiceProvider
  commentId: T:System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions
  parent: Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: IDbContextOptions
  nameWithType: IDbContextOptions
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions
- uid: Microsoft.EntityFrameworkCore.DbContext
  commentId: T:Microsoft.EntityFrameworkCore.DbContext
  parent: Microsoft.EntityFrameworkCore
  isExternal: false
  name: DbContext
  nameWithType: DbContext
  fullName: Microsoft.EntityFrameworkCore.DbContext
- uid: Microsoft.EntityFrameworkCore.Internal.IDbContextServices
  commentId: T:Microsoft.EntityFrameworkCore.Internal.IDbContextServices
  parent: Microsoft.EntityFrameworkCore.Internal
  isExternal: false
  name: IDbContextServices
  nameWithType: IDbContextServices
  fullName: Microsoft.EntityFrameworkCore.Internal.IDbContextServices
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Infrastructure
  commentId: N:Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Infrastructure
  nameWithType: Microsoft.EntityFrameworkCore.Infrastructure
  fullName: Microsoft.EntityFrameworkCore.Infrastructure
- uid: Microsoft.EntityFrameworkCore
  commentId: N:Microsoft.EntityFrameworkCore
  isExternal: false
  name: Microsoft.EntityFrameworkCore
  nameWithType: Microsoft.EntityFrameworkCore
  fullName: Microsoft.EntityFrameworkCore
- uid: Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext
  commentId: T:Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext
  parent: Microsoft.EntityFrameworkCore.Internal
  isExternal: false
  name: ICurrentDbContext
  nameWithType: ICurrentDbContext
  fullName: Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext
- uid: Microsoft.EntityFrameworkCore.Metadata.IModel
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IModel
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IModel
  nameWithType: IModel
  fullName: Microsoft.EntityFrameworkCore.Metadata.IModel
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: ILoggerFactory
  isExternal: true
  name: ILoggerFactory
  nameWithType: ILoggerFactory
  fullName: ILoggerFactory
- uid: IMemoryCache
  isExternal: true
  name: IMemoryCache
  nameWithType: IMemoryCache
  fullName: IMemoryCache
- uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IDatabaseProviderServices
  nameWithType: IDatabaseProviderServices
  fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices
- uid: Microsoft.EntityFrameworkCore.Storage
  commentId: N:Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Storage
  nameWithType: Microsoft.EntityFrameworkCore.Storage
  fullName: Microsoft.EntityFrameworkCore.Storage
