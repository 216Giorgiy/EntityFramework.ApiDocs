### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Storage.IByteArrayRelationalTypeMapper
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IByteArrayRelationalTypeMapper
  id: IByteArrayRelationalTypeMapper
  parent: Microsoft.EntityFrameworkCore.Storage
  children:
  - Microsoft.EntityFrameworkCore.Storage.IByteArrayRelationalTypeMapper.FindMapping(System.Boolean,System.Boolean,System.Nullable{System.Int32})
  langs:
  - csharp
  - vb
  name: IByteArrayRelationalTypeMapper
  nameWithType: IByteArrayRelationalTypeMapper
  fullName: Microsoft.EntityFrameworkCore.Storage.IByteArrayRelationalTypeMapper
  type: Interface
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/IByteArrayRelationalTypeMapper.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: IByteArrayRelationalTypeMapper
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/IByteArrayRelationalTypeMapper.cs
    startLine: 14
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n<p>\n    Determines the type mapping to use for byte array properties.\n</p>\n<p>\n    This type is typically used by database providers (and other extensions). It is generally\n    not used in application code.\n</p>\n"
  example: []
  syntax:
    content: public interface IByteArrayRelationalTypeMapper
    content.vb: Public Interface IByteArrayRelationalTypeMapper
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Storage.IByteArrayRelationalTypeMapper.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.EntityFrameworkCore.Storage.IByteArrayRelationalTypeMapper.FindMapping(System.Boolean,System.Boolean,System.Nullable{System.Int32})
  commentId: M:Microsoft.EntityFrameworkCore.Storage.IByteArrayRelationalTypeMapper.FindMapping(System.Boolean,System.Boolean,System.Nullable{System.Int32})
  id: FindMapping(System.Boolean,System.Boolean,System.Nullable{System.Int32})
  parent: Microsoft.EntityFrameworkCore.Storage.IByteArrayRelationalTypeMapper
  langs:
  - csharp
  - vb
  name: FindMapping(Boolean, Boolean, Nullable<Int32>)
  nameWithType: IByteArrayRelationalTypeMapper.FindMapping(Boolean, Boolean, Nullable<Int32>)
  fullName: Microsoft.EntityFrameworkCore.Storage.IByteArrayRelationalTypeMapper.FindMapping(System.Boolean, System.Boolean, System.Nullable<System.Int32>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/IByteArrayRelationalTypeMapper.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: FindMapping
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/IByteArrayRelationalTypeMapper.cs
    startLine: 29
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n    Gets the mapping for a property.\n"
  example: []
  syntax:
    content: RelationalTypeMapping FindMapping(bool rowVersion, bool keyOrIndex, int ? size)
    content.vb: Function FindMapping(rowVersion As Boolean, keyOrIndex As Boolean, size As Integer?) As RelationalTypeMapping
    parameters:
    - id: rowVersion
      type: System.Boolean
      description: "\n    A value indicating whether the property is being used as a row version.\n"
    - id: keyOrIndex
      type: System.Boolean
      description: "\n    A value indicating whether the property is being used as a key and/or index.\n"
    - id: size
      type: System.Nullable{System.Int32}
      description: "\n    The configured length of the property, or null if it is unbounded.\n"
    return:
      type: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping
      description: 'The mapping to be used for the property. '
  nameWithType.vb: IByteArrayRelationalTypeMapper.FindMapping(Boolean, Boolean, Nullable(Of Int32))
  fullName.vb: Microsoft.EntityFrameworkCore.Storage.IByteArrayRelationalTypeMapper.FindMapping(System.Boolean, System.Boolean, System.Nullable(Of System.Int32))
  name.vb: FindMapping(Boolean, Boolean, Nullable(Of Int32))
references:
- uid: Microsoft.EntityFrameworkCore.Storage
  commentId: N:Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Storage
  nameWithType: Microsoft.EntityFrameworkCore.Storage
  fullName: Microsoft.EntityFrameworkCore.Storage
- uid: Microsoft.EntityFrameworkCore.Storage.IByteArrayRelationalTypeMapper.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<IByteArrayRelationalTypeMapper, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<IByteArrayRelationalTypeMapper, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Storage.IByteArrayRelationalTypeMapper, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of IByteArrayRelationalTypeMapper, TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Storage.IByteArrayRelationalTypeMapper, TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of IByteArrayRelationalTypeMapper, TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<IByteArrayRelationalTypeMapper, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<IByteArrayRelationalTypeMapper, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Storage.IByteArrayRelationalTypeMapper, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of IByteArrayRelationalTypeMapper, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of IByteArrayRelationalTypeMapper, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Storage.IByteArrayRelationalTypeMapper, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping
  commentId: T:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: RelationalTypeMapping
  nameWithType: RelationalTypeMapping
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
