### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.SqlAzureFixture
  commentId: T:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.SqlAzureFixture
  id: SqlAzureFixture
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure
  children:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.SqlAzureFixture.#ctor
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.SqlAzureFixture.CreateContext
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.SqlAzureFixture.Options
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.SqlAzureFixture.Services
  langs:
  - csharp
  - vb
  name: SqlAzureFixture
  nameWithType: SqlAzureFixture
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.SqlAzureFixture
  type: Class
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/SqlAzureFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: SqlAzureFixture
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/SqlAzureFixture.cs
    startLine: 12
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure
  syntax:
    content: public class SqlAzureFixture
    content.vb: Public Class SqlAzureFixture
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.SqlAzureFixture.Options
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.SqlAzureFixture.Options
  id: Options
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.SqlAzureFixture
  langs:
  - csharp
  - vb
  name: Options
  nameWithType: SqlAzureFixture.Options
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.SqlAzureFixture.Options
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/SqlAzureFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Options
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/SqlAzureFixture.cs
    startLine: 14
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure
  syntax:
    content: protected DbContextOptions Options { get; }
    content.vb: Protected ReadOnly Property Options As DbContextOptions
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbContextOptions
  overload: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.SqlAzureFixture.Options*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.SqlAzureFixture.Services
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.SqlAzureFixture.Services
  id: Services
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.SqlAzureFixture
  langs:
  - csharp
  - vb
  name: Services
  nameWithType: SqlAzureFixture.Services
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.SqlAzureFixture.Services
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/SqlAzureFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Services
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/SqlAzureFixture.cs
    startLine: 15
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure
  syntax:
    content: protected IServiceProvider Services { get; }
    content.vb: Protected ReadOnly Property Services As IServiceProvider
    parameters: []
    return:
      type: System.IServiceProvider
  overload: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.SqlAzureFixture.Services*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.SqlAzureFixture.#ctor
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.SqlAzureFixture.#ctor
  id: '#ctor'
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.SqlAzureFixture
  langs:
  - csharp
  - vb
  name: SqlAzureFixture()
  nameWithType: SqlAzureFixture.SqlAzureFixture()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.SqlAzureFixture.SqlAzureFixture()
  type: Constructor
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/SqlAzureFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/SqlAzureFixture.cs
    startLine: 17
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure
  syntax:
    content: public SqlAzureFixture()
    content.vb: Public Sub New
  overload: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.SqlAzureFixture.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.SqlAzureFixture.CreateContext
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.SqlAzureFixture.CreateContext
  id: CreateContext
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.SqlAzureFixture
  langs:
  - csharp
  - vb
  name: CreateContext()
  nameWithType: SqlAzureFixture.CreateContext()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.SqlAzureFixture.CreateContext()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/SqlAzureFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateContext
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/SqlAzureFixture.cs
    startLine: 34
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure
  syntax:
    content: public virtual AdventureWorksContext CreateContext()
    content.vb: Public Overridable Function CreateContext As AdventureWorksContext
    return:
      type: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.AdventureWorksContext
  overload: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.SqlAzureFixture.CreateContext*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure
  commentId: N:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure
  isExternal: false
  name: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure
  nameWithType: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.SqlAzureFixture.Options*
  commentId: Overload:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.SqlAzureFixture.Options
  isExternal: false
  name: Options
  nameWithType: SqlAzureFixture.Options
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.SqlAzureFixture.Options
- uid: Microsoft.EntityFrameworkCore.DbContextOptions
  commentId: T:Microsoft.EntityFrameworkCore.DbContextOptions
  parent: Microsoft.EntityFrameworkCore
  isExternal: false
  name: DbContextOptions
  nameWithType: DbContextOptions
  fullName: Microsoft.EntityFrameworkCore.DbContextOptions
- uid: Microsoft.EntityFrameworkCore
  commentId: N:Microsoft.EntityFrameworkCore
  isExternal: false
  name: Microsoft.EntityFrameworkCore
  nameWithType: Microsoft.EntityFrameworkCore
  fullName: Microsoft.EntityFrameworkCore
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.SqlAzureFixture.Services*
  commentId: Overload:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.SqlAzureFixture.Services
  isExternal: false
  name: Services
  nameWithType: SqlAzureFixture.Services
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.SqlAzureFixture.Services
- uid: System.IServiceProvider
  commentId: T:System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.SqlAzureFixture.#ctor*
  commentId: Overload:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.SqlAzureFixture.#ctor
  isExternal: false
  name: SqlAzureFixture
  nameWithType: SqlAzureFixture.SqlAzureFixture
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.SqlAzureFixture.SqlAzureFixture
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.SqlAzureFixture.CreateContext*
  commentId: Overload:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.SqlAzureFixture.CreateContext
  isExternal: false
  name: CreateContext
  nameWithType: SqlAzureFixture.CreateContext
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.SqlAzureFixture.CreateContext
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.AdventureWorksContext
  commentId: T:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.AdventureWorksContext
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model
  isExternal: false
  name: AdventureWorksContext
  nameWithType: AdventureWorksContext
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.AdventureWorksContext
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model
  commentId: N:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model
  isExternal: false
  name: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model
  nameWithType: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model
