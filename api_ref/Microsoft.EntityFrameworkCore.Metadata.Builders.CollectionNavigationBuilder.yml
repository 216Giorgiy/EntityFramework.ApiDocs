### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder
  id: CollectionNavigationBuilder
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders
  children:
  - Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.Reflection.PropertyInfo,Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder.CollectionName
  - Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder.CollectionProperty
  - Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder.DeclaringEntityType
  - Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#Metadata#Internal#InternalRelationshipBuilder}#Instance
  - Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder.RelatedEntityType
  - Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder.WithOne(System.String)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder.WithOneBuilder(System.Reflection.PropertyInfo)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder.WithOneBuilder(System.String)
  langs:
  - csharp
  - vb
  name: CollectionNavigationBuilder
  nameWithType: CollectionNavigationBuilder
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/CollectionNavigationBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CollectionNavigationBuilder
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/CollectionNavigationBuilder.cs
    startLine: 23
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\n<p>\n    Provides a simple API for configuring a relationship where configuration began on\n    an end of the relationship with a collection that contains instances of another entity type.\n</p>\n<p>\n    Instances of this class are returned from methods when using the <xref href=\"Microsoft.EntityFrameworkCore.ModelBuilder\" data-throw-if-not-resolved=\"false\"></xref> API\n    and it is not designed to be directly constructed in your application code.\n</p>\n"
  example: []
  syntax:
    content: 'public class CollectionNavigationBuilder : IInfrastructure<InternalRelationshipBuilder>'
    content.vb: >-
      Public Class CollectionNavigationBuilder
          Implements IInfrastructure(Of InternalRelationshipBuilder)
  inheritance:
  - System.Object
  implements:
  - Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder}
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder}.Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)
  id: '#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)'
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder
  langs:
  - csharp
  - vb
  name: CollectionNavigationBuilder(EntityType, EntityType, String, InternalRelationshipBuilder)
  nameWithType: CollectionNavigationBuilder.CollectionNavigationBuilder(EntityType, EntityType, String, InternalRelationshipBuilder)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder.CollectionNavigationBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType, Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType, System.String, Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/CollectionNavigationBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/CollectionNavigationBuilder.cs
    startLine: 29
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public CollectionNavigationBuilder(EntityType declaringEntityType, EntityType relatedEntityType, string navigationName, InternalRelationshipBuilder builder)
    content.vb: Public Sub New(declaringEntityType As EntityType, relatedEntityType As EntityType, navigationName As String, builder As InternalRelationshipBuilder)
    parameters:
    - id: declaringEntityType
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
    - id: relatedEntityType
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
    - id: navigationName
      type: System.String
    - id: builder
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.Reflection.PropertyInfo,Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.Reflection.PropertyInfo,Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)
  id: '#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.Reflection.PropertyInfo,Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)'
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder
  langs:
  - csharp
  - vb
  name: CollectionNavigationBuilder(EntityType, EntityType, PropertyInfo, InternalRelationshipBuilder)
  nameWithType: CollectionNavigationBuilder.CollectionNavigationBuilder(EntityType, EntityType, PropertyInfo, InternalRelationshipBuilder)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder.CollectionNavigationBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType, Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType, System.Reflection.PropertyInfo, Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/CollectionNavigationBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/CollectionNavigationBuilder.cs
    startLine: 47
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public CollectionNavigationBuilder(EntityType declaringEntityType, EntityType relatedEntityType, PropertyInfo navigationProperty, InternalRelationshipBuilder builder)
    content.vb: Public Sub New(declaringEntityType As EntityType, relatedEntityType As EntityType, navigationProperty As PropertyInfo, builder As InternalRelationshipBuilder)
    parameters:
    - id: declaringEntityType
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
    - id: relatedEntityType
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
    - id: navigationProperty
      type: System.Reflection.PropertyInfo
    - id: builder
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder.CollectionName
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder.CollectionName
  id: CollectionName
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder
  langs:
  - csharp
  - vb
  name: CollectionName
  nameWithType: CollectionNavigationBuilder.CollectionName
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder.CollectionName
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/CollectionNavigationBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CollectionName
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/CollectionNavigationBuilder.cs
    startLine: 68
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual string CollectionName { get; }
    content.vb: Protected Overridable ReadOnly Property CollectionName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder.CollectionProperty
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder.CollectionProperty
  id: CollectionProperty
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder
  langs:
  - csharp
  - vb
  name: CollectionProperty
  nameWithType: CollectionNavigationBuilder.CollectionProperty
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder.CollectionProperty
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/CollectionNavigationBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CollectionProperty
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/CollectionNavigationBuilder.cs
    startLine: 74
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual PropertyInfo CollectionProperty { get; }
    content.vb: Protected Overridable ReadOnly Property CollectionProperty As PropertyInfo
    parameters: []
    return:
      type: System.Reflection.PropertyInfo
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder.RelatedEntityType
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder.RelatedEntityType
  id: RelatedEntityType
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder
  langs:
  - csharp
  - vb
  name: RelatedEntityType
  nameWithType: CollectionNavigationBuilder.RelatedEntityType
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder.RelatedEntityType
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/CollectionNavigationBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: RelatedEntityType
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/CollectionNavigationBuilder.cs
    startLine: 80
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual EntityType RelatedEntityType { get; }
    content.vb: Protected Overridable ReadOnly Property RelatedEntityType As EntityType
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder.DeclaringEntityType
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder.DeclaringEntityType
  id: DeclaringEntityType
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder
  langs:
  - csharp
  - vb
  name: DeclaringEntityType
  nameWithType: CollectionNavigationBuilder.DeclaringEntityType
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder.DeclaringEntityType
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/CollectionNavigationBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: DeclaringEntityType
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/CollectionNavigationBuilder.cs
    startLine: 86
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual EntityType DeclaringEntityType { get; }
    content.vb: Protected Overridable ReadOnly Property DeclaringEntityType As EntityType
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#Metadata#Internal#InternalRelationshipBuilder}#Instance
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#Metadata#Internal#InternalRelationshipBuilder}#Instance
  id: Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#Metadata#Internal#InternalRelationshipBuilder}#Instance
  isEii: true
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder
  langs:
  - csharp
  - vb
  name: IInfrastructure<InternalRelationshipBuilder>.Instance
  nameWithType: CollectionNavigationBuilder.IInfrastructure<InternalRelationshipBuilder>.Instance
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder>.Instance
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/CollectionNavigationBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder>.Instance
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/CollectionNavigationBuilder.cs
    startLine: 97
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\n<p>\n    Gets the internal builder being used to configure the relationship.\n</p>\n<p>\n    This property is intended for use by extension methods that need to make use of services\n    not directly exposed in the public API surface.\n</p>\n"
  example: []
  syntax:
    content: InternalRelationshipBuilder IInfrastructure<InternalRelationshipBuilder>.Instance { get; }
    content.vb: ReadOnly WriteOnly Property Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder>.Instance As InternalRelationshipBuilder Implements IInfrastructure(Of InternalRelationshipBuilder).Instance
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
  implements:
  - Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder}.Instance
  nameWithType.vb: CollectionNavigationBuilder.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder>.Instance
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder>.Instance
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder.WithOne(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder.WithOne(System.String)
  id: WithOne(System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder
  langs:
  - csharp
  - vb
  name: WithOne(String)
  nameWithType: CollectionNavigationBuilder.WithOne(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder.WithOne(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/CollectionNavigationBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: WithOne
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/CollectionNavigationBuilder.cs
    startLine: 107
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\n    Configures this as a one-to-many relationship.\n"
  example: []
  syntax:
    content: public virtual ReferenceCollectionBuilder WithOne(string navigationName = null)
    content.vb: Public Overridable Function WithOne(navigationName As String = Nothing) As ReferenceCollectionBuilder
    parameters:
    - id: navigationName
      type: System.String
      description: "\n    The name of the reference navigation property on the other end of this relationship.\n    If null, there is no navigation property on the other end of the relationship.\n"
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder
      description: 'An object to further configure the relationship. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder.WithOneBuilder(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder.WithOneBuilder(System.String)
  id: WithOneBuilder(System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder
  langs:
  - csharp
  - vb
  name: WithOneBuilder(String)
  nameWithType: CollectionNavigationBuilder.WithOneBuilder(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder.WithOneBuilder(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/CollectionNavigationBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: WithOneBuilder
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/CollectionNavigationBuilder.cs
    startLine: 117
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual InternalRelationshipBuilder WithOneBuilder(string navigationName)
    content.vb: Protected Overridable Function WithOneBuilder(navigationName As String) As InternalRelationshipBuilder
    parameters:
    - id: navigationName
      type: System.String
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder.WithOneBuilder(System.Reflection.PropertyInfo)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder.WithOneBuilder(System.Reflection.PropertyInfo)
  id: WithOneBuilder(System.Reflection.PropertyInfo)
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder
  langs:
  - csharp
  - vb
  name: WithOneBuilder(PropertyInfo)
  nameWithType: CollectionNavigationBuilder.WithOneBuilder(PropertyInfo)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder.WithOneBuilder(System.Reflection.PropertyInfo)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/CollectionNavigationBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: WithOneBuilder
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/CollectionNavigationBuilder.cs
    startLine: 124
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual InternalRelationshipBuilder WithOneBuilder(PropertyInfo navigationProperty)
    content.vb: Protected Overridable Function WithOneBuilder(navigationProperty As PropertyInfo) As InternalRelationshipBuilder
    parameters:
    - id: navigationProperty
      type: System.Reflection.PropertyInfo
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: Microsoft.EntityFrameworkCore.ModelBuilder
  commentId: T:Microsoft.EntityFrameworkCore.ModelBuilder
  parent: Microsoft.EntityFrameworkCore
  isExternal: false
  name: ModelBuilder
  nameWithType: ModelBuilder
  fullName: Microsoft.EntityFrameworkCore.ModelBuilder
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Builders
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Builders
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Builders
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder}
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder}
  parent: Microsoft.EntityFrameworkCore.Infrastructure
  definition: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
  name: IInfrastructure<InternalRelationshipBuilder>
  nameWithType: IInfrastructure<InternalRelationshipBuilder>
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder>
  nameWithType.vb: IInfrastructure(Of InternalRelationshipBuilder)
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)
  name.vb: IInfrastructure(Of InternalRelationshipBuilder)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
    name: InternalRelationshipBuilder
    nameWithType: InternalRelationshipBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
    name: InternalRelationshipBuilder
    nameWithType: InternalRelationshipBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder}.Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1
  commentId: M:Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{``0})
  parent: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions
  definition: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{``0})
  name: GetInfrastructure<InternalRelationshipBuilder>()
  nameWithType: AccessorExtensions.GetInfrastructure<InternalRelationshipBuilder>()
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure<Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder>()
  nameWithType.vb: AccessorExtensions.GetInfrastructure(Of InternalRelationshipBuilder)()
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure(Of Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)()
  name.vb: GetInfrastructure(Of InternalRelationshipBuilder)()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1
    name: GetInfrastructure<InternalRelationshipBuilder>
    nameWithType: AccessorExtensions.GetInfrastructure<InternalRelationshipBuilder>
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure<Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1
    name: GetInfrastructure(Of InternalRelationshipBuilder)
    nameWithType: AccessorExtensions.GetInfrastructure(Of InternalRelationshipBuilder)
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure(Of Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore
  commentId: N:Microsoft.EntityFrameworkCore
  isExternal: false
  name: Microsoft.EntityFrameworkCore
  nameWithType: Microsoft.EntityFrameworkCore
  fullName: Microsoft.EntityFrameworkCore
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
  isExternal: false
  name: IInfrastructure<T>
  nameWithType: IInfrastructure<T>
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<T>
  nameWithType.vb: IInfrastructure(Of T)
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of T)
  name.vb: IInfrastructure(Of T)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure
  commentId: N:Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Infrastructure
  nameWithType: Microsoft.EntityFrameworkCore.Infrastructure
  fullName: Microsoft.EntityFrameworkCore.Infrastructure
- uid: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{``0})
  commentId: M:Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{``0})
  isExternal: false
  name: GetInfrastructure<T>(IInfrastructure<T>)
  nameWithType: AccessorExtensions.GetInfrastructure<T>(IInfrastructure<T>)
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure<T>(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<T>)
  nameWithType.vb: AccessorExtensions.GetInfrastructure(Of T)(IInfrastructure(Of T))
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure(Of T)(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of T))
  name.vb: GetInfrastructure(Of T)(IInfrastructure(Of T))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{``0})
    name: GetInfrastructure<T>
    nameWithType: AccessorExtensions.GetInfrastructure<T>
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{``0})
    name: GetInfrastructure(Of T)
    nameWithType: AccessorExtensions.GetInfrastructure(Of T)
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions
  parent: Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: AccessorExtensions
  nameWithType: AccessorExtensions
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: EntityType
  nameWithType: EntityType
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: InternalRelationshipBuilder
  nameWithType: InternalRelationshipBuilder
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: System.Reflection.PropertyInfo
  commentId: T:System.Reflection.PropertyInfo
  parent: System.Reflection
  isExternal: true
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: false
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder}.Instance
  commentId: P:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder}.Instance
  parent: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder}
  definition: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1.Instance
  name: Instance
  nameWithType: IInfrastructure<InternalRelationshipBuilder>.Instance
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder>.Instance
  nameWithType.vb: IInfrastructure(Of InternalRelationshipBuilder).Instance
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder).Instance
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1.Instance
  commentId: P:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1.Instance
  isExternal: false
  name: Instance
  nameWithType: IInfrastructure<T>.Instance
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<T>.Instance
  nameWithType.vb: IInfrastructure(Of T).Instance
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of T).Instance
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders
  isExternal: false
  name: ReferenceCollectionBuilder
  nameWithType: ReferenceCollectionBuilder
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder
