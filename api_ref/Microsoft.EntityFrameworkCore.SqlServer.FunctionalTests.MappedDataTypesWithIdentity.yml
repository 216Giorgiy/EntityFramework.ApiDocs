### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity
  commentId: T:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity
  id: MappedDataTypesWithIdentity
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  children:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Bigint
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Binary_varyingMax
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Bit
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Char_varyingMax
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Character_varyingMax
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Date
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Datetime
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Datetime2
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Datetimeoffset
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Dec
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Decimal
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Double_precision
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Float
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Id
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Image
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Int
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Money
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.National_char_varyingMax
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.National_character_varyingMax
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Ntext
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Numeric
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.NvarcharMax
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Real
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Smalldatetime
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Smallint
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Smallmoney
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Text
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Time
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Tinyint
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.VarbinaryMax
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.VarcharMax
  langs:
  - csharp
  - vb
  name: MappedDataTypesWithIdentity
  nameWithType: MappedDataTypesWithIdentity
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity
  type: Class
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: MappedDataTypesWithIdentity
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 279
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public class MappedDataTypesWithIdentity
    content.vb: Public Class MappedDataTypesWithIdentity
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Id
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Id
  id: Id
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: MappedDataTypesWithIdentity.Id
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Id
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Id
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 281
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public int Id { get; set; }
    content.vb: Public Property Id As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Int
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Int
  id: Int
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity
  langs:
  - csharp
  - vb
  name: Int
  nameWithType: MappedDataTypesWithIdentity.Int
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Int
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Int
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 283
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public int Int { get; set; }
    content.vb: Public Property Int As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Bigint
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Bigint
  id: Bigint
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity
  langs:
  - csharp
  - vb
  name: Bigint
  nameWithType: MappedDataTypesWithIdentity.Bigint
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Bigint
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Bigint
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 284
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public long Bigint { get; set; }
    content.vb: Public Property Bigint As Long
    parameters: []
    return:
      type: System.Int64
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Smallint
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Smallint
  id: Smallint
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity
  langs:
  - csharp
  - vb
  name: Smallint
  nameWithType: MappedDataTypesWithIdentity.Smallint
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Smallint
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Smallint
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 285
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public short Smallint { get; set; }
    content.vb: Public Property Smallint As Short
    parameters: []
    return:
      type: System.Int16
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Tinyint
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Tinyint
  id: Tinyint
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity
  langs:
  - csharp
  - vb
  name: Tinyint
  nameWithType: MappedDataTypesWithIdentity.Tinyint
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Tinyint
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Tinyint
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 286
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public byte Tinyint { get; set; }
    content.vb: Public Property Tinyint As Byte
    parameters: []
    return:
      type: System.Byte
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Bit
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Bit
  id: Bit
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity
  langs:
  - csharp
  - vb
  name: Bit
  nameWithType: MappedDataTypesWithIdentity.Bit
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Bit
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Bit
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 287
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public bool Bit { get; set; }
    content.vb: Public Property Bit As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Money
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Money
  id: Money
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity
  langs:
  - csharp
  - vb
  name: Money
  nameWithType: MappedDataTypesWithIdentity.Money
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Money
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Money
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 288
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public decimal Money { get; set; }
    content.vb: Public Property Money As Decimal
    parameters: []
    return:
      type: System.Decimal
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Smallmoney
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Smallmoney
  id: Smallmoney
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity
  langs:
  - csharp
  - vb
  name: Smallmoney
  nameWithType: MappedDataTypesWithIdentity.Smallmoney
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Smallmoney
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Smallmoney
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 289
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public decimal Smallmoney { get; set; }
    content.vb: Public Property Smallmoney As Decimal
    parameters: []
    return:
      type: System.Decimal
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Float
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Float
  id: Float
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity
  langs:
  - csharp
  - vb
  name: Float
  nameWithType: MappedDataTypesWithIdentity.Float
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Float
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Float
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 290
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public double Float { get; set; }
    content.vb: Public Property Float As Double
    parameters: []
    return:
      type: System.Double
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Real
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Real
  id: Real
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity
  langs:
  - csharp
  - vb
  name: Real
  nameWithType: MappedDataTypesWithIdentity.Real
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Real
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Real
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 291
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public float Real { get; set; }
    content.vb: Public Property Real As Single
    parameters: []
    return:
      type: System.Single
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Double_precision
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Double_precision
  id: Double_precision
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity
  langs:
  - csharp
  - vb
  name: Double_precision
  nameWithType: MappedDataTypesWithIdentity.Double_precision
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Double_precision
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Double_precision
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 292
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public double Double_precision { get; set; }
    content.vb: Public Property Double_precision As Double
    parameters: []
    return:
      type: System.Double
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Date
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Date
  id: Date
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity
  langs:
  - csharp
  - vb
  name: Date
  nameWithType: MappedDataTypesWithIdentity.Date
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Date
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Date
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 293
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public DateTime Date { get; set; }
    content.vb: Public Property Date As Date
    parameters: []
    return:
      type: System.DateTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Datetimeoffset
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Datetimeoffset
  id: Datetimeoffset
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity
  langs:
  - csharp
  - vb
  name: Datetimeoffset
  nameWithType: MappedDataTypesWithIdentity.Datetimeoffset
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Datetimeoffset
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Datetimeoffset
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 294
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public DateTimeOffset Datetimeoffset { get; set; }
    content.vb: Public Property Datetimeoffset As DateTimeOffset
    parameters: []
    return:
      type: System.DateTimeOffset
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Datetime2
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Datetime2
  id: Datetime2
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity
  langs:
  - csharp
  - vb
  name: Datetime2
  nameWithType: MappedDataTypesWithIdentity.Datetime2
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Datetime2
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Datetime2
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 295
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public DateTime Datetime2 { get; set; }
    content.vb: Public Property Datetime2 As Date
    parameters: []
    return:
      type: System.DateTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Smalldatetime
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Smalldatetime
  id: Smalldatetime
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity
  langs:
  - csharp
  - vb
  name: Smalldatetime
  nameWithType: MappedDataTypesWithIdentity.Smalldatetime
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Smalldatetime
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Smalldatetime
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 296
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public DateTime Smalldatetime { get; set; }
    content.vb: Public Property Smalldatetime As Date
    parameters: []
    return:
      type: System.DateTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Datetime
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Datetime
  id: Datetime
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity
  langs:
  - csharp
  - vb
  name: Datetime
  nameWithType: MappedDataTypesWithIdentity.Datetime
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Datetime
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Datetime
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 297
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public DateTime Datetime { get; set; }
    content.vb: Public Property Datetime As Date
    parameters: []
    return:
      type: System.DateTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Time
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Time
  id: Time
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity
  langs:
  - csharp
  - vb
  name: Time
  nameWithType: MappedDataTypesWithIdentity.Time
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Time
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Time
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 298
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public TimeSpan Time { get; set; }
    content.vb: Public Property Time As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.VarcharMax
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.VarcharMax
  id: VarcharMax
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity
  langs:
  - csharp
  - vb
  name: VarcharMax
  nameWithType: MappedDataTypesWithIdentity.VarcharMax
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.VarcharMax
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: VarcharMax
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 299
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public string VarcharMax { get; set; }
    content.vb: Public Property VarcharMax As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Char_varyingMax
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Char_varyingMax
  id: Char_varyingMax
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity
  langs:
  - csharp
  - vb
  name: Char_varyingMax
  nameWithType: MappedDataTypesWithIdentity.Char_varyingMax
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Char_varyingMax
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Char_varyingMax
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 300
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public string Char_varyingMax { get; set; }
    content.vb: Public Property Char_varyingMax As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Character_varyingMax
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Character_varyingMax
  id: Character_varyingMax
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity
  langs:
  - csharp
  - vb
  name: Character_varyingMax
  nameWithType: MappedDataTypesWithIdentity.Character_varyingMax
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Character_varyingMax
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Character_varyingMax
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 301
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public string Character_varyingMax { get; set; }
    content.vb: Public Property Character_varyingMax As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.NvarcharMax
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.NvarcharMax
  id: NvarcharMax
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity
  langs:
  - csharp
  - vb
  name: NvarcharMax
  nameWithType: MappedDataTypesWithIdentity.NvarcharMax
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.NvarcharMax
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: NvarcharMax
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 302
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public string NvarcharMax { get; set; }
    content.vb: Public Property NvarcharMax As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.National_char_varyingMax
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.National_char_varyingMax
  id: National_char_varyingMax
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity
  langs:
  - csharp
  - vb
  name: National_char_varyingMax
  nameWithType: MappedDataTypesWithIdentity.National_char_varyingMax
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.National_char_varyingMax
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: National_char_varyingMax
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 303
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public string National_char_varyingMax { get; set; }
    content.vb: Public Property National_char_varyingMax As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.National_character_varyingMax
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.National_character_varyingMax
  id: National_character_varyingMax
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity
  langs:
  - csharp
  - vb
  name: National_character_varyingMax
  nameWithType: MappedDataTypesWithIdentity.National_character_varyingMax
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.National_character_varyingMax
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: National_character_varyingMax
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 304
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public string National_character_varyingMax { get; set; }
    content.vb: Public Property National_character_varyingMax As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Text
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Text
  id: Text
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity
  langs:
  - csharp
  - vb
  name: Text
  nameWithType: MappedDataTypesWithIdentity.Text
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Text
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Text
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 305
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public string Text { get; set; }
    content.vb: Public Property Text As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Ntext
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Ntext
  id: Ntext
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity
  langs:
  - csharp
  - vb
  name: Ntext
  nameWithType: MappedDataTypesWithIdentity.Ntext
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Ntext
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Ntext
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 306
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public string Ntext { get; set; }
    content.vb: Public Property Ntext As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.VarbinaryMax
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.VarbinaryMax
  id: VarbinaryMax
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity
  langs:
  - csharp
  - vb
  name: VarbinaryMax
  nameWithType: MappedDataTypesWithIdentity.VarbinaryMax
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.VarbinaryMax
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: VarbinaryMax
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 307
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public byte[] VarbinaryMax { get; set; }
    content.vb: Public Property VarbinaryMax As Byte()
    parameters: []
    return:
      type: System.Byte[]
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Binary_varyingMax
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Binary_varyingMax
  id: Binary_varyingMax
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity
  langs:
  - csharp
  - vb
  name: Binary_varyingMax
  nameWithType: MappedDataTypesWithIdentity.Binary_varyingMax
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Binary_varyingMax
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Binary_varyingMax
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 308
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public byte[] Binary_varyingMax { get; set; }
    content.vb: Public Property Binary_varyingMax As Byte()
    parameters: []
    return:
      type: System.Byte[]
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Image
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Image
  id: Image
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity
  langs:
  - csharp
  - vb
  name: Image
  nameWithType: MappedDataTypesWithIdentity.Image
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Image
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Image
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 309
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public byte[] Image { get; set; }
    content.vb: Public Property Image As Byte()
    parameters: []
    return:
      type: System.Byte[]
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Decimal
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Decimal
  id: Decimal
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity
  langs:
  - csharp
  - vb
  name: Decimal
  nameWithType: MappedDataTypesWithIdentity.Decimal
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Decimal
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Decimal
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 310
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public decimal Decimal { get; set; }
    content.vb: Public Property Decimal As Decimal
    parameters: []
    return:
      type: System.Decimal
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Dec
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Dec
  id: Dec
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity
  langs:
  - csharp
  - vb
  name: Dec
  nameWithType: MappedDataTypesWithIdentity.Dec
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Dec
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Dec
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 311
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public decimal Dec { get; set; }
    content.vb: Public Property Dec As Decimal
    parameters: []
    return:
      type: System.Decimal
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Numeric
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Numeric
  id: Numeric
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity
  langs:
  - csharp
  - vb
  name: Numeric
  nameWithType: MappedDataTypesWithIdentity.Numeric
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypesWithIdentity.Numeric
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Numeric
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 312
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public decimal Numeric { get; set; }
    content.vb: Public Property Numeric As Decimal
    parameters: []
    return:
      type: System.Decimal
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  commentId: N:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  nameWithType: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Int16
  commentId: T:System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Decimal
  commentId: T:System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.DateTimeOffset
  commentId: T:System.DateTimeOffset
  parent: System
  isExternal: true
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
