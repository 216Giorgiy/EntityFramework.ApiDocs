### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder
  id: IndexBuilder
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders
  children:
  - Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder.HasAnnotation(System.String,System.Object)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder.IsUnique(System.Boolean)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder.Metadata
  - Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#Metadata#IMutableModel}#Instance
  - Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#Metadata#Internal#InternalIndexBuilder}#Instance
  langs:
  - csharp
  - vb
  name: IndexBuilder
  nameWithType: IndexBuilder
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/IndexBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: IndexBuilder
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/IndexBuilder.cs
    startLine: 19
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\n<p>\n    Provides a simple API for configuring an <xref href=\"Microsoft.EntityFrameworkCore.Metadata.Internal.Index\" data-throw-if-not-resolved=\"false\"></xref>.\n</p>\n<p>\n    Instances of this class are returned from methods when using the <xref href=\"Microsoft.EntityFrameworkCore.ModelBuilder\" data-throw-if-not-resolved=\"false\"></xref> API\n    and it is not designed to be directly constructed in your application code.\n</p>\n"
  example: []
  syntax:
    content: 'public class IndexBuilder : IInfrastructure<IMutableModel>, IInfrastructure<InternalIndexBuilder>'
    content.vb: >-
      Public Class IndexBuilder
          Implements IInfrastructure(Of IMutableModel), IInfrastructure(Of InternalIndexBuilder)
  inheritance:
  - System.Object
  implements:
  - Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.Metadata.IMutableModel}
  - Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder}
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder.Microsoft.EntityFrameworkCore.SqliteIndexBuilderExtensions.ForSqliteHasName(System.String)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder.Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.HasName(System.String)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder.Microsoft.EntityFrameworkCore.SqlServerIndexBuilderExtensions.ForSqlServerHasName(System.String)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder.Microsoft.EntityFrameworkCore.SqlServerIndexBuilderExtensions.ForSqlServerIsClustered(System.Boolean)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder)
  id: '#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder)'
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder
  langs:
  - csharp
  - vb
  name: IndexBuilder(InternalIndexBuilder)
  nameWithType: IndexBuilder.IndexBuilder(InternalIndexBuilder)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder.IndexBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/IndexBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/IndexBuilder.cs
    startLine: 27
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public IndexBuilder(InternalIndexBuilder builder)
    content.vb: Public Sub New(builder As InternalIndexBuilder)
    parameters:
    - id: builder
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#Metadata#Internal#InternalIndexBuilder}#Instance
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#Metadata#Internal#InternalIndexBuilder}#Instance
  id: Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#Metadata#Internal#InternalIndexBuilder}#Instance
  isEii: true
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder
  langs:
  - csharp
  - vb
  name: IInfrastructure<InternalIndexBuilder>.Instance
  nameWithType: IndexBuilder.IInfrastructure<InternalIndexBuilder>.Instance
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder>.Instance
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/IndexBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder>.Instance
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/IndexBuilder.cs
    startLine: 37
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\n    The internal builder being used to configure the index.\n"
  example: []
  syntax:
    content: InternalIndexBuilder IInfrastructure<InternalIndexBuilder>.Instance { get; }
    content.vb: ReadOnly WriteOnly Property Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder>.Instance As InternalIndexBuilder Implements IInfrastructure(Of InternalIndexBuilder).Instance
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder
  implements:
  - Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder}.Instance
  nameWithType.vb: IndexBuilder.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder>.Instance
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder>.Instance
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder.Metadata
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder.Metadata
  id: Metadata
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder
  langs:
  - csharp
  - vb
  name: Metadata
  nameWithType: IndexBuilder.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder.Metadata
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/IndexBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Metadata
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/IndexBuilder.cs
    startLine: 42
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\n    The index being configured.\n"
  example: []
  syntax:
    content: public virtual IMutableIndex Metadata { get; }
    content.vb: Public Overridable ReadOnly Property Metadata As IMutableIndex
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.IMutableIndex
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#Metadata#IMutableModel}#Instance
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#Metadata#IMutableModel}#Instance
  id: Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#Metadata#IMutableModel}#Instance
  isEii: true
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder
  langs:
  - csharp
  - vb
  name: IInfrastructure<IMutableModel>.Instance
  nameWithType: IndexBuilder.IInfrastructure<IMutableModel>.Instance
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.Metadata.IMutableModel>.Instance
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/IndexBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.Metadata.IMutableModel>.Instance
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/IndexBuilder.cs
    startLine: 47
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\n    The model that the index belongs to.\n"
  example: []
  syntax:
    content: IMutableModel IInfrastructure<IMutableModel>.Instance { get; }
    content.vb: ReadOnly WriteOnly Property Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.Metadata.IMutableModel>.Instance As IMutableModel Implements IInfrastructure(Of IMutableModel).Instance
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.IMutableModel
  implements:
  - Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.Metadata.IMutableModel}.Instance
  nameWithType.vb: IndexBuilder.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.Metadata.IMutableModel>.Instance
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.Metadata.IMutableModel>.Instance
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder.HasAnnotation(System.String,System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder.HasAnnotation(System.String,System.Object)
  id: HasAnnotation(System.String,System.Object)
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder
  langs:
  - csharp
  - vb
  name: HasAnnotation(String, Object)
  nameWithType: IndexBuilder.HasAnnotation(String, Object)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder.HasAnnotation(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/IndexBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: HasAnnotation
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/IndexBuilder.cs
    startLine: 57
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\n    Adds or updates an annotation on the index. If an annotation with the key specified in\n<em>annotation</em>\nalready exists it's value will be updated.\n"
  example: []
  syntax:
    content: public virtual IndexBuilder HasAnnotation(string annotation, object value)
    content.vb: Public Overridable Function HasAnnotation(annotation As String, value As Object) As IndexBuilder
    parameters:
    - id: annotation
      type: System.String
      description: 'The key of the annotation to be added or updated. '
    - id: value
      type: System.Object
      description: 'The value to be stored in the annotation. '
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder
      description: 'The same builder instance so that multiple configuration calls can be chained. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder.IsUnique(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder.IsUnique(System.Boolean)
  id: IsUnique(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder
  langs:
  - csharp
  - vb
  name: IsUnique(Boolean)
  nameWithType: IndexBuilder.IsUnique(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder.IsUnique(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/IndexBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: IsUnique
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/IndexBuilder.cs
    startLine: 72
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\n    Configures whether this index is unique (i.e. the value(s) for each instance must be unique).\n"
  example: []
  syntax:
    content: public virtual IndexBuilder IsUnique(bool unique = true)
    content.vb: Public Overridable Function IsUnique(unique As Boolean = True) As IndexBuilder
    parameters:
    - id: unique
      type: System.Boolean
      description: 'A value indicating whether this index is unique. '
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder
      description: 'The same builder instance so that multiple configuration calls can be chained. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.Index
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.Index
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Index
  nameWithType: Index
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.Index
- uid: Microsoft.EntityFrameworkCore.ModelBuilder
  commentId: T:Microsoft.EntityFrameworkCore.ModelBuilder
  parent: Microsoft.EntityFrameworkCore
  isExternal: false
  name: ModelBuilder
  nameWithType: ModelBuilder
  fullName: Microsoft.EntityFrameworkCore.ModelBuilder
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Builders
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Builders
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Builders
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.Metadata.IMutableModel}
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.Metadata.IMutableModel}
  parent: Microsoft.EntityFrameworkCore.Infrastructure
  definition: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
  name: IInfrastructure<IMutableModel>
  nameWithType: IInfrastructure<IMutableModel>
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.Metadata.IMutableModel>
  nameWithType.vb: IInfrastructure(Of IMutableModel)
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of Microsoft.EntityFrameworkCore.Metadata.IMutableModel)
  name.vb: IInfrastructure(Of IMutableModel)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.IMutableModel
    name: IMutableModel
    nameWithType: IMutableModel
    fullName: Microsoft.EntityFrameworkCore.Metadata.IMutableModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IMutableModel
    name: IMutableModel
    nameWithType: IMutableModel
    fullName: Microsoft.EntityFrameworkCore.Metadata.IMutableModel
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder}
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder}
  parent: Microsoft.EntityFrameworkCore.Infrastructure
  definition: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
  name: IInfrastructure<InternalIndexBuilder>
  nameWithType: IInfrastructure<InternalIndexBuilder>
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder>
  nameWithType.vb: IInfrastructure(Of InternalIndexBuilder)
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder)
  name.vb: IInfrastructure(Of InternalIndexBuilder)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder
    name: InternalIndexBuilder
    nameWithType: InternalIndexBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder
    name: InternalIndexBuilder
    nameWithType: InternalIndexBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder.Microsoft.EntityFrameworkCore.SqliteIndexBuilderExtensions.ForSqliteHasName(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.SqliteIndexBuilderExtensions.ForSqliteHasName(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.String)
  parent: Microsoft.EntityFrameworkCore.SqliteIndexBuilderExtensions
  definition: Microsoft.EntityFrameworkCore.SqliteIndexBuilderExtensions.ForSqliteHasName(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.String)
  name: ForSqliteHasName(String)
  nameWithType: SqliteIndexBuilderExtensions.ForSqliteHasName(String)
  fullName: Microsoft.EntityFrameworkCore.SqliteIndexBuilderExtensions.ForSqliteHasName(System.String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.SqliteIndexBuilderExtensions.ForSqliteHasName(System.String)
    name: ForSqliteHasName
    nameWithType: SqliteIndexBuilderExtensions.ForSqliteHasName
    fullName: Microsoft.EntityFrameworkCore.SqliteIndexBuilderExtensions.ForSqliteHasName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.SqliteIndexBuilderExtensions.ForSqliteHasName(System.String)
    name: ForSqliteHasName
    nameWithType: SqliteIndexBuilderExtensions.ForSqliteHasName
    fullName: Microsoft.EntityFrameworkCore.SqliteIndexBuilderExtensions.ForSqliteHasName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder.Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.HasName(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.HasName(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.String)
  parent: Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions
  definition: Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.HasName(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.String)
  name: HasName(String)
  nameWithType: RelationalIndexBuilderExtensions.HasName(String)
  fullName: Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.HasName(System.String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.HasName(System.String)
    name: HasName
    nameWithType: RelationalIndexBuilderExtensions.HasName
    fullName: Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.HasName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.HasName(System.String)
    name: HasName
    nameWithType: RelationalIndexBuilderExtensions.HasName
    fullName: Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.HasName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<IndexBuilder, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<IndexBuilder, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of IndexBuilder, TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder, TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of IndexBuilder, TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<IndexBuilder, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<IndexBuilder, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of IndexBuilder, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of IndexBuilder, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder.Microsoft.EntityFrameworkCore.SqlServerIndexBuilderExtensions.ForSqlServerHasName(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.SqlServerIndexBuilderExtensions.ForSqlServerHasName(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.String)
  parent: Microsoft.EntityFrameworkCore.SqlServerIndexBuilderExtensions
  definition: Microsoft.EntityFrameworkCore.SqlServerIndexBuilderExtensions.ForSqlServerHasName(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.String)
  name: ForSqlServerHasName(String)
  nameWithType: SqlServerIndexBuilderExtensions.ForSqlServerHasName(String)
  fullName: Microsoft.EntityFrameworkCore.SqlServerIndexBuilderExtensions.ForSqlServerHasName(System.String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.SqlServerIndexBuilderExtensions.ForSqlServerHasName(System.String)
    name: ForSqlServerHasName
    nameWithType: SqlServerIndexBuilderExtensions.ForSqlServerHasName
    fullName: Microsoft.EntityFrameworkCore.SqlServerIndexBuilderExtensions.ForSqlServerHasName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.SqlServerIndexBuilderExtensions.ForSqlServerHasName(System.String)
    name: ForSqlServerHasName
    nameWithType: SqlServerIndexBuilderExtensions.ForSqlServerHasName
    fullName: Microsoft.EntityFrameworkCore.SqlServerIndexBuilderExtensions.ForSqlServerHasName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder.Microsoft.EntityFrameworkCore.SqlServerIndexBuilderExtensions.ForSqlServerIsClustered(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.SqlServerIndexBuilderExtensions.ForSqlServerIsClustered(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.Boolean)
  parent: Microsoft.EntityFrameworkCore.SqlServerIndexBuilderExtensions
  definition: Microsoft.EntityFrameworkCore.SqlServerIndexBuilderExtensions.ForSqlServerIsClustered(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.Boolean)
  name: ForSqlServerIsClustered(Boolean)
  nameWithType: SqlServerIndexBuilderExtensions.ForSqlServerIsClustered(Boolean)
  fullName: Microsoft.EntityFrameworkCore.SqlServerIndexBuilderExtensions.ForSqlServerIsClustered(System.Boolean)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.SqlServerIndexBuilderExtensions.ForSqlServerIsClustered(System.Boolean)
    name: ForSqlServerIsClustered
    nameWithType: SqlServerIndexBuilderExtensions.ForSqlServerIsClustered
    fullName: Microsoft.EntityFrameworkCore.SqlServerIndexBuilderExtensions.ForSqlServerIsClustered
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.SqlServerIndexBuilderExtensions.ForSqlServerIsClustered(System.Boolean)
    name: ForSqlServerIsClustered
    nameWithType: SqlServerIndexBuilderExtensions.ForSqlServerIsClustered
    fullName: Microsoft.EntityFrameworkCore.SqlServerIndexBuilderExtensions.ForSqlServerIsClustered
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: Microsoft.EntityFrameworkCore
  commentId: N:Microsoft.EntityFrameworkCore
  isExternal: false
  name: Microsoft.EntityFrameworkCore
  nameWithType: Microsoft.EntityFrameworkCore
  fullName: Microsoft.EntityFrameworkCore
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
  isExternal: false
  name: IInfrastructure<T>
  nameWithType: IInfrastructure<T>
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<T>
  nameWithType.vb: IInfrastructure(Of T)
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of T)
  name.vb: IInfrastructure(Of T)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure
  commentId: N:Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Infrastructure
  nameWithType: Microsoft.EntityFrameworkCore.Infrastructure
  fullName: Microsoft.EntityFrameworkCore.Infrastructure
- uid: Microsoft.EntityFrameworkCore.SqliteIndexBuilderExtensions.ForSqliteHasName(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.SqliteIndexBuilderExtensions.ForSqliteHasName(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.String)
  isExternal: true
  name: ForSqliteHasName(IndexBuilder, String)
  nameWithType: SqliteIndexBuilderExtensions.ForSqliteHasName(IndexBuilder, String)
  fullName: Microsoft.EntityFrameworkCore.SqliteIndexBuilderExtensions.ForSqliteHasName(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder, System.String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.SqliteIndexBuilderExtensions.ForSqliteHasName(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.String)
    name: ForSqliteHasName
    nameWithType: SqliteIndexBuilderExtensions.ForSqliteHasName
    fullName: Microsoft.EntityFrameworkCore.SqliteIndexBuilderExtensions.ForSqliteHasName
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder
    name: IndexBuilder
    nameWithType: IndexBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.SqliteIndexBuilderExtensions.ForSqliteHasName(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.String)
    name: ForSqliteHasName
    nameWithType: SqliteIndexBuilderExtensions.ForSqliteHasName
    fullName: Microsoft.EntityFrameworkCore.SqliteIndexBuilderExtensions.ForSqliteHasName
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder
    name: IndexBuilder
    nameWithType: IndexBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.SqliteIndexBuilderExtensions
  commentId: T:Microsoft.EntityFrameworkCore.SqliteIndexBuilderExtensions
  parent: Microsoft.EntityFrameworkCore
  isExternal: false
  name: SqliteIndexBuilderExtensions
  nameWithType: SqliteIndexBuilderExtensions
  fullName: Microsoft.EntityFrameworkCore.SqliteIndexBuilderExtensions
- uid: Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.HasName(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.HasName(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.String)
  isExternal: true
  name: HasName(IndexBuilder, String)
  nameWithType: RelationalIndexBuilderExtensions.HasName(IndexBuilder, String)
  fullName: Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.HasName(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder, System.String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.HasName(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.String)
    name: HasName
    nameWithType: RelationalIndexBuilderExtensions.HasName
    fullName: Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.HasName
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder
    name: IndexBuilder
    nameWithType: IndexBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.HasName(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.String)
    name: HasName
    nameWithType: RelationalIndexBuilderExtensions.HasName
    fullName: Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.HasName
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder
    name: IndexBuilder
    nameWithType: IndexBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions
  commentId: T:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions
  parent: Microsoft.EntityFrameworkCore
  isExternal: false
  name: RelationalIndexBuilderExtensions
  nameWithType: RelationalIndexBuilderExtensions
  fullName: Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.SqlServerIndexBuilderExtensions.ForSqlServerHasName(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.SqlServerIndexBuilderExtensions.ForSqlServerHasName(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.String)
  isExternal: true
  name: ForSqlServerHasName(IndexBuilder, String)
  nameWithType: SqlServerIndexBuilderExtensions.ForSqlServerHasName(IndexBuilder, String)
  fullName: Microsoft.EntityFrameworkCore.SqlServerIndexBuilderExtensions.ForSqlServerHasName(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder, System.String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.SqlServerIndexBuilderExtensions.ForSqlServerHasName(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.String)
    name: ForSqlServerHasName
    nameWithType: SqlServerIndexBuilderExtensions.ForSqlServerHasName
    fullName: Microsoft.EntityFrameworkCore.SqlServerIndexBuilderExtensions.ForSqlServerHasName
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder
    name: IndexBuilder
    nameWithType: IndexBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.SqlServerIndexBuilderExtensions.ForSqlServerHasName(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.String)
    name: ForSqlServerHasName
    nameWithType: SqlServerIndexBuilderExtensions.ForSqlServerHasName
    fullName: Microsoft.EntityFrameworkCore.SqlServerIndexBuilderExtensions.ForSqlServerHasName
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder
    name: IndexBuilder
    nameWithType: IndexBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.SqlServerIndexBuilderExtensions
  commentId: T:Microsoft.EntityFrameworkCore.SqlServerIndexBuilderExtensions
  parent: Microsoft.EntityFrameworkCore
  isExternal: false
  name: SqlServerIndexBuilderExtensions
  nameWithType: SqlServerIndexBuilderExtensions
  fullName: Microsoft.EntityFrameworkCore.SqlServerIndexBuilderExtensions
- uid: Microsoft.EntityFrameworkCore.SqlServerIndexBuilderExtensions.ForSqlServerIsClustered(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.SqlServerIndexBuilderExtensions.ForSqlServerIsClustered(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.Boolean)
  isExternal: true
  name: ForSqlServerIsClustered(IndexBuilder, Boolean)
  nameWithType: SqlServerIndexBuilderExtensions.ForSqlServerIsClustered(IndexBuilder, Boolean)
  fullName: Microsoft.EntityFrameworkCore.SqlServerIndexBuilderExtensions.ForSqlServerIsClustered(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder, System.Boolean)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.SqlServerIndexBuilderExtensions.ForSqlServerIsClustered(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.Boolean)
    name: ForSqlServerIsClustered
    nameWithType: SqlServerIndexBuilderExtensions.ForSqlServerIsClustered
    fullName: Microsoft.EntityFrameworkCore.SqlServerIndexBuilderExtensions.ForSqlServerIsClustered
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder
    name: IndexBuilder
    nameWithType: IndexBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.SqlServerIndexBuilderExtensions.ForSqlServerIsClustered(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.Boolean)
    name: ForSqlServerIsClustered
    nameWithType: SqlServerIndexBuilderExtensions.ForSqlServerIsClustered
    fullName: Microsoft.EntityFrameworkCore.SqlServerIndexBuilderExtensions.ForSqlServerIsClustered
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder
    name: IndexBuilder
    nameWithType: IndexBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: InternalIndexBuilder
  nameWithType: InternalIndexBuilder
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder}.Instance
  commentId: P:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder}.Instance
  parent: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder}
  definition: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1.Instance
  name: Instance
  nameWithType: IInfrastructure<InternalIndexBuilder>.Instance
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder>.Instance
  nameWithType.vb: IInfrastructure(Of InternalIndexBuilder).Instance
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder).Instance
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1.Instance
  commentId: P:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1.Instance
  isExternal: false
  name: Instance
  nameWithType: IInfrastructure<T>.Instance
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<T>.Instance
  nameWithType.vb: IInfrastructure(Of T).Instance
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of T).Instance
- uid: Microsoft.EntityFrameworkCore.Metadata.IMutableIndex
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IMutableIndex
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IMutableIndex
  nameWithType: IMutableIndex
  fullName: Microsoft.EntityFrameworkCore.Metadata.IMutableIndex
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.Metadata.IMutableModel}.Instance
  commentId: P:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.Metadata.IMutableModel}.Instance
  parent: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.Metadata.IMutableModel}
  definition: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1.Instance
  name: Instance
  nameWithType: IInfrastructure<IMutableModel>.Instance
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.Metadata.IMutableModel>.Instance
  nameWithType.vb: IInfrastructure(Of IMutableModel).Instance
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of Microsoft.EntityFrameworkCore.Metadata.IMutableModel).Instance
- uid: Microsoft.EntityFrameworkCore.Metadata.IMutableModel
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IMutableModel
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IMutableModel
  nameWithType: IMutableModel
  fullName: Microsoft.EntityFrameworkCore.Metadata.IMutableModel
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders
  isExternal: false
  name: IndexBuilder
  nameWithType: IndexBuilder
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
