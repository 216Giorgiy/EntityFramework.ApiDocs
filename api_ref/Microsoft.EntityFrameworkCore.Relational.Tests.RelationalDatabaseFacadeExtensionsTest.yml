### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest
  commentId: T:Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest
  id: RelationalDatabaseFacadeExtensionsTest
  parent: Microsoft.EntityFrameworkCore.Relational.Tests
  children:
  - Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest.Begin_transaction_ignores_isolation_level_on_non_relational_provider
  - Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest.Begin_transaction_ignores_isolation_level_on_non_relational_provider_async
  - Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest.Can_begin_transaction_with_isolation_level
  - Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest.Can_begin_transaction_with_isolation_level_async
  - Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest.Can_close_the_underlying_connection
  - Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest.Can_open_the_underlying_connection
  - Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest.Can_open_the_underlying_connection_async
  - Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest.Can_use_transaction
  - Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest.GetAppliedMigrations_works
  - Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest.GetAppliedMigrationsAsync_works
  - Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest.GetDbConnection_returns_the_current_connection
  - Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest.GetMigrations_works
  - Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest.GetPendingMigrations_works
  - Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest.GetPendingMigrationsAsync_works
  - Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest.Relational_specific_methods_throws_when_non_relational_provider_is_in_use
  - Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest.use_transaction_throws_on_non_relational_provider
  langs:
  - csharp
  - vb
  name: RelationalDatabaseFacadeExtensionsTest
  nameWithType: RelationalDatabaseFacadeExtensionsTest
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest
  type: Class
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Relational.Tests/RelationalDatabaseFacadeExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: RelationalDatabaseFacadeExtensionsTest
    path: test/Microsoft.EntityFrameworkCore.Relational.Tests/RelationalDatabaseFacadeExtensionsTest.cs
    startLine: 21
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Tests
  syntax:
    content: public class RelationalDatabaseFacadeExtensionsTest
    content.vb: Public Class RelationalDatabaseFacadeExtensionsTest
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest.GetDbConnection_returns_the_current_connection
  commentId: M:Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest.GetDbConnection_returns_the_current_connection
  id: GetDbConnection_returns_the_current_connection
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest
  langs:
  - csharp
  - vb
  name: GetDbConnection_returns_the_current_connection()
  nameWithType: RelationalDatabaseFacadeExtensionsTest.GetDbConnection_returns_the_current_connection()
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest.GetDbConnection_returns_the_current_connection()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Relational.Tests/RelationalDatabaseFacadeExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetDbConnection_returns_the_current_connection
    path: test/Microsoft.EntityFrameworkCore.Relational.Tests/RelationalDatabaseFacadeExtensionsTest.cs
    startLine: 23
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Tests
  syntax:
    content: >-
      [Fact]

      public void GetDbConnection_returns_the_current_connection()
    content.vb: >-
      <Fact>

      Public Sub GetDbConnection_returns_the_current_connection
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest.Relational_specific_methods_throws_when_non_relational_provider_is_in_use
  commentId: M:Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest.Relational_specific_methods_throws_when_non_relational_provider_is_in_use
  id: Relational_specific_methods_throws_when_non_relational_provider_is_in_use
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest
  langs:
  - csharp
  - vb
  name: Relational_specific_methods_throws_when_non_relational_provider_is_in_use()
  nameWithType: RelationalDatabaseFacadeExtensionsTest.Relational_specific_methods_throws_when_non_relational_provider_is_in_use()
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest.Relational_specific_methods_throws_when_non_relational_provider_is_in_use()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Relational.Tests/RelationalDatabaseFacadeExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Relational_specific_methods_throws_when_non_relational_provider_is_in_use
    path: test/Microsoft.EntityFrameworkCore.Relational.Tests/RelationalDatabaseFacadeExtensionsTest.cs
    startLine: 37
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Tests
  syntax:
    content: >-
      [Fact]

      public void Relational_specific_methods_throws_when_non_relational_provider_is_in_use()
    content.vb: >-
      <Fact>

      Public Sub Relational_specific_methods_throws_when_non_relational_provider_is_in_use
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest.Can_open_the_underlying_connection
  commentId: M:Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest.Can_open_the_underlying_connection
  id: Can_open_the_underlying_connection
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest
  langs:
  - csharp
  - vb
  name: Can_open_the_underlying_connection()
  nameWithType: RelationalDatabaseFacadeExtensionsTest.Can_open_the_underlying_connection()
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest.Can_open_the_underlying_connection()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Relational.Tests/RelationalDatabaseFacadeExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_open_the_underlying_connection
    path: test/Microsoft.EntityFrameworkCore.Relational.Tests/RelationalDatabaseFacadeExtensionsTest.cs
    startLine: 47
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Tests
  syntax:
    content: >-
      [Fact]

      public void Can_open_the_underlying_connection()
    content.vb: >-
      <Fact>

      Public Sub Can_open_the_underlying_connection
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest.Can_open_the_underlying_connection_async
  commentId: M:Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest.Can_open_the_underlying_connection_async
  id: Can_open_the_underlying_connection_async
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest
  langs:
  - csharp
  - vb
  name: Can_open_the_underlying_connection_async()
  nameWithType: RelationalDatabaseFacadeExtensionsTest.Can_open_the_underlying_connection_async()
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest.Can_open_the_underlying_connection_async()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Relational.Tests/RelationalDatabaseFacadeExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_open_the_underlying_connection_async
    path: test/Microsoft.EntityFrameworkCore.Relational.Tests/RelationalDatabaseFacadeExtensionsTest.cs
    startLine: 60
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Tests
  syntax:
    content: >-
      [Fact]

      public void Can_open_the_underlying_connection_async()
    content.vb: >-
      <Fact>

      Public Sub Can_open_the_underlying_connection_async
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest.Can_close_the_underlying_connection
  commentId: M:Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest.Can_close_the_underlying_connection
  id: Can_close_the_underlying_connection
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest
  langs:
  - csharp
  - vb
  name: Can_close_the_underlying_connection()
  nameWithType: RelationalDatabaseFacadeExtensionsTest.Can_close_the_underlying_connection()
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest.Can_close_the_underlying_connection()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Relational.Tests/RelationalDatabaseFacadeExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_close_the_underlying_connection
    path: test/Microsoft.EntityFrameworkCore.Relational.Tests/RelationalDatabaseFacadeExtensionsTest.cs
    startLine: 75
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Tests
  syntax:
    content: >-
      [Fact]

      public void Can_close_the_underlying_connection()
    content.vb: >-
      <Fact>

      Public Sub Can_close_the_underlying_connection
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest.Can_begin_transaction_with_isolation_level
  commentId: M:Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest.Can_begin_transaction_with_isolation_level
  id: Can_begin_transaction_with_isolation_level
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest
  langs:
  - csharp
  - vb
  name: Can_begin_transaction_with_isolation_level()
  nameWithType: RelationalDatabaseFacadeExtensionsTest.Can_begin_transaction_with_isolation_level()
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest.Can_begin_transaction_with_isolation_level()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Relational.Tests/RelationalDatabaseFacadeExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_begin_transaction_with_isolation_level
    path: test/Microsoft.EntityFrameworkCore.Relational.Tests/RelationalDatabaseFacadeExtensionsTest.cs
    startLine: 88
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Tests
  syntax:
    content: >-
      [Fact]

      public void Can_begin_transaction_with_isolation_level()
    content.vb: >-
      <Fact>

      Public Sub Can_begin_transaction_with_isolation_level
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest.Can_begin_transaction_with_isolation_level_async
  commentId: M:Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest.Can_begin_transaction_with_isolation_level_async
  id: Can_begin_transaction_with_isolation_level_async
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest
  langs:
  - csharp
  - vb
  name: Can_begin_transaction_with_isolation_level_async()
  nameWithType: RelationalDatabaseFacadeExtensionsTest.Can_begin_transaction_with_isolation_level_async()
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest.Can_begin_transaction_with_isolation_level_async()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Relational.Tests/RelationalDatabaseFacadeExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_begin_transaction_with_isolation_level_async
    path: test/Microsoft.EntityFrameworkCore.Relational.Tests/RelationalDatabaseFacadeExtensionsTest.cs
    startLine: 106
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Tests
  syntax:
    content: >-
      [Fact]

      public void Can_begin_transaction_with_isolation_level_async()
    content.vb: >-
      <Fact>

      Public Sub Can_begin_transaction_with_isolation_level_async
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest.Can_use_transaction
  commentId: M:Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest.Can_use_transaction
  id: Can_use_transaction
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest
  langs:
  - csharp
  - vb
  name: Can_use_transaction()
  nameWithType: RelationalDatabaseFacadeExtensionsTest.Can_use_transaction()
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest.Can_use_transaction()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Relational.Tests/RelationalDatabaseFacadeExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_use_transaction
    path: test/Microsoft.EntityFrameworkCore.Relational.Tests/RelationalDatabaseFacadeExtensionsTest.cs
    startLine: 128
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Tests
  syntax:
    content: >-
      [Fact]

      public void Can_use_transaction()
    content.vb: >-
      <Fact>

      Public Sub Can_use_transaction
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest.Begin_transaction_ignores_isolation_level_on_non_relational_provider
  commentId: M:Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest.Begin_transaction_ignores_isolation_level_on_non_relational_provider
  id: Begin_transaction_ignores_isolation_level_on_non_relational_provider
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest
  langs:
  - csharp
  - vb
  name: Begin_transaction_ignores_isolation_level_on_non_relational_provider()
  nameWithType: RelationalDatabaseFacadeExtensionsTest.Begin_transaction_ignores_isolation_level_on_non_relational_provider()
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest.Begin_transaction_ignores_isolation_level_on_non_relational_provider()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Relational.Tests/RelationalDatabaseFacadeExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Begin_transaction_ignores_isolation_level_on_non_relational_provider
    path: test/Microsoft.EntityFrameworkCore.Relational.Tests/RelationalDatabaseFacadeExtensionsTest.cs
    startLine: 145
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Tests
  syntax:
    content: >-
      [Fact]

      public void Begin_transaction_ignores_isolation_level_on_non_relational_provider()
    content.vb: >-
      <Fact>

      Public Sub Begin_transaction_ignores_isolation_level_on_non_relational_provider
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest.Begin_transaction_ignores_isolation_level_on_non_relational_provider_async
  commentId: M:Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest.Begin_transaction_ignores_isolation_level_on_non_relational_provider_async
  id: Begin_transaction_ignores_isolation_level_on_non_relational_provider_async
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest
  langs:
  - csharp
  - vb
  name: Begin_transaction_ignores_isolation_level_on_non_relational_provider_async()
  nameWithType: RelationalDatabaseFacadeExtensionsTest.Begin_transaction_ignores_isolation_level_on_non_relational_provider_async()
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest.Begin_transaction_ignores_isolation_level_on_non_relational_provider_async()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Relational.Tests/RelationalDatabaseFacadeExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Begin_transaction_ignores_isolation_level_on_non_relational_provider_async
    path: test/Microsoft.EntityFrameworkCore.Relational.Tests/RelationalDatabaseFacadeExtensionsTest.cs
    startLine: 163
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Tests
  syntax:
    content: >-
      [Fact]

      public void Begin_transaction_ignores_isolation_level_on_non_relational_provider_async()
    content.vb: >-
      <Fact>

      Public Sub Begin_transaction_ignores_isolation_level_on_non_relational_provider_async
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest.use_transaction_throws_on_non_relational_provider
  commentId: M:Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest.use_transaction_throws_on_non_relational_provider
  id: use_transaction_throws_on_non_relational_provider
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest
  langs:
  - csharp
  - vb
  name: use_transaction_throws_on_non_relational_provider()
  nameWithType: RelationalDatabaseFacadeExtensionsTest.use_transaction_throws_on_non_relational_provider()
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest.use_transaction_throws_on_non_relational_provider()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Relational.Tests/RelationalDatabaseFacadeExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: use_transaction_throws_on_non_relational_provider
    path: test/Microsoft.EntityFrameworkCore.Relational.Tests/RelationalDatabaseFacadeExtensionsTest.cs
    startLine: 185
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Tests
  syntax:
    content: >-
      [Fact]

      public void use_transaction_throws_on_non_relational_provider()
    content.vb: >-
      <Fact>

      Public Sub use_transaction_throws_on_non_relational_provider
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest.GetMigrations_works
  commentId: M:Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest.GetMigrations_works
  id: GetMigrations_works
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest
  langs:
  - csharp
  - vb
  name: GetMigrations_works()
  nameWithType: RelationalDatabaseFacadeExtensionsTest.GetMigrations_works()
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest.GetMigrations_works()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Relational.Tests/RelationalDatabaseFacadeExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetMigrations_works
    path: test/Microsoft.EntityFrameworkCore.Relational.Tests/RelationalDatabaseFacadeExtensionsTest.cs
    startLine: 203
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Tests
  syntax:
    content: >-
      [Fact]

      public void GetMigrations_works()
    content.vb: >-
      <Fact>

      Public Sub GetMigrations_works
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest.GetAppliedMigrations_works
  commentId: M:Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest.GetAppliedMigrations_works
  id: GetAppliedMigrations_works
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest
  langs:
  - csharp
  - vb
  name: GetAppliedMigrations_works()
  nameWithType: RelationalDatabaseFacadeExtensionsTest.GetAppliedMigrations_works()
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest.GetAppliedMigrations_works()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Relational.Tests/RelationalDatabaseFacadeExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetAppliedMigrations_works
    path: test/Microsoft.EntityFrameworkCore.Relational.Tests/RelationalDatabaseFacadeExtensionsTest.cs
    startLine: 224
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Tests
  syntax:
    content: >-
      [Fact]

      public void GetAppliedMigrations_works()
    content.vb: >-
      <Fact>

      Public Sub GetAppliedMigrations_works
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest.GetAppliedMigrationsAsync_works
  commentId: M:Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest.GetAppliedMigrationsAsync_works
  id: GetAppliedMigrationsAsync_works
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest
  langs:
  - csharp
  - vb
  name: GetAppliedMigrationsAsync_works()
  nameWithType: RelationalDatabaseFacadeExtensionsTest.GetAppliedMigrationsAsync_works()
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest.GetAppliedMigrationsAsync_works()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Relational.Tests/RelationalDatabaseFacadeExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetAppliedMigrationsAsync_works
    path: test/Microsoft.EntityFrameworkCore.Relational.Tests/RelationalDatabaseFacadeExtensionsTest.cs
    startLine: 244
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Tests
  syntax:
    content: >-
      [Fact]

      public Task GetAppliedMigrationsAsync_works()
    content.vb: >-
      <Fact>

      Public Function GetAppliedMigrationsAsync_works As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest.GetPendingMigrations_works
  commentId: M:Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest.GetPendingMigrations_works
  id: GetPendingMigrations_works
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest
  langs:
  - csharp
  - vb
  name: GetPendingMigrations_works()
  nameWithType: RelationalDatabaseFacadeExtensionsTest.GetPendingMigrations_works()
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest.GetPendingMigrations_works()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Relational.Tests/RelationalDatabaseFacadeExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetPendingMigrations_works
    path: test/Microsoft.EntityFrameworkCore.Relational.Tests/RelationalDatabaseFacadeExtensionsTest.cs
    startLine: 265
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Tests
  syntax:
    content: >-
      [Fact]

      public void GetPendingMigrations_works()
    content.vb: >-
      <Fact>

      Public Sub GetPendingMigrations_works
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest.GetPendingMigrationsAsync_works
  commentId: M:Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest.GetPendingMigrationsAsync_works
  id: GetPendingMigrationsAsync_works
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest
  langs:
  - csharp
  - vb
  name: GetPendingMigrationsAsync_works()
  nameWithType: RelationalDatabaseFacadeExtensionsTest.GetPendingMigrationsAsync_works()
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.RelationalDatabaseFacadeExtensionsTest.GetPendingMigrationsAsync_works()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Relational.Tests/RelationalDatabaseFacadeExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetPendingMigrationsAsync_works
    path: test/Microsoft.EntityFrameworkCore.Relational.Tests/RelationalDatabaseFacadeExtensionsTest.cs
    startLine: 294
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Tests
  syntax:
    content: >-
      [Fact]

      public Task GetPendingMigrationsAsync_works()
    content.vb: >-
      <Fact>

      Public Function GetPendingMigrationsAsync_works As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.EntityFrameworkCore.Relational.Tests
  commentId: N:Microsoft.EntityFrameworkCore.Relational.Tests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Relational.Tests
  nameWithType: Microsoft.EntityFrameworkCore.Relational.Tests
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
