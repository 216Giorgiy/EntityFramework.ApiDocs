### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Building
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Building
  id: PropertyValuesTestBase`2.Building
  parent: Microsoft.EntityFrameworkCore.Specification.Tests
  children:
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Building.BuildingId
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Building.Create(System.Guid,System.String,System.Decimal)
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Building.GetNoGetterValue
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Building.MailRooms
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Building.Name
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Building.NoGetter
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Building.NoSetter
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Building.NotInModel
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Building.Offices
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Building.PrincipalMailRoom
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Building.PrincipalMailRoomId
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Building.Value
  langs:
  - csharp
  - vb
  name: PropertyValuesTestBase<TTestStore, TFixture>.Building
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Building
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Building
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Building
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 1835
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: protected class Building
    content.vb: Protected Class Building
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Building
  modifiers.csharp:
  - protected
  - class
  modifiers.vb:
  - Protected
  - Class
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Building
  name.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Building
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Building.Create(System.Guid,System.String,System.Decimal)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Building.Create(System.Guid,System.String,System.Decimal)
  id: Create(System.Guid,System.String,System.Decimal)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Building
  langs:
  - csharp
  - vb
  name: Create(Guid, String, Decimal)
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Building.Create(Guid, String, Decimal)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Building.Create(System.Guid, System.String, System.Decimal)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Create
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 1841
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public static PropertyValuesTestBase<TTestStore, TFixture>.Building Create(Guid buildingId, string name, decimal value)
    content.vb: Public Shared Function Create(buildingId As Guid, name As String, value As Decimal) As PropertyValuesTestBase(Of TTestStore, TFixture).Building
    parameters:
    - id: buildingId
      type: System.Guid
    - id: name
      type: System.String
    - id: value
      type: System.Decimal
    return:
      type: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Building
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Building.Create(Guid, String, Decimal)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Building.Create(System.Guid, System.String, System.Decimal)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Building.BuildingId
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Building.BuildingId
  id: BuildingId
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Building
  langs:
  - csharp
  - vb
  name: BuildingId
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Building.BuildingId
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Building.BuildingId
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: BuildingId
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 1849
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public Guid BuildingId { get; set; }
    content.vb: Public Property BuildingId As Guid
    parameters: []
    return:
      type: System.Guid
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Building.BuildingId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Building.BuildingId
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Building.Name
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Building.Name
  id: Name
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Building
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Building.Name
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Building.Name
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Name
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 1850
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public string Name { get; set; }
    content.vb: Public Property Name As String
    parameters: []
    return:
      type: System.String
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Building.Name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Building.Name
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Building.Value
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Building.Value
  id: Value
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Building
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Building.Value
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Building.Value
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Value
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 1851
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public decimal Value { get; set; }
    content.vb: Public Property Value As Decimal
    parameters: []
    return:
      type: System.Decimal
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Building.Value
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Building.Value
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Building.Offices
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Building.Offices
  id: Offices
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Building
  langs:
  - csharp
  - vb
  name: Offices
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Building.Offices
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Building.Offices
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Offices
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 1852
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual ICollection<PropertyValuesTestBase<TTestStore, TFixture>.Office> Offices { get; }
    content.vb: Public Overridable ReadOnly Property Offices As ICollection(Of PropertyValuesTestBase(Of TTestStore, TFixture).Office)
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Office}
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Building.Offices
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Building.Offices
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Building.MailRooms
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Building.MailRooms
  id: MailRooms
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Building
  langs:
  - csharp
  - vb
  name: MailRooms
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Building.MailRooms
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Building.MailRooms
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: MailRooms
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 1853
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual IList<PropertyValuesTestBase<TTestStore, TFixture>.MailRoom> MailRooms { get; }
    content.vb: Public Overridable ReadOnly Property MailRooms As IList(Of PropertyValuesTestBase(Of TTestStore, TFixture).MailRoom)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.MailRoom}
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Building.MailRooms
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Building.MailRooms
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Building.PrincipalMailRoomId
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Building.PrincipalMailRoomId
  id: PrincipalMailRoomId
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Building
  langs:
  - csharp
  - vb
  name: PrincipalMailRoomId
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Building.PrincipalMailRoomId
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Building.PrincipalMailRoomId
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: PrincipalMailRoomId
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 1855
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public int ? PrincipalMailRoomId { get; set; }
    content.vb: Public Property PrincipalMailRoomId As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Building.PrincipalMailRoomId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Building.PrincipalMailRoomId
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Building.PrincipalMailRoom
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Building.PrincipalMailRoom
  id: PrincipalMailRoom
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Building
  langs:
  - csharp
  - vb
  name: PrincipalMailRoom
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Building.PrincipalMailRoom
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Building.PrincipalMailRoom
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: PrincipalMailRoom
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 1856
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public PropertyValuesTestBase<TTestStore, TFixture>.MailRoom PrincipalMailRoom { get; set; }
    content.vb: Public Property PrincipalMailRoom As PropertyValuesTestBase(Of TTestStore, TFixture).MailRoom
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.MailRoom
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Building.PrincipalMailRoom
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Building.PrincipalMailRoom
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Building.NotInModel
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Building.NotInModel
  id: NotInModel
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Building
  langs:
  - csharp
  - vb
  name: NotInModel
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Building.NotInModel
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Building.NotInModel
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: NotInModel
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 1858
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public string NotInModel { get; set; }
    content.vb: Public Property NotInModel As String
    parameters: []
    return:
      type: System.String
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Building.NotInModel
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Building.NotInModel
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Building.NoGetter
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Building.NoGetter
  id: NoGetter
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Building
  langs:
  - csharp
  - vb
  name: NoGetter
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Building.NoGetter
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Building.NoGetter
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: NoGetter
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 1862
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public string NoGetter { set; }
    content.vb: Public WriteOnly Property NoGetter As String
    parameters: []
    return:
      type: System.String
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Building.NoGetter
  modifiers.csharp:
  - public
  - set
  modifiers.vb:
  - Public
  - WriteOnly
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Building.NoGetter
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Building.GetNoGetterValue
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Building.GetNoGetterValue
  id: GetNoGetterValue
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Building
  langs:
  - csharp
  - vb
  name: GetNoGetterValue()
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Building.GetNoGetterValue()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Building.GetNoGetterValue()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetNoGetterValue
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 1867
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public string GetNoGetterValue()
    content.vb: Public Function GetNoGetterValue As String
    return:
      type: System.String
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Building.GetNoGetterValue()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Building.GetNoGetterValue()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Building.NoSetter
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Building.NoSetter
  id: NoSetter
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Building
  langs:
  - csharp
  - vb
  name: NoSetter
  nameWithType: PropertyValuesTestBase<TTestStore, TFixture>.Building.NoSetter
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase<TTestStore, TFixture>.Building.NoSetter
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: NoSetter
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/PropertyValuesTestBase.cs
    startLine: 1869
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public string NoSetter { get; }
    content.vb: Public ReadOnly Property NoSetter As String
    parameters: []
    return:
      type: System.String
  nameWithType.vb: PropertyValuesTestBase(Of TTestStore, TFixture).Building.NoSetter
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase(Of TTestStore, TFixture).Building.NoSetter
references:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests
  commentId: N:Microsoft.EntityFrameworkCore.Specification.Tests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Specification.Tests
  nameWithType: Microsoft.EntityFrameworkCore.Specification.Tests
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Decimal
  commentId: T:System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Building
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Building
  parent: Microsoft.EntityFrameworkCore.Specification.Tests
  isExternal: false
  name: PropertyValuesTestBase.Building<>
  nameWithType: PropertyValuesTestBase.Building<>
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase.Building<>
  nameWithType.vb: PropertyValuesTestBase.Building(Of )
  fullname.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase.Building(Of )
  name.vb: PropertyValuesTestBase.Building(Of )
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Building
    name: PropertyValuesTestBase.Building
    nameWithType: PropertyValuesTestBase.Building
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase.Building
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Building
    name: PropertyValuesTestBase.Building
    nameWithType: PropertyValuesTestBase.Building
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase.Building
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Office}
  commentId: T:System.Collections.Generic.ICollection{Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Office}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<PropertyValuesTestBase.Office<>>
  nameWithType: ICollection<PropertyValuesTestBase.Office<>>
  fullName: System.Collections.Generic.ICollection<Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase.Office<>>
  nameWithType.vb: ICollection(Of PropertyValuesTestBase.Office(Of ))
  fullname.vb: System.Collections.Generic.ICollection(Of Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase.Office(Of ))
  name.vb: ICollection(Of PropertyValuesTestBase.Office(Of ))
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Office
    name: PropertyValuesTestBase.Office
    nameWithType: PropertyValuesTestBase.Office
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase.Office
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.Office
    name: PropertyValuesTestBase.Office
    nameWithType: PropertyValuesTestBase.Office
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase.Office
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullname.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.MailRoom}
  commentId: T:System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.MailRoom}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<PropertyValuesTestBase.MailRoom<>>
  nameWithType: IList<PropertyValuesTestBase.MailRoom<>>
  fullName: System.Collections.Generic.IList<Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase.MailRoom<>>
  nameWithType.vb: IList(Of PropertyValuesTestBase.MailRoom(Of ))
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase.MailRoom(Of ))
  name.vb: IList(Of PropertyValuesTestBase.MailRoom(Of ))
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.MailRoom
    name: PropertyValuesTestBase.MailRoom
    nameWithType: PropertyValuesTestBase.MailRoom
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase.MailRoom
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.MailRoom
    name: PropertyValuesTestBase.MailRoom
    nameWithType: PropertyValuesTestBase.MailRoom
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase.MailRoom
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.MailRoom
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.MailRoom
  parent: Microsoft.EntityFrameworkCore.Specification.Tests
  isExternal: false
  name: PropertyValuesTestBase.MailRoom<>
  nameWithType: PropertyValuesTestBase.MailRoom<>
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase.MailRoom<>
  nameWithType.vb: PropertyValuesTestBase.MailRoom(Of )
  fullname.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase.MailRoom(Of )
  name.vb: PropertyValuesTestBase.MailRoom(Of )
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.MailRoom
    name: PropertyValuesTestBase.MailRoom
    nameWithType: PropertyValuesTestBase.MailRoom
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase.MailRoom
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase`2.MailRoom
    name: PropertyValuesTestBase.MailRoom
    nameWithType: PropertyValuesTestBase.MailRoom
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyValuesTestBase.MailRoom
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
