### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderGenericTest.GenericTestModelBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Tests.ModelBuilderGenericTest.GenericTestModelBuilder
  id: ModelBuilderGenericTest.GenericTestModelBuilder
  parent: Microsoft.EntityFrameworkCore.Tests
  children:
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderGenericTest.GenericTestModelBuilder.#ctor(Microsoft.EntityFrameworkCore.ModelBuilder)
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderGenericTest.GenericTestModelBuilder.Entity``1
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderGenericTest.GenericTestModelBuilder.Entity``1(System.Action{Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder{``0}})
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderGenericTest.GenericTestModelBuilder.Ignore``1
  langs:
  - csharp
  - vb
  name: ModelBuilderGenericTest.GenericTestModelBuilder
  nameWithType: ModelBuilderGenericTest.GenericTestModelBuilder
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderGenericTest.GenericTestModelBuilder
  type: Class
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderGenericTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GenericTestModelBuilder
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderGenericTest.cs
    startLine: 101
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: 'protected class GenericTestModelBuilder : ModelBuilderTest.TestModelBuilder'
    content.vb: >-
      Protected Class GenericTestModelBuilder
          Inherits ModelBuilderTest.TestModelBuilder
  inheritance:
  - System.Object
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder
  inheritedMembers:
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Model
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.ModelBuilder
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Validate
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.GetDisplayName(System.Type)
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.UsePropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - protected
  - class
  modifiers.vb:
  - Protected
  - Class
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderGenericTest.GenericTestModelBuilder.#ctor(Microsoft.EntityFrameworkCore.ModelBuilder)
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderGenericTest.GenericTestModelBuilder.#ctor(Microsoft.EntityFrameworkCore.ModelBuilder)
  id: '#ctor(Microsoft.EntityFrameworkCore.ModelBuilder)'
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderGenericTest.GenericTestModelBuilder
  langs:
  - csharp
  - vb
  name: GenericTestModelBuilder(ModelBuilder)
  nameWithType: ModelBuilderGenericTest.GenericTestModelBuilder.GenericTestModelBuilder(ModelBuilder)
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderGenericTest.GenericTestModelBuilder.GenericTestModelBuilder(Microsoft.EntityFrameworkCore.ModelBuilder)
  type: Constructor
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderGenericTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderGenericTest.cs
    startLine: 103
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: public GenericTestModelBuilder(ModelBuilder modelBuilder)
    content.vb: Public Sub New(modelBuilder As ModelBuilder)
    parameters:
    - id: modelBuilder
      type: Microsoft.EntityFrameworkCore.ModelBuilder
  overload: Microsoft.EntityFrameworkCore.Tests.ModelBuilderGenericTest.GenericTestModelBuilder.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderGenericTest.GenericTestModelBuilder.Entity``1
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderGenericTest.GenericTestModelBuilder.Entity``1
  id: Entity``1
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderGenericTest.GenericTestModelBuilder
  langs:
  - csharp
  - vb
  name: Entity<TEntity>()
  nameWithType: ModelBuilderGenericTest.GenericTestModelBuilder.Entity<TEntity>()
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderGenericTest.GenericTestModelBuilder.Entity<TEntity>()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderGenericTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Entity
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderGenericTest.cs
    startLine: 108
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: 'public override ModelBuilderTest.TestEntityTypeBuilder<TEntity> Entity<TEntity>()where TEntity : class'
    content.vb: Public Overrides Function Entity(Of TEntity As Class) As ModelBuilderTest.TestEntityTypeBuilder(Of TEntity)
    typeParameters:
    - id: TEntity
    return:
      type: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder{{TEntity}}
  overridden: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Entity``1
  overload: Microsoft.EntityFrameworkCore.Tests.ModelBuilderGenericTest.GenericTestModelBuilder.Entity*
  nameWithType.vb: ModelBuilderGenericTest.GenericTestModelBuilder.Entity(Of TEntity)()
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderGenericTest.GenericTestModelBuilder.Entity(Of TEntity)()
  name.vb: Entity(Of TEntity)()
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderGenericTest.GenericTestModelBuilder.Entity``1(System.Action{Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder{``0}})
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderGenericTest.GenericTestModelBuilder.Entity``1(System.Action{Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder{``0}})
  id: Entity``1(System.Action{Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder{``0}})
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderGenericTest.GenericTestModelBuilder
  langs:
  - csharp
  - vb
  name: Entity<TEntity>(Action<ModelBuilderTest.TestEntityTypeBuilder<TEntity>>)
  nameWithType: ModelBuilderGenericTest.GenericTestModelBuilder.Entity<TEntity>(Action<ModelBuilderTest.TestEntityTypeBuilder<TEntity>>)
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderGenericTest.GenericTestModelBuilder.Entity<TEntity>(System.Action<Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder<TEntity>>)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderGenericTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Entity
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderGenericTest.cs
    startLine: 111
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: 'public override ModelBuilderTest.TestModelBuilder Entity<TEntity>(Action<ModelBuilderTest.TestEntityTypeBuilder<TEntity>> buildAction)where TEntity : class'
    content.vb: Public Overrides Function Entity(Of TEntity As Class)(buildAction As Action(Of ModelBuilderTest.TestEntityTypeBuilder(Of TEntity))) As ModelBuilderTest.TestModelBuilder
    parameters:
    - id: buildAction
      type: System.Action{Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder{{TEntity}}}
    typeParameters:
    - id: TEntity
    return:
      type: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder
  overridden: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Entity``1(System.Action{Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder{{TEntity}}})
  overload: Microsoft.EntityFrameworkCore.Tests.ModelBuilderGenericTest.GenericTestModelBuilder.Entity*
  nameWithType.vb: ModelBuilderGenericTest.GenericTestModelBuilder.Entity(Of TEntity)(Action(Of ModelBuilderTest.TestEntityTypeBuilder(Of TEntity)))
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderGenericTest.GenericTestModelBuilder.Entity(Of TEntity)(System.Action(Of Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder(Of TEntity)))
  name.vb: Entity(Of TEntity)(Action(Of ModelBuilderTest.TestEntityTypeBuilder(Of TEntity)))
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderGenericTest.GenericTestModelBuilder.Ignore``1
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderGenericTest.GenericTestModelBuilder.Ignore``1
  id: Ignore``1
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderGenericTest.GenericTestModelBuilder
  langs:
  - csharp
  - vb
  name: Ignore<TEntity>()
  nameWithType: ModelBuilderGenericTest.GenericTestModelBuilder.Ignore<TEntity>()
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderGenericTest.GenericTestModelBuilder.Ignore<TEntity>()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderGenericTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Ignore
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderGenericTest.cs
    startLine: 115
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: 'public override ModelBuilderTest.TestModelBuilder Ignore<TEntity>()where TEntity : class'
    content.vb: Public Overrides Function Ignore(Of TEntity As Class) As ModelBuilderTest.TestModelBuilder
    typeParameters:
    - id: TEntity
    return:
      type: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder
  overridden: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Ignore``1
  overload: Microsoft.EntityFrameworkCore.Tests.ModelBuilderGenericTest.GenericTestModelBuilder.Ignore*
  nameWithType.vb: ModelBuilderGenericTest.GenericTestModelBuilder.Ignore(Of TEntity)()
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderGenericTest.GenericTestModelBuilder.Ignore(Of TEntity)()
  name.vb: Ignore(Of TEntity)()
references:
- uid: Microsoft.EntityFrameworkCore.Tests
  commentId: N:Microsoft.EntityFrameworkCore.Tests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Tests
  nameWithType: Microsoft.EntityFrameworkCore.Tests
  fullName: Microsoft.EntityFrameworkCore.Tests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder
  parent: Microsoft.EntityFrameworkCore.Tests
  isExternal: false
  name: ModelBuilderTest.TestModelBuilder
  nameWithType: ModelBuilderTest.TestModelBuilder
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Model
  commentId: P:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Model
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder
  isExternal: false
  name: Model
  nameWithType: ModelBuilderTest.TestModelBuilder.Model
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Model
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.ModelBuilder
  commentId: P:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.ModelBuilder
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder
  isExternal: false
  name: ModelBuilder
  nameWithType: ModelBuilderTest.TestModelBuilder.ModelBuilder
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.ModelBuilder
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Validate
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Validate
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder
  isExternal: false
  name: Validate()
  nameWithType: ModelBuilderTest.TestModelBuilder.Validate()
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Validate()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Validate
    name: Validate
    nameWithType: ModelBuilderTest.TestModelBuilder.Validate
    fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Validate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Validate
    name: Validate
    nameWithType: ModelBuilderTest.TestModelBuilder.Validate
    fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Validate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.GetDisplayName(System.Type)
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.GetDisplayName(System.Type)
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder
  isExternal: true
  name: GetDisplayName(Type)
  nameWithType: ModelBuilderTest.TestModelBuilder.GetDisplayName(Type)
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.GetDisplayName(System.Type)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.GetDisplayName(System.Type)
    name: GetDisplayName
    nameWithType: ModelBuilderTest.TestModelBuilder.GetDisplayName
    fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.GetDisplayName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.GetDisplayName(System.Type)
    name: GetDisplayName
    nameWithType: ModelBuilderTest.TestModelBuilder.GetDisplayName
    fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.GetDisplayName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.UsePropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode)
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.UsePropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode)
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder
  isExternal: false
  name: UsePropertyAccessMode(PropertyAccessMode)
  nameWithType: ModelBuilderTest.TestModelBuilder.UsePropertyAccessMode(PropertyAccessMode)
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.UsePropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.UsePropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode)
    name: UsePropertyAccessMode
    nameWithType: ModelBuilderTest.TestModelBuilder.UsePropertyAccessMode
    fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.UsePropertyAccessMode
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode
    name: PropertyAccessMode
    nameWithType: PropertyAccessMode
    fullName: Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.UsePropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode)
    name: UsePropertyAccessMode
    nameWithType: ModelBuilderTest.TestModelBuilder.UsePropertyAccessMode
    fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.UsePropertyAccessMode
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode
    name: PropertyAccessMode
    nameWithType: PropertyAccessMode
    fullName: Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderGenericTest.GenericTestModelBuilder.#ctor*
  commentId: Overload:Microsoft.EntityFrameworkCore.Tests.ModelBuilderGenericTest.GenericTestModelBuilder.#ctor
  isExternal: false
  name: GenericTestModelBuilder
  nameWithType: ModelBuilderGenericTest.GenericTestModelBuilder.GenericTestModelBuilder
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderGenericTest.GenericTestModelBuilder.GenericTestModelBuilder
- uid: Microsoft.EntityFrameworkCore.ModelBuilder
  commentId: T:Microsoft.EntityFrameworkCore.ModelBuilder
  parent: Microsoft.EntityFrameworkCore
  isExternal: false
  name: ModelBuilder
  nameWithType: ModelBuilder
  fullName: Microsoft.EntityFrameworkCore.ModelBuilder
- uid: Microsoft.EntityFrameworkCore
  commentId: N:Microsoft.EntityFrameworkCore
  isExternal: false
  name: Microsoft.EntityFrameworkCore
  nameWithType: Microsoft.EntityFrameworkCore
  fullName: Microsoft.EntityFrameworkCore
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Entity``1
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Entity``1
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder
  isExternal: false
  name: Entity<TEntity>()
  nameWithType: ModelBuilderTest.TestModelBuilder.Entity<TEntity>()
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Entity<TEntity>()
  nameWithType.vb: ModelBuilderTest.TestModelBuilder.Entity(Of TEntity)()
  fullname.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Entity(Of TEntity)()
  name.vb: Entity(Of TEntity)()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Entity``1
    name: Entity<TEntity>
    nameWithType: ModelBuilderTest.TestModelBuilder.Entity<TEntity>
    fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Entity<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Entity``1
    name: Entity(Of TEntity)
    nameWithType: ModelBuilderTest.TestModelBuilder.Entity(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Entity(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderGenericTest.GenericTestModelBuilder.Entity*
  commentId: Overload:Microsoft.EntityFrameworkCore.Tests.ModelBuilderGenericTest.GenericTestModelBuilder.Entity
  isExternal: false
  name: Entity<TEntity>
  nameWithType: ModelBuilderGenericTest.GenericTestModelBuilder.Entity<TEntity>
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderGenericTest.GenericTestModelBuilder.Entity<TEntity>
  nameWithType.vb: ModelBuilderGenericTest.GenericTestModelBuilder.Entity(Of TEntity)
  fullname.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderGenericTest.GenericTestModelBuilder.Entity(Of TEntity)
  name.vb: Entity(Of TEntity)
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder{{TEntity}}
  commentId: T:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder{``0}
  parent: Microsoft.EntityFrameworkCore.Tests
  definition: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder`1
  name: ModelBuilderTest.TestEntityTypeBuilder<TEntity>
  nameWithType: ModelBuilderTest.TestEntityTypeBuilder<TEntity>
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder<TEntity>
  nameWithType.vb: ModelBuilderTest.TestEntityTypeBuilder(Of TEntity)
  fullname.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder(Of TEntity)
  name.vb: ModelBuilderTest.TestEntityTypeBuilder(Of TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder`1
    name: ModelBuilderTest.TestEntityTypeBuilder
    nameWithType: ModelBuilderTest.TestEntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder`1
    name: ModelBuilderTest.TestEntityTypeBuilder
    nameWithType: ModelBuilderTest.TestEntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder`1
  commentId: T:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder`1
  parent: Microsoft.EntityFrameworkCore.Tests
  isExternal: false
  name: ModelBuilderTest.TestEntityTypeBuilder<TEntity>
  nameWithType: ModelBuilderTest.TestEntityTypeBuilder<TEntity>
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder<TEntity>
  nameWithType.vb: ModelBuilderTest.TestEntityTypeBuilder(Of TEntity)
  fullname.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder(Of TEntity)
  name.vb: ModelBuilderTest.TestEntityTypeBuilder(Of TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder`1
    name: ModelBuilderTest.TestEntityTypeBuilder
    nameWithType: ModelBuilderTest.TestEntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder`1
    name: ModelBuilderTest.TestEntityTypeBuilder
    nameWithType: ModelBuilderTest.TestEntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Entity``1(System.Action{Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder{{TEntity}}})
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Entity``1(System.Action{Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder{``0}})
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder
  definition: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Entity``1(System.Action{Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder{``0}})
  name: Entity<TEntity>(Action<ModelBuilderTest.TestEntityTypeBuilder<TEntity>>)
  nameWithType: ModelBuilderTest.TestModelBuilder.Entity<TEntity>(Action<ModelBuilderTest.TestEntityTypeBuilder<TEntity>>)
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Entity<TEntity>(System.Action<Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder<TEntity>>)
  nameWithType.vb: ModelBuilderTest.TestModelBuilder.Entity(Of TEntity)(Action(Of ModelBuilderTest.TestEntityTypeBuilder(Of TEntity)))
  fullname.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Entity(Of TEntity)(System.Action(Of Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder(Of TEntity)))
  name.vb: Entity(Of TEntity)(Action(Of ModelBuilderTest.TestEntityTypeBuilder(Of TEntity)))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Entity``1(System.Action{Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder{``0}})
    name: Entity<TEntity>
    nameWithType: ModelBuilderTest.TestModelBuilder.Entity<TEntity>
    fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Entity<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder`1
    name: ModelBuilderTest.TestEntityTypeBuilder
    nameWithType: ModelBuilderTest.TestEntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Entity``1(System.Action{Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder{``0}})
    name: Entity(Of TEntity)
    nameWithType: ModelBuilderTest.TestModelBuilder.Entity(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Entity(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder`1
    name: ModelBuilderTest.TestEntityTypeBuilder
    nameWithType: ModelBuilderTest.TestEntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder{{TEntity}}}
  commentId: T:System.Action{Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder{``0}}
  parent: System
  definition: System.Action`1
  name: Action<ModelBuilderTest.TestEntityTypeBuilder<TEntity>>
  nameWithType: Action<ModelBuilderTest.TestEntityTypeBuilder<TEntity>>
  fullName: System.Action<Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder<TEntity>>
  nameWithType.vb: Action(Of ModelBuilderTest.TestEntityTypeBuilder(Of TEntity))
  fullname.vb: System.Action(Of Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder(Of TEntity))
  name.vb: Action(Of ModelBuilderTest.TestEntityTypeBuilder(Of TEntity))
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder`1
    name: ModelBuilderTest.TestEntityTypeBuilder
    nameWithType: ModelBuilderTest.TestEntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder`1
    name: ModelBuilderTest.TestEntityTypeBuilder
    nameWithType: ModelBuilderTest.TestEntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Entity``1(System.Action{Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder{``0}})
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Entity``1(System.Action{Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder{``0}})
  isExternal: true
  name: Entity<TEntity>(Action<ModelBuilderTest.TestEntityTypeBuilder<TEntity>>)
  nameWithType: ModelBuilderTest.TestModelBuilder.Entity<TEntity>(Action<ModelBuilderTest.TestEntityTypeBuilder<TEntity>>)
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Entity<TEntity>(System.Action<Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder<TEntity>>)
  nameWithType.vb: ModelBuilderTest.TestModelBuilder.Entity(Of TEntity)(Action(Of ModelBuilderTest.TestEntityTypeBuilder(Of TEntity)))
  fullname.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Entity(Of TEntity)(System.Action(Of Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder(Of TEntity)))
  name.vb: Entity(Of TEntity)(Action(Of ModelBuilderTest.TestEntityTypeBuilder(Of TEntity)))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Entity``1(System.Action{Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder{``0}})
    name: Entity<TEntity>
    nameWithType: ModelBuilderTest.TestModelBuilder.Entity<TEntity>
    fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Entity<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder`1
    name: ModelBuilderTest.TestEntityTypeBuilder
    nameWithType: ModelBuilderTest.TestEntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Entity``1(System.Action{Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder{``0}})
    name: Entity(Of TEntity)
    nameWithType: ModelBuilderTest.TestModelBuilder.Entity(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Entity(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder`1
    name: ModelBuilderTest.TestEntityTypeBuilder
    nameWithType: ModelBuilderTest.TestEntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullname.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Ignore``1
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Ignore``1
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder
  isExternal: false
  name: Ignore<TEntity>()
  nameWithType: ModelBuilderTest.TestModelBuilder.Ignore<TEntity>()
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Ignore<TEntity>()
  nameWithType.vb: ModelBuilderTest.TestModelBuilder.Ignore(Of TEntity)()
  fullname.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Ignore(Of TEntity)()
  name.vb: Ignore(Of TEntity)()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Ignore``1
    name: Ignore<TEntity>
    nameWithType: ModelBuilderTest.TestModelBuilder.Ignore<TEntity>
    fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Ignore<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Ignore``1
    name: Ignore(Of TEntity)
    nameWithType: ModelBuilderTest.TestModelBuilder.Ignore(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Ignore(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderGenericTest.GenericTestModelBuilder.Ignore*
  commentId: Overload:Microsoft.EntityFrameworkCore.Tests.ModelBuilderGenericTest.GenericTestModelBuilder.Ignore
  isExternal: false
  name: Ignore<TEntity>
  nameWithType: ModelBuilderGenericTest.GenericTestModelBuilder.Ignore<TEntity>
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderGenericTest.GenericTestModelBuilder.Ignore<TEntity>
  nameWithType.vb: ModelBuilderGenericTest.GenericTestModelBuilder.Ignore(Of TEntity)
  fullname.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderGenericTest.GenericTestModelBuilder.Ignore(Of TEntity)
  name.vb: Ignore(Of TEntity)
