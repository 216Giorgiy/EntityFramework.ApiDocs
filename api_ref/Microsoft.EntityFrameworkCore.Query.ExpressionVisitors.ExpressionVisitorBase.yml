### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase
  commentId: T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase
  id: ExpressionVisitorBase
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
  children:
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.Visit(System.Linq.Expressions.Expression)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.VisitExtension(System.Linq.Expressions.Expression)
  langs:
  - csharp
  - vb
  name: ExpressionVisitorBase
  nameWithType: ExpressionVisitorBase
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/ExpressionVisitorBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ExpressionVisitorBase
    path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/ExpressionVisitorBase.cs
    startLine: 14
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
  summary: "\nA base expression visitor that ignores Block expressions.\n"
  example: []
  syntax:
    content: 'public abstract class ExpressionVisitorBase : RelinqExpressionVisitor'
    content.vb: >-
      Public MustInherit Class ExpressionVisitorBase
          Inherits RelinqExpressionVisitor
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.Visit(System.Linq.Expressions.Expression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.Visit(System.Linq.Expressions.Expression)
  id: Visit(System.Linq.Expressions.Expression)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase
  langs:
  - csharp
  - vb
  name: Visit(Expression)
  nameWithType: ExpressionVisitorBase.Visit(Expression)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.Visit(System.Linq.Expressions.Expression)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/ExpressionVisitorBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Visit
    path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/ExpressionVisitorBase.cs
    startLine: 24
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
  summary: "\nVisits the given node.\n"
  example: []
  syntax:
    content: public override Expression Visit(Expression node)
    content.vb: Public Overrides Function Visit(node As Expression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.Expression
      description: 'The expression to visit. '
    return:
      type: System.Linq.Expressions.Expression
      description: "\nAn Expression.\n"
  overload: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.Visit*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.VisitExtension(System.Linq.Expressions.Expression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.VisitExtension(System.Linq.Expressions.Expression)
  id: VisitExtension(System.Linq.Expressions.Expression)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase
  langs:
  - csharp
  - vb
  name: VisitExtension(Expression)
  nameWithType: ExpressionVisitorBase.VisitExtension(Expression)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.VisitExtension(System.Linq.Expressions.Expression)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/ExpressionVisitorBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: VisitExtension
    path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/ExpressionVisitorBase.cs
    startLine: 37
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
  summary: "\nVisits the children of the extension expression.\n"
  example: []
  syntax:
    content: protected override Expression VisitExtension(Expression node)
    content.vb: Protected Overrides Function VisitExtension(node As Expression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.Expression
      description: The expression to visit.
    return:
      type: System.Linq.Expressions.Expression
      description: "\nThe modified expression, if it or any subexpression was modified; otherwise, returns the original expression.\n"
  overload: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.VisitExtension*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
  commentId: N:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
  nameWithType: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.Visit*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.Visit
  isExternal: false
  name: Visit
  nameWithType: ExpressionVisitorBase.Visit
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.Visit
- uid: System.Linq.Expressions.Expression
  commentId: T:System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: true
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: false
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.VisitExtension*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.VisitExtension
  isExternal: false
  name: VisitExtension
  nameWithType: ExpressionVisitorBase.VisitExtension
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.VisitExtension
