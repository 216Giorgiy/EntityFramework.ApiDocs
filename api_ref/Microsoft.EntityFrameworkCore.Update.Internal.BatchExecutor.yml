### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor
  commentId: T:Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor
  id: BatchExecutor
  parent: Microsoft.EntityFrameworkCore.Update.Internal
  children:
  - Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.#ctor(Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext,Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory)
  - Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.CurrentContext
  - Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection)
  - Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecutionStrategyFactory
  langs:
  - csharp
  - vb
  name: BatchExecutor
  nameWithType: BatchExecutor
  fullName: Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Update/Internal/BatchExecutor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: BatchExecutor
    path: src/Microsoft.EntityFrameworkCore.Relational/Update/Internal/BatchExecutor.cs
    startLine: 18
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Update.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public class BatchExecutor : IBatchExecutor'
    content.vb: >-
      Public Class BatchExecutor
          Implements IBatchExecutor
  inheritance:
  - System.Object
  implements:
  - Microsoft.EntityFrameworkCore.Update.IBatchExecutor
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.#ctor(Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext,Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory)
  commentId: M:Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.#ctor(Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext,Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory)
  id: '#ctor(Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext,Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory)'
  parent: Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor
  langs:
  - csharp
  - vb
  name: BatchExecutor(ICurrentDbContext, IExecutionStrategyFactory)
  nameWithType: BatchExecutor.BatchExecutor(ICurrentDbContext, IExecutionStrategyFactory)
  fullName: Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.BatchExecutor(Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext, Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Update/Internal/BatchExecutor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Relational/Update/Internal/BatchExecutor.cs
    startLine: 24
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Update.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public BatchExecutor(ICurrentDbContext currentContext, IExecutionStrategyFactory executionStrategyFactory)
    content.vb: Public Sub New(currentContext As ICurrentDbContext, executionStrategyFactory As IExecutionStrategyFactory)
    parameters:
    - id: currentContext
      type: Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext
    - id: executionStrategyFactory
      type: Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.CurrentContext
  commentId: P:Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.CurrentContext
  id: CurrentContext
  parent: Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor
  langs:
  - csharp
  - vb
  name: CurrentContext
  nameWithType: BatchExecutor.CurrentContext
  fullName: Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.CurrentContext
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Update/Internal/BatchExecutor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: CurrentContext
    path: src/Microsoft.EntityFrameworkCore.Relational/Update/Internal/BatchExecutor.cs
    startLine: 34
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Update.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual ICurrentDbContext CurrentContext { get; }
    content.vb: Public Overridable ReadOnly Property CurrentContext As ICurrentDbContext
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecutionStrategyFactory
  commentId: P:Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecutionStrategyFactory
  id: ExecutionStrategyFactory
  parent: Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor
  langs:
  - csharp
  - vb
  name: ExecutionStrategyFactory
  nameWithType: BatchExecutor.ExecutionStrategyFactory
  fullName: Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecutionStrategyFactory
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Update/Internal/BatchExecutor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ExecutionStrategyFactory
    path: src/Microsoft.EntityFrameworkCore.Relational/Update/Internal/BatchExecutor.cs
    startLine: 40
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Update.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual IExecutionStrategyFactory ExecutionStrategyFactory { get; }
    content.vb: Protected Overridable ReadOnly Property ExecutionStrategyFactory As IExecutionStrategyFactory
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection)
  commentId: M:Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection)
  id: Execute(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection)
  parent: Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor
  langs:
  - csharp
  - vb
  name: Execute(IEnumerable<ModificationCommandBatch>, IRelationalConnection)
  nameWithType: BatchExecutor.Execute(IEnumerable<ModificationCommandBatch>, IRelationalConnection)
  fullName: Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch>, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Update/Internal/BatchExecutor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Execute
    path: src/Microsoft.EntityFrameworkCore.Relational/Update/Internal/BatchExecutor.cs
    startLine: 46
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Update.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual int Execute(IEnumerable<ModificationCommandBatch> commandBatches, IRelationalConnection connection)
    content.vb: Public Overridable Function Execute(commandBatches As IEnumerable(Of ModificationCommandBatch), connection As IRelationalConnection) As Integer
    parameters:
    - id: commandBatches
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch}
    - id: connection
      type: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
    return:
      type: System.Int32
  implements:
  - Microsoft.EntityFrameworkCore.Update.IBatchExecutor.Execute(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection)
  nameWithType.vb: BatchExecutor.Execute(IEnumerable(Of ModificationCommandBatch), IRelationalConnection)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch), Microsoft.EntityFrameworkCore.Storage.IRelationalConnection)
  name.vb: Execute(IEnumerable(Of ModificationCommandBatch), IRelationalConnection)
- uid: Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Threading.CancellationToken)
  id: ExecuteAsync(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor
  langs:
  - csharp
  - vb
  name: ExecuteAsync(IEnumerable<ModificationCommandBatch>, IRelationalConnection, CancellationToken)
  nameWithType: BatchExecutor.ExecuteAsync(IEnumerable<ModificationCommandBatch>, IRelationalConnection, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch>, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Update/Internal/BatchExecutor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ExecuteAsync
    path: src/Microsoft.EntityFrameworkCore.Relational/Update/Internal/BatchExecutor.cs
    startLine: 90
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Update.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual Task<int> ExecuteAsync(IEnumerable<ModificationCommandBatch> commandBatches, IRelationalConnection connection, CancellationToken cancellationToken = null)
    content.vb: Public Overridable Function ExecuteAsync(commandBatches As IEnumerable(Of ModificationCommandBatch), connection As IRelationalConnection, cancellationToken As CancellationToken = Nothing) As Task(Of Integer)
    parameters:
    - id: commandBatches
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch}
    - id: connection
      type: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Int32}
  implements:
  - Microsoft.EntityFrameworkCore.Update.IBatchExecutor.ExecuteAsync(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Threading.CancellationToken)
  nameWithType.vb: BatchExecutor.ExecuteAsync(IEnumerable(Of ModificationCommandBatch), IRelationalConnection, CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch), Microsoft.EntityFrameworkCore.Storage.IRelationalConnection, System.Threading.CancellationToken)
  name.vb: ExecuteAsync(IEnumerable(Of ModificationCommandBatch), IRelationalConnection, CancellationToken)
references:
- uid: Microsoft.EntityFrameworkCore.Update.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Update.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Update.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Update.Internal
  fullName: Microsoft.EntityFrameworkCore.Update.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Update.IBatchExecutor
  commentId: T:Microsoft.EntityFrameworkCore.Update.IBatchExecutor
  parent: Microsoft.EntityFrameworkCore.Update
  isExternal: false
  name: IBatchExecutor
  nameWithType: IBatchExecutor
  fullName: Microsoft.EntityFrameworkCore.Update.IBatchExecutor
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<BatchExecutor, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<BatchExecutor, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of BatchExecutor, TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor, TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of BatchExecutor, TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<BatchExecutor, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<BatchExecutor, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of BatchExecutor, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of BatchExecutor, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Update
  commentId: N:Microsoft.EntityFrameworkCore.Update
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Update
  nameWithType: Microsoft.EntityFrameworkCore.Update
  fullName: Microsoft.EntityFrameworkCore.Update
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext
  commentId: T:Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext
  parent: Microsoft.EntityFrameworkCore.Internal
  isExternal: false
  name: ICurrentDbContext
  nameWithType: ICurrentDbContext
  fullName: Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext
- uid: Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IExecutionStrategyFactory
  nameWithType: IExecutionStrategyFactory
  fullName: Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory
- uid: Microsoft.EntityFrameworkCore.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Internal
  fullName: Microsoft.EntityFrameworkCore.Internal
- uid: Microsoft.EntityFrameworkCore.Storage
  commentId: N:Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Storage
  nameWithType: Microsoft.EntityFrameworkCore.Storage
  fullName: Microsoft.EntityFrameworkCore.Storage
- uid: Microsoft.EntityFrameworkCore.Update.IBatchExecutor.Execute(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection)
  commentId: M:Microsoft.EntityFrameworkCore.Update.IBatchExecutor.Execute(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection)
  parent: Microsoft.EntityFrameworkCore.Update.IBatchExecutor
  isExternal: true
  name: Execute(IEnumerable<ModificationCommandBatch>, IRelationalConnection)
  nameWithType: IBatchExecutor.Execute(IEnumerable<ModificationCommandBatch>, IRelationalConnection)
  fullName: Microsoft.EntityFrameworkCore.Update.IBatchExecutor.Execute(System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch>, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection)
  nameWithType.vb: IBatchExecutor.Execute(IEnumerable(Of ModificationCommandBatch), IRelationalConnection)
  fullname.vb: Microsoft.EntityFrameworkCore.Update.IBatchExecutor.Execute(System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch), Microsoft.EntityFrameworkCore.Storage.IRelationalConnection)
  name.vb: Execute(IEnumerable(Of ModificationCommandBatch), IRelationalConnection)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Update.IBatchExecutor.Execute(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection)
    name: Execute
    nameWithType: IBatchExecutor.Execute
    fullName: Microsoft.EntityFrameworkCore.Update.IBatchExecutor.Execute
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch
    name: ModificationCommandBatch
    nameWithType: ModificationCommandBatch
    fullName: Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
    name: IRelationalConnection
    nameWithType: IRelationalConnection
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Update.IBatchExecutor.Execute(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection)
    name: Execute
    nameWithType: IBatchExecutor.Execute
    fullName: Microsoft.EntityFrameworkCore.Update.IBatchExecutor.Execute
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch
    name: ModificationCommandBatch
    nameWithType: ModificationCommandBatch
    fullName: Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
    name: IRelationalConnection
    nameWithType: IRelationalConnection
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ModificationCommandBatch>
  nameWithType: IEnumerable<ModificationCommandBatch>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch>
  nameWithType.vb: IEnumerable(Of ModificationCommandBatch)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch)
  name.vb: IEnumerable(Of ModificationCommandBatch)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch
    name: ModificationCommandBatch
    nameWithType: ModificationCommandBatch
    fullName: Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch
    name: ModificationCommandBatch
    nameWithType: ModificationCommandBatch
    fullName: Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IRelationalConnection
  nameWithType: IRelationalConnection
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.EntityFrameworkCore.Update.IBatchExecutor.ExecuteAsync(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Update.IBatchExecutor.ExecuteAsync(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.Update.IBatchExecutor
  isExternal: true
  name: ExecuteAsync(IEnumerable<ModificationCommandBatch>, IRelationalConnection, CancellationToken)
  nameWithType: IBatchExecutor.ExecuteAsync(IEnumerable<ModificationCommandBatch>, IRelationalConnection, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Update.IBatchExecutor.ExecuteAsync(System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch>, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection, System.Threading.CancellationToken)
  nameWithType.vb: IBatchExecutor.ExecuteAsync(IEnumerable(Of ModificationCommandBatch), IRelationalConnection, CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.Update.IBatchExecutor.ExecuteAsync(System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch), Microsoft.EntityFrameworkCore.Storage.IRelationalConnection, System.Threading.CancellationToken)
  name.vb: ExecuteAsync(IEnumerable(Of ModificationCommandBatch), IRelationalConnection, CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Update.IBatchExecutor.ExecuteAsync(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Threading.CancellationToken)
    name: ExecuteAsync
    nameWithType: IBatchExecutor.ExecuteAsync
    fullName: Microsoft.EntityFrameworkCore.Update.IBatchExecutor.ExecuteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch
    name: ModificationCommandBatch
    nameWithType: ModificationCommandBatch
    fullName: Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
    name: IRelationalConnection
    nameWithType: IRelationalConnection
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Update.IBatchExecutor.ExecuteAsync(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Threading.CancellationToken)
    name: ExecuteAsync
    nameWithType: IBatchExecutor.ExecuteAsync
    fullName: Microsoft.EntityFrameworkCore.Update.IBatchExecutor.ExecuteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch
    name: ModificationCommandBatch
    nameWithType: ModificationCommandBatch
    fullName: Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
    name: IRelationalConnection
    nameWithType: IRelationalConnection
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: T:System.Threading.Tasks.Task{System.Int32}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Int32>
  nameWithType: Task<Int32>
  fullName: System.Threading.Tasks.Task<System.Int32>
  nameWithType.vb: Task(Of Int32)
  fullname.vb: System.Threading.Tasks.Task(Of System.Int32)
  name.vb: Task(Of Int32)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
