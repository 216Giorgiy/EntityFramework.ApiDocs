### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode
  id: PropertyAccessMode
  parent: Microsoft.EntityFrameworkCore.Metadata
  children:
  - Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode.Field
  - Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode.FieldDuringConstruction
  - Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode.Property
  langs:
  - csharp
  - vb
  name: PropertyAccessMode
  nameWithType: PropertyAccessMode
  fullName: Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode
  type: Enum
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/PropertyAccessMode.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: PropertyAccessMode
    path: src/Microsoft.EntityFrameworkCore/Metadata/PropertyAccessMode.cs
    startLine: 24
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata
  summary: "\n<p>\n    Pass a value from this enum to <xref href=\"Microsoft.EntityFrameworkCore.ModelBuilder.UsePropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode)\" data-throw-if-not-resolved=\"false\"></xref>,\n<xref href=\"Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.UsePropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode)\" data-throw-if-not-resolved=\"false\"></xref>, or\n<xref href=\"Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder.UsePropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode)\" data-throw-if-not-resolved=\"false\"></xref> to change whether the property\nor backing field will be used when reading and writing to a property or field.\n</p>\n<p>\n    If no access mode is set, then the backing field for a property will be used if possible\n    when constructing new instances of the entity. The property getter or setter will be used,\n    if possible, for all other accesses of the property. Note that when it is not possible\n    to use the field because it could not be found by convention and was not specified using\n<xref href=\"Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder.HasField(System.String)\" data-throw-if-not-resolved=\"false\"></xref>, then the property will be used instead. Likewise,\nwhen it is not possible to use the property getter or setter, for example when the\nproperty is read-only, then the field will be used instead.\n</p>\n"
  example: []
  syntax:
    content: public enum PropertyAccessMode
    content.vb: Public Enum PropertyAccessMode
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode.Field
  commentId: F:Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode.Field
  id: Field
  parent: Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode
  langs:
  - csharp
  - vb
  name: Field
  nameWithType: PropertyAccessMode.Field
  fullName: Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode.Field
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/PropertyAccessMode.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Field
    path: src/Microsoft.EntityFrameworkCore/Metadata/PropertyAccessMode.cs
    startLine: 35
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata
  summary: "\n<p>\n    Enforces that all accesses to the property must go through the field.\n</p>\n<p>\n    An exception will be thrown if this mode is set and it is not possible to read\n    from or write to the field.\n</p>\n"
  example: []
  syntax:
    content: Field = 0
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode.FieldDuringConstruction
  commentId: F:Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode.FieldDuringConstruction
  id: FieldDuringConstruction
  parent: Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode
  langs:
  - csharp
  - vb
  name: FieldDuringConstruction
  nameWithType: PropertyAccessMode.FieldDuringConstruction
  fullName: Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode.FieldDuringConstruction
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/PropertyAccessMode.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: FieldDuringConstruction
    path: src/Microsoft.EntityFrameworkCore/Metadata/PropertyAccessMode.cs
    startLine: 57
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata
  summary: "\n<p>\n    Enforces that all accesses to the property must go through the field when\n    new instances are being constructed. New instances are typically constructed when\n    entities are queried from the database.\n    An exception will be thrown if this mode is set and it is not possible to\n    write to the field.\n</p>\n<p>\n    All other uses of the property will go through the property getters and setters,\n    unless this is not possible because, for example, the property is read-only, in which\n    case these accesses will also use the field.\n</p>\n<p>\n    This access mode is similar to the default mode used if none has been set except\n    that it will throw an exception if it is not possible to write to the field for\n    entity construction. The default access mode will fall back to using the property\n    instead.\n</p>\n"
  example: []
  syntax:
    content: FieldDuringConstruction = 1
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode.Property
  commentId: F:Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode.Property
  id: Property
  parent: Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode
  langs:
  - csharp
  - vb
  name: Property
  nameWithType: PropertyAccessMode.Property
  fullName: Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode.Property
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/PropertyAccessMode.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Property
    path: src/Microsoft.EntityFrameworkCore/Metadata/PropertyAccessMode.cs
    startLine: 69
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata
  summary: "\n<p>\n    Enforces that all accesses to the property must go through the property\n    getters and setters, even when new objects are being constructed.\n</p>\n<p>\n    An exception will be thrown if this mode is set and it is not possible to read\n    from or write to the property, for example because it is read-only.\n</p>\n"
  example: []
  syntax:
    content: Property = 2
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: Microsoft.EntityFrameworkCore.ModelBuilder.UsePropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode)
  commentId: M:Microsoft.EntityFrameworkCore.ModelBuilder.UsePropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode)
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.UsePropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.UsePropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode)
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder.UsePropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder.UsePropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode)
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder.HasField(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder.HasField(System.String)
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: PropertyAccessMode
  nameWithType: PropertyAccessMode
  fullName: Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode
