### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedFixupTestBase`2.TestTemp
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedFixupTestBase`2.TestTemp
  id: StoreGeneratedFixupTestBase`2.TestTemp
  parent: Microsoft.EntityFrameworkCore.Specification.Tests
  children:
  - Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedFixupTestBase`2.TestTemp.Id
  - Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedFixupTestBase`2.TestTemp.NotId
  langs:
  - csharp
  - vb
  name: StoreGeneratedFixupTestBase<TTestStore, TFixture>.TestTemp
  nameWithType: StoreGeneratedFixupTestBase<TTestStore, TFixture>.TestTemp
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedFixupTestBase<TTestStore, TFixture>.TestTemp
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedFixupTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: TestTemp
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedFixupTestBase.cs
    startLine: 4027
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: protected class TestTemp
    content.vb: Protected Class TestTemp
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: StoreGeneratedFixupTestBase(Of TTestStore, TFixture).TestTemp
  modifiers.csharp:
  - protected
  - class
  modifiers.vb:
  - Protected
  - Class
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedFixupTestBase(Of TTestStore, TFixture).TestTemp
  name.vb: StoreGeneratedFixupTestBase(Of TTestStore, TFixture).TestTemp
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedFixupTestBase`2.TestTemp.Id
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedFixupTestBase`2.TestTemp.Id
  id: Id
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedFixupTestBase`2.TestTemp
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: StoreGeneratedFixupTestBase<TTestStore, TFixture>.TestTemp.Id
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedFixupTestBase<TTestStore, TFixture>.TestTemp.Id
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedFixupTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Id
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedFixupTestBase.cs
    startLine: 4029
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public int Id { get; set; }
    content.vb: Public Property Id As Integer
    parameters: []
    return:
      type: System.Int32
  nameWithType.vb: StoreGeneratedFixupTestBase(Of TTestStore, TFixture).TestTemp.Id
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedFixupTestBase(Of TTestStore, TFixture).TestTemp.Id
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedFixupTestBase`2.TestTemp.NotId
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedFixupTestBase`2.TestTemp.NotId
  id: NotId
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedFixupTestBase`2.TestTemp
  langs:
  - csharp
  - vb
  name: NotId
  nameWithType: StoreGeneratedFixupTestBase<TTestStore, TFixture>.TestTemp.NotId
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedFixupTestBase<TTestStore, TFixture>.TestTemp.NotId
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedFixupTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: NotId
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedFixupTestBase.cs
    startLine: 4030
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public int NotId { get; set; }
    content.vb: Public Property NotId As Integer
    parameters: []
    return:
      type: System.Int32
  nameWithType.vb: StoreGeneratedFixupTestBase(Of TTestStore, TFixture).TestTemp.NotId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedFixupTestBase(Of TTestStore, TFixture).TestTemp.NotId
references:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests
  commentId: N:Microsoft.EntityFrameworkCore.Specification.Tests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Specification.Tests
  nameWithType: Microsoft.EntityFrameworkCore.Specification.Tests
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
