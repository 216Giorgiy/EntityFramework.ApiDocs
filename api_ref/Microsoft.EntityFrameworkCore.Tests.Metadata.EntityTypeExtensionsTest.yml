### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Tests.Metadata.EntityTypeExtensionsTest
  commentId: T:Microsoft.EntityFrameworkCore.Tests.Metadata.EntityTypeExtensionsTest
  id: EntityTypeExtensionsTest
  parent: Microsoft.EntityFrameworkCore.Tests.Metadata
  children:
  - Microsoft.EntityFrameworkCore.Tests.Metadata.EntityTypeExtensionsTest.Can_determine_whether_IsAssignableFrom
  - Microsoft.EntityFrameworkCore.Tests.Metadata.EntityTypeExtensionsTest.Can_get_all_properties_and_navigations
  - Microsoft.EntityFrameworkCore.Tests.Metadata.EntityTypeExtensionsTest.Can_get_derived_types
  - Microsoft.EntityFrameworkCore.Tests.Metadata.EntityTypeExtensionsTest.Can_get_proper_table_name_for_generic_entityType
  - Microsoft.EntityFrameworkCore.Tests.Metadata.EntityTypeExtensionsTest.Can_get_referencing_foreign_keys
  - Microsoft.EntityFrameworkCore.Tests.Metadata.EntityTypeExtensionsTest.Can_get_root_type
  langs:
  - csharp
  - vb
  name: EntityTypeExtensionsTest
  nameWithType: EntityTypeExtensionsTest
  fullName: Microsoft.EntityFrameworkCore.Tests.Metadata.EntityTypeExtensionsTest
  type: Class
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/EntityTypeExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: EntityTypeExtensionsTest
    path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/EntityTypeExtensionsTest.cs
    startLine: 11
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Metadata
  syntax:
    content: public class EntityTypeExtensionsTest
    content.vb: Public Class EntityTypeExtensionsTest
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Tests.Metadata.EntityTypeExtensionsTest.Can_get_all_properties_and_navigations
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Metadata.EntityTypeExtensionsTest.Can_get_all_properties_and_navigations
  id: Can_get_all_properties_and_navigations
  parent: Microsoft.EntityFrameworkCore.Tests.Metadata.EntityTypeExtensionsTest
  langs:
  - csharp
  - vb
  name: Can_get_all_properties_and_navigations()
  nameWithType: EntityTypeExtensionsTest.Can_get_all_properties_and_navigations()
  fullName: Microsoft.EntityFrameworkCore.Tests.Metadata.EntityTypeExtensionsTest.Can_get_all_properties_and_navigations()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/EntityTypeExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_get_all_properties_and_navigations
    path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/EntityTypeExtensionsTest.cs
    startLine: 13
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Can_get_all_properties_and_navigations()
    content.vb: >-
      <Fact>

      Public Sub Can_get_all_properties_and_navigations
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Metadata.EntityTypeExtensionsTest.Can_get_referencing_foreign_keys
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Metadata.EntityTypeExtensionsTest.Can_get_referencing_foreign_keys
  id: Can_get_referencing_foreign_keys
  parent: Microsoft.EntityFrameworkCore.Tests.Metadata.EntityTypeExtensionsTest
  langs:
  - csharp
  - vb
  name: Can_get_referencing_foreign_keys()
  nameWithType: EntityTypeExtensionsTest.Can_get_referencing_foreign_keys()
  fullName: Microsoft.EntityFrameworkCore.Tests.Metadata.EntityTypeExtensionsTest.Can_get_referencing_foreign_keys()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/EntityTypeExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_get_referencing_foreign_keys
    path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/EntityTypeExtensionsTest.cs
    startLine: 30
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Can_get_referencing_foreign_keys()
    content.vb: >-
      <Fact>

      Public Sub Can_get_referencing_foreign_keys
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Metadata.EntityTypeExtensionsTest.Can_get_root_type
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Metadata.EntityTypeExtensionsTest.Can_get_root_type
  id: Can_get_root_type
  parent: Microsoft.EntityFrameworkCore.Tests.Metadata.EntityTypeExtensionsTest
  langs:
  - csharp
  - vb
  name: Can_get_root_type()
  nameWithType: EntityTypeExtensionsTest.Can_get_root_type()
  fullName: Microsoft.EntityFrameworkCore.Tests.Metadata.EntityTypeExtensionsTest.Can_get_root_type()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/EntityTypeExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_get_root_type
    path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/EntityTypeExtensionsTest.cs
    startLine: 42
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Can_get_root_type()
    content.vb: >-
      <Fact>

      Public Sub Can_get_root_type
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Metadata.EntityTypeExtensionsTest.Can_get_derived_types
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Metadata.EntityTypeExtensionsTest.Can_get_derived_types
  id: Can_get_derived_types
  parent: Microsoft.EntityFrameworkCore.Tests.Metadata.EntityTypeExtensionsTest
  langs:
  - csharp
  - vb
  name: Can_get_derived_types()
  nameWithType: EntityTypeExtensionsTest.Can_get_derived_types()
  fullName: Microsoft.EntityFrameworkCore.Tests.Metadata.EntityTypeExtensionsTest.Can_get_derived_types()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/EntityTypeExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_get_derived_types
    path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/EntityTypeExtensionsTest.cs
    startLine: 57
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Can_get_derived_types()
    content.vb: >-
      <Fact>

      Public Sub Can_get_derived_types
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Metadata.EntityTypeExtensionsTest.Can_determine_whether_IsAssignableFrom
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Metadata.EntityTypeExtensionsTest.Can_determine_whether_IsAssignableFrom
  id: Can_determine_whether_IsAssignableFrom
  parent: Microsoft.EntityFrameworkCore.Tests.Metadata.EntityTypeExtensionsTest
  langs:
  - csharp
  - vb
  name: Can_determine_whether_IsAssignableFrom()
  nameWithType: EntityTypeExtensionsTest.Can_determine_whether_IsAssignableFrom()
  fullName: Microsoft.EntityFrameworkCore.Tests.Metadata.EntityTypeExtensionsTest.Can_determine_whether_IsAssignableFrom()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/EntityTypeExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_determine_whether_IsAssignableFrom
    path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/EntityTypeExtensionsTest.cs
    startLine: 74
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Can_determine_whether_IsAssignableFrom()
    content.vb: >-
      <Fact>

      Public Sub Can_determine_whether_IsAssignableFrom
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Metadata.EntityTypeExtensionsTest.Can_get_proper_table_name_for_generic_entityType
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Metadata.EntityTypeExtensionsTest.Can_get_proper_table_name_for_generic_entityType
  id: Can_get_proper_table_name_for_generic_entityType
  parent: Microsoft.EntityFrameworkCore.Tests.Metadata.EntityTypeExtensionsTest
  langs:
  - csharp
  - vb
  name: Can_get_proper_table_name_for_generic_entityType()
  nameWithType: EntityTypeExtensionsTest.Can_get_proper_table_name_for_generic_entityType()
  fullName: Microsoft.EntityFrameworkCore.Tests.Metadata.EntityTypeExtensionsTest.Can_get_proper_table_name_for_generic_entityType()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/EntityTypeExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_get_proper_table_name_for_generic_entityType
    path: test/Microsoft.EntityFrameworkCore.Tests/Metadata/EntityTypeExtensionsTest.cs
    startLine: 94
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Can_get_proper_table_name_for_generic_entityType()
    content.vb: >-
      <Fact>

      Public Sub Can_get_proper_table_name_for_generic_entityType
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.EntityFrameworkCore.Tests.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Tests.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Tests.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Tests.Metadata
  fullName: Microsoft.EntityFrameworkCore.Tests.Metadata
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
