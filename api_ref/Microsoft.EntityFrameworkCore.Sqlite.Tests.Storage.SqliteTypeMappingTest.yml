### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Sqlite.Tests.Storage.SqliteTypeMappingTest
  commentId: T:Microsoft.EntityFrameworkCore.Sqlite.Tests.Storage.SqliteTypeMappingTest
  id: SqliteTypeMappingTest
  parent: Microsoft.EntityFrameworkCore.Sqlite.Tests.Storage
  children:
  - Microsoft.EntityFrameworkCore.Sqlite.Tests.Storage.SqliteTypeMappingTest.CreateTestCommand
  - Microsoft.EntityFrameworkCore.Sqlite.Tests.Storage.SqliteTypeMappingTest.DefaultParameterType
  - Microsoft.EntityFrameworkCore.Sqlite.Tests.Storage.SqliteTypeMappingTest.It_maps_strings_to_not_null_types(System.String,System.Type)
  langs:
  - csharp
  - vb
  name: SqliteTypeMappingTest
  nameWithType: SqliteTypeMappingTest
  fullName: Microsoft.EntityFrameworkCore.Sqlite.Tests.Storage.SqliteTypeMappingTest
  type: Class
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Sqlite.Tests/Storage/SqliteTypeMappingTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: SqliteTypeMappingTest
    path: test/Microsoft.EntityFrameworkCore.Sqlite.Tests/Storage/SqliteTypeMappingTest.cs
    startLine: 14
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite.Tests
  namespace: Microsoft.EntityFrameworkCore.Sqlite.Tests.Storage
  syntax:
    content: 'public class SqliteTypeMappingTest : RelationalTypeMappingTest'
    content.vb: >-
      Public Class SqliteTypeMappingTest
          Inherits RelationalTypeMappingTest
  inheritance:
  - System.Object
  - Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMappingTest
  inheritedMembers:
  - Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMappingTest.Can_create_simple_parameter
  - Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMappingTest.Can_create_simple_nullable_parameter
  - Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMappingTest.Can_create_simple_parameter_with_DbType
  - Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMappingTest.Can_create_simple_nullable_parameter_with_DbType
  - Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMappingTest.Can_create_required_string_parameter
  - Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMappingTest.Can_create_string_parameter
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Sqlite.Tests.Storage.SqliteTypeMappingTest.CreateTestCommand
  commentId: M:Microsoft.EntityFrameworkCore.Sqlite.Tests.Storage.SqliteTypeMappingTest.CreateTestCommand
  id: CreateTestCommand
  parent: Microsoft.EntityFrameworkCore.Sqlite.Tests.Storage.SqliteTypeMappingTest
  langs:
  - csharp
  - vb
  name: CreateTestCommand()
  nameWithType: SqliteTypeMappingTest.CreateTestCommand()
  fullName: Microsoft.EntityFrameworkCore.Sqlite.Tests.Storage.SqliteTypeMappingTest.CreateTestCommand()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Sqlite.Tests/Storage/SqliteTypeMappingTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateTestCommand
    path: test/Microsoft.EntityFrameworkCore.Sqlite.Tests/Storage/SqliteTypeMappingTest.cs
    startLine: 16
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite.Tests
  namespace: Microsoft.EntityFrameworkCore.Sqlite.Tests.Storage
  syntax:
    content: protected override DbCommand CreateTestCommand()
    content.vb: Protected Overrides Function CreateTestCommand As DbCommand
    return:
      type: System.Data.Common.DbCommand
  overridden: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMappingTest.CreateTestCommand
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Sqlite.Tests.Storage.SqliteTypeMappingTest.DefaultParameterType
  commentId: P:Microsoft.EntityFrameworkCore.Sqlite.Tests.Storage.SqliteTypeMappingTest.DefaultParameterType
  id: DefaultParameterType
  parent: Microsoft.EntityFrameworkCore.Sqlite.Tests.Storage.SqliteTypeMappingTest
  langs:
  - csharp
  - vb
  name: DefaultParameterType
  nameWithType: SqliteTypeMappingTest.DefaultParameterType
  fullName: Microsoft.EntityFrameworkCore.Sqlite.Tests.Storage.SqliteTypeMappingTest.DefaultParameterType
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Sqlite.Tests/Storage/SqliteTypeMappingTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: DefaultParameterType
    path: test/Microsoft.EntityFrameworkCore.Sqlite.Tests/Storage/SqliteTypeMappingTest.cs
    startLine: 19
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite.Tests
  namespace: Microsoft.EntityFrameworkCore.Sqlite.Tests.Storage
  syntax:
    content: protected override DbType DefaultParameterType { get; }
    content.vb: Protected Overrides ReadOnly Property DefaultParameterType As DbType
    parameters: []
    return:
      type: System.Data.DbType
  overridden: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMappingTest.DefaultParameterType
  modifiers.csharp:
  - protected
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Sqlite.Tests.Storage.SqliteTypeMappingTest.It_maps_strings_to_not_null_types(System.String,System.Type)
  commentId: M:Microsoft.EntityFrameworkCore.Sqlite.Tests.Storage.SqliteTypeMappingTest.It_maps_strings_to_not_null_types(System.String,System.Type)
  id: It_maps_strings_to_not_null_types(System.String,System.Type)
  parent: Microsoft.EntityFrameworkCore.Sqlite.Tests.Storage.SqliteTypeMappingTest
  langs:
  - csharp
  - vb
  name: It_maps_strings_to_not_null_types(String, Type)
  nameWithType: SqliteTypeMappingTest.It_maps_strings_to_not_null_types(String, Type)
  fullName: Microsoft.EntityFrameworkCore.Sqlite.Tests.Storage.SqliteTypeMappingTest.It_maps_strings_to_not_null_types(System.String, System.Type)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Sqlite.Tests/Storage/SqliteTypeMappingTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: It_maps_strings_to_not_null_types
    path: test/Microsoft.EntityFrameworkCore.Sqlite.Tests/Storage/SqliteTypeMappingTest.cs
    startLine: 22
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite.Tests
  namespace: Microsoft.EntityFrameworkCore.Sqlite.Tests.Storage
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{"TEXT", typeof (string)})]

      [InlineData(new object[]{"Integer", typeof (long)})]

      [InlineData(new object[]{"Blob", typeof (byte[])})]

      [InlineData(new object[]{"numeric", typeof (string)})]

      [InlineData(new object[]{"real", typeof (double)})]

      [InlineData(new object[]{"doub", typeof (double)})]

      [InlineData(new object[]{"int", typeof (long)})]

      [InlineData(new object[]{"SMALLINT", typeof (long)})]

      [InlineData(new object[]{"UNSIGNED BIG INT", typeof (long)})]

      [InlineData(new object[]{"VARCHAR(255)", typeof (string)})]

      [InlineData(new object[]{"nchar(55)", typeof (string)})]

      [InlineData(new object[]{"datetime", typeof (string)})]

      [InlineData(new object[]{"decimal(10,4)", typeof (string)})]

      [InlineData(new object[]{"boolean", typeof (string)})]

      [InlineData(new object[]{"unknown_type", typeof (string)})]

      [InlineData(new object[]{"", typeof (string)})]

      public void It_maps_strings_to_not_null_types(string typeName, Type clrType)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {"TEXT", GetType(String)})>

      <InlineData(New Object() {"Integer", GetType(Long)})>

      <InlineData(New Object() {"Blob", GetType(Byte())})>

      <InlineData(New Object() {"numeric", GetType(String)})>

      <InlineData(New Object() {"real", GetType(Double)})>

      <InlineData(New Object() {"doub", GetType(Double)})>

      <InlineData(New Object() {"int", GetType(Long)})>

      <InlineData(New Object() {"SMALLINT", GetType(Long)})>

      <InlineData(New Object() {"UNSIGNED BIG INT", GetType(Long)})>

      <InlineData(New Object() {"VARCHAR(255)", GetType(String)})>

      <InlineData(New Object() {"nchar(55)", GetType(String)})>

      <InlineData(New Object() {"datetime", GetType(String)})>

      <InlineData(New Object() {"decimal(10,4)", GetType(String)})>

      <InlineData(New Object() {"boolean", GetType(String)})>

      <InlineData(New Object() {"unknown_type", GetType(String)})>

      <InlineData(New Object() {"", GetType(String)})>

      Public Sub It_maps_strings_to_not_null_types(typeName As String, clrType As Type)
    parameters:
    - id: typeName
      type: System.String
    - id: clrType
      type: System.Type
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.EntityFrameworkCore.Sqlite.Tests.Storage
  commentId: N:Microsoft.EntityFrameworkCore.Sqlite.Tests.Storage
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Sqlite.Tests.Storage
  nameWithType: Microsoft.EntityFrameworkCore.Sqlite.Tests.Storage
  fullName: Microsoft.EntityFrameworkCore.Sqlite.Tests.Storage
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMappingTest
  commentId: T:Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMappingTest
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.Storage
  isExternal: false
  name: RelationalTypeMappingTest
  nameWithType: RelationalTypeMappingTest
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMappingTest
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMappingTest.Can_create_simple_parameter
  commentId: M:Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMappingTest.Can_create_simple_parameter
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMappingTest
  isExternal: false
  name: Can_create_simple_parameter()
  nameWithType: RelationalTypeMappingTest.Can_create_simple_parameter()
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMappingTest.Can_create_simple_parameter()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMappingTest.Can_create_simple_parameter
    name: Can_create_simple_parameter
    nameWithType: RelationalTypeMappingTest.Can_create_simple_parameter
    fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMappingTest.Can_create_simple_parameter
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMappingTest.Can_create_simple_parameter
    name: Can_create_simple_parameter
    nameWithType: RelationalTypeMappingTest.Can_create_simple_parameter
    fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMappingTest.Can_create_simple_parameter
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMappingTest.Can_create_simple_nullable_parameter
  commentId: M:Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMappingTest.Can_create_simple_nullable_parameter
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMappingTest
  isExternal: false
  name: Can_create_simple_nullable_parameter()
  nameWithType: RelationalTypeMappingTest.Can_create_simple_nullable_parameter()
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMappingTest.Can_create_simple_nullable_parameter()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMappingTest.Can_create_simple_nullable_parameter
    name: Can_create_simple_nullable_parameter
    nameWithType: RelationalTypeMappingTest.Can_create_simple_nullable_parameter
    fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMappingTest.Can_create_simple_nullable_parameter
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMappingTest.Can_create_simple_nullable_parameter
    name: Can_create_simple_nullable_parameter
    nameWithType: RelationalTypeMappingTest.Can_create_simple_nullable_parameter
    fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMappingTest.Can_create_simple_nullable_parameter
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMappingTest.Can_create_simple_parameter_with_DbType
  commentId: M:Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMappingTest.Can_create_simple_parameter_with_DbType
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMappingTest
  isExternal: false
  name: Can_create_simple_parameter_with_DbType()
  nameWithType: RelationalTypeMappingTest.Can_create_simple_parameter_with_DbType()
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMappingTest.Can_create_simple_parameter_with_DbType()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMappingTest.Can_create_simple_parameter_with_DbType
    name: Can_create_simple_parameter_with_DbType
    nameWithType: RelationalTypeMappingTest.Can_create_simple_parameter_with_DbType
    fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMappingTest.Can_create_simple_parameter_with_DbType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMappingTest.Can_create_simple_parameter_with_DbType
    name: Can_create_simple_parameter_with_DbType
    nameWithType: RelationalTypeMappingTest.Can_create_simple_parameter_with_DbType
    fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMappingTest.Can_create_simple_parameter_with_DbType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMappingTest.Can_create_simple_nullable_parameter_with_DbType
  commentId: M:Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMappingTest.Can_create_simple_nullable_parameter_with_DbType
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMappingTest
  isExternal: false
  name: Can_create_simple_nullable_parameter_with_DbType()
  nameWithType: RelationalTypeMappingTest.Can_create_simple_nullable_parameter_with_DbType()
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMappingTest.Can_create_simple_nullable_parameter_with_DbType()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMappingTest.Can_create_simple_nullable_parameter_with_DbType
    name: Can_create_simple_nullable_parameter_with_DbType
    nameWithType: RelationalTypeMappingTest.Can_create_simple_nullable_parameter_with_DbType
    fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMappingTest.Can_create_simple_nullable_parameter_with_DbType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMappingTest.Can_create_simple_nullable_parameter_with_DbType
    name: Can_create_simple_nullable_parameter_with_DbType
    nameWithType: RelationalTypeMappingTest.Can_create_simple_nullable_parameter_with_DbType
    fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMappingTest.Can_create_simple_nullable_parameter_with_DbType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMappingTest.Can_create_required_string_parameter
  commentId: M:Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMappingTest.Can_create_required_string_parameter
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMappingTest
  isExternal: false
  name: Can_create_required_string_parameter()
  nameWithType: RelationalTypeMappingTest.Can_create_required_string_parameter()
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMappingTest.Can_create_required_string_parameter()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMappingTest.Can_create_required_string_parameter
    name: Can_create_required_string_parameter
    nameWithType: RelationalTypeMappingTest.Can_create_required_string_parameter
    fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMappingTest.Can_create_required_string_parameter
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMappingTest.Can_create_required_string_parameter
    name: Can_create_required_string_parameter
    nameWithType: RelationalTypeMappingTest.Can_create_required_string_parameter
    fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMappingTest.Can_create_required_string_parameter
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMappingTest.Can_create_string_parameter
  commentId: M:Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMappingTest.Can_create_string_parameter
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMappingTest
  isExternal: false
  name: Can_create_string_parameter()
  nameWithType: RelationalTypeMappingTest.Can_create_string_parameter()
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMappingTest.Can_create_string_parameter()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMappingTest.Can_create_string_parameter
    name: Can_create_string_parameter
    nameWithType: RelationalTypeMappingTest.Can_create_string_parameter
    fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMappingTest.Can_create_string_parameter
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMappingTest.Can_create_string_parameter
    name: Can_create_string_parameter
    nameWithType: RelationalTypeMappingTest.Can_create_string_parameter
    fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMappingTest.Can_create_string_parameter
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.Storage
  commentId: N:Microsoft.EntityFrameworkCore.Relational.Tests.Storage
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Relational.Tests.Storage
  nameWithType: Microsoft.EntityFrameworkCore.Relational.Tests.Storage
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Storage
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMappingTest.CreateTestCommand
  commentId: M:Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMappingTest.CreateTestCommand
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMappingTest
  isExternal: false
  name: CreateTestCommand()
  nameWithType: RelationalTypeMappingTest.CreateTestCommand()
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMappingTest.CreateTestCommand()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMappingTest.CreateTestCommand
    name: CreateTestCommand
    nameWithType: RelationalTypeMappingTest.CreateTestCommand
    fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMappingTest.CreateTestCommand
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMappingTest.CreateTestCommand
    name: CreateTestCommand
    nameWithType: RelationalTypeMappingTest.CreateTestCommand
    fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMappingTest.CreateTestCommand
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.Common.DbCommand
  commentId: T:System.Data.Common.DbCommand
  parent: System.Data.Common
  isExternal: true
  name: DbCommand
  nameWithType: DbCommand
  fullName: System.Data.Common.DbCommand
- uid: System.Data.Common
  commentId: N:System.Data.Common
  isExternal: false
  name: System.Data.Common
  nameWithType: System.Data.Common
  fullName: System.Data.Common
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMappingTest.DefaultParameterType
  commentId: P:Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMappingTest.DefaultParameterType
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMappingTest
  isExternal: false
  name: DefaultParameterType
  nameWithType: RelationalTypeMappingTest.DefaultParameterType
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMappingTest.DefaultParameterType
- uid: System.Data.DbType
  commentId: T:System.Data.DbType
  parent: System.Data
  isExternal: true
  name: DbType
  nameWithType: DbType
  fullName: System.Data.DbType
- uid: System.Data
  commentId: N:System.Data
  isExternal: false
  name: System.Data
  nameWithType: System.Data
  fullName: System.Data
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
