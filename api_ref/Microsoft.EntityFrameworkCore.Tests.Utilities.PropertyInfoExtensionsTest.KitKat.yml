### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Tests.Utilities.PropertyInfoExtensionsTest.KitKat
  commentId: T:Microsoft.EntityFrameworkCore.Tests.Utilities.PropertyInfoExtensionsTest.KitKat
  id: PropertyInfoExtensionsTest.KitKat
  parent: Microsoft.EntityFrameworkCore.Tests.Utilities
  children:
  - Microsoft.EntityFrameworkCore.Tests.Utilities.PropertyInfoExtensionsTest.KitKat.A
  - Microsoft.EntityFrameworkCore.Tests.Utilities.PropertyInfoExtensionsTest.KitKat.Contain
  - Microsoft.EntityFrameworkCore.Tests.Utilities.PropertyInfoExtensionsTest.KitKat.Just
  - Microsoft.EntityFrameworkCore.Tests.Utilities.PropertyInfoExtensionsTest.KitKat.Like
  - Microsoft.EntityFrameworkCore.Tests.Utilities.PropertyInfoExtensionsTest.KitKat.No
  - Microsoft.EntityFrameworkCore.Tests.Utilities.PropertyInfoExtensionsTest.KitKat.Nuts
  - Microsoft.EntityFrameworkCore.Tests.Utilities.PropertyInfoExtensionsTest.KitKat.TreeNuts
  - Microsoft.EntityFrameworkCore.Tests.Utilities.PropertyInfoExtensionsTest.KitKat.Twix
  - Microsoft.EntityFrameworkCore.Tests.Utilities.PropertyInfoExtensionsTest.KitKat.With
  - Microsoft.EntityFrameworkCore.Tests.Utilities.PropertyInfoExtensionsTest.KitKat.Yummy
  langs:
  - csharp
  - vb
  name: PropertyInfoExtensionsTest.KitKat
  nameWithType: PropertyInfoExtensionsTest.KitKat
  fullName: Microsoft.EntityFrameworkCore.Tests.Utilities.PropertyInfoExtensionsTest.KitKat
  type: Class
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/PropertyInfoExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: KitKat
    path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/PropertyInfoExtensionsTest.cs
    startLine: 31
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Utilities
  syntax:
    content: public class KitKat
    content.vb: Public Class KitKat
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Tests.Utilities.PropertyInfoExtensionsTest.KitKat.Yummy
  commentId: P:Microsoft.EntityFrameworkCore.Tests.Utilities.PropertyInfoExtensionsTest.KitKat.Yummy
  id: Yummy
  parent: Microsoft.EntityFrameworkCore.Tests.Utilities.PropertyInfoExtensionsTest.KitKat
  langs:
  - csharp
  - vb
  name: Yummy
  nameWithType: PropertyInfoExtensionsTest.KitKat.Yummy
  fullName: Microsoft.EntityFrameworkCore.Tests.Utilities.PropertyInfoExtensionsTest.KitKat.Yummy
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/PropertyInfoExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Yummy
    path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/PropertyInfoExtensionsTest.cs
    startLine: 33
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Utilities
  syntax:
    content: public static int Yummy { get; set; }
    content.vb: Public Shared Property Yummy As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Tests.Utilities.PropertyInfoExtensionsTest.KitKat.With
  commentId: P:Microsoft.EntityFrameworkCore.Tests.Utilities.PropertyInfoExtensionsTest.KitKat.With
  id: With
  parent: Microsoft.EntityFrameworkCore.Tests.Utilities.PropertyInfoExtensionsTest.KitKat
  langs:
  - csharp
  - vb
  name: With
  nameWithType: PropertyInfoExtensionsTest.KitKat.With
  fullName: Microsoft.EntityFrameworkCore.Tests.Utilities.PropertyInfoExtensionsTest.KitKat.With
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/PropertyInfoExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: With
    path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/PropertyInfoExtensionsTest.cs
    startLine: 38
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Utilities
  syntax:
    content: protected static int With { get; }
    content.vb: Protected Shared ReadOnly Property With As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - protected
  - static
  - get
  modifiers.vb:
  - Protected
  - Shared
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Tests.Utilities.PropertyInfoExtensionsTest.KitKat.No
  commentId: P:Microsoft.EntityFrameworkCore.Tests.Utilities.PropertyInfoExtensionsTest.KitKat.No
  id: No
  parent: Microsoft.EntityFrameworkCore.Tests.Utilities.PropertyInfoExtensionsTest.KitKat
  langs:
  - csharp
  - vb
  name: No
  nameWithType: PropertyInfoExtensionsTest.KitKat.No
  fullName: Microsoft.EntityFrameworkCore.Tests.Utilities.PropertyInfoExtensionsTest.KitKat.No
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/PropertyInfoExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: No
    path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/PropertyInfoExtensionsTest.cs
    startLine: 40
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Utilities
  syntax:
    content: public static int No { set; }
    content.vb: Public Shared WriteOnly Property No As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - static
  - set
  modifiers.vb:
  - Public
  - Shared
  - WriteOnly
- uid: Microsoft.EntityFrameworkCore.Tests.Utilities.PropertyInfoExtensionsTest.KitKat.Nuts
  commentId: P:Microsoft.EntityFrameworkCore.Tests.Utilities.PropertyInfoExtensionsTest.KitKat.Nuts
  id: Nuts
  parent: Microsoft.EntityFrameworkCore.Tests.Utilities.PropertyInfoExtensionsTest.KitKat
  langs:
  - csharp
  - vb
  name: Nuts
  nameWithType: PropertyInfoExtensionsTest.KitKat.Nuts
  fullName: Microsoft.EntityFrameworkCore.Tests.Utilities.PropertyInfoExtensionsTest.KitKat.Nuts
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/PropertyInfoExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Nuts
    path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/PropertyInfoExtensionsTest.cs
    startLine: 46
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Utilities
  syntax:
    content: public int Nuts { get; set; }
    content.vb: Public Property Nuts As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Utilities.PropertyInfoExtensionsTest.KitKat.Contain
  commentId: P:Microsoft.EntityFrameworkCore.Tests.Utilities.PropertyInfoExtensionsTest.KitKat.Contain
  id: Contain
  parent: Microsoft.EntityFrameworkCore.Tests.Utilities.PropertyInfoExtensionsTest.KitKat
  langs:
  - csharp
  - vb
  name: Contain
  nameWithType: PropertyInfoExtensionsTest.KitKat.Contain
  fullName: Microsoft.EntityFrameworkCore.Tests.Utilities.PropertyInfoExtensionsTest.KitKat.Contain
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/PropertyInfoExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Contain
    path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/PropertyInfoExtensionsTest.cs
    startLine: 49
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Utilities
  syntax:
    content: protected int Contain { get; }
    content.vb: Protected ReadOnly Property Contain As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Tests.Utilities.PropertyInfoExtensionsTest.KitKat.TreeNuts
  commentId: P:Microsoft.EntityFrameworkCore.Tests.Utilities.PropertyInfoExtensionsTest.KitKat.TreeNuts
  id: TreeNuts
  parent: Microsoft.EntityFrameworkCore.Tests.Utilities.PropertyInfoExtensionsTest.KitKat
  langs:
  - csharp
  - vb
  name: TreeNuts
  nameWithType: PropertyInfoExtensionsTest.KitKat.TreeNuts
  fullName: Microsoft.EntityFrameworkCore.Tests.Utilities.PropertyInfoExtensionsTest.KitKat.TreeNuts
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/PropertyInfoExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: TreeNuts
    path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/PropertyInfoExtensionsTest.cs
    startLine: 51
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Utilities
  syntax:
    content: public int TreeNuts { get; }
    content.vb: Public ReadOnly Property TreeNuts As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Tests.Utilities.PropertyInfoExtensionsTest.KitKat.Just
  commentId: P:Microsoft.EntityFrameworkCore.Tests.Utilities.PropertyInfoExtensionsTest.KitKat.Just
  id: Just
  parent: Microsoft.EntityFrameworkCore.Tests.Utilities.PropertyInfoExtensionsTest.KitKat
  langs:
  - csharp
  - vb
  name: Just
  nameWithType: PropertyInfoExtensionsTest.KitKat.Just
  fullName: Microsoft.EntityFrameworkCore.Tests.Utilities.PropertyInfoExtensionsTest.KitKat.Just
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/PropertyInfoExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Just
    path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/PropertyInfoExtensionsTest.cs
    startLine: 53
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Utilities
  syntax:
    content: public int Just { set; }
    content.vb: Public WriteOnly Property Just As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - set
  modifiers.vb:
  - Public
  - WriteOnly
- uid: Microsoft.EntityFrameworkCore.Tests.Utilities.PropertyInfoExtensionsTest.KitKat.Like
  commentId: P:Microsoft.EntityFrameworkCore.Tests.Utilities.PropertyInfoExtensionsTest.KitKat.Like
  id: Like
  parent: Microsoft.EntityFrameworkCore.Tests.Utilities.PropertyInfoExtensionsTest.KitKat
  langs:
  - csharp
  - vb
  name: Like
  nameWithType: PropertyInfoExtensionsTest.KitKat.Like
  fullName: Microsoft.EntityFrameworkCore.Tests.Utilities.PropertyInfoExtensionsTest.KitKat.Like
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/PropertyInfoExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Like
    path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/PropertyInfoExtensionsTest.cs
    startLine: 59
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Utilities
  syntax:
    content: public static int Like { set; }
    content.vb: Public Shared WriteOnly Property Like As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - static
  - set
  modifiers.vb:
  - Public
  - Shared
  - WriteOnly
- uid: Microsoft.EntityFrameworkCore.Tests.Utilities.PropertyInfoExtensionsTest.KitKat.A
  commentId: P:Microsoft.EntityFrameworkCore.Tests.Utilities.PropertyInfoExtensionsTest.KitKat.A
  id: A
  parent: Microsoft.EntityFrameworkCore.Tests.Utilities.PropertyInfoExtensionsTest.KitKat
  langs:
  - csharp
  - vb
  name: A
  nameWithType: PropertyInfoExtensionsTest.KitKat.A
  fullName: Microsoft.EntityFrameworkCore.Tests.Utilities.PropertyInfoExtensionsTest.KitKat.A
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/PropertyInfoExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: A
    path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/PropertyInfoExtensionsTest.cs
    startLine: 60
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Utilities
  syntax:
    content: public int A { get; }
    content.vb: Public ReadOnly Property A As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Tests.Utilities.PropertyInfoExtensionsTest.KitKat.Twix
  commentId: P:Microsoft.EntityFrameworkCore.Tests.Utilities.PropertyInfoExtensionsTest.KitKat.Twix
  id: Twix
  parent: Microsoft.EntityFrameworkCore.Tests.Utilities.PropertyInfoExtensionsTest.KitKat
  langs:
  - csharp
  - vb
  name: Twix
  nameWithType: PropertyInfoExtensionsTest.KitKat.Twix
  fullName: Microsoft.EntityFrameworkCore.Tests.Utilities.PropertyInfoExtensionsTest.KitKat.Twix
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/PropertyInfoExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Twix
    path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/PropertyInfoExtensionsTest.cs
    startLine: 61
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Utilities
  syntax:
    content: public static int Twix { protected get; set; }
    content.vb: Public Shared Property Twix As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - static
  - protected get
  - set
  modifiers.vb:
  - Public
  - Shared
  - Protected Get
  - Set
references:
- uid: Microsoft.EntityFrameworkCore.Tests.Utilities
  commentId: N:Microsoft.EntityFrameworkCore.Tests.Utilities
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Tests.Utilities
  nameWithType: Microsoft.EntityFrameworkCore.Tests.Utilities
  fullName: Microsoft.EntityFrameworkCore.Tests.Utilities
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
