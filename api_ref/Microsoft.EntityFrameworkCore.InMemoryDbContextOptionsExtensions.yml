### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.InMemoryDbContextOptionsExtensions
  commentId: T:Microsoft.EntityFrameworkCore.InMemoryDbContextOptionsExtensions
  id: InMemoryDbContextOptionsExtensions
  parent: Microsoft.EntityFrameworkCore
  children:
  - Microsoft.EntityFrameworkCore.InMemoryDbContextOptionsExtensions.UseInMemoryDatabase(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder,System.Action{Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder})
  - Microsoft.EntityFrameworkCore.InMemoryDbContextOptionsExtensions.UseInMemoryDatabase(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder,System.String,System.Action{Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder})
  - Microsoft.EntityFrameworkCore.InMemoryDbContextOptionsExtensions.UseInMemoryDatabase``1(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder{``0},System.Action{Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder})
  - Microsoft.EntityFrameworkCore.InMemoryDbContextOptionsExtensions.UseInMemoryDatabase``1(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder{``0},System.String,System.Action{Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder})
  langs:
  - csharp
  - vb
  name: InMemoryDbContextOptionsExtensions
  nameWithType: InMemoryDbContextOptionsExtensions
  fullName: Microsoft.EntityFrameworkCore.InMemoryDbContextOptionsExtensions
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.InMemory/Extensions/InMemoryDbContextOptionsExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: InMemoryDbContextOptionsExtensions
    path: src/Microsoft.EntityFrameworkCore.InMemory/Extensions/InMemoryDbContextOptionsExtensions.cs
    startLine: 15
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory
  namespace: Microsoft.EntityFrameworkCore
  summary: "\n    In-memory specific extension methods for <xref href=\"Microsoft.EntityFrameworkCore.DbContextOptionsBuilder\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static class InMemoryDbContextOptionsExtensions
    content.vb: Public Module InMemoryDbContextOptionsExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.EntityFrameworkCore.InMemoryDbContextOptionsExtensions.UseInMemoryDatabase``1(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder{``0},System.String,System.Action{Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder})
  commentId: M:Microsoft.EntityFrameworkCore.InMemoryDbContextOptionsExtensions.UseInMemoryDatabase``1(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder{``0},System.String,System.Action{Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder})
  id: UseInMemoryDatabase``1(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder{``0},System.String,System.Action{Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder})
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.InMemoryDbContextOptionsExtensions
  langs:
  - csharp
  - vb
  name: UseInMemoryDatabase<TContext>(DbContextOptionsBuilder<TContext>, String, Action<InMemoryDbContextOptionsBuilder>)
  nameWithType: InMemoryDbContextOptionsExtensions.UseInMemoryDatabase<TContext>(DbContextOptionsBuilder<TContext>, String, Action<InMemoryDbContextOptionsBuilder>)
  fullName: Microsoft.EntityFrameworkCore.InMemoryDbContextOptionsExtensions.UseInMemoryDatabase<TContext>(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder<TContext>, System.String, System.Action<Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.InMemory/Extensions/InMemoryDbContextOptionsExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: UseInMemoryDatabase
    path: src/Microsoft.EntityFrameworkCore.InMemory/Extensions/InMemoryDbContextOptionsExtensions.cs
    startLine: 28
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory
  namespace: Microsoft.EntityFrameworkCore
  summary: "\n    Configures the context to connect to an in-memory database.\n"
  example: []
  syntax:
    content: 'public static DbContextOptionsBuilder<TContext> UseInMemoryDatabase<TContext>(this DbContextOptionsBuilder<TContext> optionsBuilder, string databaseName, Action<InMemoryDbContextOptionsBuilder> inMemoryOptionsAction = null)where TContext : DbContext'
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UseInMemoryDatabase(Of TContext As DbContext)(optionsBuilder As DbContextOptionsBuilder(Of TContext), databaseName As String, inMemoryOptionsAction As Action(Of InMemoryDbContextOptionsBuilder) = Nothing) As DbContextOptionsBuilder(Of TContext)
    parameters:
    - id: optionsBuilder
      type: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder{{TContext}}
      description: 'The builder being used to configure the context. '
    - id: databaseName
      type: System.String
      description: "\n    The name of the in-memory database. This allows the scope of the in-memory database to be controlled\n    independently of the context.\n"
    - id: inMemoryOptionsAction
      type: System.Action{Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder}
      description: An optional action to allow additional in-memory specific configuration.
    typeParameters:
    - id: TContext
      description: 'The type of context being configured. '
    return:
      type: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder{{TContext}}
      description: 'The options builder so that further configuration can be chained. '
  nameWithType.vb: InMemoryDbContextOptionsExtensions.UseInMemoryDatabase(Of TContext)(DbContextOptionsBuilder(Of TContext), String, Action(Of InMemoryDbContextOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.EntityFrameworkCore.InMemoryDbContextOptionsExtensions.UseInMemoryDatabase(Of TContext)(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder(Of TContext), System.String, System.Action(Of Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder))
  name.vb: UseInMemoryDatabase(Of TContext)(DbContextOptionsBuilder(Of TContext), String, Action(Of InMemoryDbContextOptionsBuilder))
- uid: Microsoft.EntityFrameworkCore.InMemoryDbContextOptionsExtensions.UseInMemoryDatabase(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder,System.String,System.Action{Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder})
  commentId: M:Microsoft.EntityFrameworkCore.InMemoryDbContextOptionsExtensions.UseInMemoryDatabase(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder,System.String,System.Action{Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder})
  id: UseInMemoryDatabase(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder,System.String,System.Action{Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder})
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.InMemoryDbContextOptionsExtensions
  langs:
  - csharp
  - vb
  name: UseInMemoryDatabase(DbContextOptionsBuilder, String, Action<InMemoryDbContextOptionsBuilder>)
  nameWithType: InMemoryDbContextOptionsExtensions.UseInMemoryDatabase(DbContextOptionsBuilder, String, Action<InMemoryDbContextOptionsBuilder>)
  fullName: Microsoft.EntityFrameworkCore.InMemoryDbContextOptionsExtensions.UseInMemoryDatabase(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder, System.String, System.Action<Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.InMemory/Extensions/InMemoryDbContextOptionsExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: UseInMemoryDatabase
    path: src/Microsoft.EntityFrameworkCore.InMemory/Extensions/InMemoryDbContextOptionsExtensions.cs
    startLine: 46
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory
  namespace: Microsoft.EntityFrameworkCore
  summary: "\n    Configures the context to connect to an in-memory database.\n"
  example: []
  syntax:
    content: public static DbContextOptionsBuilder UseInMemoryDatabase(this DbContextOptionsBuilder optionsBuilder, string databaseName, Action<InMemoryDbContextOptionsBuilder> inMemoryOptionsAction = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UseInMemoryDatabase(optionsBuilder As DbContextOptionsBuilder, databaseName As String, inMemoryOptionsAction As Action(Of InMemoryDbContextOptionsBuilder) = Nothing) As DbContextOptionsBuilder
    parameters:
    - id: optionsBuilder
      type: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder
      description: 'The builder being used to configure the context. '
    - id: databaseName
      type: System.String
      description: "\n    The name of the in-memory database. This allows the scope of the in-memory database to be controlled\n    independently of the context.\n"
    - id: inMemoryOptionsAction
      type: System.Action{Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder}
      description: An optional action to allow additional in-memory specific configuration.
    return:
      type: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder
      description: 'The options builder so that further configuration can be chained. '
  nameWithType.vb: InMemoryDbContextOptionsExtensions.UseInMemoryDatabase(DbContextOptionsBuilder, String, Action(Of InMemoryDbContextOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.EntityFrameworkCore.InMemoryDbContextOptionsExtensions.UseInMemoryDatabase(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder, System.String, System.Action(Of Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder))
  name.vb: UseInMemoryDatabase(DbContextOptionsBuilder, String, Action(Of InMemoryDbContextOptionsBuilder))
- uid: Microsoft.EntityFrameworkCore.InMemoryDbContextOptionsExtensions.UseInMemoryDatabase``1(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder{``0},System.Action{Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder})
  commentId: M:Microsoft.EntityFrameworkCore.InMemoryDbContextOptionsExtensions.UseInMemoryDatabase``1(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder{``0},System.Action{Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder})
  id: UseInMemoryDatabase``1(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder{``0},System.Action{Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder})
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.InMemoryDbContextOptionsExtensions
  langs:
  - csharp
  - vb
  name: UseInMemoryDatabase<TContext>(DbContextOptionsBuilder<TContext>, Action<InMemoryDbContextOptionsBuilder>)
  nameWithType: InMemoryDbContextOptionsExtensions.UseInMemoryDatabase<TContext>(DbContextOptionsBuilder<TContext>, Action<InMemoryDbContextOptionsBuilder>)
  fullName: Microsoft.EntityFrameworkCore.InMemoryDbContextOptionsExtensions.UseInMemoryDatabase<TContext>(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder<TContext>, System.Action<Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.InMemory/Extensions/InMemoryDbContextOptionsExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: UseInMemoryDatabase
    path: src/Microsoft.EntityFrameworkCore.InMemory/Extensions/InMemoryDbContextOptionsExtensions.cs
    startLine: 81
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory
  namespace: Microsoft.EntityFrameworkCore
  summary: "\n    Configures the context to connect to an in-memory database. By default, the same in-memory database instance\n    will be shared by all instances of a given context type. To change this, use the overload that takes a database name. \n"
  example: []
  syntax:
    content: 'public static DbContextOptionsBuilder<TContext> UseInMemoryDatabase<TContext>(this DbContextOptionsBuilder<TContext> optionsBuilder, Action<InMemoryDbContextOptionsBuilder> inMemoryOptionsAction = null)where TContext : DbContext'
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UseInMemoryDatabase(Of TContext As DbContext)(optionsBuilder As DbContextOptionsBuilder(Of TContext), inMemoryOptionsAction As Action(Of InMemoryDbContextOptionsBuilder) = Nothing) As DbContextOptionsBuilder(Of TContext)
    parameters:
    - id: optionsBuilder
      type: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder{{TContext}}
      description: 'The builder being used to configure the context. '
    - id: inMemoryOptionsAction
      type: System.Action{Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder}
      description: An optional action to allow additional in-memory specific configuration.
    typeParameters:
    - id: TContext
      description: 'The type of context being configured. '
    return:
      type: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder{{TContext}}
      description: 'The options builder so that further configuration can be chained. '
  nameWithType.vb: InMemoryDbContextOptionsExtensions.UseInMemoryDatabase(Of TContext)(DbContextOptionsBuilder(Of TContext), Action(Of InMemoryDbContextOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.EntityFrameworkCore.InMemoryDbContextOptionsExtensions.UseInMemoryDatabase(Of TContext)(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder(Of TContext), System.Action(Of Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder))
  name.vb: UseInMemoryDatabase(Of TContext)(DbContextOptionsBuilder(Of TContext), Action(Of InMemoryDbContextOptionsBuilder))
- uid: Microsoft.EntityFrameworkCore.InMemoryDbContextOptionsExtensions.UseInMemoryDatabase(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder,System.Action{Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder})
  commentId: M:Microsoft.EntityFrameworkCore.InMemoryDbContextOptionsExtensions.UseInMemoryDatabase(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder,System.Action{Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder})
  id: UseInMemoryDatabase(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder,System.Action{Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder})
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.InMemoryDbContextOptionsExtensions
  langs:
  - csharp
  - vb
  name: UseInMemoryDatabase(DbContextOptionsBuilder, Action<InMemoryDbContextOptionsBuilder>)
  nameWithType: InMemoryDbContextOptionsExtensions.UseInMemoryDatabase(DbContextOptionsBuilder, Action<InMemoryDbContextOptionsBuilder>)
  fullName: Microsoft.EntityFrameworkCore.InMemoryDbContextOptionsExtensions.UseInMemoryDatabase(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder, System.Action<Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.InMemory/Extensions/InMemoryDbContextOptionsExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: UseInMemoryDatabase
    path: src/Microsoft.EntityFrameworkCore.InMemory/Extensions/InMemoryDbContextOptionsExtensions.cs
    startLine: 95
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory
  namespace: Microsoft.EntityFrameworkCore
  summary: "\n    Configures the context to connect to an in-memory database. By default, the same in-memory database instance\n    will be shared by all instances of a given context type. To change this, use the overload that takes a database name. \n"
  example: []
  syntax:
    content: public static DbContextOptionsBuilder UseInMemoryDatabase(this DbContextOptionsBuilder optionsBuilder, Action<InMemoryDbContextOptionsBuilder> inMemoryOptionsAction = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UseInMemoryDatabase(optionsBuilder As DbContextOptionsBuilder, inMemoryOptionsAction As Action(Of InMemoryDbContextOptionsBuilder) = Nothing) As DbContextOptionsBuilder
    parameters:
    - id: optionsBuilder
      type: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder
      description: 'The builder being used to configure the context. '
    - id: inMemoryOptionsAction
      type: System.Action{Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder}
      description: An optional action to allow additional in-memory specific configuration.
    return:
      type: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder
      description: 'The options builder so that further configuration can be chained. '
  nameWithType.vb: InMemoryDbContextOptionsExtensions.UseInMemoryDatabase(DbContextOptionsBuilder, Action(Of InMemoryDbContextOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.EntityFrameworkCore.InMemoryDbContextOptionsExtensions.UseInMemoryDatabase(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder, System.Action(Of Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder))
  name.vb: UseInMemoryDatabase(DbContextOptionsBuilder, Action(Of InMemoryDbContextOptionsBuilder))
references:
- uid: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder
  commentId: T:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder
  parent: Microsoft.EntityFrameworkCore
  isExternal: false
  name: DbContextOptionsBuilder
  nameWithType: DbContextOptionsBuilder
  fullName: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder
- uid: Microsoft.EntityFrameworkCore
  commentId: N:Microsoft.EntityFrameworkCore
  isExternal: false
  name: Microsoft.EntityFrameworkCore
  nameWithType: Microsoft.EntityFrameworkCore
  fullName: Microsoft.EntityFrameworkCore
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder{{TContext}}
  commentId: T:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder{``0}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder`1
  name: DbContextOptionsBuilder<TContext>
  nameWithType: DbContextOptionsBuilder<TContext>
  fullName: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder<TContext>
  nameWithType.vb: DbContextOptionsBuilder(Of TContext)
  fullname.vb: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder(Of TContext)
  name.vb: DbContextOptionsBuilder(Of TContext)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder`1
    name: DbContextOptionsBuilder
    nameWithType: DbContextOptionsBuilder
    fullName: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: TContext
    nameWithType: TContext
    fullName: TContext
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder`1
    name: DbContextOptionsBuilder
    nameWithType: DbContextOptionsBuilder
    fullName: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TContext
    nameWithType: TContext
    fullName: TContext
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Action{Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder}
  commentId: T:System.Action{Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder}
  parent: System
  definition: System.Action`1
  name: Action<InMemoryDbContextOptionsBuilder>
  nameWithType: Action<InMemoryDbContextOptionsBuilder>
  fullName: System.Action<Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder>
  nameWithType.vb: Action(Of InMemoryDbContextOptionsBuilder)
  fullname.vb: System.Action(Of Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder)
  name.vb: Action(Of InMemoryDbContextOptionsBuilder)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder
    name: InMemoryDbContextOptionsBuilder
    nameWithType: InMemoryDbContextOptionsBuilder
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder
    name: InMemoryDbContextOptionsBuilder
    nameWithType: InMemoryDbContextOptionsBuilder
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder`1
  commentId: T:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder`1
  parent: Microsoft.EntityFrameworkCore
  isExternal: false
  name: DbContextOptionsBuilder<TContext>
  nameWithType: DbContextOptionsBuilder<TContext>
  fullName: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder<TContext>
  nameWithType.vb: DbContextOptionsBuilder(Of TContext)
  fullname.vb: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder(Of TContext)
  name.vb: DbContextOptionsBuilder(Of TContext)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder`1
    name: DbContextOptionsBuilder
    nameWithType: DbContextOptionsBuilder
    fullName: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: TContext
    nameWithType: TContext
    fullName: TContext
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder`1
    name: DbContextOptionsBuilder
    nameWithType: DbContextOptionsBuilder
    fullName: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TContext
    nameWithType: TContext
    fullName: TContext
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullname.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
