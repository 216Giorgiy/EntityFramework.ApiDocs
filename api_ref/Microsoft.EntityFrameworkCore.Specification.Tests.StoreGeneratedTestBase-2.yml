### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2
  id: StoreGeneratedTestBase`2
  parent: Microsoft.EntityFrameworkCore.Specification.Tests
  children:
  - Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.#ctor(`1)
  - Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Always_computed_property_on_Added_entity_cannot_have_value_set_explicitly
  - Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Always_computed_property_on_Added_entity_with_default_value_gets_value_from_store
  - Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Always_computed_property_on_Added_entity_with_read_only_before_save_throws_if_explicit_values_set
  - Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Always_computed_property_on_Added_entity_with_temporary_value_gets_value_from_store
  - Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Always_computed_property_on_Modified_entity_is_not_included_in_update_even_when_modified
  - Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Always_computed_property_on_Modified_entity_is_read_from_store_when_not_modified
  - Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Always_computed_property_on_Modified_entity_with_read_only_after_save_throws_if_value_is_in_modified_state
  - Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Always_identity_property_on_Added_entity_gets_store_value_even_when_set_explicitly
  - Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Always_identity_property_on_Added_entity_with_default_value_gets_value_from_store
  - Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Always_identity_property_on_Added_entity_with_read_only_before_save_throws_if_explicit_values_set
  - Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Always_identity_property_on_Added_entity_with_temporary_value_gets_value_from_store
  - Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Always_identity_property_on_Modified_entity_is_not_included_in_the_update_when_not_modified
  - Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Always_identity_property_on_Modified_entity_is_not_included_in_update_when_modified
  - Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Always_identity_property_on_Modified_entity_with_read_only_after_save_throws_if_value_is_in_modified_state
  - Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Computed_property_on_Added_entity_can_have_value_set_explicitly
  - Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Computed_property_on_Added_entity_with_default_value_gets_value_from_store
  - Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Computed_property_on_Added_entity_with_read_only_before_save_throws_if_explicit_values_set
  - Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Computed_property_on_Added_entity_with_temporary_value_gets_value_from_store
  - Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Computed_property_on_Modified_entity_is_included_in_update_when_modified
  - Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Computed_property_on_Modified_entity_is_read_from_store_when_not_modified
  - Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Computed_property_on_Modified_entity_with_read_only_after_save_throws_if_value_is_in_modified_state
  - Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.CreateContext
  - Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Dispose
  - Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.ExecuteWithStrategyInTransaction(System.Action{Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase{`0,`1}.StoreGeneratedContext},System.Action{Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase{`0,`1}.StoreGeneratedContext},System.Action{Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase{`0,`1}.StoreGeneratedContext})
  - Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Fixture
  - Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Identity_key_with_read_only_before_save_throws_if_explicit_values_set
  - Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Identity_property_on_Added_entity_can_have_value_set_explicitly
  - Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Identity_property_on_Added_entity_with_default_value_gets_value_from_store
  - Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Identity_property_on_Added_entity_with_read_only_before_save_throws_if_explicit_values_set
  - Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Identity_property_on_Added_entity_with_temporary_value_gets_value_from_store
  - Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Identity_property_on_Modified_entity_is_included_in_update_when_modified
  - Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Identity_property_on_Modified_entity_is_not_included_in_update_when_not_modified
  - Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Identity_property_on_Modified_entity_with_read_only_after_save_throws_if_value_is_in_modified_state
  - Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.TestStore
  - Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.UseTransaction(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  langs:
  - csharp
  - vb
  name: StoreGeneratedTestBase<TTestStore, TFixture>
  nameWithType: StoreGeneratedTestBase<TTestStore, TFixture>
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase<TTestStore, TFixture>
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: StoreGeneratedTestBase
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
    startLine: 12
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: 'public abstract class StoreGeneratedTestBase<TTestStore, TFixture> : IClassFixture<TFixture>, IDisposable where TTestStore : TestStore where TFixture : StoreGeneratedTestBase<TTestStore, TFixture>.StoreGeneratedFixtureBase, new ()'
    content.vb: >-
      Public MustInherit Class StoreGeneratedTestBase(Of TTestStore As TestStore, TFixture As {StoreGeneratedTestBase(Of TTestStore, TFixture).StoreGeneratedFixtureBase, New})
          Implements IClassFixture(Of TFixture), IDisposable
    typeParameters:
    - id: TTestStore
    - id: TFixture
  inheritance:
  - System.Object
  implements:
  - Xunit.IClassFixture{{TFixture}}
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: StoreGeneratedTestBase(Of TTestStore, TFixture)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase(Of TTestStore, TFixture)
  name.vb: StoreGeneratedTestBase(Of TTestStore, TFixture)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.#ctor(`1)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.#ctor(`1)
  id: '#ctor(`1)'
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2
  langs:
  - csharp
  - vb
  name: StoreGeneratedTestBase(TFixture)
  nameWithType: StoreGeneratedTestBase<TTestStore, TFixture>.StoreGeneratedTestBase(TFixture)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase<TTestStore, TFixture>.StoreGeneratedTestBase(TFixture)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
    startLine: 16
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: protected StoreGeneratedTestBase(TFixture fixture)
    content.vb: Protected Sub New(fixture As TFixture)
    parameters:
    - id: fixture
      type: '{TFixture}'
  nameWithType.vb: StoreGeneratedTestBase(Of TTestStore, TFixture).StoreGeneratedTestBase(TFixture)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase(Of TTestStore, TFixture).StoreGeneratedTestBase(TFixture)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Identity_key_with_read_only_before_save_throws_if_explicit_values_set
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Identity_key_with_read_only_before_save_throws_if_explicit_values_set
  id: Identity_key_with_read_only_before_save_throws_if_explicit_values_set
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2
  langs:
  - csharp
  - vb
  name: Identity_key_with_read_only_before_save_throws_if_explicit_values_set()
  nameWithType: StoreGeneratedTestBase<TTestStore, TFixture>.Identity_key_with_read_only_before_save_throws_if_explicit_values_set()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase<TTestStore, TFixture>.Identity_key_with_read_only_before_save_throws_if_explicit_values_set()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Identity_key_with_read_only_before_save_throws_if_explicit_values_set
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
    startLine: 22
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Identity_key_with_read_only_before_save_throws_if_explicit_values_set()
    content.vb: >-
      <Fact>

      Public Overridable Sub Identity_key_with_read_only_before_save_throws_if_explicit_values_set
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: StoreGeneratedTestBase(Of TTestStore, TFixture).Identity_key_with_read_only_before_save_throws_if_explicit_values_set()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase(Of TTestStore, TFixture).Identity_key_with_read_only_before_save_throws_if_explicit_values_set()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Identity_property_on_Added_entity_with_temporary_value_gets_value_from_store
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Identity_property_on_Added_entity_with_temporary_value_gets_value_from_store
  id: Identity_property_on_Added_entity_with_temporary_value_gets_value_from_store
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2
  langs:
  - csharp
  - vb
  name: Identity_property_on_Added_entity_with_temporary_value_gets_value_from_store()
  nameWithType: StoreGeneratedTestBase<TTestStore, TFixture>.Identity_property_on_Added_entity_with_temporary_value_gets_value_from_store()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase<TTestStore, TFixture>.Identity_property_on_Added_entity_with_temporary_value_gets_value_from_store()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Identity_property_on_Added_entity_with_temporary_value_gets_value_from_store
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
    startLine: 35
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Identity_property_on_Added_entity_with_temporary_value_gets_value_from_store()
    content.vb: >-
      <Fact>

      Public Overridable Sub Identity_property_on_Added_entity_with_temporary_value_gets_value_from_store
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: StoreGeneratedTestBase(Of TTestStore, TFixture).Identity_property_on_Added_entity_with_temporary_value_gets_value_from_store()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase(Of TTestStore, TFixture).Identity_property_on_Added_entity_with_temporary_value_gets_value_from_store()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Identity_property_on_Added_entity_with_default_value_gets_value_from_store
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Identity_property_on_Added_entity_with_default_value_gets_value_from_store
  id: Identity_property_on_Added_entity_with_default_value_gets_value_from_store
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2
  langs:
  - csharp
  - vb
  name: Identity_property_on_Added_entity_with_default_value_gets_value_from_store()
  nameWithType: StoreGeneratedTestBase<TTestStore, TFixture>.Identity_property_on_Added_entity_with_default_value_gets_value_from_store()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase<TTestStore, TFixture>.Identity_property_on_Added_entity_with_default_value_gets_value_from_store()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Identity_property_on_Added_entity_with_default_value_gets_value_from_store
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
    startLine: 54
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Identity_property_on_Added_entity_with_default_value_gets_value_from_store()
    content.vb: >-
      <Fact>

      Public Overridable Sub Identity_property_on_Added_entity_with_default_value_gets_value_from_store
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: StoreGeneratedTestBase(Of TTestStore, TFixture).Identity_property_on_Added_entity_with_default_value_gets_value_from_store()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase(Of TTestStore, TFixture).Identity_property_on_Added_entity_with_default_value_gets_value_from_store()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Identity_property_on_Added_entity_with_read_only_before_save_throws_if_explicit_values_set
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Identity_property_on_Added_entity_with_read_only_before_save_throws_if_explicit_values_set
  id: Identity_property_on_Added_entity_with_read_only_before_save_throws_if_explicit_values_set
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2
  langs:
  - csharp
  - vb
  name: Identity_property_on_Added_entity_with_read_only_before_save_throws_if_explicit_values_set()
  nameWithType: StoreGeneratedTestBase<TTestStore, TFixture>.Identity_property_on_Added_entity_with_read_only_before_save_throws_if_explicit_values_set()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase<TTestStore, TFixture>.Identity_property_on_Added_entity_with_read_only_before_save_throws_if_explicit_values_set()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Identity_property_on_Added_entity_with_read_only_before_save_throws_if_explicit_values_set
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
    startLine: 72
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Identity_property_on_Added_entity_with_read_only_before_save_throws_if_explicit_values_set()
    content.vb: >-
      <Fact>

      Public Overridable Sub Identity_property_on_Added_entity_with_read_only_before_save_throws_if_explicit_values_set
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: StoreGeneratedTestBase(Of TTestStore, TFixture).Identity_property_on_Added_entity_with_read_only_before_save_throws_if_explicit_values_set()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase(Of TTestStore, TFixture).Identity_property_on_Added_entity_with_read_only_before_save_throws_if_explicit_values_set()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Identity_property_on_Added_entity_can_have_value_set_explicitly
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Identity_property_on_Added_entity_can_have_value_set_explicitly
  id: Identity_property_on_Added_entity_can_have_value_set_explicitly
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2
  langs:
  - csharp
  - vb
  name: Identity_property_on_Added_entity_can_have_value_set_explicitly()
  nameWithType: StoreGeneratedTestBase<TTestStore, TFixture>.Identity_property_on_Added_entity_can_have_value_set_explicitly()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase<TTestStore, TFixture>.Identity_property_on_Added_entity_can_have_value_set_explicitly()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Identity_property_on_Added_entity_can_have_value_set_explicitly
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
    startLine: 85
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Identity_property_on_Added_entity_can_have_value_set_explicitly()
    content.vb: >-
      <Fact>

      Public Overridable Sub Identity_property_on_Added_entity_can_have_value_set_explicitly
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: StoreGeneratedTestBase(Of TTestStore, TFixture).Identity_property_on_Added_entity_can_have_value_set_explicitly()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase(Of TTestStore, TFixture).Identity_property_on_Added_entity_can_have_value_set_explicitly()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Identity_property_on_Modified_entity_with_read_only_after_save_throws_if_value_is_in_modified_state
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Identity_property_on_Modified_entity_with_read_only_after_save_throws_if_value_is_in_modified_state
  id: Identity_property_on_Modified_entity_with_read_only_after_save_throws_if_value_is_in_modified_state
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2
  langs:
  - csharp
  - vb
  name: Identity_property_on_Modified_entity_with_read_only_after_save_throws_if_value_is_in_modified_state()
  nameWithType: StoreGeneratedTestBase<TTestStore, TFixture>.Identity_property_on_Modified_entity_with_read_only_after_save_throws_if_value_is_in_modified_state()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase<TTestStore, TFixture>.Identity_property_on_Modified_entity_with_read_only_after_save_throws_if_value_is_in_modified_state()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Identity_property_on_Modified_entity_with_read_only_after_save_throws_if_value_is_in_modified_state
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
    startLine: 103
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Identity_property_on_Modified_entity_with_read_only_after_save_throws_if_value_is_in_modified_state()
    content.vb: >-
      <Fact>

      Public Overridable Sub Identity_property_on_Modified_entity_with_read_only_after_save_throws_if_value_is_in_modified_state
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: StoreGeneratedTestBase(Of TTestStore, TFixture).Identity_property_on_Modified_entity_with_read_only_after_save_throws_if_value_is_in_modified_state()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase(Of TTestStore, TFixture).Identity_property_on_Modified_entity_with_read_only_after_save_throws_if_value_is_in_modified_state()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Identity_property_on_Modified_entity_is_included_in_update_when_modified
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Identity_property_on_Modified_entity_is_included_in_update_when_modified
  id: Identity_property_on_Modified_entity_is_included_in_update_when_modified
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2
  langs:
  - csharp
  - vb
  name: Identity_property_on_Modified_entity_is_included_in_update_when_modified()
  nameWithType: StoreGeneratedTestBase<TTestStore, TFixture>.Identity_property_on_Modified_entity_is_included_in_update_when_modified()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase<TTestStore, TFixture>.Identity_property_on_Modified_entity_is_included_in_update_when_modified()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Identity_property_on_Modified_entity_is_included_in_update_when_modified
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
    startLine: 131
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Identity_property_on_Modified_entity_is_included_in_update_when_modified()
    content.vb: >-
      <Fact>

      Public Overridable Sub Identity_property_on_Modified_entity_is_included_in_update_when_modified
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: StoreGeneratedTestBase(Of TTestStore, TFixture).Identity_property_on_Modified_entity_is_included_in_update_when_modified()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase(Of TTestStore, TFixture).Identity_property_on_Modified_entity_is_included_in_update_when_modified()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Identity_property_on_Modified_entity_is_not_included_in_update_when_not_modified
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Identity_property_on_Modified_entity_is_not_included_in_update_when_not_modified
  id: Identity_property_on_Modified_entity_is_not_included_in_update_when_not_modified
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2
  langs:
  - csharp
  - vb
  name: Identity_property_on_Modified_entity_is_not_included_in_update_when_not_modified()
  nameWithType: StoreGeneratedTestBase<TTestStore, TFixture>.Identity_property_on_Modified_entity_is_not_included_in_update_when_not_modified()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase<TTestStore, TFixture>.Identity_property_on_Modified_entity_is_not_included_in_update_when_not_modified()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Identity_property_on_Modified_entity_is_not_included_in_update_when_not_modified
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
    startLine: 160
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Identity_property_on_Modified_entity_is_not_included_in_update_when_not_modified()
    content.vb: >-
      <Fact>

      Public Overridable Sub Identity_property_on_Modified_entity_is_not_included_in_update_when_not_modified
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: StoreGeneratedTestBase(Of TTestStore, TFixture).Identity_property_on_Modified_entity_is_not_included_in_update_when_not_modified()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase(Of TTestStore, TFixture).Identity_property_on_Modified_entity_is_not_included_in_update_when_not_modified()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Always_identity_property_on_Added_entity_with_temporary_value_gets_value_from_store
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Always_identity_property_on_Added_entity_with_temporary_value_gets_value_from_store
  id: Always_identity_property_on_Added_entity_with_temporary_value_gets_value_from_store
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2
  langs:
  - csharp
  - vb
  name: Always_identity_property_on_Added_entity_with_temporary_value_gets_value_from_store()
  nameWithType: StoreGeneratedTestBase<TTestStore, TFixture>.Always_identity_property_on_Added_entity_with_temporary_value_gets_value_from_store()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase<TTestStore, TFixture>.Always_identity_property_on_Added_entity_with_temporary_value_gets_value_from_store()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Always_identity_property_on_Added_entity_with_temporary_value_gets_value_from_store
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
    startLine: 192
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Always_identity_property_on_Added_entity_with_temporary_value_gets_value_from_store()
    content.vb: >-
      <Fact>

      Public Overridable Sub Always_identity_property_on_Added_entity_with_temporary_value_gets_value_from_store
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: StoreGeneratedTestBase(Of TTestStore, TFixture).Always_identity_property_on_Added_entity_with_temporary_value_gets_value_from_store()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase(Of TTestStore, TFixture).Always_identity_property_on_Added_entity_with_temporary_value_gets_value_from_store()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Always_identity_property_on_Added_entity_with_default_value_gets_value_from_store
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Always_identity_property_on_Added_entity_with_default_value_gets_value_from_store
  id: Always_identity_property_on_Added_entity_with_default_value_gets_value_from_store
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2
  langs:
  - csharp
  - vb
  name: Always_identity_property_on_Added_entity_with_default_value_gets_value_from_store()
  nameWithType: StoreGeneratedTestBase<TTestStore, TFixture>.Always_identity_property_on_Added_entity_with_default_value_gets_value_from_store()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase<TTestStore, TFixture>.Always_identity_property_on_Added_entity_with_default_value_gets_value_from_store()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Always_identity_property_on_Added_entity_with_default_value_gets_value_from_store
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
    startLine: 211
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Always_identity_property_on_Added_entity_with_default_value_gets_value_from_store()
    content.vb: >-
      <Fact>

      Public Overridable Sub Always_identity_property_on_Added_entity_with_default_value_gets_value_from_store
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: StoreGeneratedTestBase(Of TTestStore, TFixture).Always_identity_property_on_Added_entity_with_default_value_gets_value_from_store()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase(Of TTestStore, TFixture).Always_identity_property_on_Added_entity_with_default_value_gets_value_from_store()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Always_identity_property_on_Added_entity_with_read_only_before_save_throws_if_explicit_values_set
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Always_identity_property_on_Added_entity_with_read_only_before_save_throws_if_explicit_values_set
  id: Always_identity_property_on_Added_entity_with_read_only_before_save_throws_if_explicit_values_set
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2
  langs:
  - csharp
  - vb
  name: Always_identity_property_on_Added_entity_with_read_only_before_save_throws_if_explicit_values_set()
  nameWithType: StoreGeneratedTestBase<TTestStore, TFixture>.Always_identity_property_on_Added_entity_with_read_only_before_save_throws_if_explicit_values_set()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase<TTestStore, TFixture>.Always_identity_property_on_Added_entity_with_read_only_before_save_throws_if_explicit_values_set()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Always_identity_property_on_Added_entity_with_read_only_before_save_throws_if_explicit_values_set
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
    startLine: 229
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Always_identity_property_on_Added_entity_with_read_only_before_save_throws_if_explicit_values_set()
    content.vb: >-
      <Fact>

      Public Overridable Sub Always_identity_property_on_Added_entity_with_read_only_before_save_throws_if_explicit_values_set
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: StoreGeneratedTestBase(Of TTestStore, TFixture).Always_identity_property_on_Added_entity_with_read_only_before_save_throws_if_explicit_values_set()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase(Of TTestStore, TFixture).Always_identity_property_on_Added_entity_with_read_only_before_save_throws_if_explicit_values_set()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Always_identity_property_on_Added_entity_gets_store_value_even_when_set_explicitly
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Always_identity_property_on_Added_entity_gets_store_value_even_when_set_explicitly
  id: Always_identity_property_on_Added_entity_gets_store_value_even_when_set_explicitly
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2
  langs:
  - csharp
  - vb
  name: Always_identity_property_on_Added_entity_gets_store_value_even_when_set_explicitly()
  nameWithType: StoreGeneratedTestBase<TTestStore, TFixture>.Always_identity_property_on_Added_entity_gets_store_value_even_when_set_explicitly()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase<TTestStore, TFixture>.Always_identity_property_on_Added_entity_gets_store_value_even_when_set_explicitly()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Always_identity_property_on_Added_entity_gets_store_value_even_when_set_explicitly
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
    startLine: 242
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Always_identity_property_on_Added_entity_gets_store_value_even_when_set_explicitly()
    content.vb: >-
      <Fact>

      Public Overridable Sub Always_identity_property_on_Added_entity_gets_store_value_even_when_set_explicitly
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: StoreGeneratedTestBase(Of TTestStore, TFixture).Always_identity_property_on_Added_entity_gets_store_value_even_when_set_explicitly()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase(Of TTestStore, TFixture).Always_identity_property_on_Added_entity_gets_store_value_even_when_set_explicitly()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Always_identity_property_on_Modified_entity_with_read_only_after_save_throws_if_value_is_in_modified_state
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Always_identity_property_on_Modified_entity_with_read_only_after_save_throws_if_value_is_in_modified_state
  id: Always_identity_property_on_Modified_entity_with_read_only_after_save_throws_if_value_is_in_modified_state
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2
  langs:
  - csharp
  - vb
  name: Always_identity_property_on_Modified_entity_with_read_only_after_save_throws_if_value_is_in_modified_state()
  nameWithType: StoreGeneratedTestBase<TTestStore, TFixture>.Always_identity_property_on_Modified_entity_with_read_only_after_save_throws_if_value_is_in_modified_state()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase<TTestStore, TFixture>.Always_identity_property_on_Modified_entity_with_read_only_after_save_throws_if_value_is_in_modified_state()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Always_identity_property_on_Modified_entity_with_read_only_after_save_throws_if_value_is_in_modified_state
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
    startLine: 260
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Always_identity_property_on_Modified_entity_with_read_only_after_save_throws_if_value_is_in_modified_state()
    content.vb: >-
      <Fact>

      Public Overridable Sub Always_identity_property_on_Modified_entity_with_read_only_after_save_throws_if_value_is_in_modified_state
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: StoreGeneratedTestBase(Of TTestStore, TFixture).Always_identity_property_on_Modified_entity_with_read_only_after_save_throws_if_value_is_in_modified_state()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase(Of TTestStore, TFixture).Always_identity_property_on_Modified_entity_with_read_only_after_save_throws_if_value_is_in_modified_state()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Always_identity_property_on_Modified_entity_is_not_included_in_update_when_modified
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Always_identity_property_on_Modified_entity_is_not_included_in_update_when_modified
  id: Always_identity_property_on_Modified_entity_is_not_included_in_update_when_modified
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2
  langs:
  - csharp
  - vb
  name: Always_identity_property_on_Modified_entity_is_not_included_in_update_when_modified()
  nameWithType: StoreGeneratedTestBase<TTestStore, TFixture>.Always_identity_property_on_Modified_entity_is_not_included_in_update_when_modified()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase<TTestStore, TFixture>.Always_identity_property_on_Modified_entity_is_not_included_in_update_when_modified()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Always_identity_property_on_Modified_entity_is_not_included_in_update_when_modified
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
    startLine: 288
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Always_identity_property_on_Modified_entity_is_not_included_in_update_when_modified()
    content.vb: >-
      <Fact>

      Public Overridable Sub Always_identity_property_on_Modified_entity_is_not_included_in_update_when_modified
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: StoreGeneratedTestBase(Of TTestStore, TFixture).Always_identity_property_on_Modified_entity_is_not_included_in_update_when_modified()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase(Of TTestStore, TFixture).Always_identity_property_on_Modified_entity_is_not_included_in_update_when_modified()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Always_identity_property_on_Modified_entity_is_not_included_in_the_update_when_not_modified
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Always_identity_property_on_Modified_entity_is_not_included_in_the_update_when_not_modified
  id: Always_identity_property_on_Modified_entity_is_not_included_in_the_update_when_not_modified
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2
  langs:
  - csharp
  - vb
  name: Always_identity_property_on_Modified_entity_is_not_included_in_the_update_when_not_modified()
  nameWithType: StoreGeneratedTestBase<TTestStore, TFixture>.Always_identity_property_on_Modified_entity_is_not_included_in_the_update_when_not_modified()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase<TTestStore, TFixture>.Always_identity_property_on_Modified_entity_is_not_included_in_the_update_when_not_modified()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Always_identity_property_on_Modified_entity_is_not_included_in_the_update_when_not_modified
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
    startLine: 317
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Always_identity_property_on_Modified_entity_is_not_included_in_the_update_when_not_modified()
    content.vb: >-
      <Fact>

      Public Overridable Sub Always_identity_property_on_Modified_entity_is_not_included_in_the_update_when_not_modified
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: StoreGeneratedTestBase(Of TTestStore, TFixture).Always_identity_property_on_Modified_entity_is_not_included_in_the_update_when_not_modified()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase(Of TTestStore, TFixture).Always_identity_property_on_Modified_entity_is_not_included_in_the_update_when_not_modified()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Computed_property_on_Added_entity_with_temporary_value_gets_value_from_store
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Computed_property_on_Added_entity_with_temporary_value_gets_value_from_store
  id: Computed_property_on_Added_entity_with_temporary_value_gets_value_from_store
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2
  langs:
  - csharp
  - vb
  name: Computed_property_on_Added_entity_with_temporary_value_gets_value_from_store()
  nameWithType: StoreGeneratedTestBase<TTestStore, TFixture>.Computed_property_on_Added_entity_with_temporary_value_gets_value_from_store()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase<TTestStore, TFixture>.Computed_property_on_Added_entity_with_temporary_value_gets_value_from_store()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Computed_property_on_Added_entity_with_temporary_value_gets_value_from_store
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
    startLine: 348
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Computed_property_on_Added_entity_with_temporary_value_gets_value_from_store()
    content.vb: >-
      <Fact>

      Public Overridable Sub Computed_property_on_Added_entity_with_temporary_value_gets_value_from_store
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: StoreGeneratedTestBase(Of TTestStore, TFixture).Computed_property_on_Added_entity_with_temporary_value_gets_value_from_store()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase(Of TTestStore, TFixture).Computed_property_on_Added_entity_with_temporary_value_gets_value_from_store()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Computed_property_on_Added_entity_with_default_value_gets_value_from_store
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Computed_property_on_Added_entity_with_default_value_gets_value_from_store
  id: Computed_property_on_Added_entity_with_default_value_gets_value_from_store
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2
  langs:
  - csharp
  - vb
  name: Computed_property_on_Added_entity_with_default_value_gets_value_from_store()
  nameWithType: StoreGeneratedTestBase<TTestStore, TFixture>.Computed_property_on_Added_entity_with_default_value_gets_value_from_store()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase<TTestStore, TFixture>.Computed_property_on_Added_entity_with_default_value_gets_value_from_store()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Computed_property_on_Added_entity_with_default_value_gets_value_from_store
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
    startLine: 367
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Computed_property_on_Added_entity_with_default_value_gets_value_from_store()
    content.vb: >-
      <Fact>

      Public Overridable Sub Computed_property_on_Added_entity_with_default_value_gets_value_from_store
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: StoreGeneratedTestBase(Of TTestStore, TFixture).Computed_property_on_Added_entity_with_default_value_gets_value_from_store()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase(Of TTestStore, TFixture).Computed_property_on_Added_entity_with_default_value_gets_value_from_store()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Computed_property_on_Added_entity_with_read_only_before_save_throws_if_explicit_values_set
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Computed_property_on_Added_entity_with_read_only_before_save_throws_if_explicit_values_set
  id: Computed_property_on_Added_entity_with_read_only_before_save_throws_if_explicit_values_set
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2
  langs:
  - csharp
  - vb
  name: Computed_property_on_Added_entity_with_read_only_before_save_throws_if_explicit_values_set()
  nameWithType: StoreGeneratedTestBase<TTestStore, TFixture>.Computed_property_on_Added_entity_with_read_only_before_save_throws_if_explicit_values_set()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase<TTestStore, TFixture>.Computed_property_on_Added_entity_with_read_only_before_save_throws_if_explicit_values_set()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Computed_property_on_Added_entity_with_read_only_before_save_throws_if_explicit_values_set
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
    startLine: 385
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Computed_property_on_Added_entity_with_read_only_before_save_throws_if_explicit_values_set()
    content.vb: >-
      <Fact>

      Public Overridable Sub Computed_property_on_Added_entity_with_read_only_before_save_throws_if_explicit_values_set
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: StoreGeneratedTestBase(Of TTestStore, TFixture).Computed_property_on_Added_entity_with_read_only_before_save_throws_if_explicit_values_set()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase(Of TTestStore, TFixture).Computed_property_on_Added_entity_with_read_only_before_save_throws_if_explicit_values_set()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Computed_property_on_Added_entity_can_have_value_set_explicitly
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Computed_property_on_Added_entity_can_have_value_set_explicitly
  id: Computed_property_on_Added_entity_can_have_value_set_explicitly
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2
  langs:
  - csharp
  - vb
  name: Computed_property_on_Added_entity_can_have_value_set_explicitly()
  nameWithType: StoreGeneratedTestBase<TTestStore, TFixture>.Computed_property_on_Added_entity_can_have_value_set_explicitly()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase<TTestStore, TFixture>.Computed_property_on_Added_entity_can_have_value_set_explicitly()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Computed_property_on_Added_entity_can_have_value_set_explicitly
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
    startLine: 398
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Computed_property_on_Added_entity_can_have_value_set_explicitly()
    content.vb: >-
      <Fact>

      Public Overridable Sub Computed_property_on_Added_entity_can_have_value_set_explicitly
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: StoreGeneratedTestBase(Of TTestStore, TFixture).Computed_property_on_Added_entity_can_have_value_set_explicitly()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase(Of TTestStore, TFixture).Computed_property_on_Added_entity_can_have_value_set_explicitly()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Computed_property_on_Modified_entity_with_read_only_after_save_throws_if_value_is_in_modified_state
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Computed_property_on_Modified_entity_with_read_only_after_save_throws_if_value_is_in_modified_state
  id: Computed_property_on_Modified_entity_with_read_only_after_save_throws_if_value_is_in_modified_state
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2
  langs:
  - csharp
  - vb
  name: Computed_property_on_Modified_entity_with_read_only_after_save_throws_if_value_is_in_modified_state()
  nameWithType: StoreGeneratedTestBase<TTestStore, TFixture>.Computed_property_on_Modified_entity_with_read_only_after_save_throws_if_value_is_in_modified_state()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase<TTestStore, TFixture>.Computed_property_on_Modified_entity_with_read_only_after_save_throws_if_value_is_in_modified_state()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Computed_property_on_Modified_entity_with_read_only_after_save_throws_if_value_is_in_modified_state
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
    startLine: 416
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Computed_property_on_Modified_entity_with_read_only_after_save_throws_if_value_is_in_modified_state()
    content.vb: >-
      <Fact>

      Public Overridable Sub Computed_property_on_Modified_entity_with_read_only_after_save_throws_if_value_is_in_modified_state
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: StoreGeneratedTestBase(Of TTestStore, TFixture).Computed_property_on_Modified_entity_with_read_only_after_save_throws_if_value_is_in_modified_state()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase(Of TTestStore, TFixture).Computed_property_on_Modified_entity_with_read_only_after_save_throws_if_value_is_in_modified_state()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Computed_property_on_Modified_entity_is_included_in_update_when_modified
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Computed_property_on_Modified_entity_is_included_in_update_when_modified
  id: Computed_property_on_Modified_entity_is_included_in_update_when_modified
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2
  langs:
  - csharp
  - vb
  name: Computed_property_on_Modified_entity_is_included_in_update_when_modified()
  nameWithType: StoreGeneratedTestBase<TTestStore, TFixture>.Computed_property_on_Modified_entity_is_included_in_update_when_modified()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase<TTestStore, TFixture>.Computed_property_on_Modified_entity_is_included_in_update_when_modified()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Computed_property_on_Modified_entity_is_included_in_update_when_modified
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
    startLine: 444
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Computed_property_on_Modified_entity_is_included_in_update_when_modified()
    content.vb: >-
      <Fact>

      Public Overridable Sub Computed_property_on_Modified_entity_is_included_in_update_when_modified
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: StoreGeneratedTestBase(Of TTestStore, TFixture).Computed_property_on_Modified_entity_is_included_in_update_when_modified()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase(Of TTestStore, TFixture).Computed_property_on_Modified_entity_is_included_in_update_when_modified()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Computed_property_on_Modified_entity_is_read_from_store_when_not_modified
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Computed_property_on_Modified_entity_is_read_from_store_when_not_modified
  id: Computed_property_on_Modified_entity_is_read_from_store_when_not_modified
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2
  langs:
  - csharp
  - vb
  name: Computed_property_on_Modified_entity_is_read_from_store_when_not_modified()
  nameWithType: StoreGeneratedTestBase<TTestStore, TFixture>.Computed_property_on_Modified_entity_is_read_from_store_when_not_modified()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase<TTestStore, TFixture>.Computed_property_on_Modified_entity_is_read_from_store_when_not_modified()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Computed_property_on_Modified_entity_is_read_from_store_when_not_modified
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
    startLine: 473
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Computed_property_on_Modified_entity_is_read_from_store_when_not_modified()
    content.vb: >-
      <Fact>

      Public Overridable Sub Computed_property_on_Modified_entity_is_read_from_store_when_not_modified
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: StoreGeneratedTestBase(Of TTestStore, TFixture).Computed_property_on_Modified_entity_is_read_from_store_when_not_modified()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase(Of TTestStore, TFixture).Computed_property_on_Modified_entity_is_read_from_store_when_not_modified()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Always_computed_property_on_Added_entity_with_temporary_value_gets_value_from_store
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Always_computed_property_on_Added_entity_with_temporary_value_gets_value_from_store
  id: Always_computed_property_on_Added_entity_with_temporary_value_gets_value_from_store
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2
  langs:
  - csharp
  - vb
  name: Always_computed_property_on_Added_entity_with_temporary_value_gets_value_from_store()
  nameWithType: StoreGeneratedTestBase<TTestStore, TFixture>.Always_computed_property_on_Added_entity_with_temporary_value_gets_value_from_store()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase<TTestStore, TFixture>.Always_computed_property_on_Added_entity_with_temporary_value_gets_value_from_store()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Always_computed_property_on_Added_entity_with_temporary_value_gets_value_from_store
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
    startLine: 505
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Always_computed_property_on_Added_entity_with_temporary_value_gets_value_from_store()
    content.vb: >-
      <Fact>

      Public Overridable Sub Always_computed_property_on_Added_entity_with_temporary_value_gets_value_from_store
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: StoreGeneratedTestBase(Of TTestStore, TFixture).Always_computed_property_on_Added_entity_with_temporary_value_gets_value_from_store()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase(Of TTestStore, TFixture).Always_computed_property_on_Added_entity_with_temporary_value_gets_value_from_store()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Always_computed_property_on_Added_entity_with_default_value_gets_value_from_store
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Always_computed_property_on_Added_entity_with_default_value_gets_value_from_store
  id: Always_computed_property_on_Added_entity_with_default_value_gets_value_from_store
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2
  langs:
  - csharp
  - vb
  name: Always_computed_property_on_Added_entity_with_default_value_gets_value_from_store()
  nameWithType: StoreGeneratedTestBase<TTestStore, TFixture>.Always_computed_property_on_Added_entity_with_default_value_gets_value_from_store()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase<TTestStore, TFixture>.Always_computed_property_on_Added_entity_with_default_value_gets_value_from_store()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Always_computed_property_on_Added_entity_with_default_value_gets_value_from_store
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
    startLine: 524
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Always_computed_property_on_Added_entity_with_default_value_gets_value_from_store()
    content.vb: >-
      <Fact>

      Public Overridable Sub Always_computed_property_on_Added_entity_with_default_value_gets_value_from_store
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: StoreGeneratedTestBase(Of TTestStore, TFixture).Always_computed_property_on_Added_entity_with_default_value_gets_value_from_store()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase(Of TTestStore, TFixture).Always_computed_property_on_Added_entity_with_default_value_gets_value_from_store()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Always_computed_property_on_Added_entity_with_read_only_before_save_throws_if_explicit_values_set
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Always_computed_property_on_Added_entity_with_read_only_before_save_throws_if_explicit_values_set
  id: Always_computed_property_on_Added_entity_with_read_only_before_save_throws_if_explicit_values_set
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2
  langs:
  - csharp
  - vb
  name: Always_computed_property_on_Added_entity_with_read_only_before_save_throws_if_explicit_values_set()
  nameWithType: StoreGeneratedTestBase<TTestStore, TFixture>.Always_computed_property_on_Added_entity_with_read_only_before_save_throws_if_explicit_values_set()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase<TTestStore, TFixture>.Always_computed_property_on_Added_entity_with_read_only_before_save_throws_if_explicit_values_set()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Always_computed_property_on_Added_entity_with_read_only_before_save_throws_if_explicit_values_set
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
    startLine: 542
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Always_computed_property_on_Added_entity_with_read_only_before_save_throws_if_explicit_values_set()
    content.vb: >-
      <Fact>

      Public Overridable Sub Always_computed_property_on_Added_entity_with_read_only_before_save_throws_if_explicit_values_set
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: StoreGeneratedTestBase(Of TTestStore, TFixture).Always_computed_property_on_Added_entity_with_read_only_before_save_throws_if_explicit_values_set()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase(Of TTestStore, TFixture).Always_computed_property_on_Added_entity_with_read_only_before_save_throws_if_explicit_values_set()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Always_computed_property_on_Added_entity_cannot_have_value_set_explicitly
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Always_computed_property_on_Added_entity_cannot_have_value_set_explicitly
  id: Always_computed_property_on_Added_entity_cannot_have_value_set_explicitly
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2
  langs:
  - csharp
  - vb
  name: Always_computed_property_on_Added_entity_cannot_have_value_set_explicitly()
  nameWithType: StoreGeneratedTestBase<TTestStore, TFixture>.Always_computed_property_on_Added_entity_cannot_have_value_set_explicitly()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase<TTestStore, TFixture>.Always_computed_property_on_Added_entity_cannot_have_value_set_explicitly()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Always_computed_property_on_Added_entity_cannot_have_value_set_explicitly
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
    startLine: 555
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Always_computed_property_on_Added_entity_cannot_have_value_set_explicitly()
    content.vb: >-
      <Fact>

      Public Overridable Sub Always_computed_property_on_Added_entity_cannot_have_value_set_explicitly
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: StoreGeneratedTestBase(Of TTestStore, TFixture).Always_computed_property_on_Added_entity_cannot_have_value_set_explicitly()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase(Of TTestStore, TFixture).Always_computed_property_on_Added_entity_cannot_have_value_set_explicitly()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Always_computed_property_on_Modified_entity_with_read_only_after_save_throws_if_value_is_in_modified_state
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Always_computed_property_on_Modified_entity_with_read_only_after_save_throws_if_value_is_in_modified_state
  id: Always_computed_property_on_Modified_entity_with_read_only_after_save_throws_if_value_is_in_modified_state
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2
  langs:
  - csharp
  - vb
  name: Always_computed_property_on_Modified_entity_with_read_only_after_save_throws_if_value_is_in_modified_state()
  nameWithType: StoreGeneratedTestBase<TTestStore, TFixture>.Always_computed_property_on_Modified_entity_with_read_only_after_save_throws_if_value_is_in_modified_state()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase<TTestStore, TFixture>.Always_computed_property_on_Modified_entity_with_read_only_after_save_throws_if_value_is_in_modified_state()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Always_computed_property_on_Modified_entity_with_read_only_after_save_throws_if_value_is_in_modified_state
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
    startLine: 573
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Always_computed_property_on_Modified_entity_with_read_only_after_save_throws_if_value_is_in_modified_state()
    content.vb: >-
      <Fact>

      Public Overridable Sub Always_computed_property_on_Modified_entity_with_read_only_after_save_throws_if_value_is_in_modified_state
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: StoreGeneratedTestBase(Of TTestStore, TFixture).Always_computed_property_on_Modified_entity_with_read_only_after_save_throws_if_value_is_in_modified_state()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase(Of TTestStore, TFixture).Always_computed_property_on_Modified_entity_with_read_only_after_save_throws_if_value_is_in_modified_state()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Always_computed_property_on_Modified_entity_is_not_included_in_update_even_when_modified
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Always_computed_property_on_Modified_entity_is_not_included_in_update_even_when_modified
  id: Always_computed_property_on_Modified_entity_is_not_included_in_update_even_when_modified
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2
  langs:
  - csharp
  - vb
  name: Always_computed_property_on_Modified_entity_is_not_included_in_update_even_when_modified()
  nameWithType: StoreGeneratedTestBase<TTestStore, TFixture>.Always_computed_property_on_Modified_entity_is_not_included_in_update_even_when_modified()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase<TTestStore, TFixture>.Always_computed_property_on_Modified_entity_is_not_included_in_update_even_when_modified()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Always_computed_property_on_Modified_entity_is_not_included_in_update_even_when_modified
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
    startLine: 601
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Always_computed_property_on_Modified_entity_is_not_included_in_update_even_when_modified()
    content.vb: >-
      <Fact>

      Public Overridable Sub Always_computed_property_on_Modified_entity_is_not_included_in_update_even_when_modified
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: StoreGeneratedTestBase(Of TTestStore, TFixture).Always_computed_property_on_Modified_entity_is_not_included_in_update_even_when_modified()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase(Of TTestStore, TFixture).Always_computed_property_on_Modified_entity_is_not_included_in_update_even_when_modified()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Always_computed_property_on_Modified_entity_is_read_from_store_when_not_modified
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Always_computed_property_on_Modified_entity_is_read_from_store_when_not_modified
  id: Always_computed_property_on_Modified_entity_is_read_from_store_when_not_modified
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2
  langs:
  - csharp
  - vb
  name: Always_computed_property_on_Modified_entity_is_read_from_store_when_not_modified()
  nameWithType: StoreGeneratedTestBase<TTestStore, TFixture>.Always_computed_property_on_Modified_entity_is_read_from_store_when_not_modified()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase<TTestStore, TFixture>.Always_computed_property_on_Modified_entity_is_read_from_store_when_not_modified()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Always_computed_property_on_Modified_entity_is_read_from_store_when_not_modified
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
    startLine: 630
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Always_computed_property_on_Modified_entity_is_read_from_store_when_not_modified()
    content.vb: >-
      <Fact>

      Public Overridable Sub Always_computed_property_on_Modified_entity_is_read_from_store_when_not_modified
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: StoreGeneratedTestBase(Of TTestStore, TFixture).Always_computed_property_on_Modified_entity_is_read_from_store_when_not_modified()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase(Of TTestStore, TFixture).Always_computed_property_on_Modified_entity_is_read_from_store_when_not_modified()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.ExecuteWithStrategyInTransaction(System.Action{Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase{`0,`1}.StoreGeneratedContext},System.Action{Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase{`0,`1}.StoreGeneratedContext},System.Action{Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase{`0,`1}.StoreGeneratedContext})
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.ExecuteWithStrategyInTransaction(System.Action{Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase{`0,`1}.StoreGeneratedContext},System.Action{Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase{`0,`1}.StoreGeneratedContext},System.Action{Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase{`0,`1}.StoreGeneratedContext})
  id: ExecuteWithStrategyInTransaction(System.Action{Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase{`0,`1}.StoreGeneratedContext},System.Action{Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase{`0,`1}.StoreGeneratedContext},System.Action{Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase{`0,`1}.StoreGeneratedContext})
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2
  langs:
  - csharp
  - vb
  name: ExecuteWithStrategyInTransaction(Action<StoreGeneratedTestBase<TTestStore, TFixture>.StoreGeneratedContext>, Action<StoreGeneratedTestBase<TTestStore, TFixture>.StoreGeneratedContext>, Action<StoreGeneratedTestBase<TTestStore, TFixture>.StoreGeneratedContext>)
  nameWithType: StoreGeneratedTestBase<TTestStore, TFixture>.ExecuteWithStrategyInTransaction(Action<StoreGeneratedTestBase<TTestStore, TFixture>.StoreGeneratedContext>, Action<StoreGeneratedTestBase<TTestStore, TFixture>.StoreGeneratedContext>, Action<StoreGeneratedTestBase<TTestStore, TFixture>.StoreGeneratedContext>)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase<TTestStore, TFixture>.ExecuteWithStrategyInTransaction(System.Action<Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase<TTestStore, TFixture>.StoreGeneratedContext>, System.Action<Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase<TTestStore, TFixture>.StoreGeneratedContext>, System.Action<Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase<TTestStore, TFixture>.StoreGeneratedContext>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ExecuteWithStrategyInTransaction
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
    startLine: 700
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: protected virtual void ExecuteWithStrategyInTransaction(Action<StoreGeneratedTestBase<TTestStore, TFixture>.StoreGeneratedContext> testOperation, Action<StoreGeneratedTestBase<TTestStore, TFixture>.StoreGeneratedContext> nestedTestOperation1 = null, Action<StoreGeneratedTestBase<TTestStore, TFixture>.StoreGeneratedContext> nestedTestOperation2 = null)
    content.vb: Protected Overridable Sub ExecuteWithStrategyInTransaction(testOperation As Action(Of StoreGeneratedTestBase(Of TTestStore, TFixture).StoreGeneratedContext), nestedTestOperation1 As Action(Of StoreGeneratedTestBase(Of TTestStore, TFixture).StoreGeneratedContext) = Nothing, nestedTestOperation2 As Action(Of StoreGeneratedTestBase(Of TTestStore, TFixture).StoreGeneratedContext) = Nothing)
    parameters:
    - id: testOperation
      type: System.Action{Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.StoreGeneratedContext}
    - id: nestedTestOperation1
      type: System.Action{Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.StoreGeneratedContext}
    - id: nestedTestOperation2
      type: System.Action{Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.StoreGeneratedContext}
  nameWithType.vb: StoreGeneratedTestBase(Of TTestStore, TFixture).ExecuteWithStrategyInTransaction(Action(Of StoreGeneratedTestBase(Of TTestStore, TFixture).StoreGeneratedContext), Action(Of StoreGeneratedTestBase(Of TTestStore, TFixture).StoreGeneratedContext), Action(Of StoreGeneratedTestBase(Of TTestStore, TFixture).StoreGeneratedContext))
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase(Of TTestStore, TFixture).ExecuteWithStrategyInTransaction(System.Action(Of Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase(Of TTestStore, TFixture).StoreGeneratedContext), System.Action(Of Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase(Of TTestStore, TFixture).StoreGeneratedContext), System.Action(Of Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase(Of TTestStore, TFixture).StoreGeneratedContext))
  name.vb: ExecuteWithStrategyInTransaction(Action(Of StoreGeneratedTestBase(Of TTestStore, TFixture).StoreGeneratedContext), Action(Of StoreGeneratedTestBase(Of TTestStore, TFixture).StoreGeneratedContext), Action(Of StoreGeneratedTestBase(Of TTestStore, TFixture).StoreGeneratedContext))
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.UseTransaction(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.UseTransaction(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  id: UseTransaction(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2
  langs:
  - csharp
  - vb
  name: UseTransaction(DatabaseFacade, IDbContextTransaction)
  nameWithType: StoreGeneratedTestBase<TTestStore, TFixture>.UseTransaction(DatabaseFacade, IDbContextTransaction)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase<TTestStore, TFixture>.UseTransaction(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: UseTransaction
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
    startLine: 707
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: protected virtual void UseTransaction(DatabaseFacade facade, IDbContextTransaction transaction)
    content.vb: Protected Overridable Sub UseTransaction(facade As DatabaseFacade, transaction As IDbContextTransaction)
    parameters:
    - id: facade
      type: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
    - id: transaction
      type: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
  nameWithType.vb: StoreGeneratedTestBase(Of TTestStore, TFixture).UseTransaction(DatabaseFacade, IDbContextTransaction)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase(Of TTestStore, TFixture).UseTransaction(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.CreateContext
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.CreateContext
  id: CreateContext
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2
  langs:
  - csharp
  - vb
  name: CreateContext()
  nameWithType: StoreGeneratedTestBase<TTestStore, TFixture>.CreateContext()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase<TTestStore, TFixture>.CreateContext()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateContext
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
    startLine: 711
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: protected StoreGeneratedTestBase<TTestStore, TFixture>.StoreGeneratedContext CreateContext()
    content.vb: Protected Function CreateContext As StoreGeneratedTestBase(Of TTestStore, TFixture).StoreGeneratedContext
    return:
      type: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.StoreGeneratedContext
  nameWithType.vb: StoreGeneratedTestBase(Of TTestStore, TFixture).CreateContext()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase(Of TTestStore, TFixture).CreateContext()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Dispose
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Dispose
  id: Dispose
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: StoreGeneratedTestBase<TTestStore, TFixture>.Dispose()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase<TTestStore, TFixture>.Dispose()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Dispose
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
    startLine: 714
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  implements:
  - System.IDisposable.Dispose
  nameWithType.vb: StoreGeneratedTestBase(Of TTestStore, TFixture).Dispose()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase(Of TTestStore, TFixture).Dispose()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Fixture
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.Fixture
  id: Fixture
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2
  langs:
  - csharp
  - vb
  name: Fixture
  nameWithType: StoreGeneratedTestBase<TTestStore, TFixture>.Fixture
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase<TTestStore, TFixture>.Fixture
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Fixture
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
    startLine: 717
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: protected TFixture Fixture { get; }
    content.vb: Protected ReadOnly Property Fixture As TFixture
    parameters: []
    return:
      type: '{TFixture}'
  nameWithType.vb: StoreGeneratedTestBase(Of TTestStore, TFixture).Fixture
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase(Of TTestStore, TFixture).Fixture
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.TestStore
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.TestStore
  id: TestStore
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2
  langs:
  - csharp
  - vb
  name: TestStore
  nameWithType: StoreGeneratedTestBase<TTestStore, TFixture>.TestStore
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase<TTestStore, TFixture>.TestStore
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: TestStore
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/StoreGeneratedTestBase.cs
    startLine: 719
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: protected TTestStore TestStore { get; }
    content.vb: Protected ReadOnly Property TestStore As TTestStore
    parameters: []
    return:
      type: '{TTestStore}'
  nameWithType.vb: StoreGeneratedTestBase(Of TTestStore, TFixture).TestStore
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase(Of TTestStore, TFixture).TestStore
references:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests
  commentId: N:Microsoft.EntityFrameworkCore.Specification.Tests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Specification.Tests
  nameWithType: Microsoft.EntityFrameworkCore.Specification.Tests
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Xunit.IClassFixture{{TFixture}}
  commentId: T:Xunit.IClassFixture{`0}
  parent: Xunit
  definition: Xunit.IClassFixture`1
  name: IClassFixture<TFixture>
  nameWithType: IClassFixture<TFixture>
  fullName: Xunit.IClassFixture<TFixture>
  nameWithType.vb: IClassFixture(Of TFixture)
  fullname.vb: Xunit.IClassFixture(Of TFixture)
  name.vb: IClassFixture(Of TFixture)
  spec.csharp:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    nameWithType: IClassFixture
    fullName: Xunit.IClassFixture
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TFixture
    nameWithType: TFixture
    fullName: TFixture
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    nameWithType: IClassFixture
    fullName: Xunit.IClassFixture
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TFixture
    nameWithType: TFixture
    fullName: TFixture
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Xunit.IClassFixture`1
  commentId: T:Xunit.IClassFixture`1
  isExternal: true
  name: IClassFixture<TFixture>
  nameWithType: IClassFixture<TFixture>
  fullName: Xunit.IClassFixture<TFixture>
  nameWithType.vb: IClassFixture(Of TFixture)
  fullname.vb: Xunit.IClassFixture(Of TFixture)
  name.vb: IClassFixture(Of TFixture)
  spec.csharp:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    nameWithType: IClassFixture
    fullName: Xunit.IClassFixture
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TFixture
    nameWithType: TFixture
    fullName: TFixture
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    nameWithType: IClassFixture
    fullName: Xunit.IClassFixture
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TFixture
    nameWithType: TFixture
    fullName: TFixture
  - name: )
    nameWithType: )
    fullName: )
- uid: Xunit
  commentId: N:Xunit
  isExternal: false
  name: Xunit
  nameWithType: Xunit
  fullName: Xunit
- uid: '{TFixture}'
  commentId: '!:TFixture'
  definition: TFixture
  name: TFixture
  nameWithType: TFixture
  fullName: TFixture
- uid: TFixture
  isExternal: false
  name: TFixture
  nameWithType: TFixture
  fullName: TFixture
- uid: System.Action{Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.StoreGeneratedContext}
  commentId: T:System.Action{Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.StoreGeneratedContext}
  parent: System
  definition: System.Action`1
  name: Action<StoreGeneratedTestBase.StoreGeneratedContext<>>
  nameWithType: Action<StoreGeneratedTestBase.StoreGeneratedContext<>>
  fullName: System.Action<Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase.StoreGeneratedContext<>>
  nameWithType.vb: Action(Of StoreGeneratedTestBase.StoreGeneratedContext(Of ))
  fullname.vb: System.Action(Of Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase.StoreGeneratedContext(Of ))
  name.vb: Action(Of StoreGeneratedTestBase.StoreGeneratedContext(Of ))
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.StoreGeneratedContext
    name: StoreGeneratedTestBase.StoreGeneratedContext
    nameWithType: StoreGeneratedTestBase.StoreGeneratedContext
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase.StoreGeneratedContext
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.StoreGeneratedContext
    name: StoreGeneratedTestBase.StoreGeneratedContext
    nameWithType: StoreGeneratedTestBase.StoreGeneratedContext
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase.StoreGeneratedContext
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullname.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
  parent: Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: DatabaseFacade
  nameWithType: DatabaseFacade
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IDbContextTransaction
  nameWithType: IDbContextTransaction
  fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
- uid: Microsoft.EntityFrameworkCore.Infrastructure
  commentId: N:Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Infrastructure
  nameWithType: Microsoft.EntityFrameworkCore.Infrastructure
  fullName: Microsoft.EntityFrameworkCore.Infrastructure
- uid: Microsoft.EntityFrameworkCore.Storage
  commentId: N:Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Storage
  nameWithType: Microsoft.EntityFrameworkCore.Storage
  fullName: Microsoft.EntityFrameworkCore.Storage
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.StoreGeneratedContext
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.StoreGeneratedContext
  parent: Microsoft.EntityFrameworkCore.Specification.Tests
  isExternal: false
  name: StoreGeneratedTestBase.StoreGeneratedContext<>
  nameWithType: StoreGeneratedTestBase.StoreGeneratedContext<>
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase.StoreGeneratedContext<>
  nameWithType.vb: StoreGeneratedTestBase.StoreGeneratedContext(Of )
  fullname.vb: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase.StoreGeneratedContext(Of )
  name.vb: StoreGeneratedTestBase.StoreGeneratedContext(Of )
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.StoreGeneratedContext
    name: StoreGeneratedTestBase.StoreGeneratedContext
    nameWithType: StoreGeneratedTestBase.StoreGeneratedContext
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase.StoreGeneratedContext
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase`2.StoreGeneratedContext
    name: StoreGeneratedTestBase.StoreGeneratedContext
    nameWithType: StoreGeneratedTestBase.StoreGeneratedContext
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.StoreGeneratedTestBase.StoreGeneratedContext
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TTestStore}'
  commentId: '!:TTestStore'
  definition: TTestStore
  name: TTestStore
  nameWithType: TTestStore
  fullName: TTestStore
- uid: TTestStore
  isExternal: false
  name: TTestStore
  nameWithType: TTestStore
  fullName: TTestStore
