### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext
  id: MonsterContext
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  children:
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions)
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.BarcodeDetails
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Barcodes
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Complaints
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.ComputerDetails
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Computers
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.CustomerInformation
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Customers
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Drivers
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.IncorrectScans
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.LastLogins
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Licenses
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Logins
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Messages
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.OrderLines
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.OrderNotes
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.OrderQualityChecks
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Orders
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.PageViews
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.PasswordResets
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.ProductDetails
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.ProductPhotos
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.ProductReviews
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Products
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.ProductWebFeatures
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Resolutions
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.RsaTokens
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.SeedUsingFKs(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.SeedUsingNavigations(System.Boolean,System.Boolean,System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.SeedUsingNavigationsWithDeferredAdd(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.SmartCards
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.SupplierInformation
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.SupplierLogos
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Suppliers
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.SuspiciousActivities
  langs:
  - csharp
  - vb
  name: MonsterContext
  nameWithType: MonsterContext
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterContext.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: MonsterContext
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterContext.cs
    startLine: 7
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  syntax:
    content: 'public abstract class MonsterContext : DbContext, IDisposable, IInfrastructure<IServiceProvider>'
    content.vb: >-
      Public MustInherit Class MonsterContext
          Inherits DbContext
          Implements IDisposable, IInfrastructure(Of IServiceProvider)
  inheritance:
  - System.Object
  - Microsoft.EntityFrameworkCore.DbContext
  implements:
  - System.IDisposable
  - Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{System.IServiceProvider}
  inheritedMembers:
  - Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{System#IServiceProvider}#Instance
  - Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
  - Microsoft.EntityFrameworkCore.DbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  - Microsoft.EntityFrameworkCore.DbContext.SaveChanges
  - Microsoft.EntityFrameworkCore.DbContext.SaveChanges(System.Boolean)
  - Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Boolean,System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.DbContext.Dispose
  - Microsoft.EntityFrameworkCore.DbContext.Entry``1({TEntity})
  - Microsoft.EntityFrameworkCore.DbContext.Entry(System.Object)
  - Microsoft.EntityFrameworkCore.DbContext.Add``1({TEntity})
  - Microsoft.EntityFrameworkCore.DbContext.AddAsync``1({TEntity},System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.DbContext.Attach``1({TEntity})
  - Microsoft.EntityFrameworkCore.DbContext.Update``1({TEntity})
  - Microsoft.EntityFrameworkCore.DbContext.Remove``1({TEntity})
  - Microsoft.EntityFrameworkCore.DbContext.Add(System.Object)
  - Microsoft.EntityFrameworkCore.DbContext.AddAsync(System.Object,System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.DbContext.Attach(System.Object)
  - Microsoft.EntityFrameworkCore.DbContext.Update(System.Object)
  - Microsoft.EntityFrameworkCore.DbContext.Remove(System.Object)
  - Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Object[])
  - Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Object[])
  - Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Object[])
  - Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Object[])
  - Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Object[])
  - Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Collections.Generic.IEnumerable{System.Object})
  - Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Collections.Generic.IEnumerable{System.Object},System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Collections.Generic.IEnumerable{System.Object})
  - Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Collections.Generic.IEnumerable{System.Object})
  - Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Collections.Generic.IEnumerable{System.Object})
  - Microsoft.EntityFrameworkCore.DbContext.Database
  - Microsoft.EntityFrameworkCore.DbContext.ChangeTracker
  - Microsoft.EntityFrameworkCore.DbContext.Model
  - Microsoft.EntityFrameworkCore.DbContext.Set``1
  - Microsoft.EntityFrameworkCore.DbContext.Find(System.Type,System.Object[])
  - Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type,System.Object[])
  - Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type,System.Object[],System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.DbContext.Find``1(System.Object[])
  - Microsoft.EntityFrameworkCore.DbContext.FindAsync``1(System.Object[])
  - Microsoft.EntityFrameworkCore.DbContext.FindAsync``1(System.Object[],System.Threading.CancellationToken)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions)
  id: '#ctor(Microsoft.EntityFrameworkCore.DbContextOptions)'
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext
  langs:
  - csharp
  - vb
  name: MonsterContext(DbContextOptions)
  nameWithType: MonsterContext.MonsterContext(DbContextOptions)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.MonsterContext(Microsoft.EntityFrameworkCore.DbContextOptions)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterContext.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterContext.cs
    startLine: 9
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  syntax:
    content: protected MonsterContext(DbContextOptions options)
    content.vb: Protected Sub New(options As DbContextOptions)
    parameters:
    - id: options
      type: Microsoft.EntityFrameworkCore.DbContextOptions
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Customers
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Customers
  id: Customers
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext
  langs:
  - csharp
  - vb
  name: Customers
  nameWithType: MonsterContext.Customers
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Customers
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterContext.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Customers
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterContext.cs
    startLine: 14
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  syntax:
    content: public abstract IQueryable<ICustomer> Customers { get; }
    content.vb: Public MustOverride ReadOnly Property Customers As IQueryable(Of ICustomer)
    parameters: []
    return:
      type: System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer}
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Customers*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Barcodes
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Barcodes
  id: Barcodes
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext
  langs:
  - csharp
  - vb
  name: Barcodes
  nameWithType: MonsterContext.Barcodes
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Barcodes
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterContext.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Barcodes
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterContext.cs
    startLine: 15
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  syntax:
    content: public abstract IQueryable<IBarcode> Barcodes { get; }
    content.vb: Public MustOverride ReadOnly Property Barcodes As IQueryable(Of IBarcode)
    parameters: []
    return:
      type: System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IBarcode}
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Barcodes*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.IncorrectScans
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.IncorrectScans
  id: IncorrectScans
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext
  langs:
  - csharp
  - vb
  name: IncorrectScans
  nameWithType: MonsterContext.IncorrectScans
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.IncorrectScans
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterContext.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: IncorrectScans
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterContext.cs
    startLine: 16
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  syntax:
    content: public abstract IQueryable<IIncorrectScan> IncorrectScans { get; }
    content.vb: Public MustOverride ReadOnly Property IncorrectScans As IQueryable(Of IIncorrectScan)
    parameters: []
    return:
      type: System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IIncorrectScan}
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.IncorrectScans*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.BarcodeDetails
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.BarcodeDetails
  id: BarcodeDetails
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext
  langs:
  - csharp
  - vb
  name: BarcodeDetails
  nameWithType: MonsterContext.BarcodeDetails
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.BarcodeDetails
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterContext.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: BarcodeDetails
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterContext.cs
    startLine: 17
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  syntax:
    content: public abstract IQueryable<IBarcodeDetail> BarcodeDetails { get; }
    content.vb: Public MustOverride ReadOnly Property BarcodeDetails As IQueryable(Of IBarcodeDetail)
    parameters: []
    return:
      type: System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IBarcodeDetail}
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.BarcodeDetails*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Complaints
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Complaints
  id: Complaints
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext
  langs:
  - csharp
  - vb
  name: Complaints
  nameWithType: MonsterContext.Complaints
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Complaints
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterContext.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Complaints
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterContext.cs
    startLine: 18
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  syntax:
    content: public abstract IQueryable<IComplaint> Complaints { get; }
    content.vb: Public MustOverride ReadOnly Property Complaints As IQueryable(Of IComplaint)
    parameters: []
    return:
      type: System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IComplaint}
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Complaints*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Resolutions
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Resolutions
  id: Resolutions
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext
  langs:
  - csharp
  - vb
  name: Resolutions
  nameWithType: MonsterContext.Resolutions
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Resolutions
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterContext.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Resolutions
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterContext.cs
    startLine: 19
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  syntax:
    content: public abstract IQueryable<IResolution> Resolutions { get; }
    content.vb: Public MustOverride ReadOnly Property Resolutions As IQueryable(Of IResolution)
    parameters: []
    return:
      type: System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IResolution}
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Resolutions*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Logins
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Logins
  id: Logins
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext
  langs:
  - csharp
  - vb
  name: Logins
  nameWithType: MonsterContext.Logins
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Logins
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterContext.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Logins
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterContext.cs
    startLine: 20
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  syntax:
    content: public abstract IQueryable<ILogin> Logins { get; }
    content.vb: Public MustOverride ReadOnly Property Logins As IQueryable(Of ILogin)
    parameters: []
    return:
      type: System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILogin}
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Logins*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.SuspiciousActivities
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.SuspiciousActivities
  id: SuspiciousActivities
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext
  langs:
  - csharp
  - vb
  name: SuspiciousActivities
  nameWithType: MonsterContext.SuspiciousActivities
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.SuspiciousActivities
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterContext.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: SuspiciousActivities
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterContext.cs
    startLine: 21
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  syntax:
    content: public abstract IQueryable<ISuspiciousActivity> SuspiciousActivities { get; }
    content.vb: Public MustOverride ReadOnly Property SuspiciousActivities As IQueryable(Of ISuspiciousActivity)
    parameters: []
    return:
      type: System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ISuspiciousActivity}
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.SuspiciousActivities*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.SmartCards
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.SmartCards
  id: SmartCards
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext
  langs:
  - csharp
  - vb
  name: SmartCards
  nameWithType: MonsterContext.SmartCards
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.SmartCards
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterContext.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: SmartCards
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterContext.cs
    startLine: 22
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  syntax:
    content: public abstract IQueryable<ISmartCard> SmartCards { get; }
    content.vb: Public MustOverride ReadOnly Property SmartCards As IQueryable(Of ISmartCard)
    parameters: []
    return:
      type: System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ISmartCard}
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.SmartCards*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.RsaTokens
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.RsaTokens
  id: RsaTokens
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext
  langs:
  - csharp
  - vb
  name: RsaTokens
  nameWithType: MonsterContext.RsaTokens
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.RsaTokens
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterContext.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: RsaTokens
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterContext.cs
    startLine: 23
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  syntax:
    content: public abstract IQueryable<IRsaToken> RsaTokens { get; }
    content.vb: Public MustOverride ReadOnly Property RsaTokens As IQueryable(Of IRsaToken)
    parameters: []
    return:
      type: System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IRsaToken}
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.RsaTokens*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.PasswordResets
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.PasswordResets
  id: PasswordResets
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext
  langs:
  - csharp
  - vb
  name: PasswordResets
  nameWithType: MonsterContext.PasswordResets
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.PasswordResets
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterContext.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: PasswordResets
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterContext.cs
    startLine: 24
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  syntax:
    content: public abstract IQueryable<IPasswordReset> PasswordResets { get; }
    content.vb: Public MustOverride ReadOnly Property PasswordResets As IQueryable(Of IPasswordReset)
    parameters: []
    return:
      type: System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IPasswordReset}
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.PasswordResets*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.PageViews
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.PageViews
  id: PageViews
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext
  langs:
  - csharp
  - vb
  name: PageViews
  nameWithType: MonsterContext.PageViews
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.PageViews
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterContext.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: PageViews
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterContext.cs
    startLine: 25
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  syntax:
    content: public abstract IQueryable<IPageView> PageViews { get; }
    content.vb: Public MustOverride ReadOnly Property PageViews As IQueryable(Of IPageView)
    parameters: []
    return:
      type: System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IPageView}
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.PageViews*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.LastLogins
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.LastLogins
  id: LastLogins
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext
  langs:
  - csharp
  - vb
  name: LastLogins
  nameWithType: MonsterContext.LastLogins
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.LastLogins
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterContext.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: LastLogins
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterContext.cs
    startLine: 26
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  syntax:
    content: public abstract IQueryable<ILastLogin> LastLogins { get; }
    content.vb: Public MustOverride ReadOnly Property LastLogins As IQueryable(Of ILastLogin)
    parameters: []
    return:
      type: System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILastLogin}
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.LastLogins*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Messages
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Messages
  id: Messages
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext
  langs:
  - csharp
  - vb
  name: Messages
  nameWithType: MonsterContext.Messages
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Messages
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterContext.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Messages
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterContext.cs
    startLine: 27
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  syntax:
    content: public abstract IQueryable<IMessage> Messages { get; }
    content.vb: Public MustOverride ReadOnly Property Messages As IQueryable(Of IMessage)
    parameters: []
    return:
      type: System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IMessage}
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Messages*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Orders
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Orders
  id: Orders
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext
  langs:
  - csharp
  - vb
  name: Orders
  nameWithType: MonsterContext.Orders
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Orders
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterContext.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Orders
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterContext.cs
    startLine: 28
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  syntax:
    content: public abstract IQueryable<IAnOrder> Orders { get; }
    content.vb: Public MustOverride ReadOnly Property Orders As IQueryable(Of IAnOrder)
    parameters: []
    return:
      type: System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IAnOrder}
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Orders*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.OrderNotes
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.OrderNotes
  id: OrderNotes
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext
  langs:
  - csharp
  - vb
  name: OrderNotes
  nameWithType: MonsterContext.OrderNotes
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.OrderNotes
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterContext.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: OrderNotes
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterContext.cs
    startLine: 29
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  syntax:
    content: public abstract IQueryable<IOrderNote> OrderNotes { get; }
    content.vb: Public MustOverride ReadOnly Property OrderNotes As IQueryable(Of IOrderNote)
    parameters: []
    return:
      type: System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IOrderNote}
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.OrderNotes*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.OrderQualityChecks
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.OrderQualityChecks
  id: OrderQualityChecks
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext
  langs:
  - csharp
  - vb
  name: OrderQualityChecks
  nameWithType: MonsterContext.OrderQualityChecks
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.OrderQualityChecks
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterContext.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: OrderQualityChecks
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterContext.cs
    startLine: 30
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  syntax:
    content: public abstract IQueryable<IOrderQualityCheck> OrderQualityChecks { get; }
    content.vb: Public MustOverride ReadOnly Property OrderQualityChecks As IQueryable(Of IOrderQualityCheck)
    parameters: []
    return:
      type: System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IOrderQualityCheck}
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.OrderQualityChecks*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.OrderLines
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.OrderLines
  id: OrderLines
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext
  langs:
  - csharp
  - vb
  name: OrderLines
  nameWithType: MonsterContext.OrderLines
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.OrderLines
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterContext.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: OrderLines
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterContext.cs
    startLine: 31
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  syntax:
    content: public abstract IQueryable<IOrderLine> OrderLines { get; }
    content.vb: Public MustOverride ReadOnly Property OrderLines As IQueryable(Of IOrderLine)
    parameters: []
    return:
      type: System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IOrderLine}
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.OrderLines*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Products
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Products
  id: Products
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext
  langs:
  - csharp
  - vb
  name: Products
  nameWithType: MonsterContext.Products
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Products
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterContext.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Products
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterContext.cs
    startLine: 32
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  syntax:
    content: public abstract IQueryable<IProduct> Products { get; }
    content.vb: Public MustOverride ReadOnly Property Products As IQueryable(Of IProduct)
    parameters: []
    return:
      type: System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IProduct}
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Products*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.ProductDetails
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.ProductDetails
  id: ProductDetails
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext
  langs:
  - csharp
  - vb
  name: ProductDetails
  nameWithType: MonsterContext.ProductDetails
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.ProductDetails
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterContext.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ProductDetails
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterContext.cs
    startLine: 33
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  syntax:
    content: public abstract IQueryable<IProductDetail> ProductDetails { get; }
    content.vb: Public MustOverride ReadOnly Property ProductDetails As IQueryable(Of IProductDetail)
    parameters: []
    return:
      type: System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IProductDetail}
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.ProductDetails*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.ProductReviews
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.ProductReviews
  id: ProductReviews
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext
  langs:
  - csharp
  - vb
  name: ProductReviews
  nameWithType: MonsterContext.ProductReviews
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.ProductReviews
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterContext.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ProductReviews
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterContext.cs
    startLine: 34
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  syntax:
    content: public abstract IQueryable<IProductReview> ProductReviews { get; }
    content.vb: Public MustOverride ReadOnly Property ProductReviews As IQueryable(Of IProductReview)
    parameters: []
    return:
      type: System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IProductReview}
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.ProductReviews*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.ProductPhotos
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.ProductPhotos
  id: ProductPhotos
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext
  langs:
  - csharp
  - vb
  name: ProductPhotos
  nameWithType: MonsterContext.ProductPhotos
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.ProductPhotos
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterContext.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ProductPhotos
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterContext.cs
    startLine: 35
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  syntax:
    content: public abstract IQueryable<IProductPhoto> ProductPhotos { get; }
    content.vb: Public MustOverride ReadOnly Property ProductPhotos As IQueryable(Of IProductPhoto)
    parameters: []
    return:
      type: System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IProductPhoto}
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.ProductPhotos*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.ProductWebFeatures
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.ProductWebFeatures
  id: ProductWebFeatures
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext
  langs:
  - csharp
  - vb
  name: ProductWebFeatures
  nameWithType: MonsterContext.ProductWebFeatures
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.ProductWebFeatures
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterContext.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ProductWebFeatures
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterContext.cs
    startLine: 36
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  syntax:
    content: public abstract IQueryable<IProductWebFeature> ProductWebFeatures { get; }
    content.vb: Public MustOverride ReadOnly Property ProductWebFeatures As IQueryable(Of IProductWebFeature)
    parameters: []
    return:
      type: System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IProductWebFeature}
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.ProductWebFeatures*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Suppliers
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Suppliers
  id: Suppliers
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext
  langs:
  - csharp
  - vb
  name: Suppliers
  nameWithType: MonsterContext.Suppliers
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Suppliers
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterContext.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Suppliers
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterContext.cs
    startLine: 37
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  syntax:
    content: public abstract IQueryable<ISupplier> Suppliers { get; }
    content.vb: Public MustOverride ReadOnly Property Suppliers As IQueryable(Of ISupplier)
    parameters: []
    return:
      type: System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ISupplier}
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Suppliers*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.SupplierLogos
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.SupplierLogos
  id: SupplierLogos
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext
  langs:
  - csharp
  - vb
  name: SupplierLogos
  nameWithType: MonsterContext.SupplierLogos
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.SupplierLogos
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterContext.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: SupplierLogos
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterContext.cs
    startLine: 38
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  syntax:
    content: public abstract IQueryable<ISupplierLogo> SupplierLogos { get; }
    content.vb: Public MustOverride ReadOnly Property SupplierLogos As IQueryable(Of ISupplierLogo)
    parameters: []
    return:
      type: System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ISupplierLogo}
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.SupplierLogos*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.SupplierInformation
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.SupplierInformation
  id: SupplierInformation
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext
  langs:
  - csharp
  - vb
  name: SupplierInformation
  nameWithType: MonsterContext.SupplierInformation
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.SupplierInformation
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterContext.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: SupplierInformation
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterContext.cs
    startLine: 39
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  syntax:
    content: public abstract IQueryable<ISupplierInfo> SupplierInformation { get; }
    content.vb: Public MustOverride ReadOnly Property SupplierInformation As IQueryable(Of ISupplierInfo)
    parameters: []
    return:
      type: System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ISupplierInfo}
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.SupplierInformation*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.CustomerInformation
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.CustomerInformation
  id: CustomerInformation
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext
  langs:
  - csharp
  - vb
  name: CustomerInformation
  nameWithType: MonsterContext.CustomerInformation
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.CustomerInformation
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterContext.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CustomerInformation
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterContext.cs
    startLine: 40
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  syntax:
    content: public abstract IQueryable<ICustomerInfo> CustomerInformation { get; }
    content.vb: Public MustOverride ReadOnly Property CustomerInformation As IQueryable(Of ICustomerInfo)
    parameters: []
    return:
      type: System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomerInfo}
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.CustomerInformation*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Computers
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Computers
  id: Computers
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext
  langs:
  - csharp
  - vb
  name: Computers
  nameWithType: MonsterContext.Computers
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Computers
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterContext.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Computers
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterContext.cs
    startLine: 41
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  syntax:
    content: public abstract IQueryable<IComputer> Computers { get; }
    content.vb: Public MustOverride ReadOnly Property Computers As IQueryable(Of IComputer)
    parameters: []
    return:
      type: System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IComputer}
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Computers*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.ComputerDetails
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.ComputerDetails
  id: ComputerDetails
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext
  langs:
  - csharp
  - vb
  name: ComputerDetails
  nameWithType: MonsterContext.ComputerDetails
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.ComputerDetails
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterContext.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ComputerDetails
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterContext.cs
    startLine: 42
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  syntax:
    content: public abstract IQueryable<IComputerDetail> ComputerDetails { get; }
    content.vb: Public MustOverride ReadOnly Property ComputerDetails As IQueryable(Of IComputerDetail)
    parameters: []
    return:
      type: System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IComputerDetail}
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.ComputerDetails*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Drivers
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Drivers
  id: Drivers
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext
  langs:
  - csharp
  - vb
  name: Drivers
  nameWithType: MonsterContext.Drivers
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Drivers
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterContext.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Drivers
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterContext.cs
    startLine: 43
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  syntax:
    content: public abstract IQueryable<IDriver> Drivers { get; }
    content.vb: Public MustOverride ReadOnly Property Drivers As IQueryable(Of IDriver)
    parameters: []
    return:
      type: System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IDriver}
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Drivers*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Licenses
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Licenses
  id: Licenses
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext
  langs:
  - csharp
  - vb
  name: Licenses
  nameWithType: MonsterContext.Licenses
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Licenses
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterContext.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Licenses
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterContext.cs
    startLine: 44
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  syntax:
    content: public abstract IQueryable<ILicense> Licenses { get; }
    content.vb: Public MustOverride ReadOnly Property Licenses As IQueryable(Of ILicense)
    parameters: []
    return:
      type: System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense}
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Licenses*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.SeedUsingFKs(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.SeedUsingFKs(System.Boolean)
  id: SeedUsingFKs(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext
  langs:
  - csharp
  - vb
  name: SeedUsingFKs(Boolean)
  nameWithType: MonsterContext.SeedUsingFKs(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.SeedUsingFKs(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterContext.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: SeedUsingFKs
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterContext.cs
    startLine: 46
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  syntax:
    content: public abstract void SeedUsingFKs(bool saveChanges = true)
    content.vb: Public MustOverride Sub SeedUsingFKs(saveChanges As Boolean = True)
    parameters:
    - id: saveChanges
      type: System.Boolean
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.SeedUsingFKs*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.SeedUsingNavigations(System.Boolean,System.Boolean,System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.SeedUsingNavigations(System.Boolean,System.Boolean,System.Boolean)
  id: SeedUsingNavigations(System.Boolean,System.Boolean,System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext
  langs:
  - csharp
  - vb
  name: SeedUsingNavigations(Boolean, Boolean, Boolean)
  nameWithType: MonsterContext.SeedUsingNavigations(Boolean, Boolean, Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.SeedUsingNavigations(System.Boolean, System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterContext.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: SeedUsingNavigations
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterContext.cs
    startLine: 47
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  syntax:
    content: public abstract void SeedUsingNavigations(bool dependentNavs, bool principalNavs, bool saveChanges = true)
    content.vb: Public MustOverride Sub SeedUsingNavigations(dependentNavs As Boolean, principalNavs As Boolean, saveChanges As Boolean = True)
    parameters:
    - id: dependentNavs
      type: System.Boolean
    - id: principalNavs
      type: System.Boolean
    - id: saveChanges
      type: System.Boolean
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.SeedUsingNavigations*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.SeedUsingNavigationsWithDeferredAdd(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.SeedUsingNavigationsWithDeferredAdd(System.Boolean)
  id: SeedUsingNavigationsWithDeferredAdd(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext
  langs:
  - csharp
  - vb
  name: SeedUsingNavigationsWithDeferredAdd(Boolean)
  nameWithType: MonsterContext.SeedUsingNavigationsWithDeferredAdd(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.SeedUsingNavigationsWithDeferredAdd(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterContext.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: SeedUsingNavigationsWithDeferredAdd
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterContext.cs
    startLine: 48
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  syntax:
    content: public abstract void SeedUsingNavigationsWithDeferredAdd(bool saveChanges = true)
    content.vb: Public MustOverride Sub SeedUsingNavigationsWithDeferredAdd(saveChanges As Boolean = True)
    parameters:
    - id: saveChanges
      type: System.Boolean
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.SeedUsingNavigationsWithDeferredAdd*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
references:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  commentId: N:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  nameWithType: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.DbContext
  commentId: T:Microsoft.EntityFrameworkCore.DbContext
  parent: Microsoft.EntityFrameworkCore
  isExternal: false
  name: DbContext
  nameWithType: DbContext
  fullName: Microsoft.EntityFrameworkCore.DbContext
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{System.IServiceProvider}
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{System.IServiceProvider}
  parent: Microsoft.EntityFrameworkCore.Infrastructure
  definition: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
  name: IInfrastructure<IServiceProvider>
  nameWithType: IInfrastructure<IServiceProvider>
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<System.IServiceProvider>
  nameWithType.vb: IInfrastructure(Of IServiceProvider)
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of System.IServiceProvider)
  name.vb: IInfrastructure(Of IServiceProvider)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{System#IServiceProvider}#Instance
  commentId: P:Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{System#IServiceProvider}#Instance
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: false
  name: IInfrastructure<IServiceProvider>.Instance
  nameWithType: DbContext.IInfrastructure<IServiceProvider>.Instance
  fullName: Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<System.IServiceProvider>.Instance
  nameWithType.vb: DbContext.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<System.IServiceProvider>.Instance
  name.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<System.IServiceProvider>.Instance
- uid: Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: false
  name: OnConfiguring(DbContextOptionsBuilder)
  nameWithType: DbContext.OnConfiguring(DbContextOptionsBuilder)
  fullName: Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
    name: OnConfiguring
    nameWithType: DbContext.OnConfiguring
    fullName: Microsoft.EntityFrameworkCore.DbContext.OnConfiguring
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder
    name: DbContextOptionsBuilder
    nameWithType: DbContextOptionsBuilder
    fullName: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
    name: OnConfiguring
    nameWithType: DbContext.OnConfiguring
    fullName: Microsoft.EntityFrameworkCore.DbContext.OnConfiguring
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder
    name: DbContextOptionsBuilder
    nameWithType: DbContextOptionsBuilder
    fullName: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: false
  name: OnModelCreating(ModelBuilder)
  nameWithType: DbContext.OnModelCreating(ModelBuilder)
  fullName: Microsoft.EntityFrameworkCore.DbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
    name: OnModelCreating
    nameWithType: DbContext.OnModelCreating
    fullName: Microsoft.EntityFrameworkCore.DbContext.OnModelCreating
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.ModelBuilder
    name: ModelBuilder
    nameWithType: ModelBuilder
    fullName: Microsoft.EntityFrameworkCore.ModelBuilder
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
    name: OnModelCreating
    nameWithType: DbContext.OnModelCreating
    fullName: Microsoft.EntityFrameworkCore.DbContext.OnModelCreating
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.ModelBuilder
    name: ModelBuilder
    nameWithType: ModelBuilder
    fullName: Microsoft.EntityFrameworkCore.ModelBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.SaveChanges
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: false
  name: SaveChanges()
  nameWithType: DbContext.SaveChanges()
  fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChanges()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.SaveChanges
    name: SaveChanges
    nameWithType: DbContext.SaveChanges
    fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChanges
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.SaveChanges
    name: SaveChanges
    nameWithType: DbContext.SaveChanges
    fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChanges
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.SaveChanges(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: SaveChanges(Boolean)
  nameWithType: DbContext.SaveChanges(Boolean)
  fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChanges(System.Boolean)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.SaveChanges(System.Boolean)
    name: SaveChanges
    nameWithType: DbContext.SaveChanges
    fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChanges
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.SaveChanges(System.Boolean)
    name: SaveChanges
    nameWithType: DbContext.SaveChanges
    fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChanges
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: SaveChangesAsync(CancellationToken)
  nameWithType: DbContext.SaveChangesAsync(CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Threading.CancellationToken)
    name: SaveChangesAsync
    nameWithType: DbContext.SaveChangesAsync
    fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Threading.CancellationToken)
    name: SaveChangesAsync
    nameWithType: DbContext.SaveChangesAsync
    fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Boolean,System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Boolean,System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: SaveChangesAsync(Boolean, CancellationToken)
  nameWithType: DbContext.SaveChangesAsync(Boolean, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Boolean, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Boolean,System.Threading.CancellationToken)
    name: SaveChangesAsync
    nameWithType: DbContext.SaveChangesAsync
    fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Boolean,System.Threading.CancellationToken)
    name: SaveChangesAsync
    nameWithType: DbContext.SaveChangesAsync
    fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Dispose
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Dispose
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: false
  name: Dispose()
  nameWithType: DbContext.Dispose()
  fullName: Microsoft.EntityFrameworkCore.DbContext.Dispose()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Dispose
    name: Dispose
    nameWithType: DbContext.Dispose
    fullName: Microsoft.EntityFrameworkCore.DbContext.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Dispose
    name: Dispose
    nameWithType: DbContext.Dispose
    fullName: Microsoft.EntityFrameworkCore.DbContext.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Entry``1({TEntity})
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Entry``1(``0)
  parent: Microsoft.EntityFrameworkCore.DbContext
  definition: Microsoft.EntityFrameworkCore.DbContext.Entry``1(``0)
  name: Entry<TEntity>(TEntity)
  nameWithType: DbContext.Entry<TEntity>(TEntity)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Entry<TEntity>(TEntity)
  nameWithType.vb: DbContext.Entry(Of TEntity)(TEntity)
  fullname.vb: Microsoft.EntityFrameworkCore.DbContext.Entry(Of TEntity)(TEntity)
  name.vb: Entry(Of TEntity)(TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Entry``1(``0)
    name: Entry<TEntity>
    nameWithType: DbContext.Entry<TEntity>
    fullName: Microsoft.EntityFrameworkCore.DbContext.Entry<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Entry``1(``0)
    name: Entry(Of TEntity)
    nameWithType: DbContext.Entry(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.DbContext.Entry(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Entry(System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Entry(System.Object)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: Entry(Object)
  nameWithType: DbContext.Entry(Object)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Entry(System.Object)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Entry(System.Object)
    name: Entry
    nameWithType: DbContext.Entry
    fullName: Microsoft.EntityFrameworkCore.DbContext.Entry
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Entry(System.Object)
    name: Entry
    nameWithType: DbContext.Entry
    fullName: Microsoft.EntityFrameworkCore.DbContext.Entry
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Add``1({TEntity})
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Add``1(``0)
  parent: Microsoft.EntityFrameworkCore.DbContext
  definition: Microsoft.EntityFrameworkCore.DbContext.Add``1(``0)
  name: Add<TEntity>(TEntity)
  nameWithType: DbContext.Add<TEntity>(TEntity)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Add<TEntity>(TEntity)
  nameWithType.vb: DbContext.Add(Of TEntity)(TEntity)
  fullname.vb: Microsoft.EntityFrameworkCore.DbContext.Add(Of TEntity)(TEntity)
  name.vb: Add(Of TEntity)(TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Add``1(``0)
    name: Add<TEntity>
    nameWithType: DbContext.Add<TEntity>
    fullName: Microsoft.EntityFrameworkCore.DbContext.Add<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Add``1(``0)
    name: Add(Of TEntity)
    nameWithType: DbContext.Add(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.DbContext.Add(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.AddAsync``1({TEntity},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.AddAsync``1(``0,System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.DbContext
  definition: Microsoft.EntityFrameworkCore.DbContext.AddAsync``1(``0,System.Threading.CancellationToken)
  name: AddAsync<TEntity>(TEntity, CancellationToken)
  nameWithType: DbContext.AddAsync<TEntity>(TEntity, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.DbContext.AddAsync<TEntity>(TEntity, System.Threading.CancellationToken)
  nameWithType.vb: DbContext.AddAsync(Of TEntity)(TEntity, CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.DbContext.AddAsync(Of TEntity)(TEntity, System.Threading.CancellationToken)
  name.vb: AddAsync(Of TEntity)(TEntity, CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AddAsync``1(``0,System.Threading.CancellationToken)
    name: AddAsync<TEntity>
    nameWithType: DbContext.AddAsync<TEntity>
    fullName: Microsoft.EntityFrameworkCore.DbContext.AddAsync<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AddAsync``1(``0,System.Threading.CancellationToken)
    name: AddAsync(Of TEntity)
    nameWithType: DbContext.AddAsync(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.DbContext.AddAsync(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Attach``1({TEntity})
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Attach``1(``0)
  parent: Microsoft.EntityFrameworkCore.DbContext
  definition: Microsoft.EntityFrameworkCore.DbContext.Attach``1(``0)
  name: Attach<TEntity>(TEntity)
  nameWithType: DbContext.Attach<TEntity>(TEntity)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Attach<TEntity>(TEntity)
  nameWithType.vb: DbContext.Attach(Of TEntity)(TEntity)
  fullname.vb: Microsoft.EntityFrameworkCore.DbContext.Attach(Of TEntity)(TEntity)
  name.vb: Attach(Of TEntity)(TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Attach``1(``0)
    name: Attach<TEntity>
    nameWithType: DbContext.Attach<TEntity>
    fullName: Microsoft.EntityFrameworkCore.DbContext.Attach<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Attach``1(``0)
    name: Attach(Of TEntity)
    nameWithType: DbContext.Attach(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.DbContext.Attach(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Update``1({TEntity})
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Update``1(``0)
  parent: Microsoft.EntityFrameworkCore.DbContext
  definition: Microsoft.EntityFrameworkCore.DbContext.Update``1(``0)
  name: Update<TEntity>(TEntity)
  nameWithType: DbContext.Update<TEntity>(TEntity)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Update<TEntity>(TEntity)
  nameWithType.vb: DbContext.Update(Of TEntity)(TEntity)
  fullname.vb: Microsoft.EntityFrameworkCore.DbContext.Update(Of TEntity)(TEntity)
  name.vb: Update(Of TEntity)(TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Update``1(``0)
    name: Update<TEntity>
    nameWithType: DbContext.Update<TEntity>
    fullName: Microsoft.EntityFrameworkCore.DbContext.Update<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Update``1(``0)
    name: Update(Of TEntity)
    nameWithType: DbContext.Update(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.DbContext.Update(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Remove``1({TEntity})
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Remove``1(``0)
  parent: Microsoft.EntityFrameworkCore.DbContext
  definition: Microsoft.EntityFrameworkCore.DbContext.Remove``1(``0)
  name: Remove<TEntity>(TEntity)
  nameWithType: DbContext.Remove<TEntity>(TEntity)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Remove<TEntity>(TEntity)
  nameWithType.vb: DbContext.Remove(Of TEntity)(TEntity)
  fullname.vb: Microsoft.EntityFrameworkCore.DbContext.Remove(Of TEntity)(TEntity)
  name.vb: Remove(Of TEntity)(TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Remove``1(``0)
    name: Remove<TEntity>
    nameWithType: DbContext.Remove<TEntity>
    fullName: Microsoft.EntityFrameworkCore.DbContext.Remove<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Remove``1(``0)
    name: Remove(Of TEntity)
    nameWithType: DbContext.Remove(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.DbContext.Remove(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Add(System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Add(System.Object)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: Add(Object)
  nameWithType: DbContext.Add(Object)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Add(System.Object)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Add(System.Object)
    name: Add
    nameWithType: DbContext.Add
    fullName: Microsoft.EntityFrameworkCore.DbContext.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Add(System.Object)
    name: Add
    nameWithType: DbContext.Add
    fullName: Microsoft.EntityFrameworkCore.DbContext.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.AddAsync(System.Object,System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.AddAsync(System.Object,System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: AddAsync(Object, CancellationToken)
  nameWithType: DbContext.AddAsync(Object, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.DbContext.AddAsync(System.Object, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AddAsync(System.Object,System.Threading.CancellationToken)
    name: AddAsync
    nameWithType: DbContext.AddAsync
    fullName: Microsoft.EntityFrameworkCore.DbContext.AddAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AddAsync(System.Object,System.Threading.CancellationToken)
    name: AddAsync
    nameWithType: DbContext.AddAsync
    fullName: Microsoft.EntityFrameworkCore.DbContext.AddAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Attach(System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Attach(System.Object)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: Attach(Object)
  nameWithType: DbContext.Attach(Object)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Attach(System.Object)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Attach(System.Object)
    name: Attach
    nameWithType: DbContext.Attach
    fullName: Microsoft.EntityFrameworkCore.DbContext.Attach
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Attach(System.Object)
    name: Attach
    nameWithType: DbContext.Attach
    fullName: Microsoft.EntityFrameworkCore.DbContext.Attach
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Update(System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Update(System.Object)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: Update(Object)
  nameWithType: DbContext.Update(Object)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Update(System.Object)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Update(System.Object)
    name: Update
    nameWithType: DbContext.Update
    fullName: Microsoft.EntityFrameworkCore.DbContext.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Update(System.Object)
    name: Update
    nameWithType: DbContext.Update
    fullName: Microsoft.EntityFrameworkCore.DbContext.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Remove(System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Remove(System.Object)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: Remove(Object)
  nameWithType: DbContext.Remove(Object)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Remove(System.Object)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Remove(System.Object)
    name: Remove
    nameWithType: DbContext.Remove
    fullName: Microsoft.EntityFrameworkCore.DbContext.Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Remove(System.Object)
    name: Remove
    nameWithType: DbContext.Remove
    fullName: Microsoft.EntityFrameworkCore.DbContext.Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Object[])
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: AddRange(Object[])
  nameWithType: DbContext.AddRange(Object[])
  fullName: Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Object[])
  nameWithType.vb: DbContext.AddRange(Object())
  fullname.vb: Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Object())
  name.vb: AddRange(Object())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Object[])
    name: AddRange
    nameWithType: DbContext.AddRange
    fullName: Microsoft.EntityFrameworkCore.DbContext.AddRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Object[])
    name: AddRange
    nameWithType: DbContext.AddRange
    fullName: Microsoft.EntityFrameworkCore.DbContext.AddRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Object[])
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: AddRangeAsync(Object[])
  nameWithType: DbContext.AddRangeAsync(Object[])
  fullName: Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Object[])
  nameWithType.vb: DbContext.AddRangeAsync(Object())
  fullname.vb: Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Object())
  name.vb: AddRangeAsync(Object())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Object[])
    name: AddRangeAsync
    nameWithType: DbContext.AddRangeAsync
    fullName: Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Object[])
    name: AddRangeAsync
    nameWithType: DbContext.AddRangeAsync
    fullName: Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Object[])
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: AttachRange(Object[])
  nameWithType: DbContext.AttachRange(Object[])
  fullName: Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Object[])
  nameWithType.vb: DbContext.AttachRange(Object())
  fullname.vb: Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Object())
  name.vb: AttachRange(Object())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Object[])
    name: AttachRange
    nameWithType: DbContext.AttachRange
    fullName: Microsoft.EntityFrameworkCore.DbContext.AttachRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Object[])
    name: AttachRange
    nameWithType: DbContext.AttachRange
    fullName: Microsoft.EntityFrameworkCore.DbContext.AttachRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Object[])
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: UpdateRange(Object[])
  nameWithType: DbContext.UpdateRange(Object[])
  fullName: Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Object[])
  nameWithType.vb: DbContext.UpdateRange(Object())
  fullname.vb: Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Object())
  name.vb: UpdateRange(Object())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Object[])
    name: UpdateRange
    nameWithType: DbContext.UpdateRange
    fullName: Microsoft.EntityFrameworkCore.DbContext.UpdateRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Object[])
    name: UpdateRange
    nameWithType: DbContext.UpdateRange
    fullName: Microsoft.EntityFrameworkCore.DbContext.UpdateRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Object[])
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: RemoveRange(Object[])
  nameWithType: DbContext.RemoveRange(Object[])
  fullName: Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Object[])
  nameWithType.vb: DbContext.RemoveRange(Object())
  fullname.vb: Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Object())
  name.vb: RemoveRange(Object())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Object[])
    name: RemoveRange
    nameWithType: DbContext.RemoveRange
    fullName: Microsoft.EntityFrameworkCore.DbContext.RemoveRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Object[])
    name: RemoveRange
    nameWithType: DbContext.RemoveRange
    fullName: Microsoft.EntityFrameworkCore.DbContext.RemoveRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Collections.Generic.IEnumerable{System.Object})
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Collections.Generic.IEnumerable{System.Object})
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: AddRange(IEnumerable<Object>)
  nameWithType: DbContext.AddRange(IEnumerable<Object>)
  fullName: Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Collections.Generic.IEnumerable<System.Object>)
  nameWithType.vb: DbContext.AddRange(IEnumerable(Of Object))
  fullname.vb: Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Collections.Generic.IEnumerable(Of System.Object))
  name.vb: AddRange(IEnumerable(Of Object))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Collections.Generic.IEnumerable{System.Object})
    name: AddRange
    nameWithType: DbContext.AddRange
    fullName: Microsoft.EntityFrameworkCore.DbContext.AddRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Collections.Generic.IEnumerable{System.Object})
    name: AddRange
    nameWithType: DbContext.AddRange
    fullName: Microsoft.EntityFrameworkCore.DbContext.AddRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Collections.Generic.IEnumerable{System.Object},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Collections.Generic.IEnumerable{System.Object},System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: AddRangeAsync(IEnumerable<Object>, CancellationToken)
  nameWithType: DbContext.AddRangeAsync(IEnumerable<Object>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Collections.Generic.IEnumerable<System.Object>, System.Threading.CancellationToken)
  nameWithType.vb: DbContext.AddRangeAsync(IEnumerable(Of Object), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Collections.Generic.IEnumerable(Of System.Object), System.Threading.CancellationToken)
  name.vb: AddRangeAsync(IEnumerable(Of Object), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Collections.Generic.IEnumerable{System.Object},System.Threading.CancellationToken)
    name: AddRangeAsync
    nameWithType: DbContext.AddRangeAsync
    fullName: Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Collections.Generic.IEnumerable{System.Object},System.Threading.CancellationToken)
    name: AddRangeAsync
    nameWithType: DbContext.AddRangeAsync
    fullName: Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Collections.Generic.IEnumerable{System.Object})
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Collections.Generic.IEnumerable{System.Object})
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: AttachRange(IEnumerable<Object>)
  nameWithType: DbContext.AttachRange(IEnumerable<Object>)
  fullName: Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Collections.Generic.IEnumerable<System.Object>)
  nameWithType.vb: DbContext.AttachRange(IEnumerable(Of Object))
  fullname.vb: Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Collections.Generic.IEnumerable(Of System.Object))
  name.vb: AttachRange(IEnumerable(Of Object))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Collections.Generic.IEnumerable{System.Object})
    name: AttachRange
    nameWithType: DbContext.AttachRange
    fullName: Microsoft.EntityFrameworkCore.DbContext.AttachRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Collections.Generic.IEnumerable{System.Object})
    name: AttachRange
    nameWithType: DbContext.AttachRange
    fullName: Microsoft.EntityFrameworkCore.DbContext.AttachRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Collections.Generic.IEnumerable{System.Object})
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Collections.Generic.IEnumerable{System.Object})
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: UpdateRange(IEnumerable<Object>)
  nameWithType: DbContext.UpdateRange(IEnumerable<Object>)
  fullName: Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Collections.Generic.IEnumerable<System.Object>)
  nameWithType.vb: DbContext.UpdateRange(IEnumerable(Of Object))
  fullname.vb: Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Collections.Generic.IEnumerable(Of System.Object))
  name.vb: UpdateRange(IEnumerable(Of Object))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Collections.Generic.IEnumerable{System.Object})
    name: UpdateRange
    nameWithType: DbContext.UpdateRange
    fullName: Microsoft.EntityFrameworkCore.DbContext.UpdateRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Collections.Generic.IEnumerable{System.Object})
    name: UpdateRange
    nameWithType: DbContext.UpdateRange
    fullName: Microsoft.EntityFrameworkCore.DbContext.UpdateRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Collections.Generic.IEnumerable{System.Object})
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Collections.Generic.IEnumerable{System.Object})
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: RemoveRange(IEnumerable<Object>)
  nameWithType: DbContext.RemoveRange(IEnumerable<Object>)
  fullName: Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Collections.Generic.IEnumerable<System.Object>)
  nameWithType.vb: DbContext.RemoveRange(IEnumerable(Of Object))
  fullname.vb: Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Collections.Generic.IEnumerable(Of System.Object))
  name.vb: RemoveRange(IEnumerable(Of Object))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Collections.Generic.IEnumerable{System.Object})
    name: RemoveRange
    nameWithType: DbContext.RemoveRange
    fullName: Microsoft.EntityFrameworkCore.DbContext.RemoveRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Collections.Generic.IEnumerable{System.Object})
    name: RemoveRange
    nameWithType: DbContext.RemoveRange
    fullName: Microsoft.EntityFrameworkCore.DbContext.RemoveRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Database
  commentId: P:Microsoft.EntityFrameworkCore.DbContext.Database
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: false
  name: Database
  nameWithType: DbContext.Database
  fullName: Microsoft.EntityFrameworkCore.DbContext.Database
- uid: Microsoft.EntityFrameworkCore.DbContext.ChangeTracker
  commentId: P:Microsoft.EntityFrameworkCore.DbContext.ChangeTracker
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: false
  name: ChangeTracker
  nameWithType: DbContext.ChangeTracker
  fullName: Microsoft.EntityFrameworkCore.DbContext.ChangeTracker
- uid: Microsoft.EntityFrameworkCore.DbContext.Model
  commentId: P:Microsoft.EntityFrameworkCore.DbContext.Model
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: false
  name: Model
  nameWithType: DbContext.Model
  fullName: Microsoft.EntityFrameworkCore.DbContext.Model
- uid: Microsoft.EntityFrameworkCore.DbContext.Set``1
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Set``1
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: false
  name: Set<TEntity>()
  nameWithType: DbContext.Set<TEntity>()
  fullName: Microsoft.EntityFrameworkCore.DbContext.Set<TEntity>()
  nameWithType.vb: DbContext.Set(Of TEntity)()
  fullname.vb: Microsoft.EntityFrameworkCore.DbContext.Set(Of TEntity)()
  name.vb: Set(Of TEntity)()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Set``1
    name: Set<TEntity>
    nameWithType: DbContext.Set<TEntity>
    fullName: Microsoft.EntityFrameworkCore.DbContext.Set<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Set``1
    name: Set(Of TEntity)
    nameWithType: DbContext.Set(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.DbContext.Set(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Find(System.Type,System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Find(System.Type,System.Object[])
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: Find(Type, Object[])
  nameWithType: DbContext.Find(Type, Object[])
  fullName: Microsoft.EntityFrameworkCore.DbContext.Find(System.Type, System.Object[])
  nameWithType.vb: DbContext.Find(Type, Object())
  fullname.vb: Microsoft.EntityFrameworkCore.DbContext.Find(System.Type, System.Object())
  name.vb: Find(Type, Object())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Find(System.Type,System.Object[])
    name: Find
    nameWithType: DbContext.Find
    fullName: Microsoft.EntityFrameworkCore.DbContext.Find
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Find(System.Type,System.Object[])
    name: Find
    nameWithType: DbContext.Find
    fullName: Microsoft.EntityFrameworkCore.DbContext.Find
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type,System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type,System.Object[])
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: FindAsync(Type, Object[])
  nameWithType: DbContext.FindAsync(Type, Object[])
  fullName: Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type, System.Object[])
  nameWithType.vb: DbContext.FindAsync(Type, Object())
  fullname.vb: Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type, System.Object())
  name.vb: FindAsync(Type, Object())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type,System.Object[])
    name: FindAsync
    nameWithType: DbContext.FindAsync
    fullName: Microsoft.EntityFrameworkCore.DbContext.FindAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type,System.Object[])
    name: FindAsync
    nameWithType: DbContext.FindAsync
    fullName: Microsoft.EntityFrameworkCore.DbContext.FindAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type,System.Object[],System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type,System.Object[],System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: FindAsync(Type, Object[], CancellationToken)
  nameWithType: DbContext.FindAsync(Type, Object[], CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type, System.Object[], System.Threading.CancellationToken)
  nameWithType.vb: DbContext.FindAsync(Type, Object(), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type, System.Object(), System.Threading.CancellationToken)
  name.vb: FindAsync(Type, Object(), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type,System.Object[],System.Threading.CancellationToken)
    name: FindAsync
    nameWithType: DbContext.FindAsync
    fullName: Microsoft.EntityFrameworkCore.DbContext.FindAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type,System.Object[],System.Threading.CancellationToken)
    name: FindAsync
    nameWithType: DbContext.FindAsync
    fullName: Microsoft.EntityFrameworkCore.DbContext.FindAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Find``1(System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Find``1(System.Object[])
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: Find<TEntity>(Object[])
  nameWithType: DbContext.Find<TEntity>(Object[])
  fullName: Microsoft.EntityFrameworkCore.DbContext.Find<TEntity>(System.Object[])
  nameWithType.vb: DbContext.Find(Of TEntity)(Object())
  fullname.vb: Microsoft.EntityFrameworkCore.DbContext.Find(Of TEntity)(System.Object())
  name.vb: Find(Of TEntity)(Object())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Find``1(System.Object[])
    name: Find<TEntity>
    nameWithType: DbContext.Find<TEntity>
    fullName: Microsoft.EntityFrameworkCore.DbContext.Find<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Find``1(System.Object[])
    name: Find(Of TEntity)
    nameWithType: DbContext.Find(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.DbContext.Find(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.FindAsync``1(System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.FindAsync``1(System.Object[])
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: FindAsync<TEntity>(Object[])
  nameWithType: DbContext.FindAsync<TEntity>(Object[])
  fullName: Microsoft.EntityFrameworkCore.DbContext.FindAsync<TEntity>(System.Object[])
  nameWithType.vb: DbContext.FindAsync(Of TEntity)(Object())
  fullname.vb: Microsoft.EntityFrameworkCore.DbContext.FindAsync(Of TEntity)(System.Object())
  name.vb: FindAsync(Of TEntity)(Object())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.FindAsync``1(System.Object[])
    name: FindAsync<TEntity>
    nameWithType: DbContext.FindAsync<TEntity>
    fullName: Microsoft.EntityFrameworkCore.DbContext.FindAsync<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.FindAsync``1(System.Object[])
    name: FindAsync(Of TEntity)
    nameWithType: DbContext.FindAsync(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.DbContext.FindAsync(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.FindAsync``1(System.Object[],System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.FindAsync``1(System.Object[],System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: FindAsync<TEntity>(Object[], CancellationToken)
  nameWithType: DbContext.FindAsync<TEntity>(Object[], CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.DbContext.FindAsync<TEntity>(System.Object[], System.Threading.CancellationToken)
  nameWithType.vb: DbContext.FindAsync(Of TEntity)(Object(), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.DbContext.FindAsync(Of TEntity)(System.Object(), System.Threading.CancellationToken)
  name.vb: FindAsync(Of TEntity)(Object(), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.FindAsync``1(System.Object[],System.Threading.CancellationToken)
    name: FindAsync<TEntity>
    nameWithType: DbContext.FindAsync<TEntity>
    fullName: Microsoft.EntityFrameworkCore.DbContext.FindAsync<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.FindAsync``1(System.Object[],System.Threading.CancellationToken)
    name: FindAsync(Of TEntity)
    nameWithType: DbContext.FindAsync(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.DbContext.FindAsync(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore
  commentId: N:Microsoft.EntityFrameworkCore
  isExternal: false
  name: Microsoft.EntityFrameworkCore
  nameWithType: Microsoft.EntityFrameworkCore
  fullName: Microsoft.EntityFrameworkCore
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
  isExternal: false
  name: IInfrastructure<T>
  nameWithType: IInfrastructure<T>
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<T>
  nameWithType.vb: IInfrastructure(Of T)
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of T)
  name.vb: IInfrastructure(Of T)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure
  commentId: N:Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Infrastructure
  nameWithType: Microsoft.EntityFrameworkCore.Infrastructure
  fullName: Microsoft.EntityFrameworkCore.Infrastructure
- uid: Microsoft.EntityFrameworkCore.DbContext.Entry``1(``0)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Entry``1(``0)
  isExternal: false
  name: Entry<TEntity>(TEntity)
  nameWithType: DbContext.Entry<TEntity>(TEntity)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Entry<TEntity>(TEntity)
  nameWithType.vb: DbContext.Entry(Of TEntity)(TEntity)
  fullname.vb: Microsoft.EntityFrameworkCore.DbContext.Entry(Of TEntity)(TEntity)
  name.vb: Entry(Of TEntity)(TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Entry``1(``0)
    name: Entry<TEntity>
    nameWithType: DbContext.Entry<TEntity>
    fullName: Microsoft.EntityFrameworkCore.DbContext.Entry<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Entry``1(``0)
    name: Entry(Of TEntity)
    nameWithType: DbContext.Entry(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.DbContext.Entry(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Add``1(``0)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Add``1(``0)
  isExternal: false
  name: Add<TEntity>(TEntity)
  nameWithType: DbContext.Add<TEntity>(TEntity)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Add<TEntity>(TEntity)
  nameWithType.vb: DbContext.Add(Of TEntity)(TEntity)
  fullname.vb: Microsoft.EntityFrameworkCore.DbContext.Add(Of TEntity)(TEntity)
  name.vb: Add(Of TEntity)(TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Add``1(``0)
    name: Add<TEntity>
    nameWithType: DbContext.Add<TEntity>
    fullName: Microsoft.EntityFrameworkCore.DbContext.Add<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Add``1(``0)
    name: Add(Of TEntity)
    nameWithType: DbContext.Add(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.DbContext.Add(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.AddAsync``1(``0,System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.AddAsync``1(``0,System.Threading.CancellationToken)
  isExternal: true
  name: AddAsync<TEntity>(TEntity, CancellationToken)
  nameWithType: DbContext.AddAsync<TEntity>(TEntity, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.DbContext.AddAsync<TEntity>(TEntity, System.Threading.CancellationToken)
  nameWithType.vb: DbContext.AddAsync(Of TEntity)(TEntity, CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.DbContext.AddAsync(Of TEntity)(TEntity, System.Threading.CancellationToken)
  name.vb: AddAsync(Of TEntity)(TEntity, CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AddAsync``1(``0,System.Threading.CancellationToken)
    name: AddAsync<TEntity>
    nameWithType: DbContext.AddAsync<TEntity>
    fullName: Microsoft.EntityFrameworkCore.DbContext.AddAsync<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AddAsync``1(``0,System.Threading.CancellationToken)
    name: AddAsync(Of TEntity)
    nameWithType: DbContext.AddAsync(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.DbContext.AddAsync(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Attach``1(``0)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Attach``1(``0)
  isExternal: false
  name: Attach<TEntity>(TEntity)
  nameWithType: DbContext.Attach<TEntity>(TEntity)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Attach<TEntity>(TEntity)
  nameWithType.vb: DbContext.Attach(Of TEntity)(TEntity)
  fullname.vb: Microsoft.EntityFrameworkCore.DbContext.Attach(Of TEntity)(TEntity)
  name.vb: Attach(Of TEntity)(TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Attach``1(``0)
    name: Attach<TEntity>
    nameWithType: DbContext.Attach<TEntity>
    fullName: Microsoft.EntityFrameworkCore.DbContext.Attach<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Attach``1(``0)
    name: Attach(Of TEntity)
    nameWithType: DbContext.Attach(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.DbContext.Attach(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Update``1(``0)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Update``1(``0)
  isExternal: false
  name: Update<TEntity>(TEntity)
  nameWithType: DbContext.Update<TEntity>(TEntity)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Update<TEntity>(TEntity)
  nameWithType.vb: DbContext.Update(Of TEntity)(TEntity)
  fullname.vb: Microsoft.EntityFrameworkCore.DbContext.Update(Of TEntity)(TEntity)
  name.vb: Update(Of TEntity)(TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Update``1(``0)
    name: Update<TEntity>
    nameWithType: DbContext.Update<TEntity>
    fullName: Microsoft.EntityFrameworkCore.DbContext.Update<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Update``1(``0)
    name: Update(Of TEntity)
    nameWithType: DbContext.Update(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.DbContext.Update(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Remove``1(``0)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Remove``1(``0)
  isExternal: false
  name: Remove<TEntity>(TEntity)
  nameWithType: DbContext.Remove<TEntity>(TEntity)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Remove<TEntity>(TEntity)
  nameWithType.vb: DbContext.Remove(Of TEntity)(TEntity)
  fullname.vb: Microsoft.EntityFrameworkCore.DbContext.Remove(Of TEntity)(TEntity)
  name.vb: Remove(Of TEntity)(TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Remove``1(``0)
    name: Remove<TEntity>
    nameWithType: DbContext.Remove<TEntity>
    fullName: Microsoft.EntityFrameworkCore.DbContext.Remove<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Remove``1(``0)
    name: Remove(Of TEntity)
    nameWithType: DbContext.Remove(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.DbContext.Remove(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.#ctor*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.#ctor
  isExternal: false
  name: MonsterContext
  nameWithType: MonsterContext.MonsterContext
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.MonsterContext
- uid: Microsoft.EntityFrameworkCore.DbContextOptions
  commentId: T:Microsoft.EntityFrameworkCore.DbContextOptions
  parent: Microsoft.EntityFrameworkCore
  isExternal: false
  name: DbContextOptions
  nameWithType: DbContextOptions
  fullName: Microsoft.EntityFrameworkCore.DbContextOptions
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Customers*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Customers
  isExternal: false
  name: Customers
  nameWithType: MonsterContext.Customers
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Customers
- uid: System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer}
  commentId: T:System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer}
  parent: System.Linq
  definition: System.Linq.IQueryable`1
  name: IQueryable<ICustomer>
  nameWithType: IQueryable<ICustomer>
  fullName: System.Linq.IQueryable<Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer>
  nameWithType.vb: IQueryable(Of ICustomer)
  fullname.vb: System.Linq.IQueryable(Of Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer)
  name.vb: IQueryable(Of ICustomer)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer
    name: ICustomer
    nameWithType: ICustomer
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer
    name: ICustomer
    nameWithType: ICustomer
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable`1
  commentId: T:System.Linq.IQueryable`1
  isExternal: true
  name: IQueryable<T>
  nameWithType: IQueryable<T>
  fullName: System.Linq.IQueryable<T>
  nameWithType.vb: IQueryable(Of T)
  fullname.vb: System.Linq.IQueryable(Of T)
  name.vb: IQueryable(Of T)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq
  commentId: N:System.Linq
  isExternal: false
  name: System.Linq
  nameWithType: System.Linq
  fullName: System.Linq
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Barcodes*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Barcodes
  isExternal: false
  name: Barcodes
  nameWithType: MonsterContext.Barcodes
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Barcodes
- uid: System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IBarcode}
  commentId: T:System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IBarcode}
  parent: System.Linq
  definition: System.Linq.IQueryable`1
  name: IQueryable<IBarcode>
  nameWithType: IQueryable<IBarcode>
  fullName: System.Linq.IQueryable<Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IBarcode>
  nameWithType.vb: IQueryable(Of IBarcode)
  fullname.vb: System.Linq.IQueryable(Of Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IBarcode)
  name.vb: IQueryable(Of IBarcode)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IBarcode
    name: IBarcode
    nameWithType: IBarcode
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IBarcode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IBarcode
    name: IBarcode
    nameWithType: IBarcode
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IBarcode
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.IncorrectScans*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.IncorrectScans
  isExternal: false
  name: IncorrectScans
  nameWithType: MonsterContext.IncorrectScans
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.IncorrectScans
- uid: System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IIncorrectScan}
  commentId: T:System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IIncorrectScan}
  parent: System.Linq
  definition: System.Linq.IQueryable`1
  name: IQueryable<IIncorrectScan>
  nameWithType: IQueryable<IIncorrectScan>
  fullName: System.Linq.IQueryable<Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IIncorrectScan>
  nameWithType.vb: IQueryable(Of IIncorrectScan)
  fullname.vb: System.Linq.IQueryable(Of Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IIncorrectScan)
  name.vb: IQueryable(Of IIncorrectScan)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IIncorrectScan
    name: IIncorrectScan
    nameWithType: IIncorrectScan
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IIncorrectScan
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IIncorrectScan
    name: IIncorrectScan
    nameWithType: IIncorrectScan
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IIncorrectScan
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.BarcodeDetails*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.BarcodeDetails
  isExternal: false
  name: BarcodeDetails
  nameWithType: MonsterContext.BarcodeDetails
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.BarcodeDetails
- uid: System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IBarcodeDetail}
  commentId: T:System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IBarcodeDetail}
  parent: System.Linq
  definition: System.Linq.IQueryable`1
  name: IQueryable<IBarcodeDetail>
  nameWithType: IQueryable<IBarcodeDetail>
  fullName: System.Linq.IQueryable<Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IBarcodeDetail>
  nameWithType.vb: IQueryable(Of IBarcodeDetail)
  fullname.vb: System.Linq.IQueryable(Of Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IBarcodeDetail)
  name.vb: IQueryable(Of IBarcodeDetail)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IBarcodeDetail
    name: IBarcodeDetail
    nameWithType: IBarcodeDetail
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IBarcodeDetail
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IBarcodeDetail
    name: IBarcodeDetail
    nameWithType: IBarcodeDetail
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IBarcodeDetail
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Complaints*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Complaints
  isExternal: false
  name: Complaints
  nameWithType: MonsterContext.Complaints
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Complaints
- uid: System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IComplaint}
  commentId: T:System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IComplaint}
  parent: System.Linq
  definition: System.Linq.IQueryable`1
  name: IQueryable<IComplaint>
  nameWithType: IQueryable<IComplaint>
  fullName: System.Linq.IQueryable<Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IComplaint>
  nameWithType.vb: IQueryable(Of IComplaint)
  fullname.vb: System.Linq.IQueryable(Of Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IComplaint)
  name.vb: IQueryable(Of IComplaint)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IComplaint
    name: IComplaint
    nameWithType: IComplaint
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IComplaint
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IComplaint
    name: IComplaint
    nameWithType: IComplaint
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IComplaint
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Resolutions*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Resolutions
  isExternal: false
  name: Resolutions
  nameWithType: MonsterContext.Resolutions
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Resolutions
- uid: System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IResolution}
  commentId: T:System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IResolution}
  parent: System.Linq
  definition: System.Linq.IQueryable`1
  name: IQueryable<IResolution>
  nameWithType: IQueryable<IResolution>
  fullName: System.Linq.IQueryable<Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IResolution>
  nameWithType.vb: IQueryable(Of IResolution)
  fullname.vb: System.Linq.IQueryable(Of Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IResolution)
  name.vb: IQueryable(Of IResolution)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IResolution
    name: IResolution
    nameWithType: IResolution
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IResolution
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IResolution
    name: IResolution
    nameWithType: IResolution
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IResolution
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Logins*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Logins
  isExternal: false
  name: Logins
  nameWithType: MonsterContext.Logins
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Logins
- uid: System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILogin}
  commentId: T:System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILogin}
  parent: System.Linq
  definition: System.Linq.IQueryable`1
  name: IQueryable<ILogin>
  nameWithType: IQueryable<ILogin>
  fullName: System.Linq.IQueryable<Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILogin>
  nameWithType.vb: IQueryable(Of ILogin)
  fullname.vb: System.Linq.IQueryable(Of Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILogin)
  name.vb: IQueryable(Of ILogin)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILogin
    name: ILogin
    nameWithType: ILogin
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILogin
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILogin
    name: ILogin
    nameWithType: ILogin
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILogin
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.SuspiciousActivities*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.SuspiciousActivities
  isExternal: false
  name: SuspiciousActivities
  nameWithType: MonsterContext.SuspiciousActivities
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.SuspiciousActivities
- uid: System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ISuspiciousActivity}
  commentId: T:System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ISuspiciousActivity}
  parent: System.Linq
  definition: System.Linq.IQueryable`1
  name: IQueryable<ISuspiciousActivity>
  nameWithType: IQueryable<ISuspiciousActivity>
  fullName: System.Linq.IQueryable<Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ISuspiciousActivity>
  nameWithType.vb: IQueryable(Of ISuspiciousActivity)
  fullname.vb: System.Linq.IQueryable(Of Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ISuspiciousActivity)
  name.vb: IQueryable(Of ISuspiciousActivity)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ISuspiciousActivity
    name: ISuspiciousActivity
    nameWithType: ISuspiciousActivity
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ISuspiciousActivity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ISuspiciousActivity
    name: ISuspiciousActivity
    nameWithType: ISuspiciousActivity
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ISuspiciousActivity
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.SmartCards*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.SmartCards
  isExternal: false
  name: SmartCards
  nameWithType: MonsterContext.SmartCards
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.SmartCards
- uid: System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ISmartCard}
  commentId: T:System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ISmartCard}
  parent: System.Linq
  definition: System.Linq.IQueryable`1
  name: IQueryable<ISmartCard>
  nameWithType: IQueryable<ISmartCard>
  fullName: System.Linq.IQueryable<Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ISmartCard>
  nameWithType.vb: IQueryable(Of ISmartCard)
  fullname.vb: System.Linq.IQueryable(Of Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ISmartCard)
  name.vb: IQueryable(Of ISmartCard)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ISmartCard
    name: ISmartCard
    nameWithType: ISmartCard
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ISmartCard
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ISmartCard
    name: ISmartCard
    nameWithType: ISmartCard
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ISmartCard
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.RsaTokens*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.RsaTokens
  isExternal: false
  name: RsaTokens
  nameWithType: MonsterContext.RsaTokens
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.RsaTokens
- uid: System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IRsaToken}
  commentId: T:System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IRsaToken}
  parent: System.Linq
  definition: System.Linq.IQueryable`1
  name: IQueryable<IRsaToken>
  nameWithType: IQueryable<IRsaToken>
  fullName: System.Linq.IQueryable<Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IRsaToken>
  nameWithType.vb: IQueryable(Of IRsaToken)
  fullname.vb: System.Linq.IQueryable(Of Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IRsaToken)
  name.vb: IQueryable(Of IRsaToken)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IRsaToken
    name: IRsaToken
    nameWithType: IRsaToken
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IRsaToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IRsaToken
    name: IRsaToken
    nameWithType: IRsaToken
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IRsaToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.PasswordResets*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.PasswordResets
  isExternal: false
  name: PasswordResets
  nameWithType: MonsterContext.PasswordResets
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.PasswordResets
- uid: System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IPasswordReset}
  commentId: T:System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IPasswordReset}
  parent: System.Linq
  definition: System.Linq.IQueryable`1
  name: IQueryable<IPasswordReset>
  nameWithType: IQueryable<IPasswordReset>
  fullName: System.Linq.IQueryable<Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IPasswordReset>
  nameWithType.vb: IQueryable(Of IPasswordReset)
  fullname.vb: System.Linq.IQueryable(Of Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IPasswordReset)
  name.vb: IQueryable(Of IPasswordReset)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IPasswordReset
    name: IPasswordReset
    nameWithType: IPasswordReset
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IPasswordReset
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IPasswordReset
    name: IPasswordReset
    nameWithType: IPasswordReset
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IPasswordReset
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.PageViews*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.PageViews
  isExternal: false
  name: PageViews
  nameWithType: MonsterContext.PageViews
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.PageViews
- uid: System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IPageView}
  commentId: T:System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IPageView}
  parent: System.Linq
  definition: System.Linq.IQueryable`1
  name: IQueryable<IPageView>
  nameWithType: IQueryable<IPageView>
  fullName: System.Linq.IQueryable<Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IPageView>
  nameWithType.vb: IQueryable(Of IPageView)
  fullname.vb: System.Linq.IQueryable(Of Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IPageView)
  name.vb: IQueryable(Of IPageView)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IPageView
    name: IPageView
    nameWithType: IPageView
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IPageView
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IPageView
    name: IPageView
    nameWithType: IPageView
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IPageView
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.LastLogins*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.LastLogins
  isExternal: false
  name: LastLogins
  nameWithType: MonsterContext.LastLogins
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.LastLogins
- uid: System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILastLogin}
  commentId: T:System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILastLogin}
  parent: System.Linq
  definition: System.Linq.IQueryable`1
  name: IQueryable<ILastLogin>
  nameWithType: IQueryable<ILastLogin>
  fullName: System.Linq.IQueryable<Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILastLogin>
  nameWithType.vb: IQueryable(Of ILastLogin)
  fullname.vb: System.Linq.IQueryable(Of Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILastLogin)
  name.vb: IQueryable(Of ILastLogin)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILastLogin
    name: ILastLogin
    nameWithType: ILastLogin
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILastLogin
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILastLogin
    name: ILastLogin
    nameWithType: ILastLogin
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILastLogin
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Messages*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Messages
  isExternal: false
  name: Messages
  nameWithType: MonsterContext.Messages
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Messages
- uid: System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IMessage}
  commentId: T:System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IMessage}
  parent: System.Linq
  definition: System.Linq.IQueryable`1
  name: IQueryable<IMessage>
  nameWithType: IQueryable<IMessage>
  fullName: System.Linq.IQueryable<Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IMessage>
  nameWithType.vb: IQueryable(Of IMessage)
  fullname.vb: System.Linq.IQueryable(Of Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IMessage)
  name.vb: IQueryable(Of IMessage)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Orders*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Orders
  isExternal: false
  name: Orders
  nameWithType: MonsterContext.Orders
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Orders
- uid: System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IAnOrder}
  commentId: T:System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IAnOrder}
  parent: System.Linq
  definition: System.Linq.IQueryable`1
  name: IQueryable<IAnOrder>
  nameWithType: IQueryable<IAnOrder>
  fullName: System.Linq.IQueryable<Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IAnOrder>
  nameWithType.vb: IQueryable(Of IAnOrder)
  fullname.vb: System.Linq.IQueryable(Of Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IAnOrder)
  name.vb: IQueryable(Of IAnOrder)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IAnOrder
    name: IAnOrder
    nameWithType: IAnOrder
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IAnOrder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IAnOrder
    name: IAnOrder
    nameWithType: IAnOrder
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IAnOrder
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.OrderNotes*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.OrderNotes
  isExternal: false
  name: OrderNotes
  nameWithType: MonsterContext.OrderNotes
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.OrderNotes
- uid: System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IOrderNote}
  commentId: T:System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IOrderNote}
  parent: System.Linq
  definition: System.Linq.IQueryable`1
  name: IQueryable<IOrderNote>
  nameWithType: IQueryable<IOrderNote>
  fullName: System.Linq.IQueryable<Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IOrderNote>
  nameWithType.vb: IQueryable(Of IOrderNote)
  fullname.vb: System.Linq.IQueryable(Of Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IOrderNote)
  name.vb: IQueryable(Of IOrderNote)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IOrderNote
    name: IOrderNote
    nameWithType: IOrderNote
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IOrderNote
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IOrderNote
    name: IOrderNote
    nameWithType: IOrderNote
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IOrderNote
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.OrderQualityChecks*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.OrderQualityChecks
  isExternal: false
  name: OrderQualityChecks
  nameWithType: MonsterContext.OrderQualityChecks
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.OrderQualityChecks
- uid: System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IOrderQualityCheck}
  commentId: T:System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IOrderQualityCheck}
  parent: System.Linq
  definition: System.Linq.IQueryable`1
  name: IQueryable<IOrderQualityCheck>
  nameWithType: IQueryable<IOrderQualityCheck>
  fullName: System.Linq.IQueryable<Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IOrderQualityCheck>
  nameWithType.vb: IQueryable(Of IOrderQualityCheck)
  fullname.vb: System.Linq.IQueryable(Of Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IOrderQualityCheck)
  name.vb: IQueryable(Of IOrderQualityCheck)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IOrderQualityCheck
    name: IOrderQualityCheck
    nameWithType: IOrderQualityCheck
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IOrderQualityCheck
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IOrderQualityCheck
    name: IOrderQualityCheck
    nameWithType: IOrderQualityCheck
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IOrderQualityCheck
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.OrderLines*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.OrderLines
  isExternal: false
  name: OrderLines
  nameWithType: MonsterContext.OrderLines
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.OrderLines
- uid: System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IOrderLine}
  commentId: T:System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IOrderLine}
  parent: System.Linq
  definition: System.Linq.IQueryable`1
  name: IQueryable<IOrderLine>
  nameWithType: IQueryable<IOrderLine>
  fullName: System.Linq.IQueryable<Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IOrderLine>
  nameWithType.vb: IQueryable(Of IOrderLine)
  fullname.vb: System.Linq.IQueryable(Of Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IOrderLine)
  name.vb: IQueryable(Of IOrderLine)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IOrderLine
    name: IOrderLine
    nameWithType: IOrderLine
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IOrderLine
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IOrderLine
    name: IOrderLine
    nameWithType: IOrderLine
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IOrderLine
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Products*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Products
  isExternal: false
  name: Products
  nameWithType: MonsterContext.Products
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Products
- uid: System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IProduct}
  commentId: T:System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IProduct}
  parent: System.Linq
  definition: System.Linq.IQueryable`1
  name: IQueryable<IProduct>
  nameWithType: IQueryable<IProduct>
  fullName: System.Linq.IQueryable<Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IProduct>
  nameWithType.vb: IQueryable(Of IProduct)
  fullname.vb: System.Linq.IQueryable(Of Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IProduct)
  name.vb: IQueryable(Of IProduct)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IProduct
    name: IProduct
    nameWithType: IProduct
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IProduct
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IProduct
    name: IProduct
    nameWithType: IProduct
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IProduct
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.ProductDetails*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.ProductDetails
  isExternal: false
  name: ProductDetails
  nameWithType: MonsterContext.ProductDetails
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.ProductDetails
- uid: System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IProductDetail}
  commentId: T:System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IProductDetail}
  parent: System.Linq
  definition: System.Linq.IQueryable`1
  name: IQueryable<IProductDetail>
  nameWithType: IQueryable<IProductDetail>
  fullName: System.Linq.IQueryable<Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IProductDetail>
  nameWithType.vb: IQueryable(Of IProductDetail)
  fullname.vb: System.Linq.IQueryable(Of Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IProductDetail)
  name.vb: IQueryable(Of IProductDetail)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IProductDetail
    name: IProductDetail
    nameWithType: IProductDetail
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IProductDetail
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IProductDetail
    name: IProductDetail
    nameWithType: IProductDetail
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IProductDetail
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.ProductReviews*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.ProductReviews
  isExternal: false
  name: ProductReviews
  nameWithType: MonsterContext.ProductReviews
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.ProductReviews
- uid: System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IProductReview}
  commentId: T:System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IProductReview}
  parent: System.Linq
  definition: System.Linq.IQueryable`1
  name: IQueryable<IProductReview>
  nameWithType: IQueryable<IProductReview>
  fullName: System.Linq.IQueryable<Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IProductReview>
  nameWithType.vb: IQueryable(Of IProductReview)
  fullname.vb: System.Linq.IQueryable(Of Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IProductReview)
  name.vb: IQueryable(Of IProductReview)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IProductReview
    name: IProductReview
    nameWithType: IProductReview
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IProductReview
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IProductReview
    name: IProductReview
    nameWithType: IProductReview
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IProductReview
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.ProductPhotos*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.ProductPhotos
  isExternal: false
  name: ProductPhotos
  nameWithType: MonsterContext.ProductPhotos
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.ProductPhotos
- uid: System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IProductPhoto}
  commentId: T:System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IProductPhoto}
  parent: System.Linq
  definition: System.Linq.IQueryable`1
  name: IQueryable<IProductPhoto>
  nameWithType: IQueryable<IProductPhoto>
  fullName: System.Linq.IQueryable<Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IProductPhoto>
  nameWithType.vb: IQueryable(Of IProductPhoto)
  fullname.vb: System.Linq.IQueryable(Of Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IProductPhoto)
  name.vb: IQueryable(Of IProductPhoto)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IProductPhoto
    name: IProductPhoto
    nameWithType: IProductPhoto
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IProductPhoto
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IProductPhoto
    name: IProductPhoto
    nameWithType: IProductPhoto
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IProductPhoto
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.ProductWebFeatures*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.ProductWebFeatures
  isExternal: false
  name: ProductWebFeatures
  nameWithType: MonsterContext.ProductWebFeatures
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.ProductWebFeatures
- uid: System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IProductWebFeature}
  commentId: T:System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IProductWebFeature}
  parent: System.Linq
  definition: System.Linq.IQueryable`1
  name: IQueryable<IProductWebFeature>
  nameWithType: IQueryable<IProductWebFeature>
  fullName: System.Linq.IQueryable<Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IProductWebFeature>
  nameWithType.vb: IQueryable(Of IProductWebFeature)
  fullname.vb: System.Linq.IQueryable(Of Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IProductWebFeature)
  name.vb: IQueryable(Of IProductWebFeature)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IProductWebFeature
    name: IProductWebFeature
    nameWithType: IProductWebFeature
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IProductWebFeature
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IProductWebFeature
    name: IProductWebFeature
    nameWithType: IProductWebFeature
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IProductWebFeature
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Suppliers*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Suppliers
  isExternal: false
  name: Suppliers
  nameWithType: MonsterContext.Suppliers
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Suppliers
- uid: System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ISupplier}
  commentId: T:System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ISupplier}
  parent: System.Linq
  definition: System.Linq.IQueryable`1
  name: IQueryable<ISupplier>
  nameWithType: IQueryable<ISupplier>
  fullName: System.Linq.IQueryable<Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ISupplier>
  nameWithType.vb: IQueryable(Of ISupplier)
  fullname.vb: System.Linq.IQueryable(Of Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ISupplier)
  name.vb: IQueryable(Of ISupplier)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ISupplier
    name: ISupplier
    nameWithType: ISupplier
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ISupplier
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ISupplier
    name: ISupplier
    nameWithType: ISupplier
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ISupplier
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.SupplierLogos*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.SupplierLogos
  isExternal: false
  name: SupplierLogos
  nameWithType: MonsterContext.SupplierLogos
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.SupplierLogos
- uid: System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ISupplierLogo}
  commentId: T:System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ISupplierLogo}
  parent: System.Linq
  definition: System.Linq.IQueryable`1
  name: IQueryable<ISupplierLogo>
  nameWithType: IQueryable<ISupplierLogo>
  fullName: System.Linq.IQueryable<Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ISupplierLogo>
  nameWithType.vb: IQueryable(Of ISupplierLogo)
  fullname.vb: System.Linq.IQueryable(Of Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ISupplierLogo)
  name.vb: IQueryable(Of ISupplierLogo)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ISupplierLogo
    name: ISupplierLogo
    nameWithType: ISupplierLogo
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ISupplierLogo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ISupplierLogo
    name: ISupplierLogo
    nameWithType: ISupplierLogo
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ISupplierLogo
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.SupplierInformation*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.SupplierInformation
  isExternal: false
  name: SupplierInformation
  nameWithType: MonsterContext.SupplierInformation
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.SupplierInformation
- uid: System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ISupplierInfo}
  commentId: T:System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ISupplierInfo}
  parent: System.Linq
  definition: System.Linq.IQueryable`1
  name: IQueryable<ISupplierInfo>
  nameWithType: IQueryable<ISupplierInfo>
  fullName: System.Linq.IQueryable<Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ISupplierInfo>
  nameWithType.vb: IQueryable(Of ISupplierInfo)
  fullname.vb: System.Linq.IQueryable(Of Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ISupplierInfo)
  name.vb: IQueryable(Of ISupplierInfo)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ISupplierInfo
    name: ISupplierInfo
    nameWithType: ISupplierInfo
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ISupplierInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ISupplierInfo
    name: ISupplierInfo
    nameWithType: ISupplierInfo
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ISupplierInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.CustomerInformation*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.CustomerInformation
  isExternal: false
  name: CustomerInformation
  nameWithType: MonsterContext.CustomerInformation
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.CustomerInformation
- uid: System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomerInfo}
  commentId: T:System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomerInfo}
  parent: System.Linq
  definition: System.Linq.IQueryable`1
  name: IQueryable<ICustomerInfo>
  nameWithType: IQueryable<ICustomerInfo>
  fullName: System.Linq.IQueryable<Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomerInfo>
  nameWithType.vb: IQueryable(Of ICustomerInfo)
  fullname.vb: System.Linq.IQueryable(Of Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomerInfo)
  name.vb: IQueryable(Of ICustomerInfo)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomerInfo
    name: ICustomerInfo
    nameWithType: ICustomerInfo
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomerInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomerInfo
    name: ICustomerInfo
    nameWithType: ICustomerInfo
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomerInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Computers*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Computers
  isExternal: false
  name: Computers
  nameWithType: MonsterContext.Computers
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Computers
- uid: System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IComputer}
  commentId: T:System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IComputer}
  parent: System.Linq
  definition: System.Linq.IQueryable`1
  name: IQueryable<IComputer>
  nameWithType: IQueryable<IComputer>
  fullName: System.Linq.IQueryable<Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IComputer>
  nameWithType.vb: IQueryable(Of IComputer)
  fullname.vb: System.Linq.IQueryable(Of Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IComputer)
  name.vb: IQueryable(Of IComputer)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IComputer
    name: IComputer
    nameWithType: IComputer
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IComputer
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IComputer
    name: IComputer
    nameWithType: IComputer
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IComputer
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.ComputerDetails*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.ComputerDetails
  isExternal: false
  name: ComputerDetails
  nameWithType: MonsterContext.ComputerDetails
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.ComputerDetails
- uid: System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IComputerDetail}
  commentId: T:System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IComputerDetail}
  parent: System.Linq
  definition: System.Linq.IQueryable`1
  name: IQueryable<IComputerDetail>
  nameWithType: IQueryable<IComputerDetail>
  fullName: System.Linq.IQueryable<Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IComputerDetail>
  nameWithType.vb: IQueryable(Of IComputerDetail)
  fullname.vb: System.Linq.IQueryable(Of Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IComputerDetail)
  name.vb: IQueryable(Of IComputerDetail)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IComputerDetail
    name: IComputerDetail
    nameWithType: IComputerDetail
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IComputerDetail
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IComputerDetail
    name: IComputerDetail
    nameWithType: IComputerDetail
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IComputerDetail
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Drivers*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Drivers
  isExternal: false
  name: Drivers
  nameWithType: MonsterContext.Drivers
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Drivers
- uid: System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IDriver}
  commentId: T:System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IDriver}
  parent: System.Linq
  definition: System.Linq.IQueryable`1
  name: IQueryable<IDriver>
  nameWithType: IQueryable<IDriver>
  fullName: System.Linq.IQueryable<Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IDriver>
  nameWithType.vb: IQueryable(Of IDriver)
  fullname.vb: System.Linq.IQueryable(Of Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IDriver)
  name.vb: IQueryable(Of IDriver)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IDriver
    name: IDriver
    nameWithType: IDriver
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IDriver
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IDriver
    name: IDriver
    nameWithType: IDriver
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IDriver
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Licenses*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Licenses
  isExternal: false
  name: Licenses
  nameWithType: MonsterContext.Licenses
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.Licenses
- uid: System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense}
  commentId: T:System.Linq.IQueryable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense}
  parent: System.Linq
  definition: System.Linq.IQueryable`1
  name: IQueryable<ILicense>
  nameWithType: IQueryable<ILicense>
  fullName: System.Linq.IQueryable<Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense>
  nameWithType.vb: IQueryable(Of ILicense)
  fullname.vb: System.Linq.IQueryable(Of Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense)
  name.vb: IQueryable(Of ILicense)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense
    name: ILicense
    nameWithType: ILicense
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense
    name: ILicense
    nameWithType: ILicense
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.SeedUsingFKs*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.SeedUsingFKs
  isExternal: false
  name: SeedUsingFKs
  nameWithType: MonsterContext.SeedUsingFKs
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.SeedUsingFKs
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.SeedUsingNavigations*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.SeedUsingNavigations
  isExternal: false
  name: SeedUsingNavigations
  nameWithType: MonsterContext.SeedUsingNavigations
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.SeedUsingNavigations
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.SeedUsingNavigationsWithDeferredAdd*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.SeedUsingNavigationsWithDeferredAdd
  isExternal: false
  name: SeedUsingNavigationsWithDeferredAdd
  nameWithType: MonsterContext.SeedUsingNavigationsWithDeferredAdd
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.MonsterContext.SeedUsingNavigationsWithDeferredAdd
