### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities
  id: CSharpUtilities
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  children:
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.DelimitString(System.String)
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.EscapeString(System.String)
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.EscapeVerbatimString(System.String)
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateCSharpIdentifier(System.String,System.Collections.Generic.ICollection{System.String})
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateCSharpIdentifier(System.String,System.Collections.Generic.ICollection{System.String},System.Func{System.String,System.Collections.Generic.ICollection{System.String},System.String})
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateLiteral(System.Boolean)
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateLiteral(System.Byte[])
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateLiteral(System.DateTime)
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateLiteral(System.DateTimeOffset)
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateLiteral(System.Decimal)
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateLiteral(System.Double)
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateLiteral(System.Guid)
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateLiteral(System.Int32)
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateLiteral(System.Int64)
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateLiteral(System.Object)
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateLiteral(System.Single)
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateLiteral(System.String)
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateLiteral(System.TimeSpan)
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateVerbatimStringLiteral(System.String)
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GetTypeName(System.Type)
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.Instance
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.IsCSharpKeyword(System.String)
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.IsValidIdentifier(System.String)
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.Uniquifier(System.String,System.Collections.Generic.ICollection{System.String})
  langs:
  - csharp
  - vb
  name: CSharpUtilities
  nameWithType: CSharpUtilities
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/Internal/CSharpUtilities.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CSharpUtilities
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/Internal/CSharpUtilities.cs
    startLine: 17
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public class CSharpUtilities
    content.vb: Public Class CSharpUtilities
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.Instance
  commentId: P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.Instance
  id: Instance
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: CSharpUtilities.Instance
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.Instance
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/Internal/CSharpUtilities.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Instance
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/Internal/CSharpUtilities.cs
    startLine: 109
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public static CSharpUtilities Instance { get; }
    content.vb: Public Shared ReadOnly Property Instance As CSharpUtilities
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities
  overload: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.Instance*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.DelimitString(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.DelimitString(System.String)
  id: DelimitString(System.String)
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities
  langs:
  - csharp
  - vb
  name: DelimitString(String)
  nameWithType: CSharpUtilities.DelimitString(String)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.DelimitString(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/Internal/CSharpUtilities.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: DelimitString
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/Internal/CSharpUtilities.cs
    startLine: 115
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual string DelimitString(string value)
    content.vb: Public Overridable Function DelimitString(value As String) As String
    parameters:
    - id: value
      type: System.String
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.DelimitString*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.EscapeString(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.EscapeString(System.String)
  id: EscapeString(System.String)
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities
  langs:
  - csharp
  - vb
  name: EscapeString(String)
  nameWithType: CSharpUtilities.EscapeString(String)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.EscapeString(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/Internal/CSharpUtilities.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: EscapeString
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/Internal/CSharpUtilities.cs
    startLine: 126
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual string EscapeString(string str)
    content.vb: Public Overridable Function EscapeString(str As String) As String
    parameters:
    - id: str
      type: System.String
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.EscapeString*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.EscapeVerbatimString(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.EscapeVerbatimString(System.String)
  id: EscapeVerbatimString(System.String)
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities
  langs:
  - csharp
  - vb
  name: EscapeVerbatimString(String)
  nameWithType: CSharpUtilities.EscapeVerbatimString(String)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.EscapeVerbatimString(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/Internal/CSharpUtilities.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: EscapeVerbatimString
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/Internal/CSharpUtilities.cs
    startLine: 137
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual string EscapeVerbatimString(string str)
    content.vb: Public Overridable Function EscapeVerbatimString(str As String) As String
    parameters:
    - id: str
      type: System.String
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.EscapeVerbatimString*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateLiteral(System.Byte[])
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateLiteral(System.Byte[])
  id: GenerateLiteral(System.Byte[])
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities
  langs:
  - csharp
  - vb
  name: GenerateLiteral(Byte[])
  nameWithType: CSharpUtilities.GenerateLiteral(Byte[])
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateLiteral(System.Byte[])
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/Internal/CSharpUtilities.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GenerateLiteral
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/Internal/CSharpUtilities.cs
    startLine: 148
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual string GenerateLiteral(byte[] value)
    content.vb: Public Overridable Function GenerateLiteral(value As Byte()) As String
    parameters:
    - id: value
      type: System.Byte[]
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateLiteral*
  nameWithType.vb: CSharpUtilities.GenerateLiteral(Byte())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateLiteral(System.Byte())
  name.vb: GenerateLiteral(Byte())
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateLiteral(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateLiteral(System.Boolean)
  id: GenerateLiteral(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities
  langs:
  - csharp
  - vb
  name: GenerateLiteral(Boolean)
  nameWithType: CSharpUtilities.GenerateLiteral(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateLiteral(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/Internal/CSharpUtilities.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GenerateLiteral
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/Internal/CSharpUtilities.cs
    startLine: 159
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual string GenerateLiteral(bool value)
    content.vb: Public Overridable Function GenerateLiteral(value As Boolean) As String
    parameters:
    - id: value
      type: System.Boolean
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateLiteral*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateLiteral(System.Int32)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateLiteral(System.Int32)
  id: GenerateLiteral(System.Int32)
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities
  langs:
  - csharp
  - vb
  name: GenerateLiteral(Int32)
  nameWithType: CSharpUtilities.GenerateLiteral(Int32)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateLiteral(System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/Internal/CSharpUtilities.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GenerateLiteral
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/Internal/CSharpUtilities.cs
    startLine: 166
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual string GenerateLiteral(int value)
    content.vb: Public Overridable Function GenerateLiteral(value As Integer) As String
    parameters:
    - id: value
      type: System.Int32
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateLiteral*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateLiteral(System.Int64)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateLiteral(System.Int64)
  id: GenerateLiteral(System.Int64)
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities
  langs:
  - csharp
  - vb
  name: GenerateLiteral(Int64)
  nameWithType: CSharpUtilities.GenerateLiteral(Int64)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateLiteral(System.Int64)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/Internal/CSharpUtilities.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GenerateLiteral
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/Internal/CSharpUtilities.cs
    startLine: 173
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual string GenerateLiteral(long value)
    content.vb: Public Overridable Function GenerateLiteral(value As Long) As String
    parameters:
    - id: value
      type: System.Int64
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateLiteral*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateLiteral(System.Decimal)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateLiteral(System.Decimal)
  id: GenerateLiteral(System.Decimal)
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities
  langs:
  - csharp
  - vb
  name: GenerateLiteral(Decimal)
  nameWithType: CSharpUtilities.GenerateLiteral(Decimal)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateLiteral(System.Decimal)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/Internal/CSharpUtilities.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GenerateLiteral
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/Internal/CSharpUtilities.cs
    startLine: 180
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual string GenerateLiteral(decimal value)
    content.vb: Public Overridable Function GenerateLiteral(value As Decimal) As String
    parameters:
    - id: value
      type: System.Decimal
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateLiteral*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateLiteral(System.Single)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateLiteral(System.Single)
  id: GenerateLiteral(System.Single)
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities
  langs:
  - csharp
  - vb
  name: GenerateLiteral(Single)
  nameWithType: CSharpUtilities.GenerateLiteral(Single)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateLiteral(System.Single)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/Internal/CSharpUtilities.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GenerateLiteral
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/Internal/CSharpUtilities.cs
    startLine: 187
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual string GenerateLiteral(float value)
    content.vb: Public Overridable Function GenerateLiteral(value As Single) As String
    parameters:
    - id: value
      type: System.Single
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateLiteral*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateLiteral(System.Double)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateLiteral(System.Double)
  id: GenerateLiteral(System.Double)
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities
  langs:
  - csharp
  - vb
  name: GenerateLiteral(Double)
  nameWithType: CSharpUtilities.GenerateLiteral(Double)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateLiteral(System.Double)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/Internal/CSharpUtilities.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GenerateLiteral
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/Internal/CSharpUtilities.cs
    startLine: 194
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual string GenerateLiteral(double value)
    content.vb: Public Overridable Function GenerateLiteral(value As Double) As String
    parameters:
    - id: value
      type: System.Double
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateLiteral*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateLiteral(System.TimeSpan)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateLiteral(System.TimeSpan)
  id: GenerateLiteral(System.TimeSpan)
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities
  langs:
  - csharp
  - vb
  name: GenerateLiteral(TimeSpan)
  nameWithType: CSharpUtilities.GenerateLiteral(TimeSpan)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateLiteral(System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/Internal/CSharpUtilities.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GenerateLiteral
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/Internal/CSharpUtilities.cs
    startLine: 201
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual string GenerateLiteral(TimeSpan value)
    content.vb: Public Overridable Function GenerateLiteral(value As TimeSpan) As String
    parameters:
    - id: value
      type: System.TimeSpan
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateLiteral*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateLiteral(System.DateTime)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateLiteral(System.DateTime)
  id: GenerateLiteral(System.DateTime)
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities
  langs:
  - csharp
  - vb
  name: GenerateLiteral(DateTime)
  nameWithType: CSharpUtilities.GenerateLiteral(DateTime)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateLiteral(System.DateTime)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/Internal/CSharpUtilities.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GenerateLiteral
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/Internal/CSharpUtilities.cs
    startLine: 208
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual string GenerateLiteral(DateTime value)
    content.vb: Public Overridable Function GenerateLiteral(value As Date) As String
    parameters:
    - id: value
      type: System.DateTime
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateLiteral*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateLiteral(System.DateTimeOffset)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateLiteral(System.DateTimeOffset)
  id: GenerateLiteral(System.DateTimeOffset)
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities
  langs:
  - csharp
  - vb
  name: GenerateLiteral(DateTimeOffset)
  nameWithType: CSharpUtilities.GenerateLiteral(DateTimeOffset)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateLiteral(System.DateTimeOffset)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/Internal/CSharpUtilities.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GenerateLiteral
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/Internal/CSharpUtilities.cs
    startLine: 216
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual string GenerateLiteral(DateTimeOffset value)
    content.vb: Public Overridable Function GenerateLiteral(value As DateTimeOffset) As String
    parameters:
    - id: value
      type: System.DateTimeOffset
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateLiteral*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateLiteral(System.Guid)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateLiteral(System.Guid)
  id: GenerateLiteral(System.Guid)
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities
  langs:
  - csharp
  - vb
  name: GenerateLiteral(Guid)
  nameWithType: CSharpUtilities.GenerateLiteral(Guid)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateLiteral(System.Guid)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/Internal/CSharpUtilities.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GenerateLiteral
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/Internal/CSharpUtilities.cs
    startLine: 224
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual string GenerateLiteral(Guid value)
    content.vb: Public Overridable Function GenerateLiteral(value As Guid) As String
    parameters:
    - id: value
      type: System.Guid
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateLiteral*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateLiteral(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateLiteral(System.String)
  id: GenerateLiteral(System.String)
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities
  langs:
  - csharp
  - vb
  name: GenerateLiteral(String)
  nameWithType: CSharpUtilities.GenerateLiteral(String)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateLiteral(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/Internal/CSharpUtilities.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GenerateLiteral
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/Internal/CSharpUtilities.cs
    startLine: 231
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual string GenerateLiteral(string value)
    content.vb: Public Overridable Function GenerateLiteral(value As String) As String
    parameters:
    - id: value
      type: System.String
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateLiteral*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateVerbatimStringLiteral(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateVerbatimStringLiteral(System.String)
  id: GenerateVerbatimStringLiteral(System.String)
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities
  langs:
  - csharp
  - vb
  name: GenerateVerbatimStringLiteral(String)
  nameWithType: CSharpUtilities.GenerateVerbatimStringLiteral(String)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateVerbatimStringLiteral(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/Internal/CSharpUtilities.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GenerateVerbatimStringLiteral
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/Internal/CSharpUtilities.cs
    startLine: 242
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual string GenerateVerbatimStringLiteral(string value)
    content.vb: Public Overridable Function GenerateVerbatimStringLiteral(value As String) As String
    parameters:
    - id: value
      type: System.String
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateVerbatimStringLiteral*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateLiteral(System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateLiteral(System.Object)
  id: GenerateLiteral(System.Object)
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities
  langs:
  - csharp
  - vb
  name: GenerateLiteral(Object)
  nameWithType: CSharpUtilities.GenerateLiteral(Object)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateLiteral(System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/Internal/CSharpUtilities.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GenerateLiteral
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/Internal/CSharpUtilities.cs
    startLine: 253
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual string GenerateLiteral(object value)
    content.vb: Public Overridable Function GenerateLiteral(value As Object) As String
    parameters:
    - id: value
      type: System.Object
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateLiteral*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.IsCSharpKeyword(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.IsCSharpKeyword(System.String)
  id: IsCSharpKeyword(System.String)
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities
  langs:
  - csharp
  - vb
  name: IsCSharpKeyword(String)
  nameWithType: CSharpUtilities.IsCSharpKeyword(String)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.IsCSharpKeyword(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/Internal/CSharpUtilities.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: IsCSharpKeyword
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/Internal/CSharpUtilities.cs
    startLine: 269
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual bool IsCSharpKeyword(string identifier)
    content.vb: Public Overridable Function IsCSharpKeyword(identifier As String) As Boolean
    parameters:
    - id: identifier
      type: System.String
    return:
      type: System.Boolean
  overload: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.IsCSharpKeyword*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateCSharpIdentifier(System.String,System.Collections.Generic.ICollection{System.String})
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateCSharpIdentifier(System.String,System.Collections.Generic.ICollection{System.String})
  id: GenerateCSharpIdentifier(System.String,System.Collections.Generic.ICollection{System.String})
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities
  langs:
  - csharp
  - vb
  name: GenerateCSharpIdentifier(String, ICollection<String>)
  nameWithType: CSharpUtilities.GenerateCSharpIdentifier(String, ICollection<String>)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateCSharpIdentifier(System.String, System.Collections.Generic.ICollection<System.String>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/Internal/CSharpUtilities.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GenerateCSharpIdentifier
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/Internal/CSharpUtilities.cs
    startLine: 276
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual string GenerateCSharpIdentifier(string identifier, ICollection<string> existingIdentifiers)
    content.vb: Public Overridable Function GenerateCSharpIdentifier(identifier As String, existingIdentifiers As ICollection(Of String)) As String
    parameters:
    - id: identifier
      type: System.String
    - id: existingIdentifiers
      type: System.Collections.Generic.ICollection{System.String}
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateCSharpIdentifier*
  nameWithType.vb: CSharpUtilities.GenerateCSharpIdentifier(String, ICollection(Of String))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateCSharpIdentifier(System.String, System.Collections.Generic.ICollection(Of System.String))
  name.vb: GenerateCSharpIdentifier(String, ICollection(Of String))
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateCSharpIdentifier(System.String,System.Collections.Generic.ICollection{System.String},System.Func{System.String,System.Collections.Generic.ICollection{System.String},System.String})
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateCSharpIdentifier(System.String,System.Collections.Generic.ICollection{System.String},System.Func{System.String,System.Collections.Generic.ICollection{System.String},System.String})
  id: GenerateCSharpIdentifier(System.String,System.Collections.Generic.ICollection{System.String},System.Func{System.String,System.Collections.Generic.ICollection{System.String},System.String})
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities
  langs:
  - csharp
  - vb
  name: GenerateCSharpIdentifier(String, ICollection<String>, Func<String, ICollection<String>, String>)
  nameWithType: CSharpUtilities.GenerateCSharpIdentifier(String, ICollection<String>, Func<String, ICollection<String>, String>)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateCSharpIdentifier(System.String, System.Collections.Generic.ICollection<System.String>, System.Func<System.String, System.Collections.Generic.ICollection<System.String>, System.String>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/Internal/CSharpUtilities.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GenerateCSharpIdentifier
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/Internal/CSharpUtilities.cs
    startLine: 284
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual string GenerateCSharpIdentifier(string identifier, ICollection<string> existingIdentifiers, Func<string, ICollection<string>, string> uniquifier)
    content.vb: Public Overridable Function GenerateCSharpIdentifier(identifier As String, existingIdentifiers As ICollection(Of String), uniquifier As Func(Of String, ICollection(Of String), String)) As String
    parameters:
    - id: identifier
      type: System.String
    - id: existingIdentifiers
      type: System.Collections.Generic.ICollection{System.String}
    - id: uniquifier
      type: System.Func{System.String,System.Collections.Generic.ICollection{System.String},System.String}
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateCSharpIdentifier*
  nameWithType.vb: CSharpUtilities.GenerateCSharpIdentifier(String, ICollection(Of String), Func(Of String, ICollection(Of String), String))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateCSharpIdentifier(System.String, System.Collections.Generic.ICollection(Of System.String), System.Func(Of System.String, System.Collections.Generic.ICollection(Of System.String), System.String))
  name.vb: GenerateCSharpIdentifier(String, ICollection(Of String), Func(Of String, ICollection(Of String), String))
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.Uniquifier(System.String,System.Collections.Generic.ICollection{System.String})
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.Uniquifier(System.String,System.Collections.Generic.ICollection{System.String})
  id: Uniquifier(System.String,System.Collections.Generic.ICollection{System.String})
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities
  langs:
  - csharp
  - vb
  name: Uniquifier(String, ICollection<String>)
  nameWithType: CSharpUtilities.Uniquifier(String, ICollection<String>)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.Uniquifier(System.String, System.Collections.Generic.ICollection<System.String>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/Internal/CSharpUtilities.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Uniquifier
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/Internal/CSharpUtilities.cs
    startLine: 319
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual string Uniquifier(string proposedIdentifier, ICollection<string> existingIdentifiers)
    content.vb: Public Overridable Function Uniquifier(proposedIdentifier As String, existingIdentifiers As ICollection(Of String)) As String
    parameters:
    - id: proposedIdentifier
      type: System.String
    - id: existingIdentifiers
      type: System.Collections.Generic.ICollection{System.String}
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.Uniquifier*
  nameWithType.vb: CSharpUtilities.Uniquifier(String, ICollection(Of String))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.Uniquifier(System.String, System.Collections.Generic.ICollection(Of System.String))
  name.vb: Uniquifier(String, ICollection(Of String))
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GetTypeName(System.Type)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GetTypeName(System.Type)
  id: GetTypeName(System.Type)
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities
  langs:
  - csharp
  - vb
  name: GetTypeName(Type)
  nameWithType: CSharpUtilities.GetTypeName(Type)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GetTypeName(System.Type)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/Internal/CSharpUtilities.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetTypeName
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/Internal/CSharpUtilities.cs
    startLine: 363
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual string GetTypeName(Type propertyType)
    content.vb: Public Overridable Function GetTypeName(propertyType As Type) As String
    parameters:
    - id: propertyType
      type: System.Type
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GetTypeName*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.IsValidIdentifier(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.IsValidIdentifier(System.String)
  id: IsValidIdentifier(System.String)
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities
  langs:
  - csharp
  - vb
  name: IsValidIdentifier(String)
  nameWithType: CSharpUtilities.IsValidIdentifier(String)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.IsValidIdentifier(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/Internal/CSharpUtilities.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: IsValidIdentifier
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/Internal/CSharpUtilities.cs
    startLine: 391
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual bool IsValidIdentifier(string name)
    content.vb: Public Overridable Function IsValidIdentifier(name As String) As Boolean
    parameters:
    - id: name
      type: System.String
    return:
      type: System.Boolean
  overload: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.IsValidIdentifier*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Scaffolding.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.Instance*
  commentId: Overload:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.Instance
  isExternal: false
  name: Instance
  nameWithType: CSharpUtilities.Instance
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.Instance
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  isExternal: false
  name: CSharpUtilities
  nameWithType: CSharpUtilities
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.DelimitString*
  commentId: Overload:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.DelimitString
  isExternal: false
  name: DelimitString
  nameWithType: CSharpUtilities.DelimitString
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.DelimitString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.EscapeString*
  commentId: Overload:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.EscapeString
  isExternal: false
  name: EscapeString
  nameWithType: CSharpUtilities.EscapeString
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.EscapeString
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.EscapeVerbatimString*
  commentId: Overload:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.EscapeVerbatimString
  isExternal: false
  name: EscapeVerbatimString
  nameWithType: CSharpUtilities.EscapeVerbatimString
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.EscapeVerbatimString
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateLiteral*
  commentId: Overload:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateLiteral
  isExternal: false
  name: GenerateLiteral
  nameWithType: CSharpUtilities.GenerateLiteral
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateLiteral
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Decimal
  commentId: T:System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.DateTimeOffset
  commentId: T:System.DateTimeOffset
  parent: System
  isExternal: true
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateVerbatimStringLiteral*
  commentId: Overload:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateVerbatimStringLiteral
  isExternal: false
  name: GenerateVerbatimStringLiteral
  nameWithType: CSharpUtilities.GenerateVerbatimStringLiteral
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateVerbatimStringLiteral
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.IsCSharpKeyword*
  commentId: Overload:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.IsCSharpKeyword
  isExternal: false
  name: IsCSharpKeyword
  nameWithType: CSharpUtilities.IsCSharpKeyword
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.IsCSharpKeyword
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateCSharpIdentifier*
  commentId: Overload:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateCSharpIdentifier
  isExternal: false
  name: GenerateCSharpIdentifier
  nameWithType: CSharpUtilities.GenerateCSharpIdentifier
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateCSharpIdentifier
- uid: System.Collections.Generic.ICollection{System.String}
  commentId: T:System.Collections.Generic.ICollection{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<String>
  nameWithType: ICollection<String>
  fullName: System.Collections.Generic.ICollection<System.String>
  nameWithType.vb: ICollection(Of String)
  fullname.vb: System.Collections.Generic.ICollection(Of System.String)
  name.vb: ICollection(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullname.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Func{System.String,System.Collections.Generic.ICollection{System.String},System.String}
  commentId: T:System.Func{System.String,System.Collections.Generic.ICollection{System.String},System.String}
  parent: System
  definition: System.Func`3
  name: Func<String, ICollection<String>, String>
  nameWithType: Func<String, ICollection<String>, String>
  fullName: System.Func<System.String, System.Collections.Generic.ICollection<System.String>, System.String>
  nameWithType.vb: Func(Of String, ICollection(Of String), String)
  fullname.vb: System.Func(Of System.String, System.Collections.Generic.ICollection(Of System.String), System.String)
  name.vb: Func(Of String, ICollection(Of String), String)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullname.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.Uniquifier*
  commentId: Overload:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.Uniquifier
  isExternal: false
  name: Uniquifier
  nameWithType: CSharpUtilities.Uniquifier
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.Uniquifier
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GetTypeName*
  commentId: Overload:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GetTypeName
  isExternal: false
  name: GetTypeName
  nameWithType: CSharpUtilities.GetTypeName
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GetTypeName
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.IsValidIdentifier*
  commentId: Overload:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.IsValidIdentifier
  isExternal: false
  name: IsValidIdentifier
  nameWithType: CSharpUtilities.IsValidIdentifier
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.IsValidIdentifier
