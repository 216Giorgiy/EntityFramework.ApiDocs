### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.AutoincrementTest
  commentId: T:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.AutoincrementTest
  id: AutoincrementTest
  parent: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  children:
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.AutoincrementTest.#ctor
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.AutoincrementTest.Autoincrement_prevents_reusing_rowid
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.AutoincrementTest.Dispose
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.AutoincrementTest.Identity_metadata_not_on_text_is_ignored
  langs:
  - csharp
  - vb
  name: AutoincrementTest
  nameWithType: AutoincrementTest
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.AutoincrementTest
  type: Class
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/AutoincrementTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AutoincrementTest
    path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/AutoincrementTest.cs
    startLine: 10
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  syntax:
    content: 'public class AutoincrementTest : IDisposable'
    content.vb: >-
      Public Class AutoincrementTest
          Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.AutoincrementTest.Autoincrement_prevents_reusing_rowid
  commentId: M:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.AutoincrementTest.Autoincrement_prevents_reusing_rowid
  id: Autoincrement_prevents_reusing_rowid
  parent: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.AutoincrementTest
  langs:
  - csharp
  - vb
  name: Autoincrement_prevents_reusing_rowid()
  nameWithType: AutoincrementTest.Autoincrement_prevents_reusing_rowid()
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.AutoincrementTest.Autoincrement_prevents_reusing_rowid()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/AutoincrementTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Autoincrement_prevents_reusing_rowid
    path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/AutoincrementTest.cs
    startLine: 15
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  syntax:
    content: >-
      [Fact]

      public void Autoincrement_prevents_reusing_rowid()
    content.vb: >-
      <Fact>

      Public Sub Autoincrement_prevents_reusing_rowid
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.AutoincrementTest.Identity_metadata_not_on_text_is_ignored
  commentId: M:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.AutoincrementTest.Identity_metadata_not_on_text_is_ignored
  id: Identity_metadata_not_on_text_is_ignored
  parent: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.AutoincrementTest
  langs:
  - csharp
  - vb
  name: Identity_metadata_not_on_text_is_ignored()
  nameWithType: AutoincrementTest.Identity_metadata_not_on_text_is_ignored()
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.AutoincrementTest.Identity_metadata_not_on_text_is_ignored()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/AutoincrementTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Identity_metadata_not_on_text_is_ignored
    path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/AutoincrementTest.cs
    startLine: 38
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  syntax:
    content: >-
      [Fact]

      public void Identity_metadata_not_on_text_is_ignored()
    content.vb: >-
      <Fact>

      Public Sub Identity_metadata_not_on_text_is_ignored
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.AutoincrementTest.#ctor
  commentId: M:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.AutoincrementTest.#ctor
  id: '#ctor'
  parent: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.AutoincrementTest
  langs:
  - csharp
  - vb
  name: AutoincrementTest()
  nameWithType: AutoincrementTest.AutoincrementTest()
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.AutoincrementTest.AutoincrementTest()
  type: Constructor
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/AutoincrementTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/AutoincrementTest.cs
    startLine: 47
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  syntax:
    content: public AutoincrementTest()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.AutoincrementTest.Dispose
  commentId: M:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.AutoincrementTest.Dispose
  id: Dispose
  parent: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.AutoincrementTest
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: AutoincrementTest.Dispose()
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.AutoincrementTest.Dispose()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/AutoincrementTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Dispose
    path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/AutoincrementTest.cs
    startLine: 63
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  commentId: N:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  nameWithType: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
