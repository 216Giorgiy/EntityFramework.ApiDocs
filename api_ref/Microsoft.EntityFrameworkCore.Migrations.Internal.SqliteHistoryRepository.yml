### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Migrations.Internal.SqliteHistoryRepository
  commentId: T:Microsoft.EntityFrameworkCore.Migrations.Internal.SqliteHistoryRepository
  id: SqliteHistoryRepository
  parent: Microsoft.EntityFrameworkCore.Migrations.Internal
  children:
  - Microsoft.EntityFrameworkCore.Migrations.Internal.SqliteHistoryRepository.#ctor(Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator,Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder,Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions,Microsoft.EntityFrameworkCore.Migrations.IMigrationsModelDiffer,Microsoft.EntityFrameworkCore.Migrations.IMigrationsSqlGenerator,Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider,Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper)
  - Microsoft.EntityFrameworkCore.Migrations.Internal.SqliteHistoryRepository.ExistsSql
  - Microsoft.EntityFrameworkCore.Migrations.Internal.SqliteHistoryRepository.GetBeginIfExistsScript(System.String)
  - Microsoft.EntityFrameworkCore.Migrations.Internal.SqliteHistoryRepository.GetBeginIfNotExistsScript(System.String)
  - Microsoft.EntityFrameworkCore.Migrations.Internal.SqliteHistoryRepository.GetCreateIfNotExistsScript
  - Microsoft.EntityFrameworkCore.Migrations.Internal.SqliteHistoryRepository.GetEndIfScript
  - Microsoft.EntityFrameworkCore.Migrations.Internal.SqliteHistoryRepository.InterpretExistsResult(System.Object)
  langs:
  - csharp
  - vb
  name: SqliteHistoryRepository
  nameWithType: SqliteHistoryRepository
  fullName: Microsoft.EntityFrameworkCore.Migrations.Internal.SqliteHistoryRepository
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Sqlite/Migrations/Internal/SqliteHistoryRepository.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: SqliteHistoryRepository
    path: src/Microsoft.EntityFrameworkCore.Sqlite/Migrations/Internal/SqliteHistoryRepository.cs
    startLine: 16
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite
  namespace: Microsoft.EntityFrameworkCore.Migrations.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public class SqliteHistoryRepository : HistoryRepository, IHistoryRepository'
    content.vb: >-
      Public Class SqliteHistoryRepository
          Inherits HistoryRepository
          Implements IHistoryRepository
  inheritance:
  - System.Object
  - Microsoft.EntityFrameworkCore.Migrations.HistoryRepository
  implements:
  - Microsoft.EntityFrameworkCore.Migrations.IHistoryRepository
  inheritedMembers:
  - Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.DefaultTableName
  - Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.SqlGenerationHelper
  - Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.TableName
  - Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.TableSchema
  - Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.MigrationIdColumnName
  - Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.ProductVersionColumnName
  - Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.Exists
  - Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.ExistsAsync(System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetCreateScript
  - Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.ConfigureTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{Microsoft.EntityFrameworkCore.Migrations.HistoryRow})
  - Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetAppliedMigrations
  - Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetAppliedMigrationsAsync(System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetAppliedMigrationsSql
  - Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetInsertScript(Microsoft.EntityFrameworkCore.Migrations.HistoryRow)
  - Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetDeleteScript(System.String)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Migrations.Internal.SqliteHistoryRepository.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Migrations.Internal.SqliteHistoryRepository.#ctor(Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator,Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder,Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions,Microsoft.EntityFrameworkCore.Migrations.IMigrationsModelDiffer,Microsoft.EntityFrameworkCore.Migrations.IMigrationsSqlGenerator,Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider,Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper)
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.Internal.SqliteHistoryRepository.#ctor(Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator,Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder,Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions,Microsoft.EntityFrameworkCore.Migrations.IMigrationsModelDiffer,Microsoft.EntityFrameworkCore.Migrations.IMigrationsSqlGenerator,Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider,Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper)
  id: '#ctor(Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator,Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder,Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions,Microsoft.EntityFrameworkCore.Migrations.IMigrationsModelDiffer,Microsoft.EntityFrameworkCore.Migrations.IMigrationsSqlGenerator,Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider,Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper)'
  parent: Microsoft.EntityFrameworkCore.Migrations.Internal.SqliteHistoryRepository
  langs:
  - csharp
  - vb
  name: SqliteHistoryRepository(IDatabaseCreator, IRawSqlCommandBuilder, IRelationalConnection, IDbContextOptions, IMigrationsModelDiffer, IMigrationsSqlGenerator, IRelationalAnnotationProvider, ISqlGenerationHelper)
  nameWithType: SqliteHistoryRepository.SqliteHistoryRepository(IDatabaseCreator, IRawSqlCommandBuilder, IRelationalConnection, IDbContextOptions, IMigrationsModelDiffer, IMigrationsSqlGenerator, IRelationalAnnotationProvider, ISqlGenerationHelper)
  fullName: Microsoft.EntityFrameworkCore.Migrations.Internal.SqliteHistoryRepository.SqliteHistoryRepository(Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator, Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection, Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions, Microsoft.EntityFrameworkCore.Migrations.IMigrationsModelDiffer, Microsoft.EntityFrameworkCore.Migrations.IMigrationsSqlGenerator, Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider, Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Sqlite/Migrations/Internal/SqliteHistoryRepository.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Sqlite/Migrations/Internal/SqliteHistoryRepository.cs
    startLine: 22
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite
  namespace: Microsoft.EntityFrameworkCore.Migrations.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public SqliteHistoryRepository(IDatabaseCreator databaseCreator, IRawSqlCommandBuilder rawSqlCommandBuilder, IRelationalConnection connection, IDbContextOptions options, IMigrationsModelDiffer modelDiffer, IMigrationsSqlGenerator migrationsSqlGenerator, IRelationalAnnotationProvider annotations, ISqlGenerationHelper sqlGenerationHelper)
    content.vb: Public Sub New(databaseCreator As IDatabaseCreator, rawSqlCommandBuilder As IRawSqlCommandBuilder, connection As IRelationalConnection, options As IDbContextOptions, modelDiffer As IMigrationsModelDiffer, migrationsSqlGenerator As IMigrationsSqlGenerator, annotations As IRelationalAnnotationProvider, sqlGenerationHelper As ISqlGenerationHelper)
    parameters:
    - id: databaseCreator
      type: Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator
    - id: rawSqlCommandBuilder
      type: Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder
    - id: connection
      type: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
    - id: options
      type: Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions
    - id: modelDiffer
      type: Microsoft.EntityFrameworkCore.Migrations.IMigrationsModelDiffer
    - id: migrationsSqlGenerator
      type: Microsoft.EntityFrameworkCore.Migrations.IMigrationsSqlGenerator
    - id: annotations
      type: Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider
    - id: sqlGenerationHelper
      type: Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Migrations.Internal.SqliteHistoryRepository.ExistsSql
  commentId: P:Microsoft.EntityFrameworkCore.Migrations.Internal.SqliteHistoryRepository.ExistsSql
  id: ExistsSql
  parent: Microsoft.EntityFrameworkCore.Migrations.Internal.SqliteHistoryRepository
  langs:
  - csharp
  - vb
  name: ExistsSql
  nameWithType: SqliteHistoryRepository.ExistsSql
  fullName: Microsoft.EntityFrameworkCore.Migrations.Internal.SqliteHistoryRepository.ExistsSql
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Sqlite/Migrations/Internal/SqliteHistoryRepository.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ExistsSql
    path: src/Microsoft.EntityFrameworkCore.Sqlite/Migrations/Internal/SqliteHistoryRepository.cs
    startLine: 47
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite
  namespace: Microsoft.EntityFrameworkCore.Migrations.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected override string ExistsSql { get; }
    content.vb: Protected Overrides ReadOnly Property ExistsSql As String
    parameters: []
    return:
      type: System.String
  overridden: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.ExistsSql
  modifiers.csharp:
  - protected
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Migrations.Internal.SqliteHistoryRepository.InterpretExistsResult(System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.Internal.SqliteHistoryRepository.InterpretExistsResult(System.Object)
  id: InterpretExistsResult(System.Object)
  parent: Microsoft.EntityFrameworkCore.Migrations.Internal.SqliteHistoryRepository
  langs:
  - csharp
  - vb
  name: InterpretExistsResult(Object)
  nameWithType: SqliteHistoryRepository.InterpretExistsResult(Object)
  fullName: Microsoft.EntityFrameworkCore.Migrations.Internal.SqliteHistoryRepository.InterpretExistsResult(System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Sqlite/Migrations/Internal/SqliteHistoryRepository.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: InterpretExistsResult
    path: src/Microsoft.EntityFrameworkCore.Sqlite/Migrations/Internal/SqliteHistoryRepository.cs
    startLine: 56
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite
  namespace: Microsoft.EntityFrameworkCore.Migrations.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected override bool InterpretExistsResult(object value)
    content.vb: Protected Overrides Function InterpretExistsResult(value As Object) As Boolean
    parameters:
    - id: value
      type: System.Object
    return:
      type: System.Boolean
  overridden: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.InterpretExistsResult(System.Object)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Migrations.Internal.SqliteHistoryRepository.GetCreateIfNotExistsScript
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.Internal.SqliteHistoryRepository.GetCreateIfNotExistsScript
  id: GetCreateIfNotExistsScript
  parent: Microsoft.EntityFrameworkCore.Migrations.Internal.SqliteHistoryRepository
  langs:
  - csharp
  - vb
  name: GetCreateIfNotExistsScript()
  nameWithType: SqliteHistoryRepository.GetCreateIfNotExistsScript()
  fullName: Microsoft.EntityFrameworkCore.Migrations.Internal.SqliteHistoryRepository.GetCreateIfNotExistsScript()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Sqlite/Migrations/Internal/SqliteHistoryRepository.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GetCreateIfNotExistsScript
    path: src/Microsoft.EntityFrameworkCore.Sqlite/Migrations/Internal/SqliteHistoryRepository.cs
    startLine: 62
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite
  namespace: Microsoft.EntityFrameworkCore.Migrations.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public override string GetCreateIfNotExistsScript()
    content.vb: Public Overrides Function GetCreateIfNotExistsScript As String
    return:
      type: System.String
  overridden: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetCreateIfNotExistsScript
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Migrations.Internal.SqliteHistoryRepository.GetBeginIfNotExistsScript(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.Internal.SqliteHistoryRepository.GetBeginIfNotExistsScript(System.String)
  id: GetBeginIfNotExistsScript(System.String)
  parent: Microsoft.EntityFrameworkCore.Migrations.Internal.SqliteHistoryRepository
  langs:
  - csharp
  - vb
  name: GetBeginIfNotExistsScript(String)
  nameWithType: SqliteHistoryRepository.GetBeginIfNotExistsScript(String)
  fullName: Microsoft.EntityFrameworkCore.Migrations.Internal.SqliteHistoryRepository.GetBeginIfNotExistsScript(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Sqlite/Migrations/Internal/SqliteHistoryRepository.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GetBeginIfNotExistsScript
    path: src/Microsoft.EntityFrameworkCore.Sqlite/Migrations/Internal/SqliteHistoryRepository.cs
    startLine: 73
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite
  namespace: Microsoft.EntityFrameworkCore.Migrations.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public override string GetBeginIfNotExistsScript(string migrationId)
    content.vb: Public Overrides Function GetBeginIfNotExistsScript(migrationId As String) As String
    parameters:
    - id: migrationId
      type: System.String
    return:
      type: System.String
  overridden: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetBeginIfNotExistsScript(System.String)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Migrations.Internal.SqliteHistoryRepository.GetBeginIfExistsScript(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.Internal.SqliteHistoryRepository.GetBeginIfExistsScript(System.String)
  id: GetBeginIfExistsScript(System.String)
  parent: Microsoft.EntityFrameworkCore.Migrations.Internal.SqliteHistoryRepository
  langs:
  - csharp
  - vb
  name: GetBeginIfExistsScript(String)
  nameWithType: SqliteHistoryRepository.GetBeginIfExistsScript(String)
  fullName: Microsoft.EntityFrameworkCore.Migrations.Internal.SqliteHistoryRepository.GetBeginIfExistsScript(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Sqlite/Migrations/Internal/SqliteHistoryRepository.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GetBeginIfExistsScript
    path: src/Microsoft.EntityFrameworkCore.Sqlite/Migrations/Internal/SqliteHistoryRepository.cs
    startLine: 82
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite
  namespace: Microsoft.EntityFrameworkCore.Migrations.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public override string GetBeginIfExistsScript(string migrationId)
    content.vb: Public Overrides Function GetBeginIfExistsScript(migrationId As String) As String
    parameters:
    - id: migrationId
      type: System.String
    return:
      type: System.String
  overridden: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetBeginIfExistsScript(System.String)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Migrations.Internal.SqliteHistoryRepository.GetEndIfScript
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.Internal.SqliteHistoryRepository.GetEndIfScript
  id: GetEndIfScript
  parent: Microsoft.EntityFrameworkCore.Migrations.Internal.SqliteHistoryRepository
  langs:
  - csharp
  - vb
  name: GetEndIfScript()
  nameWithType: SqliteHistoryRepository.GetEndIfScript()
  fullName: Microsoft.EntityFrameworkCore.Migrations.Internal.SqliteHistoryRepository.GetEndIfScript()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Sqlite/Migrations/Internal/SqliteHistoryRepository.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GetEndIfScript
    path: src/Microsoft.EntityFrameworkCore.Sqlite/Migrations/Internal/SqliteHistoryRepository.cs
    startLine: 91
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite
  namespace: Microsoft.EntityFrameworkCore.Migrations.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public override string GetEndIfScript()
    content.vb: Public Overrides Function GetEndIfScript As String
    return:
      type: System.String
  overridden: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetEndIfScript
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.EntityFrameworkCore.Migrations.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Migrations.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Migrations.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Migrations.Internal
  fullName: Microsoft.EntityFrameworkCore.Migrations.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository
  commentId: T:Microsoft.EntityFrameworkCore.Migrations.HistoryRepository
  parent: Microsoft.EntityFrameworkCore.Migrations
  isExternal: false
  name: HistoryRepository
  nameWithType: HistoryRepository
  fullName: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository
- uid: Microsoft.EntityFrameworkCore.Migrations.IHistoryRepository
  commentId: T:Microsoft.EntityFrameworkCore.Migrations.IHistoryRepository
  parent: Microsoft.EntityFrameworkCore.Migrations
  isExternal: false
  name: IHistoryRepository
  nameWithType: IHistoryRepository
  fullName: Microsoft.EntityFrameworkCore.Migrations.IHistoryRepository
- uid: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.DefaultTableName
  commentId: F:Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.DefaultTableName
  parent: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository
  isExternal: false
  name: DefaultTableName
  nameWithType: HistoryRepository.DefaultTableName
  fullName: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.DefaultTableName
- uid: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.SqlGenerationHelper
  commentId: P:Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.SqlGenerationHelper
  parent: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository
  isExternal: false
  name: SqlGenerationHelper
  nameWithType: HistoryRepository.SqlGenerationHelper
  fullName: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.SqlGenerationHelper
- uid: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.TableName
  commentId: P:Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.TableName
  parent: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository
  isExternal: false
  name: TableName
  nameWithType: HistoryRepository.TableName
  fullName: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.TableName
- uid: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.TableSchema
  commentId: P:Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.TableSchema
  parent: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository
  isExternal: false
  name: TableSchema
  nameWithType: HistoryRepository.TableSchema
  fullName: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.TableSchema
- uid: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.MigrationIdColumnName
  commentId: P:Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.MigrationIdColumnName
  parent: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository
  isExternal: false
  name: MigrationIdColumnName
  nameWithType: HistoryRepository.MigrationIdColumnName
  fullName: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.MigrationIdColumnName
- uid: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.ProductVersionColumnName
  commentId: P:Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.ProductVersionColumnName
  parent: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository
  isExternal: false
  name: ProductVersionColumnName
  nameWithType: HistoryRepository.ProductVersionColumnName
  fullName: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.ProductVersionColumnName
- uid: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.Exists
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.Exists
  parent: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository
  isExternal: false
  name: Exists()
  nameWithType: HistoryRepository.Exists()
  fullName: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.Exists()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.Exists
    name: Exists
    nameWithType: HistoryRepository.Exists
    fullName: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.Exists
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.Exists
    name: Exists
    nameWithType: HistoryRepository.Exists
    fullName: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.Exists
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.ExistsAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.ExistsAsync(System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository
  isExternal: true
  name: ExistsAsync(CancellationToken)
  nameWithType: HistoryRepository.ExistsAsync(CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.ExistsAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.ExistsAsync(System.Threading.CancellationToken)
    name: ExistsAsync
    nameWithType: HistoryRepository.ExistsAsync
    fullName: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.ExistsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.ExistsAsync(System.Threading.CancellationToken)
    name: ExistsAsync
    nameWithType: HistoryRepository.ExistsAsync
    fullName: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.ExistsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetCreateScript
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetCreateScript
  parent: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository
  isExternal: false
  name: GetCreateScript()
  nameWithType: HistoryRepository.GetCreateScript()
  fullName: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetCreateScript()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetCreateScript
    name: GetCreateScript
    nameWithType: HistoryRepository.GetCreateScript
    fullName: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetCreateScript
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetCreateScript
    name: GetCreateScript
    nameWithType: HistoryRepository.GetCreateScript
    fullName: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetCreateScript
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.ConfigureTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{Microsoft.EntityFrameworkCore.Migrations.HistoryRow})
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.ConfigureTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{Microsoft.EntityFrameworkCore.Migrations.HistoryRow})
  parent: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository
  isExternal: false
  name: ConfigureTable(EntityTypeBuilder<HistoryRow>)
  nameWithType: HistoryRepository.ConfigureTable(EntityTypeBuilder<HistoryRow>)
  fullName: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.ConfigureTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<Microsoft.EntityFrameworkCore.Migrations.HistoryRow>)
  nameWithType.vb: HistoryRepository.ConfigureTable(EntityTypeBuilder(Of HistoryRow))
  fullname.vb: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.ConfigureTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of Microsoft.EntityFrameworkCore.Migrations.HistoryRow))
  name.vb: ConfigureTable(EntityTypeBuilder(Of HistoryRow))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.ConfigureTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{Microsoft.EntityFrameworkCore.Migrations.HistoryRow})
    name: ConfigureTable
    nameWithType: HistoryRepository.ConfigureTable
    fullName: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.ConfigureTable
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1
    name: EntityTypeBuilder
    nameWithType: EntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Migrations.HistoryRow
    name: HistoryRow
    nameWithType: HistoryRow
    fullName: Microsoft.EntityFrameworkCore.Migrations.HistoryRow
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.ConfigureTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{Microsoft.EntityFrameworkCore.Migrations.HistoryRow})
    name: ConfigureTable
    nameWithType: HistoryRepository.ConfigureTable
    fullName: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.ConfigureTable
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1
    name: EntityTypeBuilder
    nameWithType: EntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Migrations.HistoryRow
    name: HistoryRow
    nameWithType: HistoryRow
    fullName: Microsoft.EntityFrameworkCore.Migrations.HistoryRow
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetAppliedMigrations
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetAppliedMigrations
  parent: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository
  isExternal: false
  name: GetAppliedMigrations()
  nameWithType: HistoryRepository.GetAppliedMigrations()
  fullName: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetAppliedMigrations()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetAppliedMigrations
    name: GetAppliedMigrations
    nameWithType: HistoryRepository.GetAppliedMigrations
    fullName: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetAppliedMigrations
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetAppliedMigrations
    name: GetAppliedMigrations
    nameWithType: HistoryRepository.GetAppliedMigrations
    fullName: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetAppliedMigrations
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetAppliedMigrationsAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetAppliedMigrationsAsync(System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository
  isExternal: true
  name: GetAppliedMigrationsAsync(CancellationToken)
  nameWithType: HistoryRepository.GetAppliedMigrationsAsync(CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetAppliedMigrationsAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetAppliedMigrationsAsync(System.Threading.CancellationToken)
    name: GetAppliedMigrationsAsync
    nameWithType: HistoryRepository.GetAppliedMigrationsAsync
    fullName: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetAppliedMigrationsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetAppliedMigrationsAsync(System.Threading.CancellationToken)
    name: GetAppliedMigrationsAsync
    nameWithType: HistoryRepository.GetAppliedMigrationsAsync
    fullName: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetAppliedMigrationsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetAppliedMigrationsSql
  commentId: P:Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetAppliedMigrationsSql
  parent: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository
  isExternal: false
  name: GetAppliedMigrationsSql
  nameWithType: HistoryRepository.GetAppliedMigrationsSql
  fullName: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetAppliedMigrationsSql
- uid: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetInsertScript(Microsoft.EntityFrameworkCore.Migrations.HistoryRow)
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetInsertScript(Microsoft.EntityFrameworkCore.Migrations.HistoryRow)
  parent: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository
  isExternal: false
  name: GetInsertScript(HistoryRow)
  nameWithType: HistoryRepository.GetInsertScript(HistoryRow)
  fullName: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetInsertScript(Microsoft.EntityFrameworkCore.Migrations.HistoryRow)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetInsertScript(Microsoft.EntityFrameworkCore.Migrations.HistoryRow)
    name: GetInsertScript
    nameWithType: HistoryRepository.GetInsertScript
    fullName: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetInsertScript
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Migrations.HistoryRow
    name: HistoryRow
    nameWithType: HistoryRow
    fullName: Microsoft.EntityFrameworkCore.Migrations.HistoryRow
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetInsertScript(Microsoft.EntityFrameworkCore.Migrations.HistoryRow)
    name: GetInsertScript
    nameWithType: HistoryRepository.GetInsertScript
    fullName: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetInsertScript
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Migrations.HistoryRow
    name: HistoryRow
    nameWithType: HistoryRow
    fullName: Microsoft.EntityFrameworkCore.Migrations.HistoryRow
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetDeleteScript(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetDeleteScript(System.String)
  parent: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository
  isExternal: true
  name: GetDeleteScript(String)
  nameWithType: HistoryRepository.GetDeleteScript(String)
  fullName: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetDeleteScript(System.String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetDeleteScript(System.String)
    name: GetDeleteScript
    nameWithType: HistoryRepository.GetDeleteScript
    fullName: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetDeleteScript
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetDeleteScript(System.String)
    name: GetDeleteScript
    nameWithType: HistoryRepository.GetDeleteScript
    fullName: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetDeleteScript
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Migrations.Internal.SqliteHistoryRepository.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<SqliteHistoryRepository, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<SqliteHistoryRepository, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Migrations.Internal.SqliteHistoryRepository, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of SqliteHistoryRepository, TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Migrations.Internal.SqliteHistoryRepository, TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of SqliteHistoryRepository, TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<SqliteHistoryRepository, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<SqliteHistoryRepository, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Migrations.Internal.SqliteHistoryRepository, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of SqliteHistoryRepository, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of SqliteHistoryRepository, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Migrations.Internal.SqliteHistoryRepository, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Migrations
  commentId: N:Microsoft.EntityFrameworkCore.Migrations
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Migrations
  nameWithType: Microsoft.EntityFrameworkCore.Migrations
  fullName: Microsoft.EntityFrameworkCore.Migrations
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IDatabaseCreator
  nameWithType: IDatabaseCreator
  fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator
- uid: Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IRawSqlCommandBuilder
  nameWithType: IRawSqlCommandBuilder
  fullName: Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IRelationalConnection
  nameWithType: IRelationalConnection
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions
  parent: Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: IDbContextOptions
  nameWithType: IDbContextOptions
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions
- uid: Microsoft.EntityFrameworkCore.Migrations.IMigrationsModelDiffer
  commentId: T:Microsoft.EntityFrameworkCore.Migrations.IMigrationsModelDiffer
  parent: Microsoft.EntityFrameworkCore.Migrations
  isExternal: false
  name: IMigrationsModelDiffer
  nameWithType: IMigrationsModelDiffer
  fullName: Microsoft.EntityFrameworkCore.Migrations.IMigrationsModelDiffer
- uid: Microsoft.EntityFrameworkCore.Migrations.IMigrationsSqlGenerator
  commentId: T:Microsoft.EntityFrameworkCore.Migrations.IMigrationsSqlGenerator
  parent: Microsoft.EntityFrameworkCore.Migrations
  isExternal: false
  name: IMigrationsSqlGenerator
  nameWithType: IMigrationsSqlGenerator
  fullName: Microsoft.EntityFrameworkCore.Migrations.IMigrationsSqlGenerator
- uid: Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IRelationalAnnotationProvider
  nameWithType: IRelationalAnnotationProvider
  fullName: Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider
- uid: Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper
  commentId: T:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: ISqlGenerationHelper
  nameWithType: ISqlGenerationHelper
  fullName: Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper
- uid: Microsoft.EntityFrameworkCore.Storage
  commentId: N:Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Storage
  nameWithType: Microsoft.EntityFrameworkCore.Storage
  fullName: Microsoft.EntityFrameworkCore.Storage
- uid: Microsoft.EntityFrameworkCore.Infrastructure
  commentId: N:Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Infrastructure
  nameWithType: Microsoft.EntityFrameworkCore.Infrastructure
  fullName: Microsoft.EntityFrameworkCore.Infrastructure
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.ExistsSql
  commentId: P:Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.ExistsSql
  parent: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository
  isExternal: false
  name: ExistsSql
  nameWithType: HistoryRepository.ExistsSql
  fullName: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.ExistsSql
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.InterpretExistsResult(System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.InterpretExistsResult(System.Object)
  parent: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository
  isExternal: true
  name: InterpretExistsResult(Object)
  nameWithType: HistoryRepository.InterpretExistsResult(Object)
  fullName: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.InterpretExistsResult(System.Object)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.InterpretExistsResult(System.Object)
    name: InterpretExistsResult
    nameWithType: HistoryRepository.InterpretExistsResult
    fullName: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.InterpretExistsResult
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.InterpretExistsResult(System.Object)
    name: InterpretExistsResult
    nameWithType: HistoryRepository.InterpretExistsResult
    fullName: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.InterpretExistsResult
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetCreateIfNotExistsScript
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetCreateIfNotExistsScript
  parent: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository
  isExternal: false
  name: GetCreateIfNotExistsScript()
  nameWithType: HistoryRepository.GetCreateIfNotExistsScript()
  fullName: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetCreateIfNotExistsScript()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetCreateIfNotExistsScript
    name: GetCreateIfNotExistsScript
    nameWithType: HistoryRepository.GetCreateIfNotExistsScript
    fullName: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetCreateIfNotExistsScript
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetCreateIfNotExistsScript
    name: GetCreateIfNotExistsScript
    nameWithType: HistoryRepository.GetCreateIfNotExistsScript
    fullName: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetCreateIfNotExistsScript
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetBeginIfNotExistsScript(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetBeginIfNotExistsScript(System.String)
  parent: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository
  isExternal: true
  name: GetBeginIfNotExistsScript(String)
  nameWithType: HistoryRepository.GetBeginIfNotExistsScript(String)
  fullName: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetBeginIfNotExistsScript(System.String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetBeginIfNotExistsScript(System.String)
    name: GetBeginIfNotExistsScript
    nameWithType: HistoryRepository.GetBeginIfNotExistsScript
    fullName: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetBeginIfNotExistsScript
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetBeginIfNotExistsScript(System.String)
    name: GetBeginIfNotExistsScript
    nameWithType: HistoryRepository.GetBeginIfNotExistsScript
    fullName: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetBeginIfNotExistsScript
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetBeginIfExistsScript(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetBeginIfExistsScript(System.String)
  parent: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository
  isExternal: true
  name: GetBeginIfExistsScript(String)
  nameWithType: HistoryRepository.GetBeginIfExistsScript(String)
  fullName: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetBeginIfExistsScript(System.String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetBeginIfExistsScript(System.String)
    name: GetBeginIfExistsScript
    nameWithType: HistoryRepository.GetBeginIfExistsScript
    fullName: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetBeginIfExistsScript
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetBeginIfExistsScript(System.String)
    name: GetBeginIfExistsScript
    nameWithType: HistoryRepository.GetBeginIfExistsScript
    fullName: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetBeginIfExistsScript
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetEndIfScript
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetEndIfScript
  parent: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository
  isExternal: false
  name: GetEndIfScript()
  nameWithType: HistoryRepository.GetEndIfScript()
  fullName: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetEndIfScript()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetEndIfScript
    name: GetEndIfScript
    nameWithType: HistoryRepository.GetEndIfScript
    fullName: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetEndIfScript
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetEndIfScript
    name: GetEndIfScript
    nameWithType: HistoryRepository.GetEndIfScript
    fullName: Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetEndIfScript
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
