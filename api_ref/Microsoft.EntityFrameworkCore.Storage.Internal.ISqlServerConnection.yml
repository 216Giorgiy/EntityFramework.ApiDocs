### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.ISqlServerConnection
  commentId: T:Microsoft.EntityFrameworkCore.Storage.Internal.ISqlServerConnection
  id: ISqlServerConnection
  parent: Microsoft.EntityFrameworkCore.Storage.Internal
  children:
  - Microsoft.EntityFrameworkCore.Storage.Internal.ISqlServerConnection.CreateMasterConnection
  langs:
  - csharp
  - vb
  name: ISqlServerConnection
  nameWithType: ISqlServerConnection
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.ISqlServerConnection
  type: Interface
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer/Storage/Internal/ISqlServerConnection.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ISqlServerConnection
    path: src/Microsoft.EntityFrameworkCore.SqlServer/Storage/Internal/ISqlServerConnection.cs
    startLine: 9
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public interface ISqlServerConnection : IRelationalConnection, IRelationalTransactionManager, IDbContextTransactionManager, IDisposable'
    content.vb: >-
      Public Interface ISqlServerConnection
          Inherits IRelationalConnection
  inheritedMembers:
  - Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.ConnectionString
  - Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.DbConnection
  - Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.CommandTimeout
  - Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.Open
  - Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.OpenAsync(System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.Close
  - Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.IsMultipleActiveResultSetsEnabled
  - Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.ActiveCursor
  - Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager.BeginTransaction(System.Data.IsolationLevel)
  - Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager.BeginTransactionAsync(System.Data.IsolationLevel,System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager.UseTransaction(System.Data.Common.DbTransaction)
  - Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransaction
  - Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransactionAsync(System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.CommitTransaction
  - Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.RollbackTransaction
  - Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.CurrentTransaction
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.ISqlServerConnection.CreateMasterConnection
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.ISqlServerConnection.CreateMasterConnection
  id: CreateMasterConnection
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.ISqlServerConnection
  langs:
  - csharp
  - vb
  name: CreateMasterConnection()
  nameWithType: ISqlServerConnection.CreateMasterConnection()
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.ISqlServerConnection.CreateMasterConnection()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer/Storage/Internal/ISqlServerConnection.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateMasterConnection
    path: src/Microsoft.EntityFrameworkCore.SqlServer/Storage/Internal/ISqlServerConnection.cs
    startLine: 15
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: ISqlServerConnection CreateMasterConnection()
    content.vb: Function CreateMasterConnection As ISqlServerConnection
    return:
      type: Microsoft.EntityFrameworkCore.Storage.Internal.ISqlServerConnection
  overload: Microsoft.EntityFrameworkCore.Storage.Internal.ISqlServerConnection.CreateMasterConnection*
references:
- uid: Microsoft.EntityFrameworkCore.Storage.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Storage.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Storage.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Storage.Internal
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.ConnectionString
  commentId: P:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.ConnectionString
  parent: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
  isExternal: false
  name: ConnectionString
  nameWithType: IRelationalConnection.ConnectionString
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.ConnectionString
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.DbConnection
  commentId: P:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.DbConnection
  parent: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
  isExternal: false
  name: DbConnection
  nameWithType: IRelationalConnection.DbConnection
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.DbConnection
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.CommandTimeout
  commentId: P:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.CommandTimeout
  parent: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
  isExternal: false
  name: CommandTimeout
  nameWithType: IRelationalConnection.CommandTimeout
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.CommandTimeout
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.Open
  commentId: M:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.Open
  parent: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
  isExternal: false
  name: Open()
  nameWithType: IRelationalConnection.Open()
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.Open()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.Open
    name: Open
    nameWithType: IRelationalConnection.Open
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.Open
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.Open
    name: Open
    nameWithType: IRelationalConnection.Open
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.Open
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.OpenAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.OpenAsync(System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
  isExternal: true
  name: OpenAsync(CancellationToken)
  nameWithType: IRelationalConnection.OpenAsync(CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.OpenAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.OpenAsync(System.Threading.CancellationToken)
    name: OpenAsync
    nameWithType: IRelationalConnection.OpenAsync
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.OpenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.OpenAsync(System.Threading.CancellationToken)
    name: OpenAsync
    nameWithType: IRelationalConnection.OpenAsync
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.OpenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.Close
  commentId: M:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.Close
  parent: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
  isExternal: false
  name: Close()
  nameWithType: IRelationalConnection.Close()
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.Close()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.Close
    name: Close
    nameWithType: IRelationalConnection.Close
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.Close
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.Close
    name: Close
    nameWithType: IRelationalConnection.Close
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.Close
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.IsMultipleActiveResultSetsEnabled
  commentId: P:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.IsMultipleActiveResultSetsEnabled
  parent: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
  isExternal: false
  name: IsMultipleActiveResultSetsEnabled
  nameWithType: IRelationalConnection.IsMultipleActiveResultSetsEnabled
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.IsMultipleActiveResultSetsEnabled
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.ActiveCursor
  commentId: P:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.ActiveCursor
  parent: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
  isExternal: false
  name: ActiveCursor
  nameWithType: IRelationalConnection.ActiveCursor
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.ActiveCursor
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager.BeginTransaction(System.Data.IsolationLevel)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager.BeginTransaction(System.Data.IsolationLevel)
  parent: Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager
  isExternal: true
  name: BeginTransaction(IsolationLevel)
  nameWithType: IRelationalTransactionManager.BeginTransaction(IsolationLevel)
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager.BeginTransaction(System.Data.IsolationLevel)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager.BeginTransaction(System.Data.IsolationLevel)
    name: BeginTransaction
    nameWithType: IRelationalTransactionManager.BeginTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager.BeginTransaction
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.IsolationLevel
    name: IsolationLevel
    nameWithType: IsolationLevel
    fullName: System.Data.IsolationLevel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager.BeginTransaction(System.Data.IsolationLevel)
    name: BeginTransaction
    nameWithType: IRelationalTransactionManager.BeginTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager.BeginTransaction
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.IsolationLevel
    name: IsolationLevel
    nameWithType: IsolationLevel
    fullName: System.Data.IsolationLevel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager.BeginTransactionAsync(System.Data.IsolationLevel,System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager.BeginTransactionAsync(System.Data.IsolationLevel,System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager
  isExternal: true
  name: BeginTransactionAsync(IsolationLevel, CancellationToken)
  nameWithType: IRelationalTransactionManager.BeginTransactionAsync(IsolationLevel, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager.BeginTransactionAsync(System.Data.IsolationLevel, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager.BeginTransactionAsync(System.Data.IsolationLevel,System.Threading.CancellationToken)
    name: BeginTransactionAsync
    nameWithType: IRelationalTransactionManager.BeginTransactionAsync
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager.BeginTransactionAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.IsolationLevel
    name: IsolationLevel
    nameWithType: IsolationLevel
    fullName: System.Data.IsolationLevel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager.BeginTransactionAsync(System.Data.IsolationLevel,System.Threading.CancellationToken)
    name: BeginTransactionAsync
    nameWithType: IRelationalTransactionManager.BeginTransactionAsync
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager.BeginTransactionAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.IsolationLevel
    name: IsolationLevel
    nameWithType: IsolationLevel
    fullName: System.Data.IsolationLevel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager.UseTransaction(System.Data.Common.DbTransaction)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager.UseTransaction(System.Data.Common.DbTransaction)
  parent: Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager
  isExternal: true
  name: UseTransaction(DbTransaction)
  nameWithType: IRelationalTransactionManager.UseTransaction(DbTransaction)
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager.UseTransaction(System.Data.Common.DbTransaction)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager.UseTransaction(System.Data.Common.DbTransaction)
    name: UseTransaction
    nameWithType: IRelationalTransactionManager.UseTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager.UseTransaction
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.Common.DbTransaction
    name: DbTransaction
    nameWithType: DbTransaction
    fullName: System.Data.Common.DbTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager.UseTransaction(System.Data.Common.DbTransaction)
    name: UseTransaction
    nameWithType: IRelationalTransactionManager.UseTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager.UseTransaction
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.Common.DbTransaction
    name: DbTransaction
    nameWithType: DbTransaction
    fullName: System.Data.Common.DbTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransaction
  commentId: M:Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransaction
  parent: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager
  isExternal: false
  name: BeginTransaction()
  nameWithType: IDbContextTransactionManager.BeginTransaction()
  fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransaction()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransaction
    name: BeginTransaction
    nameWithType: IDbContextTransactionManager.BeginTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransaction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransaction
    name: BeginTransaction
    nameWithType: IDbContextTransactionManager.BeginTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransaction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransactionAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransactionAsync(System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager
  isExternal: true
  name: BeginTransactionAsync(CancellationToken)
  nameWithType: IDbContextTransactionManager.BeginTransactionAsync(CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransactionAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransactionAsync(System.Threading.CancellationToken)
    name: BeginTransactionAsync
    nameWithType: IDbContextTransactionManager.BeginTransactionAsync
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransactionAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransactionAsync(System.Threading.CancellationToken)
    name: BeginTransactionAsync
    nameWithType: IDbContextTransactionManager.BeginTransactionAsync
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransactionAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.CommitTransaction
  commentId: M:Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.CommitTransaction
  parent: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager
  isExternal: false
  name: CommitTransaction()
  nameWithType: IDbContextTransactionManager.CommitTransaction()
  fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.CommitTransaction()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.CommitTransaction
    name: CommitTransaction
    nameWithType: IDbContextTransactionManager.CommitTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.CommitTransaction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.CommitTransaction
    name: CommitTransaction
    nameWithType: IDbContextTransactionManager.CommitTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.CommitTransaction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.RollbackTransaction
  commentId: M:Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.RollbackTransaction
  parent: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager
  isExternal: false
  name: RollbackTransaction()
  nameWithType: IDbContextTransactionManager.RollbackTransaction()
  fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.RollbackTransaction()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.RollbackTransaction
    name: RollbackTransaction
    nameWithType: IDbContextTransactionManager.RollbackTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.RollbackTransaction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.RollbackTransaction
    name: RollbackTransaction
    nameWithType: IDbContextTransactionManager.RollbackTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.RollbackTransaction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.CurrentTransaction
  commentId: P:Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.CurrentTransaction
  parent: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager
  isExternal: false
  name: CurrentTransaction
  nameWithType: IDbContextTransactionManager.CurrentTransaction
  fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.CurrentTransaction
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IRelationalConnection
  nameWithType: IRelationalConnection
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IRelationalTransactionManager
  nameWithType: IRelationalTransactionManager
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IDbContextTransactionManager
  nameWithType: IDbContextTransactionManager
  fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Microsoft.EntityFrameworkCore.Storage
  commentId: N:Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Storage
  nameWithType: Microsoft.EntityFrameworkCore.Storage
  fullName: Microsoft.EntityFrameworkCore.Storage
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.ISqlServerConnection.CreateMasterConnection*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.Internal.ISqlServerConnection.CreateMasterConnection
  isExternal: false
  name: CreateMasterConnection
  nameWithType: ISqlServerConnection.CreateMasterConnection
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.ISqlServerConnection.CreateMasterConnection
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.ISqlServerConnection
  commentId: T:Microsoft.EntityFrameworkCore.Storage.Internal.ISqlServerConnection
  parent: Microsoft.EntityFrameworkCore.Storage.Internal
  isExternal: false
  name: ISqlServerConnection
  nameWithType: ISqlServerConnection
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.ISqlServerConnection
