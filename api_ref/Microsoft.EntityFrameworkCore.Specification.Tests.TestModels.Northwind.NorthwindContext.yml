### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.NorthwindContext
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.NorthwindContext
  id: NorthwindContext
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind
  children:
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.NorthwindContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions,Microsoft.EntityFrameworkCore.QueryTrackingBehavior)
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.NorthwindContext.Customers
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.NorthwindContext.Employees
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.NorthwindContext.OrderDetails
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.NorthwindContext.Orders
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.NorthwindContext.Products
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.NorthwindContext.StoreName
  langs:
  - csharp
  - vb
  name: NorthwindContext
  nameWithType: NorthwindContext
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.NorthwindContext
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/Northwind/NorthwindContext.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: NorthwindContext
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/Northwind/NorthwindContext.cs
    startLine: 5
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind
  syntax:
    content: 'public class NorthwindContext : DbContext, IDisposable, IInfrastructure<IServiceProvider>'
    content.vb: >-
      Public Class NorthwindContext
          Inherits DbContext
          Implements IDisposable, IInfrastructure(Of IServiceProvider)
  inheritance:
  - System.Object
  - Microsoft.EntityFrameworkCore.DbContext
  implements:
  - System.IDisposable
  - Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{System.IServiceProvider}
  inheritedMembers:
  - Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{System#IServiceProvider}#Instance
  - Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
  - Microsoft.EntityFrameworkCore.DbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  - Microsoft.EntityFrameworkCore.DbContext.SaveChanges
  - Microsoft.EntityFrameworkCore.DbContext.SaveChanges(System.Boolean)
  - Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Boolean,System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.DbContext.Dispose
  - Microsoft.EntityFrameworkCore.DbContext.Entry``1({TEntity})
  - Microsoft.EntityFrameworkCore.DbContext.Entry(System.Object)
  - Microsoft.EntityFrameworkCore.DbContext.Add``1({TEntity})
  - Microsoft.EntityFrameworkCore.DbContext.AddAsync``1({TEntity},System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.DbContext.Attach``1({TEntity})
  - Microsoft.EntityFrameworkCore.DbContext.Update``1({TEntity})
  - Microsoft.EntityFrameworkCore.DbContext.Remove``1({TEntity})
  - Microsoft.EntityFrameworkCore.DbContext.Add(System.Object)
  - Microsoft.EntityFrameworkCore.DbContext.AddAsync(System.Object,System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.DbContext.Attach(System.Object)
  - Microsoft.EntityFrameworkCore.DbContext.Update(System.Object)
  - Microsoft.EntityFrameworkCore.DbContext.Remove(System.Object)
  - Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Object[])
  - Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Object[])
  - Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Object[])
  - Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Object[])
  - Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Object[])
  - Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Collections.Generic.IEnumerable{System.Object})
  - Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Collections.Generic.IEnumerable{System.Object},System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Collections.Generic.IEnumerable{System.Object})
  - Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Collections.Generic.IEnumerable{System.Object})
  - Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Collections.Generic.IEnumerable{System.Object})
  - Microsoft.EntityFrameworkCore.DbContext.Database
  - Microsoft.EntityFrameworkCore.DbContext.ChangeTracker
  - Microsoft.EntityFrameworkCore.DbContext.Model
  - Microsoft.EntityFrameworkCore.DbContext.Set``1
  - Microsoft.EntityFrameworkCore.DbContext.Find(System.Type,System.Object[])
  - Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type,System.Object[])
  - Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type,System.Object[],System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.DbContext.Find``1(System.Object[])
  - Microsoft.EntityFrameworkCore.DbContext.FindAsync``1(System.Object[])
  - Microsoft.EntityFrameworkCore.DbContext.FindAsync``1(System.Object[],System.Threading.CancellationToken)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.NorthwindContext.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.NorthwindContext.StoreName
  commentId: F:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.NorthwindContext.StoreName
  id: StoreName
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.NorthwindContext
  langs:
  - csharp
  - vb
  name: StoreName
  nameWithType: NorthwindContext.StoreName
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.NorthwindContext.StoreName
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/Northwind/NorthwindContext.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: StoreName
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/Northwind/NorthwindContext.cs
    startLine: 7
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind
  syntax:
    content: public static readonly string StoreName
    content.vb: Public Shared ReadOnly StoreName As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.NorthwindContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions,Microsoft.EntityFrameworkCore.QueryTrackingBehavior)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.NorthwindContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions,Microsoft.EntityFrameworkCore.QueryTrackingBehavior)
  id: '#ctor(Microsoft.EntityFrameworkCore.DbContextOptions,Microsoft.EntityFrameworkCore.QueryTrackingBehavior)'
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.NorthwindContext
  langs:
  - csharp
  - vb
  name: NorthwindContext(DbContextOptions, QueryTrackingBehavior)
  nameWithType: NorthwindContext.NorthwindContext(DbContextOptions, QueryTrackingBehavior)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.NorthwindContext.NorthwindContext(Microsoft.EntityFrameworkCore.DbContextOptions, Microsoft.EntityFrameworkCore.QueryTrackingBehavior)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/Northwind/NorthwindContext.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/Northwind/NorthwindContext.cs
    startLine: 9
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind
  syntax:
    content: public NorthwindContext(DbContextOptions options, QueryTrackingBehavior queryTrackingBehavior = QueryTrackingBehavior.TrackAll)
    content.vb: Public Sub New(options As DbContextOptions, queryTrackingBehavior As QueryTrackingBehavior = QueryTrackingBehavior.TrackAll)
    parameters:
    - id: options
      type: Microsoft.EntityFrameworkCore.DbContextOptions
    - id: queryTrackingBehavior
      type: Microsoft.EntityFrameworkCore.QueryTrackingBehavior
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.NorthwindContext.Customers
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.NorthwindContext.Customers
  id: Customers
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.NorthwindContext
  langs:
  - csharp
  - vb
  name: Customers
  nameWithType: NorthwindContext.Customers
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.NorthwindContext.Customers
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/Northwind/NorthwindContext.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Customers
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/Northwind/NorthwindContext.cs
    startLine: 18
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind
  syntax:
    content: public virtual DbSet<Customer> Customers { get; set; }
    content.vb: Public Overridable Property Customers As DbSet(Of Customer)
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.Customer}
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.NorthwindContext.Employees
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.NorthwindContext.Employees
  id: Employees
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.NorthwindContext
  langs:
  - csharp
  - vb
  name: Employees
  nameWithType: NorthwindContext.Employees
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.NorthwindContext.Employees
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/Northwind/NorthwindContext.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Employees
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/Northwind/NorthwindContext.cs
    startLine: 19
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind
  syntax:
    content: public virtual DbSet<Employee> Employees { get; set; }
    content.vb: Public Overridable Property Employees As DbSet(Of Employee)
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.Employee}
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.NorthwindContext.Orders
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.NorthwindContext.Orders
  id: Orders
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.NorthwindContext
  langs:
  - csharp
  - vb
  name: Orders
  nameWithType: NorthwindContext.Orders
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.NorthwindContext.Orders
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/Northwind/NorthwindContext.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Orders
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/Northwind/NorthwindContext.cs
    startLine: 20
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind
  syntax:
    content: public virtual DbSet<Order> Orders { get; set; }
    content.vb: Public Overridable Property Orders As DbSet(Of Order)
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.Order}
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.NorthwindContext.OrderDetails
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.NorthwindContext.OrderDetails
  id: OrderDetails
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.NorthwindContext
  langs:
  - csharp
  - vb
  name: OrderDetails
  nameWithType: NorthwindContext.OrderDetails
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.NorthwindContext.OrderDetails
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/Northwind/NorthwindContext.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: OrderDetails
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/Northwind/NorthwindContext.cs
    startLine: 21
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind
  syntax:
    content: public virtual DbSet<OrderDetail> OrderDetails { get; set; }
    content.vb: Public Overridable Property OrderDetails As DbSet(Of OrderDetail)
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.OrderDetail}
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.NorthwindContext.Products
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.NorthwindContext.Products
  id: Products
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.NorthwindContext
  langs:
  - csharp
  - vb
  name: Products
  nameWithType: NorthwindContext.Products
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.NorthwindContext.Products
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/Northwind/NorthwindContext.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Products
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/Northwind/NorthwindContext.cs
    startLine: 22
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind
  syntax:
    content: public virtual DbSet<Product> Products { get; set; }
    content.vb: Public Overridable Property Products As DbSet(Of Product)
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.Product}
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind
  commentId: N:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind
  nameWithType: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.DbContext
  commentId: T:Microsoft.EntityFrameworkCore.DbContext
  parent: Microsoft.EntityFrameworkCore
  isExternal: false
  name: DbContext
  nameWithType: DbContext
  fullName: Microsoft.EntityFrameworkCore.DbContext
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{System.IServiceProvider}
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{System.IServiceProvider}
  parent: Microsoft.EntityFrameworkCore.Infrastructure
  definition: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
  name: IInfrastructure<IServiceProvider>
  nameWithType: IInfrastructure<IServiceProvider>
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<System.IServiceProvider>
  nameWithType.vb: IInfrastructure(Of IServiceProvider)
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of System.IServiceProvider)
  name.vb: IInfrastructure(Of IServiceProvider)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{System#IServiceProvider}#Instance
  commentId: P:Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{System#IServiceProvider}#Instance
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: false
  name: IInfrastructure<IServiceProvider>.Instance
  nameWithType: DbContext.IInfrastructure<IServiceProvider>.Instance
  fullName: Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<System.IServiceProvider>.Instance
  nameWithType.vb: DbContext.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<System.IServiceProvider>.Instance
  name.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<System.IServiceProvider>.Instance
- uid: Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: false
  name: OnConfiguring(DbContextOptionsBuilder)
  nameWithType: DbContext.OnConfiguring(DbContextOptionsBuilder)
  fullName: Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
    name: OnConfiguring
    nameWithType: DbContext.OnConfiguring
    fullName: Microsoft.EntityFrameworkCore.DbContext.OnConfiguring
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder
    name: DbContextOptionsBuilder
    nameWithType: DbContextOptionsBuilder
    fullName: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
    name: OnConfiguring
    nameWithType: DbContext.OnConfiguring
    fullName: Microsoft.EntityFrameworkCore.DbContext.OnConfiguring
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder
    name: DbContextOptionsBuilder
    nameWithType: DbContextOptionsBuilder
    fullName: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: false
  name: OnModelCreating(ModelBuilder)
  nameWithType: DbContext.OnModelCreating(ModelBuilder)
  fullName: Microsoft.EntityFrameworkCore.DbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
    name: OnModelCreating
    nameWithType: DbContext.OnModelCreating
    fullName: Microsoft.EntityFrameworkCore.DbContext.OnModelCreating
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.ModelBuilder
    name: ModelBuilder
    nameWithType: ModelBuilder
    fullName: Microsoft.EntityFrameworkCore.ModelBuilder
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
    name: OnModelCreating
    nameWithType: DbContext.OnModelCreating
    fullName: Microsoft.EntityFrameworkCore.DbContext.OnModelCreating
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.ModelBuilder
    name: ModelBuilder
    nameWithType: ModelBuilder
    fullName: Microsoft.EntityFrameworkCore.ModelBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.SaveChanges
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: false
  name: SaveChanges()
  nameWithType: DbContext.SaveChanges()
  fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChanges()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.SaveChanges
    name: SaveChanges
    nameWithType: DbContext.SaveChanges
    fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChanges
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.SaveChanges
    name: SaveChanges
    nameWithType: DbContext.SaveChanges
    fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChanges
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.SaveChanges(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: SaveChanges(Boolean)
  nameWithType: DbContext.SaveChanges(Boolean)
  fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChanges(System.Boolean)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.SaveChanges(System.Boolean)
    name: SaveChanges
    nameWithType: DbContext.SaveChanges
    fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChanges
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.SaveChanges(System.Boolean)
    name: SaveChanges
    nameWithType: DbContext.SaveChanges
    fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChanges
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: SaveChangesAsync(CancellationToken)
  nameWithType: DbContext.SaveChangesAsync(CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Threading.CancellationToken)
    name: SaveChangesAsync
    nameWithType: DbContext.SaveChangesAsync
    fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Threading.CancellationToken)
    name: SaveChangesAsync
    nameWithType: DbContext.SaveChangesAsync
    fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Boolean,System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Boolean,System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: SaveChangesAsync(Boolean, CancellationToken)
  nameWithType: DbContext.SaveChangesAsync(Boolean, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Boolean, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Boolean,System.Threading.CancellationToken)
    name: SaveChangesAsync
    nameWithType: DbContext.SaveChangesAsync
    fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Boolean,System.Threading.CancellationToken)
    name: SaveChangesAsync
    nameWithType: DbContext.SaveChangesAsync
    fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Dispose
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Dispose
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: false
  name: Dispose()
  nameWithType: DbContext.Dispose()
  fullName: Microsoft.EntityFrameworkCore.DbContext.Dispose()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Dispose
    name: Dispose
    nameWithType: DbContext.Dispose
    fullName: Microsoft.EntityFrameworkCore.DbContext.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Dispose
    name: Dispose
    nameWithType: DbContext.Dispose
    fullName: Microsoft.EntityFrameworkCore.DbContext.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Entry``1({TEntity})
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Entry``1(``0)
  parent: Microsoft.EntityFrameworkCore.DbContext
  definition: Microsoft.EntityFrameworkCore.DbContext.Entry``1(``0)
  name: Entry<TEntity>(TEntity)
  nameWithType: DbContext.Entry<TEntity>(TEntity)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Entry<TEntity>(TEntity)
  nameWithType.vb: DbContext.Entry(Of TEntity)(TEntity)
  fullname.vb: Microsoft.EntityFrameworkCore.DbContext.Entry(Of TEntity)(TEntity)
  name.vb: Entry(Of TEntity)(TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Entry``1(``0)
    name: Entry<TEntity>
    nameWithType: DbContext.Entry<TEntity>
    fullName: Microsoft.EntityFrameworkCore.DbContext.Entry<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Entry``1(``0)
    name: Entry(Of TEntity)
    nameWithType: DbContext.Entry(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.DbContext.Entry(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Entry(System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Entry(System.Object)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: Entry(Object)
  nameWithType: DbContext.Entry(Object)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Entry(System.Object)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Entry(System.Object)
    name: Entry
    nameWithType: DbContext.Entry
    fullName: Microsoft.EntityFrameworkCore.DbContext.Entry
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Entry(System.Object)
    name: Entry
    nameWithType: DbContext.Entry
    fullName: Microsoft.EntityFrameworkCore.DbContext.Entry
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Add``1({TEntity})
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Add``1(``0)
  parent: Microsoft.EntityFrameworkCore.DbContext
  definition: Microsoft.EntityFrameworkCore.DbContext.Add``1(``0)
  name: Add<TEntity>(TEntity)
  nameWithType: DbContext.Add<TEntity>(TEntity)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Add<TEntity>(TEntity)
  nameWithType.vb: DbContext.Add(Of TEntity)(TEntity)
  fullname.vb: Microsoft.EntityFrameworkCore.DbContext.Add(Of TEntity)(TEntity)
  name.vb: Add(Of TEntity)(TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Add``1(``0)
    name: Add<TEntity>
    nameWithType: DbContext.Add<TEntity>
    fullName: Microsoft.EntityFrameworkCore.DbContext.Add<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Add``1(``0)
    name: Add(Of TEntity)
    nameWithType: DbContext.Add(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.DbContext.Add(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.AddAsync``1({TEntity},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.AddAsync``1(``0,System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.DbContext
  definition: Microsoft.EntityFrameworkCore.DbContext.AddAsync``1(``0,System.Threading.CancellationToken)
  name: AddAsync<TEntity>(TEntity, CancellationToken)
  nameWithType: DbContext.AddAsync<TEntity>(TEntity, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.DbContext.AddAsync<TEntity>(TEntity, System.Threading.CancellationToken)
  nameWithType.vb: DbContext.AddAsync(Of TEntity)(TEntity, CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.DbContext.AddAsync(Of TEntity)(TEntity, System.Threading.CancellationToken)
  name.vb: AddAsync(Of TEntity)(TEntity, CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AddAsync``1(``0,System.Threading.CancellationToken)
    name: AddAsync<TEntity>
    nameWithType: DbContext.AddAsync<TEntity>
    fullName: Microsoft.EntityFrameworkCore.DbContext.AddAsync<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AddAsync``1(``0,System.Threading.CancellationToken)
    name: AddAsync(Of TEntity)
    nameWithType: DbContext.AddAsync(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.DbContext.AddAsync(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Attach``1({TEntity})
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Attach``1(``0)
  parent: Microsoft.EntityFrameworkCore.DbContext
  definition: Microsoft.EntityFrameworkCore.DbContext.Attach``1(``0)
  name: Attach<TEntity>(TEntity)
  nameWithType: DbContext.Attach<TEntity>(TEntity)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Attach<TEntity>(TEntity)
  nameWithType.vb: DbContext.Attach(Of TEntity)(TEntity)
  fullname.vb: Microsoft.EntityFrameworkCore.DbContext.Attach(Of TEntity)(TEntity)
  name.vb: Attach(Of TEntity)(TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Attach``1(``0)
    name: Attach<TEntity>
    nameWithType: DbContext.Attach<TEntity>
    fullName: Microsoft.EntityFrameworkCore.DbContext.Attach<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Attach``1(``0)
    name: Attach(Of TEntity)
    nameWithType: DbContext.Attach(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.DbContext.Attach(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Update``1({TEntity})
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Update``1(``0)
  parent: Microsoft.EntityFrameworkCore.DbContext
  definition: Microsoft.EntityFrameworkCore.DbContext.Update``1(``0)
  name: Update<TEntity>(TEntity)
  nameWithType: DbContext.Update<TEntity>(TEntity)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Update<TEntity>(TEntity)
  nameWithType.vb: DbContext.Update(Of TEntity)(TEntity)
  fullname.vb: Microsoft.EntityFrameworkCore.DbContext.Update(Of TEntity)(TEntity)
  name.vb: Update(Of TEntity)(TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Update``1(``0)
    name: Update<TEntity>
    nameWithType: DbContext.Update<TEntity>
    fullName: Microsoft.EntityFrameworkCore.DbContext.Update<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Update``1(``0)
    name: Update(Of TEntity)
    nameWithType: DbContext.Update(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.DbContext.Update(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Remove``1({TEntity})
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Remove``1(``0)
  parent: Microsoft.EntityFrameworkCore.DbContext
  definition: Microsoft.EntityFrameworkCore.DbContext.Remove``1(``0)
  name: Remove<TEntity>(TEntity)
  nameWithType: DbContext.Remove<TEntity>(TEntity)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Remove<TEntity>(TEntity)
  nameWithType.vb: DbContext.Remove(Of TEntity)(TEntity)
  fullname.vb: Microsoft.EntityFrameworkCore.DbContext.Remove(Of TEntity)(TEntity)
  name.vb: Remove(Of TEntity)(TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Remove``1(``0)
    name: Remove<TEntity>
    nameWithType: DbContext.Remove<TEntity>
    fullName: Microsoft.EntityFrameworkCore.DbContext.Remove<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Remove``1(``0)
    name: Remove(Of TEntity)
    nameWithType: DbContext.Remove(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.DbContext.Remove(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Add(System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Add(System.Object)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: Add(Object)
  nameWithType: DbContext.Add(Object)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Add(System.Object)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Add(System.Object)
    name: Add
    nameWithType: DbContext.Add
    fullName: Microsoft.EntityFrameworkCore.DbContext.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Add(System.Object)
    name: Add
    nameWithType: DbContext.Add
    fullName: Microsoft.EntityFrameworkCore.DbContext.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.AddAsync(System.Object,System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.AddAsync(System.Object,System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: AddAsync(Object, CancellationToken)
  nameWithType: DbContext.AddAsync(Object, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.DbContext.AddAsync(System.Object, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AddAsync(System.Object,System.Threading.CancellationToken)
    name: AddAsync
    nameWithType: DbContext.AddAsync
    fullName: Microsoft.EntityFrameworkCore.DbContext.AddAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AddAsync(System.Object,System.Threading.CancellationToken)
    name: AddAsync
    nameWithType: DbContext.AddAsync
    fullName: Microsoft.EntityFrameworkCore.DbContext.AddAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Attach(System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Attach(System.Object)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: Attach(Object)
  nameWithType: DbContext.Attach(Object)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Attach(System.Object)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Attach(System.Object)
    name: Attach
    nameWithType: DbContext.Attach
    fullName: Microsoft.EntityFrameworkCore.DbContext.Attach
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Attach(System.Object)
    name: Attach
    nameWithType: DbContext.Attach
    fullName: Microsoft.EntityFrameworkCore.DbContext.Attach
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Update(System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Update(System.Object)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: Update(Object)
  nameWithType: DbContext.Update(Object)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Update(System.Object)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Update(System.Object)
    name: Update
    nameWithType: DbContext.Update
    fullName: Microsoft.EntityFrameworkCore.DbContext.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Update(System.Object)
    name: Update
    nameWithType: DbContext.Update
    fullName: Microsoft.EntityFrameworkCore.DbContext.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Remove(System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Remove(System.Object)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: Remove(Object)
  nameWithType: DbContext.Remove(Object)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Remove(System.Object)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Remove(System.Object)
    name: Remove
    nameWithType: DbContext.Remove
    fullName: Microsoft.EntityFrameworkCore.DbContext.Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Remove(System.Object)
    name: Remove
    nameWithType: DbContext.Remove
    fullName: Microsoft.EntityFrameworkCore.DbContext.Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Object[])
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: AddRange(Object[])
  nameWithType: DbContext.AddRange(Object[])
  fullName: Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Object[])
  nameWithType.vb: DbContext.AddRange(Object())
  fullname.vb: Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Object())
  name.vb: AddRange(Object())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Object[])
    name: AddRange
    nameWithType: DbContext.AddRange
    fullName: Microsoft.EntityFrameworkCore.DbContext.AddRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Object[])
    name: AddRange
    nameWithType: DbContext.AddRange
    fullName: Microsoft.EntityFrameworkCore.DbContext.AddRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Object[])
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: AddRangeAsync(Object[])
  nameWithType: DbContext.AddRangeAsync(Object[])
  fullName: Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Object[])
  nameWithType.vb: DbContext.AddRangeAsync(Object())
  fullname.vb: Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Object())
  name.vb: AddRangeAsync(Object())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Object[])
    name: AddRangeAsync
    nameWithType: DbContext.AddRangeAsync
    fullName: Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Object[])
    name: AddRangeAsync
    nameWithType: DbContext.AddRangeAsync
    fullName: Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Object[])
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: AttachRange(Object[])
  nameWithType: DbContext.AttachRange(Object[])
  fullName: Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Object[])
  nameWithType.vb: DbContext.AttachRange(Object())
  fullname.vb: Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Object())
  name.vb: AttachRange(Object())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Object[])
    name: AttachRange
    nameWithType: DbContext.AttachRange
    fullName: Microsoft.EntityFrameworkCore.DbContext.AttachRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Object[])
    name: AttachRange
    nameWithType: DbContext.AttachRange
    fullName: Microsoft.EntityFrameworkCore.DbContext.AttachRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Object[])
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: UpdateRange(Object[])
  nameWithType: DbContext.UpdateRange(Object[])
  fullName: Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Object[])
  nameWithType.vb: DbContext.UpdateRange(Object())
  fullname.vb: Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Object())
  name.vb: UpdateRange(Object())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Object[])
    name: UpdateRange
    nameWithType: DbContext.UpdateRange
    fullName: Microsoft.EntityFrameworkCore.DbContext.UpdateRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Object[])
    name: UpdateRange
    nameWithType: DbContext.UpdateRange
    fullName: Microsoft.EntityFrameworkCore.DbContext.UpdateRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Object[])
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: RemoveRange(Object[])
  nameWithType: DbContext.RemoveRange(Object[])
  fullName: Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Object[])
  nameWithType.vb: DbContext.RemoveRange(Object())
  fullname.vb: Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Object())
  name.vb: RemoveRange(Object())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Object[])
    name: RemoveRange
    nameWithType: DbContext.RemoveRange
    fullName: Microsoft.EntityFrameworkCore.DbContext.RemoveRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Object[])
    name: RemoveRange
    nameWithType: DbContext.RemoveRange
    fullName: Microsoft.EntityFrameworkCore.DbContext.RemoveRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Collections.Generic.IEnumerable{System.Object})
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Collections.Generic.IEnumerable{System.Object})
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: AddRange(IEnumerable<Object>)
  nameWithType: DbContext.AddRange(IEnumerable<Object>)
  fullName: Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Collections.Generic.IEnumerable<System.Object>)
  nameWithType.vb: DbContext.AddRange(IEnumerable(Of Object))
  fullname.vb: Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Collections.Generic.IEnumerable(Of System.Object))
  name.vb: AddRange(IEnumerable(Of Object))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Collections.Generic.IEnumerable{System.Object})
    name: AddRange
    nameWithType: DbContext.AddRange
    fullName: Microsoft.EntityFrameworkCore.DbContext.AddRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Collections.Generic.IEnumerable{System.Object})
    name: AddRange
    nameWithType: DbContext.AddRange
    fullName: Microsoft.EntityFrameworkCore.DbContext.AddRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Collections.Generic.IEnumerable{System.Object},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Collections.Generic.IEnumerable{System.Object},System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: AddRangeAsync(IEnumerable<Object>, CancellationToken)
  nameWithType: DbContext.AddRangeAsync(IEnumerable<Object>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Collections.Generic.IEnumerable<System.Object>, System.Threading.CancellationToken)
  nameWithType.vb: DbContext.AddRangeAsync(IEnumerable(Of Object), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Collections.Generic.IEnumerable(Of System.Object), System.Threading.CancellationToken)
  name.vb: AddRangeAsync(IEnumerable(Of Object), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Collections.Generic.IEnumerable{System.Object},System.Threading.CancellationToken)
    name: AddRangeAsync
    nameWithType: DbContext.AddRangeAsync
    fullName: Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Collections.Generic.IEnumerable{System.Object},System.Threading.CancellationToken)
    name: AddRangeAsync
    nameWithType: DbContext.AddRangeAsync
    fullName: Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Collections.Generic.IEnumerable{System.Object})
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Collections.Generic.IEnumerable{System.Object})
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: AttachRange(IEnumerable<Object>)
  nameWithType: DbContext.AttachRange(IEnumerable<Object>)
  fullName: Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Collections.Generic.IEnumerable<System.Object>)
  nameWithType.vb: DbContext.AttachRange(IEnumerable(Of Object))
  fullname.vb: Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Collections.Generic.IEnumerable(Of System.Object))
  name.vb: AttachRange(IEnumerable(Of Object))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Collections.Generic.IEnumerable{System.Object})
    name: AttachRange
    nameWithType: DbContext.AttachRange
    fullName: Microsoft.EntityFrameworkCore.DbContext.AttachRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Collections.Generic.IEnumerable{System.Object})
    name: AttachRange
    nameWithType: DbContext.AttachRange
    fullName: Microsoft.EntityFrameworkCore.DbContext.AttachRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Collections.Generic.IEnumerable{System.Object})
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Collections.Generic.IEnumerable{System.Object})
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: UpdateRange(IEnumerable<Object>)
  nameWithType: DbContext.UpdateRange(IEnumerable<Object>)
  fullName: Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Collections.Generic.IEnumerable<System.Object>)
  nameWithType.vb: DbContext.UpdateRange(IEnumerable(Of Object))
  fullname.vb: Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Collections.Generic.IEnumerable(Of System.Object))
  name.vb: UpdateRange(IEnumerable(Of Object))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Collections.Generic.IEnumerable{System.Object})
    name: UpdateRange
    nameWithType: DbContext.UpdateRange
    fullName: Microsoft.EntityFrameworkCore.DbContext.UpdateRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Collections.Generic.IEnumerable{System.Object})
    name: UpdateRange
    nameWithType: DbContext.UpdateRange
    fullName: Microsoft.EntityFrameworkCore.DbContext.UpdateRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Collections.Generic.IEnumerable{System.Object})
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Collections.Generic.IEnumerable{System.Object})
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: RemoveRange(IEnumerable<Object>)
  nameWithType: DbContext.RemoveRange(IEnumerable<Object>)
  fullName: Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Collections.Generic.IEnumerable<System.Object>)
  nameWithType.vb: DbContext.RemoveRange(IEnumerable(Of Object))
  fullname.vb: Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Collections.Generic.IEnumerable(Of System.Object))
  name.vb: RemoveRange(IEnumerable(Of Object))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Collections.Generic.IEnumerable{System.Object})
    name: RemoveRange
    nameWithType: DbContext.RemoveRange
    fullName: Microsoft.EntityFrameworkCore.DbContext.RemoveRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Collections.Generic.IEnumerable{System.Object})
    name: RemoveRange
    nameWithType: DbContext.RemoveRange
    fullName: Microsoft.EntityFrameworkCore.DbContext.RemoveRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Database
  commentId: P:Microsoft.EntityFrameworkCore.DbContext.Database
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: false
  name: Database
  nameWithType: DbContext.Database
  fullName: Microsoft.EntityFrameworkCore.DbContext.Database
- uid: Microsoft.EntityFrameworkCore.DbContext.ChangeTracker
  commentId: P:Microsoft.EntityFrameworkCore.DbContext.ChangeTracker
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: false
  name: ChangeTracker
  nameWithType: DbContext.ChangeTracker
  fullName: Microsoft.EntityFrameworkCore.DbContext.ChangeTracker
- uid: Microsoft.EntityFrameworkCore.DbContext.Model
  commentId: P:Microsoft.EntityFrameworkCore.DbContext.Model
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: false
  name: Model
  nameWithType: DbContext.Model
  fullName: Microsoft.EntityFrameworkCore.DbContext.Model
- uid: Microsoft.EntityFrameworkCore.DbContext.Set``1
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Set``1
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: false
  name: Set<TEntity>()
  nameWithType: DbContext.Set<TEntity>()
  fullName: Microsoft.EntityFrameworkCore.DbContext.Set<TEntity>()
  nameWithType.vb: DbContext.Set(Of TEntity)()
  fullname.vb: Microsoft.EntityFrameworkCore.DbContext.Set(Of TEntity)()
  name.vb: Set(Of TEntity)()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Set``1
    name: Set<TEntity>
    nameWithType: DbContext.Set<TEntity>
    fullName: Microsoft.EntityFrameworkCore.DbContext.Set<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Set``1
    name: Set(Of TEntity)
    nameWithType: DbContext.Set(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.DbContext.Set(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Find(System.Type,System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Find(System.Type,System.Object[])
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: Find(Type, Object[])
  nameWithType: DbContext.Find(Type, Object[])
  fullName: Microsoft.EntityFrameworkCore.DbContext.Find(System.Type, System.Object[])
  nameWithType.vb: DbContext.Find(Type, Object())
  fullname.vb: Microsoft.EntityFrameworkCore.DbContext.Find(System.Type, System.Object())
  name.vb: Find(Type, Object())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Find(System.Type,System.Object[])
    name: Find
    nameWithType: DbContext.Find
    fullName: Microsoft.EntityFrameworkCore.DbContext.Find
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Find(System.Type,System.Object[])
    name: Find
    nameWithType: DbContext.Find
    fullName: Microsoft.EntityFrameworkCore.DbContext.Find
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type,System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type,System.Object[])
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: FindAsync(Type, Object[])
  nameWithType: DbContext.FindAsync(Type, Object[])
  fullName: Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type, System.Object[])
  nameWithType.vb: DbContext.FindAsync(Type, Object())
  fullname.vb: Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type, System.Object())
  name.vb: FindAsync(Type, Object())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type,System.Object[])
    name: FindAsync
    nameWithType: DbContext.FindAsync
    fullName: Microsoft.EntityFrameworkCore.DbContext.FindAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type,System.Object[])
    name: FindAsync
    nameWithType: DbContext.FindAsync
    fullName: Microsoft.EntityFrameworkCore.DbContext.FindAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type,System.Object[],System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type,System.Object[],System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: FindAsync(Type, Object[], CancellationToken)
  nameWithType: DbContext.FindAsync(Type, Object[], CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type, System.Object[], System.Threading.CancellationToken)
  nameWithType.vb: DbContext.FindAsync(Type, Object(), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type, System.Object(), System.Threading.CancellationToken)
  name.vb: FindAsync(Type, Object(), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type,System.Object[],System.Threading.CancellationToken)
    name: FindAsync
    nameWithType: DbContext.FindAsync
    fullName: Microsoft.EntityFrameworkCore.DbContext.FindAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type,System.Object[],System.Threading.CancellationToken)
    name: FindAsync
    nameWithType: DbContext.FindAsync
    fullName: Microsoft.EntityFrameworkCore.DbContext.FindAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Find``1(System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Find``1(System.Object[])
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: Find<TEntity>(Object[])
  nameWithType: DbContext.Find<TEntity>(Object[])
  fullName: Microsoft.EntityFrameworkCore.DbContext.Find<TEntity>(System.Object[])
  nameWithType.vb: DbContext.Find(Of TEntity)(Object())
  fullname.vb: Microsoft.EntityFrameworkCore.DbContext.Find(Of TEntity)(System.Object())
  name.vb: Find(Of TEntity)(Object())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Find``1(System.Object[])
    name: Find<TEntity>
    nameWithType: DbContext.Find<TEntity>
    fullName: Microsoft.EntityFrameworkCore.DbContext.Find<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Find``1(System.Object[])
    name: Find(Of TEntity)
    nameWithType: DbContext.Find(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.DbContext.Find(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.FindAsync``1(System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.FindAsync``1(System.Object[])
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: FindAsync<TEntity>(Object[])
  nameWithType: DbContext.FindAsync<TEntity>(Object[])
  fullName: Microsoft.EntityFrameworkCore.DbContext.FindAsync<TEntity>(System.Object[])
  nameWithType.vb: DbContext.FindAsync(Of TEntity)(Object())
  fullname.vb: Microsoft.EntityFrameworkCore.DbContext.FindAsync(Of TEntity)(System.Object())
  name.vb: FindAsync(Of TEntity)(Object())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.FindAsync``1(System.Object[])
    name: FindAsync<TEntity>
    nameWithType: DbContext.FindAsync<TEntity>
    fullName: Microsoft.EntityFrameworkCore.DbContext.FindAsync<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.FindAsync``1(System.Object[])
    name: FindAsync(Of TEntity)
    nameWithType: DbContext.FindAsync(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.DbContext.FindAsync(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.FindAsync``1(System.Object[],System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.FindAsync``1(System.Object[],System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: FindAsync<TEntity>(Object[], CancellationToken)
  nameWithType: DbContext.FindAsync<TEntity>(Object[], CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.DbContext.FindAsync<TEntity>(System.Object[], System.Threading.CancellationToken)
  nameWithType.vb: DbContext.FindAsync(Of TEntity)(Object(), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.DbContext.FindAsync(Of TEntity)(System.Object(), System.Threading.CancellationToken)
  name.vb: FindAsync(Of TEntity)(Object(), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.FindAsync``1(System.Object[],System.Threading.CancellationToken)
    name: FindAsync<TEntity>
    nameWithType: DbContext.FindAsync<TEntity>
    fullName: Microsoft.EntityFrameworkCore.DbContext.FindAsync<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.FindAsync``1(System.Object[],System.Threading.CancellationToken)
    name: FindAsync(Of TEntity)
    nameWithType: DbContext.FindAsync(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.DbContext.FindAsync(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.NorthwindContext.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<NorthwindContext, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<NorthwindContext, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.NorthwindContext, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of NorthwindContext, TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.NorthwindContext, TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of NorthwindContext, TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<NorthwindContext, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<NorthwindContext, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.NorthwindContext, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of NorthwindContext, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of NorthwindContext, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.NorthwindContext, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore
  commentId: N:Microsoft.EntityFrameworkCore
  isExternal: false
  name: Microsoft.EntityFrameworkCore
  nameWithType: Microsoft.EntityFrameworkCore
  fullName: Microsoft.EntityFrameworkCore
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
  isExternal: false
  name: IInfrastructure<T>
  nameWithType: IInfrastructure<T>
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<T>
  nameWithType.vb: IInfrastructure(Of T)
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of T)
  name.vb: IInfrastructure(Of T)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure
  commentId: N:Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Infrastructure
  nameWithType: Microsoft.EntityFrameworkCore.Infrastructure
  fullName: Microsoft.EntityFrameworkCore.Infrastructure
- uid: Microsoft.EntityFrameworkCore.DbContext.Entry``1(``0)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Entry``1(``0)
  isExternal: false
  name: Entry<TEntity>(TEntity)
  nameWithType: DbContext.Entry<TEntity>(TEntity)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Entry<TEntity>(TEntity)
  nameWithType.vb: DbContext.Entry(Of TEntity)(TEntity)
  fullname.vb: Microsoft.EntityFrameworkCore.DbContext.Entry(Of TEntity)(TEntity)
  name.vb: Entry(Of TEntity)(TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Entry``1(``0)
    name: Entry<TEntity>
    nameWithType: DbContext.Entry<TEntity>
    fullName: Microsoft.EntityFrameworkCore.DbContext.Entry<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Entry``1(``0)
    name: Entry(Of TEntity)
    nameWithType: DbContext.Entry(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.DbContext.Entry(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Add``1(``0)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Add``1(``0)
  isExternal: false
  name: Add<TEntity>(TEntity)
  nameWithType: DbContext.Add<TEntity>(TEntity)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Add<TEntity>(TEntity)
  nameWithType.vb: DbContext.Add(Of TEntity)(TEntity)
  fullname.vb: Microsoft.EntityFrameworkCore.DbContext.Add(Of TEntity)(TEntity)
  name.vb: Add(Of TEntity)(TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Add``1(``0)
    name: Add<TEntity>
    nameWithType: DbContext.Add<TEntity>
    fullName: Microsoft.EntityFrameworkCore.DbContext.Add<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Add``1(``0)
    name: Add(Of TEntity)
    nameWithType: DbContext.Add(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.DbContext.Add(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.AddAsync``1(``0,System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.AddAsync``1(``0,System.Threading.CancellationToken)
  isExternal: true
  name: AddAsync<TEntity>(TEntity, CancellationToken)
  nameWithType: DbContext.AddAsync<TEntity>(TEntity, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.DbContext.AddAsync<TEntity>(TEntity, System.Threading.CancellationToken)
  nameWithType.vb: DbContext.AddAsync(Of TEntity)(TEntity, CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.DbContext.AddAsync(Of TEntity)(TEntity, System.Threading.CancellationToken)
  name.vb: AddAsync(Of TEntity)(TEntity, CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AddAsync``1(``0,System.Threading.CancellationToken)
    name: AddAsync<TEntity>
    nameWithType: DbContext.AddAsync<TEntity>
    fullName: Microsoft.EntityFrameworkCore.DbContext.AddAsync<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AddAsync``1(``0,System.Threading.CancellationToken)
    name: AddAsync(Of TEntity)
    nameWithType: DbContext.AddAsync(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.DbContext.AddAsync(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Attach``1(``0)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Attach``1(``0)
  isExternal: false
  name: Attach<TEntity>(TEntity)
  nameWithType: DbContext.Attach<TEntity>(TEntity)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Attach<TEntity>(TEntity)
  nameWithType.vb: DbContext.Attach(Of TEntity)(TEntity)
  fullname.vb: Microsoft.EntityFrameworkCore.DbContext.Attach(Of TEntity)(TEntity)
  name.vb: Attach(Of TEntity)(TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Attach``1(``0)
    name: Attach<TEntity>
    nameWithType: DbContext.Attach<TEntity>
    fullName: Microsoft.EntityFrameworkCore.DbContext.Attach<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Attach``1(``0)
    name: Attach(Of TEntity)
    nameWithType: DbContext.Attach(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.DbContext.Attach(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Update``1(``0)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Update``1(``0)
  isExternal: false
  name: Update<TEntity>(TEntity)
  nameWithType: DbContext.Update<TEntity>(TEntity)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Update<TEntity>(TEntity)
  nameWithType.vb: DbContext.Update(Of TEntity)(TEntity)
  fullname.vb: Microsoft.EntityFrameworkCore.DbContext.Update(Of TEntity)(TEntity)
  name.vb: Update(Of TEntity)(TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Update``1(``0)
    name: Update<TEntity>
    nameWithType: DbContext.Update<TEntity>
    fullName: Microsoft.EntityFrameworkCore.DbContext.Update<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Update``1(``0)
    name: Update(Of TEntity)
    nameWithType: DbContext.Update(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.DbContext.Update(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Remove``1(``0)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Remove``1(``0)
  isExternal: false
  name: Remove<TEntity>(TEntity)
  nameWithType: DbContext.Remove<TEntity>(TEntity)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Remove<TEntity>(TEntity)
  nameWithType.vb: DbContext.Remove(Of TEntity)(TEntity)
  fullname.vb: Microsoft.EntityFrameworkCore.DbContext.Remove(Of TEntity)(TEntity)
  name.vb: Remove(Of TEntity)(TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Remove``1(``0)
    name: Remove<TEntity>
    nameWithType: DbContext.Remove<TEntity>
    fullName: Microsoft.EntityFrameworkCore.DbContext.Remove<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Remove``1(``0)
    name: Remove(Of TEntity)
    nameWithType: DbContext.Remove(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.DbContext.Remove(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.EntityFrameworkCore.DbContextOptions
  commentId: T:Microsoft.EntityFrameworkCore.DbContextOptions
  parent: Microsoft.EntityFrameworkCore
  isExternal: false
  name: DbContextOptions
  nameWithType: DbContextOptions
  fullName: Microsoft.EntityFrameworkCore.DbContextOptions
- uid: Microsoft.EntityFrameworkCore.QueryTrackingBehavior
  commentId: T:Microsoft.EntityFrameworkCore.QueryTrackingBehavior
  parent: Microsoft.EntityFrameworkCore
  isExternal: false
  name: QueryTrackingBehavior
  nameWithType: QueryTrackingBehavior
  fullName: Microsoft.EntityFrameworkCore.QueryTrackingBehavior
- uid: Microsoft.EntityFrameworkCore.DbSet{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.Customer}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.Customer}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Customer>
  nameWithType: DbSet<Customer>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.Customer>
  nameWithType.vb: DbSet(Of Customer)
  fullname.vb: Microsoft.EntityFrameworkCore.DbSet(Of Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.Customer)
  name.vb: DbSet(Of Customer)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.Customer
    name: Customer
    nameWithType: Customer
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.Customer
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.Customer
    name: Customer
    nameWithType: Customer
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.Customer
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbSet`1
  commentId: T:Microsoft.EntityFrameworkCore.DbSet`1
  isExternal: false
  name: DbSet<TEntity>
  nameWithType: DbSet<TEntity>
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>
  nameWithType.vb: DbSet(Of TEntity)
  fullname.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity)
  name.vb: DbSet(Of TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbSet{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.Employee}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.Employee}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Employee>
  nameWithType: DbSet<Employee>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.Employee>
  nameWithType.vb: DbSet(Of Employee)
  fullname.vb: Microsoft.EntityFrameworkCore.DbSet(Of Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.Employee)
  name.vb: DbSet(Of Employee)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.Employee
    name: Employee
    nameWithType: Employee
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.Employee
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.Employee
    name: Employee
    nameWithType: Employee
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.Employee
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbSet{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.Order}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.Order}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Order>
  nameWithType: DbSet<Order>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.Order>
  nameWithType.vb: DbSet(Of Order)
  fullname.vb: Microsoft.EntityFrameworkCore.DbSet(Of Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.Order)
  name.vb: DbSet(Of Order)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.Order
    name: Order
    nameWithType: Order
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.Order
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.Order
    name: Order
    nameWithType: Order
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.Order
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbSet{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.OrderDetail}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.OrderDetail}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<OrderDetail>
  nameWithType: DbSet<OrderDetail>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.OrderDetail>
  nameWithType.vb: DbSet(Of OrderDetail)
  fullname.vb: Microsoft.EntityFrameworkCore.DbSet(Of Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.OrderDetail)
  name.vb: DbSet(Of OrderDetail)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.OrderDetail
    name: OrderDetail
    nameWithType: OrderDetail
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.OrderDetail
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.OrderDetail
    name: OrderDetail
    nameWithType: OrderDetail
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.OrderDetail
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbSet{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.Product}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.Product}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Product>
  nameWithType: DbSet<Product>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.Product>
  nameWithType.vb: DbSet(Of Product)
  fullname.vb: Microsoft.EntityFrameworkCore.DbSet(Of Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.Product)
  name.vb: DbSet(Of Product)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.Product
    name: Product
    nameWithType: Product
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.Product
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.Product
    name: Product
    nameWithType: Product
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.Product
  - name: )
    nameWithType: )
    fullName: )
