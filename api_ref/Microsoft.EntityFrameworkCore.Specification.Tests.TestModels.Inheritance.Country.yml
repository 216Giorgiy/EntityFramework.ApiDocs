### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Country
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Country
  id: Country
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance
  children:
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Country.#ctor
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Country.Animals
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Country.Id
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Country.Name
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Country.Plants
  langs:
  - csharp
  - vb
  name: Country
  nameWithType: Country
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Country
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/Inheritance/Country.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Country
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/Inheritance/Country.cs
    startLine: 7
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance
  syntax:
    content: public class Country
    content.vb: Public Class Country
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Country.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Country.#ctor
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Country.#ctor
  id: '#ctor'
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Country
  langs:
  - csharp
  - vb
  name: Country()
  nameWithType: Country.Country()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Country.Country()
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/Inheritance/Country.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/Inheritance/Country.cs
    startLine: 9
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance
  syntax:
    content: public Country()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Country.Id
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Country.Id
  id: Id
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Country
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: Country.Id
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Country.Id
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/Inheritance/Country.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Id
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/Inheritance/Country.cs
    startLine: 14
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance
  syntax:
    content: public int Id { get; set; }
    content.vb: Public Property Id As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Country.Name
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Country.Name
  id: Name
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Country
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Country.Name
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Country.Name
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/Inheritance/Country.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Name
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/Inheritance/Country.cs
    startLine: 15
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance
  syntax:
    content: public string Name { get; set; }
    content.vb: Public Property Name As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Country.Animals
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Country.Animals
  id: Animals
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Country
  langs:
  - csharp
  - vb
  name: Animals
  nameWithType: Country.Animals
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Country.Animals
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/Inheritance/Country.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Animals
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/Inheritance/Country.cs
    startLine: 17
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance
  syntax:
    content: public IList<Animal> Animals { get; set; }
    content.vb: Public Property Animals As IList(Of Animal)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Animal}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Country.Plants
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Country.Plants
  id: Plants
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Country
  langs:
  - csharp
  - vb
  name: Plants
  nameWithType: Country.Plants
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Country.Plants
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/Inheritance/Country.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Plants
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/Inheritance/Country.cs
    startLine: 18
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance
  syntax:
    content: public IList<Plant> Plants { get; set; }
    content.vb: Public Property Plants As IList(Of Plant)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Plant}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance
  commentId: N:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance
  nameWithType: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Country.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<Country, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<Country, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Country, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of Country, TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Country, TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of Country, TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<Country, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<Country, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Country, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of Country, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of Country, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Country, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Animal}
  commentId: T:System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Animal}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<Animal>
  nameWithType: IList<Animal>
  fullName: System.Collections.Generic.IList<Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Animal>
  nameWithType.vb: IList(Of Animal)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Animal)
  name.vb: IList(Of Animal)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Animal
    name: Animal
    nameWithType: Animal
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Animal
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Animal
    name: Animal
    nameWithType: Animal
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Animal
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Plant}
  commentId: T:System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Plant}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<Plant>
  nameWithType: IList<Plant>
  fullName: System.Collections.Generic.IList<Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Plant>
  nameWithType.vb: IList(Of Plant)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Plant)
  name.vb: IList(Of Plant)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Plant
    name: Plant
    nameWithType: Plant
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Plant
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Plant
    name: Plant
    nameWithType: Plant
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Plant
  - name: )
    nameWithType: )
    fullName: )
