### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalTransaction
  commentId: T:Microsoft.EntityFrameworkCore.Storage.RelationalTransaction
  id: RelationalTransaction
  parent: Microsoft.EntityFrameworkCore.Storage
  children:
  - Microsoft.EntityFrameworkCore.Storage.RelationalTransaction.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbTransaction,Microsoft.Extensions.Logging.ILogger,System.Boolean)
  - Microsoft.EntityFrameworkCore.Storage.RelationalTransaction.Commit
  - Microsoft.EntityFrameworkCore.Storage.RelationalTransaction.Dispose
  - Microsoft.EntityFrameworkCore.Storage.RelationalTransaction.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{System#Data#Common#DbTransaction}#Instance
  - Microsoft.EntityFrameworkCore.Storage.RelationalTransaction.Rollback
  langs:
  - csharp
  - vb
  name: RelationalTransaction
  nameWithType: RelationalTransaction
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTransaction
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/RelationalTransaction.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: RelationalTransaction
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/RelationalTransaction.cs
    startLine: 24
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n<p>\n    A transaction against the database.\n</p>\n<p>\n    Instances of this class are typically obtained from <xref href=\"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.BeginTransaction\" data-throw-if-not-resolved=\"false\"></xref> and it is not designed\n    to be directly constructed in your application code.\n</p>\n"
  example: []
  syntax:
    content: 'public class RelationalTransaction : IDbContextTransaction, IDisposable, IInfrastructure<DbTransaction>'
    content.vb: >-
      Public Class RelationalTransaction
          Implements IDbContextTransaction, IDisposable, IInfrastructure(Of DbTransaction)
  inheritance:
  - System.Object
  implements:
  - Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
  - System.IDisposable
  - Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{System.Data.Common.DbTransaction}
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction.Microsoft.EntityFrameworkCore.Storage.DbContextTransactionExtensions.GetDbTransaction
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalTransaction.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbTransaction,Microsoft.Extensions.Logging.ILogger,System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalTransaction.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbTransaction,Microsoft.Extensions.Logging.ILogger,System.Boolean)
  id: '#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbTransaction,Microsoft.Extensions.Logging.ILogger,System.Boolean)'
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalTransaction
  langs:
  - csharp
  - vb
  name: RelationalTransaction(IRelationalConnection, DbTransaction, ILogger, Boolean)
  nameWithType: RelationalTransaction.RelationalTransaction(IRelationalConnection, DbTransaction, ILogger, Boolean)
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTransaction.RelationalTransaction(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection, System.Data.Common.DbTransaction, Microsoft.Extensions.Logging.ILogger, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/RelationalTransaction.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/RelationalTransaction.cs
    startLine: 42
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n    Initializes a new instance of the <xref href=\"Microsoft.EntityFrameworkCore.Storage.RelationalTransaction\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public RelationalTransaction(IRelationalConnection connection, DbTransaction transaction, ILogger logger, bool transactionOwned)
    content.vb: Public Sub New(connection As IRelationalConnection, transaction As DbTransaction, logger As ILogger, transactionOwned As Boolean)
    parameters:
    - id: connection
      type: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
      description: 'The connection to the database. '
    - id: transaction
      type: System.Data.Common.DbTransaction
      description: 'The underlying <xref href="System.Data.Common.DbTransaction" data-throw-if-not-resolved="false"></xref>. '
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: 'The logger to write to. '
    - id: transactionOwned
      type: System.Boolean
      description: "\n    A value indicating whether the transaction is owned by this class (i.e. if it can be disposed when this class is disposed).\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalTransaction.Commit
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalTransaction.Commit
  id: Commit
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalTransaction
  langs:
  - csharp
  - vb
  name: Commit()
  nameWithType: RelationalTransaction.Commit()
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTransaction.Commit()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/RelationalTransaction.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Commit
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/RelationalTransaction.cs
    startLine: 67
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n    Commits all changes made to the database in the current transaction.\n"
  example: []
  syntax:
    content: public virtual void Commit()
    content.vb: Public Overridable Sub Commit
  implements:
  - Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction.Commit
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalTransaction.Rollback
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalTransaction.Rollback
  id: Rollback
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalTransaction
  langs:
  - csharp
  - vb
  name: Rollback()
  nameWithType: RelationalTransaction.Rollback()
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTransaction.Rollback()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/RelationalTransaction.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Rollback
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/RelationalTransaction.cs
    startLine: 81
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n    Discards all changes made to the database in the current transaction.\n"
  example: []
  syntax:
    content: public virtual void Rollback()
    content.vb: Public Overridable Sub Rollback
  implements:
  - Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction.Rollback
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalTransaction.Dispose
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalTransaction.Dispose
  id: Dispose
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalTransaction
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: RelationalTransaction.Dispose()
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTransaction.Dispose()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/RelationalTransaction.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Dispose
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/RelationalTransaction.cs
    startLine: 95
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n    Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.\n"
  example: []
  syntax:
    content: public virtual void Dispose()
    content.vb: Public Overridable Sub Dispose
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalTransaction.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{System#Data#Common#DbTransaction}#Instance
  commentId: P:Microsoft.EntityFrameworkCore.Storage.RelationalTransaction.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{System#Data#Common#DbTransaction}#Instance
  id: Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{System#Data#Common#DbTransaction}#Instance
  isEii: true
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalTransaction
  langs:
  - csharp
  - vb
  name: IInfrastructure<DbTransaction>.Instance
  nameWithType: RelationalTransaction.IInfrastructure<DbTransaction>.Instance
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTransaction.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<System.Data.Common.DbTransaction>.Instance
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/RelationalTransaction.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<System.Data.Common.DbTransaction>.Instance
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/RelationalTransaction.cs
    startLine: 117
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  syntax:
    content: DbTransaction IInfrastructure<DbTransaction>.Instance { get; }
    content.vb: ReadOnly WriteOnly Property Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<System.Data.Common.DbTransaction>.Instance As DbTransaction Implements IInfrastructure(Of DbTransaction).Instance
    parameters: []
    return:
      type: System.Data.Common.DbTransaction
  implements:
  - Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{System.Data.Common.DbTransaction}.Instance
  nameWithType.vb: RelationalTransaction.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<System.Data.Common.DbTransaction>.Instance
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<System.Data.Common.DbTransaction>.Instance
references:
- uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.BeginTransaction
  commentId: M:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.BeginTransaction
- uid: Microsoft.EntityFrameworkCore.Storage
  commentId: N:Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Storage
  nameWithType: Microsoft.EntityFrameworkCore.Storage
  fullName: Microsoft.EntityFrameworkCore.Storage
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IDbContextTransaction
  nameWithType: IDbContextTransaction
  fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{System.Data.Common.DbTransaction}
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{System.Data.Common.DbTransaction}
  parent: Microsoft.EntityFrameworkCore.Infrastructure
  definition: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
  name: IInfrastructure<DbTransaction>
  nameWithType: IInfrastructure<DbTransaction>
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<System.Data.Common.DbTransaction>
  nameWithType.vb: IInfrastructure(Of DbTransaction)
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of System.Data.Common.DbTransaction)
  name.vb: IInfrastructure(Of DbTransaction)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Common.DbTransaction
    name: DbTransaction
    nameWithType: DbTransaction
    fullName: System.Data.Common.DbTransaction
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Data.Common.DbTransaction
    name: DbTransaction
    nameWithType: DbTransaction
    fullName: System.Data.Common.DbTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction.Microsoft.EntityFrameworkCore.Storage.DbContextTransactionExtensions.GetDbTransaction
  commentId: M:Microsoft.EntityFrameworkCore.Storage.DbContextTransactionExtensions.GetDbTransaction(Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Microsoft.EntityFrameworkCore.Storage.DbContextTransactionExtensions
  definition: Microsoft.EntityFrameworkCore.Storage.DbContextTransactionExtensions.GetDbTransaction(Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: GetDbTransaction()
  nameWithType: DbContextTransactionExtensions.GetDbTransaction()
  fullName: Microsoft.EntityFrameworkCore.Storage.DbContextTransactionExtensions.GetDbTransaction()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.DbContextTransactionExtensions.GetDbTransaction
    name: GetDbTransaction
    nameWithType: DbContextTransactionExtensions.GetDbTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.DbContextTransactionExtensions.GetDbTransaction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.DbContextTransactionExtensions.GetDbTransaction
    name: GetDbTransaction
    nameWithType: DbContextTransactionExtensions.GetDbTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.DbContextTransactionExtensions.GetDbTransaction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
  isExternal: false
  name: IInfrastructure<T>
  nameWithType: IInfrastructure<T>
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<T>
  nameWithType.vb: IInfrastructure(Of T)
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of T)
  name.vb: IInfrastructure(Of T)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure
  commentId: N:Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Infrastructure
  nameWithType: Microsoft.EntityFrameworkCore.Infrastructure
  fullName: Microsoft.EntityFrameworkCore.Infrastructure
- uid: Microsoft.EntityFrameworkCore.Storage.DbContextTransactionExtensions.GetDbTransaction(Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.DbContextTransactionExtensions.GetDbTransaction(Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: false
  name: GetDbTransaction(IDbContextTransaction)
  nameWithType: DbContextTransactionExtensions.GetDbTransaction(IDbContextTransaction)
  fullName: Microsoft.EntityFrameworkCore.Storage.DbContextTransactionExtensions.GetDbTransaction(Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.DbContextTransactionExtensions.GetDbTransaction(Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: GetDbTransaction
    nameWithType: DbContextTransactionExtensions.GetDbTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.DbContextTransactionExtensions.GetDbTransaction
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.DbContextTransactionExtensions.GetDbTransaction(Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: GetDbTransaction
    nameWithType: DbContextTransactionExtensions.GetDbTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.DbContextTransactionExtensions.GetDbTransaction
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.DbContextTransactionExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Storage.DbContextTransactionExtensions
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: DbContextTransactionExtensions
  nameWithType: DbContextTransactionExtensions
  fullName: Microsoft.EntityFrameworkCore.Storage.DbContextTransactionExtensions
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalTransaction
  commentId: T:Microsoft.EntityFrameworkCore.Storage.RelationalTransaction
  isExternal: false
  name: RelationalTransaction
  nameWithType: RelationalTransaction
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTransaction
- uid: System.Data.Common.DbTransaction
  commentId: T:System.Data.Common.DbTransaction
  parent: System.Data.Common
  isExternal: true
  name: DbTransaction
  nameWithType: DbTransaction
  fullName: System.Data.Common.DbTransaction
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IRelationalConnection
  nameWithType: IRelationalConnection
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
- uid: Microsoft.Extensions.Logging.ILogger
  commentId: T:Microsoft.Extensions.Logging.ILogger
  parent: Microsoft.Extensions.Logging
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Extensions.Logging.ILogger
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Common
  commentId: N:System.Data.Common
  isExternal: false
  name: System.Data.Common
  nameWithType: System.Data.Common
  fullName: System.Data.Common
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: false
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction.Commit
  commentId: M:Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction.Commit
  parent: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
  isExternal: false
  name: Commit()
  nameWithType: IDbContextTransaction.Commit()
  fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction.Commit()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction.Commit
    name: Commit
    nameWithType: IDbContextTransaction.Commit
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction.Commit
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction.Commit
    name: Commit
    nameWithType: IDbContextTransaction.Commit
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction.Commit
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction.Rollback
  commentId: M:Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction.Rollback
  parent: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
  isExternal: false
  name: Rollback()
  nameWithType: IDbContextTransaction.Rollback()
  fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction.Rollback()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction.Rollback
    name: Rollback
    nameWithType: IDbContextTransaction.Rollback
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction.Rollback
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction.Rollback
    name: Rollback
    nameWithType: IDbContextTransaction.Rollback
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction.Rollback
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{System.Data.Common.DbTransaction}.Instance
  commentId: P:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{System.Data.Common.DbTransaction}.Instance
  parent: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{System.Data.Common.DbTransaction}
  definition: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1.Instance
  name: Instance
  nameWithType: IInfrastructure<DbTransaction>.Instance
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<System.Data.Common.DbTransaction>.Instance
  nameWithType.vb: IInfrastructure(Of DbTransaction).Instance
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of System.Data.Common.DbTransaction).Instance
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1.Instance
  commentId: P:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1.Instance
  isExternal: false
  name: Instance
  nameWithType: IInfrastructure<T>.Instance
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<T>.Instance
  nameWithType.vb: IInfrastructure(Of T).Instance
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of T).Instance
