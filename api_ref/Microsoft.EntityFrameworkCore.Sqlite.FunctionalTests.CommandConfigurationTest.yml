### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.CommandConfigurationTest
  commentId: T:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.CommandConfigurationTest
  id: CommandConfigurationTest
  parent: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  children:
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.CommandConfigurationTest.#ctor(Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.CommandConfigurationTest.CommandConfigurationTestFixture)
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.CommandConfigurationTest.Constructed_select_query_CommandBuilder_throws_when_negative_CommandTimeout_is_used
  langs:
  - csharp
  - vb
  name: CommandConfigurationTest
  nameWithType: CommandConfigurationTest
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.CommandConfigurationTest
  type: Class
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/CommandConfigurationTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CommandConfigurationTest
    path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/CommandConfigurationTest.cs
    startLine: 10
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  syntax:
    content: 'public class CommandConfigurationTest : IClassFixture<CommandConfigurationTest.CommandConfigurationTestFixture>'
    content.vb: >-
      Public Class CommandConfigurationTest
          Implements IClassFixture(Of CommandConfigurationTest.CommandConfigurationTestFixture)
  inheritance:
  - System.Object
  implements:
  - Xunit.IClassFixture{Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.CommandConfigurationTest.CommandConfigurationTestFixture}
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.CommandConfigurationTest.#ctor(Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.CommandConfigurationTest.CommandConfigurationTestFixture)
  commentId: M:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.CommandConfigurationTest.#ctor(Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.CommandConfigurationTest.CommandConfigurationTestFixture)
  id: '#ctor(Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.CommandConfigurationTest.CommandConfigurationTestFixture)'
  parent: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.CommandConfigurationTest
  langs:
  - csharp
  - vb
  name: CommandConfigurationTest(CommandConfigurationTest.CommandConfigurationTestFixture)
  nameWithType: CommandConfigurationTest.CommandConfigurationTest(CommandConfigurationTest.CommandConfigurationTestFixture)
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.CommandConfigurationTest.CommandConfigurationTest(Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.CommandConfigurationTest.CommandConfigurationTestFixture)
  type: Constructor
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/CommandConfigurationTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/CommandConfigurationTest.cs
    startLine: 16
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  syntax:
    content: public CommandConfigurationTest(CommandConfigurationTest.CommandConfigurationTestFixture fixture)
    content.vb: Public Sub New(fixture As CommandConfigurationTest.CommandConfigurationTestFixture)
    parameters:
    - id: fixture
      type: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.CommandConfigurationTest.CommandConfigurationTestFixture
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.CommandConfigurationTest.Constructed_select_query_CommandBuilder_throws_when_negative_CommandTimeout_is_used
  commentId: M:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.CommandConfigurationTest.Constructed_select_query_CommandBuilder_throws_when_negative_CommandTimeout_is_used
  id: Constructed_select_query_CommandBuilder_throws_when_negative_CommandTimeout_is_used
  parent: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.CommandConfigurationTest
  langs:
  - csharp
  - vb
  name: Constructed_select_query_CommandBuilder_throws_when_negative_CommandTimeout_is_used()
  nameWithType: CommandConfigurationTest.Constructed_select_query_CommandBuilder_throws_when_negative_CommandTimeout_is_used()
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.CommandConfigurationTest.Constructed_select_query_CommandBuilder_throws_when_negative_CommandTimeout_is_used()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/CommandConfigurationTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Constructed_select_query_CommandBuilder_throws_when_negative_CommandTimeout_is_used
    path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/CommandConfigurationTest.cs
    startLine: 44
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  syntax:
    content: >-
      [Fact]

      public void Constructed_select_query_CommandBuilder_throws_when_negative_CommandTimeout_is_used()
    content.vb: >-
      <Fact>

      Public Sub Constructed_select_query_CommandBuilder_throws_when_negative_CommandTimeout_is_used
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  commentId: N:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  nameWithType: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Xunit.IClassFixture{Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.CommandConfigurationTest.CommandConfigurationTestFixture}
  commentId: T:Xunit.IClassFixture{Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.CommandConfigurationTest.CommandConfigurationTestFixture}
  parent: Xunit
  definition: Xunit.IClassFixture`1
  name: IClassFixture<CommandConfigurationTest.CommandConfigurationTestFixture>
  nameWithType: IClassFixture<CommandConfigurationTest.CommandConfigurationTestFixture>
  fullName: Xunit.IClassFixture<Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.CommandConfigurationTest.CommandConfigurationTestFixture>
  nameWithType.vb: IClassFixture(Of CommandConfigurationTest.CommandConfigurationTestFixture)
  fullname.vb: Xunit.IClassFixture(Of Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.CommandConfigurationTest.CommandConfigurationTestFixture)
  name.vb: IClassFixture(Of CommandConfigurationTest.CommandConfigurationTestFixture)
  spec.csharp:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    nameWithType: IClassFixture
    fullName: Xunit.IClassFixture
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.CommandConfigurationTest.CommandConfigurationTestFixture
    name: CommandConfigurationTest.CommandConfigurationTestFixture
    nameWithType: CommandConfigurationTest.CommandConfigurationTestFixture
    fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.CommandConfigurationTest.CommandConfigurationTestFixture
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    nameWithType: IClassFixture
    fullName: Xunit.IClassFixture
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.CommandConfigurationTest.CommandConfigurationTestFixture
    name: CommandConfigurationTest.CommandConfigurationTestFixture
    nameWithType: CommandConfigurationTest.CommandConfigurationTestFixture
    fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.CommandConfigurationTest.CommandConfigurationTestFixture
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Xunit.IClassFixture`1
  commentId: T:Xunit.IClassFixture`1
  isExternal: true
  name: IClassFixture<TFixture>
  nameWithType: IClassFixture<TFixture>
  fullName: Xunit.IClassFixture<TFixture>
  nameWithType.vb: IClassFixture(Of TFixture)
  fullname.vb: Xunit.IClassFixture(Of TFixture)
  name.vb: IClassFixture(Of TFixture)
  spec.csharp:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    nameWithType: IClassFixture
    fullName: Xunit.IClassFixture
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TFixture
    nameWithType: TFixture
    fullName: TFixture
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    nameWithType: IClassFixture
    fullName: Xunit.IClassFixture
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TFixture
    nameWithType: TFixture
    fullName: TFixture
  - name: )
    nameWithType: )
    fullName: )
- uid: Xunit
  commentId: N:Xunit
  isExternal: false
  name: Xunit
  nameWithType: Xunit
  fullName: Xunit
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.CommandConfigurationTest.CommandConfigurationTestFixture
  commentId: T:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.CommandConfigurationTest.CommandConfigurationTestFixture
  parent: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  isExternal: false
  name: CommandConfigurationTest.CommandConfigurationTestFixture
  nameWithType: CommandConfigurationTest.CommandConfigurationTestFixture
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.CommandConfigurationTest.CommandConfigurationTestFixture
