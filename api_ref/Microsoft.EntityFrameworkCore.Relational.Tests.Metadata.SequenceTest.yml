### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.Metadata.SequenceTest
  commentId: T:Microsoft.EntityFrameworkCore.Relational.Tests.Metadata.SequenceTest
  id: SequenceTest
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.Metadata
  children:
  - Microsoft.EntityFrameworkCore.Relational.Tests.Metadata.SequenceTest.Can_be_created_with_default_values
  - Microsoft.EntityFrameworkCore.Relational.Tests.Metadata.SequenceTest.Can_be_created_with_specified_values
  - Microsoft.EntityFrameworkCore.Relational.Tests.Metadata.SequenceTest.Can_get_model
  - Microsoft.EntityFrameworkCore.Relational.Tests.Metadata.SequenceTest.Can_get_model_default_schema_if_sequence_schema_not_specified
  - Microsoft.EntityFrameworkCore.Relational.Tests.Metadata.SequenceTest.Can_get_sequence_schema_if_specified_explicitly
  - Microsoft.EntityFrameworkCore.Relational.Tests.Metadata.SequenceTest.Can_only_be_created_for_byte_short_int_and_long
  - Microsoft.EntityFrameworkCore.Relational.Tests.Metadata.SequenceTest.Can_serialize_and_deserialize
  - Microsoft.EntityFrameworkCore.Relational.Tests.Metadata.SequenceTest.Can_serialize_and_deserialize_with_defaults
  - Microsoft.EntityFrameworkCore.Relational.Tests.Metadata.SequenceTest.Can_serialize_and_deserialize_with_funky_names
  - Microsoft.EntityFrameworkCore.Relational.Tests.Metadata.SequenceTest.Throws_on_bad_serialized_form
  langs:
  - csharp
  - vb
  name: SequenceTest
  nameWithType: SequenceTest
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Metadata.SequenceTest
  type: Class
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Metadata/SequenceTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: SequenceTest
    path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Metadata/SequenceTest.cs
    startLine: 11
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Tests.Metadata
  syntax:
    content: public class SequenceTest
    content.vb: Public Class SequenceTest
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.Metadata.SequenceTest.Can_be_created_with_default_values
  commentId: M:Microsoft.EntityFrameworkCore.Relational.Tests.Metadata.SequenceTest.Can_be_created_with_default_values
  id: Can_be_created_with_default_values
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.Metadata.SequenceTest
  langs:
  - csharp
  - vb
  name: Can_be_created_with_default_values()
  nameWithType: SequenceTest.Can_be_created_with_default_values()
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Metadata.SequenceTest.Can_be_created_with_default_values()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Metadata/SequenceTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_be_created_with_default_values
    path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Metadata/SequenceTest.cs
    startLine: 13
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Can_be_created_with_default_values()
    content.vb: >-
      <Fact>

      Public Sub Can_be_created_with_default_values
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.Metadata.SequenceTest.Can_be_created_with_specified_values
  commentId: M:Microsoft.EntityFrameworkCore.Relational.Tests.Metadata.SequenceTest.Can_be_created_with_specified_values
  id: Can_be_created_with_specified_values
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.Metadata.SequenceTest
  langs:
  - csharp
  - vb
  name: Can_be_created_with_specified_values()
  nameWithType: SequenceTest.Can_be_created_with_specified_values()
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Metadata.SequenceTest.Can_be_created_with_specified_values()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Metadata/SequenceTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_be_created_with_specified_values
    path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Metadata/SequenceTest.cs
    startLine: 27
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Can_be_created_with_specified_values()
    content.vb: >-
      <Fact>

      Public Sub Can_be_created_with_specified_values
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.Metadata.SequenceTest.Can_only_be_created_for_byte_short_int_and_long
  commentId: M:Microsoft.EntityFrameworkCore.Relational.Tests.Metadata.SequenceTest.Can_only_be_created_for_byte_short_int_and_long
  id: Can_only_be_created_for_byte_short_int_and_long
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.Metadata.SequenceTest
  langs:
  - csharp
  - vb
  name: Can_only_be_created_for_byte_short_int_and_long()
  nameWithType: SequenceTest.Can_only_be_created_for_byte_short_int_and_long()
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Metadata.SequenceTest.Can_only_be_created_for_byte_short_int_and_long()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Metadata/SequenceTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_only_be_created_for_byte_short_int_and_long
    path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Metadata/SequenceTest.cs
    startLine: 46
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Can_only_be_created_for_byte_short_int_and_long()
    content.vb: >-
      <Fact>

      Public Sub Can_only_be_created_for_byte_short_int_and_long
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.Metadata.SequenceTest.Can_get_model
  commentId: M:Microsoft.EntityFrameworkCore.Relational.Tests.Metadata.SequenceTest.Can_get_model
  id: Can_get_model
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.Metadata.SequenceTest
  langs:
  - csharp
  - vb
  name: Can_get_model()
  nameWithType: SequenceTest.Can_get_model()
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Metadata.SequenceTest.Can_get_model()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Metadata/SequenceTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_get_model
    path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Metadata/SequenceTest.cs
    startLine: 65
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Can_get_model()
    content.vb: >-
      <Fact>

      Public Sub Can_get_model
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.Metadata.SequenceTest.Can_get_model_default_schema_if_sequence_schema_not_specified
  commentId: M:Microsoft.EntityFrameworkCore.Relational.Tests.Metadata.SequenceTest.Can_get_model_default_schema_if_sequence_schema_not_specified
  id: Can_get_model_default_schema_if_sequence_schema_not_specified
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.Metadata.SequenceTest
  langs:
  - csharp
  - vb
  name: Can_get_model_default_schema_if_sequence_schema_not_specified()
  nameWithType: SequenceTest.Can_get_model_default_schema_if_sequence_schema_not_specified()
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Metadata.SequenceTest.Can_get_model_default_schema_if_sequence_schema_not_specified()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Metadata/SequenceTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_get_model_default_schema_if_sequence_schema_not_specified
    path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Metadata/SequenceTest.cs
    startLine: 75
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Can_get_model_default_schema_if_sequence_schema_not_specified()
    content.vb: >-
      <Fact>

      Public Sub Can_get_model_default_schema_if_sequence_schema_not_specified
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.Metadata.SequenceTest.Can_get_sequence_schema_if_specified_explicitly
  commentId: M:Microsoft.EntityFrameworkCore.Relational.Tests.Metadata.SequenceTest.Can_get_sequence_schema_if_specified_explicitly
  id: Can_get_sequence_schema_if_specified_explicitly
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.Metadata.SequenceTest
  langs:
  - csharp
  - vb
  name: Can_get_sequence_schema_if_specified_explicitly()
  nameWithType: SequenceTest.Can_get_sequence_schema_if_specified_explicitly()
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Metadata.SequenceTest.Can_get_sequence_schema_if_specified_explicitly()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Metadata/SequenceTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_get_sequence_schema_if_specified_explicitly
    path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Metadata/SequenceTest.cs
    startLine: 89
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Can_get_sequence_schema_if_specified_explicitly()
    content.vb: >-
      <Fact>

      Public Sub Can_get_sequence_schema_if_specified_explicitly
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.Metadata.SequenceTest.Can_serialize_and_deserialize
  commentId: M:Microsoft.EntityFrameworkCore.Relational.Tests.Metadata.SequenceTest.Can_serialize_and_deserialize
  id: Can_serialize_and_deserialize
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.Metadata.SequenceTest
  langs:
  - csharp
  - vb
  name: Can_serialize_and_deserialize()
  nameWithType: SequenceTest.Can_serialize_and_deserialize()
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Metadata.SequenceTest.Can_serialize_and_deserialize()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Metadata/SequenceTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_serialize_and_deserialize
    path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Metadata/SequenceTest.cs
    startLine: 100
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Can_serialize_and_deserialize()
    content.vb: >-
      <Fact>

      Public Sub Can_serialize_and_deserialize
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.Metadata.SequenceTest.Can_serialize_and_deserialize_with_defaults
  commentId: M:Microsoft.EntityFrameworkCore.Relational.Tests.Metadata.SequenceTest.Can_serialize_and_deserialize_with_defaults
  id: Can_serialize_and_deserialize_with_defaults
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.Metadata.SequenceTest
  langs:
  - csharp
  - vb
  name: Can_serialize_and_deserialize_with_defaults()
  nameWithType: SequenceTest.Can_serialize_and_deserialize_with_defaults()
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Metadata.SequenceTest.Can_serialize_and_deserialize_with_defaults()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Metadata/SequenceTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_serialize_and_deserialize_with_defaults
    path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Metadata/SequenceTest.cs
    startLine: 122
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Can_serialize_and_deserialize_with_defaults()
    content.vb: >-
      <Fact>

      Public Sub Can_serialize_and_deserialize_with_defaults
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.Metadata.SequenceTest.Can_serialize_and_deserialize_with_funky_names
  commentId: M:Microsoft.EntityFrameworkCore.Relational.Tests.Metadata.SequenceTest.Can_serialize_and_deserialize_with_funky_names
  id: Can_serialize_and_deserialize_with_funky_names
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.Metadata.SequenceTest
  langs:
  - csharp
  - vb
  name: Can_serialize_and_deserialize_with_funky_names()
  nameWithType: SequenceTest.Can_serialize_and_deserialize_with_funky_names()
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Metadata.SequenceTest.Can_serialize_and_deserialize_with_funky_names()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Metadata/SequenceTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_serialize_and_deserialize_with_funky_names
    path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Metadata/SequenceTest.cs
    startLine: 139
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Can_serialize_and_deserialize_with_funky_names()
    content.vb: >-
      <Fact>

      Public Sub Can_serialize_and_deserialize_with_funky_names
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.Metadata.SequenceTest.Throws_on_bad_serialized_form
  commentId: M:Microsoft.EntityFrameworkCore.Relational.Tests.Metadata.SequenceTest.Throws_on_bad_serialized_form
  id: Throws_on_bad_serialized_form
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.Metadata.SequenceTest
  langs:
  - csharp
  - vb
  name: Throws_on_bad_serialized_form()
  nameWithType: SequenceTest.Throws_on_bad_serialized_form()
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Metadata.SequenceTest.Throws_on_bad_serialized_form()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Metadata/SequenceTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Throws_on_bad_serialized_form
    path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Metadata/SequenceTest.cs
    startLine: 159
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Throws_on_bad_serialized_form()
    content.vb: >-
      <Fact>

      Public Sub Throws_on_bad_serialized_form
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Relational.Tests.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Relational.Tests.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Relational.Tests.Metadata
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Metadata
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
