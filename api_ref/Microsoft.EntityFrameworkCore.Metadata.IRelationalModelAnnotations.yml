### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Metadata.IRelationalModelAnnotations
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IRelationalModelAnnotations
  id: IRelationalModelAnnotations
  parent: Microsoft.EntityFrameworkCore.Metadata
  children:
  - Microsoft.EntityFrameworkCore.Metadata.IRelationalModelAnnotations.DatabaseName
  - Microsoft.EntityFrameworkCore.Metadata.IRelationalModelAnnotations.DefaultSchema
  - Microsoft.EntityFrameworkCore.Metadata.IRelationalModelAnnotations.FindSequence(System.String,System.String)
  - Microsoft.EntityFrameworkCore.Metadata.IRelationalModelAnnotations.Sequences
  langs:
  - csharp
  - vb
  name: IRelationalModelAnnotations
  nameWithType: IRelationalModelAnnotations
  fullName: Microsoft.EntityFrameworkCore.Metadata.IRelationalModelAnnotations
  type: Interface
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/IRelationalModelAnnotations.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: IRelationalModelAnnotations
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/IRelationalModelAnnotations.cs
    startLine: 8
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata
  syntax:
    content: public interface IRelationalModelAnnotations
    content.vb: Public Interface IRelationalModelAnnotations
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.EntityFrameworkCore.Metadata.IRelationalModelAnnotations.FindSequence(System.String,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.IRelationalModelAnnotations.FindSequence(System.String,System.String)
  id: FindSequence(System.String,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.IRelationalModelAnnotations
  langs:
  - csharp
  - vb
  name: FindSequence(String, String)
  nameWithType: IRelationalModelAnnotations.FindSequence(String, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.IRelationalModelAnnotations.FindSequence(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/IRelationalModelAnnotations.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: FindSequence
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/IRelationalModelAnnotations.cs
    startLine: 10
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata
  syntax:
    content: ISequence FindSequence(string name, string schema = null)
    content.vb: Function FindSequence(name As String, schema As String = Nothing) As ISequence
    parameters:
    - id: name
      type: System.String
    - id: schema
      type: System.String
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.ISequence
- uid: Microsoft.EntityFrameworkCore.Metadata.IRelationalModelAnnotations.Sequences
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.IRelationalModelAnnotations.Sequences
  id: Sequences
  parent: Microsoft.EntityFrameworkCore.Metadata.IRelationalModelAnnotations
  langs:
  - csharp
  - vb
  name: Sequences
  nameWithType: IRelationalModelAnnotations.Sequences
  fullName: Microsoft.EntityFrameworkCore.Metadata.IRelationalModelAnnotations.Sequences
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/IRelationalModelAnnotations.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Sequences
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/IRelationalModelAnnotations.cs
    startLine: 12
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata
  syntax:
    content: IReadOnlyList<ISequence> Sequences { get; }
    content.vb: ReadOnly Property Sequences As IReadOnlyList(Of ISequence)
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.ISequence}
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.IRelationalModelAnnotations.DefaultSchema
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.IRelationalModelAnnotations.DefaultSchema
  id: DefaultSchema
  parent: Microsoft.EntityFrameworkCore.Metadata.IRelationalModelAnnotations
  langs:
  - csharp
  - vb
  name: DefaultSchema
  nameWithType: IRelationalModelAnnotations.DefaultSchema
  fullName: Microsoft.EntityFrameworkCore.Metadata.IRelationalModelAnnotations.DefaultSchema
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/IRelationalModelAnnotations.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: DefaultSchema
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/IRelationalModelAnnotations.cs
    startLine: 14
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata
  syntax:
    content: string DefaultSchema { get; }
    content.vb: ReadOnly Property DefaultSchema As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.IRelationalModelAnnotations.DatabaseName
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.IRelationalModelAnnotations.DatabaseName
  id: DatabaseName
  parent: Microsoft.EntityFrameworkCore.Metadata.IRelationalModelAnnotations
  langs:
  - csharp
  - vb
  name: DatabaseName
  nameWithType: IRelationalModelAnnotations.DatabaseName
  fullName: Microsoft.EntityFrameworkCore.Metadata.IRelationalModelAnnotations.DatabaseName
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/IRelationalModelAnnotations.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: DatabaseName
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/IRelationalModelAnnotations.cs
    startLine: 15
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata
  syntax:
    content: string DatabaseName { get; }
    content.vb: ReadOnly Property DatabaseName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.EntityFrameworkCore.Metadata.ISequence
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.ISequence
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: ISequence
  nameWithType: ISequence
  fullName: Microsoft.EntityFrameworkCore.Metadata.ISequence
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.ISequence}
  commentId: T:System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.ISequence}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<ISequence>
  nameWithType: IReadOnlyList<ISequence>
  fullName: System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Metadata.ISequence>
  nameWithType.vb: IReadOnlyList(Of ISequence)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Metadata.ISequence)
  name.vb: IReadOnlyList(Of ISequence)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.ISequence
    name: ISequence
    nameWithType: ISequence
    fullName: Microsoft.EntityFrameworkCore.Metadata.ISequence
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.ISequence
    name: ISequence
    nameWithType: ISequence
    fullName: Microsoft.EntityFrameworkCore.Metadata.ISequence
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
