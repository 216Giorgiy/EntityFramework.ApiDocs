### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper
  commentId: T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper
  id: Shaper
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  children:
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.#ctor(IQuerySource)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.GetAccessorExpression(IQuerySource)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.IsShaperForQuerySource(IQuerySource)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.QuerySource
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.SaveAccessorExpression(QuerySourceMapping)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.Type
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.UpdateQuerySource(IQuerySource)
  langs:
  - csharp
  - vb
  name: Shaper
  nameWithType: Shaper
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/Shaper.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Shaper
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/Shaper.cs
    startLine: 15
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public abstract class Shaper
    content.vb: Public MustInherit Class Shaper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.#ctor(IQuerySource)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.#ctor(IQuerySource)
  id: '#ctor(IQuerySource)'
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper
  langs:
  - csharp
  - vb
  name: Shaper(IQuerySource)
  nameWithType: Shaper.Shaper(IQuerySource)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.Shaper(IQuerySource)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/Shaper.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/Shaper.cs
    startLine: 24
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected Shaper(IQuerySource querySource)
    content.vb: Protected Sub New(querySource As IQuerySource)
    parameters:
    - id: querySource
      type: IQuerySource
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.IsShaperForQuerySource(IQuerySource)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.IsShaperForQuerySource(IQuerySource)
  id: IsShaperForQuerySource(IQuerySource)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper
  langs:
  - csharp
  - vb
  name: IsShaperForQuerySource(IQuerySource)
  nameWithType: Shaper.IsShaperForQuerySource(IQuerySource)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.IsShaperForQuerySource(IQuerySource)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/Shaper.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: IsShaperForQuerySource
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/Shaper.cs
    startLine: 33
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual bool IsShaperForQuerySource(IQuerySource querySource)
    content.vb: Public Overridable Function IsShaperForQuerySource(querySource As IQuerySource) As Boolean
    parameters:
    - id: querySource
      type: IQuerySource
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.UpdateQuerySource(IQuerySource)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.UpdateQuerySource(IQuerySource)
  id: UpdateQuerySource(IQuerySource)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper
  langs:
  - csharp
  - vb
  name: UpdateQuerySource(IQuerySource)
  nameWithType: Shaper.UpdateQuerySource(IQuerySource)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.UpdateQuerySource(IQuerySource)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/Shaper.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: UpdateQuerySource
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/Shaper.cs
    startLine: 40
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual void UpdateQuerySource(IQuerySource querySource)
    content.vb: Public Overridable Sub UpdateQuerySource(querySource As IQuerySource)
    parameters:
    - id: querySource
      type: IQuerySource
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.Type
  commentId: P:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.Type
  id: Type
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: Shaper.Type
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.Type
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/Shaper.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Type
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/Shaper.cs
    startLine: 49
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public abstract Type Type { get; }
    content.vb: Public MustOverride ReadOnly Property Type As Type
    parameters: []
    return:
      type: System.Type
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.QuerySource
  commentId: P:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.QuerySource
  id: QuerySource
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper
  langs:
  - csharp
  - vb
  name: QuerySource
  nameWithType: Shaper.QuerySource
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.QuerySource
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/Shaper.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: QuerySource
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/Shaper.cs
    startLine: 55
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual IQuerySource QuerySource { get; }
    content.vb: Protected Overridable ReadOnly Property QuerySource As IQuerySource
    parameters: []
    return:
      type: IQuerySource
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.SaveAccessorExpression(QuerySourceMapping)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.SaveAccessorExpression(QuerySourceMapping)
  id: SaveAccessorExpression(QuerySourceMapping)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper
  langs:
  - csharp
  - vb
  name: SaveAccessorExpression(QuerySourceMapping)
  nameWithType: Shaper.SaveAccessorExpression(QuerySourceMapping)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.SaveAccessorExpression(QuerySourceMapping)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/Shaper.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: SaveAccessorExpression
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/Shaper.cs
    startLine: 61
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual void SaveAccessorExpression(QuerySourceMapping querySourceMapping)
    content.vb: Public Overridable Sub SaveAccessorExpression(querySourceMapping As QuerySourceMapping)
    parameters:
    - id: querySourceMapping
      type: QuerySourceMapping
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.GetAccessorExpression(IQuerySource)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.GetAccessorExpression(IQuerySource)
  id: GetAccessorExpression(IQuerySource)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper
  langs:
  - csharp
  - vb
  name: GetAccessorExpression(IQuerySource)
  nameWithType: Shaper.GetAccessorExpression(IQuerySource)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.GetAccessorExpression(IQuerySource)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/Shaper.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GetAccessorExpression
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/Shaper.cs
    startLine: 70
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual Expression GetAccessorExpression(IQuerySource querySource)
    content.vb: Public Overridable Function GetAccessorExpression(querySource As IQuerySource) As Expression
    parameters:
    - id: querySource
      type: IQuerySource
    return:
      type: System.Linq.Expressions.Expression
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<Shaper, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<Shaper, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of Shaper, TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper, TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of Shaper, TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<Shaper, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<Shaper, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of Shaper, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of Shaper, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: IQuerySource
  isExternal: true
  name: IQuerySource
  nameWithType: IQuerySource
  fullName: IQuerySource
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: QuerySourceMapping
  isExternal: true
  name: QuerySourceMapping
  nameWithType: QuerySourceMapping
  fullName: QuerySourceMapping
- uid: System.Linq.Expressions.Expression
  commentId: T:System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: true
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: false
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
