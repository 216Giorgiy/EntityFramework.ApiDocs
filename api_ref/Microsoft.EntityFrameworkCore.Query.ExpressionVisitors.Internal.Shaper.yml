### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper
  commentId: T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper
  id: Shaper
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  children:
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.#ctor(IQuerySource)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.GetAccessorExpression(IQuerySource)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.IsShaperForQuerySource(IQuerySource)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.QuerySource
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.SaveAccessorExpression(QuerySourceMapping)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.Type
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.UpdateQuerySource(IQuerySource)
  langs:
  - csharp
  - vb
  name: Shaper
  nameWithType: Shaper
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/Shaper.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Shaper
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/Shaper.cs
    startLine: 15
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public abstract class Shaper
    content.vb: Public MustInherit Class Shaper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.#ctor(IQuerySource)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.#ctor(IQuerySource)
  id: '#ctor(IQuerySource)'
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper
  langs:
  - csharp
  - vb
  name: Shaper(IQuerySource)
  nameWithType: Shaper.Shaper(IQuerySource)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.Shaper(IQuerySource)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/Shaper.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/Shaper.cs
    startLine: 24
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected Shaper(IQuerySource querySource)
    content.vb: Protected Sub New(querySource As IQuerySource)
    parameters:
    - id: querySource
      type: IQuerySource
  overload: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.IsShaperForQuerySource(IQuerySource)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.IsShaperForQuerySource(IQuerySource)
  id: IsShaperForQuerySource(IQuerySource)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper
  langs:
  - csharp
  - vb
  name: IsShaperForQuerySource(IQuerySource)
  nameWithType: Shaper.IsShaperForQuerySource(IQuerySource)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.IsShaperForQuerySource(IQuerySource)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/Shaper.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: IsShaperForQuerySource
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/Shaper.cs
    startLine: 33
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual bool IsShaperForQuerySource(IQuerySource querySource)
    content.vb: Public Overridable Function IsShaperForQuerySource(querySource As IQuerySource) As Boolean
    parameters:
    - id: querySource
      type: IQuerySource
    return:
      type: System.Boolean
  overload: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.IsShaperForQuerySource*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.UpdateQuerySource(IQuerySource)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.UpdateQuerySource(IQuerySource)
  id: UpdateQuerySource(IQuerySource)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper
  langs:
  - csharp
  - vb
  name: UpdateQuerySource(IQuerySource)
  nameWithType: Shaper.UpdateQuerySource(IQuerySource)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.UpdateQuerySource(IQuerySource)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/Shaper.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: UpdateQuerySource
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/Shaper.cs
    startLine: 40
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual void UpdateQuerySource(IQuerySource querySource)
    content.vb: Public Overridable Sub UpdateQuerySource(querySource As IQuerySource)
    parameters:
    - id: querySource
      type: IQuerySource
  overload: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.UpdateQuerySource*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.Type
  commentId: P:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.Type
  id: Type
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: Shaper.Type
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.Type
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/Shaper.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Type
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/Shaper.cs
    startLine: 49
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public abstract Type Type { get; }
    content.vb: Public MustOverride ReadOnly Property Type As Type
    parameters: []
    return:
      type: System.Type
  overload: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.Type*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.QuerySource
  commentId: P:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.QuerySource
  id: QuerySource
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper
  langs:
  - csharp
  - vb
  name: QuerySource
  nameWithType: Shaper.QuerySource
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.QuerySource
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/Shaper.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: QuerySource
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/Shaper.cs
    startLine: 55
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual IQuerySource QuerySource { get; }
    content.vb: Protected Overridable ReadOnly Property QuerySource As IQuerySource
    parameters: []
    return:
      type: IQuerySource
  overload: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.QuerySource*
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.SaveAccessorExpression(QuerySourceMapping)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.SaveAccessorExpression(QuerySourceMapping)
  id: SaveAccessorExpression(QuerySourceMapping)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper
  langs:
  - csharp
  - vb
  name: SaveAccessorExpression(QuerySourceMapping)
  nameWithType: Shaper.SaveAccessorExpression(QuerySourceMapping)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.SaveAccessorExpression(QuerySourceMapping)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/Shaper.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: SaveAccessorExpression
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/Shaper.cs
    startLine: 61
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual void SaveAccessorExpression(QuerySourceMapping querySourceMapping)
    content.vb: Public Overridable Sub SaveAccessorExpression(querySourceMapping As QuerySourceMapping)
    parameters:
    - id: querySourceMapping
      type: QuerySourceMapping
  overload: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.SaveAccessorExpression*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.GetAccessorExpression(IQuerySource)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.GetAccessorExpression(IQuerySource)
  id: GetAccessorExpression(IQuerySource)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper
  langs:
  - csharp
  - vb
  name: GetAccessorExpression(IQuerySource)
  nameWithType: Shaper.GetAccessorExpression(IQuerySource)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.GetAccessorExpression(IQuerySource)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/Shaper.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetAccessorExpression
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/Shaper.cs
    startLine: 70
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual Expression GetAccessorExpression(IQuerySource querySource)
    content.vb: Public Overridable Function GetAccessorExpression(querySource As IQuerySource) As Expression
    parameters:
    - id: querySource
      type: IQuerySource
    return:
      type: System.Linq.Expressions.Expression
  overload: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.GetAccessorExpression*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.#ctor*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.#ctor
  isExternal: false
  name: Shaper
  nameWithType: Shaper.Shaper
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.Shaper
- uid: IQuerySource
  isExternal: true
  name: IQuerySource
  nameWithType: IQuerySource
  fullName: IQuerySource
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.IsShaperForQuerySource*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.IsShaperForQuerySource
  isExternal: false
  name: IsShaperForQuerySource
  nameWithType: Shaper.IsShaperForQuerySource
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.IsShaperForQuerySource
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.UpdateQuerySource*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.UpdateQuerySource
  isExternal: false
  name: UpdateQuerySource
  nameWithType: Shaper.UpdateQuerySource
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.UpdateQuerySource
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.Type*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.Type
  isExternal: false
  name: Type
  nameWithType: Shaper.Type
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.Type
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.QuerySource*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.QuerySource
  isExternal: false
  name: QuerySource
  nameWithType: Shaper.QuerySource
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.QuerySource
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.SaveAccessorExpression*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.SaveAccessorExpression
  isExternal: false
  name: SaveAccessorExpression
  nameWithType: Shaper.SaveAccessorExpression
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.SaveAccessorExpression
- uid: QuerySourceMapping
  isExternal: true
  name: QuerySourceMapping
  nameWithType: QuerySourceMapping
  fullName: QuerySourceMapping
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.GetAccessorExpression*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.GetAccessorExpression
  isExternal: false
  name: GetAccessorExpression
  nameWithType: Shaper.GetAccessorExpression
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.GetAccessorExpression
- uid: System.Linq.Expressions.Expression
  commentId: T:System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: true
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: false
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
