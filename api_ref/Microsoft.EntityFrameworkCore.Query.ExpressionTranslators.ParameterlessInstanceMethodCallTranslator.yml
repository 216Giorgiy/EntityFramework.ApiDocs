### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.ParameterlessInstanceMethodCallTranslator
  commentId: T:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.ParameterlessInstanceMethodCallTranslator
  id: ParameterlessInstanceMethodCallTranslator
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators
  children:
  - Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.ParameterlessInstanceMethodCallTranslator.#ctor(System.Type,System.String,System.String)
  - Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.ParameterlessInstanceMethodCallTranslator.Translate(System.Linq.Expressions.MethodCallExpression)
  langs:
  - csharp
  - vb
  name: ParameterlessInstanceMethodCallTranslator
  nameWithType: ParameterlessInstanceMethodCallTranslator
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.ParameterlessInstanceMethodCallTranslator
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionTranslators/ParameterlessInstanceMethodCallTranslator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ParameterlessInstanceMethodCallTranslator
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionTranslators/ParameterlessInstanceMethodCallTranslator.cs
    startLine: 16
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators
  summary: "\nA base LINQ expression translator for CLR <xref href=\"System.Linq.Expressions.MethodCallExpression\" data-throw-if-not-resolved=\"false\"></xref> expressions that\nare instance methods and do not take arguments.\n"
  example: []
  syntax:
    content: 'public abstract class ParameterlessInstanceMethodCallTranslator : IMethodCallTranslator'
    content.vb: >-
      Public MustInherit Class ParameterlessInstanceMethodCallTranslator
          Implements IMethodCallTranslator
  inheritance:
  - System.Object
  implements:
  - Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMethodCallTranslator
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.ParameterlessInstanceMethodCallTranslator.#ctor(System.Type,System.String,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.ParameterlessInstanceMethodCallTranslator.#ctor(System.Type,System.String,System.String)
  id: '#ctor(System.Type,System.String,System.String)'
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.ParameterlessInstanceMethodCallTranslator
  langs:
  - csharp
  - vb
  name: ParameterlessInstanceMethodCallTranslator(Type, String, String)
  nameWithType: ParameterlessInstanceMethodCallTranslator.ParameterlessInstanceMethodCallTranslator(Type, String, String)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.ParameterlessInstanceMethodCallTranslator.ParameterlessInstanceMethodCallTranslator(System.Type, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionTranslators/ParameterlessInstanceMethodCallTranslator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionTranslators/ParameterlessInstanceMethodCallTranslator.cs
    startLine: 28
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators
  summary: "\nSpecialised constructor for use only by derived class.\n"
  example: []
  syntax:
    content: protected ParameterlessInstanceMethodCallTranslator(Type declaringType, string clrMethodName, string sqlFunctionName)
    content.vb: Protected Sub New(declaringType As Type, clrMethodName As String, sqlFunctionName As String)
    parameters:
    - id: declaringType
      type: System.Type
      description: 'The declaring type of the method. '
    - id: clrMethodName
      type: System.String
      description: 'Name of the method. '
    - id: sqlFunctionName
      type: System.String
      description: 'The name of the target SQL function. '
  overload: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.ParameterlessInstanceMethodCallTranslator.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.ParameterlessInstanceMethodCallTranslator.Translate(System.Linq.Expressions.MethodCallExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.ParameterlessInstanceMethodCallTranslator.Translate(System.Linq.Expressions.MethodCallExpression)
  id: Translate(System.Linq.Expressions.MethodCallExpression)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.ParameterlessInstanceMethodCallTranslator
  langs:
  - csharp
  - vb
  name: Translate(MethodCallExpression)
  nameWithType: ParameterlessInstanceMethodCallTranslator.Translate(MethodCallExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.ParameterlessInstanceMethodCallTranslator.Translate(System.Linq.Expressions.MethodCallExpression)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionTranslators/ParameterlessInstanceMethodCallTranslator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Translate
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionTranslators/ParameterlessInstanceMethodCallTranslator.cs
    startLine: 43
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators
  summary: "\nTranslates the given method call expression.\n"
  example: []
  syntax:
    content: public virtual Expression Translate(MethodCallExpression methodCallExpression)
    content.vb: Public Overridable Function Translate(methodCallExpression As MethodCallExpression) As Expression
    parameters:
    - id: methodCallExpression
      type: System.Linq.Expressions.MethodCallExpression
      description: 'The method call expression. '
    return:
      type: System.Linq.Expressions.Expression
      description: "\nA SQL expression representing the translated MethodCallExpression.\n"
  overload: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.ParameterlessInstanceMethodCallTranslator.Translate*
  implements:
  - Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMethodCallTranslator.Translate(System.Linq.Expressions.MethodCallExpression)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: System.Linq.Expressions.MethodCallExpression
  commentId: T:System.Linq.Expressions.MethodCallExpression
  parent: System.Linq.Expressions
  isExternal: true
  name: MethodCallExpression
  nameWithType: MethodCallExpression
  fullName: System.Linq.Expressions.MethodCallExpression
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators
  commentId: N:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators
  nameWithType: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMethodCallTranslator
  commentId: T:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMethodCallTranslator
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators
  isExternal: false
  name: IMethodCallTranslator
  nameWithType: IMethodCallTranslator
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMethodCallTranslator
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: false
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.ParameterlessInstanceMethodCallTranslator.#ctor*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.ParameterlessInstanceMethodCallTranslator.#ctor
  isExternal: false
  name: ParameterlessInstanceMethodCallTranslator
  nameWithType: ParameterlessInstanceMethodCallTranslator.ParameterlessInstanceMethodCallTranslator
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.ParameterlessInstanceMethodCallTranslator.ParameterlessInstanceMethodCallTranslator
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.ParameterlessInstanceMethodCallTranslator.Translate*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.ParameterlessInstanceMethodCallTranslator.Translate
  isExternal: false
  name: Translate
  nameWithType: ParameterlessInstanceMethodCallTranslator.Translate
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.ParameterlessInstanceMethodCallTranslator.Translate
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMethodCallTranslator.Translate(System.Linq.Expressions.MethodCallExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMethodCallTranslator.Translate(System.Linq.Expressions.MethodCallExpression)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMethodCallTranslator
  isExternal: true
  name: Translate(MethodCallExpression)
  nameWithType: IMethodCallTranslator.Translate(MethodCallExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMethodCallTranslator.Translate(System.Linq.Expressions.MethodCallExpression)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMethodCallTranslator.Translate(System.Linq.Expressions.MethodCallExpression)
    name: Translate
    nameWithType: IMethodCallTranslator.Translate
    fullName: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMethodCallTranslator.Translate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.MethodCallExpression
    name: MethodCallExpression
    nameWithType: MethodCallExpression
    fullName: System.Linq.Expressions.MethodCallExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMethodCallTranslator.Translate(System.Linq.Expressions.MethodCallExpression)
    name: Translate
    nameWithType: IMethodCallTranslator.Translate
    fullName: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMethodCallTranslator.Translate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.MethodCallExpression
    name: MethodCallExpression
    nameWithType: MethodCallExpression
    fullName: System.Linq.Expressions.MethodCallExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.Expression
  commentId: T:System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: true
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
