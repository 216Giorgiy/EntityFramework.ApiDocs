### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  id: IncludeTestBase`1
  parent: Microsoft.EntityFrameworkCore.Specification.Tests
  children:
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.#ctor(`0)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.CreateContext
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Fixture
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_bad_navigation_property
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_closes_reader(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_alias_generation(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_and_reference(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_as_no_tracking(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_as_no_tracking2(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_dependent_already_tracked(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_dependent_already_tracked_as_no_tracking(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_force_alias_uniquefication(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_on_additional_from_clause(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_on_additional_from_clause_no_tracking(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_on_additional_from_clause_with_filter(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_on_additional_from_clause2(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_on_group_join_clause_with_filter(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_on_inner_group_join_clause_with_filter(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_on_join_clause_with_filter(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_on_join_clause_with_order_by_and_filter(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_order_by_collection_column(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_order_by_key(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_order_by_non_key(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_order_by_non_key_with_first_or_default(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_order_by_non_key_with_skip(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_order_by_non_key_with_take(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_order_by_subquery(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_principal_already_tracked(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_principal_already_tracked_as_no_tracking(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_single_or_default_no_result(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_skip_no_order_by(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_skip_take_no_order_by(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_take_no_order_by(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_then_include_collection(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_then_include_collection_predicate(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_then_include_collection_then_include_reference(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_when_groupby(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_when_projection(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_with_client_filter(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_with_filter(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_with_filter_reordered(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_duplicate_collection(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_duplicate_collection_result_operator(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_duplicate_collection_result_operator2(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_duplicate_reference(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_duplicate_reference2(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_duplicate_reference3(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_list(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_multi_level_collection_and_then_include_reference_predicate(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_multi_level_reference_and_collection_predicate(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_multi_level_reference_then_include_collection_predicate(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_multiple_references(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_multiple_references_and_collection_multi_level(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_multiple_references_and_collection_multi_level_reverse(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_multiple_references_multi_level(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_multiple_references_multi_level_reverse(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_multiple_references_then_include_collection_multi_level(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_multiple_references_then_include_collection_multi_level_reverse(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_multiple_references_then_include_multi_level(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_multiple_references_then_include_multi_level_reverse(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_property_expression_invalid
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_reference(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_reference_alias_generation(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_reference_and_collection(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_reference_as_no_tracking(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_reference_dependent_already_tracked(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_reference_invalid
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_reference_single_or_default_when_no_result(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_reference_when_entity_in_projection(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_reference_when_projection(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_reference_with_filter(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_reference_with_filter_reordered(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_references_and_collection_multi_level(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_references_and_collection_multi_level_predicate(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_references_multi_level(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_references_then_include_collection_multi_level(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_references_then_include_collection_multi_level_predicate(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_references_then_include_multi_level(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_when_result_operator(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_where_skip_take_projection(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_with_complex_projection(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_with_skip(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_with_take(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Then_include_collection_order_by_collection_column(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Then_include_property_expression_invalid
  langs:
  - csharp
  - vb
  name: IncludeTestBase<TFixture>
  nameWithType: IncludeTestBase<TFixture>
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: IncludeTestBase
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 19
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: 'public abstract class IncludeTestBase<TFixture> : IClassFixture<TFixture> where TFixture : NorthwindQueryFixtureBase, new ()'
    content.vb: >-
      Public MustInherit Class IncludeTestBase(Of TFixture As {NorthwindQueryFixtureBase, New})
          Implements IClassFixture(Of TFixture)
    typeParameters:
    - id: TFixture
  inheritance:
  - System.Object
  implements:
  - Xunit.IClassFixture{{TFixture}}
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: IncludeTestBase(Of TFixture)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture)
  name.vb: IncludeTestBase(Of TFixture)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.#ctor(`0)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.#ctor(`0)
  id: '#ctor(`0)'
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: IncludeTestBase(TFixture)
  nameWithType: IncludeTestBase<TFixture>.IncludeTestBase(TFixture)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.IncludeTestBase(TFixture)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 22
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: protected IncludeTestBase(TFixture fixture)
    content.vb: Protected Sub New(fixture As TFixture)
    parameters:
    - id: fixture
      type: '{TFixture}'
  nameWithType.vb: IncludeTestBase(Of TFixture).IncludeTestBase(TFixture)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).IncludeTestBase(TFixture)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Fixture
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Fixture
  id: Fixture
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Fixture
  nameWithType: IncludeTestBase<TFixture>.Fixture
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Fixture
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Fixture
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 27
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: protected TFixture Fixture { get; }
    content.vb: Protected ReadOnly Property Fixture As TFixture
    parameters: []
    return:
      type: '{TFixture}'
  nameWithType.vb: IncludeTestBase(Of TFixture).Fixture
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Fixture
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.CreateContext
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.CreateContext
  id: CreateContext
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: CreateContext()
  nameWithType: IncludeTestBase<TFixture>.CreateContext()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.CreateContext()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateContext
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 29
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: protected NorthwindContext CreateContext()
    content.vb: Protected Function CreateContext As NorthwindContext
    return:
      type: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.NorthwindContext
  nameWithType.vb: IncludeTestBase(Of TFixture).CreateContext()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).CreateContext()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_reference_invalid
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_reference_invalid
  id: Include_reference_invalid
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_reference_invalid()
  nameWithType: IncludeTestBase<TFixture>.Include_reference_invalid()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_reference_invalid()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_reference_invalid
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 31
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Include_reference_invalid()
    content.vb: >-
      <Fact>

      Public Overridable Sub Include_reference_invalid
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_reference_invalid()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_reference_invalid()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_bad_navigation_property
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_bad_navigation_property
  id: Include_bad_navigation_property
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_bad_navigation_property()
  nameWithType: IncludeTestBase<TFixture>.Include_bad_navigation_property()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_bad_navigation_property()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_bad_navigation_property
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 46
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Include_bad_navigation_property()
    content.vb: >-
      <Fact>

      Public Overridable Sub Include_bad_navigation_property
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_bad_navigation_property()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_bad_navigation_property()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_property_expression_invalid
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_property_expression_invalid
  id: Include_property_expression_invalid
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_property_expression_invalid()
  nameWithType: IncludeTestBase<TFixture>.Include_property_expression_invalid()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_property_expression_invalid()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_property_expression_invalid
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 58
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Include_property_expression_invalid()
    content.vb: >-
      <Fact>

      Public Overridable Sub Include_property_expression_invalid
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_property_expression_invalid()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_property_expression_invalid()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Then_include_collection_order_by_collection_column(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Then_include_collection_order_by_collection_column(System.Boolean)
  id: Then_include_collection_order_by_collection_column(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Then_include_collection_order_by_collection_column(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Then_include_collection_order_by_collection_column(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Then_include_collection_order_by_collection_column(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Then_include_collection_order_by_collection_column
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 90
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Then_include_collection_order_by_collection_column(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Then_include_collection_order_by_collection_column(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Then_include_collection_order_by_collection_column(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Then_include_collection_order_by_collection_column(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Then_include_property_expression_invalid
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Then_include_property_expression_invalid
  id: Then_include_property_expression_invalid
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Then_include_property_expression_invalid()
  nameWithType: IncludeTestBase<TFixture>.Then_include_property_expression_invalid()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Then_include_property_expression_invalid()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Then_include_property_expression_invalid
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 129
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Then_include_property_expression_invalid()
    content.vb: >-
      <Fact>

      Public Overridable Sub Then_include_property_expression_invalid
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Then_include_property_expression_invalid()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Then_include_property_expression_invalid()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_closes_reader(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_closes_reader(System.Boolean)
  id: Include_closes_reader(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_closes_reader(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_closes_reader(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_closes_reader(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_closes_reader
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 162
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_closes_reader(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_closes_reader(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_closes_reader(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_closes_reader(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_when_result_operator(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_when_result_operator(System.Boolean)
  id: Include_when_result_operator(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_when_result_operator(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_when_result_operator(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_when_result_operator(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_when_result_operator
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 180
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_when_result_operator(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_when_result_operator(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_when_result_operator(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_when_result_operator(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection(System.Boolean)
  id: Include_collection(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_collection(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_collection(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_collection(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_collection
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 200
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_collection(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_collection(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_collection(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_collection(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_skip_no_order_by(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_skip_no_order_by(System.Boolean)
  id: Include_collection_skip_no_order_by(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_collection_skip_no_order_by(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_collection_skip_no_order_by(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_collection_skip_no_order_by(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_collection_skip_no_order_by
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 233
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_collection_skip_no_order_by(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_collection_skip_no_order_by(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_collection_skip_no_order_by(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_collection_skip_no_order_by(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_take_no_order_by(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_take_no_order_by(System.Boolean)
  id: Include_collection_take_no_order_by(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_collection_take_no_order_by(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_collection_take_no_order_by(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_collection_take_no_order_by(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_collection_take_no_order_by
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 266
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_collection_take_no_order_by(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_collection_take_no_order_by(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_collection_take_no_order_by(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_collection_take_no_order_by(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_skip_take_no_order_by(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_skip_take_no_order_by(System.Boolean)
  id: Include_collection_skip_take_no_order_by(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_collection_skip_take_no_order_by(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_collection_skip_take_no_order_by(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_collection_skip_take_no_order_by(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_collection_skip_take_no_order_by
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 284
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_collection_skip_take_no_order_by(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_collection_skip_take_no_order_by(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_collection_skip_take_no_order_by(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_collection_skip_take_no_order_by(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_list(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_list(System.Boolean)
  id: Include_list(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_list(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_list(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_list(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_list
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 319
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_list(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_list(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_list(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_list(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_alias_generation(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_alias_generation(System.Boolean)
  id: Include_collection_alias_generation(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_collection_alias_generation(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_collection_alias_generation(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_collection_alias_generation(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_collection_alias_generation
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 348
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_collection_alias_generation(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_collection_alias_generation(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_collection_alias_generation(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_collection_alias_generation(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_and_reference(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_and_reference(System.Boolean)
  id: Include_collection_and_reference(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_collection_and_reference(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_collection_and_reference(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_collection_and_reference(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_collection_and_reference
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 379
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_collection_and_reference(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_collection_and_reference(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_collection_and_reference(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_collection_and_reference(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_as_no_tracking(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_as_no_tracking(System.Boolean)
  id: Include_collection_as_no_tracking(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_collection_as_no_tracking(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_collection_as_no_tracking(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_collection_as_no_tracking(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_collection_as_no_tracking
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 412
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_collection_as_no_tracking(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_collection_as_no_tracking(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_collection_as_no_tracking(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_collection_as_no_tracking(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_as_no_tracking2(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_as_no_tracking2(System.Boolean)
  id: Include_collection_as_no_tracking2(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_collection_as_no_tracking2(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_collection_as_no_tracking2(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_collection_as_no_tracking2(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_collection_as_no_tracking2
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 447
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_collection_as_no_tracking2(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_collection_as_no_tracking2(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_collection_as_no_tracking2(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_collection_as_no_tracking2(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_dependent_already_tracked(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_dependent_already_tracked(System.Boolean)
  id: Include_collection_dependent_already_tracked(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_collection_dependent_already_tracked(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_collection_dependent_already_tracked(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_collection_dependent_already_tracked(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_collection_dependent_already_tracked
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 486
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_collection_dependent_already_tracked(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_collection_dependent_already_tracked(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_collection_dependent_already_tracked(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_collection_dependent_already_tracked(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_dependent_already_tracked_as_no_tracking(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_dependent_already_tracked_as_no_tracking(System.Boolean)
  id: Include_collection_dependent_already_tracked_as_no_tracking(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_collection_dependent_already_tracked_as_no_tracking(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_collection_dependent_already_tracked_as_no_tracking(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_collection_dependent_already_tracked_as_no_tracking(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_collection_dependent_already_tracked_as_no_tracking
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 523
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_collection_dependent_already_tracked_as_no_tracking(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_collection_dependent_already_tracked_as_no_tracking(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_collection_dependent_already_tracked_as_no_tracking(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_collection_dependent_already_tracked_as_no_tracking(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_on_additional_from_clause(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_on_additional_from_clause(System.Boolean)
  id: Include_collection_on_additional_from_clause(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_collection_on_additional_from_clause(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_collection_on_additional_from_clause(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_collection_on_additional_from_clause(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_collection_on_additional_from_clause
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 562
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_collection_on_additional_from_clause(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_collection_on_additional_from_clause(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_collection_on_additional_from_clause(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_collection_on_additional_from_clause(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_on_additional_from_clause_no_tracking(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_on_additional_from_clause_no_tracking(System.Boolean)
  id: Include_collection_on_additional_from_clause_no_tracking(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_collection_on_additional_from_clause_no_tracking(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_collection_on_additional_from_clause_no_tracking(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_collection_on_additional_from_clause_no_tracking(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_collection_on_additional_from_clause_no_tracking
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 597
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_collection_on_additional_from_clause_no_tracking(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_collection_on_additional_from_clause_no_tracking(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_collection_on_additional_from_clause_no_tracking(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_collection_on_additional_from_clause_no_tracking(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_on_additional_from_clause_with_filter(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_on_additional_from_clause_with_filter(System.Boolean)
  id: Include_collection_on_additional_from_clause_with_filter(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_collection_on_additional_from_clause_with_filter(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_collection_on_additional_from_clause_with_filter(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_collection_on_additional_from_clause_with_filter(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_collection_on_additional_from_clause_with_filter
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 632
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_collection_on_additional_from_clause_with_filter(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_collection_on_additional_from_clause_with_filter(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_collection_on_additional_from_clause_with_filter(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_collection_on_additional_from_clause_with_filter(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_on_additional_from_clause2(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_on_additional_from_clause2(System.Boolean)
  id: Include_collection_on_additional_from_clause2(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_collection_on_additional_from_clause2(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_collection_on_additional_from_clause2(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_collection_on_additional_from_clause2(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_collection_on_additional_from_clause2
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 671
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_collection_on_additional_from_clause2(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_collection_on_additional_from_clause2(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_collection_on_additional_from_clause2(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_collection_on_additional_from_clause2(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_where_skip_take_projection(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_where_skip_take_projection(System.Boolean)
  id: Include_where_skip_take_projection(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_where_skip_take_projection(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_where_skip_take_projection(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_where_skip_take_projection(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_where_skip_take_projection
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 705
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_where_skip_take_projection(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_where_skip_take_projection(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_where_skip_take_projection(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_where_skip_take_projection(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_on_join_clause_with_filter(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_on_join_clause_with_filter(System.Boolean)
  id: Include_collection_on_join_clause_with_filter(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_collection_on_join_clause_with_filter(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_collection_on_join_clause_with_filter(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_collection_on_join_clause_with_filter(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_collection_on_join_clause_with_filter
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 743
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_collection_on_join_clause_with_filter(bool useString)
    content.vb: >-
      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_collection_on_join_clause_with_filter(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_collection_on_join_clause_with_filter(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_collection_on_join_clause_with_filter(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_on_join_clause_with_order_by_and_filter(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_on_join_clause_with_order_by_and_filter(System.Boolean)
  id: Include_collection_on_join_clause_with_order_by_and_filter(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_collection_on_join_clause_with_order_by_and_filter(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_collection_on_join_clause_with_order_by_and_filter(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_collection_on_join_clause_with_order_by_and_filter(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_collection_on_join_clause_with_order_by_and_filter
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 780
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_collection_on_join_clause_with_order_by_and_filter(bool useString)
    content.vb: >-
      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_collection_on_join_clause_with_order_by_and_filter(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_collection_on_join_clause_with_order_by_and_filter(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_collection_on_join_clause_with_order_by_and_filter(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_on_group_join_clause_with_filter(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_on_group_join_clause_with_filter(System.Boolean)
  id: Include_collection_on_group_join_clause_with_filter(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_collection_on_group_join_clause_with_filter(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_collection_on_group_join_clause_with_filter(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_collection_on_group_join_clause_with_filter(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_collection_on_group_join_clause_with_filter
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 819
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_collection_on_group_join_clause_with_filter(bool useString)
    content.vb: >-
      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_collection_on_group_join_clause_with_filter(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_collection_on_group_join_clause_with_filter(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_collection_on_group_join_clause_with_filter(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_on_inner_group_join_clause_with_filter(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_on_inner_group_join_clause_with_filter(System.Boolean)
  id: Include_collection_on_inner_group_join_clause_with_filter(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_collection_on_inner_group_join_clause_with_filter(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_collection_on_inner_group_join_clause_with_filter(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_collection_on_inner_group_join_clause_with_filter(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_collection_on_inner_group_join_clause_with_filter
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 856
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_collection_on_inner_group_join_clause_with_filter(bool useString)
    content.vb: >-
      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_collection_on_inner_group_join_clause_with_filter(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_collection_on_inner_group_join_clause_with_filter(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_collection_on_inner_group_join_clause_with_filter(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_when_groupby(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_when_groupby(System.Boolean)
  id: Include_collection_when_groupby(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_collection_when_groupby(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_collection_when_groupby(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_collection_when_groupby(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_collection_when_groupby
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 896
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_collection_when_groupby(bool useString)
    content.vb: >-
      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_collection_when_groupby(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_collection_when_groupby(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_collection_when_groupby(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_order_by_collection_column(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_order_by_collection_column(System.Boolean)
  id: Include_collection_order_by_collection_column(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_collection_order_by_collection_column(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_collection_order_by_collection_column(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_collection_order_by_collection_column(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_collection_order_by_collection_column
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 930
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_collection_order_by_collection_column(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_collection_order_by_collection_column(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_collection_order_by_collection_column(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_collection_order_by_collection_column(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_order_by_key(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_order_by_key(System.Boolean)
  id: Include_collection_order_by_key(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_collection_order_by_key(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_collection_order_by_key(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_collection_order_by_key(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_collection_order_by_key
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 964
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_collection_order_by_key(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_collection_order_by_key(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_collection_order_by_key(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_collection_order_by_key(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_order_by_non_key(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_order_by_non_key(System.Boolean)
  id: Include_collection_order_by_non_key(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_collection_order_by_non_key(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_collection_order_by_non_key(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_collection_order_by_non_key(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_collection_order_by_non_key
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 999
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_collection_order_by_non_key(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_collection_order_by_non_key(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_collection_order_by_non_key(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_collection_order_by_non_key(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_order_by_non_key_with_take(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_order_by_non_key_with_take(System.Boolean)
  id: Include_collection_order_by_non_key_with_take(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_collection_order_by_non_key_with_take(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_collection_order_by_non_key_with_take(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_collection_order_by_non_key_with_take(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_collection_order_by_non_key_with_take
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 1034
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_collection_order_by_non_key_with_take(bool useString)
    content.vb: >-
      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_collection_order_by_non_key_with_take(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_collection_order_by_non_key_with_take(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_collection_order_by_non_key_with_take(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_order_by_non_key_with_skip(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_order_by_non_key_with_skip(System.Boolean)
  id: Include_collection_order_by_non_key_with_skip(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_collection_order_by_non_key_with_skip(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_collection_order_by_non_key_with_skip(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_collection_order_by_non_key_with_skip(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_collection_order_by_non_key_with_skip
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 1071
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_collection_order_by_non_key_with_skip(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_collection_order_by_non_key_with_skip(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_collection_order_by_non_key_with_skip(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_collection_order_by_non_key_with_skip(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_order_by_non_key_with_first_or_default(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_order_by_non_key_with_first_or_default(System.Boolean)
  id: Include_collection_order_by_non_key_with_first_or_default(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_collection_order_by_non_key_with_first_or_default(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_collection_order_by_non_key_with_first_or_default(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_collection_order_by_non_key_with_first_or_default(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_collection_order_by_non_key_with_first_or_default
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 1108
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_collection_order_by_non_key_with_first_or_default(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_collection_order_by_non_key_with_first_or_default(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_collection_order_by_non_key_with_first_or_default(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_collection_order_by_non_key_with_first_or_default(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_order_by_subquery(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_order_by_subquery(System.Boolean)
  id: Include_collection_order_by_subquery(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_collection_order_by_subquery(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_collection_order_by_subquery(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_collection_order_by_subquery(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_collection_order_by_subquery
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 1140
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_collection_order_by_subquery(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_collection_order_by_subquery(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_collection_order_by_subquery(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_collection_order_by_subquery(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_principal_already_tracked(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_principal_already_tracked(System.Boolean)
  id: Include_collection_principal_already_tracked(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_collection_principal_already_tracked(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_collection_principal_already_tracked(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_collection_principal_already_tracked(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_collection_principal_already_tracked
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 1173
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_collection_principal_already_tracked(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_collection_principal_already_tracked(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_collection_principal_already_tracked(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_collection_principal_already_tracked(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_principal_already_tracked_as_no_tracking(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_principal_already_tracked_as_no_tracking(System.Boolean)
  id: Include_collection_principal_already_tracked_as_no_tracking(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_collection_principal_already_tracked_as_no_tracking(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_collection_principal_already_tracked_as_no_tracking(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_collection_principal_already_tracked_as_no_tracking(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_collection_principal_already_tracked_as_no_tracking
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 1209
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_collection_principal_already_tracked_as_no_tracking(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_collection_principal_already_tracked_as_no_tracking(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_collection_principal_already_tracked_as_no_tracking(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_collection_principal_already_tracked_as_no_tracking(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_single_or_default_no_result(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_single_or_default_no_result(System.Boolean)
  id: Include_collection_single_or_default_no_result(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_collection_single_or_default_no_result(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_collection_single_or_default_no_result(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_collection_single_or_default_no_result(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_collection_single_or_default_no_result
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 1248
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_collection_single_or_default_no_result(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_collection_single_or_default_no_result(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_collection_single_or_default_no_result(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_collection_single_or_default_no_result(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_when_projection(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_when_projection(System.Boolean)
  id: Include_collection_when_projection(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_collection_when_projection(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_collection_when_projection(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_collection_when_projection(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_collection_when_projection
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 1268
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_collection_when_projection(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_collection_when_projection(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_collection_when_projection(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_collection_when_projection(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_with_filter(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_with_filter(System.Boolean)
  id: Include_collection_with_filter(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_collection_with_filter(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_collection_with_filter(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_collection_with_filter(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_collection_with_filter
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 1291
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_collection_with_filter(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_collection_with_filter(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_collection_with_filter(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_collection_with_filter(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_with_filter_reordered(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_with_filter_reordered(System.Boolean)
  id: Include_collection_with_filter_reordered(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_collection_with_filter_reordered(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_collection_with_filter_reordered(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_collection_with_filter_reordered(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_collection_with_filter_reordered
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 1326
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_collection_with_filter_reordered(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_collection_with_filter_reordered(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_collection_with_filter_reordered(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_collection_with_filter_reordered(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_duplicate_collection(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_duplicate_collection(System.Boolean)
  id: Include_duplicate_collection(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_duplicate_collection(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_duplicate_collection(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_duplicate_collection(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_duplicate_collection
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 1361
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_duplicate_collection(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_duplicate_collection(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_duplicate_collection(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_duplicate_collection(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_duplicate_collection_result_operator(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_duplicate_collection_result_operator(System.Boolean)
  id: Include_duplicate_collection_result_operator(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_duplicate_collection_result_operator(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_duplicate_collection_result_operator(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_duplicate_collection_result_operator(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_duplicate_collection_result_operator
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 1422
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_duplicate_collection_result_operator(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_duplicate_collection_result_operator(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_duplicate_collection_result_operator(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_duplicate_collection_result_operator(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_duplicate_collection_result_operator2(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_duplicate_collection_result_operator2(System.Boolean)
  id: Include_duplicate_collection_result_operator2(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_duplicate_collection_result_operator2(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_duplicate_collection_result_operator2(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_duplicate_collection_result_operator2(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_duplicate_collection_result_operator2
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 1485
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_duplicate_collection_result_operator2(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_duplicate_collection_result_operator2(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_duplicate_collection_result_operator2(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_duplicate_collection_result_operator2(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_duplicate_reference(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_duplicate_reference(System.Boolean)
  id: Include_duplicate_reference(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_duplicate_reference(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_duplicate_reference(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_duplicate_reference(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_duplicate_reference
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 1545
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_duplicate_reference(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_duplicate_reference(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_duplicate_reference(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_duplicate_reference(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_duplicate_reference2(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_duplicate_reference2(System.Boolean)
  id: Include_duplicate_reference2(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_duplicate_reference2(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_duplicate_reference2(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_duplicate_reference2(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_duplicate_reference2
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 1608
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_duplicate_reference2(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_duplicate_reference2(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_duplicate_reference2(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_duplicate_reference2(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_duplicate_reference3(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_duplicate_reference3(System.Boolean)
  id: Include_duplicate_reference3(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_duplicate_reference3(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_duplicate_reference3(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_duplicate_reference3(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_duplicate_reference3
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 1668
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_duplicate_reference3(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_duplicate_reference3(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_duplicate_reference3(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_duplicate_reference3(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_with_client_filter(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_with_client_filter(System.Boolean)
  id: Include_collection_with_client_filter(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_collection_with_client_filter(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_collection_with_client_filter(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_collection_with_client_filter(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_collection_with_client_filter
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 1728
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_collection_with_client_filter(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_collection_with_client_filter(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_collection_with_client_filter(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_collection_with_client_filter(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_multi_level_reference_and_collection_predicate(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_multi_level_reference_and_collection_predicate(System.Boolean)
  id: Include_multi_level_reference_and_collection_predicate(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_multi_level_reference_and_collection_predicate(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_multi_level_reference_and_collection_predicate(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_multi_level_reference_and_collection_predicate(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_multi_level_reference_and_collection_predicate
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 1765
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_multi_level_reference_and_collection_predicate(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_multi_level_reference_and_collection_predicate(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_multi_level_reference_and_collection_predicate(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_multi_level_reference_and_collection_predicate(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_multi_level_collection_and_then_include_reference_predicate(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_multi_level_collection_and_then_include_reference_predicate(System.Boolean)
  id: Include_multi_level_collection_and_then_include_reference_predicate(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_multi_level_collection_and_then_include_reference_predicate(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_multi_level_collection_and_then_include_reference_predicate(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_multi_level_collection_and_then_include_reference_predicate(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_multi_level_collection_and_then_include_reference_predicate
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 1794
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_multi_level_collection_and_then_include_reference_predicate(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_multi_level_collection_and_then_include_reference_predicate(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_multi_level_collection_and_then_include_reference_predicate(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_multi_level_collection_and_then_include_reference_predicate(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_multiple_references(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_multiple_references(System.Boolean)
  id: Include_multiple_references(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_multiple_references(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_multiple_references(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_multiple_references(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_multiple_references
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 1824
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_multiple_references(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_multiple_references(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_multiple_references(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_multiple_references(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_multiple_references_and_collection_multi_level(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_multiple_references_and_collection_multi_level(System.Boolean)
  id: Include_multiple_references_and_collection_multi_level(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_multiple_references_and_collection_multi_level(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_multiple_references_and_collection_multi_level(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_multiple_references_and_collection_multi_level(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_multiple_references_and_collection_multi_level
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 1861
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_multiple_references_and_collection_multi_level(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_multiple_references_and_collection_multi_level(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_multiple_references_and_collection_multi_level(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_multiple_references_and_collection_multi_level(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_multiple_references_and_collection_multi_level_reverse(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_multiple_references_and_collection_multi_level_reverse(System.Boolean)
  id: Include_multiple_references_and_collection_multi_level_reverse(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_multiple_references_and_collection_multi_level_reverse(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_multiple_references_and_collection_multi_level_reverse(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_multiple_references_and_collection_multi_level_reverse(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_multiple_references_and_collection_multi_level_reverse
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 1896
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_multiple_references_and_collection_multi_level_reverse(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_multiple_references_and_collection_multi_level_reverse(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_multiple_references_and_collection_multi_level_reverse(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_multiple_references_and_collection_multi_level_reverse(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_multiple_references_multi_level(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_multiple_references_multi_level(System.Boolean)
  id: Include_multiple_references_multi_level(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_multiple_references_multi_level(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_multiple_references_multi_level(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_multiple_references_multi_level(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_multiple_references_multi_level
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 1931
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_multiple_references_multi_level(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_multiple_references_multi_level(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_multiple_references_multi_level(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_multiple_references_multi_level(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_multiple_references_multi_level_reverse(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_multiple_references_multi_level_reverse(System.Boolean)
  id: Include_multiple_references_multi_level_reverse(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_multiple_references_multi_level_reverse(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_multiple_references_multi_level_reverse(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_multiple_references_multi_level_reverse(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_multiple_references_multi_level_reverse
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 1965
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_multiple_references_multi_level_reverse(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_multiple_references_multi_level_reverse(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_multiple_references_multi_level_reverse(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_multiple_references_multi_level_reverse(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_reference(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_reference(System.Boolean)
  id: Include_reference(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_reference(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_reference(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_reference(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_reference
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 1999
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_reference(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_reference(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_reference(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_reference(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_reference_alias_generation(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_reference_alias_generation(System.Boolean)
  id: Include_reference_alias_generation(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_reference_alias_generation(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_reference_alias_generation(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_reference_alias_generation(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_reference_alias_generation
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 2033
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_reference_alias_generation(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_reference_alias_generation(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_reference_alias_generation(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_reference_alias_generation(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_reference_and_collection(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_reference_and_collection(System.Boolean)
  id: Include_reference_and_collection(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_reference_and_collection(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_reference_and_collection(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_reference_and_collection(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_reference_and_collection
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 2064
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_reference_and_collection(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_reference_and_collection(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_reference_and_collection(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_reference_and_collection(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_force_alias_uniquefication(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_force_alias_uniquefication(System.Boolean)
  id: Include_collection_force_alias_uniquefication(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_collection_force_alias_uniquefication(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_collection_force_alias_uniquefication(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_collection_force_alias_uniquefication(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_collection_force_alias_uniquefication
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 2097
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_collection_force_alias_uniquefication(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_collection_force_alias_uniquefication(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_collection_force_alias_uniquefication(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_collection_force_alias_uniquefication(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_reference_as_no_tracking(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_reference_as_no_tracking(System.Boolean)
  id: Include_reference_as_no_tracking(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_reference_as_no_tracking(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_reference_as_no_tracking(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_reference_as_no_tracking(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_reference_as_no_tracking
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 2131
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_reference_as_no_tracking(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_reference_as_no_tracking(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_reference_as_no_tracking(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_reference_as_no_tracking(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_reference_dependent_already_tracked(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_reference_dependent_already_tracked(System.Boolean)
  id: Include_reference_dependent_already_tracked(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_reference_dependent_already_tracked(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_reference_dependent_already_tracked(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_reference_dependent_already_tracked(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_reference_dependent_already_tracked
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 2166
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_reference_dependent_already_tracked(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_reference_dependent_already_tracked(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_reference_dependent_already_tracked(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_reference_dependent_already_tracked(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_reference_single_or_default_when_no_result(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_reference_single_or_default_when_no_result(System.Boolean)
  id: Include_reference_single_or_default_when_no_result(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_reference_single_or_default_when_no_result(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_reference_single_or_default_when_no_result(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_reference_single_or_default_when_no_result(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_reference_single_or_default_when_no_result
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 2206
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_reference_single_or_default_when_no_result(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_reference_single_or_default_when_no_result(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_reference_single_or_default_when_no_result(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_reference_single_or_default_when_no_result(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_reference_when_projection(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_reference_when_projection(System.Boolean)
  id: Include_reference_when_projection(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_reference_when_projection(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_reference_when_projection(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_reference_when_projection(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_reference_when_projection
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 2226
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_reference_when_projection(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_reference_when_projection(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_reference_when_projection(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_reference_when_projection(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_reference_when_entity_in_projection(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_reference_when_entity_in_projection(System.Boolean)
  id: Include_reference_when_entity_in_projection(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_reference_when_entity_in_projection(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_reference_when_entity_in_projection(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_reference_when_entity_in_projection(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_reference_when_entity_in_projection
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 2249
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_reference_when_entity_in_projection(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_reference_when_entity_in_projection(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_reference_when_entity_in_projection(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_reference_when_entity_in_projection(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_reference_with_filter(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_reference_with_filter(System.Boolean)
  id: Include_reference_with_filter(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_reference_with_filter(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_reference_with_filter(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_reference_with_filter(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_reference_with_filter
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 2283
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_reference_with_filter(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_reference_with_filter(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_reference_with_filter(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_reference_with_filter(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_reference_with_filter_reordered(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_reference_with_filter_reordered(System.Boolean)
  id: Include_reference_with_filter_reordered(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_reference_with_filter_reordered(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_reference_with_filter_reordered(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_reference_with_filter_reordered(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_reference_with_filter_reordered
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 2319
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_reference_with_filter_reordered(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_reference_with_filter_reordered(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_reference_with_filter_reordered(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_reference_with_filter_reordered(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_references_and_collection_multi_level(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_references_and_collection_multi_level(System.Boolean)
  id: Include_references_and_collection_multi_level(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_references_and_collection_multi_level(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_references_and_collection_multi_level(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_references_and_collection_multi_level(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_references_and_collection_multi_level
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 2355
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_references_and_collection_multi_level(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_references_and_collection_multi_level(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_references_and_collection_multi_level(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_references_and_collection_multi_level(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_then_include_collection(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_then_include_collection(System.Boolean)
  id: Include_collection_then_include_collection(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_collection_then_include_collection(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_collection_then_include_collection(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_collection_then_include_collection(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_collection_then_include_collection
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 2388
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_collection_then_include_collection(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_collection_then_include_collection(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_collection_then_include_collection(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_collection_then_include_collection(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_then_include_collection_then_include_reference(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_then_include_collection_then_include_reference(System.Boolean)
  id: Include_collection_then_include_collection_then_include_reference(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_collection_then_include_collection_then_include_reference(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_collection_then_include_collection_then_include_reference(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_collection_then_include_collection_then_include_reference(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_collection_then_include_collection_then_include_reference
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 2420
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_collection_then_include_collection_then_include_reference(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_collection_then_include_collection_then_include_reference(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_collection_then_include_collection_then_include_reference(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_collection_then_include_collection_then_include_reference(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_then_include_collection_predicate(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_collection_then_include_collection_predicate(System.Boolean)
  id: Include_collection_then_include_collection_predicate(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_collection_then_include_collection_predicate(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_collection_then_include_collection_predicate(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_collection_then_include_collection_predicate(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_collection_then_include_collection_predicate
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 2452
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_collection_then_include_collection_predicate(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_collection_then_include_collection_predicate(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_collection_then_include_collection_predicate(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_collection_then_include_collection_predicate(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_references_and_collection_multi_level_predicate(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_references_and_collection_multi_level_predicate(System.Boolean)
  id: Include_references_and_collection_multi_level_predicate(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_references_and_collection_multi_level_predicate(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_references_and_collection_multi_level_predicate(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_references_and_collection_multi_level_predicate(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_references_and_collection_multi_level_predicate
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 2481
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_references_and_collection_multi_level_predicate(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_references_and_collection_multi_level_predicate(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_references_and_collection_multi_level_predicate(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_references_and_collection_multi_level_predicate(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_references_multi_level(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_references_multi_level(System.Boolean)
  id: Include_references_multi_level(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_references_multi_level(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_references_multi_level(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_references_multi_level(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_references_multi_level
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 2516
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_references_multi_level(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_references_multi_level(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_references_multi_level(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_references_multi_level(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_multi_level_reference_then_include_collection_predicate(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_multi_level_reference_then_include_collection_predicate(System.Boolean)
  id: Include_multi_level_reference_then_include_collection_predicate(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_multi_level_reference_then_include_collection_predicate(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_multi_level_reference_then_include_collection_predicate(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_multi_level_reference_then_include_collection_predicate(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_multi_level_reference_then_include_collection_predicate
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 2548
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_multi_level_reference_then_include_collection_predicate(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_multi_level_reference_then_include_collection_predicate(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_multi_level_reference_then_include_collection_predicate(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_multi_level_reference_then_include_collection_predicate(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_multiple_references_then_include_collection_multi_level(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_multiple_references_then_include_collection_multi_level(System.Boolean)
  id: Include_multiple_references_then_include_collection_multi_level(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_multiple_references_then_include_collection_multi_level(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_multiple_references_then_include_collection_multi_level(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_multiple_references_then_include_collection_multi_level(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_multiple_references_then_include_collection_multi_level
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 2577
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_multiple_references_then_include_collection_multi_level(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_multiple_references_then_include_collection_multi_level(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_multiple_references_then_include_collection_multi_level(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_multiple_references_then_include_collection_multi_level(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_multiple_references_then_include_collection_multi_level_reverse(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_multiple_references_then_include_collection_multi_level_reverse(System.Boolean)
  id: Include_multiple_references_then_include_collection_multi_level_reverse(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_multiple_references_then_include_collection_multi_level_reverse(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_multiple_references_then_include_collection_multi_level_reverse(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_multiple_references_then_include_collection_multi_level_reverse(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_multiple_references_then_include_collection_multi_level_reverse
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 2612
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_multiple_references_then_include_collection_multi_level_reverse(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_multiple_references_then_include_collection_multi_level_reverse(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_multiple_references_then_include_collection_multi_level_reverse(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_multiple_references_then_include_collection_multi_level_reverse(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_multiple_references_then_include_multi_level(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_multiple_references_then_include_multi_level(System.Boolean)
  id: Include_multiple_references_then_include_multi_level(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_multiple_references_then_include_multi_level(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_multiple_references_then_include_multi_level(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_multiple_references_then_include_multi_level(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_multiple_references_then_include_multi_level
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 2647
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_multiple_references_then_include_multi_level(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_multiple_references_then_include_multi_level(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_multiple_references_then_include_multi_level(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_multiple_references_then_include_multi_level(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_multiple_references_then_include_multi_level_reverse(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_multiple_references_then_include_multi_level_reverse(System.Boolean)
  id: Include_multiple_references_then_include_multi_level_reverse(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_multiple_references_then_include_multi_level_reverse(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_multiple_references_then_include_multi_level_reverse(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_multiple_references_then_include_multi_level_reverse(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_multiple_references_then_include_multi_level_reverse
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 2681
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_multiple_references_then_include_multi_level_reverse(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_multiple_references_then_include_multi_level_reverse(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_multiple_references_then_include_multi_level_reverse(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_multiple_references_then_include_multi_level_reverse(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_references_then_include_collection_multi_level(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_references_then_include_collection_multi_level(System.Boolean)
  id: Include_references_then_include_collection_multi_level(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_references_then_include_collection_multi_level(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_references_then_include_collection_multi_level(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_references_then_include_collection_multi_level(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_references_then_include_collection_multi_level
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 2715
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_references_then_include_collection_multi_level(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_references_then_include_collection_multi_level(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_references_then_include_collection_multi_level(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_references_then_include_collection_multi_level(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_references_then_include_collection_multi_level_predicate(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_references_then_include_collection_multi_level_predicate(System.Boolean)
  id: Include_references_then_include_collection_multi_level_predicate(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_references_then_include_collection_multi_level_predicate(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_references_then_include_collection_multi_level_predicate(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_references_then_include_collection_multi_level_predicate(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_references_then_include_collection_multi_level_predicate
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 2748
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_references_then_include_collection_multi_level_predicate(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_references_then_include_collection_multi_level_predicate(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_references_then_include_collection_multi_level_predicate(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_references_then_include_collection_multi_level_predicate(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_references_then_include_multi_level(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_references_then_include_multi_level(System.Boolean)
  id: Include_references_then_include_multi_level(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_references_then_include_multi_level(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_references_then_include_multi_level(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_references_then_include_multi_level(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_references_then_include_multi_level
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 2783
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_references_then_include_multi_level(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_references_then_include_multi_level(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_references_then_include_multi_level(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_references_then_include_multi_level(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_with_complex_projection(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_with_complex_projection(System.Boolean)
  id: Include_with_complex_projection(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_with_complex_projection(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_with_complex_projection(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_with_complex_projection(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_with_complex_projection
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 2815
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_with_complex_projection(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_with_complex_projection(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_with_complex_projection(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_with_complex_projection(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_with_take(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_with_take(System.Boolean)
  id: Include_with_take(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_with_take(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_with_take(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_with_take(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_with_take
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 2846
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_with_take(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_with_take(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_with_take(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_with_take(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_with_skip(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1.Include_with_skip(System.Boolean)
  id: Include_with_skip(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase`1
  langs:
  - csharp
  - vb
  name: Include_with_skip(Boolean)
  nameWithType: IncludeTestBase<TFixture>.Include_with_skip(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase<TFixture>.Include_with_skip(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_with_skip
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/IncludeTestBase.cs
    startLine: 2880
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false})]

      [InlineData(new object[]{true})]

      public virtual void Include_with_skip(bool useString)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False})>

      <InlineData(New Object() {True})>

      Public Overridable Sub Include_with_skip(useString As Boolean)
    parameters:
    - id: useString
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: IncludeTestBase(Of TFixture).Include_with_skip(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.IncludeTestBase(Of TFixture).Include_with_skip(System.Boolean)
references:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests
  commentId: N:Microsoft.EntityFrameworkCore.Specification.Tests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Specification.Tests
  nameWithType: Microsoft.EntityFrameworkCore.Specification.Tests
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Xunit.IClassFixture{{TFixture}}
  commentId: T:Xunit.IClassFixture{`0}
  parent: Xunit
  definition: Xunit.IClassFixture`1
  name: IClassFixture<TFixture>
  nameWithType: IClassFixture<TFixture>
  fullName: Xunit.IClassFixture<TFixture>
  nameWithType.vb: IClassFixture(Of TFixture)
  fullname.vb: Xunit.IClassFixture(Of TFixture)
  name.vb: IClassFixture(Of TFixture)
  spec.csharp:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    nameWithType: IClassFixture
    fullName: Xunit.IClassFixture
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TFixture
    nameWithType: TFixture
    fullName: TFixture
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    nameWithType: IClassFixture
    fullName: Xunit.IClassFixture
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TFixture
    nameWithType: TFixture
    fullName: TFixture
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Xunit.IClassFixture`1
  commentId: T:Xunit.IClassFixture`1
  isExternal: true
  name: IClassFixture<TFixture>
  nameWithType: IClassFixture<TFixture>
  fullName: Xunit.IClassFixture<TFixture>
  nameWithType.vb: IClassFixture(Of TFixture)
  fullname.vb: Xunit.IClassFixture(Of TFixture)
  name.vb: IClassFixture(Of TFixture)
  spec.csharp:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    nameWithType: IClassFixture
    fullName: Xunit.IClassFixture
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TFixture
    nameWithType: TFixture
    fullName: TFixture
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    nameWithType: IClassFixture
    fullName: Xunit.IClassFixture
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TFixture
    nameWithType: TFixture
    fullName: TFixture
  - name: )
    nameWithType: )
    fullName: )
- uid: Xunit
  commentId: N:Xunit
  isExternal: false
  name: Xunit
  nameWithType: Xunit
  fullName: Xunit
- uid: '{TFixture}'
  commentId: '!:TFixture'
  definition: TFixture
  name: TFixture
  nameWithType: TFixture
  fullName: TFixture
- uid: TFixture
  isExternal: false
  name: TFixture
  nameWithType: TFixture
  fullName: TFixture
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.NorthwindContext
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.NorthwindContext
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind
  isExternal: false
  name: NorthwindContext
  nameWithType: NorthwindContext
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.NorthwindContext
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind
  commentId: N:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind
  nameWithType: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
