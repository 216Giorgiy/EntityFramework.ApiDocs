### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.PropertyEntrySqliteTest
  commentId: T:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.PropertyEntrySqliteTest
  id: PropertyEntrySqliteTest
  parent: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  children:
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.PropertyEntrySqliteTest.#ctor(Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.F1SqliteFixture)
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.PropertyEntrySqliteTest.Property_entry_original_value_is_set
  langs:
  - csharp
  - vb
  name: PropertyEntrySqliteTest
  nameWithType: PropertyEntrySqliteTest
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.PropertyEntrySqliteTest
  type: Class
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/PropertyEntrySqliteTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: PropertyEntrySqliteTest
    path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/PropertyEntrySqliteTest.cs
    startLine: 9
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  syntax:
    content: 'public class PropertyEntrySqliteTest : PropertyEntryTestBase<SqliteTestStore, F1SqliteFixture>, IClassFixture<F1SqliteFixture>, IDisposable'
    content.vb: >-
      Public Class PropertyEntrySqliteTest
          Inherits PropertyEntryTestBase(Of SqliteTestStore, F1SqliteFixture)
          Implements IClassFixture(Of F1SqliteFixture), IDisposable
  inheritance:
  - System.Object
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase{Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore,Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.F1SqliteFixture}
  implements:
  - Xunit.IClassFixture{Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.F1SqliteFixture}
  - System.IDisposable
  inheritedMembers:
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase{Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore,Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.F1SqliteFixture}.Property_entry_original_value_is_set
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase{Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore,Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.F1SqliteFixture}.CreateF1Context
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase{Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore,Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.F1SqliteFixture}.Fixture
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase{Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore,Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.F1SqliteFixture}.TestStore
  - Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase{Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore,Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.F1SqliteFixture}.Dispose
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.PropertyEntrySqliteTest.#ctor(Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.F1SqliteFixture)
  commentId: M:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.PropertyEntrySqliteTest.#ctor(Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.F1SqliteFixture)
  id: '#ctor(Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.F1SqliteFixture)'
  parent: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.PropertyEntrySqliteTest
  langs:
  - csharp
  - vb
  name: PropertyEntrySqliteTest(F1SqliteFixture)
  nameWithType: PropertyEntrySqliteTest.PropertyEntrySqliteTest(F1SqliteFixture)
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.PropertyEntrySqliteTest.PropertyEntrySqliteTest(Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.F1SqliteFixture)
  type: Constructor
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/PropertyEntrySqliteTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/PropertyEntrySqliteTest.cs
    startLine: 11
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  syntax:
    content: public PropertyEntrySqliteTest(F1SqliteFixture fixture)
    content.vb: Public Sub New(fixture As F1SqliteFixture)
    parameters:
    - id: fixture
      type: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.F1SqliteFixture
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.PropertyEntrySqliteTest.Property_entry_original_value_is_set
  commentId: M:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.PropertyEntrySqliteTest.Property_entry_original_value_is_set
  id: Property_entry_original_value_is_set
  parent: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.PropertyEntrySqliteTest
  langs:
  - csharp
  - vb
  name: Property_entry_original_value_is_set()
  nameWithType: PropertyEntrySqliteTest.Property_entry_original_value_is_set()
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.PropertyEntrySqliteTest.Property_entry_original_value_is_set()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/PropertyEntrySqliteTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Property_entry_original_value_is_set
    path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/PropertyEntrySqliteTest.cs
    startLine: 16
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  syntax:
    content: public override void Property_entry_original_value_is_set()
    content.vb: Public Overrides Sub Property_entry_original_value_is_set
  overridden: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase{Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore,Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.F1SqliteFixture}.Property_entry_original_value_is_set
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  commentId: N:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  nameWithType: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase{Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore,Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.F1SqliteFixture}
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase{Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore,Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.F1SqliteFixture}
  parent: Microsoft.EntityFrameworkCore.Specification.Tests
  definition: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase`2
  name: PropertyEntryTestBase<SqliteTestStore, F1SqliteFixture>
  nameWithType: PropertyEntryTestBase<SqliteTestStore, F1SqliteFixture>
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase<Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore, Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.F1SqliteFixture>
  nameWithType.vb: PropertyEntryTestBase(Of SqliteTestStore, F1SqliteFixture)
  fullname.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase(Of Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore, Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.F1SqliteFixture)
  name.vb: PropertyEntryTestBase(Of SqliteTestStore, F1SqliteFixture)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase`2
    name: PropertyEntryTestBase
    nameWithType: PropertyEntryTestBase
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore
    name: SqliteTestStore
    nameWithType: SqliteTestStore
    fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.F1SqliteFixture
    name: F1SqliteFixture
    nameWithType: F1SqliteFixture
    fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.F1SqliteFixture
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase`2
    name: PropertyEntryTestBase
    nameWithType: PropertyEntryTestBase
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore
    name: SqliteTestStore
    nameWithType: SqliteTestStore
    fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.F1SqliteFixture
    name: F1SqliteFixture
    nameWithType: F1SqliteFixture
    fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.F1SqliteFixture
  - name: )
    nameWithType: )
    fullName: )
- uid: Xunit.IClassFixture{Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.F1SqliteFixture}
  commentId: T:Xunit.IClassFixture{Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.F1SqliteFixture}
  parent: Xunit
  definition: Xunit.IClassFixture`1
  name: IClassFixture<F1SqliteFixture>
  nameWithType: IClassFixture<F1SqliteFixture>
  fullName: Xunit.IClassFixture<Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.F1SqliteFixture>
  nameWithType.vb: IClassFixture(Of F1SqliteFixture)
  fullname.vb: Xunit.IClassFixture(Of Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.F1SqliteFixture)
  name.vb: IClassFixture(Of F1SqliteFixture)
  spec.csharp:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    nameWithType: IClassFixture
    fullName: Xunit.IClassFixture
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.F1SqliteFixture
    name: F1SqliteFixture
    nameWithType: F1SqliteFixture
    fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.F1SqliteFixture
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    nameWithType: IClassFixture
    fullName: Xunit.IClassFixture
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.F1SqliteFixture
    name: F1SqliteFixture
    nameWithType: F1SqliteFixture
    fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.F1SqliteFixture
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase{Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore,Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.F1SqliteFixture}.Property_entry_original_value_is_set
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase{Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore,Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.F1SqliteFixture}.Property_entry_original_value_is_set
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase{Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore,Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.F1SqliteFixture}
  definition: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase`2.Property_entry_original_value_is_set
  name: Property_entry_original_value_is_set()
  nameWithType: PropertyEntryTestBase<SqliteTestStore, F1SqliteFixture>.Property_entry_original_value_is_set()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase<Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore, Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.F1SqliteFixture>.Property_entry_original_value_is_set()
  nameWithType.vb: PropertyEntryTestBase(Of SqliteTestStore, F1SqliteFixture).Property_entry_original_value_is_set()
  fullname.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase(Of Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore, Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.F1SqliteFixture).Property_entry_original_value_is_set()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase`2.Property_entry_original_value_is_set
    name: Property_entry_original_value_is_set
    nameWithType: PropertyEntryTestBase<SqliteTestStore, F1SqliteFixture>.Property_entry_original_value_is_set
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase<Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore, Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.F1SqliteFixture>.Property_entry_original_value_is_set
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase`2.Property_entry_original_value_is_set
    name: Property_entry_original_value_is_set
    nameWithType: PropertyEntryTestBase(Of SqliteTestStore, F1SqliteFixture).Property_entry_original_value_is_set
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase(Of Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore, Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.F1SqliteFixture).Property_entry_original_value_is_set
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase{Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore,Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.F1SqliteFixture}.CreateF1Context
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase{Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore,Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.F1SqliteFixture}.CreateF1Context
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase{Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore,Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.F1SqliteFixture}
  definition: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase`2.CreateF1Context
  name: CreateF1Context()
  nameWithType: PropertyEntryTestBase<SqliteTestStore, F1SqliteFixture>.CreateF1Context()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase<Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore, Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.F1SqliteFixture>.CreateF1Context()
  nameWithType.vb: PropertyEntryTestBase(Of SqliteTestStore, F1SqliteFixture).CreateF1Context()
  fullname.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase(Of Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore, Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.F1SqliteFixture).CreateF1Context()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase`2.CreateF1Context
    name: CreateF1Context
    nameWithType: PropertyEntryTestBase<SqliteTestStore, F1SqliteFixture>.CreateF1Context
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase<Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore, Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.F1SqliteFixture>.CreateF1Context
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase`2.CreateF1Context
    name: CreateF1Context
    nameWithType: PropertyEntryTestBase(Of SqliteTestStore, F1SqliteFixture).CreateF1Context
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase(Of Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore, Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.F1SqliteFixture).CreateF1Context
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase{Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore,Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.F1SqliteFixture}.Fixture
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase{Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore,Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.F1SqliteFixture}.Fixture
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase{Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore,Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.F1SqliteFixture}
  definition: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase`2.Fixture
  name: Fixture
  nameWithType: PropertyEntryTestBase<SqliteTestStore, F1SqliteFixture>.Fixture
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase<Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore, Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.F1SqliteFixture>.Fixture
  nameWithType.vb: PropertyEntryTestBase(Of SqliteTestStore, F1SqliteFixture).Fixture
  fullname.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase(Of Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore, Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.F1SqliteFixture).Fixture
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase{Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore,Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.F1SqliteFixture}.TestStore
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase{Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore,Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.F1SqliteFixture}.TestStore
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase{Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore,Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.F1SqliteFixture}
  definition: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase`2.TestStore
  name: TestStore
  nameWithType: PropertyEntryTestBase<SqliteTestStore, F1SqliteFixture>.TestStore
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase<Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore, Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.F1SqliteFixture>.TestStore
  nameWithType.vb: PropertyEntryTestBase(Of SqliteTestStore, F1SqliteFixture).TestStore
  fullname.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase(Of Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore, Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.F1SqliteFixture).TestStore
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase{Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore,Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.F1SqliteFixture}.Dispose
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase{Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore,Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.F1SqliteFixture}.Dispose
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase{Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore,Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.F1SqliteFixture}
  definition: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase`2.Dispose
  name: Dispose()
  nameWithType: PropertyEntryTestBase<SqliteTestStore, F1SqliteFixture>.Dispose()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase<Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore, Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.F1SqliteFixture>.Dispose()
  nameWithType.vb: PropertyEntryTestBase(Of SqliteTestStore, F1SqliteFixture).Dispose()
  fullname.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase(Of Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore, Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.F1SqliteFixture).Dispose()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase`2.Dispose
    name: Dispose
    nameWithType: PropertyEntryTestBase<SqliteTestStore, F1SqliteFixture>.Dispose
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase<Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore, Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.F1SqliteFixture>.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase`2.Dispose
    name: Dispose
    nameWithType: PropertyEntryTestBase(Of SqliteTestStore, F1SqliteFixture).Dispose
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase(Of Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore, Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.F1SqliteFixture).Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase`2
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase`2
  isExternal: false
  name: PropertyEntryTestBase<TTestStore, TFixture>
  nameWithType: PropertyEntryTestBase<TTestStore, TFixture>
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase<TTestStore, TFixture>
  nameWithType.vb: PropertyEntryTestBase(Of TTestStore, TFixture)
  fullname.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase(Of TTestStore, TFixture)
  name.vb: PropertyEntryTestBase(Of TTestStore, TFixture)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase`2
    name: PropertyEntryTestBase
    nameWithType: PropertyEntryTestBase
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TTestStore
    nameWithType: TTestStore
    fullName: TTestStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFixture
    nameWithType: TFixture
    fullName: TFixture
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase`2
    name: PropertyEntryTestBase
    nameWithType: PropertyEntryTestBase
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TTestStore
    nameWithType: TTestStore
    fullName: TTestStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFixture
    nameWithType: TFixture
    fullName: TFixture
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests
  commentId: N:Microsoft.EntityFrameworkCore.Specification.Tests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Specification.Tests
  nameWithType: Microsoft.EntityFrameworkCore.Specification.Tests
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests
- uid: Xunit.IClassFixture`1
  commentId: T:Xunit.IClassFixture`1
  isExternal: true
  name: IClassFixture<TFixture>
  nameWithType: IClassFixture<TFixture>
  fullName: Xunit.IClassFixture<TFixture>
  nameWithType.vb: IClassFixture(Of TFixture)
  fullname.vb: Xunit.IClassFixture(Of TFixture)
  name.vb: IClassFixture(Of TFixture)
  spec.csharp:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    nameWithType: IClassFixture
    fullName: Xunit.IClassFixture
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TFixture
    nameWithType: TFixture
    fullName: TFixture
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    nameWithType: IClassFixture
    fullName: Xunit.IClassFixture
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TFixture
    nameWithType: TFixture
    fullName: TFixture
  - name: )
    nameWithType: )
    fullName: )
- uid: Xunit
  commentId: N:Xunit
  isExternal: false
  name: Xunit
  nameWithType: Xunit
  fullName: Xunit
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase`2.Property_entry_original_value_is_set
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase`2.Property_entry_original_value_is_set
  isExternal: false
  name: Property_entry_original_value_is_set()
  nameWithType: PropertyEntryTestBase<TTestStore, TFixture>.Property_entry_original_value_is_set()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase<TTestStore, TFixture>.Property_entry_original_value_is_set()
  nameWithType.vb: PropertyEntryTestBase(Of TTestStore, TFixture).Property_entry_original_value_is_set()
  fullname.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase(Of TTestStore, TFixture).Property_entry_original_value_is_set()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase`2.Property_entry_original_value_is_set
    name: Property_entry_original_value_is_set
    nameWithType: PropertyEntryTestBase<TTestStore, TFixture>.Property_entry_original_value_is_set
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase<TTestStore, TFixture>.Property_entry_original_value_is_set
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase`2.Property_entry_original_value_is_set
    name: Property_entry_original_value_is_set
    nameWithType: PropertyEntryTestBase(Of TTestStore, TFixture).Property_entry_original_value_is_set
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase(Of TTestStore, TFixture).Property_entry_original_value_is_set
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase`2.CreateF1Context
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase`2.CreateF1Context
  isExternal: false
  name: CreateF1Context()
  nameWithType: PropertyEntryTestBase<TTestStore, TFixture>.CreateF1Context()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase<TTestStore, TFixture>.CreateF1Context()
  nameWithType.vb: PropertyEntryTestBase(Of TTestStore, TFixture).CreateF1Context()
  fullname.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase(Of TTestStore, TFixture).CreateF1Context()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase`2.CreateF1Context
    name: CreateF1Context
    nameWithType: PropertyEntryTestBase<TTestStore, TFixture>.CreateF1Context
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase<TTestStore, TFixture>.CreateF1Context
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase`2.CreateF1Context
    name: CreateF1Context
    nameWithType: PropertyEntryTestBase(Of TTestStore, TFixture).CreateF1Context
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase(Of TTestStore, TFixture).CreateF1Context
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase`2.Fixture
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase`2.Fixture
  isExternal: false
  name: Fixture
  nameWithType: PropertyEntryTestBase<TTestStore, TFixture>.Fixture
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase<TTestStore, TFixture>.Fixture
  nameWithType.vb: PropertyEntryTestBase(Of TTestStore, TFixture).Fixture
  fullname.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase(Of TTestStore, TFixture).Fixture
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase`2.TestStore
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase`2.TestStore
  isExternal: false
  name: TestStore
  nameWithType: PropertyEntryTestBase<TTestStore, TFixture>.TestStore
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase<TTestStore, TFixture>.TestStore
  nameWithType.vb: PropertyEntryTestBase(Of TTestStore, TFixture).TestStore
  fullname.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase(Of TTestStore, TFixture).TestStore
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase`2.Dispose
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase`2.Dispose
  isExternal: false
  name: Dispose()
  nameWithType: PropertyEntryTestBase<TTestStore, TFixture>.Dispose()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase<TTestStore, TFixture>.Dispose()
  nameWithType.vb: PropertyEntryTestBase(Of TTestStore, TFixture).Dispose()
  fullname.vb: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase(Of TTestStore, TFixture).Dispose()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase`2.Dispose
    name: Dispose
    nameWithType: PropertyEntryTestBase<TTestStore, TFixture>.Dispose
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase<TTestStore, TFixture>.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase`2.Dispose
    name: Dispose
    nameWithType: PropertyEntryTestBase(Of TTestStore, TFixture).Dispose
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.PropertyEntryTestBase(Of TTestStore, TFixture).Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.F1SqliteFixture
  commentId: T:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.F1SqliteFixture
  parent: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  isExternal: false
  name: F1SqliteFixture
  nameWithType: F1SqliteFixture
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.F1SqliteFixture
