### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder`2
  commentId: T:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder`2
  id: ModelBuilderTest.TestReferenceCollectionBuilder`2
  parent: Microsoft.EntityFrameworkCore.Tests
  children:
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder`2.HasAnnotation(System.String,System.Object)
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder`2.HasForeignKey(System.Linq.Expressions.Expression{System.Func{`1,System.Object}})
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder`2.HasForeignKey(System.String[])
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder`2.HasPrincipalKey(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder`2.HasPrincipalKey(System.String[])
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder`2.IsRequired(System.Boolean)
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder`2.Metadata
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder`2.OnDelete(Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior)
  langs:
  - csharp
  - vb
  name: ModelBuilderTest.TestReferenceCollectionBuilder<TEntity, TRelatedEntity>
  nameWithType: ModelBuilderTest.TestReferenceCollectionBuilder<TEntity, TRelatedEntity>
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder<TEntity, TRelatedEntity>
  type: Class
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: TestReferenceCollectionBuilder
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
    startLine: 257
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: >-
      public abstract class TestReferenceCollectionBuilder<TEntity, TRelatedEntity>
          where TEntity : class where TRelatedEntity : class
    content.vb: Public MustInherit Class TestReferenceCollectionBuilder(Of TEntity As Class, TRelatedEntity As Class)
    typeParameters:
    - id: TEntity
    - id: TRelatedEntity
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder`2.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  nameWithType.vb: ModelBuilderTest.TestReferenceCollectionBuilder(Of TEntity, TRelatedEntity)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder(Of TEntity, TRelatedEntity)
  name.vb: ModelBuilderTest.TestReferenceCollectionBuilder(Of TEntity, TRelatedEntity)
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder`2.Metadata
  commentId: P:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder`2.Metadata
  id: Metadata
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder`2
  langs:
  - csharp
  - vb
  name: Metadata
  nameWithType: ModelBuilderTest.TestReferenceCollectionBuilder<TEntity, TRelatedEntity>.Metadata
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder<TEntity, TRelatedEntity>.Metadata
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Metadata
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
    startLine: 261
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: public abstract IMutableForeignKey Metadata { get; }
    content.vb: Public MustOverride ReadOnly Property Metadata As IMutableForeignKey
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey
  nameWithType.vb: ModelBuilderTest.TestReferenceCollectionBuilder(Of TEntity, TRelatedEntity).Metadata
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
  fullName.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder(Of TEntity, TRelatedEntity).Metadata
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder`2.HasForeignKey(System.Linq.Expressions.Expression{System.Func{`1,System.Object}})
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder`2.HasForeignKey(System.Linq.Expressions.Expression{System.Func{`1,System.Object}})
  id: HasForeignKey(System.Linq.Expressions.Expression{System.Func{`1,System.Object}})
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder`2
  langs:
  - csharp
  - vb
  name: HasForeignKey(Expression<Func<TRelatedEntity, Object>>)
  nameWithType: ModelBuilderTest.TestReferenceCollectionBuilder<TEntity, TRelatedEntity>.HasForeignKey(Expression<Func<TRelatedEntity, Object>>)
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder<TEntity, TRelatedEntity>.HasForeignKey(System.Linq.Expressions.Expression<System.Func<TRelatedEntity, System.Object>>)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: HasForeignKey
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
    startLine: 263
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: public abstract ModelBuilderTest.TestReferenceCollectionBuilder<TEntity, TRelatedEntity> HasForeignKey(Expression<Func<TRelatedEntity, object>> foreignKeyExpression)
    content.vb: Public MustOverride Function HasForeignKey(foreignKeyExpression As Expression(Of Func(Of TRelatedEntity, Object))) As ModelBuilderTest.TestReferenceCollectionBuilder(Of TEntity, TRelatedEntity)
    parameters:
    - id: foreignKeyExpression
      type: System.Linq.Expressions.Expression{System.Func{{TRelatedEntity},System.Object}}
    return:
      type: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder`2
  nameWithType.vb: ModelBuilderTest.TestReferenceCollectionBuilder(Of TEntity, TRelatedEntity).HasForeignKey(Expression(Of Func(Of TRelatedEntity, Object)))
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder(Of TEntity, TRelatedEntity).HasForeignKey(System.Linq.Expressions.Expression(Of System.Func(Of TRelatedEntity, System.Object)))
  name.vb: HasForeignKey(Expression(Of Func(Of TRelatedEntity, Object)))
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder`2.HasPrincipalKey(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder`2.HasPrincipalKey(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  id: HasPrincipalKey(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder`2
  langs:
  - csharp
  - vb
  name: HasPrincipalKey(Expression<Func<TEntity, Object>>)
  nameWithType: ModelBuilderTest.TestReferenceCollectionBuilder<TEntity, TRelatedEntity>.HasPrincipalKey(Expression<Func<TEntity, Object>>)
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder<TEntity, TRelatedEntity>.HasPrincipalKey(System.Linq.Expressions.Expression<System.Func<TEntity, System.Object>>)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: HasPrincipalKey
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
    startLine: 266
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: public abstract ModelBuilderTest.TestReferenceCollectionBuilder<TEntity, TRelatedEntity> HasPrincipalKey(Expression<Func<TEntity, object>> keyExpression)
    content.vb: Public MustOverride Function HasPrincipalKey(keyExpression As Expression(Of Func(Of TEntity, Object))) As ModelBuilderTest.TestReferenceCollectionBuilder(Of TEntity, TRelatedEntity)
    parameters:
    - id: keyExpression
      type: System.Linq.Expressions.Expression{System.Func{{TEntity},System.Object}}
    return:
      type: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder`2
  nameWithType.vb: ModelBuilderTest.TestReferenceCollectionBuilder(Of TEntity, TRelatedEntity).HasPrincipalKey(Expression(Of Func(Of TEntity, Object)))
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder(Of TEntity, TRelatedEntity).HasPrincipalKey(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, System.Object)))
  name.vb: HasPrincipalKey(Expression(Of Func(Of TEntity, Object)))
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder`2.HasForeignKey(System.String[])
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder`2.HasForeignKey(System.String[])
  id: HasForeignKey(System.String[])
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder`2
  langs:
  - csharp
  - vb
  name: HasForeignKey(String[])
  nameWithType: ModelBuilderTest.TestReferenceCollectionBuilder<TEntity, TRelatedEntity>.HasForeignKey(String[])
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder<TEntity, TRelatedEntity>.HasForeignKey(System.String[])
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: HasForeignKey
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
    startLine: 269
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: public abstract ModelBuilderTest.TestReferenceCollectionBuilder<TEntity, TRelatedEntity> HasForeignKey(params string[] foreignKeyPropertyNames)
    content.vb: Public MustOverride Function HasForeignKey(ParamArray foreignKeyPropertyNames As String()) As ModelBuilderTest.TestReferenceCollectionBuilder(Of TEntity, TRelatedEntity)
    parameters:
    - id: foreignKeyPropertyNames
      type: System.String[]
    return:
      type: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder`2
  nameWithType.vb: ModelBuilderTest.TestReferenceCollectionBuilder(Of TEntity, TRelatedEntity).HasForeignKey(String())
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder(Of TEntity, TRelatedEntity).HasForeignKey(System.String())
  name.vb: HasForeignKey(String())
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder`2.HasPrincipalKey(System.String[])
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder`2.HasPrincipalKey(System.String[])
  id: HasPrincipalKey(System.String[])
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder`2
  langs:
  - csharp
  - vb
  name: HasPrincipalKey(String[])
  nameWithType: ModelBuilderTest.TestReferenceCollectionBuilder<TEntity, TRelatedEntity>.HasPrincipalKey(String[])
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder<TEntity, TRelatedEntity>.HasPrincipalKey(System.String[])
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: HasPrincipalKey
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
    startLine: 272
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: public abstract ModelBuilderTest.TestReferenceCollectionBuilder<TEntity, TRelatedEntity> HasPrincipalKey(params string[] keyPropertyNames)
    content.vb: Public MustOverride Function HasPrincipalKey(ParamArray keyPropertyNames As String()) As ModelBuilderTest.TestReferenceCollectionBuilder(Of TEntity, TRelatedEntity)
    parameters:
    - id: keyPropertyNames
      type: System.String[]
    return:
      type: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder`2
  nameWithType.vb: ModelBuilderTest.TestReferenceCollectionBuilder(Of TEntity, TRelatedEntity).HasPrincipalKey(String())
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder(Of TEntity, TRelatedEntity).HasPrincipalKey(System.String())
  name.vb: HasPrincipalKey(String())
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder`2.HasAnnotation(System.String,System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder`2.HasAnnotation(System.String,System.Object)
  id: HasAnnotation(System.String,System.Object)
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder`2
  langs:
  - csharp
  - vb
  name: HasAnnotation(String, Object)
  nameWithType: ModelBuilderTest.TestReferenceCollectionBuilder<TEntity, TRelatedEntity>.HasAnnotation(String, Object)
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder<TEntity, TRelatedEntity>.HasAnnotation(System.String, System.Object)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: HasAnnotation
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
    startLine: 275
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: public abstract ModelBuilderTest.TestReferenceCollectionBuilder<TEntity, TRelatedEntity> HasAnnotation(string annotation, object value)
    content.vb: Public MustOverride Function HasAnnotation(annotation As String, value As Object) As ModelBuilderTest.TestReferenceCollectionBuilder(Of TEntity, TRelatedEntity)
    parameters:
    - id: annotation
      type: System.String
    - id: value
      type: System.Object
    return:
      type: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder`2
  nameWithType.vb: ModelBuilderTest.TestReferenceCollectionBuilder(Of TEntity, TRelatedEntity).HasAnnotation(String, Object)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder(Of TEntity, TRelatedEntity).HasAnnotation(System.String, System.Object)
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder`2.IsRequired(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder`2.IsRequired(System.Boolean)
  id: IsRequired(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder`2
  langs:
  - csharp
  - vb
  name: IsRequired(Boolean)
  nameWithType: ModelBuilderTest.TestReferenceCollectionBuilder<TEntity, TRelatedEntity>.IsRequired(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder<TEntity, TRelatedEntity>.IsRequired(System.Boolean)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: IsRequired
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
    startLine: 278
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: public abstract ModelBuilderTest.TestReferenceCollectionBuilder<TEntity, TRelatedEntity> IsRequired(bool isRequired = true)
    content.vb: Public MustOverride Function IsRequired(isRequired As Boolean = True) As ModelBuilderTest.TestReferenceCollectionBuilder(Of TEntity, TRelatedEntity)
    parameters:
    - id: isRequired
      type: System.Boolean
    return:
      type: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder`2
  nameWithType.vb: ModelBuilderTest.TestReferenceCollectionBuilder(Of TEntity, TRelatedEntity).IsRequired(Boolean)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder(Of TEntity, TRelatedEntity).IsRequired(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder`2.OnDelete(Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior)
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder`2.OnDelete(Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior)
  id: OnDelete(Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior)
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder`2
  langs:
  - csharp
  - vb
  name: OnDelete(DeleteBehavior)
  nameWithType: ModelBuilderTest.TestReferenceCollectionBuilder<TEntity, TRelatedEntity>.OnDelete(DeleteBehavior)
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder<TEntity, TRelatedEntity>.OnDelete(Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: OnDelete
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
    startLine: 280
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: public abstract ModelBuilderTest.TestReferenceCollectionBuilder<TEntity, TRelatedEntity> OnDelete(DeleteBehavior deleteBehavior)
    content.vb: Public MustOverride Function OnDelete(deleteBehavior As DeleteBehavior) As ModelBuilderTest.TestReferenceCollectionBuilder(Of TEntity, TRelatedEntity)
    parameters:
    - id: deleteBehavior
      type: Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior
    return:
      type: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder`2
  nameWithType.vb: ModelBuilderTest.TestReferenceCollectionBuilder(Of TEntity, TRelatedEntity).OnDelete(DeleteBehavior)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder(Of TEntity, TRelatedEntity).OnDelete(Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior)
references:
- uid: Microsoft.EntityFrameworkCore.Tests
  commentId: N:Microsoft.EntityFrameworkCore.Tests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Tests
  nameWithType: Microsoft.EntityFrameworkCore.Tests
  fullName: Microsoft.EntityFrameworkCore.Tests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder`2.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<ModelBuilderTest.TestReferenceCollectionBuilder<TEntity, TRelatedEntity>, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<ModelBuilderTest.TestReferenceCollectionBuilder<TEntity, TRelatedEntity>, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder<TEntity, TRelatedEntity>, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of ModelBuilderTest.TestReferenceCollectionBuilder(Of TEntity, TRelatedEntity), TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder(Of TEntity, TRelatedEntity), TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of ModelBuilderTest.TestReferenceCollectionBuilder(Of TEntity, TRelatedEntity), TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<ModelBuilderTest.TestReferenceCollectionBuilder<TEntity, TRelatedEntity>, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<ModelBuilderTest.TestReferenceCollectionBuilder<TEntity, TRelatedEntity>, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder<TEntity, TRelatedEntity>, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of ModelBuilderTest.TestReferenceCollectionBuilder(Of TEntity, TRelatedEntity), TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of ModelBuilderTest.TestReferenceCollectionBuilder(Of TEntity, TRelatedEntity), TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder(Of TEntity, TRelatedEntity), TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IMutableForeignKey
  nameWithType: IMutableForeignKey
  fullName: Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: System.Linq.Expressions.Expression{System.Func{{TRelatedEntity},System.Object}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{`1,System.Object}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  name: Expression<Func<TRelatedEntity, Object>>
  nameWithType: Expression<Func<TRelatedEntity, Object>>
  fullName: System.Linq.Expressions.Expression<System.Func<TRelatedEntity, System.Object>>
  nameWithType.vb: Expression(Of Func(Of TRelatedEntity, Object))
  fullname.vb: System.Linq.Expressions.Expression(Of System.Func(Of TRelatedEntity, System.Object))
  name.vb: Expression(Of Func(Of TRelatedEntity, Object))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRelatedEntity
    nameWithType: TRelatedEntity
    fullName: TRelatedEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRelatedEntity
    nameWithType: TRelatedEntity
    fullName: TRelatedEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder`2
  commentId: T:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder`2
  parent: Microsoft.EntityFrameworkCore.Tests
  isExternal: false
  name: ModelBuilderTest.TestReferenceCollectionBuilder<TEntity, TRelatedEntity>
  nameWithType: ModelBuilderTest.TestReferenceCollectionBuilder<TEntity, TRelatedEntity>
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder<TEntity, TRelatedEntity>
  nameWithType.vb: ModelBuilderTest.TestReferenceCollectionBuilder(Of TEntity, TRelatedEntity)
  fullname.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder(Of TEntity, TRelatedEntity)
  name.vb: ModelBuilderTest.TestReferenceCollectionBuilder(Of TEntity, TRelatedEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder`2
    name: ModelBuilderTest.TestReferenceCollectionBuilder
    nameWithType: ModelBuilderTest.TestReferenceCollectionBuilder
    fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRelatedEntity
    nameWithType: TRelatedEntity
    fullName: TRelatedEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder`2
    name: ModelBuilderTest.TestReferenceCollectionBuilder
    nameWithType: ModelBuilderTest.TestReferenceCollectionBuilder
    fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRelatedEntity
    nameWithType: TRelatedEntity
    fullName: TRelatedEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.Expression`1
  commentId: T:System.Linq.Expressions.Expression`1
  isExternal: true
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
  nameWithType.vb: Expression(Of TDelegate)
  fullname.vb: System.Linq.Expressions.Expression(Of TDelegate)
  name.vb: Expression(Of TDelegate)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TDelegate
    nameWithType: TDelegate
    fullName: TDelegate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDelegate
    nameWithType: TDelegate
    fullName: TDelegate
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: false
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
- uid: System.Linq.Expressions.Expression{System.Func{{TEntity},System.Object}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{`0,System.Object}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  name: Expression<Func<TEntity, Object>>
  nameWithType: Expression<Func<TEntity, Object>>
  fullName: System.Linq.Expressions.Expression<System.Func<TEntity, System.Object>>
  nameWithType.vb: Expression(Of Func(Of TEntity, Object))
  fullname.vb: System.Linq.Expressions.Expression(Of System.Func(Of TEntity, System.Object))
  name.vb: Expression(Of Func(Of TEntity, Object))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String[]
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullname.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: DeleteBehavior
  nameWithType: DeleteBehavior
  fullName: Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior
