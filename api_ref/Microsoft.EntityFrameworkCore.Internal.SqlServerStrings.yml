### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerStrings
  commentId: T:Microsoft.EntityFrameworkCore.Internal.SqlServerStrings
  id: SqlServerStrings
  parent: Microsoft.EntityFrameworkCore.Internal
  children:
  - Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.AlterIdentityColumn
  - Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.AlterMemoryOptimizedTable
  - Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.IdentityBadType(System.Object,System.Object,System.Object)
  - Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.IndexTableRequired
  - Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.SequenceBadType(System.Object,System.Object,System.Object)
  - Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.TransientExceptionDetected
  - Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.UnqualifiedDataType(System.Object)
  langs:
  - csharp
  - vb
  name: SqlServerStrings
  nameWithType: SqlServerStrings
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerStrings
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer/Properties/SqlServerStrings.Designer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: SqlServerStrings
    path: src/Microsoft.EntityFrameworkCore.SqlServer/Properties/SqlServerStrings.Designer.cs
    startLine: 13
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public static class SqlServerStrings
    content.vb: Public Module SqlServerStrings
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.IdentityBadType(System.Object,System.Object,System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.IdentityBadType(System.Object,System.Object,System.Object)
  id: IdentityBadType(System.Object,System.Object,System.Object)
  parent: Microsoft.EntityFrameworkCore.Internal.SqlServerStrings
  langs:
  - csharp
  - vb
  name: IdentityBadType(Object, Object, Object)
  nameWithType: SqlServerStrings.IdentityBadType(Object, Object, Object)
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.IdentityBadType(System.Object, System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer/Properties/SqlServerStrings.Designer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: IdentityBadType
    path: src/Microsoft.EntityFrameworkCore.SqlServer/Properties/SqlServerStrings.Designer.cs
    startLine: 21
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\nIdentity value generation cannot be used for the property '{property}' on entity type '{entityType}' because the property type is '{propertyType}'. Identity value generation can only be used with signed integer properties.\n"
  example: []
  syntax:
    content: public static string IdentityBadType(object property, object entityType, object propertyType)
    content.vb: Public Shared Function IdentityBadType(property As Object, entityType As Object, propertyType As Object) As String
    parameters:
    - id: property
      type: System.Object
    - id: entityType
      type: System.Object
    - id: propertyType
      type: System.Object
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.IdentityBadType*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.UnqualifiedDataType(System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.UnqualifiedDataType(System.Object)
  id: UnqualifiedDataType(System.Object)
  parent: Microsoft.EntityFrameworkCore.Internal.SqlServerStrings
  langs:
  - csharp
  - vb
  name: UnqualifiedDataType(Object)
  nameWithType: SqlServerStrings.UnqualifiedDataType(Object)
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.UnqualifiedDataType(System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer/Properties/SqlServerStrings.Designer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: UnqualifiedDataType
    path: src/Microsoft.EntityFrameworkCore.SqlServer/Properties/SqlServerStrings.Designer.cs
    startLine: 29
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\nData type '{dataType}' is not supported in this form. Either specify the length explicitly in the type name, for example as '{dataType}(16)', or remove the data type and use APIs such as HasMaxLength to allow EF choose the data type.\n"
  example: []
  syntax:
    content: public static string UnqualifiedDataType(object dataType)
    content.vb: Public Shared Function UnqualifiedDataType(dataType As Object) As String
    parameters:
    - id: dataType
      type: System.Object
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.UnqualifiedDataType*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.SequenceBadType(System.Object,System.Object,System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.SequenceBadType(System.Object,System.Object,System.Object)
  id: SequenceBadType(System.Object,System.Object,System.Object)
  parent: Microsoft.EntityFrameworkCore.Internal.SqlServerStrings
  langs:
  - csharp
  - vb
  name: SequenceBadType(Object, Object, Object)
  nameWithType: SqlServerStrings.SequenceBadType(Object, Object, Object)
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.SequenceBadType(System.Object, System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer/Properties/SqlServerStrings.Designer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: SequenceBadType
    path: src/Microsoft.EntityFrameworkCore.SqlServer/Properties/SqlServerStrings.Designer.cs
    startLine: 37
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\nSQL Server sequences cannot be used to generate values for the property '{property}' on entity type '{entityType}' because the property type is '{propertyType}'. Sequences can only be used with integer properties.\n"
  example: []
  syntax:
    content: public static string SequenceBadType(object property, object entityType, object propertyType)
    content.vb: Public Shared Function SequenceBadType(property As Object, entityType As Object, propertyType As Object) As String
    parameters:
    - id: property
      type: System.Object
    - id: entityType
      type: System.Object
    - id: propertyType
      type: System.Object
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.SequenceBadType*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.IndexTableRequired
  commentId: P:Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.IndexTableRequired
  id: IndexTableRequired
  parent: Microsoft.EntityFrameworkCore.Internal.SqlServerStrings
  langs:
  - csharp
  - vb
  name: IndexTableRequired
  nameWithType: SqlServerStrings.IndexTableRequired
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.IndexTableRequired
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer/Properties/SqlServerStrings.Designer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: IndexTableRequired
    path: src/Microsoft.EntityFrameworkCore.SqlServer/Properties/SqlServerStrings.Designer.cs
    startLine: 45
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\nSQL Server requires the table name to be specified for rename index operations. Specify table name in the call to MigrationBuilder.RenameIndex.\n"
  example: []
  syntax:
    content: public static string IndexTableRequired { get; }
    content.vb: Public Shared ReadOnly Property IndexTableRequired As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.IndexTableRequired*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.AlterMemoryOptimizedTable
  commentId: P:Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.AlterMemoryOptimizedTable
  id: AlterMemoryOptimizedTable
  parent: Microsoft.EntityFrameworkCore.Internal.SqlServerStrings
  langs:
  - csharp
  - vb
  name: AlterMemoryOptimizedTable
  nameWithType: SqlServerStrings.AlterMemoryOptimizedTable
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.AlterMemoryOptimizedTable
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer/Properties/SqlServerStrings.Designer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AlterMemoryOptimizedTable
    path: src/Microsoft.EntityFrameworkCore.SqlServer/Properties/SqlServerStrings.Designer.cs
    startLine: 53
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\nTo set memory-optimized on a table on or off the table needs to be dropped and recreated.\n"
  example: []
  syntax:
    content: public static string AlterMemoryOptimizedTable { get; }
    content.vb: Public Shared ReadOnly Property AlterMemoryOptimizedTable As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.AlterMemoryOptimizedTable*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.AlterIdentityColumn
  commentId: P:Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.AlterIdentityColumn
  id: AlterIdentityColumn
  parent: Microsoft.EntityFrameworkCore.Internal.SqlServerStrings
  langs:
  - csharp
  - vb
  name: AlterIdentityColumn
  nameWithType: SqlServerStrings.AlterIdentityColumn
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.AlterIdentityColumn
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer/Properties/SqlServerStrings.Designer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AlterIdentityColumn
    path: src/Microsoft.EntityFrameworkCore.SqlServer/Properties/SqlServerStrings.Designer.cs
    startLine: 61
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\nTo change the IDENTITY property of a column, the column needs to be dropped and recreated.\n"
  example: []
  syntax:
    content: public static string AlterIdentityColumn { get; }
    content.vb: Public Shared ReadOnly Property AlterIdentityColumn As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.AlterIdentityColumn*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.TransientExceptionDetected
  commentId: P:Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.TransientExceptionDetected
  id: TransientExceptionDetected
  parent: Microsoft.EntityFrameworkCore.Internal.SqlServerStrings
  langs:
  - csharp
  - vb
  name: TransientExceptionDetected
  nameWithType: SqlServerStrings.TransientExceptionDetected
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.TransientExceptionDetected
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer/Properties/SqlServerStrings.Designer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: TransientExceptionDetected
    path: src/Microsoft.EntityFrameworkCore.SqlServer/Properties/SqlServerStrings.Designer.cs
    startLine: 69
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\nAn exception has been raised that is likely due to a transient failure. If you are connecting to a SQL Azure database consider using SqlAzureExecutionStrategy.\n"
  example: []
  syntax:
    content: public static string TransientExceptionDetected { get; }
    content.vb: Public Shared ReadOnly Property TransientExceptionDetected As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.TransientExceptionDetected*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: Microsoft.EntityFrameworkCore.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Internal
  fullName: Microsoft.EntityFrameworkCore.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.IdentityBadType*
  commentId: Overload:Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.IdentityBadType
  isExternal: false
  name: IdentityBadType
  nameWithType: SqlServerStrings.IdentityBadType
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.IdentityBadType
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.UnqualifiedDataType*
  commentId: Overload:Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.UnqualifiedDataType
  isExternal: false
  name: UnqualifiedDataType
  nameWithType: SqlServerStrings.UnqualifiedDataType
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.UnqualifiedDataType
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.SequenceBadType*
  commentId: Overload:Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.SequenceBadType
  isExternal: false
  name: SequenceBadType
  nameWithType: SqlServerStrings.SequenceBadType
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.SequenceBadType
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.IndexTableRequired*
  commentId: Overload:Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.IndexTableRequired
  isExternal: false
  name: IndexTableRequired
  nameWithType: SqlServerStrings.IndexTableRequired
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.IndexTableRequired
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.AlterMemoryOptimizedTable*
  commentId: Overload:Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.AlterMemoryOptimizedTable
  isExternal: false
  name: AlterMemoryOptimizedTable
  nameWithType: SqlServerStrings.AlterMemoryOptimizedTable
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.AlterMemoryOptimizedTable
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.AlterIdentityColumn*
  commentId: Overload:Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.AlterIdentityColumn
  isExternal: false
  name: AlterIdentityColumn
  nameWithType: SqlServerStrings.AlterIdentityColumn
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.AlterIdentityColumn
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.TransientExceptionDetected*
  commentId: Overload:Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.TransientExceptionDetected
  isExternal: false
  name: TransientExceptionDetected
  nameWithType: SqlServerStrings.TransientExceptionDetected
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.TransientExceptionDetected
