### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.TestEnvironment
  commentId: T:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.TestEnvironment
  id: TestEnvironment
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  children:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.TestEnvironment.Config
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.TestEnvironment.DefaultConnection
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.TestEnvironment.GetFlag(System.String)
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.TestEnvironment.GetInt(System.String)
  langs:
  - csharp
  - vb
  name: TestEnvironment
  nameWithType: TestEnvironment
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.TestEnvironment
  type: Class
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/TestEnvironment.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: TestEnvironment
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/TestEnvironment.cs
    startLine: 8
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  syntax:
    content: public static class TestEnvironment
    content.vb: Public Module TestEnvironment
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.TestEnvironment.Config
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.TestEnvironment.Config
  id: Config
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.TestEnvironment
  langs:
  - csharp
  - vb
  name: Config
  nameWithType: TestEnvironment.Config
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.TestEnvironment.Config
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/TestEnvironment.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Config
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/TestEnvironment.cs
    startLine: 10
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  syntax:
    content: public static IConfiguration Config { get; }
    content.vb: Public Shared ReadOnly Property Config As IConfiguration
    parameters: []
    return:
      type: IConfiguration
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.TestEnvironment.DefaultConnection
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.TestEnvironment.DefaultConnection
  id: DefaultConnection
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.TestEnvironment
  langs:
  - csharp
  - vb
  name: DefaultConnection
  nameWithType: TestEnvironment.DefaultConnection
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.TestEnvironment.DefaultConnection
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/TestEnvironment.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: DefaultConnection
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/TestEnvironment.cs
    startLine: 26
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  syntax:
    content: public static string DefaultConnection { get; }
    content.vb: Public Shared ReadOnly Property DefaultConnection As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.TestEnvironment.GetFlag(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.TestEnvironment.GetFlag(System.String)
  id: GetFlag(System.String)
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.TestEnvironment
  langs:
  - csharp
  - vb
  name: GetFlag(String)
  nameWithType: TestEnvironment.GetFlag(String)
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.TestEnvironment.GetFlag(System.String)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/TestEnvironment.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GetFlag
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/TestEnvironment.cs
    startLine: 28
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  syntax:
    content: public static bool ? GetFlag(string key)
    content.vb: Public Shared Function GetFlag(key As String) As Boolean?
    parameters:
    - id: key
      type: System.String
    return:
      type: System.Nullable{System.Boolean}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.TestEnvironment.GetInt(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.TestEnvironment.GetInt(System.String)
  id: GetInt(System.String)
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.TestEnvironment
  langs:
  - csharp
  - vb
  name: GetInt(String)
  nameWithType: TestEnvironment.GetInt(String)
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.TestEnvironment.GetInt(System.String)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/TestEnvironment.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GetInt
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/Utilities/TestEnvironment.cs
    startLine: 34
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  syntax:
    content: public static int ? GetInt(string key)
    content.vb: Public Shared Function GetInt(key As String) As Integer?
    parameters:
    - id: key
      type: System.String
    return:
      type: System.Nullable{System.Int32}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  commentId: N:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  isExternal: false
  name: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  nameWithType: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: IConfiguration
  commentId: '!:IConfiguration'
  isExternal: true
  name: IConfiguration
  nameWithType: IConfiguration
  fullName: IConfiguration
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
