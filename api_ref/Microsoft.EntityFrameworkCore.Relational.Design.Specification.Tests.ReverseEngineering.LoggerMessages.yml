### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.LoggerMessages
  commentId: T:Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.LoggerMessages
  id: LoggerMessages
  parent: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering
  children:
  - Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.LoggerMessages.Debug
  - Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.LoggerMessages.Error
  - Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.LoggerMessages.Info
  - Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.LoggerMessages.Warn
  langs:
  - csharp
  - vb
  name: LoggerMessages
  nameWithType: LoggerMessages
  fullName: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.LoggerMessages
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests/ReverseEngineering/InMemoryOperationReporter.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: LoggerMessages
    path: src/Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests/ReverseEngineering/InMemoryOperationReporter.cs
    startLine: 61
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering
  syntax:
    content: public class LoggerMessages
    content.vb: Public Class LoggerMessages
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.LoggerMessages.Error
  commentId: F:Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.LoggerMessages.Error
  id: Error
  parent: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.LoggerMessages
  langs:
  - csharp
  - vb
  name: Error
  nameWithType: LoggerMessages.Error
  fullName: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.LoggerMessages.Error
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests/ReverseEngineering/InMemoryOperationReporter.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Error
    path: src/Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests/ReverseEngineering/InMemoryOperationReporter.cs
    startLine: 63
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering
  syntax:
    content: public List<string> Error
    content.vb: Public Error As List(Of String)
    return:
      type: System.Collections.Generic.List{System.String}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.LoggerMessages.Warn
  commentId: F:Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.LoggerMessages.Warn
  id: Warn
  parent: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.LoggerMessages
  langs:
  - csharp
  - vb
  name: Warn
  nameWithType: LoggerMessages.Warn
  fullName: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.LoggerMessages.Warn
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests/ReverseEngineering/InMemoryOperationReporter.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Warn
    path: src/Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests/ReverseEngineering/InMemoryOperationReporter.cs
    startLine: 64
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering
  syntax:
    content: public List<string> Warn
    content.vb: Public Warn As List(Of String)
    return:
      type: System.Collections.Generic.List{System.String}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.LoggerMessages.Info
  commentId: F:Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.LoggerMessages.Info
  id: Info
  parent: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.LoggerMessages
  langs:
  - csharp
  - vb
  name: Info
  nameWithType: LoggerMessages.Info
  fullName: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.LoggerMessages.Info
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests/ReverseEngineering/InMemoryOperationReporter.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Info
    path: src/Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests/ReverseEngineering/InMemoryOperationReporter.cs
    startLine: 65
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering
  syntax:
    content: public List<string> Info
    content.vb: Public Info As List(Of String)
    return:
      type: System.Collections.Generic.List{System.String}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.LoggerMessages.Debug
  commentId: F:Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.LoggerMessages.Debug
  id: Debug
  parent: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.LoggerMessages
  langs:
  - csharp
  - vb
  name: Debug
  nameWithType: LoggerMessages.Debug
  fullName: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.LoggerMessages.Debug
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests/ReverseEngineering/InMemoryOperationReporter.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Debug
    path: src/Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests/ReverseEngineering/InMemoryOperationReporter.cs
    startLine: 66
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering
  syntax:
    content: public List<string> Debug
    content.vb: Public Debug As List(Of String)
    return:
      type: System.Collections.Generic.List{System.String}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering
  commentId: N:Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering
  nameWithType: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering
  fullName: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullname.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullname.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
