### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices
  commentId: T:Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices
  id: DatabaseProviderServices
  parent: Microsoft.EntityFrameworkCore.Storage
  children:
  - Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.#ctor(System.IServiceProvider)
  - Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.CompiledQueryCacheKeyGenerator
  - Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.ConventionSetBuilder
  - Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.Creator
  - Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.Database
  - Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.EntityQueryableExpressionVisitorFactory
  - Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.EntityQueryModelVisitorFactory
  - Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.ExecutionStrategyFactory
  - Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.ExpressionPrinter
  - Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.GetService``1
  - Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.InvariantName
  - Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.ModelSource
  - Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.ModelValidator
  - Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.ProjectionExpressionVisitorFactory
  - Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.QueryCompilationContextFactory
  - Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.QueryContextFactory
  - Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.ResultOperatorHandler
  - Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.Services
  - Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.TransactionManager
  - Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.ValueGeneratorCache
  - Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.ValueGeneratorSelector
  langs:
  - csharp
  - vb
  name: DatabaseProviderServices
  nameWithType: DatabaseProviderServices
  fullName: Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Storage/DatabaseProviderServices.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: DatabaseProviderServices
    path: src/Microsoft.EntityFrameworkCore/Storage/DatabaseProviderServices.cs
    startLine: 28
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n<p>\n    The base set of services required by EF for a database provider to function.\n</p>\n<p>\n    This type is typically used by database providers (and other extensions). It is generally\n    not used in application code.\n</p>\n"
  example: []
  syntax:
    content: 'public abstract class DatabaseProviderServices : IDatabaseProviderServices'
    content.vb: >-
      Public MustInherit Class DatabaseProviderServices
          Implements IDatabaseProviderServices
  inheritance:
  - System.Object
  implements:
  - Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.#ctor(System.IServiceProvider)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.#ctor(System.IServiceProvider)
  id: '#ctor(System.IServiceProvider)'
  parent: Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices
  langs:
  - csharp
  - vb
  name: DatabaseProviderServices(IServiceProvider)
  nameWithType: DatabaseProviderServices.DatabaseProviderServices(IServiceProvider)
  fullName: Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.DatabaseProviderServices(System.IServiceProvider)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Storage/DatabaseProviderServices.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore/Storage/DatabaseProviderServices.cs
    startLine: 34
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n    Initializes a new instance of the <xref href=\"Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: protected DatabaseProviderServices(IServiceProvider services)
    content.vb: Protected Sub New(services As IServiceProvider)
    parameters:
    - id: services
      type: System.IServiceProvider
      description: 'The service provider to resolve services from. '
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.InvariantName
  commentId: P:Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.InvariantName
  id: InvariantName
  parent: Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices
  langs:
  - csharp
  - vb
  name: InvariantName
  nameWithType: DatabaseProviderServices.InvariantName
  fullName: Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.InvariantName
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Storage/DatabaseProviderServices.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: InvariantName
    path: src/Microsoft.EntityFrameworkCore/Storage/DatabaseProviderServices.cs
    startLine: 45
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n    The unique name used to identify the database provider. This should be the same as the NuGet package name\n    for the providers runtime.\n"
  example: []
  syntax:
    content: public abstract string InvariantName { get; }
    content.vb: Public MustOverride ReadOnly Property InvariantName As String
    parameters: []
    return:
      type: System.String
  implements:
  - Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.InvariantName
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.Services
  commentId: P:Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.Services
  id: Services
  parent: Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices
  langs:
  - csharp
  - vb
  name: Services
  nameWithType: DatabaseProviderServices.Services
  fullName: Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.Services
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Storage/DatabaseProviderServices.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Services
    path: src/Microsoft.EntityFrameworkCore/Storage/DatabaseProviderServices.cs
    startLine: 50
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n    Gets the service provider to resolve services from.\n"
  example: []
  syntax:
    content: protected virtual IServiceProvider Services { get; }
    content.vb: Protected Overridable ReadOnly Property Services As IServiceProvider
    parameters: []
    return:
      type: System.IServiceProvider
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.GetService``1
  commentId: M:Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.GetService``1
  id: GetService``1
  parent: Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices
  langs:
  - csharp
  - vb
  name: GetService<TService>()
  nameWithType: DatabaseProviderServices.GetService<TService>()
  fullName: Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.GetService<TService>()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Storage/DatabaseProviderServices.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetService
    path: src/Microsoft.EntityFrameworkCore/Storage/DatabaseProviderServices.cs
    startLine: 57
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n    Resolves a required service from <xref href=\"Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.Services\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: protected virtual TService GetService<TService>()
    content.vb: Protected Overridable Function GetService(Of TService) As TService
    typeParameters:
    - id: TService
      description: 'The service to be resolved. '
    return:
      type: '{TService}'
      description: 'The resolved service. '
  nameWithType.vb: DatabaseProviderServices.GetService(Of TService)()
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.GetService(Of TService)()
  name.vb: GetService(Of TService)()
- uid: Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.ConventionSetBuilder
  commentId: P:Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.ConventionSetBuilder
  id: ConventionSetBuilder
  parent: Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices
  langs:
  - csharp
  - vb
  name: ConventionSetBuilder
  nameWithType: DatabaseProviderServices.ConventionSetBuilder
  fullName: Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.ConventionSetBuilder
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Storage/DatabaseProviderServices.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ConventionSetBuilder
    path: src/Microsoft.EntityFrameworkCore/Storage/DatabaseProviderServices.cs
    startLine: 63
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n    The convention set builder for the database provider. By default this returns null, meaning the\n    default <xref href=\"Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.CoreConventionSetBuilder\" data-throw-if-not-resolved=\"false\"></xref> will be used.\n"
  example: []
  syntax:
    content: public virtual IConventionSetBuilder ConventionSetBuilder { get; }
    content.vb: Public Overridable ReadOnly Property ConventionSetBuilder As IConventionSetBuilder
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder
  implements:
  - Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ConventionSetBuilder
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.ValueGeneratorSelector
  commentId: P:Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.ValueGeneratorSelector
  id: ValueGeneratorSelector
  parent: Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices
  langs:
  - csharp
  - vb
  name: ValueGeneratorSelector
  nameWithType: DatabaseProviderServices.ValueGeneratorSelector
  fullName: Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.ValueGeneratorSelector
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Storage/DatabaseProviderServices.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ValueGeneratorSelector
    path: src/Microsoft.EntityFrameworkCore/Storage/DatabaseProviderServices.cs
    startLine: 70
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n    Gets the <xref href=\"Microsoft.EntityFrameworkCore.ValueGeneration.IValueGeneratorSelector\" data-throw-if-not-resolved=\"false\"></xref> for the database provider. By default, EF will register a default implementation\n    (<xref href=\"Microsoft.EntityFrameworkCore.ValueGeneration.ValueGeneratorSelector\" data-throw-if-not-resolved=\"false\"></xref>) which provides basic functionality but can be\n    overridden if needed.\n"
  example: []
  syntax:
    content: public virtual IValueGeneratorSelector ValueGeneratorSelector { get; }
    content.vb: Public Overridable ReadOnly Property ValueGeneratorSelector As IValueGeneratorSelector
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.ValueGeneration.IValueGeneratorSelector
  implements:
  - Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ValueGeneratorSelector
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.ModelValidator
  commentId: P:Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.ModelValidator
  id: ModelValidator
  parent: Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices
  langs:
  - csharp
  - vb
  name: ModelValidator
  nameWithType: DatabaseProviderServices.ModelValidator
  fullName: Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.ModelValidator
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Storage/DatabaseProviderServices.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ModelValidator
    path: src/Microsoft.EntityFrameworkCore/Storage/DatabaseProviderServices.cs
    startLine: 77
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n    Gets the <xref href=\"Microsoft.EntityFrameworkCore.Internal.IModelValidator\" data-throw-if-not-resolved=\"false\"></xref> for the database provider. By default, EF will register a default implementation\n    (<xref href=\"Microsoft.EntityFrameworkCore.Internal.LoggingModelValidator\" data-throw-if-not-resolved=\"false\"></xref>) which provides basic functionality but can be\n    overridden if needed.\n"
  example: []
  syntax:
    content: public virtual IModelValidator ModelValidator { get; }
    content.vb: Public Overridable ReadOnly Property ModelValidator As IModelValidator
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Internal.IModelValidator
  implements:
  - Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ModelValidator
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.CompiledQueryCacheKeyGenerator
  commentId: P:Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.CompiledQueryCacheKeyGenerator
  id: CompiledQueryCacheKeyGenerator
  parent: Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices
  langs:
  - csharp
  - vb
  name: CompiledQueryCacheKeyGenerator
  nameWithType: DatabaseProviderServices.CompiledQueryCacheKeyGenerator
  fullName: Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.CompiledQueryCacheKeyGenerator
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Storage/DatabaseProviderServices.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CompiledQueryCacheKeyGenerator
    path: src/Microsoft.EntityFrameworkCore/Storage/DatabaseProviderServices.cs
    startLine: 85
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n    Gets the <xref href=\"Microsoft.EntityFrameworkCore.Query.ICompiledQueryCacheKeyGenerator\" data-throw-if-not-resolved=\"false\"></xref> for the database provider. By default, EF will register a default\n    implementation\n    (<xref href=\"Microsoft.EntityFrameworkCore.Query.CompiledQueryCacheKeyGenerator\" data-throw-if-not-resolved=\"false\"></xref>) which provides basic functionality but can be\n    overridden if needed.\n"
  example: []
  syntax:
    content: public virtual ICompiledQueryCacheKeyGenerator CompiledQueryCacheKeyGenerator { get; }
    content.vb: Public Overridable ReadOnly Property CompiledQueryCacheKeyGenerator As ICompiledQueryCacheKeyGenerator
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Query.ICompiledQueryCacheKeyGenerator
  implements:
  - Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.CompiledQueryCacheKeyGenerator
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.ExpressionPrinter
  commentId: P:Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.ExpressionPrinter
  id: ExpressionPrinter
  parent: Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices
  langs:
  - csharp
  - vb
  name: ExpressionPrinter
  nameWithType: DatabaseProviderServices.ExpressionPrinter
  fullName: Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.ExpressionPrinter
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Storage/DatabaseProviderServices.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ExpressionPrinter
    path: src/Microsoft.EntityFrameworkCore/Storage/DatabaseProviderServices.cs
    startLine: 92
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n    Gets the <xref href=\"Microsoft.EntityFrameworkCore.Query.Internal.IExpressionPrinter\" data-throw-if-not-resolved=\"false\"></xref> for the database provider. By default, EF will register a default implementation\n    (<xref href=\"Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter\" data-throw-if-not-resolved=\"false\"></xref>) which provides basic functionality but can be\n    overridden if needed.\n"
  example: []
  syntax:
    content: public virtual IExpressionPrinter ExpressionPrinter { get; }
    content.vb: Public Overridable ReadOnly Property ExpressionPrinter As IExpressionPrinter
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Query.Internal.IExpressionPrinter
  implements:
  - Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ExpressionPrinter
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.ResultOperatorHandler
  commentId: P:Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.ResultOperatorHandler
  id: ResultOperatorHandler
  parent: Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices
  langs:
  - csharp
  - vb
  name: ResultOperatorHandler
  nameWithType: DatabaseProviderServices.ResultOperatorHandler
  fullName: Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.ResultOperatorHandler
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Storage/DatabaseProviderServices.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ResultOperatorHandler
    path: src/Microsoft.EntityFrameworkCore/Storage/DatabaseProviderServices.cs
    startLine: 99
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n    Gets the <xref href=\"Microsoft.EntityFrameworkCore.Query.IResultOperatorHandler\" data-throw-if-not-resolved=\"false\"></xref> for the database provider. By default, EF will register a default implementation\n    (<xref href=\"Microsoft.EntityFrameworkCore.Query.ResultOperatorHandler\" data-throw-if-not-resolved=\"false\"></xref>) which provides basic functionality but can be\n    overridden if needed.\n"
  example: []
  syntax:
    content: public virtual IResultOperatorHandler ResultOperatorHandler { get; }
    content.vb: Public Overridable ReadOnly Property ResultOperatorHandler As IResultOperatorHandler
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Query.IResultOperatorHandler
  implements:
  - Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ResultOperatorHandler
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.QueryCompilationContextFactory
  commentId: P:Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.QueryCompilationContextFactory
  id: QueryCompilationContextFactory
  parent: Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices
  langs:
  - csharp
  - vb
  name: QueryCompilationContextFactory
  nameWithType: DatabaseProviderServices.QueryCompilationContextFactory
  fullName: Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.QueryCompilationContextFactory
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Storage/DatabaseProviderServices.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: QueryCompilationContextFactory
    path: src/Microsoft.EntityFrameworkCore/Storage/DatabaseProviderServices.cs
    startLine: 107
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n    Gets the <xref href=\"Microsoft.EntityFrameworkCore.Query.IQueryCompilationContextFactory\" data-throw-if-not-resolved=\"false\"></xref> for the database provider. By default, EF will register a default\n    implementation\n    (<xref href=\"Microsoft.EntityFrameworkCore.ValueGeneration.ValueGeneratorSelector\" data-throw-if-not-resolved=\"false\"></xref>) which provides basic functionality but can be\n    overridden if needed.\n"
  example: []
  syntax:
    content: public virtual IQueryCompilationContextFactory QueryCompilationContextFactory { get; }
    content.vb: Public Overridable ReadOnly Property QueryCompilationContextFactory As IQueryCompilationContextFactory
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Query.IQueryCompilationContextFactory
  implements:
  - Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.QueryCompilationContextFactory
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.ProjectionExpressionVisitorFactory
  commentId: P:Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.ProjectionExpressionVisitorFactory
  id: ProjectionExpressionVisitorFactory
  parent: Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices
  langs:
  - csharp
  - vb
  name: ProjectionExpressionVisitorFactory
  nameWithType: DatabaseProviderServices.ProjectionExpressionVisitorFactory
  fullName: Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.ProjectionExpressionVisitorFactory
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Storage/DatabaseProviderServices.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ProjectionExpressionVisitorFactory
    path: src/Microsoft.EntityFrameworkCore/Storage/DatabaseProviderServices.cs
    startLine: 115
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n    Gets the <xref href=\"Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.IProjectionExpressionVisitorFactory\" data-throw-if-not-resolved=\"false\"></xref> for the database provider. By default, EF will register a default\n    implementation\n    (<xref href=\"Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ProjectionExpressionVisitorFactory\" data-throw-if-not-resolved=\"false\"></xref>) which provides basic functionality but can be\n    overridden if needed.\n"
  example: []
  syntax:
    content: public virtual IProjectionExpressionVisitorFactory ProjectionExpressionVisitorFactory { get; }
    content.vb: Public Overridable ReadOnly Property ProjectionExpressionVisitorFactory As IProjectionExpressionVisitorFactory
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.IProjectionExpressionVisitorFactory
  implements:
  - Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ProjectionExpressionVisitorFactory
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.Database
  commentId: P:Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.Database
  id: Database
  parent: Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices
  langs:
  - csharp
  - vb
  name: Database
  nameWithType: DatabaseProviderServices.Database
  fullName: Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.Database
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Storage/DatabaseProviderServices.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Database
    path: src/Microsoft.EntityFrameworkCore/Storage/DatabaseProviderServices.cs
    startLine: 120
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n    Gets the <xref href=\"Microsoft.EntityFrameworkCore.Storage.IDatabase\" data-throw-if-not-resolved=\"false\"></xref> for the database provider.\n"
  example: []
  syntax:
    content: public abstract IDatabase Database { get; }
    content.vb: Public MustOverride ReadOnly Property Database As IDatabase
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Storage.IDatabase
  implements:
  - Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.Database
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.TransactionManager
  commentId: P:Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.TransactionManager
  id: TransactionManager
  parent: Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices
  langs:
  - csharp
  - vb
  name: TransactionManager
  nameWithType: DatabaseProviderServices.TransactionManager
  fullName: Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.TransactionManager
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Storage/DatabaseProviderServices.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: TransactionManager
    path: src/Microsoft.EntityFrameworkCore/Storage/DatabaseProviderServices.cs
    startLine: 125
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n    Gets the <xref href=\"Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager\" data-throw-if-not-resolved=\"false\"></xref> for the database provider.\n"
  example: []
  syntax:
    content: public abstract IDbContextTransactionManager TransactionManager { get; }
    content.vb: Public MustOverride ReadOnly Property TransactionManager As IDbContextTransactionManager
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager
  implements:
  - Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.TransactionManager
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.Creator
  commentId: P:Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.Creator
  id: Creator
  parent: Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices
  langs:
  - csharp
  - vb
  name: Creator
  nameWithType: DatabaseProviderServices.Creator
  fullName: Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.Creator
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Storage/DatabaseProviderServices.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Creator
    path: src/Microsoft.EntityFrameworkCore/Storage/DatabaseProviderServices.cs
    startLine: 130
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n    Gets the <xref href=\"Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator\" data-throw-if-not-resolved=\"false\"></xref> for the database provider.\n"
  example: []
  syntax:
    content: public abstract IDatabaseCreator Creator { get; }
    content.vb: Public MustOverride ReadOnly Property Creator As IDatabaseCreator
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator
  implements:
  - Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.Creator
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.ModelSource
  commentId: P:Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.ModelSource
  id: ModelSource
  parent: Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices
  langs:
  - csharp
  - vb
  name: ModelSource
  nameWithType: DatabaseProviderServices.ModelSource
  fullName: Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.ModelSource
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Storage/DatabaseProviderServices.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ModelSource
    path: src/Microsoft.EntityFrameworkCore/Storage/DatabaseProviderServices.cs
    startLine: 135
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n    Gets the <xref href=\"Microsoft.EntityFrameworkCore.Infrastructure.IModelSource\" data-throw-if-not-resolved=\"false\"></xref> for the database provider.\n"
  example: []
  syntax:
    content: public abstract IModelSource ModelSource { get; }
    content.vb: Public MustOverride ReadOnly Property ModelSource As IModelSource
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Infrastructure.IModelSource
  implements:
  - Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ModelSource
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.ValueGeneratorCache
  commentId: P:Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.ValueGeneratorCache
  id: ValueGeneratorCache
  parent: Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices
  langs:
  - csharp
  - vb
  name: ValueGeneratorCache
  nameWithType: DatabaseProviderServices.ValueGeneratorCache
  fullName: Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.ValueGeneratorCache
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Storage/DatabaseProviderServices.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ValueGeneratorCache
    path: src/Microsoft.EntityFrameworkCore/Storage/DatabaseProviderServices.cs
    startLine: 140
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n    Gets the <xref href=\"Microsoft.EntityFrameworkCore.ValueGeneration.IValueGeneratorCache\" data-throw-if-not-resolved=\"false\"></xref> for the database provider.\n"
  example: []
  syntax:
    content: public abstract IValueGeneratorCache ValueGeneratorCache { get; }
    content.vb: Public MustOverride ReadOnly Property ValueGeneratorCache As IValueGeneratorCache
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.ValueGeneration.IValueGeneratorCache
  implements:
  - Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ValueGeneratorCache
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.QueryContextFactory
  commentId: P:Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.QueryContextFactory
  id: QueryContextFactory
  parent: Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices
  langs:
  - csharp
  - vb
  name: QueryContextFactory
  nameWithType: DatabaseProviderServices.QueryContextFactory
  fullName: Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.QueryContextFactory
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Storage/DatabaseProviderServices.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: QueryContextFactory
    path: src/Microsoft.EntityFrameworkCore/Storage/DatabaseProviderServices.cs
    startLine: 145
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n    Gets the <xref href=\"Microsoft.EntityFrameworkCore.Query.IQueryContextFactory\" data-throw-if-not-resolved=\"false\"></xref> for the database provider.\n"
  example: []
  syntax:
    content: public abstract IQueryContextFactory QueryContextFactory { get; }
    content.vb: Public MustOverride ReadOnly Property QueryContextFactory As IQueryContextFactory
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Query.IQueryContextFactory
  implements:
  - Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.QueryContextFactory
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.EntityQueryableExpressionVisitorFactory
  commentId: P:Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.EntityQueryableExpressionVisitorFactory
  id: EntityQueryableExpressionVisitorFactory
  parent: Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices
  langs:
  - csharp
  - vb
  name: EntityQueryableExpressionVisitorFactory
  nameWithType: DatabaseProviderServices.EntityQueryableExpressionVisitorFactory
  fullName: Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.EntityQueryableExpressionVisitorFactory
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Storage/DatabaseProviderServices.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: EntityQueryableExpressionVisitorFactory
    path: src/Microsoft.EntityFrameworkCore/Storage/DatabaseProviderServices.cs
    startLine: 150
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n    Gets the <xref href=\"Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.IEntityQueryableExpressionVisitorFactory\" data-throw-if-not-resolved=\"false\"></xref> for the database provider.\n"
  example: []
  syntax:
    content: public abstract IEntityQueryableExpressionVisitorFactory EntityQueryableExpressionVisitorFactory { get; }
    content.vb: Public MustOverride ReadOnly Property EntityQueryableExpressionVisitorFactory As IEntityQueryableExpressionVisitorFactory
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.IEntityQueryableExpressionVisitorFactory
  implements:
  - Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.EntityQueryableExpressionVisitorFactory
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.EntityQueryModelVisitorFactory
  commentId: P:Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.EntityQueryModelVisitorFactory
  id: EntityQueryModelVisitorFactory
  parent: Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices
  langs:
  - csharp
  - vb
  name: EntityQueryModelVisitorFactory
  nameWithType: DatabaseProviderServices.EntityQueryModelVisitorFactory
  fullName: Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.EntityQueryModelVisitorFactory
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Storage/DatabaseProviderServices.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: EntityQueryModelVisitorFactory
    path: src/Microsoft.EntityFrameworkCore/Storage/DatabaseProviderServices.cs
    startLine: 155
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n    Gets the <xref href=\"Microsoft.EntityFrameworkCore.Query.IEntityQueryModelVisitorFactory\" data-throw-if-not-resolved=\"false\"></xref> for the database provider.\n"
  example: []
  syntax:
    content: public abstract IEntityQueryModelVisitorFactory EntityQueryModelVisitorFactory { get; }
    content.vb: Public MustOverride ReadOnly Property EntityQueryModelVisitorFactory As IEntityQueryModelVisitorFactory
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Query.IEntityQueryModelVisitorFactory
  implements:
  - Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.EntityQueryModelVisitorFactory
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.ExecutionStrategyFactory
  commentId: P:Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.ExecutionStrategyFactory
  id: ExecutionStrategyFactory
  parent: Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices
  langs:
  - csharp
  - vb
  name: ExecutionStrategyFactory
  nameWithType: DatabaseProviderServices.ExecutionStrategyFactory
  fullName: Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.ExecutionStrategyFactory
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Storage/DatabaseProviderServices.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ExecutionStrategyFactory
    path: src/Microsoft.EntityFrameworkCore/Storage/DatabaseProviderServices.cs
    startLine: 160
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n    Gets the <xref href=\"Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory\" data-throw-if-not-resolved=\"false\"></xref> for the database provider.\n"
  example: []
  syntax:
    content: public virtual IExecutionStrategyFactory ExecutionStrategyFactory { get; }
    content.vb: Public Overridable ReadOnly Property ExecutionStrategyFactory As IExecutionStrategyFactory
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory
  implements:
  - Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ExecutionStrategyFactory
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
references:
- uid: Microsoft.EntityFrameworkCore.Storage
  commentId: N:Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Storage
  nameWithType: Microsoft.EntityFrameworkCore.Storage
  fullName: Microsoft.EntityFrameworkCore.Storage
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IDatabaseProviderServices
  nameWithType: IDatabaseProviderServices
  fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices
  commentId: T:Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: DatabaseProviderServices
  nameWithType: DatabaseProviderServices
  fullName: Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices
- uid: System.IServiceProvider
  commentId: T:System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.InvariantName
  commentId: P:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.InvariantName
  parent: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices
  isExternal: false
  name: InvariantName
  nameWithType: IDatabaseProviderServices.InvariantName
  fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.InvariantName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.Services
  commentId: P:Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.Services
  parent: Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices
  isExternal: false
  name: Services
  nameWithType: DatabaseProviderServices.Services
  fullName: Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.Services
- uid: '{TService}'
  commentId: '!:TService'
  definition: TService
  name: TService
  nameWithType: TService
  fullName: TService
- uid: TService
  isExternal: false
  name: TService
  nameWithType: TService
  fullName: TService
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.CoreConventionSetBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.CoreConventionSetBuilder
  isExternal: false
  name: CoreConventionSetBuilder
  nameWithType: CoreConventionSetBuilder
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.CoreConventionSetBuilder
- uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ConventionSetBuilder
  commentId: P:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ConventionSetBuilder
  parent: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices
  isExternal: false
  name: ConventionSetBuilder
  nameWithType: IDatabaseProviderServices.ConventionSetBuilder
  fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ConventionSetBuilder
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder
  parent: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
  isExternal: false
  name: IConventionSetBuilder
  nameWithType: IConventionSetBuilder
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
- uid: Microsoft.EntityFrameworkCore.ValueGeneration.IValueGeneratorSelector
  commentId: T:Microsoft.EntityFrameworkCore.ValueGeneration.IValueGeneratorSelector
  parent: Microsoft.EntityFrameworkCore.ValueGeneration
  isExternal: false
  name: IValueGeneratorSelector
  nameWithType: IValueGeneratorSelector
  fullName: Microsoft.EntityFrameworkCore.ValueGeneration.IValueGeneratorSelector
- uid: Microsoft.EntityFrameworkCore.ValueGeneration.ValueGeneratorSelector
  commentId: T:Microsoft.EntityFrameworkCore.ValueGeneration.ValueGeneratorSelector
  parent: Microsoft.EntityFrameworkCore.ValueGeneration
  isExternal: false
  name: ValueGeneratorSelector
  nameWithType: ValueGeneratorSelector
  fullName: Microsoft.EntityFrameworkCore.ValueGeneration.ValueGeneratorSelector
- uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ValueGeneratorSelector
  commentId: P:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ValueGeneratorSelector
  parent: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices
  isExternal: false
  name: ValueGeneratorSelector
  nameWithType: IDatabaseProviderServices.ValueGeneratorSelector
  fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ValueGeneratorSelector
- uid: Microsoft.EntityFrameworkCore.ValueGeneration
  commentId: N:Microsoft.EntityFrameworkCore.ValueGeneration
  isExternal: false
  name: Microsoft.EntityFrameworkCore.ValueGeneration
  nameWithType: Microsoft.EntityFrameworkCore.ValueGeneration
  fullName: Microsoft.EntityFrameworkCore.ValueGeneration
- uid: Microsoft.EntityFrameworkCore.Internal.IModelValidator
  commentId: T:Microsoft.EntityFrameworkCore.Internal.IModelValidator
  parent: Microsoft.EntityFrameworkCore.Internal
  isExternal: false
  name: IModelValidator
  nameWithType: IModelValidator
  fullName: Microsoft.EntityFrameworkCore.Internal.IModelValidator
- uid: Microsoft.EntityFrameworkCore.Internal.LoggingModelValidator
  commentId: T:Microsoft.EntityFrameworkCore.Internal.LoggingModelValidator
  parent: Microsoft.EntityFrameworkCore.Internal
  isExternal: false
  name: LoggingModelValidator
  nameWithType: LoggingModelValidator
  fullName: Microsoft.EntityFrameworkCore.Internal.LoggingModelValidator
- uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ModelValidator
  commentId: P:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ModelValidator
  parent: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices
  isExternal: false
  name: ModelValidator
  nameWithType: IDatabaseProviderServices.ModelValidator
  fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ModelValidator
- uid: Microsoft.EntityFrameworkCore.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Internal
  fullName: Microsoft.EntityFrameworkCore.Internal
- uid: Microsoft.EntityFrameworkCore.Query.ICompiledQueryCacheKeyGenerator
  commentId: T:Microsoft.EntityFrameworkCore.Query.ICompiledQueryCacheKeyGenerator
  parent: Microsoft.EntityFrameworkCore.Query
  isExternal: false
  name: ICompiledQueryCacheKeyGenerator
  nameWithType: ICompiledQueryCacheKeyGenerator
  fullName: Microsoft.EntityFrameworkCore.Query.ICompiledQueryCacheKeyGenerator
- uid: Microsoft.EntityFrameworkCore.Query.CompiledQueryCacheKeyGenerator
  commentId: T:Microsoft.EntityFrameworkCore.Query.CompiledQueryCacheKeyGenerator
  parent: Microsoft.EntityFrameworkCore.Query
  isExternal: false
  name: CompiledQueryCacheKeyGenerator
  nameWithType: CompiledQueryCacheKeyGenerator
  fullName: Microsoft.EntityFrameworkCore.Query.CompiledQueryCacheKeyGenerator
- uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.CompiledQueryCacheKeyGenerator
  commentId: P:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.CompiledQueryCacheKeyGenerator
  parent: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices
  isExternal: false
  name: CompiledQueryCacheKeyGenerator
  nameWithType: IDatabaseProviderServices.CompiledQueryCacheKeyGenerator
  fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.CompiledQueryCacheKeyGenerator
- uid: Microsoft.EntityFrameworkCore.Query
  commentId: N:Microsoft.EntityFrameworkCore.Query
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query
  nameWithType: Microsoft.EntityFrameworkCore.Query
  fullName: Microsoft.EntityFrameworkCore.Query
- uid: Microsoft.EntityFrameworkCore.Query.Internal.IExpressionPrinter
  commentId: T:Microsoft.EntityFrameworkCore.Query.Internal.IExpressionPrinter
  parent: Microsoft.EntityFrameworkCore.Query.Internal
  isExternal: false
  name: IExpressionPrinter
  nameWithType: IExpressionPrinter
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.IExpressionPrinter
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter
  commentId: T:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter
  parent: Microsoft.EntityFrameworkCore.Query.Internal
  isExternal: false
  name: ExpressionPrinter
  nameWithType: ExpressionPrinter
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter
- uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ExpressionPrinter
  commentId: P:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ExpressionPrinter
  parent: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices
  isExternal: false
  name: ExpressionPrinter
  nameWithType: IDatabaseProviderServices.ExpressionPrinter
  fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ExpressionPrinter
- uid: Microsoft.EntityFrameworkCore.Query.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Query.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Query.Internal
  fullName: Microsoft.EntityFrameworkCore.Query.Internal
- uid: Microsoft.EntityFrameworkCore.Query.IResultOperatorHandler
  commentId: T:Microsoft.EntityFrameworkCore.Query.IResultOperatorHandler
  parent: Microsoft.EntityFrameworkCore.Query
  isExternal: false
  name: IResultOperatorHandler
  nameWithType: IResultOperatorHandler
  fullName: Microsoft.EntityFrameworkCore.Query.IResultOperatorHandler
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperatorHandler
  commentId: T:Microsoft.EntityFrameworkCore.Query.ResultOperatorHandler
  parent: Microsoft.EntityFrameworkCore.Query
  isExternal: false
  name: ResultOperatorHandler
  nameWithType: ResultOperatorHandler
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperatorHandler
- uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ResultOperatorHandler
  commentId: P:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ResultOperatorHandler
  parent: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices
  isExternal: false
  name: ResultOperatorHandler
  nameWithType: IDatabaseProviderServices.ResultOperatorHandler
  fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ResultOperatorHandler
- uid: Microsoft.EntityFrameworkCore.Query.IQueryCompilationContextFactory
  commentId: T:Microsoft.EntityFrameworkCore.Query.IQueryCompilationContextFactory
  parent: Microsoft.EntityFrameworkCore.Query
  isExternal: false
  name: IQueryCompilationContextFactory
  nameWithType: IQueryCompilationContextFactory
  fullName: Microsoft.EntityFrameworkCore.Query.IQueryCompilationContextFactory
- uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.QueryCompilationContextFactory
  commentId: P:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.QueryCompilationContextFactory
  parent: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices
  isExternal: false
  name: QueryCompilationContextFactory
  nameWithType: IDatabaseProviderServices.QueryCompilationContextFactory
  fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.QueryCompilationContextFactory
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.IProjectionExpressionVisitorFactory
  commentId: T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.IProjectionExpressionVisitorFactory
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
  isExternal: false
  name: IProjectionExpressionVisitorFactory
  nameWithType: IProjectionExpressionVisitorFactory
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.IProjectionExpressionVisitorFactory
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ProjectionExpressionVisitorFactory
  commentId: T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ProjectionExpressionVisitorFactory
  isExternal: false
  name: ProjectionExpressionVisitorFactory
  nameWithType: ProjectionExpressionVisitorFactory
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ProjectionExpressionVisitorFactory
- uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ProjectionExpressionVisitorFactory
  commentId: P:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ProjectionExpressionVisitorFactory
  parent: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices
  isExternal: false
  name: ProjectionExpressionVisitorFactory
  nameWithType: IDatabaseProviderServices.ProjectionExpressionVisitorFactory
  fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ProjectionExpressionVisitorFactory
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
  commentId: N:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
  nameWithType: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
- uid: Microsoft.EntityFrameworkCore.Storage.IDatabase
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IDatabase
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IDatabase
  nameWithType: IDatabase
  fullName: Microsoft.EntityFrameworkCore.Storage.IDatabase
- uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.Database
  commentId: P:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.Database
  parent: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices
  isExternal: false
  name: Database
  nameWithType: IDatabaseProviderServices.Database
  fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.Database
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IDbContextTransactionManager
  nameWithType: IDbContextTransactionManager
  fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager
- uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.TransactionManager
  commentId: P:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.TransactionManager
  parent: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices
  isExternal: false
  name: TransactionManager
  nameWithType: IDatabaseProviderServices.TransactionManager
  fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.TransactionManager
- uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IDatabaseCreator
  nameWithType: IDatabaseCreator
  fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator
- uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.Creator
  commentId: P:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.Creator
  parent: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices
  isExternal: false
  name: Creator
  nameWithType: IDatabaseProviderServices.Creator
  fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.Creator
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IModelSource
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.IModelSource
  parent: Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: IModelSource
  nameWithType: IModelSource
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IModelSource
- uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ModelSource
  commentId: P:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ModelSource
  parent: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices
  isExternal: false
  name: ModelSource
  nameWithType: IDatabaseProviderServices.ModelSource
  fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ModelSource
- uid: Microsoft.EntityFrameworkCore.Infrastructure
  commentId: N:Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Infrastructure
  nameWithType: Microsoft.EntityFrameworkCore.Infrastructure
  fullName: Microsoft.EntityFrameworkCore.Infrastructure
- uid: Microsoft.EntityFrameworkCore.ValueGeneration.IValueGeneratorCache
  commentId: T:Microsoft.EntityFrameworkCore.ValueGeneration.IValueGeneratorCache
  parent: Microsoft.EntityFrameworkCore.ValueGeneration
  isExternal: false
  name: IValueGeneratorCache
  nameWithType: IValueGeneratorCache
  fullName: Microsoft.EntityFrameworkCore.ValueGeneration.IValueGeneratorCache
- uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ValueGeneratorCache
  commentId: P:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ValueGeneratorCache
  parent: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices
  isExternal: false
  name: ValueGeneratorCache
  nameWithType: IDatabaseProviderServices.ValueGeneratorCache
  fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ValueGeneratorCache
- uid: Microsoft.EntityFrameworkCore.Query.IQueryContextFactory
  commentId: T:Microsoft.EntityFrameworkCore.Query.IQueryContextFactory
  parent: Microsoft.EntityFrameworkCore.Query
  isExternal: false
  name: IQueryContextFactory
  nameWithType: IQueryContextFactory
  fullName: Microsoft.EntityFrameworkCore.Query.IQueryContextFactory
- uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.QueryContextFactory
  commentId: P:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.QueryContextFactory
  parent: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices
  isExternal: false
  name: QueryContextFactory
  nameWithType: IDatabaseProviderServices.QueryContextFactory
  fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.QueryContextFactory
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.IEntityQueryableExpressionVisitorFactory
  commentId: T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.IEntityQueryableExpressionVisitorFactory
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
  isExternal: false
  name: IEntityQueryableExpressionVisitorFactory
  nameWithType: IEntityQueryableExpressionVisitorFactory
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.IEntityQueryableExpressionVisitorFactory
- uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.EntityQueryableExpressionVisitorFactory
  commentId: P:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.EntityQueryableExpressionVisitorFactory
  parent: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices
  isExternal: false
  name: EntityQueryableExpressionVisitorFactory
  nameWithType: IDatabaseProviderServices.EntityQueryableExpressionVisitorFactory
  fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.EntityQueryableExpressionVisitorFactory
- uid: Microsoft.EntityFrameworkCore.Query.IEntityQueryModelVisitorFactory
  commentId: T:Microsoft.EntityFrameworkCore.Query.IEntityQueryModelVisitorFactory
  parent: Microsoft.EntityFrameworkCore.Query
  isExternal: false
  name: IEntityQueryModelVisitorFactory
  nameWithType: IEntityQueryModelVisitorFactory
  fullName: Microsoft.EntityFrameworkCore.Query.IEntityQueryModelVisitorFactory
- uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.EntityQueryModelVisitorFactory
  commentId: P:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.EntityQueryModelVisitorFactory
  parent: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices
  isExternal: false
  name: EntityQueryModelVisitorFactory
  nameWithType: IDatabaseProviderServices.EntityQueryModelVisitorFactory
  fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.EntityQueryModelVisitorFactory
- uid: Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IExecutionStrategyFactory
  nameWithType: IExecutionStrategyFactory
  fullName: Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory
- uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ExecutionStrategyFactory
  commentId: P:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ExecutionStrategyFactory
  parent: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices
  isExternal: false
  name: ExecutionStrategyFactory
  nameWithType: IDatabaseProviderServices.ExecutionStrategyFactory
  fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ExecutionStrategyFactory
