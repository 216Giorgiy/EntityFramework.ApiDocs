### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest
  commentId: T:Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest
  id: RelationalTypeMapperTest
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.Storage
  children:
  - Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.Binary_FK_max_length_is_preferred_if_specified
  - Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.Binary_key_with_max_length_is_picked_up_by_FK
  - Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.Does_default_mapping_for_unrecognized_store_type
  - Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.Does_simple_mapping_from_CLR_type
  - Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.Does_simple_mapping_from_name
  - Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.Does_simple_mapping_from_nullable_CLR_type
  - Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.Does_type_mapping_from_btye_array_greater_than_unbounded_max
  - Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.Does_type_mapping_from_btye_array_with_MaxLength
  - Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.Does_type_mapping_from_btye_array_with_no_MaxLength
  - Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.Does_type_mapping_from_named_binary_with_no_MaxLength
  - Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.Does_type_mapping_from_named_string_with_MaxLength
  - Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.Does_type_mapping_from_named_string_with_no_MaxLength
  - Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.Does_type_mapping_from_string_with_MaxLength
  - Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.Does_type_mapping_from_string_with_MaxLength_greater_than_unbounded_max
  - Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.Does_type_mapping_from_string_with_no_MaxLength
  - Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.Key_store_type_if_preferred_if_specified
  - Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.Key_with_store_type_is_picked_up_by_FK
  - Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.String_FK_max_length_is_preferred_if_specified
  - Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.String_FK_unicode_is_preferred_if_specified
  - Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.String_key_with_max_length_is_picked_up_by_FK
  - Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.String_key_with_unicode_is_picked_up_by_FK
  langs:
  - csharp
  - vb
  name: RelationalTypeMapperTest
  nameWithType: RelationalTypeMapperTest
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest
  type: Class
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Storage/RelationalTypeMapperTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: RelationalTypeMapperTest
    path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Storage/RelationalTypeMapperTest.cs
    startLine: 9
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Tests.Storage
  syntax:
    content: 'public class RelationalTypeMapperTest : RelationalTypeMapperTestBase'
    content.vb: >-
      Public Class RelationalTypeMapperTest
          Inherits RelationalTypeMapperTestBase
  inheritance:
  - System.Object
  - Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTestBase
  inheritedMembers:
  - Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTestBase.CreateEntityType
  - Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTestBase.CreateModel
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.Does_simple_mapping_from_CLR_type
  commentId: M:Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.Does_simple_mapping_from_CLR_type
  id: Does_simple_mapping_from_CLR_type
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest
  langs:
  - csharp
  - vb
  name: Does_simple_mapping_from_CLR_type()
  nameWithType: RelationalTypeMapperTest.Does_simple_mapping_from_CLR_type()
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.Does_simple_mapping_from_CLR_type()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Storage/RelationalTypeMapperTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Does_simple_mapping_from_CLR_type
    path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Storage/RelationalTypeMapperTest.cs
    startLine: 11
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Tests.Storage
  syntax:
    content: >-
      [Fact]

      public void Does_simple_mapping_from_CLR_type()
    content.vb: >-
      <Fact>

      Public Sub Does_simple_mapping_from_CLR_type
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.Does_simple_mapping_from_nullable_CLR_type
  commentId: M:Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.Does_simple_mapping_from_nullable_CLR_type
  id: Does_simple_mapping_from_nullable_CLR_type
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest
  langs:
  - csharp
  - vb
  name: Does_simple_mapping_from_nullable_CLR_type()
  nameWithType: RelationalTypeMapperTest.Does_simple_mapping_from_nullable_CLR_type()
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.Does_simple_mapping_from_nullable_CLR_type()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Storage/RelationalTypeMapperTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Does_simple_mapping_from_nullable_CLR_type
    path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Storage/RelationalTypeMapperTest.cs
    startLine: 17
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Tests.Storage
  syntax:
    content: >-
      [Fact]

      public void Does_simple_mapping_from_nullable_CLR_type()
    content.vb: >-
      <Fact>

      Public Sub Does_simple_mapping_from_nullable_CLR_type
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.Does_type_mapping_from_string_with_no_MaxLength
  commentId: M:Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.Does_type_mapping_from_string_with_no_MaxLength
  id: Does_type_mapping_from_string_with_no_MaxLength
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest
  langs:
  - csharp
  - vb
  name: Does_type_mapping_from_string_with_no_MaxLength()
  nameWithType: RelationalTypeMapperTest.Does_type_mapping_from_string_with_no_MaxLength()
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.Does_type_mapping_from_string_with_no_MaxLength()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Storage/RelationalTypeMapperTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Does_type_mapping_from_string_with_no_MaxLength
    path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Storage/RelationalTypeMapperTest.cs
    startLine: 23
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Tests.Storage
  syntax:
    content: >-
      [Fact]

      public void Does_type_mapping_from_string_with_no_MaxLength()
    content.vb: >-
      <Fact>

      Public Sub Does_type_mapping_from_string_with_no_MaxLength
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.Does_type_mapping_from_string_with_MaxLength
  commentId: M:Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.Does_type_mapping_from_string_with_MaxLength
  id: Does_type_mapping_from_string_with_MaxLength
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest
  langs:
  - csharp
  - vb
  name: Does_type_mapping_from_string_with_MaxLength()
  nameWithType: RelationalTypeMapperTest.Does_type_mapping_from_string_with_MaxLength()
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.Does_type_mapping_from_string_with_MaxLength()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Storage/RelationalTypeMapperTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Does_type_mapping_from_string_with_MaxLength
    path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Storage/RelationalTypeMapperTest.cs
    startLine: 31
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Tests.Storage
  syntax:
    content: >-
      [Fact]

      public void Does_type_mapping_from_string_with_MaxLength()
    content.vb: >-
      <Fact>

      Public Sub Does_type_mapping_from_string_with_MaxLength
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.Does_type_mapping_from_string_with_MaxLength_greater_than_unbounded_max
  commentId: M:Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.Does_type_mapping_from_string_with_MaxLength_greater_than_unbounded_max
  id: Does_type_mapping_from_string_with_MaxLength_greater_than_unbounded_max
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest
  langs:
  - csharp
  - vb
  name: Does_type_mapping_from_string_with_MaxLength_greater_than_unbounded_max()
  nameWithType: RelationalTypeMapperTest.Does_type_mapping_from_string_with_MaxLength_greater_than_unbounded_max()
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.Does_type_mapping_from_string_with_MaxLength_greater_than_unbounded_max()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Storage/RelationalTypeMapperTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Does_type_mapping_from_string_with_MaxLength_greater_than_unbounded_max
    path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Storage/RelationalTypeMapperTest.cs
    startLine: 40
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Tests.Storage
  syntax:
    content: >-
      [Fact]

      public void Does_type_mapping_from_string_with_MaxLength_greater_than_unbounded_max()
    content.vb: >-
      <Fact>

      Public Sub Does_type_mapping_from_string_with_MaxLength_greater_than_unbounded_max
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.Does_type_mapping_from_btye_array_with_no_MaxLength
  commentId: M:Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.Does_type_mapping_from_btye_array_with_no_MaxLength
  id: Does_type_mapping_from_btye_array_with_no_MaxLength
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest
  langs:
  - csharp
  - vb
  name: Does_type_mapping_from_btye_array_with_no_MaxLength()
  nameWithType: RelationalTypeMapperTest.Does_type_mapping_from_btye_array_with_no_MaxLength()
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.Does_type_mapping_from_btye_array_with_no_MaxLength()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Storage/RelationalTypeMapperTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Does_type_mapping_from_btye_array_with_no_MaxLength
    path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Storage/RelationalTypeMapperTest.cs
    startLine: 48
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Tests.Storage
  syntax:
    content: >-
      [Fact]

      public void Does_type_mapping_from_btye_array_with_no_MaxLength()
    content.vb: >-
      <Fact>

      Public Sub Does_type_mapping_from_btye_array_with_no_MaxLength
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.Does_type_mapping_from_btye_array_with_MaxLength
  commentId: M:Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.Does_type_mapping_from_btye_array_with_MaxLength
  id: Does_type_mapping_from_btye_array_with_MaxLength
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest
  langs:
  - csharp
  - vb
  name: Does_type_mapping_from_btye_array_with_MaxLength()
  nameWithType: RelationalTypeMapperTest.Does_type_mapping_from_btye_array_with_MaxLength()
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.Does_type_mapping_from_btye_array_with_MaxLength()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Storage/RelationalTypeMapperTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Does_type_mapping_from_btye_array_with_MaxLength
    path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Storage/RelationalTypeMapperTest.cs
    startLine: 56
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Tests.Storage
  syntax:
    content: >-
      [Fact]

      public void Does_type_mapping_from_btye_array_with_MaxLength()
    content.vb: >-
      <Fact>

      Public Sub Does_type_mapping_from_btye_array_with_MaxLength
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.Does_type_mapping_from_btye_array_greater_than_unbounded_max
  commentId: M:Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.Does_type_mapping_from_btye_array_greater_than_unbounded_max
  id: Does_type_mapping_from_btye_array_greater_than_unbounded_max
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest
  langs:
  - csharp
  - vb
  name: Does_type_mapping_from_btye_array_greater_than_unbounded_max()
  nameWithType: RelationalTypeMapperTest.Does_type_mapping_from_btye_array_greater_than_unbounded_max()
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.Does_type_mapping_from_btye_array_greater_than_unbounded_max()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Storage/RelationalTypeMapperTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Does_type_mapping_from_btye_array_greater_than_unbounded_max
    path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Storage/RelationalTypeMapperTest.cs
    startLine: 65
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Tests.Storage
  syntax:
    content: >-
      [Fact]

      public void Does_type_mapping_from_btye_array_greater_than_unbounded_max()
    content.vb: >-
      <Fact>

      Public Sub Does_type_mapping_from_btye_array_greater_than_unbounded_max
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.Does_simple_mapping_from_name
  commentId: M:Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.Does_simple_mapping_from_name
  id: Does_simple_mapping_from_name
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest
  langs:
  - csharp
  - vb
  name: Does_simple_mapping_from_name()
  nameWithType: RelationalTypeMapperTest.Does_simple_mapping_from_name()
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.Does_simple_mapping_from_name()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Storage/RelationalTypeMapperTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Does_simple_mapping_from_name
    path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Storage/RelationalTypeMapperTest.cs
    startLine: 84
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Tests.Storage
  syntax:
    content: >-
      [Fact]

      public void Does_simple_mapping_from_name()
    content.vb: >-
      <Fact>

      Public Sub Does_simple_mapping_from_name
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.Does_default_mapping_for_unrecognized_store_type
  commentId: M:Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.Does_default_mapping_for_unrecognized_store_type
  id: Does_default_mapping_for_unrecognized_store_type
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest
  langs:
  - csharp
  - vb
  name: Does_default_mapping_for_unrecognized_store_type()
  nameWithType: RelationalTypeMapperTest.Does_default_mapping_for_unrecognized_store_type()
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.Does_default_mapping_for_unrecognized_store_type()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Storage/RelationalTypeMapperTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Does_default_mapping_for_unrecognized_store_type
    path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Storage/RelationalTypeMapperTest.cs
    startLine: 90
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Tests.Storage
  syntax:
    content: >-
      [Fact]

      public void Does_default_mapping_for_unrecognized_store_type()
    content.vb: >-
      <Fact>

      Public Sub Does_default_mapping_for_unrecognized_store_type
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.Does_type_mapping_from_named_string_with_no_MaxLength
  commentId: M:Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.Does_type_mapping_from_named_string_with_no_MaxLength
  id: Does_type_mapping_from_named_string_with_no_MaxLength
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest
  langs:
  - csharp
  - vb
  name: Does_type_mapping_from_named_string_with_no_MaxLength()
  nameWithType: RelationalTypeMapperTest.Does_type_mapping_from_named_string_with_no_MaxLength()
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.Does_type_mapping_from_named_string_with_no_MaxLength()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Storage/RelationalTypeMapperTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Does_type_mapping_from_named_string_with_no_MaxLength
    path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Storage/RelationalTypeMapperTest.cs
    startLine: 96
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Tests.Storage
  syntax:
    content: >-
      [Fact]

      public void Does_type_mapping_from_named_string_with_no_MaxLength()
    content.vb: >-
      <Fact>

      Public Sub Does_type_mapping_from_named_string_with_no_MaxLength
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.Does_type_mapping_from_named_string_with_MaxLength
  commentId: M:Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.Does_type_mapping_from_named_string_with_MaxLength
  id: Does_type_mapping_from_named_string_with_MaxLength
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest
  langs:
  - csharp
  - vb
  name: Does_type_mapping_from_named_string_with_MaxLength()
  nameWithType: RelationalTypeMapperTest.Does_type_mapping_from_named_string_with_MaxLength()
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.Does_type_mapping_from_named_string_with_MaxLength()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Storage/RelationalTypeMapperTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Does_type_mapping_from_named_string_with_MaxLength
    path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Storage/RelationalTypeMapperTest.cs
    startLine: 104
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Tests.Storage
  syntax:
    content: >-
      [Fact]

      public void Does_type_mapping_from_named_string_with_MaxLength()
    content.vb: >-
      <Fact>

      Public Sub Does_type_mapping_from_named_string_with_MaxLength
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.Does_type_mapping_from_named_binary_with_no_MaxLength
  commentId: M:Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.Does_type_mapping_from_named_binary_with_no_MaxLength
  id: Does_type_mapping_from_named_binary_with_no_MaxLength
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest
  langs:
  - csharp
  - vb
  name: Does_type_mapping_from_named_binary_with_no_MaxLength()
  nameWithType: RelationalTypeMapperTest.Does_type_mapping_from_named_binary_with_no_MaxLength()
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.Does_type_mapping_from_named_binary_with_no_MaxLength()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Storage/RelationalTypeMapperTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Does_type_mapping_from_named_binary_with_no_MaxLength
    path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Storage/RelationalTypeMapperTest.cs
    startLine: 112
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Tests.Storage
  syntax:
    content: >-
      [Fact]

      public void Does_type_mapping_from_named_binary_with_no_MaxLength()
    content.vb: >-
      <Fact>

      Public Sub Does_type_mapping_from_named_binary_with_no_MaxLength
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.Key_with_store_type_is_picked_up_by_FK
  commentId: M:Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.Key_with_store_type_is_picked_up_by_FK
  id: Key_with_store_type_is_picked_up_by_FK
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest
  langs:
  - csharp
  - vb
  name: Key_with_store_type_is_picked_up_by_FK()
  nameWithType: RelationalTypeMapperTest.Key_with_store_type_is_picked_up_by_FK()
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.Key_with_store_type_is_picked_up_by_FK()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Storage/RelationalTypeMapperTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Key_with_store_type_is_picked_up_by_FK
    path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Storage/RelationalTypeMapperTest.cs
    startLine: 128
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Tests.Storage
  syntax:
    content: >-
      [Fact]

      public void Key_with_store_type_is_picked_up_by_FK()
    content.vb: >-
      <Fact>

      Public Sub Key_with_store_type_is_picked_up_by_FK
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.String_key_with_max_length_is_picked_up_by_FK
  commentId: M:Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.String_key_with_max_length_is_picked_up_by_FK
  id: String_key_with_max_length_is_picked_up_by_FK
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest
  langs:
  - csharp
  - vb
  name: String_key_with_max_length_is_picked_up_by_FK()
  nameWithType: RelationalTypeMapperTest.String_key_with_max_length_is_picked_up_by_FK()
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.String_key_with_max_length_is_picked_up_by_FK()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Storage/RelationalTypeMapperTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: String_key_with_max_length_is_picked_up_by_FK
    path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Storage/RelationalTypeMapperTest.cs
    startLine: 143
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Tests.Storage
  syntax:
    content: >-
      [Fact]

      public void String_key_with_max_length_is_picked_up_by_FK()
    content.vb: >-
      <Fact>

      Public Sub String_key_with_max_length_is_picked_up_by_FK
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.Binary_key_with_max_length_is_picked_up_by_FK
  commentId: M:Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.Binary_key_with_max_length_is_picked_up_by_FK
  id: Binary_key_with_max_length_is_picked_up_by_FK
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest
  langs:
  - csharp
  - vb
  name: Binary_key_with_max_length_is_picked_up_by_FK()
  nameWithType: RelationalTypeMapperTest.Binary_key_with_max_length_is_picked_up_by_FK()
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.Binary_key_with_max_length_is_picked_up_by_FK()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Storage/RelationalTypeMapperTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Binary_key_with_max_length_is_picked_up_by_FK
    path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Storage/RelationalTypeMapperTest.cs
    startLine: 158
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Tests.Storage
  syntax:
    content: >-
      [Fact]

      public void Binary_key_with_max_length_is_picked_up_by_FK()
    content.vb: >-
      <Fact>

      Public Sub Binary_key_with_max_length_is_picked_up_by_FK
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.String_key_with_unicode_is_picked_up_by_FK
  commentId: M:Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.String_key_with_unicode_is_picked_up_by_FK
  id: String_key_with_unicode_is_picked_up_by_FK
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest
  langs:
  - csharp
  - vb
  name: String_key_with_unicode_is_picked_up_by_FK()
  nameWithType: RelationalTypeMapperTest.String_key_with_unicode_is_picked_up_by_FK()
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.String_key_with_unicode_is_picked_up_by_FK()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Storage/RelationalTypeMapperTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: String_key_with_unicode_is_picked_up_by_FK
    path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Storage/RelationalTypeMapperTest.cs
    startLine: 173
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Tests.Storage
  syntax:
    content: >-
      [Fact]

      public void String_key_with_unicode_is_picked_up_by_FK()
    content.vb: >-
      <Fact>

      Public Sub String_key_with_unicode_is_picked_up_by_FK
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.Key_store_type_if_preferred_if_specified
  commentId: M:Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.Key_store_type_if_preferred_if_specified
  id: Key_store_type_if_preferred_if_specified
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest
  langs:
  - csharp
  - vb
  name: Key_store_type_if_preferred_if_specified()
  nameWithType: RelationalTypeMapperTest.Key_store_type_if_preferred_if_specified()
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.Key_store_type_if_preferred_if_specified()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Storage/RelationalTypeMapperTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Key_store_type_if_preferred_if_specified
    path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Storage/RelationalTypeMapperTest.cs
    startLine: 188
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Tests.Storage
  syntax:
    content: >-
      [Fact]

      public void Key_store_type_if_preferred_if_specified()
    content.vb: >-
      <Fact>

      Public Sub Key_store_type_if_preferred_if_specified
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.String_FK_max_length_is_preferred_if_specified
  commentId: M:Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.String_FK_max_length_is_preferred_if_specified
  id: String_FK_max_length_is_preferred_if_specified
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest
  langs:
  - csharp
  - vb
  name: String_FK_max_length_is_preferred_if_specified()
  nameWithType: RelationalTypeMapperTest.String_FK_max_length_is_preferred_if_specified()
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.String_FK_max_length_is_preferred_if_specified()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Storage/RelationalTypeMapperTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: String_FK_max_length_is_preferred_if_specified
    path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Storage/RelationalTypeMapperTest.cs
    startLine: 203
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Tests.Storage
  syntax:
    content: >-
      [Fact]

      public void String_FK_max_length_is_preferred_if_specified()
    content.vb: >-
      <Fact>

      Public Sub String_FK_max_length_is_preferred_if_specified
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.Binary_FK_max_length_is_preferred_if_specified
  commentId: M:Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.Binary_FK_max_length_is_preferred_if_specified
  id: Binary_FK_max_length_is_preferred_if_specified
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest
  langs:
  - csharp
  - vb
  name: Binary_FK_max_length_is_preferred_if_specified()
  nameWithType: RelationalTypeMapperTest.Binary_FK_max_length_is_preferred_if_specified()
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.Binary_FK_max_length_is_preferred_if_specified()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Storage/RelationalTypeMapperTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Binary_FK_max_length_is_preferred_if_specified
    path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Storage/RelationalTypeMapperTest.cs
    startLine: 218
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Tests.Storage
  syntax:
    content: >-
      [Fact]

      public void Binary_FK_max_length_is_preferred_if_specified()
    content.vb: >-
      <Fact>

      Public Sub Binary_FK_max_length_is_preferred_if_specified
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.String_FK_unicode_is_preferred_if_specified
  commentId: M:Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.String_FK_unicode_is_preferred_if_specified
  id: String_FK_unicode_is_preferred_if_specified
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest
  langs:
  - csharp
  - vb
  name: String_FK_unicode_is_preferred_if_specified()
  nameWithType: RelationalTypeMapperTest.String_FK_unicode_is_preferred_if_specified()
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTest.String_FK_unicode_is_preferred_if_specified()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Storage/RelationalTypeMapperTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: String_FK_unicode_is_preferred_if_specified
    path: test/Microsoft.EntityFrameworkCore.Relational.Tests/Storage/RelationalTypeMapperTest.cs
    startLine: 233
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Tests.Storage
  syntax:
    content: >-
      [Fact]

      public void String_FK_unicode_is_preferred_if_specified()
    content.vb: >-
      <Fact>

      Public Sub String_FK_unicode_is_preferred_if_specified
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.Storage
  commentId: N:Microsoft.EntityFrameworkCore.Relational.Tests.Storage
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Relational.Tests.Storage
  nameWithType: Microsoft.EntityFrameworkCore.Relational.Tests.Storage
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Storage
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTestBase
  commentId: T:Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTestBase
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.Storage
  isExternal: false
  name: RelationalTypeMapperTestBase
  nameWithType: RelationalTypeMapperTestBase
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTestBase
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTestBase.CreateEntityType
  commentId: M:Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTestBase.CreateEntityType
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTestBase
  isExternal: false
  name: CreateEntityType()
  nameWithType: RelationalTypeMapperTestBase.CreateEntityType()
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTestBase.CreateEntityType()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTestBase.CreateEntityType
    name: CreateEntityType
    nameWithType: RelationalTypeMapperTestBase.CreateEntityType
    fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTestBase.CreateEntityType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTestBase.CreateEntityType
    name: CreateEntityType
    nameWithType: RelationalTypeMapperTestBase.CreateEntityType
    fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTestBase.CreateEntityType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTestBase.CreateModel
  commentId: M:Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTestBase.CreateModel
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTestBase
  isExternal: false
  name: CreateModel()
  nameWithType: RelationalTypeMapperTestBase.CreateModel()
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTestBase.CreateModel()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTestBase.CreateModel
    name: CreateModel
    nameWithType: RelationalTypeMapperTestBase.CreateModel
    fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTestBase.CreateModel
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTestBase.CreateModel
    name: CreateModel
    nameWithType: RelationalTypeMapperTestBase.CreateModel
    fullName: Microsoft.EntityFrameworkCore.Relational.Tests.Storage.RelationalTypeMapperTestBase.CreateModel
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
