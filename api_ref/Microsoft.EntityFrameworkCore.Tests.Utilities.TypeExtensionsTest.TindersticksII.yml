### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TindersticksII
  commentId: T:Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TindersticksII
  id: TypeExtensionsTest.TindersticksII
  parent: Microsoft.EntityFrameworkCore.Tests.Utilities
  children:
  - Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TindersticksII.CherryBlossoms
  - Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TindersticksII.ElDiabloEnElOjo
  - Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TindersticksII.Mistakes
  - Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TindersticksII.NoMoreAffairs
  - Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TindersticksII.Seaweed
  - Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TindersticksII.ShesGone
  - Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TindersticksII.Singing
  - Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TindersticksII.SleepySong
  - Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TindersticksII.SnowyInFSharpMinor
  - Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TindersticksII.TalkToMe
  - Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TindersticksII.TinyTears
  - Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TindersticksII.TravellingLight
  - Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TindersticksII.VertrauenII
  langs:
  - csharp
  - vb
  name: TypeExtensionsTest.TindersticksII
  nameWithType: TypeExtensionsTest.TindersticksII
  fullName: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TindersticksII
  type: Class
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/TypeExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: TindersticksII
    path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/TypeExtensionsTest.cs
    startLine: 157
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Utilities
  syntax:
    content: public class TindersticksII
    content.vb: Public Class TindersticksII
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TindersticksII.ElDiabloEnElOjo
  commentId: P:Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TindersticksII.ElDiabloEnElOjo
  id: ElDiabloEnElOjo
  parent: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TindersticksII
  langs:
  - csharp
  - vb
  name: ElDiabloEnElOjo
  nameWithType: TypeExtensionsTest.TindersticksII.ElDiabloEnElOjo
  fullName: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TindersticksII.ElDiabloEnElOjo
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/TypeExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ElDiabloEnElOjo
    path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/TypeExtensionsTest.cs
    startLine: 159
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Utilities
  syntax:
    content: public virtual int ElDiabloEnElOjo { get; set; }
    content.vb: Public Overridable Property ElDiabloEnElOjo As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TindersticksII.TinyTears
  commentId: P:Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TindersticksII.TinyTears
  id: TinyTears
  parent: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TindersticksII
  langs:
  - csharp
  - vb
  name: TinyTears
  nameWithType: TypeExtensionsTest.TindersticksII.TinyTears
  fullName: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TindersticksII.TinyTears
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/TypeExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: TinyTears
    path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/TypeExtensionsTest.cs
    startLine: 162
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Utilities
  syntax:
    content: protected virtual int TinyTears { get; set; }
    content.vb: Protected Overridable Property TinyTears As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - protected
  - virtual
  - get
  - set
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TindersticksII.SnowyInFSharpMinor
  commentId: P:Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TindersticksII.SnowyInFSharpMinor
  id: SnowyInFSharpMinor
  parent: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TindersticksII
  langs:
  - csharp
  - vb
  name: SnowyInFSharpMinor
  nameWithType: TypeExtensionsTest.TindersticksII.SnowyInFSharpMinor
  fullName: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TindersticksII.SnowyInFSharpMinor
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/TypeExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: SnowyInFSharpMinor
    path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/TypeExtensionsTest.cs
    startLine: 163
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Utilities
  syntax:
    content: public virtual int SnowyInFSharpMinor { get; }
    content.vb: Public Overridable ReadOnly Property SnowyInFSharpMinor As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TindersticksII.Seaweed
  commentId: P:Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TindersticksII.Seaweed
  id: Seaweed
  parent: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TindersticksII
  langs:
  - csharp
  - vb
  name: Seaweed
  nameWithType: TypeExtensionsTest.TindersticksII.Seaweed
  fullName: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TindersticksII.Seaweed
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/TypeExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Seaweed
    path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/TypeExtensionsTest.cs
    startLine: 164
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Utilities
  syntax:
    content: public virtual int Seaweed { set; }
    content.vb: Public Overridable WriteOnly Property Seaweed As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - virtual
  - set
  modifiers.vb:
  - Public
  - Overridable
  - WriteOnly
- uid: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TindersticksII.VertrauenII
  commentId: P:Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TindersticksII.VertrauenII
  id: VertrauenII
  parent: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TindersticksII
  langs:
  - csharp
  - vb
  name: VertrauenII
  nameWithType: TypeExtensionsTest.TindersticksII.VertrauenII
  fullName: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TindersticksII.VertrauenII
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/TypeExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: VertrauenII
    path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/TypeExtensionsTest.cs
    startLine: 165
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Utilities
  syntax:
    content: public virtual int VertrauenII { get; protected set; }
    content.vb: Public Overridable Property VertrauenII As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - virtual
  - get
  - protected set
  modifiers.vb:
  - Public
  - Overridable
  - Get
  - Protected Set
- uid: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TindersticksII.TalkToMe
  commentId: P:Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TindersticksII.TalkToMe
  id: TalkToMe
  parent: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TindersticksII
  langs:
  - csharp
  - vb
  name: TalkToMe
  nameWithType: TypeExtensionsTest.TindersticksII.TalkToMe
  fullName: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TindersticksII.TalkToMe
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/TypeExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: TalkToMe
    path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/TypeExtensionsTest.cs
    startLine: 166
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Utilities
  syntax:
    content: public virtual int TalkToMe { protected get; set; }
    content.vb: Public Overridable Property TalkToMe As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - virtual
  - protected get
  - set
  modifiers.vb:
  - Public
  - Overridable
  - Protected Get
  - Set
- uid: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TindersticksII.NoMoreAffairs
  commentId: P:Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TindersticksII.NoMoreAffairs
  id: NoMoreAffairs
  parent: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TindersticksII
  langs:
  - csharp
  - vb
  name: NoMoreAffairs
  nameWithType: TypeExtensionsTest.TindersticksII.NoMoreAffairs
  fullName: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TindersticksII.NoMoreAffairs
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/TypeExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: NoMoreAffairs
    path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/TypeExtensionsTest.cs
    startLine: 168
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Utilities
  syntax:
    content: public virtual int NoMoreAffairs { get; }
    content.vb: Public Overridable ReadOnly Property NoMoreAffairs As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TindersticksII.Singing
  commentId: P:Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TindersticksII.Singing
  id: Singing
  parent: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TindersticksII
  langs:
  - csharp
  - vb
  name: Singing
  nameWithType: TypeExtensionsTest.TindersticksII.Singing
  fullName: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TindersticksII.Singing
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/TypeExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Singing
    path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/TypeExtensionsTest.cs
    startLine: 170
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Utilities
  syntax:
    content: public virtual int Singing { set; }
    content.vb: Public Overridable WriteOnly Property Singing As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - virtual
  - set
  modifiers.vb:
  - Public
  - Overridable
  - WriteOnly
- uid: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TindersticksII.TravellingLight
  commentId: P:Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TindersticksII.TravellingLight
  id: TravellingLight
  parent: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TindersticksII
  langs:
  - csharp
  - vb
  name: TravellingLight
  nameWithType: TypeExtensionsTest.TindersticksII.TravellingLight
  fullName: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TindersticksII.TravellingLight
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/TypeExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: TravellingLight
    path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/TypeExtensionsTest.cs
    startLine: 176
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Utilities
  syntax:
    content: public virtual int TravellingLight { get; set; }
    content.vb: Public Overridable Property TravellingLight As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TindersticksII.CherryBlossoms
  commentId: P:Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TindersticksII.CherryBlossoms
  id: CherryBlossoms
  parent: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TindersticksII
  langs:
  - csharp
  - vb
  name: CherryBlossoms
  nameWithType: TypeExtensionsTest.TindersticksII.CherryBlossoms
  fullName: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TindersticksII.CherryBlossoms
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/TypeExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CherryBlossoms
    path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/TypeExtensionsTest.cs
    startLine: 177
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Utilities
  syntax:
    content: public int CherryBlossoms { get; set; }
    content.vb: Public Property CherryBlossoms As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TindersticksII.ShesGone
  commentId: P:Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TindersticksII.ShesGone
  id: ShesGone
  parent: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TindersticksII
  langs:
  - csharp
  - vb
  name: ShesGone
  nameWithType: TypeExtensionsTest.TindersticksII.ShesGone
  fullName: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TindersticksII.ShesGone
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/TypeExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ShesGone
    path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/TypeExtensionsTest.cs
    startLine: 178
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Utilities
  syntax:
    content: public int ShesGone { get; set; }
    content.vb: Public Property ShesGone As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TindersticksII.Mistakes
  commentId: P:Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TindersticksII.Mistakes
  id: Mistakes
  parent: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TindersticksII
  langs:
  - csharp
  - vb
  name: Mistakes
  nameWithType: TypeExtensionsTest.TindersticksII.Mistakes
  fullName: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TindersticksII.Mistakes
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/TypeExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Mistakes
    path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/TypeExtensionsTest.cs
    startLine: 179
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Utilities
  syntax:
    content: public virtual int Mistakes { get; set; }
    content.vb: Public Overridable Property Mistakes As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TindersticksII.SleepySong
  commentId: P:Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TindersticksII.SleepySong
  id: SleepySong
  parent: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TindersticksII
  langs:
  - csharp
  - vb
  name: SleepySong
  nameWithType: TypeExtensionsTest.TindersticksII.SleepySong
  fullName: Microsoft.EntityFrameworkCore.Tests.Utilities.TypeExtensionsTest.TindersticksII.SleepySong
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/TypeExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: SleepySong
    path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/TypeExtensionsTest.cs
    startLine: 180
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Utilities
  syntax:
    content: public int SleepySong { get; set; }
    content.vb: Public Property SleepySong As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.EntityFrameworkCore.Tests.Utilities
  commentId: N:Microsoft.EntityFrameworkCore.Tests.Utilities
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Tests.Utilities
  nameWithType: Microsoft.EntityFrameworkCore.Tests.Utilities
  fullName: Microsoft.EntityFrameworkCore.Tests.Utilities
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
