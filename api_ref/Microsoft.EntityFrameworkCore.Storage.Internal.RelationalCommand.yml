### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand
  commentId: T:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand
  id: RelationalCommand
  parent: Microsoft.EntityFrameworkCore.Storage.Internal
  children:
  - Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.#ctor(Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger,System.Diagnostics.DiagnosticSource,System.String,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Storage.IRelationalParameter})
  - Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.CommandText
  - Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.DiagnosticSource
  - Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.Execute(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.String,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean,System.Boolean)
  - Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.String,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean,System.Boolean,System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteNonQuery(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean)
  - Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteNonQueryAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean,System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteReader(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean)
  - Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteReaderAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean,System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteScalar(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean)
  - Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteScalarAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean,System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.Logger
  - Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.Parameters
  langs:
  - csharp
  - vb
  name: RelationalCommand
  nameWithType: RelationalCommand
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/Internal/RelationalCommand.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: RelationalCommand
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/Internal/RelationalCommand.cs
    startLine: 20
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public class RelationalCommand : IRelationalCommand'
    content.vb: >-
      Public Class RelationalCommand
          Implements IRelationalCommand
  inheritance:
  - System.Object
  implements:
  - Microsoft.EntityFrameworkCore.Storage.IRelationalCommand
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.#ctor(Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger,System.Diagnostics.DiagnosticSource,System.String,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Storage.IRelationalParameter})
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.#ctor(Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger,System.Diagnostics.DiagnosticSource,System.String,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Storage.IRelationalParameter})
  id: '#ctor(Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger,System.Diagnostics.DiagnosticSource,System.String,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Storage.IRelationalParameter})'
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand
  langs:
  - csharp
  - vb
  name: RelationalCommand(ISensitiveDataLogger, DiagnosticSource, String, IReadOnlyList<IRelationalParameter>)
  nameWithType: RelationalCommand.RelationalCommand(ISensitiveDataLogger, DiagnosticSource, String, IReadOnlyList<IRelationalParameter>)
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.RelationalCommand(Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger, System.Diagnostics.DiagnosticSource, System.String, System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Storage.IRelationalParameter>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/Internal/RelationalCommand.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/Internal/RelationalCommand.cs
    startLine: 26
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public RelationalCommand(ISensitiveDataLogger logger, DiagnosticSource diagnosticSource, string commandText, IReadOnlyList<IRelationalParameter> parameters)
    content.vb: Public Sub New(logger As ISensitiveDataLogger, diagnosticSource As DiagnosticSource, commandText As String, parameters As IReadOnlyList(Of IRelationalParameter))
    parameters:
    - id: logger
      type: Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger
    - id: diagnosticSource
      type: System.Diagnostics.DiagnosticSource
    - id: commandText
      type: System.String
    - id: parameters
      type: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Storage.IRelationalParameter}
  nameWithType.vb: RelationalCommand.RelationalCommand(ISensitiveDataLogger, DiagnosticSource, String, IReadOnlyList(Of IRelationalParameter))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.RelationalCommand(Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger, System.Diagnostics.DiagnosticSource, System.String, System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Storage.IRelationalParameter))
  name.vb: RelationalCommand(ISensitiveDataLogger, DiagnosticSource, String, IReadOnlyList(Of IRelationalParameter))
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.Logger
  commentId: P:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.Logger
  id: Logger
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand
  langs:
  - csharp
  - vb
  name: Logger
  nameWithType: RelationalCommand.Logger
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.Logger
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/Internal/RelationalCommand.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Logger
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/Internal/RelationalCommand.cs
    startLine: 47
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual ISensitiveDataLogger Logger { get; }
    content.vb: Protected Overridable ReadOnly Property Logger As ISensitiveDataLogger
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.DiagnosticSource
  commentId: P:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.DiagnosticSource
  id: DiagnosticSource
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand
  langs:
  - csharp
  - vb
  name: DiagnosticSource
  nameWithType: RelationalCommand.DiagnosticSource
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.DiagnosticSource
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/Internal/RelationalCommand.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: DiagnosticSource
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/Internal/RelationalCommand.cs
    startLine: 53
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual DiagnosticSource DiagnosticSource { get; }
    content.vb: Protected Overridable ReadOnly Property DiagnosticSource As DiagnosticSource
    parameters: []
    return:
      type: System.Diagnostics.DiagnosticSource
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.CommandText
  commentId: P:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.CommandText
  id: CommandText
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand
  langs:
  - csharp
  - vb
  name: CommandText
  nameWithType: RelationalCommand.CommandText
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.CommandText
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/Internal/RelationalCommand.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CommandText
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/Internal/RelationalCommand.cs
    startLine: 59
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual string CommandText { get; }
    content.vb: Public Overridable ReadOnly Property CommandText As String
    parameters: []
    return:
      type: System.String
  implements:
  - Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.CommandText
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.Parameters
  commentId: P:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.Parameters
  id: Parameters
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand
  langs:
  - csharp
  - vb
  name: Parameters
  nameWithType: RelationalCommand.Parameters
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.Parameters
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/Internal/RelationalCommand.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Parameters
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/Internal/RelationalCommand.cs
    startLine: 65
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual IReadOnlyList<IRelationalParameter> Parameters { get; }
    content.vb: Public Overridable ReadOnly Property Parameters As IReadOnlyList(Of IRelationalParameter)
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Storage.IRelationalParameter}
  implements:
  - Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.Parameters
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteNonQuery(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteNonQuery(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean)
  id: ExecuteNonQuery(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand
  langs:
  - csharp
  - vb
  name: ExecuteNonQuery(IRelationalConnection, IReadOnlyDictionary<String, Object>, Boolean)
  nameWithType: RelationalCommand.ExecuteNonQuery(IRelationalConnection, IReadOnlyDictionary<String, Object>, Boolean)
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteNonQuery(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection, System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/Internal/RelationalCommand.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ExecuteNonQuery
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/Internal/RelationalCommand.cs
    startLine: 71
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual int ExecuteNonQuery(IRelationalConnection connection, IReadOnlyDictionary<string, object> parameterValues = null, bool manageConnection = true)
    content.vb: Public Overridable Function ExecuteNonQuery(connection As IRelationalConnection, parameterValues As IReadOnlyDictionary(Of String, Object) = Nothing, manageConnection As Boolean = True) As Integer
    parameters:
    - id: connection
      type: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
    - id: parameterValues
      type: System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object}
    - id: manageConnection
      type: System.Boolean
    return:
      type: System.Int32
  implements:
  - Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteNonQuery(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean)
  nameWithType.vb: RelationalCommand.ExecuteNonQuery(IRelationalConnection, IReadOnlyDictionary(Of String, Object), Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteNonQuery(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection, System.Collections.Generic.IReadOnlyDictionary(Of System.String, System.Object), System.Boolean)
  name.vb: ExecuteNonQuery(IRelationalConnection, IReadOnlyDictionary(Of String, Object), Boolean)
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteNonQueryAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean,System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteNonQueryAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean,System.Threading.CancellationToken)
  id: ExecuteNonQueryAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean,System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand
  langs:
  - csharp
  - vb
  name: ExecuteNonQueryAsync(IRelationalConnection, IReadOnlyDictionary<String, Object>, Boolean, CancellationToken)
  nameWithType: RelationalCommand.ExecuteNonQueryAsync(IRelationalConnection, IReadOnlyDictionary<String, Object>, Boolean, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteNonQueryAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection, System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>, System.Boolean, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/Internal/RelationalCommand.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ExecuteNonQueryAsync
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/Internal/RelationalCommand.cs
    startLine: 86
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual Task<int> ExecuteNonQueryAsync(IRelationalConnection connection, IReadOnlyDictionary<string, object> parameterValues = null, bool manageConnection = true, CancellationToken cancellationToken = null)
    content.vb: Public Overridable Function ExecuteNonQueryAsync(connection As IRelationalConnection, parameterValues As IReadOnlyDictionary(Of String, Object) = Nothing, manageConnection As Boolean = True, cancellationToken As CancellationToken = Nothing) As Task(Of Integer)
    parameters:
    - id: connection
      type: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
    - id: parameterValues
      type: System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object}
    - id: manageConnection
      type: System.Boolean
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Int32}
  implements:
  - Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteNonQueryAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean,System.Threading.CancellationToken)
  nameWithType.vb: RelationalCommand.ExecuteNonQueryAsync(IRelationalConnection, IReadOnlyDictionary(Of String, Object), Boolean, CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteNonQueryAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection, System.Collections.Generic.IReadOnlyDictionary(Of System.String, System.Object), System.Boolean, System.Threading.CancellationToken)
  name.vb: ExecuteNonQueryAsync(IRelationalConnection, IReadOnlyDictionary(Of String, Object), Boolean, CancellationToken)
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteScalar(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteScalar(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean)
  id: ExecuteScalar(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand
  langs:
  - csharp
  - vb
  name: ExecuteScalar(IRelationalConnection, IReadOnlyDictionary<String, Object>, Boolean)
  nameWithType: RelationalCommand.ExecuteScalar(IRelationalConnection, IReadOnlyDictionary<String, Object>, Boolean)
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteScalar(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection, System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/Internal/RelationalCommand.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ExecuteScalar
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/Internal/RelationalCommand.cs
    startLine: 103
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual object ExecuteScalar(IRelationalConnection connection, IReadOnlyDictionary<string, object> parameterValues = null, bool manageConnection = true)
    content.vb: Public Overridable Function ExecuteScalar(connection As IRelationalConnection, parameterValues As IReadOnlyDictionary(Of String, Object) = Nothing, manageConnection As Boolean = True) As Object
    parameters:
    - id: connection
      type: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
    - id: parameterValues
      type: System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object}
    - id: manageConnection
      type: System.Boolean
    return:
      type: System.Object
  implements:
  - Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteScalar(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean)
  nameWithType.vb: RelationalCommand.ExecuteScalar(IRelationalConnection, IReadOnlyDictionary(Of String, Object), Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteScalar(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection, System.Collections.Generic.IReadOnlyDictionary(Of System.String, System.Object), System.Boolean)
  name.vb: ExecuteScalar(IRelationalConnection, IReadOnlyDictionary(Of String, Object), Boolean)
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteScalarAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean,System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteScalarAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean,System.Threading.CancellationToken)
  id: ExecuteScalarAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean,System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand
  langs:
  - csharp
  - vb
  name: ExecuteScalarAsync(IRelationalConnection, IReadOnlyDictionary<String, Object>, Boolean, CancellationToken)
  nameWithType: RelationalCommand.ExecuteScalarAsync(IRelationalConnection, IReadOnlyDictionary<String, Object>, Boolean, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteScalarAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection, System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>, System.Boolean, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/Internal/RelationalCommand.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ExecuteScalarAsync
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/Internal/RelationalCommand.cs
    startLine: 118
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual Task<object> ExecuteScalarAsync(IRelationalConnection connection, IReadOnlyDictionary<string, object> parameterValues = null, bool manageConnection = true, CancellationToken cancellationToken = null)
    content.vb: Public Overridable Function ExecuteScalarAsync(connection As IRelationalConnection, parameterValues As IReadOnlyDictionary(Of String, Object) = Nothing, manageConnection As Boolean = True, cancellationToken As CancellationToken = Nothing) As Task(Of Object)
    parameters:
    - id: connection
      type: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
    - id: parameterValues
      type: System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object}
    - id: manageConnection
      type: System.Boolean
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Object}
  implements:
  - Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteScalarAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean,System.Threading.CancellationToken)
  nameWithType.vb: RelationalCommand.ExecuteScalarAsync(IRelationalConnection, IReadOnlyDictionary(Of String, Object), Boolean, CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteScalarAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection, System.Collections.Generic.IReadOnlyDictionary(Of System.String, System.Object), System.Boolean, System.Threading.CancellationToken)
  name.vb: ExecuteScalarAsync(IRelationalConnection, IReadOnlyDictionary(Of String, Object), Boolean, CancellationToken)
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteReader(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteReader(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean)
  id: ExecuteReader(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand
  langs:
  - csharp
  - vb
  name: ExecuteReader(IRelationalConnection, IReadOnlyDictionary<String, Object>, Boolean)
  nameWithType: RelationalCommand.ExecuteReader(IRelationalConnection, IReadOnlyDictionary<String, Object>, Boolean)
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteReader(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection, System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/Internal/RelationalCommand.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ExecuteReader
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/Internal/RelationalCommand.cs
    startLine: 135
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual RelationalDataReader ExecuteReader(IRelationalConnection connection, IReadOnlyDictionary<string, object> parameterValues = null, bool manageConnection = true)
    content.vb: Public Overridable Function ExecuteReader(connection As IRelationalConnection, parameterValues As IReadOnlyDictionary(Of String, Object) = Nothing, manageConnection As Boolean = True) As RelationalDataReader
    parameters:
    - id: connection
      type: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
    - id: parameterValues
      type: System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object}
    - id: manageConnection
      type: System.Boolean
    return:
      type: Microsoft.EntityFrameworkCore.Storage.RelationalDataReader
  implements:
  - Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteReader(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean)
  nameWithType.vb: RelationalCommand.ExecuteReader(IRelationalConnection, IReadOnlyDictionary(Of String, Object), Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteReader(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection, System.Collections.Generic.IReadOnlyDictionary(Of System.String, System.Object), System.Boolean)
  name.vb: ExecuteReader(IRelationalConnection, IReadOnlyDictionary(Of String, Object), Boolean)
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteReaderAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean,System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteReaderAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean,System.Threading.CancellationToken)
  id: ExecuteReaderAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean,System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand
  langs:
  - csharp
  - vb
  name: ExecuteReaderAsync(IRelationalConnection, IReadOnlyDictionary<String, Object>, Boolean, CancellationToken)
  nameWithType: RelationalCommand.ExecuteReaderAsync(IRelationalConnection, IReadOnlyDictionary<String, Object>, Boolean, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteReaderAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection, System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>, System.Boolean, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/Internal/RelationalCommand.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ExecuteReaderAsync
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/Internal/RelationalCommand.cs
    startLine: 150
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual Task<RelationalDataReader> ExecuteReaderAsync(IRelationalConnection connection, IReadOnlyDictionary<string, object> parameterValues = null, bool manageConnection = true, CancellationToken cancellationToken = null)
    content.vb: Public Overridable Function ExecuteReaderAsync(connection As IRelationalConnection, parameterValues As IReadOnlyDictionary(Of String, Object) = Nothing, manageConnection As Boolean = True, cancellationToken As CancellationToken = Nothing) As Task(Of RelationalDataReader)
    parameters:
    - id: connection
      type: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
    - id: parameterValues
      type: System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object}
    - id: manageConnection
      type: System.Boolean
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Microsoft.EntityFrameworkCore.Storage.RelationalDataReader}
  implements:
  - Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteReaderAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean,System.Threading.CancellationToken)
  nameWithType.vb: RelationalCommand.ExecuteReaderAsync(IRelationalConnection, IReadOnlyDictionary(Of String, Object), Boolean, CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteReaderAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection, System.Collections.Generic.IReadOnlyDictionary(Of System.String, System.Object), System.Boolean, System.Threading.CancellationToken)
  name.vb: ExecuteReaderAsync(IRelationalConnection, IReadOnlyDictionary(Of String, Object), Boolean, CancellationToken)
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.Execute(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.String,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean,System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.Execute(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.String,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean,System.Boolean)
  id: Execute(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.String,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean,System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand
  langs:
  - csharp
  - vb
  name: Execute(IRelationalConnection, String, IReadOnlyDictionary<String, Object>, Boolean, Boolean)
  nameWithType: RelationalCommand.Execute(IRelationalConnection, String, IReadOnlyDictionary<String, Object>, Boolean, Boolean)
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.Execute(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection, System.String, System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>, System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/Internal/RelationalCommand.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Execute
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/Internal/RelationalCommand.cs
    startLine: 167
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual object Execute(IRelationalConnection connection, string executeMethod, IReadOnlyDictionary<string, object> parameterValues, bool openConnection, bool closeConnection)
    content.vb: Protected Overridable Function Execute(connection As IRelationalConnection, executeMethod As String, parameterValues As IReadOnlyDictionary(Of String, Object), openConnection As Boolean, closeConnection As Boolean) As Object
    parameters:
    - id: connection
      type: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
    - id: executeMethod
      type: System.String
    - id: parameterValues
      type: System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object}
    - id: openConnection
      type: System.Boolean
    - id: closeConnection
      type: System.Boolean
    return:
      type: System.Object
  nameWithType.vb: RelationalCommand.Execute(IRelationalConnection, String, IReadOnlyDictionary(Of String, Object), Boolean, Boolean)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.Execute(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection, System.String, System.Collections.Generic.IReadOnlyDictionary(Of System.String, System.Object), System.Boolean, System.Boolean)
  name.vb: Execute(IRelationalConnection, String, IReadOnlyDictionary(Of String, Object), Boolean, Boolean)
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.String,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean,System.Boolean,System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.String,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean,System.Boolean,System.Threading.CancellationToken)
  id: ExecuteAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.String,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean,System.Boolean,System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand
  langs:
  - csharp
  - vb
  name: ExecuteAsync(IRelationalConnection, String, IReadOnlyDictionary<String, Object>, Boolean, Boolean, CancellationToken)
  nameWithType: RelationalCommand.ExecuteAsync(IRelationalConnection, String, IReadOnlyDictionary<String, Object>, Boolean, Boolean, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection, System.String, System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>, System.Boolean, System.Boolean, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/Internal/RelationalCommand.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ExecuteAsync
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/Internal/RelationalCommand.cs
    startLine: 293
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual Task<object> ExecuteAsync(IRelationalConnection connection, string executeMethod, IReadOnlyDictionary<string, object> parameterValues, bool openConnection, bool closeConnection, CancellationToken cancellationToken = null)
    content.vb: Protected Overridable Function ExecuteAsync(connection As IRelationalConnection, executeMethod As String, parameterValues As IReadOnlyDictionary(Of String, Object), openConnection As Boolean, closeConnection As Boolean, cancellationToken As CancellationToken = Nothing) As Task(Of Object)
    parameters:
    - id: connection
      type: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
    - id: executeMethod
      type: System.String
    - id: parameterValues
      type: System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object}
    - id: openConnection
      type: System.Boolean
    - id: closeConnection
      type: System.Boolean
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Object}
  nameWithType.vb: RelationalCommand.ExecuteAsync(IRelationalConnection, String, IReadOnlyDictionary(Of String, Object), Boolean, Boolean, CancellationToken)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection, System.String, System.Collections.Generic.IReadOnlyDictionary(Of System.String, System.Object), System.Boolean, System.Boolean, System.Threading.CancellationToken)
  name.vb: ExecuteAsync(IRelationalConnection, String, IReadOnlyDictionary(Of String, Object), Boolean, Boolean, CancellationToken)
references:
- uid: Microsoft.EntityFrameworkCore.Storage.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Storage.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Storage.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Storage.Internal
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IRelationalCommand
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IRelationalCommand
  nameWithType: IRelationalCommand
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Storage
  commentId: N:Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Storage
  nameWithType: Microsoft.EntityFrameworkCore.Storage
  fullName: Microsoft.EntityFrameworkCore.Storage
- uid: Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger
  parent: Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: ISensitiveDataLogger
  nameWithType: ISensitiveDataLogger
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger
- uid: System.Diagnostics.DiagnosticSource
  commentId: T:System.Diagnostics.DiagnosticSource
  parent: System.Diagnostics
  isExternal: true
  name: DiagnosticSource
  nameWithType: DiagnosticSource
  fullName: System.Diagnostics.DiagnosticSource
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Storage.IRelationalParameter}
  commentId: T:System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Storage.IRelationalParameter}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<IRelationalParameter>
  nameWithType: IReadOnlyList<IRelationalParameter>
  fullName: System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Storage.IRelationalParameter>
  nameWithType.vb: IReadOnlyList(Of IRelationalParameter)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Storage.IRelationalParameter)
  name.vb: IReadOnlyList(Of IRelationalParameter)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalParameter
    name: IRelationalParameter
    nameWithType: IRelationalParameter
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalParameter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalParameter
    name: IRelationalParameter
    nameWithType: IRelationalParameter
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalParameter
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure
  commentId: N:Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Infrastructure
  nameWithType: Microsoft.EntityFrameworkCore.Infrastructure
  fullName: Microsoft.EntityFrameworkCore.Infrastructure
- uid: System.Diagnostics
  commentId: N:System.Diagnostics
  isExternal: false
  name: System.Diagnostics
  nameWithType: System.Diagnostics
  fullName: System.Diagnostics
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.CommandText
  commentId: P:Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.CommandText
  parent: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand
  isExternal: false
  name: CommandText
  nameWithType: IRelationalCommand.CommandText
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.CommandText
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.Parameters
  commentId: P:Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.Parameters
  parent: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand
  isExternal: false
  name: Parameters
  nameWithType: IRelationalCommand.Parameters
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.Parameters
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteNonQuery(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteNonQuery(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand
  isExternal: true
  name: ExecuteNonQuery(IRelationalConnection, IReadOnlyDictionary<String, Object>, Boolean)
  nameWithType: IRelationalCommand.ExecuteNonQuery(IRelationalConnection, IReadOnlyDictionary<String, Object>, Boolean)
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteNonQuery(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection, System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>, System.Boolean)
  nameWithType.vb: IRelationalCommand.ExecuteNonQuery(IRelationalConnection, IReadOnlyDictionary(Of String, Object), Boolean)
  fullname.vb: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteNonQuery(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection, System.Collections.Generic.IReadOnlyDictionary(Of System.String, System.Object), System.Boolean)
  name.vb: ExecuteNonQuery(IRelationalConnection, IReadOnlyDictionary(Of String, Object), Boolean)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteNonQuery(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean)
    name: ExecuteNonQuery
    nameWithType: IRelationalCommand.ExecuteNonQuery
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteNonQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
    name: IRelationalConnection
    nameWithType: IRelationalConnection
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteNonQuery(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean)
    name: ExecuteNonQuery
    nameWithType: IRelationalCommand.ExecuteNonQuery
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteNonQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
    name: IRelationalConnection
    nameWithType: IRelationalConnection
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IRelationalConnection
  nameWithType: IRelationalConnection
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
- uid: System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyDictionary`2
  name: IReadOnlyDictionary<String, Object>
  nameWithType: IReadOnlyDictionary<String, Object>
  fullName: System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>
  nameWithType.vb: IReadOnlyDictionary(Of String, Object)
  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of System.String, System.Object)
  name.vb: IReadOnlyDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.IReadOnlyDictionary`2
  commentId: T:System.Collections.Generic.IReadOnlyDictionary`2
  isExternal: true
  name: IReadOnlyDictionary<TKey, TValue>
  nameWithType: IReadOnlyDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>
  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue)
  name.vb: IReadOnlyDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteNonQueryAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean,System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteNonQueryAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean,System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand
  isExternal: true
  name: ExecuteNonQueryAsync(IRelationalConnection, IReadOnlyDictionary<String, Object>, Boolean, CancellationToken)
  nameWithType: IRelationalCommand.ExecuteNonQueryAsync(IRelationalConnection, IReadOnlyDictionary<String, Object>, Boolean, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteNonQueryAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection, System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>, System.Boolean, System.Threading.CancellationToken)
  nameWithType.vb: IRelationalCommand.ExecuteNonQueryAsync(IRelationalConnection, IReadOnlyDictionary(Of String, Object), Boolean, CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteNonQueryAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection, System.Collections.Generic.IReadOnlyDictionary(Of System.String, System.Object), System.Boolean, System.Threading.CancellationToken)
  name.vb: ExecuteNonQueryAsync(IRelationalConnection, IReadOnlyDictionary(Of String, Object), Boolean, CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteNonQueryAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean,System.Threading.CancellationToken)
    name: ExecuteNonQueryAsync
    nameWithType: IRelationalCommand.ExecuteNonQueryAsync
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteNonQueryAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
    name: IRelationalConnection
    nameWithType: IRelationalConnection
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteNonQueryAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean,System.Threading.CancellationToken)
    name: ExecuteNonQueryAsync
    nameWithType: IRelationalCommand.ExecuteNonQueryAsync
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteNonQueryAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
    name: IRelationalConnection
    nameWithType: IRelationalConnection
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: T:System.Threading.Tasks.Task{System.Int32}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Int32>
  nameWithType: Task<Int32>
  fullName: System.Threading.Tasks.Task<System.Int32>
  nameWithType.vb: Task(Of Int32)
  fullname.vb: System.Threading.Tasks.Task(Of System.Int32)
  name.vb: Task(Of Int32)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteScalar(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteScalar(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand
  isExternal: true
  name: ExecuteScalar(IRelationalConnection, IReadOnlyDictionary<String, Object>, Boolean)
  nameWithType: IRelationalCommand.ExecuteScalar(IRelationalConnection, IReadOnlyDictionary<String, Object>, Boolean)
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteScalar(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection, System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>, System.Boolean)
  nameWithType.vb: IRelationalCommand.ExecuteScalar(IRelationalConnection, IReadOnlyDictionary(Of String, Object), Boolean)
  fullname.vb: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteScalar(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection, System.Collections.Generic.IReadOnlyDictionary(Of System.String, System.Object), System.Boolean)
  name.vb: ExecuteScalar(IRelationalConnection, IReadOnlyDictionary(Of String, Object), Boolean)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteScalar(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean)
    name: ExecuteScalar
    nameWithType: IRelationalCommand.ExecuteScalar
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteScalar
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
    name: IRelationalConnection
    nameWithType: IRelationalConnection
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteScalar(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean)
    name: ExecuteScalar
    nameWithType: IRelationalCommand.ExecuteScalar
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteScalar
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
    name: IRelationalConnection
    nameWithType: IRelationalConnection
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteScalarAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean,System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteScalarAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean,System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand
  isExternal: true
  name: ExecuteScalarAsync(IRelationalConnection, IReadOnlyDictionary<String, Object>, Boolean, CancellationToken)
  nameWithType: IRelationalCommand.ExecuteScalarAsync(IRelationalConnection, IReadOnlyDictionary<String, Object>, Boolean, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteScalarAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection, System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>, System.Boolean, System.Threading.CancellationToken)
  nameWithType.vb: IRelationalCommand.ExecuteScalarAsync(IRelationalConnection, IReadOnlyDictionary(Of String, Object), Boolean, CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteScalarAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection, System.Collections.Generic.IReadOnlyDictionary(Of System.String, System.Object), System.Boolean, System.Threading.CancellationToken)
  name.vb: ExecuteScalarAsync(IRelationalConnection, IReadOnlyDictionary(Of String, Object), Boolean, CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteScalarAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean,System.Threading.CancellationToken)
    name: ExecuteScalarAsync
    nameWithType: IRelationalCommand.ExecuteScalarAsync
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteScalarAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
    name: IRelationalConnection
    nameWithType: IRelationalConnection
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteScalarAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean,System.Threading.CancellationToken)
    name: ExecuteScalarAsync
    nameWithType: IRelationalCommand.ExecuteScalarAsync
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteScalarAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
    name: IRelationalConnection
    nameWithType: IRelationalConnection
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Object}
  commentId: T:System.Threading.Tasks.Task{System.Object}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Object>
  nameWithType: Task<Object>
  fullName: System.Threading.Tasks.Task<System.Object>
  nameWithType.vb: Task(Of Object)
  fullname.vb: System.Threading.Tasks.Task(Of System.Object)
  name.vb: Task(Of Object)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteReader(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteReader(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand
  isExternal: true
  name: ExecuteReader(IRelationalConnection, IReadOnlyDictionary<String, Object>, Boolean)
  nameWithType: IRelationalCommand.ExecuteReader(IRelationalConnection, IReadOnlyDictionary<String, Object>, Boolean)
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteReader(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection, System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>, System.Boolean)
  nameWithType.vb: IRelationalCommand.ExecuteReader(IRelationalConnection, IReadOnlyDictionary(Of String, Object), Boolean)
  fullname.vb: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteReader(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection, System.Collections.Generic.IReadOnlyDictionary(Of System.String, System.Object), System.Boolean)
  name.vb: ExecuteReader(IRelationalConnection, IReadOnlyDictionary(Of String, Object), Boolean)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteReader(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean)
    name: ExecuteReader
    nameWithType: IRelationalCommand.ExecuteReader
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteReader
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
    name: IRelationalConnection
    nameWithType: IRelationalConnection
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteReader(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean)
    name: ExecuteReader
    nameWithType: IRelationalCommand.ExecuteReader
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteReader
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
    name: IRelationalConnection
    nameWithType: IRelationalConnection
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalDataReader
  commentId: T:Microsoft.EntityFrameworkCore.Storage.RelationalDataReader
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: RelationalDataReader
  nameWithType: RelationalDataReader
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalDataReader
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteReaderAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean,System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteReaderAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean,System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand
  isExternal: true
  name: ExecuteReaderAsync(IRelationalConnection, IReadOnlyDictionary<String, Object>, Boolean, CancellationToken)
  nameWithType: IRelationalCommand.ExecuteReaderAsync(IRelationalConnection, IReadOnlyDictionary<String, Object>, Boolean, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteReaderAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection, System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>, System.Boolean, System.Threading.CancellationToken)
  nameWithType.vb: IRelationalCommand.ExecuteReaderAsync(IRelationalConnection, IReadOnlyDictionary(Of String, Object), Boolean, CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteReaderAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection, System.Collections.Generic.IReadOnlyDictionary(Of System.String, System.Object), System.Boolean, System.Threading.CancellationToken)
  name.vb: ExecuteReaderAsync(IRelationalConnection, IReadOnlyDictionary(Of String, Object), Boolean, CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteReaderAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean,System.Threading.CancellationToken)
    name: ExecuteReaderAsync
    nameWithType: IRelationalCommand.ExecuteReaderAsync
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteReaderAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
    name: IRelationalConnection
    nameWithType: IRelationalConnection
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteReaderAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean,System.Threading.CancellationToken)
    name: ExecuteReaderAsync
    nameWithType: IRelationalCommand.ExecuteReaderAsync
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteReaderAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
    name: IRelationalConnection
    nameWithType: IRelationalConnection
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{Microsoft.EntityFrameworkCore.Storage.RelationalDataReader}
  commentId: T:System.Threading.Tasks.Task{Microsoft.EntityFrameworkCore.Storage.RelationalDataReader}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<RelationalDataReader>
  nameWithType: Task<RelationalDataReader>
  fullName: System.Threading.Tasks.Task<Microsoft.EntityFrameworkCore.Storage.RelationalDataReader>
  nameWithType.vb: Task(Of RelationalDataReader)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.EntityFrameworkCore.Storage.RelationalDataReader)
  name.vb: Task(Of RelationalDataReader)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalDataReader
    name: RelationalDataReader
    nameWithType: RelationalDataReader
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalDataReader
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalDataReader
    name: RelationalDataReader
    nameWithType: RelationalDataReader
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalDataReader
  - name: )
    nameWithType: )
    fullName: )
