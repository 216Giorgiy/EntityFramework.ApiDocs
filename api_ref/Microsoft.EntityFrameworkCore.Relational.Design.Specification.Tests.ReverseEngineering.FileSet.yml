### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.FileSet
  commentId: T:Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.FileSet
  id: FileSet
  parent: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering
  children:
  - Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.FileSet.#ctor(Microsoft.EntityFrameworkCore.Scaffolding.Internal.IFileService,System.String)
  - Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.FileSet.#ctor(Microsoft.EntityFrameworkCore.Scaffolding.Internal.IFileService,System.String,System.Func{System.String,System.String})
  - Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.FileSet.Contents(System.Int32)
  - Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.FileSet.Contents(System.String)
  - Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.FileSet.Directory
  - Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.FileSet.Exists(System.Int32)
  - Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.FileSet.Exists(System.String)
  - Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.FileSet.Files
  langs:
  - csharp
  - vb
  name: FileSet
  nameWithType: FileSet
  fullName: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.FileSet
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests/ReverseEngineering/FileSet.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: FileSet
    path: src/Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests/ReverseEngineering/FileSet.cs
    startLine: 9
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering
  syntax:
    content: public class FileSet
    content.vb: Public Class FileSet
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.FileSet.Files
  commentId: F:Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.FileSet.Files
  id: Files
  parent: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.FileSet
  langs:
  - csharp
  - vb
  name: Files
  nameWithType: FileSet.Files
  fullName: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.FileSet.Files
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests/ReverseEngineering/FileSet.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Files
    path: src/Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests/ReverseEngineering/FileSet.cs
    startLine: 11
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering
  syntax:
    content: public List<string> Files
    content.vb: Public Files As List(Of String)
    return:
      type: System.Collections.Generic.List{System.String}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.FileSet.#ctor(Microsoft.EntityFrameworkCore.Scaffolding.Internal.IFileService,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.FileSet.#ctor(Microsoft.EntityFrameworkCore.Scaffolding.Internal.IFileService,System.String)
  id: '#ctor(Microsoft.EntityFrameworkCore.Scaffolding.Internal.IFileService,System.String)'
  parent: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.FileSet
  langs:
  - csharp
  - vb
  name: FileSet(IFileService, String)
  nameWithType: FileSet.FileSet(IFileService, String)
  fullName: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.FileSet.FileSet(Microsoft.EntityFrameworkCore.Scaffolding.Internal.IFileService, System.String)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests/ReverseEngineering/FileSet.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests/ReverseEngineering/FileSet.cs
    startLine: 15
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering
  syntax:
    content: public FileSet(IFileService fileService, string directory)
    content.vb: Public Sub New(fileService As IFileService, directory As String)
    parameters:
    - id: fileService
      type: Microsoft.EntityFrameworkCore.Scaffolding.Internal.IFileService
    - id: directory
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.FileSet.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.FileSet.#ctor(Microsoft.EntityFrameworkCore.Scaffolding.Internal.IFileService,System.String,System.Func{System.String,System.String})
  commentId: M:Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.FileSet.#ctor(Microsoft.EntityFrameworkCore.Scaffolding.Internal.IFileService,System.String,System.Func{System.String,System.String})
  id: '#ctor(Microsoft.EntityFrameworkCore.Scaffolding.Internal.IFileService,System.String,System.Func{System.String,System.String})'
  parent: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.FileSet
  langs:
  - csharp
  - vb
  name: FileSet(IFileService, String, Func<String, String>)
  nameWithType: FileSet.FileSet(IFileService, String, Func<String, String>)
  fullName: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.FileSet.FileSet(Microsoft.EntityFrameworkCore.Scaffolding.Internal.IFileService, System.String, System.Func<System.String, System.String>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests/ReverseEngineering/FileSet.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests/ReverseEngineering/FileSet.cs
    startLine: 21
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering
  syntax:
    content: public FileSet(IFileService fileService, string directory, Func<string, string> contentsReplacementFunc)
    content.vb: Public Sub New(fileService As IFileService, directory As String, contentsReplacementFunc As Func(Of String, String))
    parameters:
    - id: fileService
      type: Microsoft.EntityFrameworkCore.Scaffolding.Internal.IFileService
    - id: directory
      type: System.String
    - id: contentsReplacementFunc
      type: System.Func{System.String,System.String}
  overload: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.FileSet.#ctor*
  nameWithType.vb: FileSet.FileSet(IFileService, String, Func(Of String, String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.FileSet.FileSet(Microsoft.EntityFrameworkCore.Scaffolding.Internal.IFileService, System.String, System.Func(Of System.String, System.String))
  name.vb: FileSet(IFileService, String, Func(Of String, String))
- uid: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.FileSet.Directory
  commentId: P:Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.FileSet.Directory
  id: Directory
  parent: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.FileSet
  langs:
  - csharp
  - vb
  name: Directory
  nameWithType: FileSet.Directory
  fullName: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.FileSet.Directory
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests/ReverseEngineering/FileSet.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Directory
    path: src/Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests/ReverseEngineering/FileSet.cs
    startLine: 28
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering
  syntax:
    content: public string Directory { get; }
    content.vb: Public ReadOnly Property Directory As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.FileSet.Directory*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.FileSet.Exists(System.Int32)
  commentId: M:Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.FileSet.Exists(System.Int32)
  id: Exists(System.Int32)
  parent: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.FileSet
  langs:
  - csharp
  - vb
  name: Exists(Int32)
  nameWithType: FileSet.Exists(Int32)
  fullName: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.FileSet.Exists(System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests/ReverseEngineering/FileSet.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Exists
    path: src/Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests/ReverseEngineering/FileSet.cs
    startLine: 30
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering
  syntax:
    content: public bool Exists(int index)
    content.vb: Public Function Exists(index As Integer) As Boolean
    parameters:
    - id: index
      type: System.Int32
    return:
      type: System.Boolean
  overload: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.FileSet.Exists*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.FileSet.Exists(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.FileSet.Exists(System.String)
  id: Exists(System.String)
  parent: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.FileSet
  langs:
  - csharp
  - vb
  name: Exists(String)
  nameWithType: FileSet.Exists(String)
  fullName: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.FileSet.Exists(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests/ReverseEngineering/FileSet.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Exists
    path: src/Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests/ReverseEngineering/FileSet.cs
    startLine: 31
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering
  syntax:
    content: public bool Exists(string filepath)
    content.vb: Public Function Exists(filepath As String) As Boolean
    parameters:
    - id: filepath
      type: System.String
    return:
      type: System.Boolean
  overload: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.FileSet.Exists*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.FileSet.Contents(System.Int32)
  commentId: M:Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.FileSet.Contents(System.Int32)
  id: Contents(System.Int32)
  parent: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.FileSet
  langs:
  - csharp
  - vb
  name: Contents(Int32)
  nameWithType: FileSet.Contents(Int32)
  fullName: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.FileSet.Contents(System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests/ReverseEngineering/FileSet.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Contents
    path: src/Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests/ReverseEngineering/FileSet.cs
    startLine: 32
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering
  syntax:
    content: public string Contents(int index)
    content.vb: Public Function Contents(index As Integer) As String
    parameters:
    - id: index
      type: System.Int32
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.FileSet.Contents*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.FileSet.Contents(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.FileSet.Contents(System.String)
  id: Contents(System.String)
  parent: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.FileSet
  langs:
  - csharp
  - vb
  name: Contents(String)
  nameWithType: FileSet.Contents(String)
  fullName: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.FileSet.Contents(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests/ReverseEngineering/FileSet.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Contents
    path: src/Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests/ReverseEngineering/FileSet.cs
    startLine: 34
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering
  syntax:
    content: public string Contents(string filepath)
    content.vb: Public Function Contents(filepath As String) As String
    parameters:
    - id: filepath
      type: System.String
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.FileSet.Contents*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering
  commentId: N:Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering
  nameWithType: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering
  fullName: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullname.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullname.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.FileSet.#ctor*
  commentId: Overload:Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.FileSet.#ctor
  isExternal: false
  name: FileSet
  nameWithType: FileSet.FileSet
  fullName: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.FileSet.FileSet
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.IFileService
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.Internal.IFileService
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  isExternal: false
  name: IFileService
  nameWithType: IFileService
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.IFileService
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Scaffolding.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal
- uid: System.Func{System.String,System.String}
  commentId: T:System.Func{System.String,System.String}
  parent: System
  definition: System.Func`2
  name: Func<String, String>
  nameWithType: Func<String, String>
  fullName: System.Func<System.String, System.String>
  nameWithType.vb: Func(Of String, String)
  fullname.vb: System.Func(Of System.String, System.String)
  name.vb: Func(Of String, String)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullname.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.FileSet.Directory*
  commentId: Overload:Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.FileSet.Directory
  isExternal: false
  name: Directory
  nameWithType: FileSet.Directory
  fullName: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.FileSet.Directory
- uid: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.FileSet.Exists*
  commentId: Overload:Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.FileSet.Exists
  isExternal: false
  name: Exists
  nameWithType: FileSet.Exists
  fullName: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.FileSet.Exists
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.FileSet.Contents*
  commentId: Overload:Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.FileSet.Contents
  isExternal: false
  name: Contents
  nameWithType: FileSet.Contents
  fullName: Microsoft.EntityFrameworkCore.Relational.Design.Specification.Tests.ReverseEngineering.FileSet.Contents
