### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyComparer
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyComparer
  id: ForeignKeyComparer
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  children:
  - Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyComparer.Compare(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyComparer.Equals(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyComparer.GetHashCode(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyComparer.Instance
  langs:
  - csharp
  - vb
  name: ForeignKeyComparer
  nameWithType: ForeignKeyComparer
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyComparer
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ForeignKeyComparer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ForeignKeyComparer
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ForeignKeyComparer.cs
    startLine: 12
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public class ForeignKeyComparer : IEqualityComparer<IForeignKey>, IComparer<IForeignKey>'
    content.vb: >-
      Public Class ForeignKeyComparer
          Implements IEqualityComparer(Of IForeignKey), IComparer(Of IForeignKey)
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEqualityComparer{Microsoft.EntityFrameworkCore.Metadata.IForeignKey}
  - System.Collections.Generic.IComparer{Microsoft.EntityFrameworkCore.Metadata.IForeignKey}
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyComparer.Instance
  commentId: F:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyComparer.Instance
  id: Instance
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyComparer
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: ForeignKeyComparer.Instance
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyComparer.Instance
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ForeignKeyComparer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Instance
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ForeignKeyComparer.cs
    startLine: 18
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public static readonly ForeignKeyComparer Instance
    content.vb: Public Shared ReadOnly Instance As ForeignKeyComparer
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyComparer
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyComparer.Compare(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyComparer.Compare(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  id: Compare(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyComparer
  langs:
  - csharp
  - vb
  name: Compare(IForeignKey, IForeignKey)
  nameWithType: ForeignKeyComparer.Compare(IForeignKey, IForeignKey)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyComparer.Compare(Microsoft.EntityFrameworkCore.Metadata.IForeignKey, Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ForeignKeyComparer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Compare
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ForeignKeyComparer.cs
    startLine: 24
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual int Compare(IForeignKey x, IForeignKey y)
    content.vb: Public Overridable Function Compare(x As IForeignKey, y As IForeignKey) As Integer
    parameters:
    - id: x
      type: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    - id: y
      type: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    return:
      type: System.Int32
  implements:
  - System.Collections.Generic.IComparer{Microsoft.EntityFrameworkCore.Metadata.IForeignKey}.Compare(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyComparer.Equals(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyComparer.Equals(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  id: Equals(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyComparer
  langs:
  - csharp
  - vb
  name: Equals(IForeignKey, IForeignKey)
  nameWithType: ForeignKeyComparer.Equals(IForeignKey, IForeignKey)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyComparer.Equals(Microsoft.EntityFrameworkCore.Metadata.IForeignKey, Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ForeignKeyComparer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Equals
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ForeignKeyComparer.cs
    startLine: 45
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual bool Equals(IForeignKey x, IForeignKey y)
    content.vb: Public Overridable Function Equals(x As IForeignKey, y As IForeignKey) As Boolean
    parameters:
    - id: x
      type: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    - id: y
      type: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    return:
      type: System.Boolean
  implements:
  - System.Collections.Generic.IEqualityComparer{Microsoft.EntityFrameworkCore.Metadata.IForeignKey}.Equals(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyComparer.GetHashCode(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyComparer.GetHashCode(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  id: GetHashCode(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyComparer
  langs:
  - csharp
  - vb
  name: GetHashCode(IForeignKey)
  nameWithType: ForeignKeyComparer.GetHashCode(IForeignKey)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyComparer.GetHashCode(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ForeignKeyComparer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetHashCode
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ForeignKeyComparer.cs
    startLine: 52
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual int GetHashCode(IForeignKey obj)
    content.vb: Public Overridable Function GetHashCode(obj As IForeignKey) As Integer
    parameters:
    - id: obj
      type: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    return:
      type: System.Int32
  implements:
  - System.Collections.Generic.IEqualityComparer{Microsoft.EntityFrameworkCore.Metadata.IForeignKey}.GetHashCode(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.IEqualityComparer{Microsoft.EntityFrameworkCore.Metadata.IForeignKey}
  commentId: T:System.Collections.Generic.IEqualityComparer{Microsoft.EntityFrameworkCore.Metadata.IForeignKey}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEqualityComparer`1
  name: IEqualityComparer<IForeignKey>
  nameWithType: IEqualityComparer<IForeignKey>
  fullName: System.Collections.Generic.IEqualityComparer<Microsoft.EntityFrameworkCore.Metadata.IForeignKey>
  nameWithType.vb: IEqualityComparer(Of IForeignKey)
  fullname.vb: System.Collections.Generic.IEqualityComparer(Of Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  name.vb: IEqualityComparer(Of IForeignKey)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    name: IForeignKey
    nameWithType: IForeignKey
    fullName: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    name: IForeignKey
    nameWithType: IForeignKey
    fullName: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IComparer{Microsoft.EntityFrameworkCore.Metadata.IForeignKey}
  commentId: T:System.Collections.Generic.IComparer{Microsoft.EntityFrameworkCore.Metadata.IForeignKey}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IComparer`1
  name: IComparer<IForeignKey>
  nameWithType: IComparer<IForeignKey>
  fullName: System.Collections.Generic.IComparer<Microsoft.EntityFrameworkCore.Metadata.IForeignKey>
  nameWithType.vb: IComparer(Of IForeignKey)
  fullname.vb: System.Collections.Generic.IComparer(Of Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  name.vb: IComparer(Of IForeignKey)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    name: IForeignKey
    nameWithType: IForeignKey
    fullName: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    name: IForeignKey
    nameWithType: IForeignKey
    fullName: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEqualityComparer`1
  commentId: T:System.Collections.Generic.IEqualityComparer`1
  isExternal: true
  name: IEqualityComparer<T>
  nameWithType: IEqualityComparer<T>
  fullName: System.Collections.Generic.IEqualityComparer<T>
  nameWithType.vb: IEqualityComparer(Of T)
  fullname.vb: System.Collections.Generic.IEqualityComparer(Of T)
  name.vb: IEqualityComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IComparer`1
  commentId: T:System.Collections.Generic.IComparer`1
  isExternal: true
  name: IComparer<T>
  nameWithType: IComparer<T>
  fullName: System.Collections.Generic.IComparer<T>
  nameWithType.vb: IComparer(Of T)
  fullname.vb: System.Collections.Generic.IComparer(Of T)
  name.vb: IComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyComparer
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyComparer
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: ForeignKeyComparer
  nameWithType: ForeignKeyComparer
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyComparer
- uid: System.Collections.Generic.IComparer{Microsoft.EntityFrameworkCore.Metadata.IForeignKey}.Compare(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  commentId: M:System.Collections.Generic.IComparer{Microsoft.EntityFrameworkCore.Metadata.IForeignKey}.Compare(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  parent: System.Collections.Generic.IComparer{Microsoft.EntityFrameworkCore.Metadata.IForeignKey}
  definition: System.Collections.Generic.IComparer`1.Compare(`0,`0)
  name: Compare(IForeignKey, IForeignKey)
  nameWithType: IComparer<IForeignKey>.Compare(IForeignKey, IForeignKey)
  fullName: System.Collections.Generic.IComparer<Microsoft.EntityFrameworkCore.Metadata.IForeignKey>.Compare(Microsoft.EntityFrameworkCore.Metadata.IForeignKey, Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  nameWithType.vb: IComparer(Of IForeignKey).Compare(IForeignKey, IForeignKey)
  fullname.vb: System.Collections.Generic.IComparer(Of Microsoft.EntityFrameworkCore.Metadata.IForeignKey).Compare(Microsoft.EntityFrameworkCore.Metadata.IForeignKey, Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
    name: Compare
    nameWithType: IComparer<IForeignKey>.Compare
    fullName: System.Collections.Generic.IComparer<Microsoft.EntityFrameworkCore.Metadata.IForeignKey>.Compare
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    name: IForeignKey
    nameWithType: IForeignKey
    fullName: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    name: IForeignKey
    nameWithType: IForeignKey
    fullName: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
    name: Compare
    nameWithType: IComparer(Of IForeignKey).Compare
    fullName: System.Collections.Generic.IComparer(Of Microsoft.EntityFrameworkCore.Metadata.IForeignKey).Compare
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    name: IForeignKey
    nameWithType: IForeignKey
    fullName: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    name: IForeignKey
    nameWithType: IForeignKey
    fullName: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IForeignKey
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IForeignKey
  nameWithType: IForeignKey
  fullName: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
  commentId: M:System.Collections.Generic.IComparer`1.Compare(`0,`0)
  isExternal: true
  name: Compare(T, T)
  nameWithType: IComparer<T>.Compare(T, T)
  fullName: System.Collections.Generic.IComparer<T>.Compare(T, T)
  nameWithType.vb: IComparer(Of T).Compare(T, T)
  fullname.vb: System.Collections.Generic.IComparer(Of T).Compare(T, T)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
    name: Compare
    nameWithType: IComparer<T>.Compare
    fullName: System.Collections.Generic.IComparer<T>.Compare
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
    name: Compare
    nameWithType: IComparer(Of T).Compare
    fullName: System.Collections.Generic.IComparer(Of T).Compare
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: System.Collections.Generic.IEqualityComparer{Microsoft.EntityFrameworkCore.Metadata.IForeignKey}.Equals(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  commentId: M:System.Collections.Generic.IEqualityComparer{Microsoft.EntityFrameworkCore.Metadata.IForeignKey}.Equals(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  parent: System.Collections.Generic.IEqualityComparer{Microsoft.EntityFrameworkCore.Metadata.IForeignKey}
  definition: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
  name: Equals(IForeignKey, IForeignKey)
  nameWithType: IEqualityComparer<IForeignKey>.Equals(IForeignKey, IForeignKey)
  fullName: System.Collections.Generic.IEqualityComparer<Microsoft.EntityFrameworkCore.Metadata.IForeignKey>.Equals(Microsoft.EntityFrameworkCore.Metadata.IForeignKey, Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  nameWithType.vb: IEqualityComparer(Of IForeignKey).Equals(IForeignKey, IForeignKey)
  fullname.vb: System.Collections.Generic.IEqualityComparer(Of Microsoft.EntityFrameworkCore.Metadata.IForeignKey).Equals(Microsoft.EntityFrameworkCore.Metadata.IForeignKey, Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
    name: Equals
    nameWithType: IEqualityComparer<IForeignKey>.Equals
    fullName: System.Collections.Generic.IEqualityComparer<Microsoft.EntityFrameworkCore.Metadata.IForeignKey>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    name: IForeignKey
    nameWithType: IForeignKey
    fullName: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    name: IForeignKey
    nameWithType: IForeignKey
    fullName: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
    name: Equals
    nameWithType: IEqualityComparer(Of IForeignKey).Equals
    fullName: System.Collections.Generic.IEqualityComparer(Of Microsoft.EntityFrameworkCore.Metadata.IForeignKey).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    name: IForeignKey
    nameWithType: IForeignKey
    fullName: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    name: IForeignKey
    nameWithType: IForeignKey
    fullName: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
  commentId: M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
  isExternal: true
  name: Equals(T, T)
  nameWithType: IEqualityComparer<T>.Equals(T, T)
  fullName: System.Collections.Generic.IEqualityComparer<T>.Equals(T, T)
  nameWithType.vb: IEqualityComparer(Of T).Equals(T, T)
  fullname.vb: System.Collections.Generic.IEqualityComparer(Of T).Equals(T, T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
    name: Equals
    nameWithType: IEqualityComparer<T>.Equals
    fullName: System.Collections.Generic.IEqualityComparer<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
    name: Equals
    nameWithType: IEqualityComparer(Of T).Equals
    fullName: System.Collections.Generic.IEqualityComparer(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEqualityComparer{Microsoft.EntityFrameworkCore.Metadata.IForeignKey}.GetHashCode(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  commentId: M:System.Collections.Generic.IEqualityComparer{Microsoft.EntityFrameworkCore.Metadata.IForeignKey}.GetHashCode(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  parent: System.Collections.Generic.IEqualityComparer{Microsoft.EntityFrameworkCore.Metadata.IForeignKey}
  definition: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
  name: GetHashCode(IForeignKey)
  nameWithType: IEqualityComparer<IForeignKey>.GetHashCode(IForeignKey)
  fullName: System.Collections.Generic.IEqualityComparer<Microsoft.EntityFrameworkCore.Metadata.IForeignKey>.GetHashCode(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  nameWithType.vb: IEqualityComparer(Of IForeignKey).GetHashCode(IForeignKey)
  fullname.vb: System.Collections.Generic.IEqualityComparer(Of Microsoft.EntityFrameworkCore.Metadata.IForeignKey).GetHashCode(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
    name: GetHashCode
    nameWithType: IEqualityComparer<IForeignKey>.GetHashCode
    fullName: System.Collections.Generic.IEqualityComparer<Microsoft.EntityFrameworkCore.Metadata.IForeignKey>.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    name: IForeignKey
    nameWithType: IForeignKey
    fullName: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
    name: GetHashCode
    nameWithType: IEqualityComparer(Of IForeignKey).GetHashCode
    fullName: System.Collections.Generic.IEqualityComparer(Of Microsoft.EntityFrameworkCore.Metadata.IForeignKey).GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    name: IForeignKey
    nameWithType: IForeignKey
    fullName: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
  commentId: M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
  isExternal: true
  name: GetHashCode(T)
  nameWithType: IEqualityComparer<T>.GetHashCode(T)
  fullName: System.Collections.Generic.IEqualityComparer<T>.GetHashCode(T)
  nameWithType.vb: IEqualityComparer(Of T).GetHashCode(T)
  fullname.vb: System.Collections.Generic.IEqualityComparer(Of T).GetHashCode(T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
    name: GetHashCode
    nameWithType: IEqualityComparer<T>.GetHashCode
    fullName: System.Collections.Generic.IEqualityComparer<T>.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
    name: GetHashCode
    nameWithType: IEqualityComparer(Of T).GetHashCode
    fullName: System.Collections.Generic.IEqualityComparer(Of T).GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
