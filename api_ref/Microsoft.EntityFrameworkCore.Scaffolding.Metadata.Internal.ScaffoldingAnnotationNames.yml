### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.ScaffoldingAnnotationNames
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.ScaffoldingAnnotationNames
  id: ScaffoldingAnnotationNames
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal
  children:
  - Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.ScaffoldingAnnotationNames.ColumnOrdinal
  - Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.ScaffoldingAnnotationNames.DependentEndNavigation
  - Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.ScaffoldingAnnotationNames.EntityTypeErrors
  - Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.ScaffoldingAnnotationNames.Prefix
  - Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.ScaffoldingAnnotationNames.PrincipalEndNavigation
  - Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.ScaffoldingAnnotationNames.UseProviderMethodName
  langs:
  - csharp
  - vb
  name: ScaffoldingAnnotationNames
  nameWithType: ScaffoldingAnnotationNames
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.ScaffoldingAnnotationNames
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/Metadata/Internal/ScaffoldingAnnotationNames.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ScaffoldingAnnotationNames
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/Metadata/Internal/ScaffoldingAnnotationNames.cs
    startLine: 9
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public static class ScaffoldingAnnotationNames
    content.vb: Public Module ScaffoldingAnnotationNames
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.ScaffoldingAnnotationNames.Prefix
  commentId: F:Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.ScaffoldingAnnotationNames.Prefix
  id: Prefix
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.ScaffoldingAnnotationNames
  langs:
  - csharp
  - vb
  name: Prefix
  nameWithType: ScaffoldingAnnotationNames.Prefix
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.ScaffoldingAnnotationNames.Prefix
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/Metadata/Internal/ScaffoldingAnnotationNames.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Prefix
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/Metadata/Internal/ScaffoldingAnnotationNames.cs
    startLine: 15
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public const string Prefix = "Scaffolding:"
    content.vb: Public Const Prefix As String = "Scaffolding:"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.ScaffoldingAnnotationNames.UseProviderMethodName
  commentId: F:Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.ScaffoldingAnnotationNames.UseProviderMethodName
  id: UseProviderMethodName
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.ScaffoldingAnnotationNames
  langs:
  - csharp
  - vb
  name: UseProviderMethodName
  nameWithType: ScaffoldingAnnotationNames.UseProviderMethodName
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.ScaffoldingAnnotationNames.UseProviderMethodName
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/Metadata/Internal/ScaffoldingAnnotationNames.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: UseProviderMethodName
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/Metadata/Internal/ScaffoldingAnnotationNames.cs
    startLine: 21
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public const string UseProviderMethodName = "UseProviderMethodName"
    content.vb: Public Const UseProviderMethodName As String = "UseProviderMethodName"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.ScaffoldingAnnotationNames.ColumnOrdinal
  commentId: F:Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.ScaffoldingAnnotationNames.ColumnOrdinal
  id: ColumnOrdinal
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.ScaffoldingAnnotationNames
  langs:
  - csharp
  - vb
  name: ColumnOrdinal
  nameWithType: ScaffoldingAnnotationNames.ColumnOrdinal
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.ScaffoldingAnnotationNames.ColumnOrdinal
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/Metadata/Internal/ScaffoldingAnnotationNames.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ColumnOrdinal
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/Metadata/Internal/ScaffoldingAnnotationNames.cs
    startLine: 27
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public const string ColumnOrdinal = "ColumnOrdinal"
    content.vb: Public Const ColumnOrdinal As String = "ColumnOrdinal"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.ScaffoldingAnnotationNames.DependentEndNavigation
  commentId: F:Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.ScaffoldingAnnotationNames.DependentEndNavigation
  id: DependentEndNavigation
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.ScaffoldingAnnotationNames
  langs:
  - csharp
  - vb
  name: DependentEndNavigation
  nameWithType: ScaffoldingAnnotationNames.DependentEndNavigation
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.ScaffoldingAnnotationNames.DependentEndNavigation
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/Metadata/Internal/ScaffoldingAnnotationNames.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: DependentEndNavigation
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/Metadata/Internal/ScaffoldingAnnotationNames.cs
    startLine: 33
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public const string DependentEndNavigation = "DependentEndNavigation"
    content.vb: Public Const DependentEndNavigation As String = "DependentEndNavigation"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.ScaffoldingAnnotationNames.PrincipalEndNavigation
  commentId: F:Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.ScaffoldingAnnotationNames.PrincipalEndNavigation
  id: PrincipalEndNavigation
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.ScaffoldingAnnotationNames
  langs:
  - csharp
  - vb
  name: PrincipalEndNavigation
  nameWithType: ScaffoldingAnnotationNames.PrincipalEndNavigation
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.ScaffoldingAnnotationNames.PrincipalEndNavigation
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/Metadata/Internal/ScaffoldingAnnotationNames.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: PrincipalEndNavigation
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/Metadata/Internal/ScaffoldingAnnotationNames.cs
    startLine: 39
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public const string PrincipalEndNavigation = "PrincipalEndNavigation"
    content.vb: Public Const PrincipalEndNavigation As String = "PrincipalEndNavigation"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.ScaffoldingAnnotationNames.EntityTypeErrors
  commentId: F:Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.ScaffoldingAnnotationNames.EntityTypeErrors
  id: EntityTypeErrors
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.ScaffoldingAnnotationNames
  langs:
  - csharp
  - vb
  name: EntityTypeErrors
  nameWithType: ScaffoldingAnnotationNames.EntityTypeErrors
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.ScaffoldingAnnotationNames.EntityTypeErrors
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/Metadata/Internal/ScaffoldingAnnotationNames.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: EntityTypeErrors
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/Metadata/Internal/ScaffoldingAnnotationNames.cs
    startLine: 45
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public const string EntityTypeErrors = "EntityTypeErrors"
    content.vb: Public Const EntityTypeErrors As String = "EntityTypeErrors"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
