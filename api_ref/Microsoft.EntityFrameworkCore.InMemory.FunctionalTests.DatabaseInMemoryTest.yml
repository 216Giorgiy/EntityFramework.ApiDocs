### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.DatabaseInMemoryTest
  commentId: T:Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.DatabaseInMemoryTest
  id: DatabaseInMemoryTest
  parent: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  children:
  - Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.DatabaseInMemoryTest.Any_returns_false_for_empty_sets
  - Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.DatabaseInMemoryTest.Can_add_update_delete_end_to_end
  - Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.DatabaseInMemoryTest.Can_share_instance_between_contexts_with_sugar_experience
  langs:
  - csharp
  - vb
  name: DatabaseInMemoryTest
  nameWithType: DatabaseInMemoryTest
  fullName: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.DatabaseInMemoryTest
  type: Class
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.InMemory.FunctionalTests/DatabaseInMemoryTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: DatabaseInMemoryTest
    path: test/Microsoft.EntityFrameworkCore.InMemory.FunctionalTests/DatabaseInMemoryTest.cs
    startLine: 12
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  syntax:
    content: public class DatabaseInMemoryTest
    content.vb: Public Class DatabaseInMemoryTest
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.DatabaseInMemoryTest.Can_add_update_delete_end_to_end
  commentId: M:Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.DatabaseInMemoryTest.Can_add_update_delete_end_to_end
  id: Can_add_update_delete_end_to_end
  parent: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.DatabaseInMemoryTest
  langs:
  - csharp
  - vb
  name: Can_add_update_delete_end_to_end()
  nameWithType: DatabaseInMemoryTest.Can_add_update_delete_end_to_end()
  fullName: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.DatabaseInMemoryTest.Can_add_update_delete_end_to_end()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.InMemory.FunctionalTests/DatabaseInMemoryTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_add_update_delete_end_to_end
    path: test/Microsoft.EntityFrameworkCore.InMemory.FunctionalTests/DatabaseInMemoryTest.cs
    startLine: 14
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  syntax:
    content: >-
      [Fact]

      public Task Can_add_update_delete_end_to_end()
    content.vb: >-
      <Fact>

      Public Function Can_add_update_delete_end_to_end As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.DatabaseInMemoryTest.Any_returns_false_for_empty_sets
  commentId: M:Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.DatabaseInMemoryTest.Any_returns_false_for_empty_sets
  id: Any_returns_false_for_empty_sets
  parent: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.DatabaseInMemoryTest
  langs:
  - csharp
  - vb
  name: Any_returns_false_for_empty_sets()
  nameWithType: DatabaseInMemoryTest.Any_returns_false_for_empty_sets()
  fullName: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.DatabaseInMemoryTest.Any_returns_false_for_empty_sets()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.InMemory.FunctionalTests/DatabaseInMemoryTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Any_returns_false_for_empty_sets
    path: test/Microsoft.EntityFrameworkCore.InMemory.FunctionalTests/DatabaseInMemoryTest.cs
    startLine: 78
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  syntax:
    content: >-
      [Fact]

      public void Any_returns_false_for_empty_sets()
    content.vb: >-
      <Fact>

      Public Sub Any_returns_false_for_empty_sets
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.DatabaseInMemoryTest.Can_share_instance_between_contexts_with_sugar_experience
  commentId: M:Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.DatabaseInMemoryTest.Can_share_instance_between_contexts_with_sugar_experience
  id: Can_share_instance_between_contexts_with_sugar_experience
  parent: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.DatabaseInMemoryTest
  langs:
  - csharp
  - vb
  name: Can_share_instance_between_contexts_with_sugar_experience()
  nameWithType: DatabaseInMemoryTest.Can_share_instance_between_contexts_with_sugar_experience()
  fullName: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.DatabaseInMemoryTest.Can_share_instance_between_contexts_with_sugar_experience()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.InMemory.FunctionalTests/DatabaseInMemoryTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_share_instance_between_contexts_with_sugar_experience
    path: test/Microsoft.EntityFrameworkCore.InMemory.FunctionalTests/DatabaseInMemoryTest.cs
    startLine: 113
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  syntax:
    content: >-
      [Fact]

      public Task Can_share_instance_between_contexts_with_sugar_experience()
    content.vb: >-
      <Fact>

      Public Function Can_share_instance_between_contexts_with_sugar_experience As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  commentId: N:Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  nameWithType: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  fullName: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
