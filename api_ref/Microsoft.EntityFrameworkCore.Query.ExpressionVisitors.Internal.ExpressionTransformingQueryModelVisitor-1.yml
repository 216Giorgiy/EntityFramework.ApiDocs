### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1
  commentId: T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1
  id: ExpressionTransformingQueryModelVisitor`1
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  children:
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.#ctor(`0)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.TransformingVisitor
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitAdditionalFromClause(AdditionalFromClause,QueryModel,System.Int32)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitJoinClause(JoinClause,QueryModel,GroupJoinClause)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitJoinClause(JoinClause,QueryModel,System.Int32)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitMainFromClause(MainFromClause,QueryModel)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitOrderByClause(OrderByClause,QueryModel,System.Int32)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitOrdering(Ordering,QueryModel,OrderByClause,System.Int32)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitResultOperator(ResultOperatorBase,QueryModel,System.Int32)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitSelectClause(SelectClause,QueryModel)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitWhereClause(WhereClause,QueryModel,System.Int32)
  langs:
  - csharp
  - vb
  name: ExpressionTransformingQueryModelVisitor<TVisitor>
  nameWithType: ExpressionTransformingQueryModelVisitor<TVisitor>
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor<TVisitor>
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/ExpressionTransformingQueryModelVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ExpressionTransformingQueryModelVisitor
    path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/ExpressionTransformingQueryModelVisitor.cs
    startLine: 15
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public class ExpressionTransformingQueryModelVisitor<TVisitor> : QueryModelVisitorBase where TVisitor : RelinqExpressionVisitor'
    content.vb: >-
      Public Class ExpressionTransformingQueryModelVisitor(Of TVisitor As RelinqExpressionVisitor)
          Inherits QueryModelVisitorBase
    typeParameters:
    - id: TVisitor
  inheritance:
  - System.Object
  nameWithType.vb: ExpressionTransformingQueryModelVisitor(Of TVisitor)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor(Of TVisitor)
  name.vb: ExpressionTransformingQueryModelVisitor(Of TVisitor)
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.TransformingVisitor
  commentId: P:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.TransformingVisitor
  id: TransformingVisitor
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1
  langs:
  - csharp
  - vb
  name: TransformingVisitor
  nameWithType: ExpressionTransformingQueryModelVisitor<TVisitor>.TransformingVisitor
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor<TVisitor>.TransformingVisitor
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/ExpressionTransformingQueryModelVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: TransformingVisitor
    path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/ExpressionTransformingQueryModelVisitor.cs
    startLine: 22
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual TVisitor TransformingVisitor { get; }
    content.vb: Protected Overridable ReadOnly Property TransformingVisitor As TVisitor
    parameters: []
    return:
      type: '{TVisitor}'
  overload: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.TransformingVisitor*
  nameWithType.vb: ExpressionTransformingQueryModelVisitor(Of TVisitor).TransformingVisitor
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
  fullName.vb: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor(Of TVisitor).TransformingVisitor
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.#ctor(`0)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.#ctor(`0)
  id: '#ctor(`0)'
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1
  langs:
  - csharp
  - vb
  name: ExpressionTransformingQueryModelVisitor(TVisitor)
  nameWithType: ExpressionTransformingQueryModelVisitor<TVisitor>.ExpressionTransformingQueryModelVisitor(TVisitor)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor<TVisitor>.ExpressionTransformingQueryModelVisitor(TVisitor)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/ExpressionTransformingQueryModelVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/ExpressionTransformingQueryModelVisitor.cs
    startLine: 28
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public ExpressionTransformingQueryModelVisitor(TVisitor transformingVisitor)
    content.vb: Public Sub New(transformingVisitor As TVisitor)
    parameters:
    - id: transformingVisitor
      type: '{TVisitor}'
  overload: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.#ctor*
  nameWithType.vb: ExpressionTransformingQueryModelVisitor(Of TVisitor).ExpressionTransformingQueryModelVisitor(TVisitor)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor(Of TVisitor).ExpressionTransformingQueryModelVisitor(TVisitor)
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitMainFromClause(MainFromClause,QueryModel)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitMainFromClause(MainFromClause,QueryModel)
  id: VisitMainFromClause(MainFromClause,QueryModel)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1
  langs:
  - csharp
  - vb
  name: VisitMainFromClause(MainFromClause, QueryModel)
  nameWithType: ExpressionTransformingQueryModelVisitor<TVisitor>.VisitMainFromClause(MainFromClause, QueryModel)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor<TVisitor>.VisitMainFromClause(MainFromClause, QueryModel)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/ExpressionTransformingQueryModelVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: VisitMainFromClause
    path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/ExpressionTransformingQueryModelVisitor.cs
    startLine: 39
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public override void VisitMainFromClause(MainFromClause fromClause, QueryModel queryModel)
    content.vb: Public Overrides Sub VisitMainFromClause(fromClause As MainFromClause, queryModel As QueryModel)
    parameters:
    - id: fromClause
      type: MainFromClause
    - id: queryModel
      type: QueryModel
  overload: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitMainFromClause*
  nameWithType.vb: ExpressionTransformingQueryModelVisitor(Of TVisitor).VisitMainFromClause(MainFromClause, QueryModel)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor(Of TVisitor).VisitMainFromClause(MainFromClause, QueryModel)
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitAdditionalFromClause(AdditionalFromClause,QueryModel,System.Int32)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitAdditionalFromClause(AdditionalFromClause,QueryModel,System.Int32)
  id: VisitAdditionalFromClause(AdditionalFromClause,QueryModel,System.Int32)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1
  langs:
  - csharp
  - vb
  name: VisitAdditionalFromClause(AdditionalFromClause, QueryModel, Int32)
  nameWithType: ExpressionTransformingQueryModelVisitor<TVisitor>.VisitAdditionalFromClause(AdditionalFromClause, QueryModel, Int32)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor<TVisitor>.VisitAdditionalFromClause(AdditionalFromClause, QueryModel, System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/ExpressionTransformingQueryModelVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: VisitAdditionalFromClause
    path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/ExpressionTransformingQueryModelVisitor.cs
    startLine: 46
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public override void VisitAdditionalFromClause(AdditionalFromClause fromClause, QueryModel queryModel, int index)
    content.vb: Public Overrides Sub VisitAdditionalFromClause(fromClause As AdditionalFromClause, queryModel As QueryModel, index As Integer)
    parameters:
    - id: fromClause
      type: AdditionalFromClause
    - id: queryModel
      type: QueryModel
    - id: index
      type: System.Int32
  overload: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitAdditionalFromClause*
  nameWithType.vb: ExpressionTransformingQueryModelVisitor(Of TVisitor).VisitAdditionalFromClause(AdditionalFromClause, QueryModel, Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor(Of TVisitor).VisitAdditionalFromClause(AdditionalFromClause, QueryModel, System.Int32)
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitJoinClause(JoinClause,QueryModel,System.Int32)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitJoinClause(JoinClause,QueryModel,System.Int32)
  id: VisitJoinClause(JoinClause,QueryModel,System.Int32)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1
  langs:
  - csharp
  - vb
  name: VisitJoinClause(JoinClause, QueryModel, Int32)
  nameWithType: ExpressionTransformingQueryModelVisitor<TVisitor>.VisitJoinClause(JoinClause, QueryModel, Int32)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor<TVisitor>.VisitJoinClause(JoinClause, QueryModel, System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/ExpressionTransformingQueryModelVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: VisitJoinClause
    path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/ExpressionTransformingQueryModelVisitor.cs
    startLine: 53
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public override void VisitJoinClause(JoinClause joinClause, QueryModel queryModel, int index)
    content.vb: Public Overrides Sub VisitJoinClause(joinClause As JoinClause, queryModel As QueryModel, index As Integer)
    parameters:
    - id: joinClause
      type: JoinClause
    - id: queryModel
      type: QueryModel
    - id: index
      type: System.Int32
  overload: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitJoinClause*
  nameWithType.vb: ExpressionTransformingQueryModelVisitor(Of TVisitor).VisitJoinClause(JoinClause, QueryModel, Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor(Of TVisitor).VisitJoinClause(JoinClause, QueryModel, System.Int32)
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitJoinClause(JoinClause,QueryModel,GroupJoinClause)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitJoinClause(JoinClause,QueryModel,GroupJoinClause)
  id: VisitJoinClause(JoinClause,QueryModel,GroupJoinClause)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1
  langs:
  - csharp
  - vb
  name: VisitJoinClause(JoinClause, QueryModel, GroupJoinClause)
  nameWithType: ExpressionTransformingQueryModelVisitor<TVisitor>.VisitJoinClause(JoinClause, QueryModel, GroupJoinClause)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor<TVisitor>.VisitJoinClause(JoinClause, QueryModel, GroupJoinClause)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/ExpressionTransformingQueryModelVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: VisitJoinClause
    path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/ExpressionTransformingQueryModelVisitor.cs
    startLine: 60
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public override void VisitJoinClause(JoinClause joinClause, QueryModel queryModel, GroupJoinClause groupJoinClause)
    content.vb: Public Overrides Sub VisitJoinClause(joinClause As JoinClause, queryModel As QueryModel, groupJoinClause As GroupJoinClause)
    parameters:
    - id: joinClause
      type: JoinClause
    - id: queryModel
      type: QueryModel
    - id: groupJoinClause
      type: GroupJoinClause
  overload: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitJoinClause*
  nameWithType.vb: ExpressionTransformingQueryModelVisitor(Of TVisitor).VisitJoinClause(JoinClause, QueryModel, GroupJoinClause)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor(Of TVisitor).VisitJoinClause(JoinClause, QueryModel, GroupJoinClause)
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitWhereClause(WhereClause,QueryModel,System.Int32)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitWhereClause(WhereClause,QueryModel,System.Int32)
  id: VisitWhereClause(WhereClause,QueryModel,System.Int32)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1
  langs:
  - csharp
  - vb
  name: VisitWhereClause(WhereClause, QueryModel, Int32)
  nameWithType: ExpressionTransformingQueryModelVisitor<TVisitor>.VisitWhereClause(WhereClause, QueryModel, Int32)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor<TVisitor>.VisitWhereClause(WhereClause, QueryModel, System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/ExpressionTransformingQueryModelVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: VisitWhereClause
    path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/ExpressionTransformingQueryModelVisitor.cs
    startLine: 67
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public override void VisitWhereClause(WhereClause whereClause, QueryModel queryModel, int index)
    content.vb: Public Overrides Sub VisitWhereClause(whereClause As WhereClause, queryModel As QueryModel, index As Integer)
    parameters:
    - id: whereClause
      type: WhereClause
    - id: queryModel
      type: QueryModel
    - id: index
      type: System.Int32
  overload: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitWhereClause*
  nameWithType.vb: ExpressionTransformingQueryModelVisitor(Of TVisitor).VisitWhereClause(WhereClause, QueryModel, Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor(Of TVisitor).VisitWhereClause(WhereClause, QueryModel, System.Int32)
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitOrderByClause(OrderByClause,QueryModel,System.Int32)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitOrderByClause(OrderByClause,QueryModel,System.Int32)
  id: VisitOrderByClause(OrderByClause,QueryModel,System.Int32)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1
  langs:
  - csharp
  - vb
  name: VisitOrderByClause(OrderByClause, QueryModel, Int32)
  nameWithType: ExpressionTransformingQueryModelVisitor<TVisitor>.VisitOrderByClause(OrderByClause, QueryModel, Int32)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor<TVisitor>.VisitOrderByClause(OrderByClause, QueryModel, System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/ExpressionTransformingQueryModelVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: VisitOrderByClause
    path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/ExpressionTransformingQueryModelVisitor.cs
    startLine: 74
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public override void VisitOrderByClause(OrderByClause orderByClause, QueryModel queryModel, int index)
    content.vb: Public Overrides Sub VisitOrderByClause(orderByClause As OrderByClause, queryModel As QueryModel, index As Integer)
    parameters:
    - id: orderByClause
      type: OrderByClause
    - id: queryModel
      type: QueryModel
    - id: index
      type: System.Int32
  overload: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitOrderByClause*
  nameWithType.vb: ExpressionTransformingQueryModelVisitor(Of TVisitor).VisitOrderByClause(OrderByClause, QueryModel, Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor(Of TVisitor).VisitOrderByClause(OrderByClause, QueryModel, System.Int32)
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitOrdering(Ordering,QueryModel,OrderByClause,System.Int32)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitOrdering(Ordering,QueryModel,OrderByClause,System.Int32)
  id: VisitOrdering(Ordering,QueryModel,OrderByClause,System.Int32)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1
  langs:
  - csharp
  - vb
  name: VisitOrdering(Ordering, QueryModel, OrderByClause, Int32)
  nameWithType: ExpressionTransformingQueryModelVisitor<TVisitor>.VisitOrdering(Ordering, QueryModel, OrderByClause, Int32)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor<TVisitor>.VisitOrdering(Ordering, QueryModel, OrderByClause, System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/ExpressionTransformingQueryModelVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: VisitOrdering
    path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/ExpressionTransformingQueryModelVisitor.cs
    startLine: 81
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public override void VisitOrdering(Ordering ordering, QueryModel queryModel, OrderByClause orderByClause, int index)
    content.vb: Public Overrides Sub VisitOrdering(ordering As Ordering, queryModel As QueryModel, orderByClause As OrderByClause, index As Integer)
    parameters:
    - id: ordering
      type: Ordering
    - id: queryModel
      type: QueryModel
    - id: orderByClause
      type: OrderByClause
    - id: index
      type: System.Int32
  overload: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitOrdering*
  nameWithType.vb: ExpressionTransformingQueryModelVisitor(Of TVisitor).VisitOrdering(Ordering, QueryModel, OrderByClause, Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor(Of TVisitor).VisitOrdering(Ordering, QueryModel, OrderByClause, System.Int32)
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitSelectClause(SelectClause,QueryModel)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitSelectClause(SelectClause,QueryModel)
  id: VisitSelectClause(SelectClause,QueryModel)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1
  langs:
  - csharp
  - vb
  name: VisitSelectClause(SelectClause, QueryModel)
  nameWithType: ExpressionTransformingQueryModelVisitor<TVisitor>.VisitSelectClause(SelectClause, QueryModel)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor<TVisitor>.VisitSelectClause(SelectClause, QueryModel)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/ExpressionTransformingQueryModelVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: VisitSelectClause
    path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/ExpressionTransformingQueryModelVisitor.cs
    startLine: 88
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public override void VisitSelectClause(SelectClause selectClause, QueryModel queryModel)
    content.vb: Public Overrides Sub VisitSelectClause(selectClause As SelectClause, queryModel As QueryModel)
    parameters:
    - id: selectClause
      type: SelectClause
    - id: queryModel
      type: QueryModel
  overload: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitSelectClause*
  nameWithType.vb: ExpressionTransformingQueryModelVisitor(Of TVisitor).VisitSelectClause(SelectClause, QueryModel)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor(Of TVisitor).VisitSelectClause(SelectClause, QueryModel)
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitResultOperator(ResultOperatorBase,QueryModel,System.Int32)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitResultOperator(ResultOperatorBase,QueryModel,System.Int32)
  id: VisitResultOperator(ResultOperatorBase,QueryModel,System.Int32)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1
  langs:
  - csharp
  - vb
  name: VisitResultOperator(ResultOperatorBase, QueryModel, Int32)
  nameWithType: ExpressionTransformingQueryModelVisitor<TVisitor>.VisitResultOperator(ResultOperatorBase, QueryModel, Int32)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor<TVisitor>.VisitResultOperator(ResultOperatorBase, QueryModel, System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/ExpressionTransformingQueryModelVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: VisitResultOperator
    path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/ExpressionTransformingQueryModelVisitor.cs
    startLine: 95
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public override void VisitResultOperator(ResultOperatorBase resultOperator, QueryModel queryModel, int index)
    content.vb: Public Overrides Sub VisitResultOperator(resultOperator As ResultOperatorBase, queryModel As QueryModel, index As Integer)
    parameters:
    - id: resultOperator
      type: ResultOperatorBase
    - id: queryModel
      type: QueryModel
    - id: index
      type: System.Int32
  overload: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitResultOperator*
  nameWithType.vb: ExpressionTransformingQueryModelVisitor(Of TVisitor).VisitResultOperator(ResultOperatorBase, QueryModel, Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor(Of TVisitor).VisitResultOperator(ResultOperatorBase, QueryModel, System.Int32)
references:
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.TransformingVisitor*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.TransformingVisitor
  isExternal: false
  name: TransformingVisitor
  nameWithType: ExpressionTransformingQueryModelVisitor<TVisitor>.TransformingVisitor
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor<TVisitor>.TransformingVisitor
  nameWithType.vb: ExpressionTransformingQueryModelVisitor(Of TVisitor).TransformingVisitor
  fullname.vb: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor(Of TVisitor).TransformingVisitor
- uid: '{TVisitor}'
  commentId: '!:TVisitor'
  definition: TVisitor
  name: TVisitor
  nameWithType: TVisitor
  fullName: TVisitor
- uid: TVisitor
  isExternal: false
  name: TVisitor
  nameWithType: TVisitor
  fullName: TVisitor
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.#ctor*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.#ctor
  isExternal: false
  name: ExpressionTransformingQueryModelVisitor
  nameWithType: ExpressionTransformingQueryModelVisitor<TVisitor>.ExpressionTransformingQueryModelVisitor
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor<TVisitor>.ExpressionTransformingQueryModelVisitor
  nameWithType.vb: ExpressionTransformingQueryModelVisitor(Of TVisitor).ExpressionTransformingQueryModelVisitor
  fullname.vb: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor(Of TVisitor).ExpressionTransformingQueryModelVisitor
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitMainFromClause*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitMainFromClause
  isExternal: false
  name: VisitMainFromClause
  nameWithType: ExpressionTransformingQueryModelVisitor<TVisitor>.VisitMainFromClause
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor<TVisitor>.VisitMainFromClause
  nameWithType.vb: ExpressionTransformingQueryModelVisitor(Of TVisitor).VisitMainFromClause
  fullname.vb: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor(Of TVisitor).VisitMainFromClause
- uid: MainFromClause
  isExternal: true
  name: MainFromClause
  nameWithType: MainFromClause
  fullName: MainFromClause
- uid: QueryModel
  isExternal: true
  name: QueryModel
  nameWithType: QueryModel
  fullName: QueryModel
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitAdditionalFromClause*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitAdditionalFromClause
  isExternal: false
  name: VisitAdditionalFromClause
  nameWithType: ExpressionTransformingQueryModelVisitor<TVisitor>.VisitAdditionalFromClause
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor<TVisitor>.VisitAdditionalFromClause
  nameWithType.vb: ExpressionTransformingQueryModelVisitor(Of TVisitor).VisitAdditionalFromClause
  fullname.vb: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor(Of TVisitor).VisitAdditionalFromClause
- uid: AdditionalFromClause
  isExternal: true
  name: AdditionalFromClause
  nameWithType: AdditionalFromClause
  fullName: AdditionalFromClause
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitJoinClause*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitJoinClause
  isExternal: false
  name: VisitJoinClause
  nameWithType: ExpressionTransformingQueryModelVisitor<TVisitor>.VisitJoinClause
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor<TVisitor>.VisitJoinClause
  nameWithType.vb: ExpressionTransformingQueryModelVisitor(Of TVisitor).VisitJoinClause
  fullname.vb: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor(Of TVisitor).VisitJoinClause
- uid: JoinClause
  isExternal: true
  name: JoinClause
  nameWithType: JoinClause
  fullName: JoinClause
- uid: GroupJoinClause
  isExternal: true
  name: GroupJoinClause
  nameWithType: GroupJoinClause
  fullName: GroupJoinClause
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitWhereClause*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitWhereClause
  isExternal: false
  name: VisitWhereClause
  nameWithType: ExpressionTransformingQueryModelVisitor<TVisitor>.VisitWhereClause
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor<TVisitor>.VisitWhereClause
  nameWithType.vb: ExpressionTransformingQueryModelVisitor(Of TVisitor).VisitWhereClause
  fullname.vb: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor(Of TVisitor).VisitWhereClause
- uid: WhereClause
  isExternal: true
  name: WhereClause
  nameWithType: WhereClause
  fullName: WhereClause
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitOrderByClause*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitOrderByClause
  isExternal: false
  name: VisitOrderByClause
  nameWithType: ExpressionTransformingQueryModelVisitor<TVisitor>.VisitOrderByClause
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor<TVisitor>.VisitOrderByClause
  nameWithType.vb: ExpressionTransformingQueryModelVisitor(Of TVisitor).VisitOrderByClause
  fullname.vb: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor(Of TVisitor).VisitOrderByClause
- uid: OrderByClause
  isExternal: true
  name: OrderByClause
  nameWithType: OrderByClause
  fullName: OrderByClause
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitOrdering*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitOrdering
  isExternal: false
  name: VisitOrdering
  nameWithType: ExpressionTransformingQueryModelVisitor<TVisitor>.VisitOrdering
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor<TVisitor>.VisitOrdering
  nameWithType.vb: ExpressionTransformingQueryModelVisitor(Of TVisitor).VisitOrdering
  fullname.vb: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor(Of TVisitor).VisitOrdering
- uid: Ordering
  isExternal: true
  name: Ordering
  nameWithType: Ordering
  fullName: Ordering
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitSelectClause*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitSelectClause
  isExternal: false
  name: VisitSelectClause
  nameWithType: ExpressionTransformingQueryModelVisitor<TVisitor>.VisitSelectClause
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor<TVisitor>.VisitSelectClause
  nameWithType.vb: ExpressionTransformingQueryModelVisitor(Of TVisitor).VisitSelectClause
  fullname.vb: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor(Of TVisitor).VisitSelectClause
- uid: SelectClause
  isExternal: true
  name: SelectClause
  nameWithType: SelectClause
  fullName: SelectClause
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitResultOperator*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitResultOperator
  isExternal: false
  name: VisitResultOperator
  nameWithType: ExpressionTransformingQueryModelVisitor<TVisitor>.VisitResultOperator
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor<TVisitor>.VisitResultOperator
  nameWithType.vb: ExpressionTransformingQueryModelVisitor(Of TVisitor).VisitResultOperator
  fullname.vb: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor(Of TVisitor).VisitResultOperator
- uid: ResultOperatorBase
  isExternal: true
  name: ResultOperatorBase
  nameWithType: ResultOperatorBase
  fullName: ResultOperatorBase
