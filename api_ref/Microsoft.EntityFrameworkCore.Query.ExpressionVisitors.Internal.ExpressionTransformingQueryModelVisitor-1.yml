### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1
  commentId: T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1
  id: ExpressionTransformingQueryModelVisitor`1
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  children:
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.#ctor(`0)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.TransformingVisitor
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitAdditionalFromClause(Remotion.Linq.Clauses.AdditionalFromClause,Remotion.Linq.QueryModel,System.Int32)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitJoinClause(Remotion.Linq.Clauses.JoinClause,Remotion.Linq.QueryModel,Remotion.Linq.Clauses.GroupJoinClause)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitJoinClause(Remotion.Linq.Clauses.JoinClause,Remotion.Linq.QueryModel,System.Int32)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitMainFromClause(Remotion.Linq.Clauses.MainFromClause,Remotion.Linq.QueryModel)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitOrderByClause(Remotion.Linq.Clauses.OrderByClause,Remotion.Linq.QueryModel,System.Int32)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitOrdering(Remotion.Linq.Clauses.Ordering,Remotion.Linq.QueryModel,Remotion.Linq.Clauses.OrderByClause,System.Int32)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitResultOperator(Remotion.Linq.Clauses.ResultOperatorBase,Remotion.Linq.QueryModel,System.Int32)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitSelectClause(Remotion.Linq.Clauses.SelectClause,Remotion.Linq.QueryModel)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitWhereClause(Remotion.Linq.Clauses.WhereClause,Remotion.Linq.QueryModel,System.Int32)
  langs:
  - csharp
  - vb
  name: ExpressionTransformingQueryModelVisitor<TVisitor>
  nameWithType: ExpressionTransformingQueryModelVisitor<TVisitor>
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor<TVisitor>
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/ExpressionTransformingQueryModelVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ExpressionTransformingQueryModelVisitor
    path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/ExpressionTransformingQueryModelVisitor.cs
    startLine: 15
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public class ExpressionTransformingQueryModelVisitor<TVisitor> : QueryModelVisitorBase, IQueryModelVisitor where TVisitor : RelinqExpressionVisitor'
    content.vb: >-
      Public Class ExpressionTransformingQueryModelVisitor(Of TVisitor As RelinqExpressionVisitor)
          Inherits QueryModelVisitorBase
          Implements IQueryModelVisitor
    typeParameters:
    - id: TVisitor
  inheritance:
  - System.Object
  - Remotion.Linq.QueryModelVisitorBase
  implements:
  - Remotion.Linq.IQueryModelVisitor
  inheritedMembers:
  - Remotion.Linq.QueryModelVisitorBase.VisitQueryModel(Remotion.Linq.QueryModel)
  - Remotion.Linq.QueryModelVisitorBase.VisitGroupJoinClause(Remotion.Linq.Clauses.GroupJoinClause,Remotion.Linq.QueryModel,System.Int32)
  - Remotion.Linq.QueryModelVisitorBase.VisitBodyClauses(System.Collections.ObjectModel.ObservableCollection{Remotion.Linq.Clauses.IBodyClause},Remotion.Linq.QueryModel)
  - Remotion.Linq.QueryModelVisitorBase.VisitOrderings(System.Collections.ObjectModel.ObservableCollection{Remotion.Linq.Clauses.Ordering},Remotion.Linq.QueryModel,Remotion.Linq.Clauses.OrderByClause)
  - Remotion.Linq.QueryModelVisitorBase.VisitResultOperators(System.Collections.ObjectModel.ObservableCollection{Remotion.Linq.Clauses.ResultOperatorBase},Remotion.Linq.QueryModel)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: ExpressionTransformingQueryModelVisitor(Of TVisitor)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor(Of TVisitor)
  name.vb: ExpressionTransformingQueryModelVisitor(Of TVisitor)
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.TransformingVisitor
  commentId: P:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.TransformingVisitor
  id: TransformingVisitor
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1
  langs:
  - csharp
  - vb
  name: TransformingVisitor
  nameWithType: ExpressionTransformingQueryModelVisitor<TVisitor>.TransformingVisitor
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor<TVisitor>.TransformingVisitor
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/ExpressionTransformingQueryModelVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: TransformingVisitor
    path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/ExpressionTransformingQueryModelVisitor.cs
    startLine: 22
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual TVisitor TransformingVisitor { get; }
    content.vb: Protected Overridable ReadOnly Property TransformingVisitor As TVisitor
    parameters: []
    return:
      type: '{TVisitor}'
  nameWithType.vb: ExpressionTransformingQueryModelVisitor(Of TVisitor).TransformingVisitor
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
  fullName.vb: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor(Of TVisitor).TransformingVisitor
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.#ctor(`0)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.#ctor(`0)
  id: '#ctor(`0)'
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1
  langs:
  - csharp
  - vb
  name: ExpressionTransformingQueryModelVisitor(TVisitor)
  nameWithType: ExpressionTransformingQueryModelVisitor<TVisitor>.ExpressionTransformingQueryModelVisitor(TVisitor)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor<TVisitor>.ExpressionTransformingQueryModelVisitor(TVisitor)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/ExpressionTransformingQueryModelVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/ExpressionTransformingQueryModelVisitor.cs
    startLine: 28
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public ExpressionTransformingQueryModelVisitor(TVisitor transformingVisitor)
    content.vb: Public Sub New(transformingVisitor As TVisitor)
    parameters:
    - id: transformingVisitor
      type: '{TVisitor}'
  nameWithType.vb: ExpressionTransformingQueryModelVisitor(Of TVisitor).ExpressionTransformingQueryModelVisitor(TVisitor)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor(Of TVisitor).ExpressionTransformingQueryModelVisitor(TVisitor)
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitMainFromClause(Remotion.Linq.Clauses.MainFromClause,Remotion.Linq.QueryModel)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitMainFromClause(Remotion.Linq.Clauses.MainFromClause,Remotion.Linq.QueryModel)
  id: VisitMainFromClause(Remotion.Linq.Clauses.MainFromClause,Remotion.Linq.QueryModel)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1
  langs:
  - csharp
  - vb
  name: VisitMainFromClause(MainFromClause, QueryModel)
  nameWithType: ExpressionTransformingQueryModelVisitor<TVisitor>.VisitMainFromClause(MainFromClause, QueryModel)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor<TVisitor>.VisitMainFromClause(Remotion.Linq.Clauses.MainFromClause, Remotion.Linq.QueryModel)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/ExpressionTransformingQueryModelVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: VisitMainFromClause
    path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/ExpressionTransformingQueryModelVisitor.cs
    startLine: 39
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public override void VisitMainFromClause(MainFromClause fromClause, QueryModel queryModel)
    content.vb: Public Overrides Sub VisitMainFromClause(fromClause As MainFromClause, queryModel As QueryModel)
    parameters:
    - id: fromClause
      type: Remotion.Linq.Clauses.MainFromClause
    - id: queryModel
      type: Remotion.Linq.QueryModel
  overridden: Remotion.Linq.QueryModelVisitorBase.VisitMainFromClause(Remotion.Linq.Clauses.MainFromClause,Remotion.Linq.QueryModel)
  nameWithType.vb: ExpressionTransformingQueryModelVisitor(Of TVisitor).VisitMainFromClause(MainFromClause, QueryModel)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor(Of TVisitor).VisitMainFromClause(Remotion.Linq.Clauses.MainFromClause, Remotion.Linq.QueryModel)
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitAdditionalFromClause(Remotion.Linq.Clauses.AdditionalFromClause,Remotion.Linq.QueryModel,System.Int32)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitAdditionalFromClause(Remotion.Linq.Clauses.AdditionalFromClause,Remotion.Linq.QueryModel,System.Int32)
  id: VisitAdditionalFromClause(Remotion.Linq.Clauses.AdditionalFromClause,Remotion.Linq.QueryModel,System.Int32)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1
  langs:
  - csharp
  - vb
  name: VisitAdditionalFromClause(AdditionalFromClause, QueryModel, Int32)
  nameWithType: ExpressionTransformingQueryModelVisitor<TVisitor>.VisitAdditionalFromClause(AdditionalFromClause, QueryModel, Int32)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor<TVisitor>.VisitAdditionalFromClause(Remotion.Linq.Clauses.AdditionalFromClause, Remotion.Linq.QueryModel, System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/ExpressionTransformingQueryModelVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: VisitAdditionalFromClause
    path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/ExpressionTransformingQueryModelVisitor.cs
    startLine: 46
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public override void VisitAdditionalFromClause(AdditionalFromClause fromClause, QueryModel queryModel, int index)
    content.vb: Public Overrides Sub VisitAdditionalFromClause(fromClause As AdditionalFromClause, queryModel As QueryModel, index As Integer)
    parameters:
    - id: fromClause
      type: Remotion.Linq.Clauses.AdditionalFromClause
    - id: queryModel
      type: Remotion.Linq.QueryModel
    - id: index
      type: System.Int32
  overridden: Remotion.Linq.QueryModelVisitorBase.VisitAdditionalFromClause(Remotion.Linq.Clauses.AdditionalFromClause,Remotion.Linq.QueryModel,System.Int32)
  nameWithType.vb: ExpressionTransformingQueryModelVisitor(Of TVisitor).VisitAdditionalFromClause(AdditionalFromClause, QueryModel, Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor(Of TVisitor).VisitAdditionalFromClause(Remotion.Linq.Clauses.AdditionalFromClause, Remotion.Linq.QueryModel, System.Int32)
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitJoinClause(Remotion.Linq.Clauses.JoinClause,Remotion.Linq.QueryModel,System.Int32)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitJoinClause(Remotion.Linq.Clauses.JoinClause,Remotion.Linq.QueryModel,System.Int32)
  id: VisitJoinClause(Remotion.Linq.Clauses.JoinClause,Remotion.Linq.QueryModel,System.Int32)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1
  langs:
  - csharp
  - vb
  name: VisitJoinClause(JoinClause, QueryModel, Int32)
  nameWithType: ExpressionTransformingQueryModelVisitor<TVisitor>.VisitJoinClause(JoinClause, QueryModel, Int32)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor<TVisitor>.VisitJoinClause(Remotion.Linq.Clauses.JoinClause, Remotion.Linq.QueryModel, System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/ExpressionTransformingQueryModelVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: VisitJoinClause
    path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/ExpressionTransformingQueryModelVisitor.cs
    startLine: 53
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public override void VisitJoinClause(JoinClause joinClause, QueryModel queryModel, int index)
    content.vb: Public Overrides Sub VisitJoinClause(joinClause As JoinClause, queryModel As QueryModel, index As Integer)
    parameters:
    - id: joinClause
      type: Remotion.Linq.Clauses.JoinClause
    - id: queryModel
      type: Remotion.Linq.QueryModel
    - id: index
      type: System.Int32
  overridden: Remotion.Linq.QueryModelVisitorBase.VisitJoinClause(Remotion.Linq.Clauses.JoinClause,Remotion.Linq.QueryModel,System.Int32)
  nameWithType.vb: ExpressionTransformingQueryModelVisitor(Of TVisitor).VisitJoinClause(JoinClause, QueryModel, Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor(Of TVisitor).VisitJoinClause(Remotion.Linq.Clauses.JoinClause, Remotion.Linq.QueryModel, System.Int32)
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitJoinClause(Remotion.Linq.Clauses.JoinClause,Remotion.Linq.QueryModel,Remotion.Linq.Clauses.GroupJoinClause)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitJoinClause(Remotion.Linq.Clauses.JoinClause,Remotion.Linq.QueryModel,Remotion.Linq.Clauses.GroupJoinClause)
  id: VisitJoinClause(Remotion.Linq.Clauses.JoinClause,Remotion.Linq.QueryModel,Remotion.Linq.Clauses.GroupJoinClause)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1
  langs:
  - csharp
  - vb
  name: VisitJoinClause(JoinClause, QueryModel, GroupJoinClause)
  nameWithType: ExpressionTransformingQueryModelVisitor<TVisitor>.VisitJoinClause(JoinClause, QueryModel, GroupJoinClause)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor<TVisitor>.VisitJoinClause(Remotion.Linq.Clauses.JoinClause, Remotion.Linq.QueryModel, Remotion.Linq.Clauses.GroupJoinClause)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/ExpressionTransformingQueryModelVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: VisitJoinClause
    path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/ExpressionTransformingQueryModelVisitor.cs
    startLine: 60
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public override void VisitJoinClause(JoinClause joinClause, QueryModel queryModel, GroupJoinClause groupJoinClause)
    content.vb: Public Overrides Sub VisitJoinClause(joinClause As JoinClause, queryModel As QueryModel, groupJoinClause As GroupJoinClause)
    parameters:
    - id: joinClause
      type: Remotion.Linq.Clauses.JoinClause
    - id: queryModel
      type: Remotion.Linq.QueryModel
    - id: groupJoinClause
      type: Remotion.Linq.Clauses.GroupJoinClause
  overridden: Remotion.Linq.QueryModelVisitorBase.VisitJoinClause(Remotion.Linq.Clauses.JoinClause,Remotion.Linq.QueryModel,Remotion.Linq.Clauses.GroupJoinClause)
  nameWithType.vb: ExpressionTransformingQueryModelVisitor(Of TVisitor).VisitJoinClause(JoinClause, QueryModel, GroupJoinClause)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor(Of TVisitor).VisitJoinClause(Remotion.Linq.Clauses.JoinClause, Remotion.Linq.QueryModel, Remotion.Linq.Clauses.GroupJoinClause)
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitWhereClause(Remotion.Linq.Clauses.WhereClause,Remotion.Linq.QueryModel,System.Int32)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitWhereClause(Remotion.Linq.Clauses.WhereClause,Remotion.Linq.QueryModel,System.Int32)
  id: VisitWhereClause(Remotion.Linq.Clauses.WhereClause,Remotion.Linq.QueryModel,System.Int32)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1
  langs:
  - csharp
  - vb
  name: VisitWhereClause(WhereClause, QueryModel, Int32)
  nameWithType: ExpressionTransformingQueryModelVisitor<TVisitor>.VisitWhereClause(WhereClause, QueryModel, Int32)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor<TVisitor>.VisitWhereClause(Remotion.Linq.Clauses.WhereClause, Remotion.Linq.QueryModel, System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/ExpressionTransformingQueryModelVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: VisitWhereClause
    path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/ExpressionTransformingQueryModelVisitor.cs
    startLine: 67
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public override void VisitWhereClause(WhereClause whereClause, QueryModel queryModel, int index)
    content.vb: Public Overrides Sub VisitWhereClause(whereClause As WhereClause, queryModel As QueryModel, index As Integer)
    parameters:
    - id: whereClause
      type: Remotion.Linq.Clauses.WhereClause
    - id: queryModel
      type: Remotion.Linq.QueryModel
    - id: index
      type: System.Int32
  overridden: Remotion.Linq.QueryModelVisitorBase.VisitWhereClause(Remotion.Linq.Clauses.WhereClause,Remotion.Linq.QueryModel,System.Int32)
  nameWithType.vb: ExpressionTransformingQueryModelVisitor(Of TVisitor).VisitWhereClause(WhereClause, QueryModel, Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor(Of TVisitor).VisitWhereClause(Remotion.Linq.Clauses.WhereClause, Remotion.Linq.QueryModel, System.Int32)
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitOrderByClause(Remotion.Linq.Clauses.OrderByClause,Remotion.Linq.QueryModel,System.Int32)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitOrderByClause(Remotion.Linq.Clauses.OrderByClause,Remotion.Linq.QueryModel,System.Int32)
  id: VisitOrderByClause(Remotion.Linq.Clauses.OrderByClause,Remotion.Linq.QueryModel,System.Int32)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1
  langs:
  - csharp
  - vb
  name: VisitOrderByClause(OrderByClause, QueryModel, Int32)
  nameWithType: ExpressionTransformingQueryModelVisitor<TVisitor>.VisitOrderByClause(OrderByClause, QueryModel, Int32)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor<TVisitor>.VisitOrderByClause(Remotion.Linq.Clauses.OrderByClause, Remotion.Linq.QueryModel, System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/ExpressionTransformingQueryModelVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: VisitOrderByClause
    path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/ExpressionTransformingQueryModelVisitor.cs
    startLine: 74
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public override void VisitOrderByClause(OrderByClause orderByClause, QueryModel queryModel, int index)
    content.vb: Public Overrides Sub VisitOrderByClause(orderByClause As OrderByClause, queryModel As QueryModel, index As Integer)
    parameters:
    - id: orderByClause
      type: Remotion.Linq.Clauses.OrderByClause
    - id: queryModel
      type: Remotion.Linq.QueryModel
    - id: index
      type: System.Int32
  overridden: Remotion.Linq.QueryModelVisitorBase.VisitOrderByClause(Remotion.Linq.Clauses.OrderByClause,Remotion.Linq.QueryModel,System.Int32)
  nameWithType.vb: ExpressionTransformingQueryModelVisitor(Of TVisitor).VisitOrderByClause(OrderByClause, QueryModel, Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor(Of TVisitor).VisitOrderByClause(Remotion.Linq.Clauses.OrderByClause, Remotion.Linq.QueryModel, System.Int32)
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitOrdering(Remotion.Linq.Clauses.Ordering,Remotion.Linq.QueryModel,Remotion.Linq.Clauses.OrderByClause,System.Int32)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitOrdering(Remotion.Linq.Clauses.Ordering,Remotion.Linq.QueryModel,Remotion.Linq.Clauses.OrderByClause,System.Int32)
  id: VisitOrdering(Remotion.Linq.Clauses.Ordering,Remotion.Linq.QueryModel,Remotion.Linq.Clauses.OrderByClause,System.Int32)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1
  langs:
  - csharp
  - vb
  name: VisitOrdering(Ordering, QueryModel, OrderByClause, Int32)
  nameWithType: ExpressionTransformingQueryModelVisitor<TVisitor>.VisitOrdering(Ordering, QueryModel, OrderByClause, Int32)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor<TVisitor>.VisitOrdering(Remotion.Linq.Clauses.Ordering, Remotion.Linq.QueryModel, Remotion.Linq.Clauses.OrderByClause, System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/ExpressionTransformingQueryModelVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: VisitOrdering
    path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/ExpressionTransformingQueryModelVisitor.cs
    startLine: 81
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public override void VisitOrdering(Ordering ordering, QueryModel queryModel, OrderByClause orderByClause, int index)
    content.vb: Public Overrides Sub VisitOrdering(ordering As Ordering, queryModel As QueryModel, orderByClause As OrderByClause, index As Integer)
    parameters:
    - id: ordering
      type: Remotion.Linq.Clauses.Ordering
    - id: queryModel
      type: Remotion.Linq.QueryModel
    - id: orderByClause
      type: Remotion.Linq.Clauses.OrderByClause
    - id: index
      type: System.Int32
  overridden: Remotion.Linq.QueryModelVisitorBase.VisitOrdering(Remotion.Linq.Clauses.Ordering,Remotion.Linq.QueryModel,Remotion.Linq.Clauses.OrderByClause,System.Int32)
  nameWithType.vb: ExpressionTransformingQueryModelVisitor(Of TVisitor).VisitOrdering(Ordering, QueryModel, OrderByClause, Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor(Of TVisitor).VisitOrdering(Remotion.Linq.Clauses.Ordering, Remotion.Linq.QueryModel, Remotion.Linq.Clauses.OrderByClause, System.Int32)
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitSelectClause(Remotion.Linq.Clauses.SelectClause,Remotion.Linq.QueryModel)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitSelectClause(Remotion.Linq.Clauses.SelectClause,Remotion.Linq.QueryModel)
  id: VisitSelectClause(Remotion.Linq.Clauses.SelectClause,Remotion.Linq.QueryModel)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1
  langs:
  - csharp
  - vb
  name: VisitSelectClause(SelectClause, QueryModel)
  nameWithType: ExpressionTransformingQueryModelVisitor<TVisitor>.VisitSelectClause(SelectClause, QueryModel)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor<TVisitor>.VisitSelectClause(Remotion.Linq.Clauses.SelectClause, Remotion.Linq.QueryModel)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/ExpressionTransformingQueryModelVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: VisitSelectClause
    path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/ExpressionTransformingQueryModelVisitor.cs
    startLine: 88
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public override void VisitSelectClause(SelectClause selectClause, QueryModel queryModel)
    content.vb: Public Overrides Sub VisitSelectClause(selectClause As SelectClause, queryModel As QueryModel)
    parameters:
    - id: selectClause
      type: Remotion.Linq.Clauses.SelectClause
    - id: queryModel
      type: Remotion.Linq.QueryModel
  overridden: Remotion.Linq.QueryModelVisitorBase.VisitSelectClause(Remotion.Linq.Clauses.SelectClause,Remotion.Linq.QueryModel)
  nameWithType.vb: ExpressionTransformingQueryModelVisitor(Of TVisitor).VisitSelectClause(SelectClause, QueryModel)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor(Of TVisitor).VisitSelectClause(Remotion.Linq.Clauses.SelectClause, Remotion.Linq.QueryModel)
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitResultOperator(Remotion.Linq.Clauses.ResultOperatorBase,Remotion.Linq.QueryModel,System.Int32)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitResultOperator(Remotion.Linq.Clauses.ResultOperatorBase,Remotion.Linq.QueryModel,System.Int32)
  id: VisitResultOperator(Remotion.Linq.Clauses.ResultOperatorBase,Remotion.Linq.QueryModel,System.Int32)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1
  langs:
  - csharp
  - vb
  name: VisitResultOperator(ResultOperatorBase, QueryModel, Int32)
  nameWithType: ExpressionTransformingQueryModelVisitor<TVisitor>.VisitResultOperator(ResultOperatorBase, QueryModel, Int32)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor<TVisitor>.VisitResultOperator(Remotion.Linq.Clauses.ResultOperatorBase, Remotion.Linq.QueryModel, System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/ExpressionTransformingQueryModelVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: VisitResultOperator
    path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/ExpressionTransformingQueryModelVisitor.cs
    startLine: 95
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public override void VisitResultOperator(ResultOperatorBase resultOperator, QueryModel queryModel, int index)
    content.vb: Public Overrides Sub VisitResultOperator(resultOperator As ResultOperatorBase, queryModel As QueryModel, index As Integer)
    parameters:
    - id: resultOperator
      type: Remotion.Linq.Clauses.ResultOperatorBase
    - id: queryModel
      type: Remotion.Linq.QueryModel
    - id: index
      type: System.Int32
  overridden: Remotion.Linq.QueryModelVisitorBase.VisitResultOperator(Remotion.Linq.Clauses.ResultOperatorBase,Remotion.Linq.QueryModel,System.Int32)
  nameWithType.vb: ExpressionTransformingQueryModelVisitor(Of TVisitor).VisitResultOperator(ResultOperatorBase, QueryModel, Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor(Of TVisitor).VisitResultOperator(Remotion.Linq.Clauses.ResultOperatorBase, Remotion.Linq.QueryModel, System.Int32)
references:
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Remotion.Linq.QueryModelVisitorBase
  commentId: T:Remotion.Linq.QueryModelVisitorBase
  parent: Remotion.Linq
  isExternal: true
  name: QueryModelVisitorBase
  nameWithType: QueryModelVisitorBase
  fullName: Remotion.Linq.QueryModelVisitorBase
- uid: Remotion.Linq.IQueryModelVisitor
  commentId: T:Remotion.Linq.IQueryModelVisitor
  parent: Remotion.Linq
  isExternal: true
  name: IQueryModelVisitor
  nameWithType: IQueryModelVisitor
  fullName: Remotion.Linq.IQueryModelVisitor
- uid: Remotion.Linq.QueryModelVisitorBase.VisitQueryModel(Remotion.Linq.QueryModel)
  commentId: M:Remotion.Linq.QueryModelVisitorBase.VisitQueryModel(Remotion.Linq.QueryModel)
  parent: Remotion.Linq.QueryModelVisitorBase
  isExternal: true
  name: VisitQueryModel(QueryModel)
  nameWithType: QueryModelVisitorBase.VisitQueryModel(QueryModel)
  fullName: Remotion.Linq.QueryModelVisitorBase.VisitQueryModel(Remotion.Linq.QueryModel)
  spec.csharp:
  - uid: Remotion.Linq.QueryModelVisitorBase.VisitQueryModel(Remotion.Linq.QueryModel)
    name: VisitQueryModel
    nameWithType: QueryModelVisitorBase.VisitQueryModel
    fullName: Remotion.Linq.QueryModelVisitorBase.VisitQueryModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.QueryModelVisitorBase.VisitQueryModel(Remotion.Linq.QueryModel)
    name: VisitQueryModel
    nameWithType: QueryModelVisitorBase.VisitQueryModel
    fullName: Remotion.Linq.QueryModelVisitorBase.VisitQueryModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.QueryModelVisitorBase.VisitGroupJoinClause(Remotion.Linq.Clauses.GroupJoinClause,Remotion.Linq.QueryModel,System.Int32)
  commentId: M:Remotion.Linq.QueryModelVisitorBase.VisitGroupJoinClause(Remotion.Linq.Clauses.GroupJoinClause,Remotion.Linq.QueryModel,System.Int32)
  parent: Remotion.Linq.QueryModelVisitorBase
  isExternal: true
  name: VisitGroupJoinClause(GroupJoinClause, QueryModel, Int32)
  nameWithType: QueryModelVisitorBase.VisitGroupJoinClause(GroupJoinClause, QueryModel, Int32)
  fullName: Remotion.Linq.QueryModelVisitorBase.VisitGroupJoinClause(Remotion.Linq.Clauses.GroupJoinClause, Remotion.Linq.QueryModel, System.Int32)
  spec.csharp:
  - uid: Remotion.Linq.QueryModelVisitorBase.VisitGroupJoinClause(Remotion.Linq.Clauses.GroupJoinClause,Remotion.Linq.QueryModel,System.Int32)
    name: VisitGroupJoinClause
    nameWithType: QueryModelVisitorBase.VisitGroupJoinClause
    fullName: Remotion.Linq.QueryModelVisitorBase.VisitGroupJoinClause
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.Clauses.GroupJoinClause
    name: GroupJoinClause
    nameWithType: GroupJoinClause
    fullName: Remotion.Linq.Clauses.GroupJoinClause
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.QueryModelVisitorBase.VisitGroupJoinClause(Remotion.Linq.Clauses.GroupJoinClause,Remotion.Linq.QueryModel,System.Int32)
    name: VisitGroupJoinClause
    nameWithType: QueryModelVisitorBase.VisitGroupJoinClause
    fullName: Remotion.Linq.QueryModelVisitorBase.VisitGroupJoinClause
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.Clauses.GroupJoinClause
    name: GroupJoinClause
    nameWithType: GroupJoinClause
    fullName: Remotion.Linq.Clauses.GroupJoinClause
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.QueryModelVisitorBase.VisitBodyClauses(System.Collections.ObjectModel.ObservableCollection{Remotion.Linq.Clauses.IBodyClause},Remotion.Linq.QueryModel)
  commentId: M:Remotion.Linq.QueryModelVisitorBase.VisitBodyClauses(System.Collections.ObjectModel.ObservableCollection{Remotion.Linq.Clauses.IBodyClause},Remotion.Linq.QueryModel)
  parent: Remotion.Linq.QueryModelVisitorBase
  isExternal: true
  name: VisitBodyClauses(ObservableCollection<IBodyClause>, QueryModel)
  nameWithType: QueryModelVisitorBase.VisitBodyClauses(ObservableCollection<IBodyClause>, QueryModel)
  fullName: Remotion.Linq.QueryModelVisitorBase.VisitBodyClauses(System.Collections.ObjectModel.ObservableCollection<Remotion.Linq.Clauses.IBodyClause>, Remotion.Linq.QueryModel)
  nameWithType.vb: QueryModelVisitorBase.VisitBodyClauses(ObservableCollection(Of IBodyClause), QueryModel)
  fullname.vb: Remotion.Linq.QueryModelVisitorBase.VisitBodyClauses(System.Collections.ObjectModel.ObservableCollection(Of Remotion.Linq.Clauses.IBodyClause), Remotion.Linq.QueryModel)
  name.vb: VisitBodyClauses(ObservableCollection(Of IBodyClause), QueryModel)
  spec.csharp:
  - uid: Remotion.Linq.QueryModelVisitorBase.VisitBodyClauses(System.Collections.ObjectModel.ObservableCollection{Remotion.Linq.Clauses.IBodyClause},Remotion.Linq.QueryModel)
    name: VisitBodyClauses
    nameWithType: QueryModelVisitorBase.VisitBodyClauses
    fullName: Remotion.Linq.QueryModelVisitorBase.VisitBodyClauses
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Remotion.Linq.Clauses.IBodyClause
    name: IBodyClause
    nameWithType: IBodyClause
    fullName: Remotion.Linq.Clauses.IBodyClause
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.QueryModelVisitorBase.VisitBodyClauses(System.Collections.ObjectModel.ObservableCollection{Remotion.Linq.Clauses.IBodyClause},Remotion.Linq.QueryModel)
    name: VisitBodyClauses
    nameWithType: QueryModelVisitorBase.VisitBodyClauses
    fullName: Remotion.Linq.QueryModelVisitorBase.VisitBodyClauses
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Remotion.Linq.Clauses.IBodyClause
    name: IBodyClause
    nameWithType: IBodyClause
    fullName: Remotion.Linq.Clauses.IBodyClause
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.QueryModelVisitorBase.VisitOrderings(System.Collections.ObjectModel.ObservableCollection{Remotion.Linq.Clauses.Ordering},Remotion.Linq.QueryModel,Remotion.Linq.Clauses.OrderByClause)
  commentId: M:Remotion.Linq.QueryModelVisitorBase.VisitOrderings(System.Collections.ObjectModel.ObservableCollection{Remotion.Linq.Clauses.Ordering},Remotion.Linq.QueryModel,Remotion.Linq.Clauses.OrderByClause)
  parent: Remotion.Linq.QueryModelVisitorBase
  isExternal: true
  name: VisitOrderings(ObservableCollection<Ordering>, QueryModel, OrderByClause)
  nameWithType: QueryModelVisitorBase.VisitOrderings(ObservableCollection<Ordering>, QueryModel, OrderByClause)
  fullName: Remotion.Linq.QueryModelVisitorBase.VisitOrderings(System.Collections.ObjectModel.ObservableCollection<Remotion.Linq.Clauses.Ordering>, Remotion.Linq.QueryModel, Remotion.Linq.Clauses.OrderByClause)
  nameWithType.vb: QueryModelVisitorBase.VisitOrderings(ObservableCollection(Of Ordering), QueryModel, OrderByClause)
  fullname.vb: Remotion.Linq.QueryModelVisitorBase.VisitOrderings(System.Collections.ObjectModel.ObservableCollection(Of Remotion.Linq.Clauses.Ordering), Remotion.Linq.QueryModel, Remotion.Linq.Clauses.OrderByClause)
  name.vb: VisitOrderings(ObservableCollection(Of Ordering), QueryModel, OrderByClause)
  spec.csharp:
  - uid: Remotion.Linq.QueryModelVisitorBase.VisitOrderings(System.Collections.ObjectModel.ObservableCollection{Remotion.Linq.Clauses.Ordering},Remotion.Linq.QueryModel,Remotion.Linq.Clauses.OrderByClause)
    name: VisitOrderings
    nameWithType: QueryModelVisitorBase.VisitOrderings
    fullName: Remotion.Linq.QueryModelVisitorBase.VisitOrderings
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Remotion.Linq.Clauses.Ordering
    name: Ordering
    nameWithType: Ordering
    fullName: Remotion.Linq.Clauses.Ordering
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.Clauses.OrderByClause
    name: OrderByClause
    nameWithType: OrderByClause
    fullName: Remotion.Linq.Clauses.OrderByClause
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.QueryModelVisitorBase.VisitOrderings(System.Collections.ObjectModel.ObservableCollection{Remotion.Linq.Clauses.Ordering},Remotion.Linq.QueryModel,Remotion.Linq.Clauses.OrderByClause)
    name: VisitOrderings
    nameWithType: QueryModelVisitorBase.VisitOrderings
    fullName: Remotion.Linq.QueryModelVisitorBase.VisitOrderings
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Remotion.Linq.Clauses.Ordering
    name: Ordering
    nameWithType: Ordering
    fullName: Remotion.Linq.Clauses.Ordering
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.Clauses.OrderByClause
    name: OrderByClause
    nameWithType: OrderByClause
    fullName: Remotion.Linq.Clauses.OrderByClause
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.QueryModelVisitorBase.VisitResultOperators(System.Collections.ObjectModel.ObservableCollection{Remotion.Linq.Clauses.ResultOperatorBase},Remotion.Linq.QueryModel)
  commentId: M:Remotion.Linq.QueryModelVisitorBase.VisitResultOperators(System.Collections.ObjectModel.ObservableCollection{Remotion.Linq.Clauses.ResultOperatorBase},Remotion.Linq.QueryModel)
  parent: Remotion.Linq.QueryModelVisitorBase
  isExternal: true
  name: VisitResultOperators(ObservableCollection<ResultOperatorBase>, QueryModel)
  nameWithType: QueryModelVisitorBase.VisitResultOperators(ObservableCollection<ResultOperatorBase>, QueryModel)
  fullName: Remotion.Linq.QueryModelVisitorBase.VisitResultOperators(System.Collections.ObjectModel.ObservableCollection<Remotion.Linq.Clauses.ResultOperatorBase>, Remotion.Linq.QueryModel)
  nameWithType.vb: QueryModelVisitorBase.VisitResultOperators(ObservableCollection(Of ResultOperatorBase), QueryModel)
  fullname.vb: Remotion.Linq.QueryModelVisitorBase.VisitResultOperators(System.Collections.ObjectModel.ObservableCollection(Of Remotion.Linq.Clauses.ResultOperatorBase), Remotion.Linq.QueryModel)
  name.vb: VisitResultOperators(ObservableCollection(Of ResultOperatorBase), QueryModel)
  spec.csharp:
  - uid: Remotion.Linq.QueryModelVisitorBase.VisitResultOperators(System.Collections.ObjectModel.ObservableCollection{Remotion.Linq.Clauses.ResultOperatorBase},Remotion.Linq.QueryModel)
    name: VisitResultOperators
    nameWithType: QueryModelVisitorBase.VisitResultOperators
    fullName: Remotion.Linq.QueryModelVisitorBase.VisitResultOperators
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Remotion.Linq.Clauses.ResultOperatorBase
    name: ResultOperatorBase
    nameWithType: ResultOperatorBase
    fullName: Remotion.Linq.Clauses.ResultOperatorBase
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.QueryModelVisitorBase.VisitResultOperators(System.Collections.ObjectModel.ObservableCollection{Remotion.Linq.Clauses.ResultOperatorBase},Remotion.Linq.QueryModel)
    name: VisitResultOperators
    nameWithType: QueryModelVisitorBase.VisitResultOperators
    fullName: Remotion.Linq.QueryModelVisitorBase.VisitResultOperators
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Remotion.Linq.Clauses.ResultOperatorBase
    name: ResultOperatorBase
    nameWithType: ResultOperatorBase
    fullName: Remotion.Linq.Clauses.ResultOperatorBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Remotion.Linq
  commentId: N:Remotion.Linq
  isExternal: false
  name: Remotion.Linq
  nameWithType: Remotion.Linq
  fullName: Remotion.Linq
- uid: '{TVisitor}'
  commentId: '!:TVisitor'
  definition: TVisitor
  name: TVisitor
  nameWithType: TVisitor
  fullName: TVisitor
- uid: TVisitor
  isExternal: false
  name: TVisitor
  nameWithType: TVisitor
  fullName: TVisitor
- uid: Remotion.Linq.QueryModelVisitorBase.VisitMainFromClause(Remotion.Linq.Clauses.MainFromClause,Remotion.Linq.QueryModel)
  commentId: M:Remotion.Linq.QueryModelVisitorBase.VisitMainFromClause(Remotion.Linq.Clauses.MainFromClause,Remotion.Linq.QueryModel)
  parent: Remotion.Linq.QueryModelVisitorBase
  isExternal: true
  name: VisitMainFromClause(MainFromClause, QueryModel)
  nameWithType: QueryModelVisitorBase.VisitMainFromClause(MainFromClause, QueryModel)
  fullName: Remotion.Linq.QueryModelVisitorBase.VisitMainFromClause(Remotion.Linq.Clauses.MainFromClause, Remotion.Linq.QueryModel)
  spec.csharp:
  - uid: Remotion.Linq.QueryModelVisitorBase.VisitMainFromClause(Remotion.Linq.Clauses.MainFromClause,Remotion.Linq.QueryModel)
    name: VisitMainFromClause
    nameWithType: QueryModelVisitorBase.VisitMainFromClause
    fullName: Remotion.Linq.QueryModelVisitorBase.VisitMainFromClause
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.Clauses.MainFromClause
    name: MainFromClause
    nameWithType: MainFromClause
    fullName: Remotion.Linq.Clauses.MainFromClause
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.QueryModelVisitorBase.VisitMainFromClause(Remotion.Linq.Clauses.MainFromClause,Remotion.Linq.QueryModel)
    name: VisitMainFromClause
    nameWithType: QueryModelVisitorBase.VisitMainFromClause
    fullName: Remotion.Linq.QueryModelVisitorBase.VisitMainFromClause
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.Clauses.MainFromClause
    name: MainFromClause
    nameWithType: MainFromClause
    fullName: Remotion.Linq.Clauses.MainFromClause
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Clauses.MainFromClause
  commentId: T:Remotion.Linq.Clauses.MainFromClause
  parent: Remotion.Linq.Clauses
  isExternal: true
  name: MainFromClause
  nameWithType: MainFromClause
  fullName: Remotion.Linq.Clauses.MainFromClause
- uid: Remotion.Linq.QueryModel
  commentId: T:Remotion.Linq.QueryModel
  parent: Remotion.Linq
  isExternal: true
  name: QueryModel
  nameWithType: QueryModel
  fullName: Remotion.Linq.QueryModel
- uid: Remotion.Linq.Clauses
  commentId: N:Remotion.Linq.Clauses
  isExternal: false
  name: Remotion.Linq.Clauses
  nameWithType: Remotion.Linq.Clauses
  fullName: Remotion.Linq.Clauses
- uid: Remotion.Linq.QueryModelVisitorBase.VisitAdditionalFromClause(Remotion.Linq.Clauses.AdditionalFromClause,Remotion.Linq.QueryModel,System.Int32)
  commentId: M:Remotion.Linq.QueryModelVisitorBase.VisitAdditionalFromClause(Remotion.Linq.Clauses.AdditionalFromClause,Remotion.Linq.QueryModel,System.Int32)
  parent: Remotion.Linq.QueryModelVisitorBase
  isExternal: true
  name: VisitAdditionalFromClause(AdditionalFromClause, QueryModel, Int32)
  nameWithType: QueryModelVisitorBase.VisitAdditionalFromClause(AdditionalFromClause, QueryModel, Int32)
  fullName: Remotion.Linq.QueryModelVisitorBase.VisitAdditionalFromClause(Remotion.Linq.Clauses.AdditionalFromClause, Remotion.Linq.QueryModel, System.Int32)
  spec.csharp:
  - uid: Remotion.Linq.QueryModelVisitorBase.VisitAdditionalFromClause(Remotion.Linq.Clauses.AdditionalFromClause,Remotion.Linq.QueryModel,System.Int32)
    name: VisitAdditionalFromClause
    nameWithType: QueryModelVisitorBase.VisitAdditionalFromClause
    fullName: Remotion.Linq.QueryModelVisitorBase.VisitAdditionalFromClause
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.Clauses.AdditionalFromClause
    name: AdditionalFromClause
    nameWithType: AdditionalFromClause
    fullName: Remotion.Linq.Clauses.AdditionalFromClause
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.QueryModelVisitorBase.VisitAdditionalFromClause(Remotion.Linq.Clauses.AdditionalFromClause,Remotion.Linq.QueryModel,System.Int32)
    name: VisitAdditionalFromClause
    nameWithType: QueryModelVisitorBase.VisitAdditionalFromClause
    fullName: Remotion.Linq.QueryModelVisitorBase.VisitAdditionalFromClause
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.Clauses.AdditionalFromClause
    name: AdditionalFromClause
    nameWithType: AdditionalFromClause
    fullName: Remotion.Linq.Clauses.AdditionalFromClause
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Clauses.AdditionalFromClause
  commentId: T:Remotion.Linq.Clauses.AdditionalFromClause
  parent: Remotion.Linq.Clauses
  isExternal: true
  name: AdditionalFromClause
  nameWithType: AdditionalFromClause
  fullName: Remotion.Linq.Clauses.AdditionalFromClause
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Remotion.Linq.QueryModelVisitorBase.VisitJoinClause(Remotion.Linq.Clauses.JoinClause,Remotion.Linq.QueryModel,System.Int32)
  commentId: M:Remotion.Linq.QueryModelVisitorBase.VisitJoinClause(Remotion.Linq.Clauses.JoinClause,Remotion.Linq.QueryModel,System.Int32)
  parent: Remotion.Linq.QueryModelVisitorBase
  isExternal: true
  name: VisitJoinClause(JoinClause, QueryModel, Int32)
  nameWithType: QueryModelVisitorBase.VisitJoinClause(JoinClause, QueryModel, Int32)
  fullName: Remotion.Linq.QueryModelVisitorBase.VisitJoinClause(Remotion.Linq.Clauses.JoinClause, Remotion.Linq.QueryModel, System.Int32)
  spec.csharp:
  - uid: Remotion.Linq.QueryModelVisitorBase.VisitJoinClause(Remotion.Linq.Clauses.JoinClause,Remotion.Linq.QueryModel,System.Int32)
    name: VisitJoinClause
    nameWithType: QueryModelVisitorBase.VisitJoinClause
    fullName: Remotion.Linq.QueryModelVisitorBase.VisitJoinClause
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.Clauses.JoinClause
    name: JoinClause
    nameWithType: JoinClause
    fullName: Remotion.Linq.Clauses.JoinClause
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.QueryModelVisitorBase.VisitJoinClause(Remotion.Linq.Clauses.JoinClause,Remotion.Linq.QueryModel,System.Int32)
    name: VisitJoinClause
    nameWithType: QueryModelVisitorBase.VisitJoinClause
    fullName: Remotion.Linq.QueryModelVisitorBase.VisitJoinClause
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.Clauses.JoinClause
    name: JoinClause
    nameWithType: JoinClause
    fullName: Remotion.Linq.Clauses.JoinClause
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Clauses.JoinClause
  commentId: T:Remotion.Linq.Clauses.JoinClause
  parent: Remotion.Linq.Clauses
  isExternal: true
  name: JoinClause
  nameWithType: JoinClause
  fullName: Remotion.Linq.Clauses.JoinClause
- uid: Remotion.Linq.QueryModelVisitorBase.VisitJoinClause(Remotion.Linq.Clauses.JoinClause,Remotion.Linq.QueryModel,Remotion.Linq.Clauses.GroupJoinClause)
  commentId: M:Remotion.Linq.QueryModelVisitorBase.VisitJoinClause(Remotion.Linq.Clauses.JoinClause,Remotion.Linq.QueryModel,Remotion.Linq.Clauses.GroupJoinClause)
  parent: Remotion.Linq.QueryModelVisitorBase
  isExternal: true
  name: VisitJoinClause(JoinClause, QueryModel, GroupJoinClause)
  nameWithType: QueryModelVisitorBase.VisitJoinClause(JoinClause, QueryModel, GroupJoinClause)
  fullName: Remotion.Linq.QueryModelVisitorBase.VisitJoinClause(Remotion.Linq.Clauses.JoinClause, Remotion.Linq.QueryModel, Remotion.Linq.Clauses.GroupJoinClause)
  spec.csharp:
  - uid: Remotion.Linq.QueryModelVisitorBase.VisitJoinClause(Remotion.Linq.Clauses.JoinClause,Remotion.Linq.QueryModel,Remotion.Linq.Clauses.GroupJoinClause)
    name: VisitJoinClause
    nameWithType: QueryModelVisitorBase.VisitJoinClause
    fullName: Remotion.Linq.QueryModelVisitorBase.VisitJoinClause
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.Clauses.JoinClause
    name: JoinClause
    nameWithType: JoinClause
    fullName: Remotion.Linq.Clauses.JoinClause
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.Clauses.GroupJoinClause
    name: GroupJoinClause
    nameWithType: GroupJoinClause
    fullName: Remotion.Linq.Clauses.GroupJoinClause
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.QueryModelVisitorBase.VisitJoinClause(Remotion.Linq.Clauses.JoinClause,Remotion.Linq.QueryModel,Remotion.Linq.Clauses.GroupJoinClause)
    name: VisitJoinClause
    nameWithType: QueryModelVisitorBase.VisitJoinClause
    fullName: Remotion.Linq.QueryModelVisitorBase.VisitJoinClause
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.Clauses.JoinClause
    name: JoinClause
    nameWithType: JoinClause
    fullName: Remotion.Linq.Clauses.JoinClause
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.Clauses.GroupJoinClause
    name: GroupJoinClause
    nameWithType: GroupJoinClause
    fullName: Remotion.Linq.Clauses.GroupJoinClause
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Clauses.GroupJoinClause
  commentId: T:Remotion.Linq.Clauses.GroupJoinClause
  parent: Remotion.Linq.Clauses
  isExternal: true
  name: GroupJoinClause
  nameWithType: GroupJoinClause
  fullName: Remotion.Linq.Clauses.GroupJoinClause
- uid: Remotion.Linq.QueryModelVisitorBase.VisitWhereClause(Remotion.Linq.Clauses.WhereClause,Remotion.Linq.QueryModel,System.Int32)
  commentId: M:Remotion.Linq.QueryModelVisitorBase.VisitWhereClause(Remotion.Linq.Clauses.WhereClause,Remotion.Linq.QueryModel,System.Int32)
  parent: Remotion.Linq.QueryModelVisitorBase
  isExternal: true
  name: VisitWhereClause(WhereClause, QueryModel, Int32)
  nameWithType: QueryModelVisitorBase.VisitWhereClause(WhereClause, QueryModel, Int32)
  fullName: Remotion.Linq.QueryModelVisitorBase.VisitWhereClause(Remotion.Linq.Clauses.WhereClause, Remotion.Linq.QueryModel, System.Int32)
  spec.csharp:
  - uid: Remotion.Linq.QueryModelVisitorBase.VisitWhereClause(Remotion.Linq.Clauses.WhereClause,Remotion.Linq.QueryModel,System.Int32)
    name: VisitWhereClause
    nameWithType: QueryModelVisitorBase.VisitWhereClause
    fullName: Remotion.Linq.QueryModelVisitorBase.VisitWhereClause
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.Clauses.WhereClause
    name: WhereClause
    nameWithType: WhereClause
    fullName: Remotion.Linq.Clauses.WhereClause
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.QueryModelVisitorBase.VisitWhereClause(Remotion.Linq.Clauses.WhereClause,Remotion.Linq.QueryModel,System.Int32)
    name: VisitWhereClause
    nameWithType: QueryModelVisitorBase.VisitWhereClause
    fullName: Remotion.Linq.QueryModelVisitorBase.VisitWhereClause
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.Clauses.WhereClause
    name: WhereClause
    nameWithType: WhereClause
    fullName: Remotion.Linq.Clauses.WhereClause
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Clauses.WhereClause
  commentId: T:Remotion.Linq.Clauses.WhereClause
  parent: Remotion.Linq.Clauses
  isExternal: true
  name: WhereClause
  nameWithType: WhereClause
  fullName: Remotion.Linq.Clauses.WhereClause
- uid: Remotion.Linq.QueryModelVisitorBase.VisitOrderByClause(Remotion.Linq.Clauses.OrderByClause,Remotion.Linq.QueryModel,System.Int32)
  commentId: M:Remotion.Linq.QueryModelVisitorBase.VisitOrderByClause(Remotion.Linq.Clauses.OrderByClause,Remotion.Linq.QueryModel,System.Int32)
  parent: Remotion.Linq.QueryModelVisitorBase
  isExternal: true
  name: VisitOrderByClause(OrderByClause, QueryModel, Int32)
  nameWithType: QueryModelVisitorBase.VisitOrderByClause(OrderByClause, QueryModel, Int32)
  fullName: Remotion.Linq.QueryModelVisitorBase.VisitOrderByClause(Remotion.Linq.Clauses.OrderByClause, Remotion.Linq.QueryModel, System.Int32)
  spec.csharp:
  - uid: Remotion.Linq.QueryModelVisitorBase.VisitOrderByClause(Remotion.Linq.Clauses.OrderByClause,Remotion.Linq.QueryModel,System.Int32)
    name: VisitOrderByClause
    nameWithType: QueryModelVisitorBase.VisitOrderByClause
    fullName: Remotion.Linq.QueryModelVisitorBase.VisitOrderByClause
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.Clauses.OrderByClause
    name: OrderByClause
    nameWithType: OrderByClause
    fullName: Remotion.Linq.Clauses.OrderByClause
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.QueryModelVisitorBase.VisitOrderByClause(Remotion.Linq.Clauses.OrderByClause,Remotion.Linq.QueryModel,System.Int32)
    name: VisitOrderByClause
    nameWithType: QueryModelVisitorBase.VisitOrderByClause
    fullName: Remotion.Linq.QueryModelVisitorBase.VisitOrderByClause
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.Clauses.OrderByClause
    name: OrderByClause
    nameWithType: OrderByClause
    fullName: Remotion.Linq.Clauses.OrderByClause
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Clauses.OrderByClause
  commentId: T:Remotion.Linq.Clauses.OrderByClause
  parent: Remotion.Linq.Clauses
  isExternal: true
  name: OrderByClause
  nameWithType: OrderByClause
  fullName: Remotion.Linq.Clauses.OrderByClause
- uid: Remotion.Linq.QueryModelVisitorBase.VisitOrdering(Remotion.Linq.Clauses.Ordering,Remotion.Linq.QueryModel,Remotion.Linq.Clauses.OrderByClause,System.Int32)
  commentId: M:Remotion.Linq.QueryModelVisitorBase.VisitOrdering(Remotion.Linq.Clauses.Ordering,Remotion.Linq.QueryModel,Remotion.Linq.Clauses.OrderByClause,System.Int32)
  parent: Remotion.Linq.QueryModelVisitorBase
  isExternal: true
  name: VisitOrdering(Ordering, QueryModel, OrderByClause, Int32)
  nameWithType: QueryModelVisitorBase.VisitOrdering(Ordering, QueryModel, OrderByClause, Int32)
  fullName: Remotion.Linq.QueryModelVisitorBase.VisitOrdering(Remotion.Linq.Clauses.Ordering, Remotion.Linq.QueryModel, Remotion.Linq.Clauses.OrderByClause, System.Int32)
  spec.csharp:
  - uid: Remotion.Linq.QueryModelVisitorBase.VisitOrdering(Remotion.Linq.Clauses.Ordering,Remotion.Linq.QueryModel,Remotion.Linq.Clauses.OrderByClause,System.Int32)
    name: VisitOrdering
    nameWithType: QueryModelVisitorBase.VisitOrdering
    fullName: Remotion.Linq.QueryModelVisitorBase.VisitOrdering
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.Clauses.Ordering
    name: Ordering
    nameWithType: Ordering
    fullName: Remotion.Linq.Clauses.Ordering
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.Clauses.OrderByClause
    name: OrderByClause
    nameWithType: OrderByClause
    fullName: Remotion.Linq.Clauses.OrderByClause
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.QueryModelVisitorBase.VisitOrdering(Remotion.Linq.Clauses.Ordering,Remotion.Linq.QueryModel,Remotion.Linq.Clauses.OrderByClause,System.Int32)
    name: VisitOrdering
    nameWithType: QueryModelVisitorBase.VisitOrdering
    fullName: Remotion.Linq.QueryModelVisitorBase.VisitOrdering
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.Clauses.Ordering
    name: Ordering
    nameWithType: Ordering
    fullName: Remotion.Linq.Clauses.Ordering
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.Clauses.OrderByClause
    name: OrderByClause
    nameWithType: OrderByClause
    fullName: Remotion.Linq.Clauses.OrderByClause
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Clauses.Ordering
  commentId: T:Remotion.Linq.Clauses.Ordering
  parent: Remotion.Linq.Clauses
  isExternal: true
  name: Ordering
  nameWithType: Ordering
  fullName: Remotion.Linq.Clauses.Ordering
- uid: Remotion.Linq.QueryModelVisitorBase.VisitSelectClause(Remotion.Linq.Clauses.SelectClause,Remotion.Linq.QueryModel)
  commentId: M:Remotion.Linq.QueryModelVisitorBase.VisitSelectClause(Remotion.Linq.Clauses.SelectClause,Remotion.Linq.QueryModel)
  parent: Remotion.Linq.QueryModelVisitorBase
  isExternal: true
  name: VisitSelectClause(SelectClause, QueryModel)
  nameWithType: QueryModelVisitorBase.VisitSelectClause(SelectClause, QueryModel)
  fullName: Remotion.Linq.QueryModelVisitorBase.VisitSelectClause(Remotion.Linq.Clauses.SelectClause, Remotion.Linq.QueryModel)
  spec.csharp:
  - uid: Remotion.Linq.QueryModelVisitorBase.VisitSelectClause(Remotion.Linq.Clauses.SelectClause,Remotion.Linq.QueryModel)
    name: VisitSelectClause
    nameWithType: QueryModelVisitorBase.VisitSelectClause
    fullName: Remotion.Linq.QueryModelVisitorBase.VisitSelectClause
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.Clauses.SelectClause
    name: SelectClause
    nameWithType: SelectClause
    fullName: Remotion.Linq.Clauses.SelectClause
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.QueryModelVisitorBase.VisitSelectClause(Remotion.Linq.Clauses.SelectClause,Remotion.Linq.QueryModel)
    name: VisitSelectClause
    nameWithType: QueryModelVisitorBase.VisitSelectClause
    fullName: Remotion.Linq.QueryModelVisitorBase.VisitSelectClause
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.Clauses.SelectClause
    name: SelectClause
    nameWithType: SelectClause
    fullName: Remotion.Linq.Clauses.SelectClause
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Clauses.SelectClause
  commentId: T:Remotion.Linq.Clauses.SelectClause
  parent: Remotion.Linq.Clauses
  isExternal: true
  name: SelectClause
  nameWithType: SelectClause
  fullName: Remotion.Linq.Clauses.SelectClause
- uid: Remotion.Linq.QueryModelVisitorBase.VisitResultOperator(Remotion.Linq.Clauses.ResultOperatorBase,Remotion.Linq.QueryModel,System.Int32)
  commentId: M:Remotion.Linq.QueryModelVisitorBase.VisitResultOperator(Remotion.Linq.Clauses.ResultOperatorBase,Remotion.Linq.QueryModel,System.Int32)
  parent: Remotion.Linq.QueryModelVisitorBase
  isExternal: true
  name: VisitResultOperator(ResultOperatorBase, QueryModel, Int32)
  nameWithType: QueryModelVisitorBase.VisitResultOperator(ResultOperatorBase, QueryModel, Int32)
  fullName: Remotion.Linq.QueryModelVisitorBase.VisitResultOperator(Remotion.Linq.Clauses.ResultOperatorBase, Remotion.Linq.QueryModel, System.Int32)
  spec.csharp:
  - uid: Remotion.Linq.QueryModelVisitorBase.VisitResultOperator(Remotion.Linq.Clauses.ResultOperatorBase,Remotion.Linq.QueryModel,System.Int32)
    name: VisitResultOperator
    nameWithType: QueryModelVisitorBase.VisitResultOperator
    fullName: Remotion.Linq.QueryModelVisitorBase.VisitResultOperator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.Clauses.ResultOperatorBase
    name: ResultOperatorBase
    nameWithType: ResultOperatorBase
    fullName: Remotion.Linq.Clauses.ResultOperatorBase
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.QueryModelVisitorBase.VisitResultOperator(Remotion.Linq.Clauses.ResultOperatorBase,Remotion.Linq.QueryModel,System.Int32)
    name: VisitResultOperator
    nameWithType: QueryModelVisitorBase.VisitResultOperator
    fullName: Remotion.Linq.QueryModelVisitorBase.VisitResultOperator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.Clauses.ResultOperatorBase
    name: ResultOperatorBase
    nameWithType: ResultOperatorBase
    fullName: Remotion.Linq.Clauses.ResultOperatorBase
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Clauses.ResultOperatorBase
  commentId: T:Remotion.Linq.Clauses.ResultOperatorBase
  parent: Remotion.Linq.Clauses
  isExternal: true
  name: ResultOperatorBase
  nameWithType: ResultOperatorBase
  fullName: Remotion.Linq.Clauses.ResultOperatorBase
