### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product
  commentId: T:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product
  id: Product
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model
  children:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.#ctor
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.Color
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.DiscontinuedDate
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ListPrice
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ModifiedDate
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.Name
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.OrderDetails
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ProductCategory
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ProductCategoryID
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ProductID
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ProductModel
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ProductModelID
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ProductNumber
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.rowguid
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.SellEndDate
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.SellStartDate
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.Size
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.StandardCost
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ThumbNailPhoto
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ThumbnailPhotoFileName
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.Weight
  langs:
  - csharp
  - vb
  name: Product
  nameWithType: Product
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product
  type: Class
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/Product.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Product
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/Product.cs
    startLine: 10
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model
  syntax:
    content: >-
      [Table("Product", Schema = "SalesLT")]

      public class Product
    content.vb: >-
      <Table("Product", Schema:="SalesLT")>

      Public Class Product
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.ComponentModel.DataAnnotations.Schema.TableAttribute
    ctor: System.ComponentModel.DataAnnotations.Schema.TableAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Product
    namedArguments:
    - name: Schema
      type: System.String
      value: SalesLT
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.#ctor
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.#ctor
  id: '#ctor'
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product
  langs:
  - csharp
  - vb
  name: Product()
  nameWithType: Product.Product()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.Product()
  type: Constructor
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/Product.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/Product.cs
    startLine: 13
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model
  syntax:
    content: public Product()
    content.vb: Public Sub New
  overload: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ProductID
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ProductID
  id: ProductID
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product
  langs:
  - csharp
  - vb
  name: ProductID
  nameWithType: Product.ProductID
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ProductID
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/Product.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ProductID
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/Product.cs
    startLine: 18
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model
  syntax:
    content: public int ProductID { get; set; }
    content.vb: Public Property ProductID As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ProductID*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.Name
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.Name
  id: Name
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Product.Name
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.Name
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/Product.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Name
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/Product.cs
    startLine: 20
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model
  syntax:
    content: >-
      [Required]

      public string Name { get; set; }
    content.vb: >-
      <Required>

      Public Property Name As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.Name*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.Color
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.Color
  id: Color
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product
  langs:
  - csharp
  - vb
  name: Color
  nameWithType: Product.Color
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.Color
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/Product.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Color
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/Product.cs
    startLine: 23
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model
  syntax:
    content: >-
      [MaxLength(15)]

      public string Color { get; set; }
    content.vb: >-
      <MaxLength(15)>

      Public Property Color As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.Color*
  attributes:
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 15
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.DiscontinuedDate
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.DiscontinuedDate
  id: DiscontinuedDate
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product
  langs:
  - csharp
  - vb
  name: DiscontinuedDate
  nameWithType: Product.DiscontinuedDate
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.DiscontinuedDate
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/Product.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: DiscontinuedDate
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/Product.cs
    startLine: 26
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model
  syntax:
    content: public DateTime? DiscontinuedDate { get; set; }
    content.vb: Public Property DiscontinuedDate As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.DiscontinuedDate*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ListPrice
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ListPrice
  id: ListPrice
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product
  langs:
  - csharp
  - vb
  name: ListPrice
  nameWithType: Product.ListPrice
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ListPrice
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/Product.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ListPrice
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/Product.cs
    startLine: 27
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model
  syntax:
    content: public decimal ListPrice { get; set; }
    content.vb: Public Property ListPrice As Decimal
    parameters: []
    return:
      type: System.Decimal
  overload: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ListPrice*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ModifiedDate
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ModifiedDate
  id: ModifiedDate
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product
  langs:
  - csharp
  - vb
  name: ModifiedDate
  nameWithType: Product.ModifiedDate
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ModifiedDate
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/Product.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ModifiedDate
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/Product.cs
    startLine: 28
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model
  syntax:
    content: public DateTime ModifiedDate { get; set; }
    content.vb: Public Property ModifiedDate As Date
    parameters: []
    return:
      type: System.DateTime
  overload: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ModifiedDate*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ProductCategoryID
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ProductCategoryID
  id: ProductCategoryID
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product
  langs:
  - csharp
  - vb
  name: ProductCategoryID
  nameWithType: Product.ProductCategoryID
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ProductCategoryID
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/Product.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ProductCategoryID
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/Product.cs
    startLine: 29
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model
  syntax:
    content: public int ? ProductCategoryID { get; set; }
    content.vb: Public Property ProductCategoryID As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ProductCategoryID*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ProductModelID
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ProductModelID
  id: ProductModelID
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product
  langs:
  - csharp
  - vb
  name: ProductModelID
  nameWithType: Product.ProductModelID
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ProductModelID
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/Product.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ProductModelID
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/Product.cs
    startLine: 30
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model
  syntax:
    content: public int ? ProductModelID { get; set; }
    content.vb: Public Property ProductModelID As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ProductModelID*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ProductNumber
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ProductNumber
  id: ProductNumber
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product
  langs:
  - csharp
  - vb
  name: ProductNumber
  nameWithType: Product.ProductNumber
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ProductNumber
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/Product.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ProductNumber
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/Product.cs
    startLine: 32
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model
  syntax:
    content: >-
      [Required]

      [MaxLength(25)]

      public string ProductNumber { get; set; }
    content.vb: >-
      <Required>

      <MaxLength(25)>

      Public Property ProductNumber As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ProductNumber*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 25
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.SellEndDate
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.SellEndDate
  id: SellEndDate
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product
  langs:
  - csharp
  - vb
  name: SellEndDate
  nameWithType: Product.SellEndDate
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.SellEndDate
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/Product.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: SellEndDate
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/Product.cs
    startLine: 36
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model
  syntax:
    content: public DateTime? SellEndDate { get; set; }
    content.vb: Public Property SellEndDate As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.SellEndDate*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.SellStartDate
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.SellStartDate
  id: SellStartDate
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product
  langs:
  - csharp
  - vb
  name: SellStartDate
  nameWithType: Product.SellStartDate
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.SellStartDate
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/Product.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: SellStartDate
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/Product.cs
    startLine: 37
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model
  syntax:
    content: public DateTime SellStartDate { get; set; }
    content.vb: Public Property SellStartDate As Date
    parameters: []
    return:
      type: System.DateTime
  overload: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.SellStartDate*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.Size
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.Size
  id: Size
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product
  langs:
  - csharp
  - vb
  name: Size
  nameWithType: Product.Size
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.Size
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/Product.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Size
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/Product.cs
    startLine: 39
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model
  syntax:
    content: >-
      [MaxLength(5)]

      public string Size { get; set; }
    content.vb: >-
      <MaxLength(5)>

      Public Property Size As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.Size*
  attributes:
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 5
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.StandardCost
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.StandardCost
  id: StandardCost
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product
  langs:
  - csharp
  - vb
  name: StandardCost
  nameWithType: Product.StandardCost
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.StandardCost
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/Product.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: StandardCost
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/Product.cs
    startLine: 42
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model
  syntax:
    content: public decimal StandardCost { get; set; }
    content.vb: Public Property StandardCost As Decimal
    parameters: []
    return:
      type: System.Decimal
  overload: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.StandardCost*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ThumbNailPhoto
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ThumbNailPhoto
  id: ThumbNailPhoto
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product
  langs:
  - csharp
  - vb
  name: ThumbNailPhoto
  nameWithType: Product.ThumbNailPhoto
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ThumbNailPhoto
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/Product.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ThumbNailPhoto
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/Product.cs
    startLine: 43
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model
  syntax:
    content: public byte[] ThumbNailPhoto { get; set; }
    content.vb: Public Property ThumbNailPhoto As Byte()
    parameters: []
    return:
      type: System.Byte[]
  overload: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ThumbNailPhoto*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ThumbnailPhotoFileName
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ThumbnailPhotoFileName
  id: ThumbnailPhotoFileName
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product
  langs:
  - csharp
  - vb
  name: ThumbnailPhotoFileName
  nameWithType: Product.ThumbnailPhotoFileName
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ThumbnailPhotoFileName
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/Product.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ThumbnailPhotoFileName
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/Product.cs
    startLine: 45
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model
  syntax:
    content: >-
      [MaxLength(50)]

      public string ThumbnailPhotoFileName { get; set; }
    content.vb: >-
      <MaxLength(50)>

      Public Property ThumbnailPhotoFileName As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ThumbnailPhotoFileName*
  attributes:
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 50
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.Weight
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.Weight
  id: Weight
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product
  langs:
  - csharp
  - vb
  name: Weight
  nameWithType: Product.Weight
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.Weight
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/Product.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Weight
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/Product.cs
    startLine: 48
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model
  syntax:
    content: public decimal ? Weight { get; set; }
    content.vb: Public Property Weight As Decimal?
    parameters: []
    return:
      type: System.Nullable{System.Decimal}
  overload: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.Weight*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.rowguid
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.rowguid
  id: rowguid
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product
  langs:
  - csharp
  - vb
  name: rowguid
  nameWithType: Product.rowguid
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.rowguid
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/Product.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: rowguid
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/Product.cs
    startLine: 49
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model
  syntax:
    content: public Guid rowguid { get; set; }
    content.vb: Public Property rowguid As Guid
    parameters: []
    return:
      type: System.Guid
  overload: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.rowguid*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.OrderDetails
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.OrderDetails
  id: OrderDetails
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product
  langs:
  - csharp
  - vb
  name: OrderDetails
  nameWithType: Product.OrderDetails
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.OrderDetails
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/Product.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: OrderDetails
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/Product.cs
    startLine: 51
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model
  syntax:
    content: >-
      [InverseProperty("Product")]

      public virtual ICollection<SalesOrderDetail> OrderDetails { get; set; }
    content.vb: >-
      <InverseProperty("Product")>

      Public Overridable Property OrderDetails As ICollection(Of SalesOrderDetail)
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrderDetail}
  overload: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.OrderDetails*
  attributes:
  - type: System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute
    ctor: System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Product
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ProductCategory
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ProductCategory
  id: ProductCategory
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product
  langs:
  - csharp
  - vb
  name: ProductCategory
  nameWithType: Product.ProductCategory
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ProductCategory
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/Product.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ProductCategory
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/Product.cs
    startLine: 54
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model
  syntax:
    content: >-
      [ForeignKey("ProductCategoryID")]

      [InverseProperty("Product")]

      public virtual ProductCategory ProductCategory { get; set; }
    content.vb: >-
      <ForeignKey("ProductCategoryID")>

      <InverseProperty("Product")>

      Public Overridable Property ProductCategory As ProductCategory
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.ProductCategory
  overload: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ProductCategory*
  attributes:
  - type: System.ComponentModel.DataAnnotations.Schema.ForeignKeyAttribute
    ctor: System.ComponentModel.DataAnnotations.Schema.ForeignKeyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: ProductCategoryID
  - type: System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute
    ctor: System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Product
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ProductModel
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ProductModel
  id: ProductModel
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product
  langs:
  - csharp
  - vb
  name: ProductModel
  nameWithType: Product.ProductModel
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ProductModel
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/Product.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ProductModel
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/Product.cs
    startLine: 58
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model
  syntax:
    content: >-
      [ForeignKey("ProductModelID")]

      [InverseProperty("Product")]

      public virtual ProductModel ProductModel { get; set; }
    content.vb: >-
      <ForeignKey("ProductModelID")>

      <InverseProperty("Product")>

      Public Overridable Property ProductModel As ProductModel
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.ProductModel
  overload: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ProductModel*
  attributes:
  - type: System.ComponentModel.DataAnnotations.Schema.ForeignKeyAttribute
    ctor: System.ComponentModel.DataAnnotations.Schema.ForeignKeyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: ProductModelID
  - type: System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute
    ctor: System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Product
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model
  commentId: N:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model
  isExternal: false
  name: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model
  nameWithType: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.#ctor*
  commentId: Overload:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.#ctor
  isExternal: false
  name: Product
  nameWithType: Product.Product
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.Product
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ProductID*
  commentId: Overload:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ProductID
  isExternal: false
  name: ProductID
  nameWithType: Product.ProductID
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ProductID
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.Name*
  commentId: Overload:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.Name
  isExternal: false
  name: Name
  nameWithType: Product.Name
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.Color*
  commentId: Overload:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.Color
  isExternal: false
  name: Color
  nameWithType: Product.Color
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.Color
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.DiscontinuedDate*
  commentId: Overload:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.DiscontinuedDate
  isExternal: false
  name: DiscontinuedDate
  nameWithType: Product.DiscontinuedDate
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.DiscontinuedDate
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullname.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ListPrice*
  commentId: Overload:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ListPrice
  isExternal: false
  name: ListPrice
  nameWithType: Product.ListPrice
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ListPrice
- uid: System.Decimal
  commentId: T:System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ModifiedDate*
  commentId: Overload:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ModifiedDate
  isExternal: false
  name: ModifiedDate
  nameWithType: Product.ModifiedDate
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ModifiedDate
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ProductCategoryID*
  commentId: Overload:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ProductCategoryID
  isExternal: false
  name: ProductCategoryID
  nameWithType: Product.ProductCategoryID
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ProductCategoryID
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ProductModelID*
  commentId: Overload:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ProductModelID
  isExternal: false
  name: ProductModelID
  nameWithType: Product.ProductModelID
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ProductModelID
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ProductNumber*
  commentId: Overload:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ProductNumber
  isExternal: false
  name: ProductNumber
  nameWithType: Product.ProductNumber
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ProductNumber
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.SellEndDate*
  commentId: Overload:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.SellEndDate
  isExternal: false
  name: SellEndDate
  nameWithType: Product.SellEndDate
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.SellEndDate
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.SellStartDate*
  commentId: Overload:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.SellStartDate
  isExternal: false
  name: SellStartDate
  nameWithType: Product.SellStartDate
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.SellStartDate
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.Size*
  commentId: Overload:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.Size
  isExternal: false
  name: Size
  nameWithType: Product.Size
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.Size
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.StandardCost*
  commentId: Overload:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.StandardCost
  isExternal: false
  name: StandardCost
  nameWithType: Product.StandardCost
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.StandardCost
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ThumbNailPhoto*
  commentId: Overload:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ThumbNailPhoto
  isExternal: false
  name: ThumbNailPhoto
  nameWithType: Product.ThumbNailPhoto
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ThumbNailPhoto
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ThumbnailPhotoFileName*
  commentId: Overload:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ThumbnailPhotoFileName
  isExternal: false
  name: ThumbnailPhotoFileName
  nameWithType: Product.ThumbnailPhotoFileName
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ThumbnailPhotoFileName
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.Weight*
  commentId: Overload:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.Weight
  isExternal: false
  name: Weight
  nameWithType: Product.Weight
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.Weight
- uid: System.Nullable{System.Decimal}
  commentId: T:System.Nullable{System.Decimal}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Decimal>
  nameWithType: Nullable<Decimal>
  fullName: System.Nullable<System.Decimal>
  nameWithType.vb: Nullable(Of Decimal)
  fullname.vb: System.Nullable(Of System.Decimal)
  name.vb: Nullable(Of Decimal)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Decimal
    name: Decimal
    nameWithType: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Decimal
    name: Decimal
    nameWithType: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.rowguid*
  commentId: Overload:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.rowguid
  isExternal: false
  name: rowguid
  nameWithType: Product.rowguid
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.rowguid
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.OrderDetails*
  commentId: Overload:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.OrderDetails
  isExternal: false
  name: OrderDetails
  nameWithType: Product.OrderDetails
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.OrderDetails
- uid: System.Collections.Generic.ICollection{Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrderDetail}
  commentId: T:System.Collections.Generic.ICollection{Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrderDetail}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<SalesOrderDetail>
  nameWithType: ICollection<SalesOrderDetail>
  fullName: System.Collections.Generic.ICollection<Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrderDetail>
  nameWithType.vb: ICollection(Of SalesOrderDetail)
  fullname.vb: System.Collections.Generic.ICollection(Of Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrderDetail)
  name.vb: ICollection(Of SalesOrderDetail)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrderDetail
    name: SalesOrderDetail
    nameWithType: SalesOrderDetail
    fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrderDetail
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrderDetail
    name: SalesOrderDetail
    nameWithType: SalesOrderDetail
    fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrderDetail
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullname.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ProductCategory*
  commentId: Overload:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ProductCategory
  isExternal: false
  name: ProductCategory
  nameWithType: Product.ProductCategory
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ProductCategory
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.ProductCategory
  commentId: T:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.ProductCategory
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model
  isExternal: false
  name: ProductCategory
  nameWithType: ProductCategory
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.ProductCategory
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ProductModel*
  commentId: Overload:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ProductModel
  isExternal: false
  name: ProductModel
  nameWithType: Product.ProductModel
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Product.ProductModel
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.ProductModel
  commentId: T:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.ProductModel
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model
  isExternal: false
  name: ProductModel
  nameWithType: ProductModel
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.ProductModel
