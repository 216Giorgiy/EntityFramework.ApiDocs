### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.ComputedColumnTest.EnumItem
  commentId: T:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.ComputedColumnTest.EnumItem
  id: ComputedColumnTest.EnumItem
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  children:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.ComputedColumnTest.EnumItem.CalculatedFlagEnum
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.ComputedColumnTest.EnumItem.EnumItemId
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.ComputedColumnTest.EnumItem.FlagEnum
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.ComputedColumnTest.EnumItem.OptionalFlagEnum
  langs:
  - csharp
  - vb
  name: ComputedColumnTest.EnumItem
  nameWithType: ComputedColumnTest.EnumItem
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.ComputedColumnTest.EnumItem
  type: Class
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/ComputedColumnTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: EnumItem
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/ComputedColumnTest.cs
    startLine: 100
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public class EnumItem
    content.vb: Public Class EnumItem
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.ComputedColumnTest.EnumItem.EnumItemId
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.ComputedColumnTest.EnumItem.EnumItemId
  id: EnumItemId
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.ComputedColumnTest.EnumItem
  langs:
  - csharp
  - vb
  name: EnumItemId
  nameWithType: ComputedColumnTest.EnumItem.EnumItemId
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.ComputedColumnTest.EnumItem.EnumItemId
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/ComputedColumnTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: EnumItemId
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/ComputedColumnTest.cs
    startLine: 102
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public int EnumItemId { get; set; }
    content.vb: Public Property EnumItemId As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.ComputedColumnTest.EnumItem.FlagEnum
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.ComputedColumnTest.EnumItem.FlagEnum
  id: FlagEnum
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.ComputedColumnTest.EnumItem
  langs:
  - csharp
  - vb
  name: FlagEnum
  nameWithType: ComputedColumnTest.EnumItem.FlagEnum
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.ComputedColumnTest.EnumItem.FlagEnum
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/ComputedColumnTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: FlagEnum
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/ComputedColumnTest.cs
    startLine: 103
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public ComputedColumnTest.FlagEnum FlagEnum { get; set; }
    content.vb: Public Property FlagEnum As ComputedColumnTest.FlagEnum
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.ComputedColumnTest.FlagEnum
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.ComputedColumnTest.EnumItem.OptionalFlagEnum
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.ComputedColumnTest.EnumItem.OptionalFlagEnum
  id: OptionalFlagEnum
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.ComputedColumnTest.EnumItem
  langs:
  - csharp
  - vb
  name: OptionalFlagEnum
  nameWithType: ComputedColumnTest.EnumItem.OptionalFlagEnum
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.ComputedColumnTest.EnumItem.OptionalFlagEnum
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/ComputedColumnTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: OptionalFlagEnum
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/ComputedColumnTest.cs
    startLine: 104
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public ComputedColumnTest.FlagEnum? OptionalFlagEnum { get; set; }
    content.vb: Public Property OptionalFlagEnum As ComputedColumnTest.FlagEnum?
    parameters: []
    return:
      type: System.Nullable{Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.ComputedColumnTest.FlagEnum}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.ComputedColumnTest.EnumItem.CalculatedFlagEnum
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.ComputedColumnTest.EnumItem.CalculatedFlagEnum
  id: CalculatedFlagEnum
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.ComputedColumnTest.EnumItem
  langs:
  - csharp
  - vb
  name: CalculatedFlagEnum
  nameWithType: ComputedColumnTest.EnumItem.CalculatedFlagEnum
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.ComputedColumnTest.EnumItem.CalculatedFlagEnum
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/ComputedColumnTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CalculatedFlagEnum
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/ComputedColumnTest.cs
    startLine: 105
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public ComputedColumnTest.FlagEnum? CalculatedFlagEnum { get; set; }
    content.vb: Public Property CalculatedFlagEnum As ComputedColumnTest.FlagEnum?
    parameters: []
    return:
      type: System.Nullable{Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.ComputedColumnTest.FlagEnum}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  commentId: N:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  nameWithType: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.ComputedColumnTest.FlagEnum
  commentId: T:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.ComputedColumnTest.FlagEnum
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  isExternal: false
  name: ComputedColumnTest.FlagEnum
  nameWithType: ComputedColumnTest.FlagEnum
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.ComputedColumnTest.FlagEnum
- uid: System.Nullable{Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.ComputedColumnTest.FlagEnum}
  commentId: T:System.Nullable{Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.ComputedColumnTest.FlagEnum}
  parent: System
  definition: System.Nullable`1
  name: Nullable<ComputedColumnTest.FlagEnum>
  nameWithType: Nullable<ComputedColumnTest.FlagEnum>
  fullName: System.Nullable<Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.ComputedColumnTest.FlagEnum>
  nameWithType.vb: Nullable(Of ComputedColumnTest.FlagEnum)
  fullname.vb: System.Nullable(Of Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.ComputedColumnTest.FlagEnum)
  name.vb: Nullable(Of ComputedColumnTest.FlagEnum)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.ComputedColumnTest.FlagEnum
    name: ComputedColumnTest.FlagEnum
    nameWithType: ComputedColumnTest.FlagEnum
    fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.ComputedColumnTest.FlagEnum
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.ComputedColumnTest.FlagEnum
    name: ComputedColumnTest.FlagEnum
    nameWithType: ComputedColumnTest.FlagEnum
    fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.ComputedColumnTest.FlagEnum
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
