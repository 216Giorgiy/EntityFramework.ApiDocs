### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Alpha
  commentId: T:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Alpha
  id: ModelBuilderTest.Alpha
  parent: Microsoft.EntityFrameworkCore.Tests
  children:
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Alpha.AnotherId
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Alpha.Epsilons
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Alpha.Etas
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Alpha.Id
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Alpha.Kappas
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Alpha.NavDelta
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Alpha.Thetas
  langs:
  - csharp
  - vb
  name: ModelBuilderTest.Alpha
  nameWithType: ModelBuilderTest.Alpha
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Alpha
  type: Class
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/TestModel.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Alpha
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/TestModel.cs
    startLine: 302
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: protected class Alpha
    content.vb: Protected Class Alpha
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - protected
  - class
  modifiers.vb:
  - Protected
  - Class
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Alpha.Id
  commentId: P:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Alpha.Id
  id: Id
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Alpha
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: ModelBuilderTest.Alpha.Id
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Alpha.Id
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/TestModel.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Id
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/TestModel.cs
    startLine: 304
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: public int ? Id { get; set; }
    content.vb: Public Property Id As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Alpha.Id*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Alpha.AnotherId
  commentId: P:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Alpha.AnotherId
  id: AnotherId
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Alpha
  langs:
  - csharp
  - vb
  name: AnotherId
  nameWithType: ModelBuilderTest.Alpha.AnotherId
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Alpha.AnotherId
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/TestModel.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AnotherId
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/TestModel.cs
    startLine: 305
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: public int AnotherId { get; set; }
    content.vb: Public Property AnotherId As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Alpha.AnotherId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Alpha.NavDelta
  commentId: P:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Alpha.NavDelta
  id: NavDelta
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Alpha
  langs:
  - csharp
  - vb
  name: NavDelta
  nameWithType: ModelBuilderTest.Alpha.NavDelta
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Alpha.NavDelta
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/TestModel.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: NavDelta
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/TestModel.cs
    startLine: 307
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: public ModelBuilderTest.Delta NavDelta { get; set; }
    content.vb: Public Property NavDelta As ModelBuilderTest.Delta
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Delta
  overload: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Alpha.NavDelta*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Alpha.Epsilons
  commentId: P:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Alpha.Epsilons
  id: Epsilons
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Alpha
  langs:
  - csharp
  - vb
  name: Epsilons
  nameWithType: ModelBuilderTest.Alpha.Epsilons
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Alpha.Epsilons
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/TestModel.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Epsilons
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/TestModel.cs
    startLine: 308
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: public IList<ModelBuilderTest.Epsilon> Epsilons { get; set; }
    content.vb: Public Property Epsilons As IList(Of ModelBuilderTest.Epsilon)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Epsilon}
  overload: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Alpha.Epsilons*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Alpha.Etas
  commentId: P:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Alpha.Etas
  id: Etas
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Alpha
  langs:
  - csharp
  - vb
  name: Etas
  nameWithType: ModelBuilderTest.Alpha.Etas
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Alpha.Etas
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/TestModel.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Etas
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/TestModel.cs
    startLine: 309
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: public IList<ModelBuilderTest.Eta> Etas { get; set; }
    content.vb: Public Property Etas As IList(Of ModelBuilderTest.Eta)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Eta}
  overload: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Alpha.Etas*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Alpha.Thetas
  commentId: P:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Alpha.Thetas
  id: Thetas
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Alpha
  langs:
  - csharp
  - vb
  name: Thetas
  nameWithType: ModelBuilderTest.Alpha.Thetas
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Alpha.Thetas
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/TestModel.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Thetas
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/TestModel.cs
    startLine: 311
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: >-
      [ForeignKey("Id")]

      public IList<ModelBuilderTest.Theta> Thetas { get; set; }
    content.vb: >-
      <ForeignKey("Id")>

      Public Property Thetas As IList(Of ModelBuilderTest.Theta)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Theta}
  overload: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Alpha.Thetas*
  attributes:
  - type: System.ComponentModel.DataAnnotations.Schema.ForeignKeyAttribute
    ctor: System.ComponentModel.DataAnnotations.Schema.ForeignKeyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Id
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Alpha.Kappas
  commentId: P:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Alpha.Kappas
  id: Kappas
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Alpha
  langs:
  - csharp
  - vb
  name: Kappas
  nameWithType: ModelBuilderTest.Alpha.Kappas
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Alpha.Kappas
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/TestModel.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Kappas
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/TestModel.cs
    startLine: 314
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: >-
      [ForeignKey("Id")]

      public IList<ModelBuilderTest.Kappa> Kappas { get; set; }
    content.vb: >-
      <ForeignKey("Id")>

      Public Property Kappas As IList(Of ModelBuilderTest.Kappa)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Kappa}
  overload: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Alpha.Kappas*
  attributes:
  - type: System.ComponentModel.DataAnnotations.Schema.ForeignKeyAttribute
    ctor: System.ComponentModel.DataAnnotations.Schema.ForeignKeyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Id
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.EntityFrameworkCore.Tests
  commentId: N:Microsoft.EntityFrameworkCore.Tests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Tests
  nameWithType: Microsoft.EntityFrameworkCore.Tests
  fullName: Microsoft.EntityFrameworkCore.Tests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Alpha.Id*
  commentId: Overload:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Alpha.Id
  isExternal: false
  name: Id
  nameWithType: ModelBuilderTest.Alpha.Id
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Alpha.Id
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Alpha.AnotherId*
  commentId: Overload:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Alpha.AnotherId
  isExternal: false
  name: AnotherId
  nameWithType: ModelBuilderTest.Alpha.AnotherId
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Alpha.AnotherId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Alpha.NavDelta*
  commentId: Overload:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Alpha.NavDelta
  isExternal: false
  name: NavDelta
  nameWithType: ModelBuilderTest.Alpha.NavDelta
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Alpha.NavDelta
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Delta
  commentId: T:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Delta
  parent: Microsoft.EntityFrameworkCore.Tests
  isExternal: false
  name: ModelBuilderTest.Delta
  nameWithType: ModelBuilderTest.Delta
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Delta
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Alpha.Epsilons*
  commentId: Overload:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Alpha.Epsilons
  isExternal: false
  name: Epsilons
  nameWithType: ModelBuilderTest.Alpha.Epsilons
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Alpha.Epsilons
- uid: System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Epsilon}
  commentId: T:System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Epsilon}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ModelBuilderTest.Epsilon>
  nameWithType: IList<ModelBuilderTest.Epsilon>
  fullName: System.Collections.Generic.IList<Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Epsilon>
  nameWithType.vb: IList(Of ModelBuilderTest.Epsilon)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Epsilon)
  name.vb: IList(Of ModelBuilderTest.Epsilon)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Epsilon
    name: ModelBuilderTest.Epsilon
    nameWithType: ModelBuilderTest.Epsilon
    fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Epsilon
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Epsilon
    name: ModelBuilderTest.Epsilon
    nameWithType: ModelBuilderTest.Epsilon
    fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Epsilon
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Alpha.Etas*
  commentId: Overload:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Alpha.Etas
  isExternal: false
  name: Etas
  nameWithType: ModelBuilderTest.Alpha.Etas
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Alpha.Etas
- uid: System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Eta}
  commentId: T:System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Eta}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ModelBuilderTest.Eta>
  nameWithType: IList<ModelBuilderTest.Eta>
  fullName: System.Collections.Generic.IList<Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Eta>
  nameWithType.vb: IList(Of ModelBuilderTest.Eta)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Eta)
  name.vb: IList(Of ModelBuilderTest.Eta)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Eta
    name: ModelBuilderTest.Eta
    nameWithType: ModelBuilderTest.Eta
    fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Eta
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Eta
    name: ModelBuilderTest.Eta
    nameWithType: ModelBuilderTest.Eta
    fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Eta
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Alpha.Thetas*
  commentId: Overload:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Alpha.Thetas
  isExternal: false
  name: Thetas
  nameWithType: ModelBuilderTest.Alpha.Thetas
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Alpha.Thetas
- uid: System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Theta}
  commentId: T:System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Theta}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ModelBuilderTest.Theta>
  nameWithType: IList<ModelBuilderTest.Theta>
  fullName: System.Collections.Generic.IList<Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Theta>
  nameWithType.vb: IList(Of ModelBuilderTest.Theta)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Theta)
  name.vb: IList(Of ModelBuilderTest.Theta)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Theta
    name: ModelBuilderTest.Theta
    nameWithType: ModelBuilderTest.Theta
    fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Theta
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Theta
    name: ModelBuilderTest.Theta
    nameWithType: ModelBuilderTest.Theta
    fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Theta
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Alpha.Kappas*
  commentId: Overload:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Alpha.Kappas
  isExternal: false
  name: Kappas
  nameWithType: ModelBuilderTest.Alpha.Kappas
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Alpha.Kappas
- uid: System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Kappa}
  commentId: T:System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Kappa}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ModelBuilderTest.Kappa>
  nameWithType: IList<ModelBuilderTest.Kappa>
  fullName: System.Collections.Generic.IList<Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Kappa>
  nameWithType.vb: IList(Of ModelBuilderTest.Kappa)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Kappa)
  name.vb: IList(Of ModelBuilderTest.Kappa)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Kappa
    name: ModelBuilderTest.Kappa
    nameWithType: ModelBuilderTest.Kappa
    fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Kappa
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Kappa
    name: ModelBuilderTest.Kappa
    nameWithType: ModelBuilderTest.Kappa
    fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.Kappa
  - name: )
    nameWithType: )
    fullName: )
