### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.SqlServerIndexModelAnnotations
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.SqlServerIndexModelAnnotations
  id: SqlServerIndexModelAnnotations
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal
  children:
  - Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.SqlServerIndexModelAnnotations.#ctor(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.IndexModel)
  - Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.SqlServerIndexModelAnnotations.IsClustered
  langs:
  - csharp
  - vb
  name: SqlServerIndexModelAnnotations
  nameWithType: SqlServerIndexModelAnnotations
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.SqlServerIndexModelAnnotations
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Metadata/Internal/SqlServerIndexModelAnnotations.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: SqlServerIndexModelAnnotations
    path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Metadata/Internal/SqlServerIndexModelAnnotations.cs
    startLine: 12
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public class SqlServerIndexModelAnnotations
    content.vb: Public Class SqlServerIndexModelAnnotations
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.SqlServerIndexModelAnnotations.#ctor(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.IndexModel)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.SqlServerIndexModelAnnotations.#ctor(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.IndexModel)
  id: '#ctor(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.IndexModel)'
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.SqlServerIndexModelAnnotations
  langs:
  - csharp
  - vb
  name: SqlServerIndexModelAnnotations(IndexModel)
  nameWithType: SqlServerIndexModelAnnotations.SqlServerIndexModelAnnotations(IndexModel)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.SqlServerIndexModelAnnotations.SqlServerIndexModelAnnotations(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.IndexModel)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Metadata/Internal/SqlServerIndexModelAnnotations.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Metadata/Internal/SqlServerIndexModelAnnotations.cs
    startLine: 20
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public SqlServerIndexModelAnnotations(IndexModel index)
    content.vb: Public Sub New(index As IndexModel)
    parameters:
    - id: index
      type: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.IndexModel
  overload: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.SqlServerIndexModelAnnotations.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.SqlServerIndexModelAnnotations.IsClustered
  commentId: P:Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.SqlServerIndexModelAnnotations.IsClustered
  id: IsClustered
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.SqlServerIndexModelAnnotations
  langs:
  - csharp
  - vb
  name: IsClustered
  nameWithType: SqlServerIndexModelAnnotations.IsClustered
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.SqlServerIndexModelAnnotations.IsClustered
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Metadata/Internal/SqlServerIndexModelAnnotations.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: IsClustered
    path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Metadata/Internal/SqlServerIndexModelAnnotations.cs
    startLine: 31
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual bool IsClustered { get; set; }
    content.vb: Public Overridable Property IsClustered As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.SqlServerIndexModelAnnotations.IsClustered*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.SqlServerIndexModelAnnotations.#ctor*
  commentId: Overload:Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.SqlServerIndexModelAnnotations.#ctor
  isExternal: false
  name: SqlServerIndexModelAnnotations
  nameWithType: SqlServerIndexModelAnnotations.SqlServerIndexModelAnnotations
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.SqlServerIndexModelAnnotations.SqlServerIndexModelAnnotations
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.IndexModel
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.Metadata.IndexModel
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Metadata
  isExternal: false
  name: IndexModel
  nameWithType: IndexModel
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.IndexModel
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Scaffolding.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Scaffolding.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Scaffolding.Metadata
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Metadata
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.SqlServerIndexModelAnnotations.IsClustered*
  commentId: Overload:Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.SqlServerIndexModelAnnotations.IsClustered
  isExternal: false
  name: IsClustered
  nameWithType: SqlServerIndexModelAnnotations.IsClustered
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.SqlServerIndexModelAnnotations.IsClustered
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
