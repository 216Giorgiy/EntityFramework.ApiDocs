### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator
  commentId: T:Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator
  id: IQuerySqlGenerator
  parent: Microsoft.EntityFrameworkCore.Query.Sql
  children:
  - Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator.CreateValueBufferFactory(Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactoryFactory,System.Data.Common.DbDataReader)
  - Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator.GenerateSql(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})
  - Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator.IsCacheable
  langs:
  - csharp
  - vb
  name: IQuerySqlGenerator
  nameWithType: IQuerySqlGenerator
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator
  type: Interface
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/Sql/IQuerySqlGenerator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: IQuerySqlGenerator
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/Sql/IQuerySqlGenerator.cs
    startLine: 13
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.Sql
  summary: "\n    A relational SQL generator.\n"
  example: []
  syntax:
    content: public interface IQuerySqlGenerator
    content.vb: Public Interface IQuerySqlGenerator
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator.GenerateSql(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})
  commentId: M:Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator.GenerateSql(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})
  id: GenerateSql(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})
  parent: Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator
  langs:
  - csharp
  - vb
  name: GenerateSql(IReadOnlyDictionary<String, Object>)
  nameWithType: IQuerySqlGenerator.GenerateSql(IReadOnlyDictionary<String, Object>)
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator.GenerateSql(System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/Sql/IQuerySqlGenerator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GenerateSql
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/Sql/IQuerySqlGenerator.cs
    startLine: 22
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.Sql
  summary: "\n    Generates SQL for the given parameter values.\n"
  example: []
  syntax:
    content: IRelationalCommand GenerateSql(IReadOnlyDictionary<string, object> parameterValues)
    content.vb: Function GenerateSql(parameterValues As IReadOnlyDictionary(Of String, Object)) As IRelationalCommand
    parameters:
    - id: parameterValues
      type: System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object}
      description: 'The parameter values. '
    return:
      type: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand
      description: "\n    The SQL.\n"
  nameWithType.vb: IQuerySqlGenerator.GenerateSql(IReadOnlyDictionary(Of String, Object))
  fullName.vb: Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator.GenerateSql(System.Collections.Generic.IReadOnlyDictionary(Of System.String, System.Object))
  name.vb: GenerateSql(IReadOnlyDictionary(Of String, Object))
- uid: Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator.IsCacheable
  commentId: P:Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator.IsCacheable
  id: IsCacheable
  parent: Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator
  langs:
  - csharp
  - vb
  name: IsCacheable
  nameWithType: IQuerySqlGenerator.IsCacheable
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator.IsCacheable
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/Sql/IQuerySqlGenerator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: IsCacheable
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/Sql/IQuerySqlGenerator.cs
    startLine: 30
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.Sql
  summary: "\n    Gets a value indicating whether the generated SQL is cacheable.\n"
  example: []
  syntax:
    content: bool IsCacheable { get; }
    content.vb: ReadOnly Property IsCacheable As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n    true if the generated SQL is cacheable, false if not.\n"
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator.CreateValueBufferFactory(Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactoryFactory,System.Data.Common.DbDataReader)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator.CreateValueBufferFactory(Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactoryFactory,System.Data.Common.DbDataReader)
  id: CreateValueBufferFactory(Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactoryFactory,System.Data.Common.DbDataReader)
  parent: Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator
  langs:
  - csharp
  - vb
  name: CreateValueBufferFactory(IRelationalValueBufferFactoryFactory, DbDataReader)
  nameWithType: IQuerySqlGenerator.CreateValueBufferFactory(IRelationalValueBufferFactoryFactory, DbDataReader)
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator.CreateValueBufferFactory(Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactoryFactory, System.Data.Common.DbDataReader)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/Sql/IQuerySqlGenerator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: CreateValueBufferFactory
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/Sql/IQuerySqlGenerator.cs
    startLine: 40
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.Sql
  summary: "\n    Creates value buffer factory corresponding to the generated query.\n"
  example: []
  syntax:
    content: IRelationalValueBufferFactory CreateValueBufferFactory(IRelationalValueBufferFactoryFactory relationalValueBufferFactoryFactory, DbDataReader dataReader)
    content.vb: Function CreateValueBufferFactory(relationalValueBufferFactoryFactory As IRelationalValueBufferFactoryFactory, dataReader As DbDataReader) As IRelationalValueBufferFactory
    parameters:
    - id: relationalValueBufferFactoryFactory
      type: Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactoryFactory
      description: 'The relational value buffer factory. '
    - id: dataReader
      type: System.Data.Common.DbDataReader
      description: 'The data reader. '
    return:
      type: Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactory
      description: "\n    The new value buffer factory.\n"
references:
- uid: Microsoft.EntityFrameworkCore.Query.Sql
  commentId: N:Microsoft.EntityFrameworkCore.Query.Sql
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query.Sql
  nameWithType: Microsoft.EntityFrameworkCore.Query.Sql
  fullName: Microsoft.EntityFrameworkCore.Query.Sql
- uid: Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<IQuerySqlGenerator, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<IQuerySqlGenerator, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of IQuerySqlGenerator, TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator, TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of IQuerySqlGenerator, TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<IQuerySqlGenerator, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<IQuerySqlGenerator, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of IQuerySqlGenerator, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of IQuerySqlGenerator, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyDictionary`2
  name: IReadOnlyDictionary<String, Object>
  nameWithType: IReadOnlyDictionary<String, Object>
  fullName: System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>
  nameWithType.vb: IReadOnlyDictionary(Of String, Object)
  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of System.String, System.Object)
  name.vb: IReadOnlyDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IRelationalCommand
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IRelationalCommand
  nameWithType: IRelationalCommand
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand
- uid: System.Collections.Generic.IReadOnlyDictionary`2
  commentId: T:System.Collections.Generic.IReadOnlyDictionary`2
  isExternal: true
  name: IReadOnlyDictionary<TKey, TValue>
  nameWithType: IReadOnlyDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>
  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue)
  name.vb: IReadOnlyDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.EntityFrameworkCore.Storage
  commentId: N:Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Storage
  nameWithType: Microsoft.EntityFrameworkCore.Storage
  fullName: Microsoft.EntityFrameworkCore.Storage
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactoryFactory
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactoryFactory
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IRelationalValueBufferFactoryFactory
  nameWithType: IRelationalValueBufferFactoryFactory
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactoryFactory
- uid: System.Data.Common.DbDataReader
  commentId: T:System.Data.Common.DbDataReader
  parent: System.Data.Common
  isExternal: true
  name: DbDataReader
  nameWithType: DbDataReader
  fullName: System.Data.Common.DbDataReader
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactory
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactory
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IRelationalValueBufferFactory
  nameWithType: IRelationalValueBufferFactory
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactory
- uid: System.Data.Common
  commentId: N:System.Data.Common
  isExternal: false
  name: System.Data.Common
  nameWithType: System.Data.Common
  fullName: System.Data.Common
