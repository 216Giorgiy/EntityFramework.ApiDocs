### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.BaseTypeWithKeyAnnotation
  commentId: T:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.BaseTypeWithKeyAnnotation
  id: ModelBuilderTest.BaseTypeWithKeyAnnotation
  parent: Microsoft.EntityFrameworkCore.Tests
  children:
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.BaseTypeWithKeyAnnotation.AnotherKey
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.BaseTypeWithKeyAnnotation.ForeignKeyProperty
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.BaseTypeWithKeyAnnotation.MyPrimaryKey
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.BaseTypeWithKeyAnnotation.Navigation
  langs:
  - csharp
  - vb
  name: ModelBuilderTest.BaseTypeWithKeyAnnotation
  nameWithType: ModelBuilderTest.BaseTypeWithKeyAnnotation
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.BaseTypeWithKeyAnnotation
  type: Class
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/TestModel.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: BaseTypeWithKeyAnnotation
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/TestModel.cs
    startLine: 470
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: protected class BaseTypeWithKeyAnnotation
    content.vb: Protected Class BaseTypeWithKeyAnnotation
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - protected
  - class
  modifiers.vb:
  - Protected
  - Class
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.BaseTypeWithKeyAnnotation.MyPrimaryKey
  commentId: P:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.BaseTypeWithKeyAnnotation.MyPrimaryKey
  id: MyPrimaryKey
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.BaseTypeWithKeyAnnotation
  langs:
  - csharp
  - vb
  name: MyPrimaryKey
  nameWithType: ModelBuilderTest.BaseTypeWithKeyAnnotation.MyPrimaryKey
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.BaseTypeWithKeyAnnotation.MyPrimaryKey
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/TestModel.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: MyPrimaryKey
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/TestModel.cs
    startLine: 472
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: >-
      [Key]

      public int MyPrimaryKey { get; set; }
    content.vb: >-
      <Key>

      Public Property MyPrimaryKey As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.BaseTypeWithKeyAnnotation.MyPrimaryKey*
  attributes:
  - type: System.ComponentModel.DataAnnotations.KeyAttribute
    ctor: System.ComponentModel.DataAnnotations.KeyAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.BaseTypeWithKeyAnnotation.AnotherKey
  commentId: P:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.BaseTypeWithKeyAnnotation.AnotherKey
  id: AnotherKey
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.BaseTypeWithKeyAnnotation
  langs:
  - csharp
  - vb
  name: AnotherKey
  nameWithType: ModelBuilderTest.BaseTypeWithKeyAnnotation.AnotherKey
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.BaseTypeWithKeyAnnotation.AnotherKey
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/TestModel.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AnotherKey
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/TestModel.cs
    startLine: 475
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: public int AnotherKey { get; set; }
    content.vb: Public Property AnotherKey As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.BaseTypeWithKeyAnnotation.AnotherKey*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.BaseTypeWithKeyAnnotation.ForeignKeyProperty
  commentId: P:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.BaseTypeWithKeyAnnotation.ForeignKeyProperty
  id: ForeignKeyProperty
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.BaseTypeWithKeyAnnotation
  langs:
  - csharp
  - vb
  name: ForeignKeyProperty
  nameWithType: ModelBuilderTest.BaseTypeWithKeyAnnotation.ForeignKeyProperty
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.BaseTypeWithKeyAnnotation.ForeignKeyProperty
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/TestModel.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ForeignKeyProperty
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/TestModel.cs
    startLine: 477
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: public int ForeignKeyProperty { get; set; }
    content.vb: Public Property ForeignKeyProperty As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.BaseTypeWithKeyAnnotation.ForeignKeyProperty*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.BaseTypeWithKeyAnnotation.Navigation
  commentId: P:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.BaseTypeWithKeyAnnotation.Navigation
  id: Navigation
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.BaseTypeWithKeyAnnotation
  langs:
  - csharp
  - vb
  name: Navigation
  nameWithType: ModelBuilderTest.BaseTypeWithKeyAnnotation.Navigation
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.BaseTypeWithKeyAnnotation.Navigation
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/TestModel.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Navigation
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/TestModel.cs
    startLine: 479
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: >-
      [ForeignKey("ForeignKeyProperty")]

      public ModelBuilderTest.PrincipalTypeWithKeyAnnotation Navigation { get; set; }
    content.vb: >-
      <ForeignKey("ForeignKeyProperty")>

      Public Property Navigation As ModelBuilderTest.PrincipalTypeWithKeyAnnotation
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.PrincipalTypeWithKeyAnnotation
  overload: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.BaseTypeWithKeyAnnotation.Navigation*
  attributes:
  - type: System.ComponentModel.DataAnnotations.Schema.ForeignKeyAttribute
    ctor: System.ComponentModel.DataAnnotations.Schema.ForeignKeyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: ForeignKeyProperty
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.EntityFrameworkCore.Tests
  commentId: N:Microsoft.EntityFrameworkCore.Tests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Tests
  nameWithType: Microsoft.EntityFrameworkCore.Tests
  fullName: Microsoft.EntityFrameworkCore.Tests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.BaseTypeWithKeyAnnotation.MyPrimaryKey*
  commentId: Overload:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.BaseTypeWithKeyAnnotation.MyPrimaryKey
  isExternal: false
  name: MyPrimaryKey
  nameWithType: ModelBuilderTest.BaseTypeWithKeyAnnotation.MyPrimaryKey
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.BaseTypeWithKeyAnnotation.MyPrimaryKey
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.BaseTypeWithKeyAnnotation.AnotherKey*
  commentId: Overload:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.BaseTypeWithKeyAnnotation.AnotherKey
  isExternal: false
  name: AnotherKey
  nameWithType: ModelBuilderTest.BaseTypeWithKeyAnnotation.AnotherKey
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.BaseTypeWithKeyAnnotation.AnotherKey
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.BaseTypeWithKeyAnnotation.ForeignKeyProperty*
  commentId: Overload:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.BaseTypeWithKeyAnnotation.ForeignKeyProperty
  isExternal: false
  name: ForeignKeyProperty
  nameWithType: ModelBuilderTest.BaseTypeWithKeyAnnotation.ForeignKeyProperty
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.BaseTypeWithKeyAnnotation.ForeignKeyProperty
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.BaseTypeWithKeyAnnotation.Navigation*
  commentId: Overload:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.BaseTypeWithKeyAnnotation.Navigation
  isExternal: false
  name: Navigation
  nameWithType: ModelBuilderTest.BaseTypeWithKeyAnnotation.Navigation
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.BaseTypeWithKeyAnnotation.Navigation
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.PrincipalTypeWithKeyAnnotation
  commentId: T:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.PrincipalTypeWithKeyAnnotation
  parent: Microsoft.EntityFrameworkCore.Tests
  isExternal: false
  name: ModelBuilderTest.PrincipalTypeWithKeyAnnotation
  nameWithType: ModelBuilderTest.PrincipalTypeWithKeyAnnotation
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.PrincipalTypeWithKeyAnnotation
