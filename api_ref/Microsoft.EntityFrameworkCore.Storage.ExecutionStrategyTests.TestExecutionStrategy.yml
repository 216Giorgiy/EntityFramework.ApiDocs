### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategyTests.TestExecutionStrategy
  commentId: T:Microsoft.EntityFrameworkCore.Storage.ExecutionStrategyTests.TestExecutionStrategy
  id: ExecutionStrategyTests.TestExecutionStrategy
  parent: Microsoft.EntityFrameworkCore.Storage
  children:
  - Microsoft.EntityFrameworkCore.Storage.ExecutionStrategyTests.TestExecutionStrategy.#ctor
  - Microsoft.EntityFrameworkCore.Storage.ExecutionStrategyTests.TestExecutionStrategy.#ctor(Microsoft.EntityFrameworkCore.DbContext)
  - Microsoft.EntityFrameworkCore.Storage.ExecutionStrategyTests.TestExecutionStrategy.ShouldRetryOn(System.Exception)
  - Microsoft.EntityFrameworkCore.Storage.ExecutionStrategyTests.TestExecutionStrategy.Suspended
  langs:
  - csharp
  - vb
  name: ExecutionStrategyTests.TestExecutionStrategy
  nameWithType: ExecutionStrategyTests.TestExecutionStrategy
  fullName: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategyTests.TestExecutionStrategy
  type: Class
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Storage/ExecutionStrategyTests.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: TestExecutionStrategy
    path: test/Microsoft.EntityFrameworkCore.Tests/Storage/ExecutionStrategyTests.cs
    startLine: 20
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Storage
  syntax:
    content: 'public class TestExecutionStrategy : ExecutionStrategy, IExecutionStrategy'
    content.vb: >-
      Public Class TestExecutionStrategy
          Inherits ExecutionStrategy
          Implements IExecutionStrategy
  inheritance:
  - System.Object
  - Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy
  implements:
  - Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy
  inheritedMembers:
  - Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.DefaultMaxRetryCount
  - Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.DefaultMaxDelay
  - Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExceptionsEncountered
  - Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.Random
  - Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.MaxRetryCount
  - Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.MaxRetryDelay
  - Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.Context
  - Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.Logger
  - Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.RetriesOnFailure
  - Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.Execute``2(System.Func{{TState},{TResult}},{TState})
  - Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteAsync``2(System.Func{{TState},System.Threading.CancellationToken,System.Threading.Tasks.Task{{TResult}}},{TState},System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.OnFirstExecution
  - Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.OnRetry
  - Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.GetNextDelay(System.Exception)
  - Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.UnwrapAndHandleException``1(System.Exception,System.Func{System.Exception,{T}})
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Storage.ExecutionStrategyTests.TestExecutionStrategy.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategyTests.TestExecutionStrategy.#ctor
  commentId: M:Microsoft.EntityFrameworkCore.Storage.ExecutionStrategyTests.TestExecutionStrategy.#ctor
  id: '#ctor'
  parent: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategyTests.TestExecutionStrategy
  langs:
  - csharp
  - vb
  name: TestExecutionStrategy()
  nameWithType: ExecutionStrategyTests.TestExecutionStrategy.TestExecutionStrategy()
  fullName: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategyTests.TestExecutionStrategy.TestExecutionStrategy()
  type: Constructor
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Storage/ExecutionStrategyTests.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: .ctor
    path: test/Microsoft.EntityFrameworkCore.Tests/Storage/ExecutionStrategyTests.cs
    startLine: 22
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Storage
  syntax:
    content: public TestExecutionStrategy()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategyTests.TestExecutionStrategy.#ctor(Microsoft.EntityFrameworkCore.DbContext)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.ExecutionStrategyTests.TestExecutionStrategy.#ctor(Microsoft.EntityFrameworkCore.DbContext)
  id: '#ctor(Microsoft.EntityFrameworkCore.DbContext)'
  parent: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategyTests.TestExecutionStrategy
  langs:
  - csharp
  - vb
  name: TestExecutionStrategy(DbContext)
  nameWithType: ExecutionStrategyTests.TestExecutionStrategy.TestExecutionStrategy(DbContext)
  fullName: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategyTests.TestExecutionStrategy.TestExecutionStrategy(Microsoft.EntityFrameworkCore.DbContext)
  type: Constructor
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Storage/ExecutionStrategyTests.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: .ctor
    path: test/Microsoft.EntityFrameworkCore.Tests/Storage/ExecutionStrategyTests.cs
    startLine: 27
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Storage
  syntax:
    content: public TestExecutionStrategy(DbContext context)
    content.vb: Public Sub New(context As DbContext)
    parameters:
    - id: context
      type: Microsoft.EntityFrameworkCore.DbContext
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategyTests.TestExecutionStrategy.ShouldRetryOn(System.Exception)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.ExecutionStrategyTests.TestExecutionStrategy.ShouldRetryOn(System.Exception)
  id: ShouldRetryOn(System.Exception)
  parent: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategyTests.TestExecutionStrategy
  langs:
  - csharp
  - vb
  name: ShouldRetryOn(Exception)
  nameWithType: ExecutionStrategyTests.TestExecutionStrategy.ShouldRetryOn(Exception)
  fullName: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategyTests.TestExecutionStrategy.ShouldRetryOn(System.Exception)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Storage/ExecutionStrategyTests.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ShouldRetryOn
    path: test/Microsoft.EntityFrameworkCore.Tests/Storage/ExecutionStrategyTests.cs
    startLine: 32
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Storage
  syntax:
    content: protected override bool ShouldRetryOn(Exception exception)
    content.vb: Protected Overrides Function ShouldRetryOn(exception As Exception) As Boolean
    parameters:
    - id: exception
      type: System.Exception
    return:
      type: System.Boolean
  overridden: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ShouldRetryOn(System.Exception)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategyTests.TestExecutionStrategy.Suspended
  commentId: P:Microsoft.EntityFrameworkCore.Storage.ExecutionStrategyTests.TestExecutionStrategy.Suspended
  id: Suspended
  parent: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategyTests.TestExecutionStrategy
  langs:
  - csharp
  - vb
  name: Suspended
  nameWithType: ExecutionStrategyTests.TestExecutionStrategy.Suspended
  fullName: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategyTests.TestExecutionStrategy.Suspended
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Storage/ExecutionStrategyTests.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Suspended
    path: test/Microsoft.EntityFrameworkCore.Tests/Storage/ExecutionStrategyTests.cs
    startLine: 34
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Storage
  syntax:
    content: public static bool Suspended { get; set; }
    content.vb: Public Shared Property Suspended As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.EntityFrameworkCore.Storage
  commentId: N:Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Storage
  nameWithType: Microsoft.EntityFrameworkCore.Storage
  fullName: Microsoft.EntityFrameworkCore.Storage
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy
  commentId: T:Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: ExecutionStrategy
  nameWithType: ExecutionStrategy
  fullName: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy
- uid: Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IExecutionStrategy
  nameWithType: IExecutionStrategy
  fullName: Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy
- uid: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.DefaultMaxRetryCount
  commentId: F:Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.DefaultMaxRetryCount
  parent: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy
  isExternal: false
  name: DefaultMaxRetryCount
  nameWithType: ExecutionStrategy.DefaultMaxRetryCount
  fullName: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.DefaultMaxRetryCount
- uid: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.DefaultMaxDelay
  commentId: F:Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.DefaultMaxDelay
  parent: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy
  isExternal: false
  name: DefaultMaxDelay
  nameWithType: ExecutionStrategy.DefaultMaxDelay
  fullName: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.DefaultMaxDelay
- uid: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExceptionsEncountered
  commentId: P:Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExceptionsEncountered
  parent: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy
  isExternal: false
  name: ExceptionsEncountered
  nameWithType: ExecutionStrategy.ExceptionsEncountered
  fullName: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExceptionsEncountered
- uid: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.Random
  commentId: P:Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.Random
  parent: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy
  isExternal: false
  name: Random
  nameWithType: ExecutionStrategy.Random
  fullName: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.Random
- uid: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.MaxRetryCount
  commentId: P:Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.MaxRetryCount
  parent: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy
  isExternal: false
  name: MaxRetryCount
  nameWithType: ExecutionStrategy.MaxRetryCount
  fullName: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.MaxRetryCount
- uid: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.MaxRetryDelay
  commentId: P:Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.MaxRetryDelay
  parent: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy
  isExternal: false
  name: MaxRetryDelay
  nameWithType: ExecutionStrategy.MaxRetryDelay
  fullName: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.MaxRetryDelay
- uid: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.Context
  commentId: P:Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.Context
  parent: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy
  isExternal: false
  name: Context
  nameWithType: ExecutionStrategy.Context
  fullName: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.Context
- uid: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.Logger
  commentId: P:Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.Logger
  parent: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy
  isExternal: false
  name: Logger
  nameWithType: ExecutionStrategy.Logger
  fullName: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.Logger
- uid: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.RetriesOnFailure
  commentId: P:Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.RetriesOnFailure
  parent: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy
  isExternal: false
  name: RetriesOnFailure
  nameWithType: ExecutionStrategy.RetriesOnFailure
  fullName: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.RetriesOnFailure
- uid: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.Execute``2(System.Func{{TState},{TResult}},{TState})
  commentId: M:Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.Execute``2(System.Func{``0,``1},``0)
  parent: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy
  definition: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.Execute``2(System.Func{``0,``1},``0)
  name: Execute<TState, TResult>(Func<TState, TResult>, TState)
  nameWithType: ExecutionStrategy.Execute<TState, TResult>(Func<TState, TResult>, TState)
  fullName: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.Execute<TState, TResult>(System.Func<TState, TResult>, TState)
  nameWithType.vb: ExecutionStrategy.Execute(Of TState, TResult)(Func(Of TState, TResult), TState)
  fullname.vb: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.Execute(Of TState, TResult)(System.Func(Of TState, TResult), TState)
  name.vb: Execute(Of TState, TResult)(Func(Of TState, TResult), TState)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.Execute``2(System.Func{``0,``1},``0)
    name: Execute<TState, TResult>
    nameWithType: ExecutionStrategy.Execute<TState, TResult>
    fullName: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.Execute<TState, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TState
    nameWithType: TState
    fullName: TState
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TState
    nameWithType: TState
    fullName: TState
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.Execute``2(System.Func{``0,``1},``0)
    name: Execute(Of TState, TResult)
    nameWithType: ExecutionStrategy.Execute(Of TState, TResult)
    fullName: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.Execute(Of TState, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TState
    nameWithType: TState
    fullName: TState
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TState
    nameWithType: TState
    fullName: TState
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteAsync``2(System.Func{{TState},System.Threading.CancellationToken,System.Threading.Tasks.Task{{TResult}}},{TState},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteAsync``2(System.Func{``0,System.Threading.CancellationToken,System.Threading.Tasks.Task{``1}},``0,System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy
  definition: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteAsync``2(System.Func{``0,System.Threading.CancellationToken,System.Threading.Tasks.Task{``1}},``0,System.Threading.CancellationToken)
  name: ExecuteAsync<TState, TResult>(Func<TState, CancellationToken, Task<TResult>>, TState, CancellationToken)
  nameWithType: ExecutionStrategy.ExecuteAsync<TState, TResult>(Func<TState, CancellationToken, Task<TResult>>, TState, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteAsync<TState, TResult>(System.Func<TState, System.Threading.CancellationToken, System.Threading.Tasks.Task<TResult>>, TState, System.Threading.CancellationToken)
  nameWithType.vb: ExecutionStrategy.ExecuteAsync(Of TState, TResult)(Func(Of TState, CancellationToken, Task(Of TResult)), TState, CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteAsync(Of TState, TResult)(System.Func(Of TState, System.Threading.CancellationToken, System.Threading.Tasks.Task(Of TResult)), TState, System.Threading.CancellationToken)
  name.vb: ExecuteAsync(Of TState, TResult)(Func(Of TState, CancellationToken, Task(Of TResult)), TState, CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteAsync``2(System.Func{``0,System.Threading.CancellationToken,System.Threading.Tasks.Task{``1}},``0,System.Threading.CancellationToken)
    name: ExecuteAsync<TState, TResult>
    nameWithType: ExecutionStrategy.ExecuteAsync<TState, TResult>
    fullName: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteAsync<TState, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TState
    nameWithType: TState
    fullName: TState
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TState
    nameWithType: TState
    fullName: TState
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteAsync``2(System.Func{``0,System.Threading.CancellationToken,System.Threading.Tasks.Task{``1}},``0,System.Threading.CancellationToken)
    name: ExecuteAsync(Of TState, TResult)
    nameWithType: ExecutionStrategy.ExecuteAsync(Of TState, TResult)
    fullName: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteAsync(Of TState, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TState
    nameWithType: TState
    fullName: TState
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TState
    nameWithType: TState
    fullName: TState
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.OnFirstExecution
  commentId: M:Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.OnFirstExecution
  parent: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy
  isExternal: false
  name: OnFirstExecution()
  nameWithType: ExecutionStrategy.OnFirstExecution()
  fullName: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.OnFirstExecution()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.OnFirstExecution
    name: OnFirstExecution
    nameWithType: ExecutionStrategy.OnFirstExecution
    fullName: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.OnFirstExecution
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.OnFirstExecution
    name: OnFirstExecution
    nameWithType: ExecutionStrategy.OnFirstExecution
    fullName: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.OnFirstExecution
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.OnRetry
  commentId: M:Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.OnRetry
  parent: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy
  isExternal: false
  name: OnRetry()
  nameWithType: ExecutionStrategy.OnRetry()
  fullName: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.OnRetry()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.OnRetry
    name: OnRetry
    nameWithType: ExecutionStrategy.OnRetry
    fullName: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.OnRetry
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.OnRetry
    name: OnRetry
    nameWithType: ExecutionStrategy.OnRetry
    fullName: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.OnRetry
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.GetNextDelay(System.Exception)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.GetNextDelay(System.Exception)
  parent: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy
  isExternal: true
  name: GetNextDelay(Exception)
  nameWithType: ExecutionStrategy.GetNextDelay(Exception)
  fullName: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.GetNextDelay(System.Exception)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.GetNextDelay(System.Exception)
    name: GetNextDelay
    nameWithType: ExecutionStrategy.GetNextDelay
    fullName: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.GetNextDelay
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.GetNextDelay(System.Exception)
    name: GetNextDelay
    nameWithType: ExecutionStrategy.GetNextDelay
    fullName: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.GetNextDelay
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.UnwrapAndHandleException``1(System.Exception,System.Func{System.Exception,{T}})
  commentId: M:Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.UnwrapAndHandleException``1(System.Exception,System.Func{System.Exception,``0})
  parent: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy
  definition: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.UnwrapAndHandleException``1(System.Exception,System.Func{System.Exception,``0})
  name: UnwrapAndHandleException<T>(Exception, Func<Exception, T>)
  nameWithType: ExecutionStrategy.UnwrapAndHandleException<T>(Exception, Func<Exception, T>)
  fullName: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.UnwrapAndHandleException<T>(System.Exception, System.Func<System.Exception, T>)
  nameWithType.vb: ExecutionStrategy.UnwrapAndHandleException(Of T)(Exception, Func(Of Exception, T))
  fullname.vb: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.UnwrapAndHandleException(Of T)(System.Exception, System.Func(Of System.Exception, T))
  name.vb: UnwrapAndHandleException(Of T)(Exception, Func(Of Exception, T))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.UnwrapAndHandleException``1(System.Exception,System.Func{System.Exception,``0})
    name: UnwrapAndHandleException<T>
    nameWithType: ExecutionStrategy.UnwrapAndHandleException<T>
    fullName: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.UnwrapAndHandleException<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.UnwrapAndHandleException``1(System.Exception,System.Func{System.Exception,``0})
    name: UnwrapAndHandleException(Of T)
    nameWithType: ExecutionStrategy.UnwrapAndHandleException(Of T)
    fullName: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.UnwrapAndHandleException(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategyTests.TestExecutionStrategy.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<ExecutionStrategyTests.TestExecutionStrategy, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<ExecutionStrategyTests.TestExecutionStrategy, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Storage.ExecutionStrategyTests.TestExecutionStrategy, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of ExecutionStrategyTests.TestExecutionStrategy, TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Storage.ExecutionStrategyTests.TestExecutionStrategy, TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of ExecutionStrategyTests.TestExecutionStrategy, TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<ExecutionStrategyTests.TestExecutionStrategy, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<ExecutionStrategyTests.TestExecutionStrategy, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Storage.ExecutionStrategyTests.TestExecutionStrategy, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of ExecutionStrategyTests.TestExecutionStrategy, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of ExecutionStrategyTests.TestExecutionStrategy, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Storage.ExecutionStrategyTests.TestExecutionStrategy, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.Execute``2(System.Func{``0,``1},``0)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.Execute``2(System.Func{``0,``1},``0)
  isExternal: true
  name: Execute<TState, TResult>(Func<TState, TResult>, TState)
  nameWithType: ExecutionStrategy.Execute<TState, TResult>(Func<TState, TResult>, TState)
  fullName: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.Execute<TState, TResult>(System.Func<TState, TResult>, TState)
  nameWithType.vb: ExecutionStrategy.Execute(Of TState, TResult)(Func(Of TState, TResult), TState)
  fullname.vb: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.Execute(Of TState, TResult)(System.Func(Of TState, TResult), TState)
  name.vb: Execute(Of TState, TResult)(Func(Of TState, TResult), TState)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.Execute``2(System.Func{``0,``1},``0)
    name: Execute<TState, TResult>
    nameWithType: ExecutionStrategy.Execute<TState, TResult>
    fullName: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.Execute<TState, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TState
    nameWithType: TState
    fullName: TState
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TState
    nameWithType: TState
    fullName: TState
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.Execute``2(System.Func{``0,``1},``0)
    name: Execute(Of TState, TResult)
    nameWithType: ExecutionStrategy.Execute(Of TState, TResult)
    fullName: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.Execute(Of TState, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TState
    nameWithType: TState
    fullName: TState
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TState
    nameWithType: TState
    fullName: TState
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteAsync``2(System.Func{``0,System.Threading.CancellationToken,System.Threading.Tasks.Task{``1}},``0,System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteAsync``2(System.Func{``0,System.Threading.CancellationToken,System.Threading.Tasks.Task{``1}},``0,System.Threading.CancellationToken)
  isExternal: true
  name: ExecuteAsync<TState, TResult>(Func<TState, CancellationToken, Task<TResult>>, TState, CancellationToken)
  nameWithType: ExecutionStrategy.ExecuteAsync<TState, TResult>(Func<TState, CancellationToken, Task<TResult>>, TState, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteAsync<TState, TResult>(System.Func<TState, System.Threading.CancellationToken, System.Threading.Tasks.Task<TResult>>, TState, System.Threading.CancellationToken)
  nameWithType.vb: ExecutionStrategy.ExecuteAsync(Of TState, TResult)(Func(Of TState, CancellationToken, Task(Of TResult)), TState, CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteAsync(Of TState, TResult)(System.Func(Of TState, System.Threading.CancellationToken, System.Threading.Tasks.Task(Of TResult)), TState, System.Threading.CancellationToken)
  name.vb: ExecuteAsync(Of TState, TResult)(Func(Of TState, CancellationToken, Task(Of TResult)), TState, CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteAsync``2(System.Func{``0,System.Threading.CancellationToken,System.Threading.Tasks.Task{``1}},``0,System.Threading.CancellationToken)
    name: ExecuteAsync<TState, TResult>
    nameWithType: ExecutionStrategy.ExecuteAsync<TState, TResult>
    fullName: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteAsync<TState, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TState
    nameWithType: TState
    fullName: TState
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TState
    nameWithType: TState
    fullName: TState
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteAsync``2(System.Func{``0,System.Threading.CancellationToken,System.Threading.Tasks.Task{``1}},``0,System.Threading.CancellationToken)
    name: ExecuteAsync(Of TState, TResult)
    nameWithType: ExecutionStrategy.ExecuteAsync(Of TState, TResult)
    fullName: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteAsync(Of TState, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TState
    nameWithType: TState
    fullName: TState
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TState
    nameWithType: TState
    fullName: TState
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.UnwrapAndHandleException``1(System.Exception,System.Func{System.Exception,``0})
  commentId: M:Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.UnwrapAndHandleException``1(System.Exception,System.Func{System.Exception,``0})
  isExternal: true
  name: UnwrapAndHandleException<T>(Exception, Func<Exception, T>)
  nameWithType: ExecutionStrategy.UnwrapAndHandleException<T>(Exception, Func<Exception, T>)
  fullName: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.UnwrapAndHandleException<T>(System.Exception, System.Func<System.Exception, T>)
  nameWithType.vb: ExecutionStrategy.UnwrapAndHandleException(Of T)(Exception, Func(Of Exception, T))
  fullname.vb: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.UnwrapAndHandleException(Of T)(System.Exception, System.Func(Of System.Exception, T))
  name.vb: UnwrapAndHandleException(Of T)(Exception, Func(Of Exception, T))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.UnwrapAndHandleException``1(System.Exception,System.Func{System.Exception,``0})
    name: UnwrapAndHandleException<T>
    nameWithType: ExecutionStrategy.UnwrapAndHandleException<T>
    fullName: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.UnwrapAndHandleException<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.UnwrapAndHandleException``1(System.Exception,System.Func{System.Exception,``0})
    name: UnwrapAndHandleException(Of T)
    nameWithType: ExecutionStrategy.UnwrapAndHandleException(Of T)
    fullName: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.UnwrapAndHandleException(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: Microsoft.EntityFrameworkCore.DbContext
  commentId: T:Microsoft.EntityFrameworkCore.DbContext
  parent: Microsoft.EntityFrameworkCore
  isExternal: false
  name: DbContext
  nameWithType: DbContext
  fullName: Microsoft.EntityFrameworkCore.DbContext
- uid: Microsoft.EntityFrameworkCore
  commentId: N:Microsoft.EntityFrameworkCore
  isExternal: false
  name: Microsoft.EntityFrameworkCore
  nameWithType: Microsoft.EntityFrameworkCore
  fullName: Microsoft.EntityFrameworkCore
- uid: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ShouldRetryOn(System.Exception)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ShouldRetryOn(System.Exception)
  parent: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy
  isExternal: true
  name: ShouldRetryOn(Exception)
  nameWithType: ExecutionStrategy.ShouldRetryOn(Exception)
  fullName: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ShouldRetryOn(System.Exception)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ShouldRetryOn(System.Exception)
    name: ShouldRetryOn
    nameWithType: ExecutionStrategy.ShouldRetryOn
    fullName: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ShouldRetryOn
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ShouldRetryOn(System.Exception)
    name: ShouldRetryOn
    nameWithType: ExecutionStrategy.ShouldRetryOn
    fullName: Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ShouldRetryOn
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
