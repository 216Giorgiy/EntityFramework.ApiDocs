### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent
  id: LoadTestBase`2.Parent
  parent: Microsoft.EntityFrameworkCore.Specification.Tests
  children:
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent.AlternateId
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent.Children
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent.ChildrenAk
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent.ChildrenCompositeKey
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent.ChildrenShadowFk
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent.Id
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent.Single
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent.SingleAk
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent.SingleCompositeKey
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent.SinglePkToPk
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent.SingleShadowFk
  langs:
  - csharp
  - vb
  name: LoadTestBase<TTestStore, TFixture>.Parent
  nameWithType: LoadTestBase<TTestStore, TFixture>.Parent
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Parent
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Parent
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 3275
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: protected class Parent
    content.vb: Protected Class Parent
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Parent
  modifiers.csharp:
  - protected
  - class
  modifiers.vb:
  - Protected
  - Class
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Parent
  name.vb: LoadTestBase(Of TTestStore, TFixture).Parent
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent.Id
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent.Id
  id: Id
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: LoadTestBase<TTestStore, TFixture>.Parent.Id
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Parent.Id
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Id
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 3277
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [DatabaseGenerated(DatabaseGeneratedOption.None)]

      public int Id { get; set; }
    content.vb: >-
      <DatabaseGenerated(DatabaseGeneratedOption.None)>

      Public Property Id As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent.Id*
  attributes:
  - type: System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedAttribute
    ctor: System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedAttribute.#ctor(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption)
    arguments:
    - type: System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption
      value: 0
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Parent.Id
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Parent.Id
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent.AlternateId
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent.AlternateId
  id: AlternateId
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent
  langs:
  - csharp
  - vb
  name: AlternateId
  nameWithType: LoadTestBase<TTestStore, TFixture>.Parent.AlternateId
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Parent.AlternateId
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AlternateId
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 3280
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public string AlternateId { get; set; }
    content.vb: Public Property AlternateId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent.AlternateId*
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Parent.AlternateId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Parent.AlternateId
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent.Children
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent.Children
  id: Children
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent
  langs:
  - csharp
  - vb
  name: Children
  nameWithType: LoadTestBase<TTestStore, TFixture>.Parent.Children
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Parent.Children
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Children
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 3282
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public IEnumerable<LoadTestBase<TTestStore, TFixture>.Child> Children { get; set; }
    content.vb: Public Property Children As IEnumerable(Of LoadTestBase(Of TTestStore, TFixture).Child)
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Child}
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent.Children*
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Parent.Children
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Parent.Children
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent.SinglePkToPk
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent.SinglePkToPk
  id: SinglePkToPk
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent
  langs:
  - csharp
  - vb
  name: SinglePkToPk
  nameWithType: LoadTestBase<TTestStore, TFixture>.Parent.SinglePkToPk
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Parent.SinglePkToPk
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: SinglePkToPk
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 3283
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public LoadTestBase<TTestStore, TFixture>.SinglePkToPk SinglePkToPk { get; set; }
    content.vb: Public Property SinglePkToPk As LoadTestBase(Of TTestStore, TFixture).SinglePkToPk
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.SinglePkToPk
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent.SinglePkToPk*
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Parent.SinglePkToPk
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Parent.SinglePkToPk
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent.Single
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent.Single
  id: Single
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent
  langs:
  - csharp
  - vb
  name: Single
  nameWithType: LoadTestBase<TTestStore, TFixture>.Parent.Single
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Parent.Single
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Single
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 3284
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public LoadTestBase<TTestStore, TFixture>.Single Single { get; set; }
    content.vb: Public Property Single As LoadTestBase(Of TTestStore, TFixture).Single
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Single
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent.Single*
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Parent.Single
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Parent.Single
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent.ChildrenAk
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent.ChildrenAk
  id: ChildrenAk
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent
  langs:
  - csharp
  - vb
  name: ChildrenAk
  nameWithType: LoadTestBase<TTestStore, TFixture>.Parent.ChildrenAk
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Parent.ChildrenAk
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ChildrenAk
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 3286
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public IEnumerable<LoadTestBase<TTestStore, TFixture>.ChildAk> ChildrenAk { get; set; }
    content.vb: Public Property ChildrenAk As IEnumerable(Of LoadTestBase(Of TTestStore, TFixture).ChildAk)
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.ChildAk}
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent.ChildrenAk*
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Parent.ChildrenAk
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Parent.ChildrenAk
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent.SingleAk
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent.SingleAk
  id: SingleAk
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent
  langs:
  - csharp
  - vb
  name: SingleAk
  nameWithType: LoadTestBase<TTestStore, TFixture>.Parent.SingleAk
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Parent.SingleAk
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: SingleAk
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 3287
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public LoadTestBase<TTestStore, TFixture>.SingleAk SingleAk { get; set; }
    content.vb: Public Property SingleAk As LoadTestBase(Of TTestStore, TFixture).SingleAk
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.SingleAk
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent.SingleAk*
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Parent.SingleAk
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Parent.SingleAk
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent.ChildrenShadowFk
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent.ChildrenShadowFk
  id: ChildrenShadowFk
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent
  langs:
  - csharp
  - vb
  name: ChildrenShadowFk
  nameWithType: LoadTestBase<TTestStore, TFixture>.Parent.ChildrenShadowFk
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Parent.ChildrenShadowFk
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ChildrenShadowFk
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 3289
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public IEnumerable<LoadTestBase<TTestStore, TFixture>.ChildShadowFk> ChildrenShadowFk { get; set; }
    content.vb: Public Property ChildrenShadowFk As IEnumerable(Of LoadTestBase(Of TTestStore, TFixture).ChildShadowFk)
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.ChildShadowFk}
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent.ChildrenShadowFk*
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Parent.ChildrenShadowFk
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Parent.ChildrenShadowFk
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent.SingleShadowFk
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent.SingleShadowFk
  id: SingleShadowFk
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent
  langs:
  - csharp
  - vb
  name: SingleShadowFk
  nameWithType: LoadTestBase<TTestStore, TFixture>.Parent.SingleShadowFk
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Parent.SingleShadowFk
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: SingleShadowFk
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 3290
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public LoadTestBase<TTestStore, TFixture>.SingleShadowFk SingleShadowFk { get; set; }
    content.vb: Public Property SingleShadowFk As LoadTestBase(Of TTestStore, TFixture).SingleShadowFk
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.SingleShadowFk
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent.SingleShadowFk*
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Parent.SingleShadowFk
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Parent.SingleShadowFk
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent.ChildrenCompositeKey
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent.ChildrenCompositeKey
  id: ChildrenCompositeKey
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent
  langs:
  - csharp
  - vb
  name: ChildrenCompositeKey
  nameWithType: LoadTestBase<TTestStore, TFixture>.Parent.ChildrenCompositeKey
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Parent.ChildrenCompositeKey
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ChildrenCompositeKey
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 3292
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public IEnumerable<LoadTestBase<TTestStore, TFixture>.ChildCompositeKey> ChildrenCompositeKey { get; set; }
    content.vb: Public Property ChildrenCompositeKey As IEnumerable(Of LoadTestBase(Of TTestStore, TFixture).ChildCompositeKey)
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.ChildCompositeKey}
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent.ChildrenCompositeKey*
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Parent.ChildrenCompositeKey
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Parent.ChildrenCompositeKey
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent.SingleCompositeKey
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent.SingleCompositeKey
  id: SingleCompositeKey
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent
  langs:
  - csharp
  - vb
  name: SingleCompositeKey
  nameWithType: LoadTestBase<TTestStore, TFixture>.Parent.SingleCompositeKey
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Parent.SingleCompositeKey
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: SingleCompositeKey
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 3293
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public LoadTestBase<TTestStore, TFixture>.SingleCompositeKey SingleCompositeKey { get; set; }
    content.vb: Public Property SingleCompositeKey As LoadTestBase(Of TTestStore, TFixture).SingleCompositeKey
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.SingleCompositeKey
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent.SingleCompositeKey*
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Parent.SingleCompositeKey
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Parent.SingleCompositeKey
references:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests
  commentId: N:Microsoft.EntityFrameworkCore.Specification.Tests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Specification.Tests
  nameWithType: Microsoft.EntityFrameworkCore.Specification.Tests
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent.Id*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent.Id
  isExternal: false
  name: Id
  nameWithType: LoadTestBase<TTestStore, TFixture>.Parent.Id
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Parent.Id
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Parent.Id
  fullname.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Parent.Id
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent.AlternateId*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent.AlternateId
  isExternal: false
  name: AlternateId
  nameWithType: LoadTestBase<TTestStore, TFixture>.Parent.AlternateId
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Parent.AlternateId
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Parent.AlternateId
  fullname.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Parent.AlternateId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent.Children*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent.Children
  isExternal: false
  name: Children
  nameWithType: LoadTestBase<TTestStore, TFixture>.Parent.Children
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Parent.Children
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Parent.Children
  fullname.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Parent.Children
- uid: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Child}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Child}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<LoadTestBase.Child<>>
  nameWithType: IEnumerable<LoadTestBase.Child<>>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase.Child<>>
  nameWithType.vb: IEnumerable(Of LoadTestBase.Child(Of ))
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase.Child(Of ))
  name.vb: IEnumerable(Of LoadTestBase.Child(Of ))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Child
    name: LoadTestBase.Child
    nameWithType: LoadTestBase.Child
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase.Child
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Child
    name: LoadTestBase.Child
    nameWithType: LoadTestBase.Child
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase.Child
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent.SinglePkToPk*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent.SinglePkToPk
  isExternal: false
  name: SinglePkToPk
  nameWithType: LoadTestBase<TTestStore, TFixture>.Parent.SinglePkToPk
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Parent.SinglePkToPk
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Parent.SinglePkToPk
  fullname.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Parent.SinglePkToPk
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.SinglePkToPk
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.SinglePkToPk
  parent: Microsoft.EntityFrameworkCore.Specification.Tests
  isExternal: false
  name: LoadTestBase.SinglePkToPk<>
  nameWithType: LoadTestBase.SinglePkToPk<>
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase.SinglePkToPk<>
  nameWithType.vb: LoadTestBase.SinglePkToPk(Of )
  fullname.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase.SinglePkToPk(Of )
  name.vb: LoadTestBase.SinglePkToPk(Of )
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.SinglePkToPk
    name: LoadTestBase.SinglePkToPk
    nameWithType: LoadTestBase.SinglePkToPk
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase.SinglePkToPk
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.SinglePkToPk
    name: LoadTestBase.SinglePkToPk
    nameWithType: LoadTestBase.SinglePkToPk
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase.SinglePkToPk
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent.Single*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent.Single
  isExternal: false
  name: Single
  nameWithType: LoadTestBase<TTestStore, TFixture>.Parent.Single
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Parent.Single
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Parent.Single
  fullname.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Parent.Single
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Single
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Single
  parent: Microsoft.EntityFrameworkCore.Specification.Tests
  isExternal: false
  name: LoadTestBase.Single<>
  nameWithType: LoadTestBase.Single<>
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase.Single<>
  nameWithType.vb: LoadTestBase.Single(Of )
  fullname.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase.Single(Of )
  name.vb: LoadTestBase.Single(Of )
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Single
    name: LoadTestBase.Single
    nameWithType: LoadTestBase.Single
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase.Single
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Single
    name: LoadTestBase.Single
    nameWithType: LoadTestBase.Single
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase.Single
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent.ChildrenAk*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent.ChildrenAk
  isExternal: false
  name: ChildrenAk
  nameWithType: LoadTestBase<TTestStore, TFixture>.Parent.ChildrenAk
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Parent.ChildrenAk
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Parent.ChildrenAk
  fullname.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Parent.ChildrenAk
- uid: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.ChildAk}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.ChildAk}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<LoadTestBase.ChildAk<>>
  nameWithType: IEnumerable<LoadTestBase.ChildAk<>>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase.ChildAk<>>
  nameWithType.vb: IEnumerable(Of LoadTestBase.ChildAk(Of ))
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase.ChildAk(Of ))
  name.vb: IEnumerable(Of LoadTestBase.ChildAk(Of ))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.ChildAk
    name: LoadTestBase.ChildAk
    nameWithType: LoadTestBase.ChildAk
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase.ChildAk
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.ChildAk
    name: LoadTestBase.ChildAk
    nameWithType: LoadTestBase.ChildAk
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase.ChildAk
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent.SingleAk*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent.SingleAk
  isExternal: false
  name: SingleAk
  nameWithType: LoadTestBase<TTestStore, TFixture>.Parent.SingleAk
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Parent.SingleAk
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Parent.SingleAk
  fullname.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Parent.SingleAk
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.SingleAk
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.SingleAk
  parent: Microsoft.EntityFrameworkCore.Specification.Tests
  isExternal: false
  name: LoadTestBase.SingleAk<>
  nameWithType: LoadTestBase.SingleAk<>
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase.SingleAk<>
  nameWithType.vb: LoadTestBase.SingleAk(Of )
  fullname.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase.SingleAk(Of )
  name.vb: LoadTestBase.SingleAk(Of )
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.SingleAk
    name: LoadTestBase.SingleAk
    nameWithType: LoadTestBase.SingleAk
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase.SingleAk
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.SingleAk
    name: LoadTestBase.SingleAk
    nameWithType: LoadTestBase.SingleAk
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase.SingleAk
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent.ChildrenShadowFk*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent.ChildrenShadowFk
  isExternal: false
  name: ChildrenShadowFk
  nameWithType: LoadTestBase<TTestStore, TFixture>.Parent.ChildrenShadowFk
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Parent.ChildrenShadowFk
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Parent.ChildrenShadowFk
  fullname.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Parent.ChildrenShadowFk
- uid: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.ChildShadowFk}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.ChildShadowFk}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<LoadTestBase.ChildShadowFk<>>
  nameWithType: IEnumerable<LoadTestBase.ChildShadowFk<>>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase.ChildShadowFk<>>
  nameWithType.vb: IEnumerable(Of LoadTestBase.ChildShadowFk(Of ))
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase.ChildShadowFk(Of ))
  name.vb: IEnumerable(Of LoadTestBase.ChildShadowFk(Of ))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.ChildShadowFk
    name: LoadTestBase.ChildShadowFk
    nameWithType: LoadTestBase.ChildShadowFk
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase.ChildShadowFk
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.ChildShadowFk
    name: LoadTestBase.ChildShadowFk
    nameWithType: LoadTestBase.ChildShadowFk
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase.ChildShadowFk
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent.SingleShadowFk*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent.SingleShadowFk
  isExternal: false
  name: SingleShadowFk
  nameWithType: LoadTestBase<TTestStore, TFixture>.Parent.SingleShadowFk
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Parent.SingleShadowFk
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Parent.SingleShadowFk
  fullname.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Parent.SingleShadowFk
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.SingleShadowFk
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.SingleShadowFk
  parent: Microsoft.EntityFrameworkCore.Specification.Tests
  isExternal: false
  name: LoadTestBase.SingleShadowFk<>
  nameWithType: LoadTestBase.SingleShadowFk<>
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase.SingleShadowFk<>
  nameWithType.vb: LoadTestBase.SingleShadowFk(Of )
  fullname.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase.SingleShadowFk(Of )
  name.vb: LoadTestBase.SingleShadowFk(Of )
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.SingleShadowFk
    name: LoadTestBase.SingleShadowFk
    nameWithType: LoadTestBase.SingleShadowFk
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase.SingleShadowFk
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.SingleShadowFk
    name: LoadTestBase.SingleShadowFk
    nameWithType: LoadTestBase.SingleShadowFk
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase.SingleShadowFk
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent.ChildrenCompositeKey*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent.ChildrenCompositeKey
  isExternal: false
  name: ChildrenCompositeKey
  nameWithType: LoadTestBase<TTestStore, TFixture>.Parent.ChildrenCompositeKey
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Parent.ChildrenCompositeKey
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Parent.ChildrenCompositeKey
  fullname.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Parent.ChildrenCompositeKey
- uid: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.ChildCompositeKey}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.ChildCompositeKey}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<LoadTestBase.ChildCompositeKey<>>
  nameWithType: IEnumerable<LoadTestBase.ChildCompositeKey<>>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase.ChildCompositeKey<>>
  nameWithType.vb: IEnumerable(Of LoadTestBase.ChildCompositeKey(Of ))
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase.ChildCompositeKey(Of ))
  name.vb: IEnumerable(Of LoadTestBase.ChildCompositeKey(Of ))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.ChildCompositeKey
    name: LoadTestBase.ChildCompositeKey
    nameWithType: LoadTestBase.ChildCompositeKey
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase.ChildCompositeKey
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.ChildCompositeKey
    name: LoadTestBase.ChildCompositeKey
    nameWithType: LoadTestBase.ChildCompositeKey
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase.ChildCompositeKey
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent.SingleCompositeKey*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Parent.SingleCompositeKey
  isExternal: false
  name: SingleCompositeKey
  nameWithType: LoadTestBase<TTestStore, TFixture>.Parent.SingleCompositeKey
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Parent.SingleCompositeKey
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Parent.SingleCompositeKey
  fullname.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Parent.SingleCompositeKey
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.SingleCompositeKey
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.SingleCompositeKey
  parent: Microsoft.EntityFrameworkCore.Specification.Tests
  isExternal: false
  name: LoadTestBase.SingleCompositeKey<>
  nameWithType: LoadTestBase.SingleCompositeKey<>
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase.SingleCompositeKey<>
  nameWithType.vb: LoadTestBase.SingleCompositeKey(Of )
  fullname.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase.SingleCompositeKey(Of )
  name.vb: LoadTestBase.SingleCompositeKey(Of )
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.SingleCompositeKey
    name: LoadTestBase.SingleCompositeKey
    nameWithType: LoadTestBase.SingleCompositeKey
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase.SingleCompositeKey
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.SingleCompositeKey
    name: LoadTestBase.SingleCompositeKey
    nameWithType: LoadTestBase.SingleCompositeKey
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase.SingleCompositeKey
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
