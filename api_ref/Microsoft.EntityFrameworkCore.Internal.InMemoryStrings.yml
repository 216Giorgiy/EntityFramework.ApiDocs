### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Internal.InMemoryStrings
  commentId: T:Microsoft.EntityFrameworkCore.Internal.InMemoryStrings
  id: InMemoryStrings
  parent: Microsoft.EntityFrameworkCore.Internal
  children:
  - Microsoft.EntityFrameworkCore.Internal.InMemoryStrings.LogSavedChanges(System.Object)
  - Microsoft.EntityFrameworkCore.Internal.InMemoryStrings.TransactionsNotSupported
  - Microsoft.EntityFrameworkCore.Internal.InMemoryStrings.UpdateConcurrencyException
  langs:
  - csharp
  - vb
  name: InMemoryStrings
  nameWithType: InMemoryStrings
  fullName: Microsoft.EntityFrameworkCore.Internal.InMemoryStrings
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.InMemory/Properties/InMemoryStrings.Designer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: InMemoryStrings
    path: src/Microsoft.EntityFrameworkCore.InMemory/Properties/InMemoryStrings.Designer.cs
    startLine: 13
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\n	This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public static class InMemoryStrings
    content.vb: Public Module InMemoryStrings
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.EntityFrameworkCore.Internal.InMemoryStrings.LogSavedChanges(System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.InMemoryStrings.LogSavedChanges(System.Object)
  id: LogSavedChanges(System.Object)
  parent: Microsoft.EntityFrameworkCore.Internal.InMemoryStrings
  langs:
  - csharp
  - vb
  name: LogSavedChanges(Object)
  nameWithType: InMemoryStrings.LogSavedChanges(Object)
  fullName: Microsoft.EntityFrameworkCore.Internal.InMemoryStrings.LogSavedChanges(System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.InMemory/Properties/InMemoryStrings.Designer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: LogSavedChanges
    path: src/Microsoft.EntityFrameworkCore.InMemory/Properties/InMemoryStrings.Designer.cs
    startLine: 21
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\nSaved {count} entities to in-memory store.\n"
  example: []
  syntax:
    content: public static string LogSavedChanges(object count)
    content.vb: Public Shared Function LogSavedChanges(count As Object) As String
    parameters:
    - id: count
      type: System.Object
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Internal.InMemoryStrings.TransactionsNotSupported
  commentId: P:Microsoft.EntityFrameworkCore.Internal.InMemoryStrings.TransactionsNotSupported
  id: TransactionsNotSupported
  parent: Microsoft.EntityFrameworkCore.Internal.InMemoryStrings
  langs:
  - csharp
  - vb
  name: TransactionsNotSupported
  nameWithType: InMemoryStrings.TransactionsNotSupported
  fullName: Microsoft.EntityFrameworkCore.Internal.InMemoryStrings.TransactionsNotSupported
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.InMemory/Properties/InMemoryStrings.Designer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: TransactionsNotSupported
    path: src/Microsoft.EntityFrameworkCore.InMemory/Properties/InMemoryStrings.Designer.cs
    startLine: 29
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\nTransactions are not supported by the in-memory store. See http://go.microsoft.com/fwlink/?LinkId=800142\n"
  example: []
  syntax:
    content: public static string TransactionsNotSupported { get; }
    content.vb: Public Shared ReadOnly Property TransactionsNotSupported As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Internal.InMemoryStrings.UpdateConcurrencyException
  commentId: P:Microsoft.EntityFrameworkCore.Internal.InMemoryStrings.UpdateConcurrencyException
  id: UpdateConcurrencyException
  parent: Microsoft.EntityFrameworkCore.Internal.InMemoryStrings
  langs:
  - csharp
  - vb
  name: UpdateConcurrencyException
  nameWithType: InMemoryStrings.UpdateConcurrencyException
  fullName: Microsoft.EntityFrameworkCore.Internal.InMemoryStrings.UpdateConcurrencyException
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.InMemory/Properties/InMemoryStrings.Designer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: UpdateConcurrencyException
    path: src/Microsoft.EntityFrameworkCore.InMemory/Properties/InMemoryStrings.Designer.cs
    startLine: 37
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\nAttempted to update or delete an entity that does not exist in the store.\n"
  example: []
  syntax:
    content: public static string UpdateConcurrencyException { get; }
    content.vb: Public Shared ReadOnly Property UpdateConcurrencyException As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: Microsoft.EntityFrameworkCore.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Internal
  fullName: Microsoft.EntityFrameworkCore.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
