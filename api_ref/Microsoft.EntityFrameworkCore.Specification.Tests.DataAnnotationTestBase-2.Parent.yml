### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.DataAnnotationTestBase`2.Parent
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.DataAnnotationTestBase`2.Parent
  id: DataAnnotationTestBase`2.Parent
  parent: Microsoft.EntityFrameworkCore.Specification.Tests
  children:
  - Microsoft.EntityFrameworkCore.Specification.Tests.DataAnnotationTestBase`2.Parent.Children
  - Microsoft.EntityFrameworkCore.Specification.Tests.DataAnnotationTestBase`2.Parent.IdRow
  - Microsoft.EntityFrameworkCore.Specification.Tests.DataAnnotationTestBase`2.Parent.Name
  langs:
  - csharp
  - vb
  name: DataAnnotationTestBase<TTestStore, TFixture>.Parent
  nameWithType: DataAnnotationTestBase<TTestStore, TFixture>.Parent
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.DataAnnotationTestBase<TTestStore, TFixture>.Parent
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/DataAnnotationTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Parent
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/DataAnnotationTestBase.cs
    startLine: 724
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public class Parent
    content.vb: Public Class Parent
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: DataAnnotationTestBase(Of TTestStore, TFixture).Parent
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.DataAnnotationTestBase(Of TTestStore, TFixture).Parent
  name.vb: DataAnnotationTestBase(Of TTestStore, TFixture).Parent
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.DataAnnotationTestBase`2.Parent.IdRow
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.DataAnnotationTestBase`2.Parent.IdRow
  id: IdRow
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.DataAnnotationTestBase`2.Parent
  langs:
  - csharp
  - vb
  name: IdRow
  nameWithType: DataAnnotationTestBase<TTestStore, TFixture>.Parent.IdRow
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.DataAnnotationTestBase<TTestStore, TFixture>.Parent.IdRow
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/DataAnnotationTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: IdRow
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/DataAnnotationTestBase.cs
    startLine: 726
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Key]

      [DatabaseGenerated(DatabaseGeneratedOption.Identity)]

      public int IdRow { get; set; }
    content.vb: >-
      <Key>

      <DatabaseGenerated(DatabaseGeneratedOption.Identity)>

      Public Property IdRow As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.DataAnnotationTestBase`2.Parent.IdRow*
  attributes:
  - type: System.ComponentModel.DataAnnotations.KeyAttribute
    ctor: System.ComponentModel.DataAnnotations.KeyAttribute.#ctor
    arguments: []
  - type: System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedAttribute
    ctor: System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedAttribute.#ctor(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption)
    arguments:
    - type: System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption
      value: 1
  nameWithType.vb: DataAnnotationTestBase(Of TTestStore, TFixture).Parent.IdRow
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.DataAnnotationTestBase(Of TTestStore, TFixture).Parent.IdRow
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.DataAnnotationTestBase`2.Parent.Name
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.DataAnnotationTestBase`2.Parent.Name
  id: Name
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.DataAnnotationTestBase`2.Parent
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: DataAnnotationTestBase<TTestStore, TFixture>.Parent.Name
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.DataAnnotationTestBase<TTestStore, TFixture>.Parent.Name
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/DataAnnotationTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Name
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/DataAnnotationTestBase.cs
    startLine: 730
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public string Name { get; set; }
    content.vb: Public Property Name As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.DataAnnotationTestBase`2.Parent.Name*
  nameWithType.vb: DataAnnotationTestBase(Of TTestStore, TFixture).Parent.Name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.DataAnnotationTestBase(Of TTestStore, TFixture).Parent.Name
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.DataAnnotationTestBase`2.Parent.Children
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.DataAnnotationTestBase`2.Parent.Children
  id: Children
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.DataAnnotationTestBase`2.Parent
  langs:
  - csharp
  - vb
  name: Children
  nameWithType: DataAnnotationTestBase<TTestStore, TFixture>.Parent.Children
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.DataAnnotationTestBase<TTestStore, TFixture>.Parent.Children
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/DataAnnotationTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Children
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/DataAnnotationTestBase.cs
    startLine: 732
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public ICollection<DataAnnotationTestBase<TTestStore, TFixture>.Child> Children { get; set; }
    content.vb: Public Property Children As ICollection(Of DataAnnotationTestBase(Of TTestStore, TFixture).Child)
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Microsoft.EntityFrameworkCore.Specification.Tests.DataAnnotationTestBase`2.Child}
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.DataAnnotationTestBase`2.Parent.Children*
  nameWithType.vb: DataAnnotationTestBase(Of TTestStore, TFixture).Parent.Children
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.DataAnnotationTestBase(Of TTestStore, TFixture).Parent.Children
references:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests
  commentId: N:Microsoft.EntityFrameworkCore.Specification.Tests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Specification.Tests
  nameWithType: Microsoft.EntityFrameworkCore.Specification.Tests
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.DataAnnotationTestBase`2.Parent.IdRow*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.DataAnnotationTestBase`2.Parent.IdRow
  isExternal: false
  name: IdRow
  nameWithType: DataAnnotationTestBase<TTestStore, TFixture>.Parent.IdRow
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.DataAnnotationTestBase<TTestStore, TFixture>.Parent.IdRow
  nameWithType.vb: DataAnnotationTestBase(Of TTestStore, TFixture).Parent.IdRow
  fullname.vb: Microsoft.EntityFrameworkCore.Specification.Tests.DataAnnotationTestBase(Of TTestStore, TFixture).Parent.IdRow
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.DataAnnotationTestBase`2.Parent.Name*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.DataAnnotationTestBase`2.Parent.Name
  isExternal: false
  name: Name
  nameWithType: DataAnnotationTestBase<TTestStore, TFixture>.Parent.Name
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.DataAnnotationTestBase<TTestStore, TFixture>.Parent.Name
  nameWithType.vb: DataAnnotationTestBase(Of TTestStore, TFixture).Parent.Name
  fullname.vb: Microsoft.EntityFrameworkCore.Specification.Tests.DataAnnotationTestBase(Of TTestStore, TFixture).Parent.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.DataAnnotationTestBase`2.Parent.Children*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.DataAnnotationTestBase`2.Parent.Children
  isExternal: false
  name: Children
  nameWithType: DataAnnotationTestBase<TTestStore, TFixture>.Parent.Children
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.DataAnnotationTestBase<TTestStore, TFixture>.Parent.Children
  nameWithType.vb: DataAnnotationTestBase(Of TTestStore, TFixture).Parent.Children
  fullname.vb: Microsoft.EntityFrameworkCore.Specification.Tests.DataAnnotationTestBase(Of TTestStore, TFixture).Parent.Children
- uid: System.Collections.Generic.ICollection{Microsoft.EntityFrameworkCore.Specification.Tests.DataAnnotationTestBase`2.Child}
  commentId: T:System.Collections.Generic.ICollection{Microsoft.EntityFrameworkCore.Specification.Tests.DataAnnotationTestBase`2.Child}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<DataAnnotationTestBase.Child<>>
  nameWithType: ICollection<DataAnnotationTestBase.Child<>>
  fullName: System.Collections.Generic.ICollection<Microsoft.EntityFrameworkCore.Specification.Tests.DataAnnotationTestBase.Child<>>
  nameWithType.vb: ICollection(Of DataAnnotationTestBase.Child(Of ))
  fullname.vb: System.Collections.Generic.ICollection(Of Microsoft.EntityFrameworkCore.Specification.Tests.DataAnnotationTestBase.Child(Of ))
  name.vb: ICollection(Of DataAnnotationTestBase.Child(Of ))
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.DataAnnotationTestBase`2.Child
    name: DataAnnotationTestBase.Child
    nameWithType: DataAnnotationTestBase.Child
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.DataAnnotationTestBase.Child
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.DataAnnotationTestBase`2.Child
    name: DataAnnotationTestBase.Child
    nameWithType: DataAnnotationTestBase.Child
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.DataAnnotationTestBase.Child
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullname.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
