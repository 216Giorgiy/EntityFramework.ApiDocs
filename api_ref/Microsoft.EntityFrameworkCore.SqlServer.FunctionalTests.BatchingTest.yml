### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.BatchingTest
  commentId: T:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.BatchingTest
  id: BatchingTest
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  children:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.BatchingTest.Inserts_and_updates_are_batched_correctly
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.BatchingTest.Inserts_are_batched_correctly(System.Boolean,System.Boolean,System.Boolean)
  langs:
  - csharp
  - vb
  name: BatchingTest
  nameWithType: BatchingTest
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.BatchingTest
  type: Class
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BatchingTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: BatchingTest
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BatchingTest.cs
    startLine: 12
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public class BatchingTest
    content.vb: Public Class BatchingTest
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.BatchingTest.Inserts_are_batched_correctly(System.Boolean,System.Boolean,System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.BatchingTest.Inserts_are_batched_correctly(System.Boolean,System.Boolean,System.Boolean)
  id: Inserts_are_batched_correctly(System.Boolean,System.Boolean,System.Boolean)
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.BatchingTest
  langs:
  - csharp
  - vb
  name: Inserts_are_batched_correctly(Boolean, Boolean, Boolean)
  nameWithType: BatchingTest.Inserts_are_batched_correctly(Boolean, Boolean, Boolean)
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.BatchingTest.Inserts_are_batched_correctly(System.Boolean, System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BatchingTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Inserts_are_batched_correctly
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BatchingTest.cs
    startLine: 16
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true, true, true})]

      [InlineData(new object[]{false, true, true})]

      [InlineData(new object[]{true, false, true})]

      [InlineData(new object[]{false, false, true})]

      [InlineData(new object[]{true, true, false})]

      [InlineData(new object[]{false, true, false})]

      [InlineData(new object[]{true, false, false})]

      [InlineData(new object[]{false, false, false})]

      public void Inserts_are_batched_correctly(bool clientPk, bool clientFk, bool clientOrder)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True, True, True})>

      <InlineData(New Object() {False, True, True})>

      <InlineData(New Object() {True, False, True})>

      <InlineData(New Object() {False, False, True})>

      <InlineData(New Object() {True, True, False})>

      <InlineData(New Object() {False, True, False})>

      <InlineData(New Object() {True, False, False})>

      <InlineData(New Object() {False, False, False})>

      Public Sub Inserts_are_batched_correctly(clientPk As Boolean, clientFk As Boolean, clientOrder As Boolean)
    parameters:
    - id: clientPk
      type: System.Boolean
    - id: clientFk
      type: System.Boolean
    - id: clientOrder
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.BatchingTest.Inserts_and_updates_are_batched_correctly
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.BatchingTest.Inserts_and_updates_are_batched_correctly
  id: Inserts_and_updates_are_batched_correctly
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.BatchingTest
  langs:
  - csharp
  - vb
  name: Inserts_and_updates_are_batched_correctly()
  nameWithType: BatchingTest.Inserts_and_updates_are_batched_correctly()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.BatchingTest.Inserts_and_updates_are_batched_correctly()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BatchingTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Inserts_and_updates_are_batched_correctly
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BatchingTest.cs
    startLine: 76
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: >-
      [Fact]

      public void Inserts_and_updates_are_batched_correctly()
    content.vb: >-
      <Fact>

      Public Sub Inserts_and_updates_are_batched_correctly
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  commentId: N:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  nameWithType: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
