### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder`1
  commentId: T:Microsoft.EntityFrameworkCore.Internal.IEntityFinder`1
  id: IEntityFinder`1
  parent: Microsoft.EntityFrameworkCore.Internal
  children:
  - Microsoft.EntityFrameworkCore.Internal.IEntityFinder`1.Find(System.Object[])
  - Microsoft.EntityFrameworkCore.Internal.IEntityFinder`1.FindAsync(System.Object[],System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.Internal.IEntityFinder`1.Query(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  langs:
  - csharp
  - vb
  name: IEntityFinder<TEntity>
  nameWithType: IEntityFinder<TEntity>
  fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder<TEntity>
  type: Interface
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/IEntityFinder`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: IEntityFinder
    path: src/Microsoft.EntityFrameworkCore/Internal/IEntityFinder`.cs
    startLine: 17
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public interface IEntityFinder<TEntity> : IEntityFinder where TEntity : class'
    content.vb: >-
      Public Interface IEntityFinder(Of TEntity As Class)
          Inherits IEntityFinder
    typeParameters:
    - id: TEntity
  inheritedMembers:
  - Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Load(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  - Microsoft.EntityFrameworkCore.Internal.IEntityFinder.LoadAsync(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.Internal.IEntityFinder.GetDatabaseValues(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  - Microsoft.EntityFrameworkCore.Internal.IEntityFinder.GetDatabaseValuesAsync(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.Threading.CancellationToken)
  nameWithType.vb: IEntityFinder(Of TEntity)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Microsoft.EntityFrameworkCore.Internal.IEntityFinder(Of TEntity)
  name.vb: IEntityFinder(Of TEntity)
- uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder`1.Find(System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.Internal.IEntityFinder`1.Find(System.Object[])
  id: Find(System.Object[])
  parent: Microsoft.EntityFrameworkCore.Internal.IEntityFinder`1
  langs:
  - csharp
  - vb
  name: Find(Object[])
  nameWithType: IEntityFinder<TEntity>.Find(Object[])
  fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder<TEntity>.Find(System.Object[])
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/IEntityFinder`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Find
    path: src/Microsoft.EntityFrameworkCore/Internal/IEntityFinder`.cs
    startLine: 24
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: TEntity Find(object[] keyValues)
    content.vb: Function Find(keyValues As Object()) As TEntity
    parameters:
    - id: keyValues
      type: System.Object[]
    return:
      type: '{TEntity}'
  nameWithType.vb: IEntityFinder(Of TEntity).Find(Object())
  fullName.vb: Microsoft.EntityFrameworkCore.Internal.IEntityFinder(Of TEntity).Find(System.Object())
  name.vb: Find(Object())
- uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder`1.FindAsync(System.Object[],System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.IEntityFinder`1.FindAsync(System.Object[],System.Threading.CancellationToken)
  id: FindAsync(System.Object[],System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.Internal.IEntityFinder`1
  langs:
  - csharp
  - vb
  name: FindAsync(Object[], CancellationToken)
  nameWithType: IEntityFinder<TEntity>.FindAsync(Object[], CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder<TEntity>.FindAsync(System.Object[], System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/IEntityFinder`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: FindAsync
    path: src/Microsoft.EntityFrameworkCore/Internal/IEntityFinder`.cs
    startLine: 30
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: Task<TEntity> FindAsync(object[] keyValues, CancellationToken cancellationToken = null)
    content.vb: Function FindAsync(keyValues As Object(), cancellationToken As CancellationToken = Nothing) As Task(Of TEntity)
    parameters:
    - id: keyValues
      type: System.Object[]
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{{TEntity}}
  nameWithType.vb: IEntityFinder(Of TEntity).FindAsync(Object(), CancellationToken)
  fullName.vb: Microsoft.EntityFrameworkCore.Internal.IEntityFinder(Of TEntity).FindAsync(System.Object(), System.Threading.CancellationToken)
  name.vb: FindAsync(Object(), CancellationToken)
- uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder`1.Query(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.IEntityFinder`1.Query(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  id: Query(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  parent: Microsoft.EntityFrameworkCore.Internal.IEntityFinder`1
  langs:
  - csharp
  - vb
  name: Query(INavigation, InternalEntityEntry)
  nameWithType: IEntityFinder<TEntity>.Query(INavigation, InternalEntityEntry)
  fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder<TEntity>.Query(Microsoft.EntityFrameworkCore.Metadata.INavigation, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/IEntityFinder`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Query
    path: src/Microsoft.EntityFrameworkCore/Internal/IEntityFinder`.cs
    startLine: 36
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: IQueryable<TEntity> Query(INavigation navigation, InternalEntityEntry entry)
    content.vb: Function Query(navigation As INavigation, entry As InternalEntityEntry) As IQueryable(Of TEntity)
    parameters:
    - id: navigation
      type: Microsoft.EntityFrameworkCore.Metadata.INavigation
    - id: entry
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    return:
      type: System.Linq.IQueryable{{TEntity}}
  nameWithType.vb: IEntityFinder(Of TEntity).Query(INavigation, InternalEntityEntry)
  fullName.vb: Microsoft.EntityFrameworkCore.Internal.IEntityFinder(Of TEntity).Query(Microsoft.EntityFrameworkCore.Metadata.INavigation, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
references:
- uid: Microsoft.EntityFrameworkCore.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Internal
  fullName: Microsoft.EntityFrameworkCore.Internal
- uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Load(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Load(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  parent: Microsoft.EntityFrameworkCore.Internal.IEntityFinder
  isExternal: false
  name: Load(INavigation, InternalEntityEntry)
  nameWithType: IEntityFinder.Load(INavigation, InternalEntityEntry)
  fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Load(Microsoft.EntityFrameworkCore.Metadata.INavigation, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Load(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
    name: Load
    nameWithType: IEntityFinder.Load
    fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.INavigation
    name: INavigation
    nameWithType: INavigation
    fullName: Microsoft.EntityFrameworkCore.Metadata.INavigation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Load(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
    name: Load
    nameWithType: IEntityFinder.Load
    fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.INavigation
    name: INavigation
    nameWithType: INavigation
    fullName: Microsoft.EntityFrameworkCore.Metadata.INavigation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.LoadAsync(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.IEntityFinder.LoadAsync(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.Internal.IEntityFinder
  isExternal: true
  name: LoadAsync(INavigation, InternalEntityEntry, CancellationToken)
  nameWithType: IEntityFinder.LoadAsync(INavigation, InternalEntityEntry, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.LoadAsync(Microsoft.EntityFrameworkCore.Metadata.INavigation, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.LoadAsync(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.Threading.CancellationToken)
    name: LoadAsync
    nameWithType: IEntityFinder.LoadAsync
    fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.LoadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.INavigation
    name: INavigation
    nameWithType: INavigation
    fullName: Microsoft.EntityFrameworkCore.Metadata.INavigation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.LoadAsync(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.Threading.CancellationToken)
    name: LoadAsync
    nameWithType: IEntityFinder.LoadAsync
    fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.LoadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.INavigation
    name: INavigation
    nameWithType: INavigation
    fullName: Microsoft.EntityFrameworkCore.Metadata.INavigation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.GetDatabaseValues(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.IEntityFinder.GetDatabaseValues(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  parent: Microsoft.EntityFrameworkCore.Internal.IEntityFinder
  isExternal: false
  name: GetDatabaseValues(InternalEntityEntry)
  nameWithType: IEntityFinder.GetDatabaseValues(InternalEntityEntry)
  fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.GetDatabaseValues(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.GetDatabaseValues(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
    name: GetDatabaseValues
    nameWithType: IEntityFinder.GetDatabaseValues
    fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.GetDatabaseValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.GetDatabaseValues(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
    name: GetDatabaseValues
    nameWithType: IEntityFinder.GetDatabaseValues
    fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.GetDatabaseValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.GetDatabaseValuesAsync(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.IEntityFinder.GetDatabaseValuesAsync(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.Internal.IEntityFinder
  isExternal: true
  name: GetDatabaseValuesAsync(InternalEntityEntry, CancellationToken)
  nameWithType: IEntityFinder.GetDatabaseValuesAsync(InternalEntityEntry, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.GetDatabaseValuesAsync(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.GetDatabaseValuesAsync(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.Threading.CancellationToken)
    name: GetDatabaseValuesAsync
    nameWithType: IEntityFinder.GetDatabaseValuesAsync
    fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.GetDatabaseValuesAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.GetDatabaseValuesAsync(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.Threading.CancellationToken)
    name: GetDatabaseValuesAsync
    nameWithType: IEntityFinder.GetDatabaseValuesAsync
    fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.GetDatabaseValuesAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    name: InternalEntityEntry
    nameWithType: InternalEntityEntry
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder
  commentId: T:Microsoft.EntityFrameworkCore.Internal.IEntityFinder
  parent: Microsoft.EntityFrameworkCore.Internal
  isExternal: false
  name: IEntityFinder
  nameWithType: IEntityFinder
  fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder
- uid: System.Object[]
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullname.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: '{TEntity}'
  commentId: '!:TEntity'
  definition: TEntity
  name: TEntity
  nameWithType: TEntity
  fullName: TEntity
- uid: TEntity
  isExternal: false
  name: TEntity
  nameWithType: TEntity
  fullName: TEntity
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{{TEntity}}
  commentId: T:System.Threading.Tasks.Task{``0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TEntity>
  nameWithType: Task<TEntity>
  fullName: System.Threading.Tasks.Task<TEntity>
  nameWithType.vb: Task(Of TEntity)
  fullname.vb: System.Threading.Tasks.Task(Of TEntity)
  name.vb: Task(Of TEntity)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.EntityFrameworkCore.Metadata.INavigation
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.INavigation
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: INavigation
  nameWithType: INavigation
  fullName: Microsoft.EntityFrameworkCore.Metadata.INavigation
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  isExternal: false
  name: InternalEntityEntry
  nameWithType: InternalEntityEntry
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
- uid: System.Linq.IQueryable{{TEntity}}
  commentId: T:System.Linq.IQueryable{`0}
  parent: System.Linq
  definition: System.Linq.IQueryable`1
  name: IQueryable<TEntity>
  nameWithType: IQueryable<TEntity>
  fullName: System.Linq.IQueryable<TEntity>
  nameWithType.vb: IQueryable(Of TEntity)
  fullname.vb: System.Linq.IQueryable(Of TEntity)
  name.vb: IQueryable(Of TEntity)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  commentId: N:Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  nameWithType: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
- uid: System.Linq.IQueryable`1
  commentId: T:System.Linq.IQueryable`1
  isExternal: true
  name: IQueryable<T>
  nameWithType: IQueryable<T>
  fullName: System.Linq.IQueryable<T>
  nameWithType.vb: IQueryable(Of T)
  fullname.vb: System.Linq.IQueryable(Of T)
  name.vb: IQueryable(Of T)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq
  commentId: N:System.Linq
  isExternal: false
  name: System.Linq
  nameWithType: System.Linq
  fullName: System.Linq
