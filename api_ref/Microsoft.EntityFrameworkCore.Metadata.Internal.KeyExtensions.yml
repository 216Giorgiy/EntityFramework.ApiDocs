### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.KeyExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.KeyExtensions
  id: KeyExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  children:
  - Microsoft.EntityFrameworkCore.Metadata.Internal.KeyExtensions.AsKey(Microsoft.EntityFrameworkCore.Metadata.IKey,System.String)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.KeyExtensions.GetIdentityMapFactory(Microsoft.EntityFrameworkCore.Metadata.IKey)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.KeyExtensions.GetPrincipalKeyValueFactory``1(Microsoft.EntityFrameworkCore.Metadata.IKey)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.KeyExtensions.GetWeakReferenceIdentityMapFactory(Microsoft.EntityFrameworkCore.Metadata.IKey)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.KeyExtensions.IsPrimaryKey(Microsoft.EntityFrameworkCore.Metadata.IKey)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.KeyExtensions.ToDebugString(Microsoft.EntityFrameworkCore.Metadata.IKey,System.Boolean,System.String)
  langs:
  - csharp
  - vb
  name: KeyExtensions
  nameWithType: KeyExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.KeyExtensions
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/KeyExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: KeyExtensions
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/KeyExtensions.cs
    startLine: 17
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public static class KeyExtensions
    content.vb: Public Module KeyExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.KeyExtensions.GetIdentityMapFactory(Microsoft.EntityFrameworkCore.Metadata.IKey)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.KeyExtensions.GetIdentityMapFactory(Microsoft.EntityFrameworkCore.Metadata.IKey)
  id: GetIdentityMapFactory(Microsoft.EntityFrameworkCore.Metadata.IKey)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.KeyExtensions
  langs:
  - csharp
  - vb
  name: GetIdentityMapFactory(IKey)
  nameWithType: KeyExtensions.GetIdentityMapFactory(IKey)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.KeyExtensions.GetIdentityMapFactory(Microsoft.EntityFrameworkCore.Metadata.IKey)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/KeyExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetIdentityMapFactory
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/KeyExtensions.cs
    startLine: 23
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public static Func<IIdentityMap> GetIdentityMapFactory(this IKey key)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetIdentityMapFactory(key As IKey) As Func(Of IIdentityMap)
    parameters:
    - id: key
      type: Microsoft.EntityFrameworkCore.Metadata.IKey
    return:
      type: System.Func{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap}
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.KeyExtensions.GetIdentityMapFactory*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.KeyExtensions.GetWeakReferenceIdentityMapFactory(Microsoft.EntityFrameworkCore.Metadata.IKey)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.KeyExtensions.GetWeakReferenceIdentityMapFactory(Microsoft.EntityFrameworkCore.Metadata.IKey)
  id: GetWeakReferenceIdentityMapFactory(Microsoft.EntityFrameworkCore.Metadata.IKey)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.KeyExtensions
  langs:
  - csharp
  - vb
  name: GetWeakReferenceIdentityMapFactory(IKey)
  nameWithType: KeyExtensions.GetWeakReferenceIdentityMapFactory(IKey)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.KeyExtensions.GetWeakReferenceIdentityMapFactory(Microsoft.EntityFrameworkCore.Metadata.IKey)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/KeyExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetWeakReferenceIdentityMapFactory
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/KeyExtensions.cs
    startLine: 30
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public static Func<IWeakReferenceIdentityMap> GetWeakReferenceIdentityMapFactory(this IKey key)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetWeakReferenceIdentityMapFactory(key As IKey) As Func(Of IWeakReferenceIdentityMap)
    parameters:
    - id: key
      type: Microsoft.EntityFrameworkCore.Metadata.IKey
    return:
      type: System.Func{Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap}
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.KeyExtensions.GetWeakReferenceIdentityMapFactory*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.KeyExtensions.GetPrincipalKeyValueFactory``1(Microsoft.EntityFrameworkCore.Metadata.IKey)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.KeyExtensions.GetPrincipalKeyValueFactory``1(Microsoft.EntityFrameworkCore.Metadata.IKey)
  id: GetPrincipalKeyValueFactory``1(Microsoft.EntityFrameworkCore.Metadata.IKey)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.KeyExtensions
  langs:
  - csharp
  - vb
  name: GetPrincipalKeyValueFactory<TKey>(IKey)
  nameWithType: KeyExtensions.GetPrincipalKeyValueFactory<TKey>(IKey)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.KeyExtensions.GetPrincipalKeyValueFactory<TKey>(Microsoft.EntityFrameworkCore.Metadata.IKey)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/KeyExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetPrincipalKeyValueFactory
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/KeyExtensions.cs
    startLine: 37
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public static IPrincipalKeyValueFactory<TKey> GetPrincipalKeyValueFactory<TKey>(this IKey key)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetPrincipalKeyValueFactory(Of TKey)(key As IKey) As IPrincipalKeyValueFactory(Of TKey)
    parameters:
    - id: key
      type: Microsoft.EntityFrameworkCore.Metadata.IKey
    typeParameters:
    - id: TKey
    return:
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory{{TKey}}
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.KeyExtensions.GetPrincipalKeyValueFactory*
  nameWithType.vb: KeyExtensions.GetPrincipalKeyValueFactory(Of TKey)(IKey)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.KeyExtensions.GetPrincipalKeyValueFactory(Of TKey)(Microsoft.EntityFrameworkCore.Metadata.IKey)
  name.vb: GetPrincipalKeyValueFactory(Of TKey)(IKey)
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.KeyExtensions.IsPrimaryKey(Microsoft.EntityFrameworkCore.Metadata.IKey)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.KeyExtensions.IsPrimaryKey(Microsoft.EntityFrameworkCore.Metadata.IKey)
  id: IsPrimaryKey(Microsoft.EntityFrameworkCore.Metadata.IKey)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.KeyExtensions
  langs:
  - csharp
  - vb
  name: IsPrimaryKey(IKey)
  nameWithType: KeyExtensions.IsPrimaryKey(IKey)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.KeyExtensions.IsPrimaryKey(Microsoft.EntityFrameworkCore.Metadata.IKey)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/KeyExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: IsPrimaryKey
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/KeyExtensions.cs
    startLine: 44
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public static bool IsPrimaryKey(this IKey key)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function IsPrimaryKey(key As IKey) As Boolean
    parameters:
    - id: key
      type: Microsoft.EntityFrameworkCore.Metadata.IKey
    return:
      type: System.Boolean
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.KeyExtensions.IsPrimaryKey*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.KeyExtensions.ToDebugString(Microsoft.EntityFrameworkCore.Metadata.IKey,System.Boolean,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.KeyExtensions.ToDebugString(Microsoft.EntityFrameworkCore.Metadata.IKey,System.Boolean,System.String)
  id: ToDebugString(Microsoft.EntityFrameworkCore.Metadata.IKey,System.Boolean,System.String)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.KeyExtensions
  langs:
  - csharp
  - vb
  name: ToDebugString(IKey, Boolean, String)
  nameWithType: KeyExtensions.ToDebugString(IKey, Boolean, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.KeyExtensions.ToDebugString(Microsoft.EntityFrameworkCore.Metadata.IKey, System.Boolean, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/KeyExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ToDebugString
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/KeyExtensions.cs
    startLine: 51
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public static string ToDebugString(this IKey key, bool singleLine = true, string indent = "")
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToDebugString(key As IKey, singleLine As Boolean = True, indent As String = "") As String
    parameters:
    - id: key
      type: Microsoft.EntityFrameworkCore.Metadata.IKey
    - id: singleLine
      type: System.Boolean
    - id: indent
      type: System.String
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.KeyExtensions.ToDebugString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.KeyExtensions.AsKey(Microsoft.EntityFrameworkCore.Metadata.IKey,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.KeyExtensions.AsKey(Microsoft.EntityFrameworkCore.Metadata.IKey,System.String)
  id: AsKey(Microsoft.EntityFrameworkCore.Metadata.IKey,System.String)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.KeyExtensions
  langs:
  - csharp
  - vb
  name: AsKey(IKey, String)
  nameWithType: KeyExtensions.AsKey(IKey, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.KeyExtensions.AsKey(Microsoft.EntityFrameworkCore.Metadata.IKey, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/KeyExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AsKey
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/KeyExtensions.cs
    startLine: 84
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public static Key AsKey(this IKey key, string methodName = "")
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AsKey(key As IKey, methodName As String = "") As Key
    parameters:
    - id: key
      type: Microsoft.EntityFrameworkCore.Metadata.IKey
    - id: methodName
      type: System.String
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.Key
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.KeyExtensions.AsKey*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.KeyExtensions.GetIdentityMapFactory*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Internal.KeyExtensions.GetIdentityMapFactory
  isExternal: false
  name: GetIdentityMapFactory
  nameWithType: KeyExtensions.GetIdentityMapFactory
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.KeyExtensions.GetIdentityMapFactory
- uid: Microsoft.EntityFrameworkCore.Metadata.IKey
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IKey
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IKey
  nameWithType: IKey
  fullName: Microsoft.EntityFrameworkCore.Metadata.IKey
- uid: System.Func{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap}
  commentId: T:System.Func{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap}
  parent: System
  definition: System.Func`1
  name: Func<IIdentityMap>
  nameWithType: Func<IIdentityMap>
  fullName: System.Func<Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap>
  nameWithType.vb: Func(Of IIdentityMap)
  fullname.vb: System.Func(Of Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap)
  name.vb: Func(Of IIdentityMap)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap
    name: IIdentityMap
    nameWithType: IIdentityMap
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap
    name: IIdentityMap
    nameWithType: IIdentityMap
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullname.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.KeyExtensions.GetWeakReferenceIdentityMapFactory*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Internal.KeyExtensions.GetWeakReferenceIdentityMapFactory
  isExternal: false
  name: GetWeakReferenceIdentityMapFactory
  nameWithType: KeyExtensions.GetWeakReferenceIdentityMapFactory
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.KeyExtensions.GetWeakReferenceIdentityMapFactory
- uid: System.Func{Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap}
  commentId: T:System.Func{Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap}
  parent: System
  definition: System.Func`1
  name: Func<IWeakReferenceIdentityMap>
  nameWithType: Func<IWeakReferenceIdentityMap>
  fullName: System.Func<Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap>
  nameWithType.vb: Func(Of IWeakReferenceIdentityMap)
  fullname.vb: System.Func(Of Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap)
  name.vb: Func(Of IWeakReferenceIdentityMap)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap
    name: IWeakReferenceIdentityMap
    nameWithType: IWeakReferenceIdentityMap
    fullName: Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap
    name: IWeakReferenceIdentityMap
    nameWithType: IWeakReferenceIdentityMap
    fullName: Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.KeyExtensions.GetPrincipalKeyValueFactory*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Internal.KeyExtensions.GetPrincipalKeyValueFactory
  isExternal: false
  name: GetPrincipalKeyValueFactory<TKey>
  nameWithType: KeyExtensions.GetPrincipalKeyValueFactory<TKey>
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.KeyExtensions.GetPrincipalKeyValueFactory<TKey>
  nameWithType.vb: KeyExtensions.GetPrincipalKeyValueFactory(Of TKey)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.KeyExtensions.GetPrincipalKeyValueFactory(Of TKey)
  name.vb: GetPrincipalKeyValueFactory(Of TKey)
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory{{TKey}}
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory{`0}
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  definition: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory`1
  name: IPrincipalKeyValueFactory<TKey>
  nameWithType: IPrincipalKeyValueFactory<TKey>
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory<TKey>
  nameWithType.vb: IPrincipalKeyValueFactory(Of TKey)
  fullname.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory(Of TKey)
  name.vb: IPrincipalKeyValueFactory(Of TKey)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory`1
    name: IPrincipalKeyValueFactory
    nameWithType: IPrincipalKeyValueFactory
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory`1
    name: IPrincipalKeyValueFactory
    nameWithType: IPrincipalKeyValueFactory
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory`1
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory`1
  isExternal: false
  name: IPrincipalKeyValueFactory<TKey>
  nameWithType: IPrincipalKeyValueFactory<TKey>
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory<TKey>
  nameWithType.vb: IPrincipalKeyValueFactory(Of TKey)
  fullname.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory(Of TKey)
  name.vb: IPrincipalKeyValueFactory(Of TKey)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory`1
    name: IPrincipalKeyValueFactory
    nameWithType: IPrincipalKeyValueFactory
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory`1
    name: IPrincipalKeyValueFactory
    nameWithType: IPrincipalKeyValueFactory
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  commentId: N:Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  nameWithType: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.KeyExtensions.IsPrimaryKey*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Internal.KeyExtensions.IsPrimaryKey
  isExternal: false
  name: IsPrimaryKey
  nameWithType: KeyExtensions.IsPrimaryKey
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.KeyExtensions.IsPrimaryKey
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.KeyExtensions.ToDebugString*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Internal.KeyExtensions.ToDebugString
  isExternal: false
  name: ToDebugString
  nameWithType: KeyExtensions.ToDebugString
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.KeyExtensions.ToDebugString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.KeyExtensions.AsKey*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Internal.KeyExtensions.AsKey
  isExternal: false
  name: AsKey
  nameWithType: KeyExtensions.AsKey
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.KeyExtensions.AsKey
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.Key
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.Key
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Key
  nameWithType: Key
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.Key
