### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Update.ModificationCommand
  commentId: T:Microsoft.EntityFrameworkCore.Update.ModificationCommand
  id: ModificationCommand
  parent: Microsoft.EntityFrameworkCore.Update
  children:
  - Microsoft.EntityFrameworkCore.Update.ModificationCommand.#ctor(System.String,System.String,System.Func{System.String},System.Func{Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IRelationalPropertyAnnotations})
  - Microsoft.EntityFrameworkCore.Update.ModificationCommand.AddEntry(Microsoft.EntityFrameworkCore.Update.IUpdateEntry)
  - Microsoft.EntityFrameworkCore.Update.ModificationCommand.ColumnModifications
  - Microsoft.EntityFrameworkCore.Update.ModificationCommand.EntityState
  - Microsoft.EntityFrameworkCore.Update.ModificationCommand.Entries
  - Microsoft.EntityFrameworkCore.Update.ModificationCommand.PropagateResults(Microsoft.EntityFrameworkCore.Storage.ValueBuffer)
  - Microsoft.EntityFrameworkCore.Update.ModificationCommand.RequiresResultPropagation
  - Microsoft.EntityFrameworkCore.Update.ModificationCommand.Schema
  - Microsoft.EntityFrameworkCore.Update.ModificationCommand.TableName
  langs:
  - csharp
  - vb
  name: ModificationCommand
  nameWithType: ModificationCommand
  fullName: Microsoft.EntityFrameworkCore.Update.ModificationCommand
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Update/ModificationCommand.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ModificationCommand
    path: src/Microsoft.EntityFrameworkCore.Relational/Update/ModificationCommand.cs
    startLine: 15
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Update
  syntax:
    content: public class ModificationCommand
    content.vb: Public Class ModificationCommand
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Update.ModificationCommand.#ctor(System.String,System.String,System.Func{System.String},System.Func{Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IRelationalPropertyAnnotations})
  commentId: M:Microsoft.EntityFrameworkCore.Update.ModificationCommand.#ctor(System.String,System.String,System.Func{System.String},System.Func{Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IRelationalPropertyAnnotations})
  id: '#ctor(System.String,System.String,System.Func{System.String},System.Func{Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IRelationalPropertyAnnotations})'
  parent: Microsoft.EntityFrameworkCore.Update.ModificationCommand
  langs:
  - csharp
  - vb
  name: ModificationCommand(String, String, Func<String>, Func<IProperty, IRelationalPropertyAnnotations>)
  nameWithType: ModificationCommand.ModificationCommand(String, String, Func<String>, Func<IProperty, IRelationalPropertyAnnotations>)
  fullName: Microsoft.EntityFrameworkCore.Update.ModificationCommand.ModificationCommand(System.String, System.String, System.Func<System.String>, System.Func<Microsoft.EntityFrameworkCore.Metadata.IProperty, Microsoft.EntityFrameworkCore.Metadata.IRelationalPropertyAnnotations>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Update/ModificationCommand.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Relational/Update/ModificationCommand.cs
    startLine: 24
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Update
  syntax:
    content: public ModificationCommand(string name, string schema, Func<string> generateParameterName, Func<IProperty, IRelationalPropertyAnnotations> getPropertyExtensions)
    content.vb: Public Sub New(name As String, schema As String, generateParameterName As Func(Of String), getPropertyExtensions As Func(Of IProperty, IRelationalPropertyAnnotations))
    parameters:
    - id: name
      type: System.String
    - id: schema
      type: System.String
    - id: generateParameterName
      type: System.Func{System.String}
    - id: getPropertyExtensions
      type: System.Func{Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IRelationalPropertyAnnotations}
  nameWithType.vb: ModificationCommand.ModificationCommand(String, String, Func(Of String), Func(Of IProperty, IRelationalPropertyAnnotations))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Update.ModificationCommand.ModificationCommand(System.String, System.String, System.Func(Of System.String), System.Func(Of Microsoft.EntityFrameworkCore.Metadata.IProperty, Microsoft.EntityFrameworkCore.Metadata.IRelationalPropertyAnnotations))
  name.vb: ModificationCommand(String, String, Func(Of String), Func(Of IProperty, IRelationalPropertyAnnotations))
- uid: Microsoft.EntityFrameworkCore.Update.ModificationCommand.TableName
  commentId: P:Microsoft.EntityFrameworkCore.Update.ModificationCommand.TableName
  id: TableName
  parent: Microsoft.EntityFrameworkCore.Update.ModificationCommand
  langs:
  - csharp
  - vb
  name: TableName
  nameWithType: ModificationCommand.TableName
  fullName: Microsoft.EntityFrameworkCore.Update.ModificationCommand.TableName
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Update/ModificationCommand.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: TableName
    path: src/Microsoft.EntityFrameworkCore.Relational/Update/ModificationCommand.cs
    startLine: 40
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Update
  syntax:
    content: public virtual string TableName { get; }
    content.vb: Public Overridable ReadOnly Property TableName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Update.ModificationCommand.Schema
  commentId: P:Microsoft.EntityFrameworkCore.Update.ModificationCommand.Schema
  id: Schema
  parent: Microsoft.EntityFrameworkCore.Update.ModificationCommand
  langs:
  - csharp
  - vb
  name: Schema
  nameWithType: ModificationCommand.Schema
  fullName: Microsoft.EntityFrameworkCore.Update.ModificationCommand.Schema
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Update/ModificationCommand.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Schema
    path: src/Microsoft.EntityFrameworkCore.Relational/Update/ModificationCommand.cs
    startLine: 42
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Update
  syntax:
    content: public virtual string Schema { get; }
    content.vb: Public Overridable ReadOnly Property Schema As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Update.ModificationCommand.Entries
  commentId: P:Microsoft.EntityFrameworkCore.Update.ModificationCommand.Entries
  id: Entries
  parent: Microsoft.EntityFrameworkCore.Update.ModificationCommand
  langs:
  - csharp
  - vb
  name: Entries
  nameWithType: ModificationCommand.Entries
  fullName: Microsoft.EntityFrameworkCore.Update.ModificationCommand.Entries
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Update/ModificationCommand.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Entries
    path: src/Microsoft.EntityFrameworkCore.Relational/Update/ModificationCommand.cs
    startLine: 44
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Update
  syntax:
    content: public virtual IReadOnlyList<IUpdateEntry> Entries { get; }
    content.vb: Public Overridable ReadOnly Property Entries As IReadOnlyList(Of IUpdateEntry)
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry}
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Update.ModificationCommand.EntityState
  commentId: P:Microsoft.EntityFrameworkCore.Update.ModificationCommand.EntityState
  id: EntityState
  parent: Microsoft.EntityFrameworkCore.Update.ModificationCommand
  langs:
  - csharp
  - vb
  name: EntityState
  nameWithType: ModificationCommand.EntityState
  fullName: Microsoft.EntityFrameworkCore.Update.ModificationCommand.EntityState
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Update/ModificationCommand.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: EntityState
    path: src/Microsoft.EntityFrameworkCore.Relational/Update/ModificationCommand.cs
    startLine: 46
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Update
  syntax:
    content: public virtual EntityState EntityState { get; }
    content.vb: Public Overridable ReadOnly Property EntityState As EntityState
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.EntityState
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Update.ModificationCommand.ColumnModifications
  commentId: P:Microsoft.EntityFrameworkCore.Update.ModificationCommand.ColumnModifications
  id: ColumnModifications
  parent: Microsoft.EntityFrameworkCore.Update.ModificationCommand
  langs:
  - csharp
  - vb
  name: ColumnModifications
  nameWithType: ModificationCommand.ColumnModifications
  fullName: Microsoft.EntityFrameworkCore.Update.ModificationCommand.ColumnModifications
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Update/ModificationCommand.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ColumnModifications
    path: src/Microsoft.EntityFrameworkCore.Relational/Update/ModificationCommand.cs
    startLine: 48
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Update
  syntax:
    content: public virtual IReadOnlyList<ColumnModification> ColumnModifications { get; }
    content.vb: Public Overridable ReadOnly Property ColumnModifications As IReadOnlyList(Of ColumnModification)
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.ColumnModification}
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Update.ModificationCommand.RequiresResultPropagation
  commentId: P:Microsoft.EntityFrameworkCore.Update.ModificationCommand.RequiresResultPropagation
  id: RequiresResultPropagation
  parent: Microsoft.EntityFrameworkCore.Update.ModificationCommand
  langs:
  - csharp
  - vb
  name: RequiresResultPropagation
  nameWithType: ModificationCommand.RequiresResultPropagation
  fullName: Microsoft.EntityFrameworkCore.Update.ModificationCommand.RequiresResultPropagation
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Update/ModificationCommand.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: RequiresResultPropagation
    path: src/Microsoft.EntityFrameworkCore.Relational/Update/ModificationCommand.cs
    startLine: 51
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Update
  syntax:
    content: public virtual bool RequiresResultPropagation { get; }
    content.vb: Public Overridable ReadOnly Property RequiresResultPropagation As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Update.ModificationCommand.AddEntry(Microsoft.EntityFrameworkCore.Update.IUpdateEntry)
  commentId: M:Microsoft.EntityFrameworkCore.Update.ModificationCommand.AddEntry(Microsoft.EntityFrameworkCore.Update.IUpdateEntry)
  id: AddEntry(Microsoft.EntityFrameworkCore.Update.IUpdateEntry)
  parent: Microsoft.EntityFrameworkCore.Update.ModificationCommand
  langs:
  - csharp
  - vb
  name: AddEntry(IUpdateEntry)
  nameWithType: ModificationCommand.AddEntry(IUpdateEntry)
  fullName: Microsoft.EntityFrameworkCore.Update.ModificationCommand.AddEntry(Microsoft.EntityFrameworkCore.Update.IUpdateEntry)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Update/ModificationCommand.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AddEntry
    path: src/Microsoft.EntityFrameworkCore.Relational/Update/ModificationCommand.cs
    startLine: 61
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Update
  syntax:
    content: public virtual void AddEntry(IUpdateEntry entry)
    content.vb: Public Overridable Sub AddEntry(entry As IUpdateEntry)
    parameters:
    - id: entry
      type: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Update.ModificationCommand.PropagateResults(Microsoft.EntityFrameworkCore.Storage.ValueBuffer)
  commentId: M:Microsoft.EntityFrameworkCore.Update.ModificationCommand.PropagateResults(Microsoft.EntityFrameworkCore.Storage.ValueBuffer)
  id: PropagateResults(Microsoft.EntityFrameworkCore.Storage.ValueBuffer)
  parent: Microsoft.EntityFrameworkCore.Update.ModificationCommand
  langs:
  - csharp
  - vb
  name: PropagateResults(ValueBuffer)
  nameWithType: ModificationCommand.PropagateResults(ValueBuffer)
  fullName: Microsoft.EntityFrameworkCore.Update.ModificationCommand.PropagateResults(Microsoft.EntityFrameworkCore.Storage.ValueBuffer)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Update/ModificationCommand.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: PropagateResults
    path: src/Microsoft.EntityFrameworkCore.Relational/Update/ModificationCommand.cs
    startLine: 133
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Update
  syntax:
    content: public virtual void PropagateResults(ValueBuffer valueBuffer)
    content.vb: Public Overridable Sub PropagateResults(valueBuffer As ValueBuffer)
    parameters:
    - id: valueBuffer
      type: Microsoft.EntityFrameworkCore.Storage.ValueBuffer
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.EntityFrameworkCore.Update
  commentId: N:Microsoft.EntityFrameworkCore.Update
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Update
  nameWithType: Microsoft.EntityFrameworkCore.Update
  fullName: Microsoft.EntityFrameworkCore.Update
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Func{System.String}
  commentId: T:System.Func{System.String}
  parent: System
  definition: System.Func`1
  name: Func<String>
  nameWithType: Func<String>
  fullName: System.Func<System.String>
  nameWithType.vb: Func(Of String)
  fullname.vb: System.Func(Of System.String)
  name.vb: Func(Of String)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IRelationalPropertyAnnotations}
  commentId: T:System.Func{Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IRelationalPropertyAnnotations}
  parent: System
  definition: System.Func`2
  name: Func<IProperty, IRelationalPropertyAnnotations>
  nameWithType: Func<IProperty, IRelationalPropertyAnnotations>
  fullName: System.Func<Microsoft.EntityFrameworkCore.Metadata.IProperty, Microsoft.EntityFrameworkCore.Metadata.IRelationalPropertyAnnotations>
  nameWithType.vb: Func(Of IProperty, IRelationalPropertyAnnotations)
  fullname.vb: System.Func(Of Microsoft.EntityFrameworkCore.Metadata.IProperty, Microsoft.EntityFrameworkCore.Metadata.IRelationalPropertyAnnotations)
  name.vb: Func(Of IProperty, IRelationalPropertyAnnotations)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
    name: IProperty
    nameWithType: IProperty
    fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IRelationalPropertyAnnotations
    name: IRelationalPropertyAnnotations
    nameWithType: IRelationalPropertyAnnotations
    fullName: Microsoft.EntityFrameworkCore.Metadata.IRelationalPropertyAnnotations
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
    name: IProperty
    nameWithType: IProperty
    fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IRelationalPropertyAnnotations
    name: IRelationalPropertyAnnotations
    nameWithType: IRelationalPropertyAnnotations
    fullName: Microsoft.EntityFrameworkCore.Metadata.IRelationalPropertyAnnotations
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullname.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullname.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry}
  commentId: T:System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<IUpdateEntry>
  nameWithType: IReadOnlyList<IUpdateEntry>
  fullName: System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Update.IUpdateEntry>
  nameWithType.vb: IReadOnlyList(Of IUpdateEntry)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Update.IUpdateEntry)
  name.vb: IReadOnlyList(Of IUpdateEntry)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
    name: IUpdateEntry
    nameWithType: IUpdateEntry
    fullName: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
    name: IUpdateEntry
    nameWithType: IUpdateEntry
    fullName: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.EntityFrameworkCore.EntityState
  commentId: T:Microsoft.EntityFrameworkCore.EntityState
  parent: Microsoft.EntityFrameworkCore
  isExternal: false
  name: EntityState
  nameWithType: EntityState
  fullName: Microsoft.EntityFrameworkCore.EntityState
- uid: Microsoft.EntityFrameworkCore
  commentId: N:Microsoft.EntityFrameworkCore
  isExternal: false
  name: Microsoft.EntityFrameworkCore
  nameWithType: Microsoft.EntityFrameworkCore
  fullName: Microsoft.EntityFrameworkCore
- uid: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.ColumnModification}
  commentId: T:System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.ColumnModification}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<ColumnModification>
  nameWithType: IReadOnlyList<ColumnModification>
  fullName: System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Update.ColumnModification>
  nameWithType.vb: IReadOnlyList(Of ColumnModification)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Update.ColumnModification)
  name.vb: IReadOnlyList(Of ColumnModification)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Update.ColumnModification
    name: ColumnModification
    nameWithType: ColumnModification
    fullName: Microsoft.EntityFrameworkCore.Update.ColumnModification
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Update.ColumnModification
    name: ColumnModification
    nameWithType: ColumnModification
    fullName: Microsoft.EntityFrameworkCore.Update.ColumnModification
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
  commentId: T:Microsoft.EntityFrameworkCore.Update.IUpdateEntry
  parent: Microsoft.EntityFrameworkCore.Update
  isExternal: false
  name: IUpdateEntry
  nameWithType: IUpdateEntry
  fullName: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
- uid: Microsoft.EntityFrameworkCore.Storage.ValueBuffer
  commentId: T:Microsoft.EntityFrameworkCore.Storage.ValueBuffer
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: ValueBuffer
  nameWithType: ValueBuffer
  fullName: Microsoft.EntityFrameworkCore.Storage.ValueBuffer
- uid: Microsoft.EntityFrameworkCore.Storage
  commentId: N:Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Storage
  nameWithType: Microsoft.EntityFrameworkCore.Storage
  fullName: Microsoft.EntityFrameworkCore.Storage
