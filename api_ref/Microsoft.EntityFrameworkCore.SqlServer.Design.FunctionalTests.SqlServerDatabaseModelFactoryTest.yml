### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest
  commentId: T:Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest
  id: SqlServerDatabaseModelFactoryTest
  parent: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests
  children:
  - Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest.#ctor(Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFixture)
  - Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest.CreateModel(System.String,Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet,Microsoft.Extensions.Logging.ILogger)
  - Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest.It_filters_tables
  - Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest.It_filters_views
  - Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest.It_reads_columns
  - Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest.It_reads_composite_foreign_keys
  - Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest.It_reads_default_schema
  - Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest.It_reads_foreign_keys
  - Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest.It_reads_identity(System.Boolean)
  - Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest.It_reads_indexes
  - Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest.It_reads_max_length(System.String,System.Nullable{System.Int32})
  - Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest.It_reads_sequences
  - Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest.It_reads_tables
  - Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest.SequenceModel_values_null_for_default_min_max_start
  langs:
  - csharp
  - vb
  name: SqlServerDatabaseModelFactoryTest
  nameWithType: SqlServerDatabaseModelFactoryTest
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest
  type: Class
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests/SqlServerDatabaseModelFactoryTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: SqlServerDatabaseModelFactoryTest
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests/SqlServerDatabaseModelFactoryTest.cs
    startLine: 19
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests
  syntax:
    content: 'public class SqlServerDatabaseModelFactoryTest : IClassFixture<SqlServerDatabaseModelFixture>'
    content.vb: >-
      Public Class SqlServerDatabaseModelFactoryTest
          Implements IClassFixture(Of SqlServerDatabaseModelFixture)
  inheritance:
  - System.Object
  implements:
  - Xunit.IClassFixture{Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFixture}
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest.It_reads_tables
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest.It_reads_tables
  id: It_reads_tables
  parent: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest
  langs:
  - csharp
  - vb
  name: It_reads_tables()
  nameWithType: SqlServerDatabaseModelFactoryTest.It_reads_tables()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest.It_reads_tables()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests/SqlServerDatabaseModelFactoryTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: It_reads_tables
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests/SqlServerDatabaseModelFactoryTest.cs
    startLine: 21
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests
  syntax:
    content: >-
      [Fact]

      public void It_reads_tables()
    content.vb: >-
      <Fact>

      Public Sub It_reads_tables
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest.It_filters_views
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest.It_filters_views
  id: It_filters_views
  parent: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest
  langs:
  - csharp
  - vb
  name: It_filters_views()
  nameWithType: SqlServerDatabaseModelFactoryTest.It_filters_views()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest.It_filters_views()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests/SqlServerDatabaseModelFactoryTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: It_filters_views
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests/SqlServerDatabaseModelFactoryTest.cs
    startLine: 42
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests
  syntax:
    content: >-
      [Fact]

      public void It_filters_views()
    content.vb: >-
      <Fact>

      Public Sub It_filters_views
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest.It_reads_foreign_keys
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest.It_reads_foreign_keys
  id: It_reads_foreign_keys
  parent: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest
  langs:
  - csharp
  - vb
  name: It_reads_foreign_keys()
  nameWithType: SqlServerDatabaseModelFactoryTest.It_reads_foreign_keys()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest.It_reads_foreign_keys()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests/SqlServerDatabaseModelFactoryTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: It_reads_foreign_keys
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests/SqlServerDatabaseModelFactoryTest.cs
    startLine: 57
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests
  syntax:
    content: >-
      [Fact]

      public void It_reads_foreign_keys()
    content.vb: >-
      <Fact>

      Public Sub It_reads_foreign_keys
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest.It_reads_composite_foreign_keys
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest.It_reads_composite_foreign_keys
  id: It_reads_composite_foreign_keys
  parent: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest
  langs:
  - csharp
  - vb
  name: It_reads_composite_foreign_keys()
  nameWithType: SqlServerDatabaseModelFactoryTest.It_reads_composite_foreign_keys()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest.It_reads_composite_foreign_keys()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests/SqlServerDatabaseModelFactoryTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: It_reads_composite_foreign_keys
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests/SqlServerDatabaseModelFactoryTest.cs
    startLine: 76
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests
  syntax:
    content: >-
      [Fact]

      public void It_reads_composite_foreign_keys()
    content.vb: >-
      <Fact>

      Public Sub It_reads_composite_foreign_keys
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest.It_reads_indexes
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest.It_reads_indexes
  id: It_reads_indexes
  parent: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest
  langs:
  - csharp
  - vb
  name: It_reads_indexes()
  nameWithType: SqlServerDatabaseModelFactoryTest.It_reads_indexes()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest.It_reads_indexes()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests/SqlServerDatabaseModelFactoryTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: It_reads_indexes
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests/SqlServerDatabaseModelFactoryTest.cs
    startLine: 95
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests
  syntax:
    content: >-
      [Fact]

      public void It_reads_indexes()
    content.vb: >-
      <Fact>

      Public Sub It_reads_indexes
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest.It_reads_columns
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest.It_reads_columns
  id: It_reads_columns
  parent: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest
  langs:
  - csharp
  - vb
  name: It_reads_columns()
  nameWithType: SqlServerDatabaseModelFactoryTest.It_reads_columns()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest.It_reads_columns()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests/SqlServerDatabaseModelFactoryTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: It_reads_columns
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests/SqlServerDatabaseModelFactoryTest.cs
    startLine: 140
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests
  syntax:
    content: >-
      [Fact]

      public void It_reads_columns()
    content.vb: >-
      <Fact>

      Public Sub It_reads_columns
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest.It_reads_max_length(System.String,System.Nullable{System.Int32})
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest.It_reads_max_length(System.String,System.Nullable{System.Int32})
  id: It_reads_max_length(System.String,System.Nullable{System.Int32})
  parent: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest
  langs:
  - csharp
  - vb
  name: It_reads_max_length(String, Nullable<Int32>)
  nameWithType: SqlServerDatabaseModelFactoryTest.It_reads_max_length(String, Nullable<Int32>)
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest.It_reads_max_length(System.String, System.Nullable<System.Int32>)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests/SqlServerDatabaseModelFactoryTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: It_reads_max_length
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests/SqlServerDatabaseModelFactoryTest.cs
    startLine: 229
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{"nvarchar(55)", 55})]

      [InlineData(new object[]{"varchar(341)", 341})]

      [InlineData(new object[]{"nchar(14)", 14})]

      [InlineData(new object[]{"char(89)", 89})]

      [InlineData(new object[]{"varchar(max)", null})]

      public void It_reads_max_length(string type, int ? length)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {"nvarchar(55)", 55})>

      <InlineData(New Object() {"varchar(341)", 341})>

      <InlineData(New Object() {"nchar(14)", 14})>

      <InlineData(New Object() {"char(89)", 89})>

      <InlineData(New Object() {"varchar(max)", Nothing})>

      Public Sub It_reads_max_length(type As String, length As Integer?)
    parameters:
    - id: type
      type: System.String
    - id: length
      type: System.Nullable{System.Int32}
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: SqlServerDatabaseModelFactoryTest.It_reads_max_length(String, Nullable(Of Int32))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest.It_reads_max_length(System.String, System.Nullable(Of System.Int32))
  name.vb: It_reads_max_length(String, Nullable(Of Int32))
- uid: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest.It_reads_identity(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest.It_reads_identity(System.Boolean)
  id: It_reads_identity(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest
  langs:
  - csharp
  - vb
  name: It_reads_identity(Boolean)
  nameWithType: SqlServerDatabaseModelFactoryTest.It_reads_identity(Boolean)
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest.It_reads_identity(System.Boolean)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests/SqlServerDatabaseModelFactoryTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: It_reads_identity
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests/SqlServerDatabaseModelFactoryTest.cs
    startLine: 245
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public void It_reads_identity(bool isIdentity)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Sub It_reads_identity(isIdentity As Boolean)
    parameters:
    - id: isIdentity
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest.It_filters_tables
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest.It_filters_tables
  id: It_filters_tables
  parent: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest
  langs:
  - csharp
  - vb
  name: It_filters_tables()
  nameWithType: SqlServerDatabaseModelFactoryTest.It_filters_tables()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest.It_filters_tables()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests/SqlServerDatabaseModelFactoryTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: It_filters_tables
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests/SqlServerDatabaseModelFactoryTest.cs
    startLine: 261
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests
  syntax:
    content: >-
      [Fact]

      public void It_filters_tables()
    content.vb: >-
      <Fact>

      Public Sub It_filters_tables
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest.It_reads_sequences
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest.It_reads_sequences
  id: It_reads_sequences
  parent: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest
  langs:
  - csharp
  - vb
  name: It_reads_sequences()
  nameWithType: SqlServerDatabaseModelFactoryTest.It_reads_sequences()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest.It_reads_sequences()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests/SqlServerDatabaseModelFactoryTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: It_reads_sequences
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests/SqlServerDatabaseModelFactoryTest.cs
    startLine: 277
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests
  syntax:
    content: >-
      [SqlServerCondition(SqlServerCondition.SupportsSequences)]

      public void It_reads_sequences()
    content.vb: >-
      <SqlServerCondition(SqlServerCondition.SupportsSequences)>

      Public Sub It_reads_sequences
  attributes:
  - type: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerConditionAttribute
    ctor: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerConditionAttribute.#ctor(Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerCondition)
    arguments:
    - type: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerCondition
      value: 1
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest.It_reads_default_schema
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest.It_reads_default_schema
  id: It_reads_default_schema
  parent: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest
  langs:
  - csharp
  - vb
  name: It_reads_default_schema()
  nameWithType: SqlServerDatabaseModelFactoryTest.It_reads_default_schema()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest.It_reads_default_schema()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests/SqlServerDatabaseModelFactoryTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: It_reads_default_schema
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests/SqlServerDatabaseModelFactoryTest.cs
    startLine: 317
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests
  syntax:
    content: >-
      [Fact]

      public Task It_reads_default_schema()
    content.vb: >-
      <Fact>

      Public Function It_reads_default_schema As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest.SequenceModel_values_null_for_default_min_max_start
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest.SequenceModel_values_null_for_default_min_max_start
  id: SequenceModel_values_null_for_default_min_max_start
  parent: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest
  langs:
  - csharp
  - vb
  name: SequenceModel_values_null_for_default_min_max_start()
  nameWithType: SqlServerDatabaseModelFactoryTest.SequenceModel_values_null_for_default_min_max_start()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest.SequenceModel_values_null_for_default_min_max_start()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests/SqlServerDatabaseModelFactoryTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: SequenceModel_values_null_for_default_min_max_start
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests/SqlServerDatabaseModelFactoryTest.cs
    startLine: 326
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests
  syntax:
    content: >-
      [SqlServerCondition(SqlServerCondition.SupportsSequences)]

      public void SequenceModel_values_null_for_default_min_max_start()
    content.vb: >-
      <SqlServerCondition(SqlServerCondition.SupportsSequences)>

      Public Sub SequenceModel_values_null_for_default_min_max_start
  attributes:
  - type: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerConditionAttribute
    ctor: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerConditionAttribute.#ctor(Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerCondition)
    arguments:
    - type: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerCondition
      value: 1
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest.CreateModel(System.String,Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet,Microsoft.Extensions.Logging.ILogger)
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest.CreateModel(System.String,Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet,Microsoft.Extensions.Logging.ILogger)
  id: CreateModel(System.String,Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet,Microsoft.Extensions.Logging.ILogger)
  parent: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest
  langs:
  - csharp
  - vb
  name: CreateModel(String, TableSelectionSet, ILogger)
  nameWithType: SqlServerDatabaseModelFactoryTest.CreateModel(String, TableSelectionSet, ILogger)
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest.CreateModel(System.String, Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet, Microsoft.Extensions.Logging.ILogger)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests/SqlServerDatabaseModelFactoryTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateModel
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests/SqlServerDatabaseModelFactoryTest.cs
    startLine: 351
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests
  syntax:
    content: public DatabaseModel CreateModel(string createSql, TableSelectionSet selection = null, ILogger logger = null)
    content.vb: Public Function CreateModel(createSql As String, selection As TableSelectionSet = Nothing, logger As ILogger = Nothing) As DatabaseModel
    parameters:
    - id: createSql
      type: System.String
    - id: selection
      type: Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
    return:
      type: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest.#ctor(Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFixture)
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest.#ctor(Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFixture)
  id: '#ctor(Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFixture)'
  parent: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest
  langs:
  - csharp
  - vb
  name: SqlServerDatabaseModelFactoryTest(SqlServerDatabaseModelFixture)
  nameWithType: SqlServerDatabaseModelFactoryTest.SqlServerDatabaseModelFactoryTest(SqlServerDatabaseModelFixture)
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFactoryTest.SqlServerDatabaseModelFactoryTest(Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFixture)
  type: Constructor
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests/SqlServerDatabaseModelFactoryTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests/SqlServerDatabaseModelFactoryTest.cs
    startLine: 354
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests
  syntax:
    content: public SqlServerDatabaseModelFactoryTest(SqlServerDatabaseModelFixture fixture)
    content.vb: Public Sub New(fixture As SqlServerDatabaseModelFixture)
    parameters:
    - id: fixture
      type: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFixture
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests
  commentId: N:Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests
  nameWithType: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Xunit.IClassFixture{Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFixture}
  commentId: T:Xunit.IClassFixture{Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFixture}
  parent: Xunit
  definition: Xunit.IClassFixture`1
  name: IClassFixture<SqlServerDatabaseModelFixture>
  nameWithType: IClassFixture<SqlServerDatabaseModelFixture>
  fullName: Xunit.IClassFixture<Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFixture>
  nameWithType.vb: IClassFixture(Of SqlServerDatabaseModelFixture)
  fullname.vb: Xunit.IClassFixture(Of Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFixture)
  name.vb: IClassFixture(Of SqlServerDatabaseModelFixture)
  spec.csharp:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    nameWithType: IClassFixture
    fullName: Xunit.IClassFixture
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFixture
    name: SqlServerDatabaseModelFixture
    nameWithType: SqlServerDatabaseModelFixture
    fullName: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFixture
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    nameWithType: IClassFixture
    fullName: Xunit.IClassFixture
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFixture
    name: SqlServerDatabaseModelFixture
    nameWithType: SqlServerDatabaseModelFixture
    fullName: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFixture
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Xunit.IClassFixture`1
  commentId: T:Xunit.IClassFixture`1
  isExternal: true
  name: IClassFixture<TFixture>
  nameWithType: IClassFixture<TFixture>
  fullName: Xunit.IClassFixture<TFixture>
  nameWithType.vb: IClassFixture(Of TFixture)
  fullname.vb: Xunit.IClassFixture(Of TFixture)
  name.vb: IClassFixture(Of TFixture)
  spec.csharp:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    nameWithType: IClassFixture
    fullName: Xunit.IClassFixture
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TFixture
    nameWithType: TFixture
    fullName: TFixture
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    nameWithType: IClassFixture
    fullName: Xunit.IClassFixture
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TFixture
    nameWithType: TFixture
    fullName: TFixture
  - name: )
    nameWithType: )
    fullName: )
- uid: Xunit
  commentId: N:Xunit
  isExternal: false
  name: Xunit
  nameWithType: Xunit
  fullName: Xunit
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet
  parent: Microsoft.EntityFrameworkCore.Scaffolding
  isExternal: false
  name: TableSelectionSet
  nameWithType: TableSelectionSet
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet
- uid: Microsoft.Extensions.Logging.ILogger
  commentId: T:Microsoft.Extensions.Logging.ILogger
  parent: Microsoft.Extensions.Logging
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Extensions.Logging.ILogger
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Metadata
  isExternal: false
  name: DatabaseModel
  nameWithType: DatabaseModel
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel
- uid: Microsoft.EntityFrameworkCore.Scaffolding
  commentId: N:Microsoft.EntityFrameworkCore.Scaffolding
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Scaffolding
  nameWithType: Microsoft.EntityFrameworkCore.Scaffolding
  fullName: Microsoft.EntityFrameworkCore.Scaffolding
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: false
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Scaffolding.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Scaffolding.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Scaffolding.Metadata
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Metadata
- uid: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFixture
  commentId: T:Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFixture
  parent: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests
  isExternal: false
  name: SqlServerDatabaseModelFixture
  nameWithType: SqlServerDatabaseModelFixture
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Design.FunctionalTests.SqlServerDatabaseModelFixture
