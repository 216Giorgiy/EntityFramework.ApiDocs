### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.PostAuto
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.PostAuto
  id: FieldMappingTestBase`2.PostAuto
  parent: Microsoft.EntityFrameworkCore.Specification.Tests
  children:
  - Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.PostAuto.Blog
  - Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.PostAuto.BlogId
  - Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.PostAuto.Id
  - Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.PostAuto.Title
  langs:
  - csharp
  - vb
  name: FieldMappingTestBase<TTestStore, TFixture>.PostAuto
  nameWithType: FieldMappingTestBase<TTestStore, TFixture>.PostAuto
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase<TTestStore, TFixture>.PostAuto
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/FieldMappingTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: PostAuto
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/FieldMappingTestBase.cs
    startLine: 563
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: 'protected class PostAuto : FieldMappingTestBase<TTestStore, TFixture>.IPostAccesor'
    content.vb: >-
      Protected Class PostAuto
          Implements FieldMappingTestBase(Of TTestStore, TFixture).IPostAccesor
  inheritance:
  - System.Object
  implements:
  - Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.IPostAccesor
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: FieldMappingTestBase(Of TTestStore, TFixture).PostAuto
  modifiers.csharp:
  - protected
  - class
  modifiers.vb:
  - Protected
  - Class
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase(Of TTestStore, TFixture).PostAuto
  name.vb: FieldMappingTestBase(Of TTestStore, TFixture).PostAuto
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.PostAuto.Id
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.PostAuto.Id
  id: Id
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.PostAuto
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: FieldMappingTestBase<TTestStore, TFixture>.PostAuto.Id
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase<TTestStore, TFixture>.PostAuto.Id
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/FieldMappingTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Id
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/FieldMappingTestBase.cs
    startLine: 565
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [DatabaseGenerated(DatabaseGeneratedOption.None)]

      public int Id { get; set; }
    content.vb: >-
      <DatabaseGenerated(DatabaseGeneratedOption.None)>

      Public Property Id As Integer
    parameters: []
    return:
      type: System.Int32
  attributes:
  - type: System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedAttribute
    ctor: System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedAttribute.#ctor(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption)
    arguments:
    - type: System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption
      value: 0
  nameWithType.vb: FieldMappingTestBase(Of TTestStore, TFixture).PostAuto.Id
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase(Of TTestStore, TFixture).PostAuto.Id
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.PostAuto.Title
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.PostAuto.Title
  id: Title
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.PostAuto
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: FieldMappingTestBase<TTestStore, TFixture>.PostAuto.Title
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase<TTestStore, TFixture>.PostAuto.Title
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/FieldMappingTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Title
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/FieldMappingTestBase.cs
    startLine: 567
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public string Title { get; set; }
    content.vb: Public Property Title As String
    parameters: []
    return:
      type: System.String
  nameWithType.vb: FieldMappingTestBase(Of TTestStore, TFixture).PostAuto.Title
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase(Of TTestStore, TFixture).PostAuto.Title
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.PostAuto.BlogId
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.PostAuto.BlogId
  id: BlogId
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.PostAuto
  langs:
  - csharp
  - vb
  name: BlogId
  nameWithType: FieldMappingTestBase<TTestStore, TFixture>.PostAuto.BlogId
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase<TTestStore, TFixture>.PostAuto.BlogId
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/FieldMappingTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: BlogId
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/FieldMappingTestBase.cs
    startLine: 569
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public int BlogId { get; set; }
    content.vb: Public Property BlogId As Integer
    parameters: []
    return:
      type: System.Int32
  nameWithType.vb: FieldMappingTestBase(Of TTestStore, TFixture).PostAuto.BlogId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase(Of TTestStore, TFixture).PostAuto.BlogId
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.PostAuto.Blog
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.PostAuto.Blog
  id: Blog
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.PostAuto
  langs:
  - csharp
  - vb
  name: Blog
  nameWithType: FieldMappingTestBase<TTestStore, TFixture>.PostAuto.Blog
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase<TTestStore, TFixture>.PostAuto.Blog
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/FieldMappingTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Blog
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/FieldMappingTestBase.cs
    startLine: 570
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public FieldMappingTestBase<TTestStore, TFixture>.BlogAuto Blog { get; set; }
    content.vb: Public Property Blog As FieldMappingTestBase(Of TTestStore, TFixture).BlogAuto
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.BlogAuto
  nameWithType.vb: FieldMappingTestBase(Of TTestStore, TFixture).PostAuto.Blog
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase(Of TTestStore, TFixture).PostAuto.Blog
references:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests
  commentId: N:Microsoft.EntityFrameworkCore.Specification.Tests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Specification.Tests
  nameWithType: Microsoft.EntityFrameworkCore.Specification.Tests
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.IPostAccesor
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.IPostAccesor
  parent: Microsoft.EntityFrameworkCore.Specification.Tests
  isExternal: false
  name: FieldMappingTestBase.IPostAccesor<>
  nameWithType: FieldMappingTestBase.IPostAccesor<>
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase.IPostAccesor<>
  nameWithType.vb: FieldMappingTestBase.IPostAccesor(Of )
  fullname.vb: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase.IPostAccesor(Of )
  name.vb: FieldMappingTestBase.IPostAccesor(Of )
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.IPostAccesor
    name: FieldMappingTestBase.IPostAccesor
    nameWithType: FieldMappingTestBase.IPostAccesor
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase.IPostAccesor
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.IPostAccesor
    name: FieldMappingTestBase.IPostAccesor
    nameWithType: FieldMappingTestBase.IPostAccesor
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase.IPostAccesor
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.BlogAuto
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.BlogAuto
  parent: Microsoft.EntityFrameworkCore.Specification.Tests
  isExternal: false
  name: FieldMappingTestBase.BlogAuto<>
  nameWithType: FieldMappingTestBase.BlogAuto<>
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase.BlogAuto<>
  nameWithType.vb: FieldMappingTestBase.BlogAuto(Of )
  fullname.vb: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase.BlogAuto(Of )
  name.vb: FieldMappingTestBase.BlogAuto(Of )
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.BlogAuto
    name: FieldMappingTestBase.BlogAuto
    nameWithType: FieldMappingTestBase.BlogAuto
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase.BlogAuto
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.BlogAuto
    name: FieldMappingTestBase.BlogAuto
    nameWithType: FieldMappingTestBase.BlogAuto
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase.BlogAuto
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
