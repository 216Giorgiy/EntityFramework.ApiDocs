### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes
  commentId: T:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes
  id: MappedSizedDataTypes
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  children:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes.Binary
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes.Binary_varying
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes.Char
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes.Char_varying
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes.Character
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes.Character_varying
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes.Id
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes.National_char_varying
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes.National_character
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes.National_character_varying
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes.Nchar
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes.Nvarchar
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes.Varbinary
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes.Varchar
  langs:
  - csharp
  - vb
  name: MappedSizedDataTypes
  nameWithType: MappedSizedDataTypes
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes
  type: Class
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: MappedSizedDataTypes
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 207
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public class MappedSizedDataTypes
    content.vb: Public Class MappedSizedDataTypes
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes.Id
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes.Id
  id: Id
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: MappedSizedDataTypes.Id
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes.Id
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Id
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 209
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public int Id { get; set; }
    content.vb: Public Property Id As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes.Char
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes.Char
  id: Char
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes
  langs:
  - csharp
  - vb
  name: Char
  nameWithType: MappedSizedDataTypes.Char
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes.Char
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Char
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 210
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public string Char { get; set; }
    content.vb: Public Property Char As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes.Character
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes.Character
  id: Character
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes
  langs:
  - csharp
  - vb
  name: Character
  nameWithType: MappedSizedDataTypes.Character
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes.Character
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Character
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 211
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public string Character { get; set; }
    content.vb: Public Property Character As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes.Varchar
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes.Varchar
  id: Varchar
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes
  langs:
  - csharp
  - vb
  name: Varchar
  nameWithType: MappedSizedDataTypes.Varchar
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes.Varchar
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Varchar
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 212
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public string Varchar { get; set; }
    content.vb: Public Property Varchar As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes.Char_varying
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes.Char_varying
  id: Char_varying
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes
  langs:
  - csharp
  - vb
  name: Char_varying
  nameWithType: MappedSizedDataTypes.Char_varying
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes.Char_varying
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Char_varying
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 213
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public string Char_varying { get; set; }
    content.vb: Public Property Char_varying As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes.Character_varying
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes.Character_varying
  id: Character_varying
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes
  langs:
  - csharp
  - vb
  name: Character_varying
  nameWithType: MappedSizedDataTypes.Character_varying
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes.Character_varying
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Character_varying
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 214
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public string Character_varying { get; set; }
    content.vb: Public Property Character_varying As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes.Nchar
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes.Nchar
  id: Nchar
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes
  langs:
  - csharp
  - vb
  name: Nchar
  nameWithType: MappedSizedDataTypes.Nchar
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes.Nchar
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Nchar
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 215
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public string Nchar { get; set; }
    content.vb: Public Property Nchar As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes.National_character
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes.National_character
  id: National_character
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes
  langs:
  - csharp
  - vb
  name: National_character
  nameWithType: MappedSizedDataTypes.National_character
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes.National_character
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: National_character
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 216
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public string National_character { get; set; }
    content.vb: Public Property National_character As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes.Nvarchar
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes.Nvarchar
  id: Nvarchar
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes
  langs:
  - csharp
  - vb
  name: Nvarchar
  nameWithType: MappedSizedDataTypes.Nvarchar
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes.Nvarchar
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Nvarchar
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 217
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public string Nvarchar { get; set; }
    content.vb: Public Property Nvarchar As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes.National_char_varying
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes.National_char_varying
  id: National_char_varying
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes
  langs:
  - csharp
  - vb
  name: National_char_varying
  nameWithType: MappedSizedDataTypes.National_char_varying
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes.National_char_varying
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: National_char_varying
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 218
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public string National_char_varying { get; set; }
    content.vb: Public Property National_char_varying As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes.National_character_varying
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes.National_character_varying
  id: National_character_varying
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes
  langs:
  - csharp
  - vb
  name: National_character_varying
  nameWithType: MappedSizedDataTypes.National_character_varying
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes.National_character_varying
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: National_character_varying
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 219
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public string National_character_varying { get; set; }
    content.vb: Public Property National_character_varying As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes.Binary
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes.Binary
  id: Binary
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes
  langs:
  - csharp
  - vb
  name: Binary
  nameWithType: MappedSizedDataTypes.Binary
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes.Binary
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Binary
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 220
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public byte[] Binary { get; set; }
    content.vb: Public Property Binary As Byte()
    parameters: []
    return:
      type: System.Byte[]
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes.Varbinary
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes.Varbinary
  id: Varbinary
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes
  langs:
  - csharp
  - vb
  name: Varbinary
  nameWithType: MappedSizedDataTypes.Varbinary
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes.Varbinary
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Varbinary
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 221
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public byte[] Varbinary { get; set; }
    content.vb: Public Property Varbinary As Byte()
    parameters: []
    return:
      type: System.Byte[]
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes.Binary_varying
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes.Binary_varying
  id: Binary_varying
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes
  langs:
  - csharp
  - vb
  name: Binary_varying
  nameWithType: MappedSizedDataTypes.Binary_varying
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedSizedDataTypes.Binary_varying
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Binary_varying
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 222
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public byte[] Binary_varying { get; set; }
    content.vb: Public Property Binary_varying As Byte()
    parameters: []
    return:
      type: System.Byte[]
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  commentId: N:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  nameWithType: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
