### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase`1
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase`1
  id: TransactionFixtureBase`1
  parent: Microsoft.EntityFrameworkCore.Specification.Tests
  children:
  - Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase`1.CreateContext(`0)
  - Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase`1.CreateContext(System.Data.Common.DbConnection)
  - Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase`1.CreateTestStore
  - Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase`1.Customers
  - Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase`1.DatabaseName
  - Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase`1.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  langs:
  - csharp
  - vb
  name: TransactionFixtureBase<TTestStore>
  nameWithType: TransactionFixtureBase<TTestStore>
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase<TTestStore>
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/TransactionFixtureBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: TransactionFixtureBase
    path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/TransactionFixtureBase.cs
    startLine: 8
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      public abstract class TransactionFixtureBase<TTestStore>
          where TTestStore : TestStore
    content.vb: Public MustInherit Class TransactionFixtureBase(Of TTestStore As TestStore)
    typeParameters:
    - id: TTestStore
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase`1.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  nameWithType.vb: TransactionFixtureBase(Of TTestStore)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase(Of TTestStore)
  name.vb: TransactionFixtureBase(Of TTestStore)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase`1.CreateTestStore
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase`1.CreateTestStore
  id: CreateTestStore
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase`1
  langs:
  - csharp
  - vb
  name: CreateTestStore()
  nameWithType: TransactionFixtureBase<TTestStore>.CreateTestStore()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase<TTestStore>.CreateTestStore()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/TransactionFixtureBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: CreateTestStore
    path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/TransactionFixtureBase.cs
    startLine: 11
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public abstract TTestStore CreateTestStore()
    content.vb: Public MustOverride Function CreateTestStore As TTestStore
    return:
      type: '{TTestStore}'
  nameWithType.vb: TransactionFixtureBase(Of TTestStore).CreateTestStore()
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase(Of TTestStore).CreateTestStore()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase`1.CreateContext(`0)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase`1.CreateContext(`0)
  id: CreateContext(`0)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase`1
  langs:
  - csharp
  - vb
  name: CreateContext(TTestStore)
  nameWithType: TransactionFixtureBase<TTestStore>.CreateContext(TTestStore)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase<TTestStore>.CreateContext(TTestStore)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/TransactionFixtureBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: CreateContext
    path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/TransactionFixtureBase.cs
    startLine: 13
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public abstract DbContext CreateContext(TTestStore testStore)
    content.vb: Public MustOverride Function CreateContext(testStore As TTestStore) As DbContext
    parameters:
    - id: testStore
      type: '{TTestStore}'
    return:
      type: Microsoft.EntityFrameworkCore.DbContext
  nameWithType.vb: TransactionFixtureBase(Of TTestStore).CreateContext(TTestStore)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase(Of TTestStore).CreateContext(TTestStore)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase`1.CreateContext(System.Data.Common.DbConnection)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase`1.CreateContext(System.Data.Common.DbConnection)
  id: CreateContext(System.Data.Common.DbConnection)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase`1
  langs:
  - csharp
  - vb
  name: CreateContext(DbConnection)
  nameWithType: TransactionFixtureBase<TTestStore>.CreateContext(DbConnection)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase<TTestStore>.CreateContext(System.Data.Common.DbConnection)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/TransactionFixtureBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: CreateContext
    path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/TransactionFixtureBase.cs
    startLine: 15
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public abstract DbContext CreateContext(DbConnection connection)
    content.vb: Public MustOverride Function CreateContext(connection As DbConnection) As DbContext
    parameters:
    - id: connection
      type: System.Data.Common.DbConnection
    return:
      type: Microsoft.EntityFrameworkCore.DbContext
  nameWithType.vb: TransactionFixtureBase(Of TTestStore).CreateContext(DbConnection)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase(Of TTestStore).CreateContext(System.Data.Common.DbConnection)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase`1.DatabaseName
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase`1.DatabaseName
  id: DatabaseName
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase`1
  langs:
  - csharp
  - vb
  name: DatabaseName
  nameWithType: TransactionFixtureBase<TTestStore>.DatabaseName
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase<TTestStore>.DatabaseName
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/TransactionFixtureBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: DatabaseName
    path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/TransactionFixtureBase.cs
    startLine: 17
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: protected virtual string DatabaseName { get; }
    content.vb: Protected Overridable ReadOnly Property DatabaseName As String
    parameters: []
    return:
      type: System.String
  nameWithType.vb: TransactionFixtureBase(Of TTestStore).DatabaseName
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase(Of TTestStore).DatabaseName
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase`1.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase`1.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  id: OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase`1
  langs:
  - csharp
  - vb
  name: OnModelCreating(ModelBuilder)
  nameWithType: TransactionFixtureBase<TTestStore>.OnModelCreating(ModelBuilder)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase<TTestStore>.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/TransactionFixtureBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: OnModelCreating
    path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/TransactionFixtureBase.cs
    startLine: 19
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual void OnModelCreating(ModelBuilder modelBuilder)
    content.vb: Public Overridable Sub OnModelCreating(modelBuilder As ModelBuilder)
    parameters:
    - id: modelBuilder
      type: Microsoft.EntityFrameworkCore.ModelBuilder
  nameWithType.vb: TransactionFixtureBase(Of TTestStore).OnModelCreating(ModelBuilder)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase(Of TTestStore).OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase`1.Customers
  commentId: F:Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase`1.Customers
  id: Customers
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase`1
  langs:
  - csharp
  - vb
  name: Customers
  nameWithType: TransactionFixtureBase<TTestStore>.Customers
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase<TTestStore>.Customers
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/TransactionFixtureBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Customers
    path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/TransactionFixtureBase.cs
    startLine: 28
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public readonly IReadOnlyList<TransactionCustomer> Customers
    content.vb: Public ReadOnly Customers As IReadOnlyList(Of TransactionCustomer)
    return:
      type: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Specification.Tests.TransactionCustomer}
  nameWithType.vb: TransactionFixtureBase(Of TTestStore).Customers
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase(Of TTestStore).Customers
references:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests
  commentId: N:Microsoft.EntityFrameworkCore.Specification.Tests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Specification.Tests
  nameWithType: Microsoft.EntityFrameworkCore.Specification.Tests
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase`1.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<TransactionFixtureBase<TTestStore>, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TransactionFixtureBase<TTestStore>, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase<TTestStore>, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TransactionFixtureBase(Of TTestStore), TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase(Of TTestStore), TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of TransactionFixtureBase(Of TTestStore), TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<TransactionFixtureBase<TTestStore>, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TransactionFixtureBase<TTestStore>, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase<TTestStore>, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of TransactionFixtureBase(Of TTestStore), TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TransactionFixtureBase(Of TTestStore), TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase(Of TTestStore), TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: '{TTestStore}'
  commentId: '!:TTestStore'
  definition: TTestStore
  name: TTestStore
  nameWithType: TTestStore
  fullName: TTestStore
- uid: TTestStore
  isExternal: false
  name: TTestStore
  nameWithType: TTestStore
  fullName: TTestStore
- uid: Microsoft.EntityFrameworkCore.DbContext
  commentId: T:Microsoft.EntityFrameworkCore.DbContext
  parent: Microsoft.EntityFrameworkCore
  isExternal: false
  name: DbContext
  nameWithType: DbContext
  fullName: Microsoft.EntityFrameworkCore.DbContext
- uid: Microsoft.EntityFrameworkCore
  commentId: N:Microsoft.EntityFrameworkCore
  isExternal: false
  name: Microsoft.EntityFrameworkCore
  nameWithType: Microsoft.EntityFrameworkCore
  fullName: Microsoft.EntityFrameworkCore
- uid: System.Data.Common.DbConnection
  commentId: T:System.Data.Common.DbConnection
  parent: System.Data.Common
  isExternal: true
  name: DbConnection
  nameWithType: DbConnection
  fullName: System.Data.Common.DbConnection
- uid: System.Data.Common
  commentId: N:System.Data.Common
  isExternal: false
  name: System.Data.Common
  nameWithType: System.Data.Common
  fullName: System.Data.Common
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.EntityFrameworkCore.ModelBuilder
  commentId: T:Microsoft.EntityFrameworkCore.ModelBuilder
  parent: Microsoft.EntityFrameworkCore
  isExternal: false
  name: ModelBuilder
  nameWithType: ModelBuilder
  fullName: Microsoft.EntityFrameworkCore.ModelBuilder
- uid: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Specification.Tests.TransactionCustomer}
  commentId: T:System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Specification.Tests.TransactionCustomer}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<TransactionCustomer>
  nameWithType: IReadOnlyList<TransactionCustomer>
  fullName: System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Specification.Tests.TransactionCustomer>
  nameWithType.vb: IReadOnlyList(Of TransactionCustomer)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Specification.Tests.TransactionCustomer)
  name.vb: IReadOnlyList(Of TransactionCustomer)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionCustomer
    name: TransactionCustomer
    nameWithType: TransactionCustomer
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionCustomer
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionCustomer
    name: TransactionCustomer
    nameWithType: TransactionCustomer
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionCustomer
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
