### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer
  commentId: T:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer
  id: CommandBatchPreparer
  parent: Microsoft.EntityFrameworkCore.Update.Internal
  children:
  - Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer.#ctor(Microsoft.EntityFrameworkCore.Update.IModificationCommandBatchFactory,Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory,System.Collections.Generic.IComparer{Microsoft.EntityFrameworkCore.Update.ModificationCommand},Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider,Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactorySource)
  - Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer.BatchCommands(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry})
  - Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer.CreateModificationCommands(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry},System.Func{System.String})
  - Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer.TopologicalSort(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Update.ModificationCommand})
  langs:
  - csharp
  - vb
  name: CommandBatchPreparer
  nameWithType: CommandBatchPreparer
  fullName: Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Update/Internal/CommandBatchPreparer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CommandBatchPreparer
    path: src/Microsoft.EntityFrameworkCore.Relational/Update/Internal/CommandBatchPreparer.cs
    startLine: 18
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Update.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public class CommandBatchPreparer : ICommandBatchPreparer'
    content.vb: >-
      Public Class CommandBatchPreparer
          Implements ICommandBatchPreparer
  inheritance:
  - System.Object
  implements:
  - Microsoft.EntityFrameworkCore.Update.ICommandBatchPreparer
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer.#ctor(Microsoft.EntityFrameworkCore.Update.IModificationCommandBatchFactory,Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory,System.Collections.Generic.IComparer{Microsoft.EntityFrameworkCore.Update.ModificationCommand},Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider,Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactorySource)
  commentId: M:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer.#ctor(Microsoft.EntityFrameworkCore.Update.IModificationCommandBatchFactory,Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory,System.Collections.Generic.IComparer{Microsoft.EntityFrameworkCore.Update.ModificationCommand},Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider,Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactorySource)
  id: '#ctor(Microsoft.EntityFrameworkCore.Update.IModificationCommandBatchFactory,Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory,System.Collections.Generic.IComparer{Microsoft.EntityFrameworkCore.Update.ModificationCommand},Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider,Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactorySource)'
  parent: Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer
  langs:
  - csharp
  - vb
  name: CommandBatchPreparer(IModificationCommandBatchFactory, IParameterNameGeneratorFactory, IComparer<ModificationCommand>, IRelationalAnnotationProvider, IKeyValueIndexFactorySource)
  nameWithType: CommandBatchPreparer.CommandBatchPreparer(IModificationCommandBatchFactory, IParameterNameGeneratorFactory, IComparer<ModificationCommand>, IRelationalAnnotationProvider, IKeyValueIndexFactorySource)
  fullName: Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer.CommandBatchPreparer(Microsoft.EntityFrameworkCore.Update.IModificationCommandBatchFactory, Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory, System.Collections.Generic.IComparer<Microsoft.EntityFrameworkCore.Update.ModificationCommand>, Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider, Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactorySource)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Update/Internal/CommandBatchPreparer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Relational/Update/Internal/CommandBatchPreparer.cs
    startLine: 30
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Update.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public CommandBatchPreparer(IModificationCommandBatchFactory modificationCommandBatchFactory, IParameterNameGeneratorFactory parameterNameGeneratorFactory, IComparer<ModificationCommand> modificationCommandComparer, IRelationalAnnotationProvider annotations, IKeyValueIndexFactorySource keyValueIndexFactoryFactory)
    content.vb: Public Sub New(modificationCommandBatchFactory As IModificationCommandBatchFactory, parameterNameGeneratorFactory As IParameterNameGeneratorFactory, modificationCommandComparer As IComparer(Of ModificationCommand), annotations As IRelationalAnnotationProvider, keyValueIndexFactoryFactory As IKeyValueIndexFactorySource)
    parameters:
    - id: modificationCommandBatchFactory
      type: Microsoft.EntityFrameworkCore.Update.IModificationCommandBatchFactory
    - id: parameterNameGeneratorFactory
      type: Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory
    - id: modificationCommandComparer
      type: System.Collections.Generic.IComparer{Microsoft.EntityFrameworkCore.Update.ModificationCommand}
    - id: annotations
      type: Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider
    - id: keyValueIndexFactoryFactory
      type: Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactorySource
  nameWithType.vb: CommandBatchPreparer.CommandBatchPreparer(IModificationCommandBatchFactory, IParameterNameGeneratorFactory, IComparer(Of ModificationCommand), IRelationalAnnotationProvider, IKeyValueIndexFactorySource)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer.CommandBatchPreparer(Microsoft.EntityFrameworkCore.Update.IModificationCommandBatchFactory, Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory, System.Collections.Generic.IComparer(Of Microsoft.EntityFrameworkCore.Update.ModificationCommand), Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider, Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactorySource)
  name.vb: CommandBatchPreparer(IModificationCommandBatchFactory, IParameterNameGeneratorFactory, IComparer(Of ModificationCommand), IRelationalAnnotationProvider, IKeyValueIndexFactorySource)
- uid: Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer.BatchCommands(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry})
  commentId: M:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer.BatchCommands(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry})
  id: BatchCommands(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry})
  parent: Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer
  langs:
  - csharp
  - vb
  name: BatchCommands(IReadOnlyList<IUpdateEntry>)
  nameWithType: CommandBatchPreparer.BatchCommands(IReadOnlyList<IUpdateEntry>)
  fullName: Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer.BatchCommands(System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Update.IUpdateEntry>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Update/Internal/CommandBatchPreparer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: BatchCommands
    path: src/Microsoft.EntityFrameworkCore.Relational/Update/Internal/CommandBatchPreparer.cs
    startLine: 48
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Update.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual IEnumerable<ModificationCommandBatch> BatchCommands(IReadOnlyList<IUpdateEntry> entries)
    content.vb: Public Overridable Function BatchCommands(entries As IReadOnlyList(Of IUpdateEntry)) As IEnumerable(Of ModificationCommandBatch)
    parameters:
    - id: entries
      type: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry}
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch}
  implements:
  - Microsoft.EntityFrameworkCore.Update.ICommandBatchPreparer.BatchCommands(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry})
  nameWithType.vb: CommandBatchPreparer.BatchCommands(IReadOnlyList(Of IUpdateEntry))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer.BatchCommands(System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Update.IUpdateEntry))
  name.vb: BatchCommands(IReadOnlyList(Of IUpdateEntry))
- uid: Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer.CreateModificationCommands(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry},System.Func{System.String})
  commentId: M:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer.CreateModificationCommands(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry},System.Func{System.String})
  id: CreateModificationCommands(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry},System.Func{System.String})
  parent: Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer
  langs:
  - csharp
  - vb
  name: CreateModificationCommands(IReadOnlyList<IUpdateEntry>, Func<String>)
  nameWithType: CommandBatchPreparer.CreateModificationCommands(IReadOnlyList<IUpdateEntry>, Func<String>)
  fullName: Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer.CreateModificationCommands(System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Update.IUpdateEntry>, System.Func<System.String>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Update/Internal/CommandBatchPreparer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateModificationCommands
    path: src/Microsoft.EntityFrameworkCore.Relational/Update/Internal/CommandBatchPreparer.cs
    startLine: 79
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Update.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual IEnumerable<ModificationCommand> CreateModificationCommands(IReadOnlyList<IUpdateEntry> entries, Func<string> generateParameterName)
    content.vb: Protected Overridable Function CreateModificationCommands(entries As IReadOnlyList(Of IUpdateEntry), generateParameterName As Func(Of String)) As IEnumerable(Of ModificationCommand)
    parameters:
    - id: entries
      type: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry}
    - id: generateParameterName
      type: System.Func{System.String}
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Update.ModificationCommand}
  nameWithType.vb: CommandBatchPreparer.CreateModificationCommands(IReadOnlyList(Of IUpdateEntry), Func(Of String))
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer.CreateModificationCommands(System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Update.IUpdateEntry), System.Func(Of System.String))
  name.vb: CreateModificationCommands(IReadOnlyList(Of IUpdateEntry), Func(Of String))
- uid: Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer.TopologicalSort(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Update.ModificationCommand})
  commentId: M:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer.TopologicalSort(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Update.ModificationCommand})
  id: TopologicalSort(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Update.ModificationCommand})
  parent: Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer
  langs:
  - csharp
  - vb
  name: TopologicalSort(IEnumerable<ModificationCommand>)
  nameWithType: CommandBatchPreparer.TopologicalSort(IEnumerable<ModificationCommand>)
  fullName: Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer.TopologicalSort(System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Update.ModificationCommand>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Update/Internal/CommandBatchPreparer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: TopologicalSort
    path: src/Microsoft.EntityFrameworkCore.Relational/Update/Internal/CommandBatchPreparer.cs
    startLine: 118
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Update.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual IReadOnlyList<List<ModificationCommand>> TopologicalSort(IEnumerable<ModificationCommand> commands)
    content.vb: Protected Overridable Function TopologicalSort(commands As IEnumerable(Of ModificationCommand)) As IReadOnlyList(Of List(Of ModificationCommand))
    parameters:
    - id: commands
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Update.ModificationCommand}
    return:
      type: System.Collections.Generic.IReadOnlyList{System.Collections.Generic.List{Microsoft.EntityFrameworkCore.Update.ModificationCommand}}
  nameWithType.vb: CommandBatchPreparer.TopologicalSort(IEnumerable(Of ModificationCommand))
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer.TopologicalSort(System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Update.ModificationCommand))
  name.vb: TopologicalSort(IEnumerable(Of ModificationCommand))
references:
- uid: Microsoft.EntityFrameworkCore.Update.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Update.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Update.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Update.Internal
  fullName: Microsoft.EntityFrameworkCore.Update.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Update.ICommandBatchPreparer
  commentId: T:Microsoft.EntityFrameworkCore.Update.ICommandBatchPreparer
  parent: Microsoft.EntityFrameworkCore.Update
  isExternal: false
  name: ICommandBatchPreparer
  nameWithType: ICommandBatchPreparer
  fullName: Microsoft.EntityFrameworkCore.Update.ICommandBatchPreparer
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Update
  commentId: N:Microsoft.EntityFrameworkCore.Update
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Update
  nameWithType: Microsoft.EntityFrameworkCore.Update
  fullName: Microsoft.EntityFrameworkCore.Update
- uid: Microsoft.EntityFrameworkCore.Update.IModificationCommandBatchFactory
  commentId: T:Microsoft.EntityFrameworkCore.Update.IModificationCommandBatchFactory
  parent: Microsoft.EntityFrameworkCore.Update
  isExternal: false
  name: IModificationCommandBatchFactory
  nameWithType: IModificationCommandBatchFactory
  fullName: Microsoft.EntityFrameworkCore.Update.IModificationCommandBatchFactory
- uid: Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IParameterNameGeneratorFactory
  nameWithType: IParameterNameGeneratorFactory
  fullName: Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory
- uid: System.Collections.Generic.IComparer{Microsoft.EntityFrameworkCore.Update.ModificationCommand}
  commentId: T:System.Collections.Generic.IComparer{Microsoft.EntityFrameworkCore.Update.ModificationCommand}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IComparer`1
  name: IComparer<ModificationCommand>
  nameWithType: IComparer<ModificationCommand>
  fullName: System.Collections.Generic.IComparer<Microsoft.EntityFrameworkCore.Update.ModificationCommand>
  nameWithType.vb: IComparer(Of ModificationCommand)
  fullname.vb: System.Collections.Generic.IComparer(Of Microsoft.EntityFrameworkCore.Update.ModificationCommand)
  name.vb: IComparer(Of ModificationCommand)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Update.ModificationCommand
    name: ModificationCommand
    nameWithType: ModificationCommand
    fullName: Microsoft.EntityFrameworkCore.Update.ModificationCommand
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Update.ModificationCommand
    name: ModificationCommand
    nameWithType: ModificationCommand
    fullName: Microsoft.EntityFrameworkCore.Update.ModificationCommand
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IRelationalAnnotationProvider
  nameWithType: IRelationalAnnotationProvider
  fullName: Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider
- uid: Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactorySource
  commentId: T:Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactorySource
  parent: Microsoft.EntityFrameworkCore.Update.Internal
  isExternal: false
  name: IKeyValueIndexFactorySource
  nameWithType: IKeyValueIndexFactorySource
  fullName: Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactorySource
- uid: Microsoft.EntityFrameworkCore.Storage
  commentId: N:Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Storage
  nameWithType: Microsoft.EntityFrameworkCore.Storage
  fullName: Microsoft.EntityFrameworkCore.Storage
- uid: System.Collections.Generic.IComparer`1
  commentId: T:System.Collections.Generic.IComparer`1
  isExternal: true
  name: IComparer<T>
  nameWithType: IComparer<T>
  fullName: System.Collections.Generic.IComparer<T>
  nameWithType.vb: IComparer(Of T)
  fullname.vb: System.Collections.Generic.IComparer(Of T)
  name.vb: IComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: Microsoft.EntityFrameworkCore.Update.ICommandBatchPreparer.BatchCommands(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry})
  commentId: M:Microsoft.EntityFrameworkCore.Update.ICommandBatchPreparer.BatchCommands(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry})
  parent: Microsoft.EntityFrameworkCore.Update.ICommandBatchPreparer
  isExternal: true
  name: BatchCommands(IReadOnlyList<IUpdateEntry>)
  nameWithType: ICommandBatchPreparer.BatchCommands(IReadOnlyList<IUpdateEntry>)
  fullName: Microsoft.EntityFrameworkCore.Update.ICommandBatchPreparer.BatchCommands(System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Update.IUpdateEntry>)
  nameWithType.vb: ICommandBatchPreparer.BatchCommands(IReadOnlyList(Of IUpdateEntry))
  fullname.vb: Microsoft.EntityFrameworkCore.Update.ICommandBatchPreparer.BatchCommands(System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Update.IUpdateEntry))
  name.vb: BatchCommands(IReadOnlyList(Of IUpdateEntry))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Update.ICommandBatchPreparer.BatchCommands(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry})
    name: BatchCommands
    nameWithType: ICommandBatchPreparer.BatchCommands
    fullName: Microsoft.EntityFrameworkCore.Update.ICommandBatchPreparer.BatchCommands
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
    name: IUpdateEntry
    nameWithType: IUpdateEntry
    fullName: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Update.ICommandBatchPreparer.BatchCommands(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry})
    name: BatchCommands
    nameWithType: ICommandBatchPreparer.BatchCommands
    fullName: Microsoft.EntityFrameworkCore.Update.ICommandBatchPreparer.BatchCommands
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
    name: IUpdateEntry
    nameWithType: IUpdateEntry
    fullName: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry}
  commentId: T:System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<IUpdateEntry>
  nameWithType: IReadOnlyList<IUpdateEntry>
  fullName: System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Update.IUpdateEntry>
  nameWithType.vb: IReadOnlyList(Of IUpdateEntry)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Update.IUpdateEntry)
  name.vb: IReadOnlyList(Of IUpdateEntry)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
    name: IUpdateEntry
    nameWithType: IUpdateEntry
    fullName: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
    name: IUpdateEntry
    nameWithType: IUpdateEntry
    fullName: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ModificationCommandBatch>
  nameWithType: IEnumerable<ModificationCommandBatch>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch>
  nameWithType.vb: IEnumerable(Of ModificationCommandBatch)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch)
  name.vb: IEnumerable(Of ModificationCommandBatch)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch
    name: ModificationCommandBatch
    nameWithType: ModificationCommandBatch
    fullName: Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch
    name: ModificationCommandBatch
    nameWithType: ModificationCommandBatch
    fullName: Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{System.String}
  commentId: T:System.Func{System.String}
  parent: System
  definition: System.Func`1
  name: Func<String>
  nameWithType: Func<String>
  fullName: System.Func<System.String>
  nameWithType.vb: Func(Of String)
  fullname.vb: System.Func(Of System.String)
  name.vb: Func(Of String)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Update.ModificationCommand}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Update.ModificationCommand}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ModificationCommand>
  nameWithType: IEnumerable<ModificationCommand>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Update.ModificationCommand>
  nameWithType.vb: IEnumerable(Of ModificationCommand)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Update.ModificationCommand)
  name.vb: IEnumerable(Of ModificationCommand)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Update.ModificationCommand
    name: ModificationCommand
    nameWithType: ModificationCommand
    fullName: Microsoft.EntityFrameworkCore.Update.ModificationCommand
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Update.ModificationCommand
    name: ModificationCommand
    nameWithType: ModificationCommand
    fullName: Microsoft.EntityFrameworkCore.Update.ModificationCommand
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullname.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList{System.Collections.Generic.List{Microsoft.EntityFrameworkCore.Update.ModificationCommand}}
  commentId: T:System.Collections.Generic.IReadOnlyList{System.Collections.Generic.List{Microsoft.EntityFrameworkCore.Update.ModificationCommand}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<List<ModificationCommand>>
  nameWithType: IReadOnlyList<List<ModificationCommand>>
  fullName: System.Collections.Generic.IReadOnlyList<System.Collections.Generic.List<Microsoft.EntityFrameworkCore.Update.ModificationCommand>>
  nameWithType.vb: IReadOnlyList(Of List(Of ModificationCommand))
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of System.Collections.Generic.List(Of Microsoft.EntityFrameworkCore.Update.ModificationCommand))
  name.vb: IReadOnlyList(Of List(Of ModificationCommand))
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Update.ModificationCommand
    name: ModificationCommand
    nameWithType: ModificationCommand
    fullName: Microsoft.EntityFrameworkCore.Update.ModificationCommand
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Update.ModificationCommand
    name: ModificationCommand
    nameWithType: ModificationCommand
    fullName: Microsoft.EntityFrameworkCore.Update.ModificationCommand
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
