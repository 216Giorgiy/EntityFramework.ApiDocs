### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order
  commentId: T:Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order
  id: MusicStoreQueryTests.Order
  parent: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  children:
  - Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order.Address
  - Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order.City
  - Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order.Country
  - Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order.Email
  - Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order.FirstName
  - Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order.LastName
  - Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order.OrderDate
  - Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order.OrderDetails
  - Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order.OrderId
  - Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order.Phone
  - Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order.PostalCode
  - Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order.State
  - Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order.Total
  - Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order.Username
  langs:
  - csharp
  - vb
  name: MusicStoreQueryTests.Order
  nameWithType: MusicStoreQueryTests.Order
  fullName: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order
  type: Class
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.InMemory.FunctionalTests/MusicStoreQueryTests.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Order
    path: test/Microsoft.EntityFrameworkCore.InMemory.FunctionalTests/MusicStoreQueryTests.cs
    startLine: 126
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  syntax:
    content: public class Order
    content.vb: Public Class Order
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order.OrderId
  commentId: P:Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order.OrderId
  id: OrderId
  parent: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order
  langs:
  - csharp
  - vb
  name: OrderId
  nameWithType: MusicStoreQueryTests.Order.OrderId
  fullName: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order.OrderId
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.InMemory.FunctionalTests/MusicStoreQueryTests.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: OrderId
    path: test/Microsoft.EntityFrameworkCore.InMemory.FunctionalTests/MusicStoreQueryTests.cs
    startLine: 128
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  syntax:
    content: public int OrderId { get; set; }
    content.vb: Public Property OrderId As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order.OrderDate
  commentId: P:Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order.OrderDate
  id: OrderDate
  parent: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order
  langs:
  - csharp
  - vb
  name: OrderDate
  nameWithType: MusicStoreQueryTests.Order.OrderDate
  fullName: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order.OrderDate
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.InMemory.FunctionalTests/MusicStoreQueryTests.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: OrderDate
    path: test/Microsoft.EntityFrameworkCore.InMemory.FunctionalTests/MusicStoreQueryTests.cs
    startLine: 129
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  syntax:
    content: public DateTime OrderDate { get; set; }
    content.vb: Public Property OrderDate As Date
    parameters: []
    return:
      type: System.DateTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order.Username
  commentId: P:Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order.Username
  id: Username
  parent: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order
  langs:
  - csharp
  - vb
  name: Username
  nameWithType: MusicStoreQueryTests.Order.Username
  fullName: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order.Username
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.InMemory.FunctionalTests/MusicStoreQueryTests.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Username
    path: test/Microsoft.EntityFrameworkCore.InMemory.FunctionalTests/MusicStoreQueryTests.cs
    startLine: 130
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  syntax:
    content: public string Username { get; set; }
    content.vb: Public Property Username As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order.FirstName
  commentId: P:Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order.FirstName
  id: FirstName
  parent: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order
  langs:
  - csharp
  - vb
  name: FirstName
  nameWithType: MusicStoreQueryTests.Order.FirstName
  fullName: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order.FirstName
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.InMemory.FunctionalTests/MusicStoreQueryTests.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: FirstName
    path: test/Microsoft.EntityFrameworkCore.InMemory.FunctionalTests/MusicStoreQueryTests.cs
    startLine: 131
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  syntax:
    content: public string FirstName { get; set; }
    content.vb: Public Property FirstName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order.LastName
  commentId: P:Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order.LastName
  id: LastName
  parent: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order
  langs:
  - csharp
  - vb
  name: LastName
  nameWithType: MusicStoreQueryTests.Order.LastName
  fullName: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order.LastName
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.InMemory.FunctionalTests/MusicStoreQueryTests.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: LastName
    path: test/Microsoft.EntityFrameworkCore.InMemory.FunctionalTests/MusicStoreQueryTests.cs
    startLine: 132
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  syntax:
    content: public string LastName { get; set; }
    content.vb: Public Property LastName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order.Address
  commentId: P:Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order.Address
  id: Address
  parent: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order
  langs:
  - csharp
  - vb
  name: Address
  nameWithType: MusicStoreQueryTests.Order.Address
  fullName: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order.Address
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.InMemory.FunctionalTests/MusicStoreQueryTests.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Address
    path: test/Microsoft.EntityFrameworkCore.InMemory.FunctionalTests/MusicStoreQueryTests.cs
    startLine: 133
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  syntax:
    content: public string Address { get; set; }
    content.vb: Public Property Address As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order.City
  commentId: P:Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order.City
  id: City
  parent: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order
  langs:
  - csharp
  - vb
  name: City
  nameWithType: MusicStoreQueryTests.Order.City
  fullName: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order.City
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.InMemory.FunctionalTests/MusicStoreQueryTests.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: City
    path: test/Microsoft.EntityFrameworkCore.InMemory.FunctionalTests/MusicStoreQueryTests.cs
    startLine: 134
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  syntax:
    content: public string City { get; set; }
    content.vb: Public Property City As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order.State
  commentId: P:Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order.State
  id: State
  parent: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order
  langs:
  - csharp
  - vb
  name: State
  nameWithType: MusicStoreQueryTests.Order.State
  fullName: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order.State
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.InMemory.FunctionalTests/MusicStoreQueryTests.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: State
    path: test/Microsoft.EntityFrameworkCore.InMemory.FunctionalTests/MusicStoreQueryTests.cs
    startLine: 135
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  syntax:
    content: public string State { get; set; }
    content.vb: Public Property State As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order.PostalCode
  commentId: P:Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order.PostalCode
  id: PostalCode
  parent: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order
  langs:
  - csharp
  - vb
  name: PostalCode
  nameWithType: MusicStoreQueryTests.Order.PostalCode
  fullName: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order.PostalCode
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.InMemory.FunctionalTests/MusicStoreQueryTests.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: PostalCode
    path: test/Microsoft.EntityFrameworkCore.InMemory.FunctionalTests/MusicStoreQueryTests.cs
    startLine: 136
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  syntax:
    content: public string PostalCode { get; set; }
    content.vb: Public Property PostalCode As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order.Country
  commentId: P:Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order.Country
  id: Country
  parent: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order
  langs:
  - csharp
  - vb
  name: Country
  nameWithType: MusicStoreQueryTests.Order.Country
  fullName: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order.Country
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.InMemory.FunctionalTests/MusicStoreQueryTests.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Country
    path: test/Microsoft.EntityFrameworkCore.InMemory.FunctionalTests/MusicStoreQueryTests.cs
    startLine: 137
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  syntax:
    content: public string Country { get; set; }
    content.vb: Public Property Country As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order.Phone
  commentId: P:Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order.Phone
  id: Phone
  parent: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order
  langs:
  - csharp
  - vb
  name: Phone
  nameWithType: MusicStoreQueryTests.Order.Phone
  fullName: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order.Phone
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.InMemory.FunctionalTests/MusicStoreQueryTests.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Phone
    path: test/Microsoft.EntityFrameworkCore.InMemory.FunctionalTests/MusicStoreQueryTests.cs
    startLine: 138
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  syntax:
    content: public string Phone { get; set; }
    content.vb: Public Property Phone As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order.Email
  commentId: P:Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order.Email
  id: Email
  parent: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order
  langs:
  - csharp
  - vb
  name: Email
  nameWithType: MusicStoreQueryTests.Order.Email
  fullName: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order.Email
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.InMemory.FunctionalTests/MusicStoreQueryTests.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Email
    path: test/Microsoft.EntityFrameworkCore.InMemory.FunctionalTests/MusicStoreQueryTests.cs
    startLine: 139
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  syntax:
    content: public string Email { get; set; }
    content.vb: Public Property Email As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order.Total
  commentId: P:Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order.Total
  id: Total
  parent: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order
  langs:
  - csharp
  - vb
  name: Total
  nameWithType: MusicStoreQueryTests.Order.Total
  fullName: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order.Total
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.InMemory.FunctionalTests/MusicStoreQueryTests.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Total
    path: test/Microsoft.EntityFrameworkCore.InMemory.FunctionalTests/MusicStoreQueryTests.cs
    startLine: 140
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  syntax:
    content: public decimal Total { get; set; }
    content.vb: Public Property Total As Decimal
    parameters: []
    return:
      type: System.Decimal
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order.OrderDetails
  commentId: P:Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order.OrderDetails
  id: OrderDetails
  parent: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order
  langs:
  - csharp
  - vb
  name: OrderDetails
  nameWithType: MusicStoreQueryTests.Order.OrderDetails
  fullName: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order.OrderDetails
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.InMemory.FunctionalTests/MusicStoreQueryTests.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: OrderDetails
    path: test/Microsoft.EntityFrameworkCore.InMemory.FunctionalTests/MusicStoreQueryTests.cs
    startLine: 141
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  syntax:
    content: public List<MusicStoreQueryTests.OrderDetail> OrderDetails { get; set; }
    content.vb: Public Property OrderDetails As List(Of MusicStoreQueryTests.OrderDetail)
    parameters: []
    return:
      type: System.Collections.Generic.List{Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.OrderDetail}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  commentId: N:Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  nameWithType: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  fullName: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<MusicStoreQueryTests.Order, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<MusicStoreQueryTests.Order, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of MusicStoreQueryTests.Order, TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order, TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of MusicStoreQueryTests.Order, TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<MusicStoreQueryTests.Order, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<MusicStoreQueryTests.Order, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of MusicStoreQueryTests.Order, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of MusicStoreQueryTests.Order, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Order, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Decimal
  commentId: T:System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.Collections.Generic.List{Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.OrderDetail}
  commentId: T:System.Collections.Generic.List{Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.OrderDetail}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<MusicStoreQueryTests.OrderDetail>
  nameWithType: List<MusicStoreQueryTests.OrderDetail>
  fullName: System.Collections.Generic.List<Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.OrderDetail>
  nameWithType.vb: List(Of MusicStoreQueryTests.OrderDetail)
  fullname.vb: System.Collections.Generic.List(Of Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.OrderDetail)
  name.vb: List(Of MusicStoreQueryTests.OrderDetail)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.OrderDetail
    name: MusicStoreQueryTests.OrderDetail
    nameWithType: MusicStoreQueryTests.OrderDetail
    fullName: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.OrderDetail
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.OrderDetail
    name: MusicStoreQueryTests.OrderDetail
    nameWithType: MusicStoreQueryTests.OrderDetail
    fullName: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.OrderDetail
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullname.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
