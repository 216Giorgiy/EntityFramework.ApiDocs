### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest
  commentId: T:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest
  id: SqlServerValueGenerationScenariosTest
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  children:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Insert_and_update_with_computed_column
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Insert_and_update_with_computed_column_with_function
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Insert_explicit_value_into_computed_column
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Insert_explicit_value_throws_when_readonly_before_save
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Insert_explicit_value_throws_when_readonly_sequence_before_save
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Insert_with_client_generated_GUID_key
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Insert_with_default_value_from_sequence
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Insert_with_explicit_default_keys
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Insert_with_explicit_non_default_keys
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Insert_with_explicit_non_default_keys_by_default
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Insert_with_explicit_with_default_keys
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Insert_with_Identity_column
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Insert_with_implicit_default_keys
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Insert_with_key_default_value_from_sequence
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Insert_with_non_key_default_value
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Insert_with_non_key_default_value_readonly
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Insert_with_sequence_HiLo
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Insert_with_server_generated_GUID_key
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Resolve_concurreny
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Update_explicit_value_in_computed_column
  langs:
  - csharp
  - vb
  name: SqlServerValueGenerationScenariosTest
  nameWithType: SqlServerValueGenerationScenariosTest
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest
  type: Class
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerValueGenerationScenariosTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: SqlServerValueGenerationScenariosTest
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerValueGenerationScenariosTest.cs
    startLine: 15
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public class SqlServerValueGenerationScenariosTest
    content.vb: Public Class SqlServerValueGenerationScenariosTest
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Insert_with_Identity_column
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Insert_with_Identity_column
  id: Insert_with_Identity_column
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest
  langs:
  - csharp
  - vb
  name: Insert_with_Identity_column()
  nameWithType: SqlServerValueGenerationScenariosTest.Insert_with_Identity_column()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Insert_with_Identity_column()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerValueGenerationScenariosTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Insert_with_Identity_column
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerValueGenerationScenariosTest.cs
    startLine: 21
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: >-
      [Fact]

      public void Insert_with_Identity_column()
    content.vb: >-
      <Fact>

      Public Sub Insert_with_Identity_column
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Insert_with_sequence_HiLo
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Insert_with_sequence_HiLo
  id: Insert_with_sequence_HiLo
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest
  langs:
  - csharp
  - vb
  name: Insert_with_sequence_HiLo()
  nameWithType: SqlServerValueGenerationScenariosTest.Insert_with_sequence_HiLo()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Insert_with_sequence_HiLo()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerValueGenerationScenariosTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Insert_with_sequence_HiLo
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerValueGenerationScenariosTest.cs
    startLine: 53
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: >-
      [SqlServerCondition(SqlServerCondition.SupportsSequences)]

      public void Insert_with_sequence_HiLo()
    content.vb: >-
      <SqlServerCondition(SqlServerCondition.SupportsSequences)>

      Public Sub Insert_with_sequence_HiLo
  attributes:
  - type: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerConditionAttribute
    ctor: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerConditionAttribute.#ctor(Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerCondition)
    arguments:
    - type: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerCondition
      value: 1
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Insert_with_default_value_from_sequence
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Insert_with_default_value_from_sequence
  id: Insert_with_default_value_from_sequence
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest
  langs:
  - csharp
  - vb
  name: Insert_with_default_value_from_sequence()
  nameWithType: SqlServerValueGenerationScenariosTest.Insert_with_default_value_from_sequence()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Insert_with_default_value_from_sequence()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerValueGenerationScenariosTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Insert_with_default_value_from_sequence
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerValueGenerationScenariosTest.cs
    startLine: 89
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: >-
      [SqlServerCondition(SqlServerCondition.SupportsSequences)]

      public void Insert_with_default_value_from_sequence()
    content.vb: >-
      <SqlServerCondition(SqlServerCondition.SupportsSequences)>

      Public Sub Insert_with_default_value_from_sequence
  attributes:
  - type: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerConditionAttribute
    ctor: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerConditionAttribute.#ctor(Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerCondition)
    arguments:
    - type: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerCondition
      value: 1
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Insert_with_key_default_value_from_sequence
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Insert_with_key_default_value_from_sequence
  id: Insert_with_key_default_value_from_sequence
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest
  langs:
  - csharp
  - vb
  name: Insert_with_key_default_value_from_sequence()
  nameWithType: SqlServerValueGenerationScenariosTest.Insert_with_key_default_value_from_sequence()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Insert_with_key_default_value_from_sequence()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerValueGenerationScenariosTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Insert_with_key_default_value_from_sequence
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerValueGenerationScenariosTest.cs
    startLine: 134
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: >-
      [SqlServerCondition(SqlServerCondition.SupportsSequences)]

      public void Insert_with_key_default_value_from_sequence()
    content.vb: >-
      <SqlServerCondition(SqlServerCondition.SupportsSequences)>

      Public Sub Insert_with_key_default_value_from_sequence
  attributes:
  - type: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerConditionAttribute
    ctor: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerConditionAttribute.#ctor(Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerCondition)
    arguments:
    - type: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerCondition
      value: 1
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Insert_with_explicit_non_default_keys
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Insert_with_explicit_non_default_keys
  id: Insert_with_explicit_non_default_keys
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest
  langs:
  - csharp
  - vb
  name: Insert_with_explicit_non_default_keys()
  nameWithType: SqlServerValueGenerationScenariosTest.Insert_with_explicit_non_default_keys()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Insert_with_explicit_non_default_keys()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerValueGenerationScenariosTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Insert_with_explicit_non_default_keys
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerValueGenerationScenariosTest.cs
    startLine: 181
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: >-
      [Fact]

      public void Insert_with_explicit_non_default_keys()
    content.vb: >-
      <Fact>

      Public Sub Insert_with_explicit_non_default_keys
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Insert_with_explicit_with_default_keys
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Insert_with_explicit_with_default_keys
  id: Insert_with_explicit_with_default_keys
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest
  langs:
  - csharp
  - vb
  name: Insert_with_explicit_with_default_keys()
  nameWithType: SqlServerValueGenerationScenariosTest.Insert_with_explicit_with_default_keys()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Insert_with_explicit_with_default_keys()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerValueGenerationScenariosTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Insert_with_explicit_with_default_keys
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerValueGenerationScenariosTest.cs
    startLine: 221
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: >-
      [Fact]

      public void Insert_with_explicit_with_default_keys()
    content.vb: >-
      <Fact>

      Public Sub Insert_with_explicit_with_default_keys
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Insert_with_non_key_default_value
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Insert_with_non_key_default_value
  id: Insert_with_non_key_default_value
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest
  langs:
  - csharp
  - vb
  name: Insert_with_non_key_default_value()
  nameWithType: SqlServerValueGenerationScenariosTest.Insert_with_non_key_default_value()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Insert_with_non_key_default_value()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerValueGenerationScenariosTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Insert_with_non_key_default_value
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerValueGenerationScenariosTest.cs
    startLine: 263
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: >-
      [Fact]

      public void Insert_with_non_key_default_value()
    content.vb: >-
      <Fact>

      Public Sub Insert_with_non_key_default_value
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Insert_with_non_key_default_value_readonly
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Insert_with_non_key_default_value_readonly
  id: Insert_with_non_key_default_value_readonly
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest
  langs:
  - csharp
  - vb
  name: Insert_with_non_key_default_value_readonly()
  nameWithType: SqlServerValueGenerationScenariosTest.Insert_with_non_key_default_value_readonly()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Insert_with_non_key_default_value_readonly()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerValueGenerationScenariosTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Insert_with_non_key_default_value_readonly
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerValueGenerationScenariosTest.cs
    startLine: 325
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: >-
      [Fact]

      public void Insert_with_non_key_default_value_readonly()
    content.vb: >-
      <Fact>

      Public Sub Insert_with_non_key_default_value_readonly
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Insert_and_update_with_computed_column
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Insert_and_update_with_computed_column
  id: Insert_and_update_with_computed_column
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest
  langs:
  - csharp
  - vb
  name: Insert_and_update_with_computed_column()
  nameWithType: SqlServerValueGenerationScenariosTest.Insert_and_update_with_computed_column()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Insert_and_update_with_computed_column()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerValueGenerationScenariosTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Insert_and_update_with_computed_column
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerValueGenerationScenariosTest.cs
    startLine: 386
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: >-
      [Fact]

      public void Insert_and_update_with_computed_column()
    content.vb: >-
      <Fact>

      Public Sub Insert_and_update_with_computed_column
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Insert_and_update_with_computed_column_with_function
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Insert_and_update_with_computed_column_with_function
  id: Insert_and_update_with_computed_column_with_function
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest
  langs:
  - csharp
  - vb
  name: Insert_and_update_with_computed_column_with_function()
  nameWithType: SqlServerValueGenerationScenariosTest.Insert_and_update_with_computed_column_with_function()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Insert_and_update_with_computed_column_with_function()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerValueGenerationScenariosTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Insert_and_update_with_computed_column_with_function
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerValueGenerationScenariosTest.cs
    startLine: 433
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: >-
      [Fact]

      public void Insert_and_update_with_computed_column_with_function()
    content.vb: >-
      <Fact>

      Public Sub Insert_and_update_with_computed_column_with_function
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Insert_with_client_generated_GUID_key
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Insert_with_client_generated_GUID_key
  id: Insert_with_client_generated_GUID_key
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest
  langs:
  - csharp
  - vb
  name: Insert_with_client_generated_GUID_key()
  nameWithType: SqlServerValueGenerationScenariosTest.Insert_with_client_generated_GUID_key()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Insert_with_client_generated_GUID_key()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerValueGenerationScenariosTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Insert_with_client_generated_GUID_key
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerValueGenerationScenariosTest.cs
    startLine: 487
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: >-
      [Fact]

      public void Insert_with_client_generated_GUID_key()
    content.vb: >-
      <Fact>

      Public Sub Insert_with_client_generated_GUID_key
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Insert_with_server_generated_GUID_key
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Insert_with_server_generated_GUID_key
  id: Insert_with_server_generated_GUID_key
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest
  langs:
  - csharp
  - vb
  name: Insert_with_server_generated_GUID_key()
  nameWithType: SqlServerValueGenerationScenariosTest.Insert_with_server_generated_GUID_key()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Insert_with_server_generated_GUID_key()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerValueGenerationScenariosTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Insert_with_server_generated_GUID_key
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerValueGenerationScenariosTest.cs
    startLine: 523
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: >-
      [Fact]

      public void Insert_with_server_generated_GUID_key()
    content.vb: >-
      <Fact>

      Public Sub Insert_with_server_generated_GUID_key
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Insert_with_explicit_non_default_keys_by_default
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Insert_with_explicit_non_default_keys_by_default
  id: Insert_with_explicit_non_default_keys_by_default
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest
  langs:
  - csharp
  - vb
  name: Insert_with_explicit_non_default_keys_by_default()
  nameWithType: SqlServerValueGenerationScenariosTest.Insert_with_explicit_non_default_keys_by_default()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Insert_with_explicit_non_default_keys_by_default()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerValueGenerationScenariosTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Insert_with_explicit_non_default_keys_by_default
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerValueGenerationScenariosTest.cs
    startLine: 568
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: >-
      [Fact]

      public void Insert_with_explicit_non_default_keys_by_default()
    content.vb: >-
      <Fact>

      Public Sub Insert_with_explicit_non_default_keys_by_default
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Insert_with_explicit_default_keys
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Insert_with_explicit_default_keys
  id: Insert_with_explicit_default_keys
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest
  langs:
  - csharp
  - vb
  name: Insert_with_explicit_default_keys()
  nameWithType: SqlServerValueGenerationScenariosTest.Insert_with_explicit_default_keys()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Insert_with_explicit_default_keys()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerValueGenerationScenariosTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Insert_with_explicit_default_keys
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerValueGenerationScenariosTest.cs
    startLine: 589
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: >-
      [Fact]

      public void Insert_with_explicit_default_keys()
    content.vb: >-
      <Fact>

      Public Sub Insert_with_explicit_default_keys
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Insert_with_implicit_default_keys
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Insert_with_implicit_default_keys
  id: Insert_with_implicit_default_keys
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest
  langs:
  - csharp
  - vb
  name: Insert_with_implicit_default_keys()
  nameWithType: SqlServerValueGenerationScenariosTest.Insert_with_implicit_default_keys()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Insert_with_implicit_default_keys()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerValueGenerationScenariosTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Insert_with_implicit_default_keys
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerValueGenerationScenariosTest.cs
    startLine: 609
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: >-
      [Fact]

      public void Insert_with_implicit_default_keys()
    content.vb: >-
      <Fact>

      Public Sub Insert_with_implicit_default_keys
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Insert_explicit_value_throws_when_readonly_sequence_before_save
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Insert_explicit_value_throws_when_readonly_sequence_before_save
  id: Insert_explicit_value_throws_when_readonly_sequence_before_save
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest
  langs:
  - csharp
  - vb
  name: Insert_explicit_value_throws_when_readonly_sequence_before_save()
  nameWithType: SqlServerValueGenerationScenariosTest.Insert_explicit_value_throws_when_readonly_sequence_before_save()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Insert_explicit_value_throws_when_readonly_sequence_before_save()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerValueGenerationScenariosTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Insert_explicit_value_throws_when_readonly_sequence_before_save
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerValueGenerationScenariosTest.cs
    startLine: 649
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: >-
      [SqlServerCondition(SqlServerCondition.SupportsSequences)]

      public void Insert_explicit_value_throws_when_readonly_sequence_before_save()
    content.vb: >-
      <SqlServerCondition(SqlServerCondition.SupportsSequences)>

      Public Sub Insert_explicit_value_throws_when_readonly_sequence_before_save
  attributes:
  - type: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerConditionAttribute
    ctor: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerConditionAttribute.#ctor(Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerCondition)
    arguments:
    - type: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.Utilities.SqlServerCondition
      value: 1
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Insert_explicit_value_throws_when_readonly_before_save
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Insert_explicit_value_throws_when_readonly_before_save
  id: Insert_explicit_value_throws_when_readonly_before_save
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest
  langs:
  - csharp
  - vb
  name: Insert_explicit_value_throws_when_readonly_before_save()
  nameWithType: SqlServerValueGenerationScenariosTest.Insert_explicit_value_throws_when_readonly_before_save()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Insert_explicit_value_throws_when_readonly_before_save()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerValueGenerationScenariosTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Insert_explicit_value_throws_when_readonly_before_save
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerValueGenerationScenariosTest.cs
    startLine: 689
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: >-
      [Fact]

      public void Insert_explicit_value_throws_when_readonly_before_save()
    content.vb: >-
      <Fact>

      Public Sub Insert_explicit_value_throws_when_readonly_before_save
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Insert_explicit_value_into_computed_column
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Insert_explicit_value_into_computed_column
  id: Insert_explicit_value_into_computed_column
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest
  langs:
  - csharp
  - vb
  name: Insert_explicit_value_into_computed_column()
  nameWithType: SqlServerValueGenerationScenariosTest.Insert_explicit_value_into_computed_column()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Insert_explicit_value_into_computed_column()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerValueGenerationScenariosTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Insert_explicit_value_into_computed_column
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerValueGenerationScenariosTest.cs
    startLine: 711
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: >-
      [Fact]

      public void Insert_explicit_value_into_computed_column()
    content.vb: >-
      <Fact>

      Public Sub Insert_explicit_value_into_computed_column
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Update_explicit_value_in_computed_column
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Update_explicit_value_in_computed_column
  id: Update_explicit_value_in_computed_column
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest
  langs:
  - csharp
  - vb
  name: Update_explicit_value_in_computed_column()
  nameWithType: SqlServerValueGenerationScenariosTest.Update_explicit_value_in_computed_column()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Update_explicit_value_in_computed_column()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerValueGenerationScenariosTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Update_explicit_value_in_computed_column
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerValueGenerationScenariosTest.cs
    startLine: 731
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: >-
      [Fact]

      public void Update_explicit_value_in_computed_column()
    content.vb: >-
      <Fact>

      Public Sub Update_explicit_value_in_computed_column
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Resolve_concurreny
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Resolve_concurreny
  id: Resolve_concurreny
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest
  langs:
  - csharp
  - vb
  name: Resolve_concurreny()
  nameWithType: SqlServerValueGenerationScenariosTest.Resolve_concurreny()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerValueGenerationScenariosTest.Resolve_concurreny()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerValueGenerationScenariosTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Resolve_concurreny
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerValueGenerationScenariosTest.cs
    startLine: 761
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: >-
      [Fact]

      public void Resolve_concurreny()
    content.vb: >-
      <Fact>

      Public Sub Resolve_concurreny
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  commentId: N:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  nameWithType: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
