### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests
  commentId: T:Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests
  id: MusicStoreQueryTests
  parent: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  children:
  - Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Artists
  - Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Genres
  - Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Music_store_project_to_mapped_entity
  langs:
  - csharp
  - vb
  name: MusicStoreQueryTests
  nameWithType: MusicStoreQueryTests
  fullName: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests
  type: Class
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.InMemory.FunctionalTests/MusicStoreQueryTests.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: MusicStoreQueryTests
    path: test/Microsoft.EntityFrameworkCore.InMemory.FunctionalTests/MusicStoreQueryTests.cs
    startLine: 11
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  syntax:
    content: public class MusicStoreQueryTests
    content.vb: Public Class MusicStoreQueryTests
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Music_store_project_to_mapped_entity
  commentId: M:Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Music_store_project_to_mapped_entity
  id: Music_store_project_to_mapped_entity
  parent: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests
  langs:
  - csharp
  - vb
  name: Music_store_project_to_mapped_entity()
  nameWithType: MusicStoreQueryTests.Music_store_project_to_mapped_entity()
  fullName: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Music_store_project_to_mapped_entity()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.InMemory.FunctionalTests/MusicStoreQueryTests.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Music_store_project_to_mapped_entity
    path: test/Microsoft.EntityFrameworkCore.InMemory.FunctionalTests/MusicStoreQueryTests.cs
    startLine: 13
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  syntax:
    content: public void Music_store_project_to_mapped_entity()
    content.vb: Public Sub Music_store_project_to_mapped_entity
  overload: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Music_store_project_to_mapped_entity*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Artists
  commentId: P:Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Artists
  id: Artists
  parent: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests
  langs:
  - csharp
  - vb
  name: Artists
  nameWithType: MusicStoreQueryTests.Artists
  fullName: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Artists
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.InMemory.FunctionalTests/MusicStoreQueryTests.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Artists
    path: test/Microsoft.EntityFrameworkCore.InMemory.FunctionalTests/MusicStoreQueryTests.cs
    startLine: 634
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  syntax:
    content: public static Dictionary<string, MusicStoreQueryTests.Artist> Artists { get; }
    content.vb: Public Shared ReadOnly Property Artists As Dictionary(Of String, MusicStoreQueryTests.Artist)
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Artist}
  overload: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Artists*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Genres
  commentId: P:Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Genres
  id: Genres
  parent: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests
  langs:
  - csharp
  - vb
  name: Genres
  nameWithType: MusicStoreQueryTests.Genres
  fullName: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Genres
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.InMemory.FunctionalTests/MusicStoreQueryTests.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Genres
    path: test/Microsoft.EntityFrameworkCore.InMemory.FunctionalTests/MusicStoreQueryTests.cs
    startLine: 963
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  syntax:
    content: public static Dictionary<string, MusicStoreQueryTests.Genre> Genres { get; }
    content.vb: Public Shared ReadOnly Property Genres As Dictionary(Of String, MusicStoreQueryTests.Genre)
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Genre}
  overload: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Genres*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  commentId: N:Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  nameWithType: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  fullName: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Music_store_project_to_mapped_entity*
  commentId: Overload:Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Music_store_project_to_mapped_entity
  isExternal: false
  name: Music_store_project_to_mapped_entity
  nameWithType: MusicStoreQueryTests.Music_store_project_to_mapped_entity
  fullName: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Music_store_project_to_mapped_entity
- uid: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Artists*
  commentId: Overload:Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Artists
  isExternal: false
  name: Artists
  nameWithType: MusicStoreQueryTests.Artists
  fullName: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Artists
- uid: System.Collections.Generic.Dictionary{System.String,Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Artist}
  commentId: T:System.Collections.Generic.Dictionary{System.String,Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Artist}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, MusicStoreQueryTests.Artist>
  nameWithType: Dictionary<String, MusicStoreQueryTests.Artist>
  fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Artist>
  nameWithType.vb: Dictionary(Of String, MusicStoreQueryTests.Artist)
  fullname.vb: System.Collections.Generic.Dictionary(Of System.String, Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Artist)
  name.vb: Dictionary(Of String, MusicStoreQueryTests.Artist)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Artist
    name: MusicStoreQueryTests.Artist
    nameWithType: MusicStoreQueryTests.Artist
    fullName: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Artist
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Artist
    name: MusicStoreQueryTests.Artist
    nameWithType: MusicStoreQueryTests.Artist
    fullName: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Artist
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Genres*
  commentId: Overload:Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Genres
  isExternal: false
  name: Genres
  nameWithType: MusicStoreQueryTests.Genres
  fullName: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Genres
- uid: System.Collections.Generic.Dictionary{System.String,Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Genre}
  commentId: T:System.Collections.Generic.Dictionary{System.String,Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Genre}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, MusicStoreQueryTests.Genre>
  nameWithType: Dictionary<String, MusicStoreQueryTests.Genre>
  fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Genre>
  nameWithType.vb: Dictionary(Of String, MusicStoreQueryTests.Genre)
  fullname.vb: System.Collections.Generic.Dictionary(Of System.String, Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Genre)
  name.vb: Dictionary(Of String, MusicStoreQueryTests.Genre)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Genre
    name: MusicStoreQueryTests.Genre
    nameWithType: MusicStoreQueryTests.Genre
    fullName: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Genre
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Genre
    name: MusicStoreQueryTests.Genre
    nameWithType: MusicStoreQueryTests.Genre
    fullName: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Genre
  - name: )
    nameWithType: )
    fullName: )
