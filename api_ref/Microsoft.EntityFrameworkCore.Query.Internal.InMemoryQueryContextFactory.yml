### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Query.Internal.InMemoryQueryContextFactory
  commentId: T:Microsoft.EntityFrameworkCore.Query.Internal.InMemoryQueryContextFactory
  id: InMemoryQueryContextFactory
  parent: Microsoft.EntityFrameworkCore.Query.Internal
  children:
  - Microsoft.EntityFrameworkCore.Query.Internal.InMemoryQueryContextFactory.#ctor(Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext,Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector,Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStoreSource,Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions)
  - Microsoft.EntityFrameworkCore.Query.Internal.InMemoryQueryContextFactory.Create
  langs:
  - csharp
  - vb
  name: InMemoryQueryContextFactory
  nameWithType: InMemoryQueryContextFactory
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.InMemoryQueryContextFactory
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.InMemory/Query/Internal/InMemoryQueryContextFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: InMemoryQueryContextFactory
    path: src/Microsoft.EntityFrameworkCore.InMemory/Query/Internal/InMemoryQueryContextFactory.cs
    startLine: 14
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public class InMemoryQueryContextFactory : QueryContextFactory, IQueryContextFactory'
    content.vb: >-
      Public Class InMemoryQueryContextFactory
          Inherits QueryContextFactory
          Implements IQueryContextFactory
  inheritance:
  - System.Object
  - Microsoft.EntityFrameworkCore.Query.QueryContextFactory
  implements:
  - Microsoft.EntityFrameworkCore.Query.IQueryContextFactory
  inheritedMembers:
  - Microsoft.EntityFrameworkCore.Query.QueryContextFactory.CreateQueryBuffer
  - Microsoft.EntityFrameworkCore.Query.QueryContextFactory.ChangeDetector
  - Microsoft.EntityFrameworkCore.Query.QueryContextFactory.StateManager
  - Microsoft.EntityFrameworkCore.Query.QueryContextFactory.ConcurrencyDetector
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Query.Internal.InMemoryQueryContextFactory.#ctor(Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext,Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector,Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStoreSource,Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.InMemoryQueryContextFactory.#ctor(Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext,Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector,Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStoreSource,Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions)
  id: '#ctor(Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext,Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector,Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStoreSource,Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions)'
  parent: Microsoft.EntityFrameworkCore.Query.Internal.InMemoryQueryContextFactory
  langs:
  - csharp
  - vb
  name: InMemoryQueryContextFactory(ICurrentDbContext, IConcurrencyDetector, IInMemoryStoreSource, IDbContextOptions)
  nameWithType: InMemoryQueryContextFactory.InMemoryQueryContextFactory(ICurrentDbContext, IConcurrencyDetector, IInMemoryStoreSource, IDbContextOptions)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.InMemoryQueryContextFactory.InMemoryQueryContextFactory(Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext, Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector, Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStoreSource, Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.InMemory/Query/Internal/InMemoryQueryContextFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.InMemory/Query/Internal/InMemoryQueryContextFactory.cs
    startLine: 22
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public InMemoryQueryContextFactory(ICurrentDbContext currentContext, IConcurrencyDetector concurrencyDetector, IInMemoryStoreSource storeSource, IDbContextOptions contextOptions)
    content.vb: Public Sub New(currentContext As ICurrentDbContext, concurrencyDetector As IConcurrencyDetector, storeSource As IInMemoryStoreSource, contextOptions As IDbContextOptions)
    parameters:
    - id: currentContext
      type: Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext
    - id: concurrencyDetector
      type: Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector
    - id: storeSource
      type: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStoreSource
    - id: contextOptions
      type: Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Query.Internal.InMemoryQueryContextFactory.Create
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.InMemoryQueryContextFactory.Create
  id: Create
  parent: Microsoft.EntityFrameworkCore.Query.Internal.InMemoryQueryContextFactory
  langs:
  - csharp
  - vb
  name: Create()
  nameWithType: InMemoryQueryContextFactory.Create()
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.InMemoryQueryContextFactory.Create()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.InMemory/Query/Internal/InMemoryQueryContextFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Create
    path: src/Microsoft.EntityFrameworkCore.InMemory/Query/Internal/InMemoryQueryContextFactory.cs
    startLine: 36
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public override QueryContext Create()
    content.vb: Public Overrides Function Create As QueryContext
    return:
      type: Microsoft.EntityFrameworkCore.Query.QueryContext
  overridden: Microsoft.EntityFrameworkCore.Query.QueryContextFactory.Create
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.EntityFrameworkCore.Query.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Query.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Query.Internal
  fullName: Microsoft.EntityFrameworkCore.Query.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Query.QueryContextFactory
  commentId: T:Microsoft.EntityFrameworkCore.Query.QueryContextFactory
  parent: Microsoft.EntityFrameworkCore.Query
  isExternal: false
  name: QueryContextFactory
  nameWithType: QueryContextFactory
  fullName: Microsoft.EntityFrameworkCore.Query.QueryContextFactory
- uid: Microsoft.EntityFrameworkCore.Query.IQueryContextFactory
  commentId: T:Microsoft.EntityFrameworkCore.Query.IQueryContextFactory
  parent: Microsoft.EntityFrameworkCore.Query
  isExternal: false
  name: IQueryContextFactory
  nameWithType: IQueryContextFactory
  fullName: Microsoft.EntityFrameworkCore.Query.IQueryContextFactory
- uid: Microsoft.EntityFrameworkCore.Query.QueryContextFactory.CreateQueryBuffer
  commentId: M:Microsoft.EntityFrameworkCore.Query.QueryContextFactory.CreateQueryBuffer
  parent: Microsoft.EntityFrameworkCore.Query.QueryContextFactory
  isExternal: false
  name: CreateQueryBuffer()
  nameWithType: QueryContextFactory.CreateQueryBuffer()
  fullName: Microsoft.EntityFrameworkCore.Query.QueryContextFactory.CreateQueryBuffer()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.QueryContextFactory.CreateQueryBuffer
    name: CreateQueryBuffer
    nameWithType: QueryContextFactory.CreateQueryBuffer
    fullName: Microsoft.EntityFrameworkCore.Query.QueryContextFactory.CreateQueryBuffer
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.QueryContextFactory.CreateQueryBuffer
    name: CreateQueryBuffer
    nameWithType: QueryContextFactory.CreateQueryBuffer
    fullName: Microsoft.EntityFrameworkCore.Query.QueryContextFactory.CreateQueryBuffer
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.QueryContextFactory.ChangeDetector
  commentId: P:Microsoft.EntityFrameworkCore.Query.QueryContextFactory.ChangeDetector
  parent: Microsoft.EntityFrameworkCore.Query.QueryContextFactory
  isExternal: false
  name: ChangeDetector
  nameWithType: QueryContextFactory.ChangeDetector
  fullName: Microsoft.EntityFrameworkCore.Query.QueryContextFactory.ChangeDetector
- uid: Microsoft.EntityFrameworkCore.Query.QueryContextFactory.StateManager
  commentId: P:Microsoft.EntityFrameworkCore.Query.QueryContextFactory.StateManager
  parent: Microsoft.EntityFrameworkCore.Query.QueryContextFactory
  isExternal: false
  name: StateManager
  nameWithType: QueryContextFactory.StateManager
  fullName: Microsoft.EntityFrameworkCore.Query.QueryContextFactory.StateManager
- uid: Microsoft.EntityFrameworkCore.Query.QueryContextFactory.ConcurrencyDetector
  commentId: P:Microsoft.EntityFrameworkCore.Query.QueryContextFactory.ConcurrencyDetector
  parent: Microsoft.EntityFrameworkCore.Query.QueryContextFactory
  isExternal: false
  name: ConcurrencyDetector
  nameWithType: QueryContextFactory.ConcurrencyDetector
  fullName: Microsoft.EntityFrameworkCore.Query.QueryContextFactory.ConcurrencyDetector
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Query
  commentId: N:Microsoft.EntityFrameworkCore.Query
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query
  nameWithType: Microsoft.EntityFrameworkCore.Query
  fullName: Microsoft.EntityFrameworkCore.Query
- uid: Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext
  commentId: T:Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext
  parent: Microsoft.EntityFrameworkCore.Internal
  isExternal: false
  name: ICurrentDbContext
  nameWithType: ICurrentDbContext
  fullName: Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext
- uid: Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector
  commentId: T:Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector
  parent: Microsoft.EntityFrameworkCore.Internal
  isExternal: false
  name: IConcurrencyDetector
  nameWithType: IConcurrencyDetector
  fullName: Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStoreSource
  commentId: T:Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStoreSource
  parent: Microsoft.EntityFrameworkCore.Storage.Internal
  isExternal: false
  name: IInMemoryStoreSource
  nameWithType: IInMemoryStoreSource
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStoreSource
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions
  parent: Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: IDbContextOptions
  nameWithType: IDbContextOptions
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions
- uid: Microsoft.EntityFrameworkCore.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Internal
  fullName: Microsoft.EntityFrameworkCore.Internal
- uid: Microsoft.EntityFrameworkCore.Storage.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Storage.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Storage.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Storage.Internal
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal
- uid: Microsoft.EntityFrameworkCore.Infrastructure
  commentId: N:Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Infrastructure
  nameWithType: Microsoft.EntityFrameworkCore.Infrastructure
  fullName: Microsoft.EntityFrameworkCore.Infrastructure
- uid: Microsoft.EntityFrameworkCore.Query.QueryContextFactory.Create
  commentId: M:Microsoft.EntityFrameworkCore.Query.QueryContextFactory.Create
  parent: Microsoft.EntityFrameworkCore.Query.QueryContextFactory
  isExternal: false
  name: Create()
  nameWithType: QueryContextFactory.Create()
  fullName: Microsoft.EntityFrameworkCore.Query.QueryContextFactory.Create()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.QueryContextFactory.Create
    name: Create
    nameWithType: QueryContextFactory.Create
    fullName: Microsoft.EntityFrameworkCore.Query.QueryContextFactory.Create
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.QueryContextFactory.Create
    name: Create
    nameWithType: QueryContextFactory.Create
    fullName: Microsoft.EntityFrameworkCore.Query.QueryContextFactory.Create
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.QueryContext
  commentId: T:Microsoft.EntityFrameworkCore.Query.QueryContext
  parent: Microsoft.EntityFrameworkCore.Query
  isExternal: false
  name: QueryContext
  nameWithType: QueryContext
  fullName: Microsoft.EntityFrameworkCore.Query.QueryContext
