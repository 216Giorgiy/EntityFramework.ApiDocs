### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTestFramework
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTestFramework
  id: ConditionalTestFramework
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit
  children:
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTestFramework.#ctor(IMessageSink)
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTestFramework.CreateExecutor(System.Reflection.AssemblyName)
  langs:
  - csharp
  - vb
  name: ConditionalTestFramework
  nameWithType: ConditionalTestFramework
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTestFramework
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestUtilities/Xunit/ConditionalTestFramework.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ConditionalTestFramework
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestUtilities/Xunit/ConditionalTestFramework.cs
    startLine: 11
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit
  syntax:
    content: 'public class ConditionalTestFramework : XunitTestFramework'
    content.vb: >-
      Public Class ConditionalTestFramework
          Inherits XunitTestFramework
  inheritance:
  - System.Object
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTestFramework.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTestFramework.#ctor(IMessageSink)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTestFramework.#ctor(IMessageSink)
  id: '#ctor(IMessageSink)'
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTestFramework
  langs:
  - csharp
  - vb
  name: ConditionalTestFramework(IMessageSink)
  nameWithType: ConditionalTestFramework.ConditionalTestFramework(IMessageSink)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTestFramework.ConditionalTestFramework(IMessageSink)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestUtilities/Xunit/ConditionalTestFramework.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestUtilities/Xunit/ConditionalTestFramework.cs
    startLine: 13
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit
  syntax:
    content: public ConditionalTestFramework(IMessageSink messageSink)
    content.vb: Public Sub New(messageSink As IMessageSink)
    parameters:
    - id: messageSink
      type: IMessageSink
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTestFramework.CreateExecutor(System.Reflection.AssemblyName)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTestFramework.CreateExecutor(System.Reflection.AssemblyName)
  id: CreateExecutor(System.Reflection.AssemblyName)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTestFramework
  langs:
  - csharp
  - vb
  name: CreateExecutor(AssemblyName)
  nameWithType: ConditionalTestFramework.CreateExecutor(AssemblyName)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTestFramework.CreateExecutor(System.Reflection.AssemblyName)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestUtilities/Xunit/ConditionalTestFramework.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: CreateExecutor
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestUtilities/Xunit/ConditionalTestFramework.cs
    startLine: 22
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit
  syntax:
    content: protected override ITestFrameworkExecutor CreateExecutor(AssemblyName assemblyName)
    content.vb: Protected Overrides Function CreateExecutor(assemblyName As AssemblyName) As ITestFrameworkExecutor
    parameters:
    - id: assemblyName
      type: System.Reflection.AssemblyName
    return:
      type: ITestFrameworkExecutor
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit
  commentId: N:Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit
  nameWithType: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTestFramework.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<ConditionalTestFramework, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<ConditionalTestFramework, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTestFramework, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of ConditionalTestFramework, TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTestFramework, TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of ConditionalTestFramework, TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<ConditionalTestFramework, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<ConditionalTestFramework, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTestFramework, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of ConditionalTestFramework, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of ConditionalTestFramework, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTestFramework, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: IMessageSink
  isExternal: true
  name: IMessageSink
  nameWithType: IMessageSink
  fullName: IMessageSink
- uid: System.Reflection.AssemblyName
  commentId: T:System.Reflection.AssemblyName
  parent: System.Reflection
  isExternal: true
  name: AssemblyName
  nameWithType: AssemblyName
  fullName: System.Reflection.AssemblyName
- uid: ITestFrameworkExecutor
  commentId: '!:ITestFrameworkExecutor'
  isExternal: true
  name: ITestFrameworkExecutor
  nameWithType: ITestFrameworkExecutor
  fullName: ITestFrameworkExecutor
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: false
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
