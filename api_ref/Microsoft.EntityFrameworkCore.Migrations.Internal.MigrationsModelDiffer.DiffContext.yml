### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext
  commentId: T:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext
  id: MigrationsModelDiffer.DiffContext
  parent: Microsoft.EntityFrameworkCore.Migrations.Internal
  children:
  - Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.AddCreate(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Migrations.Operations.CreateTableOperation)
  - Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.AddDrop(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Migrations.Operations.DropTableOperation)
  - Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.AddMapping(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  - Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.AddMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IProperty)
  - Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.FindCreate(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  - Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.FindDrop(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  - Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.FindSource(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  - Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.FindSource(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  - Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.FindTarget(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  - Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.FindTarget(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  - Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.GetMetadata(Microsoft.EntityFrameworkCore.Migrations.Operations.DropTableOperation)
  langs:
  - csharp
  - vb
  name: MigrationsModelDiffer.DiffContext
  nameWithType: MigrationsModelDiffer.DiffContext
  fullName: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: DiffContext
    path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
    startLine: 1266
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Migrations.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected class DiffContext
    content.vb: Protected Class DiffContext
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - protected
  - class
  modifiers.vb:
  - Protected
  - Class
- uid: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.AddMapping(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.AddMapping(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  id: AddMapping(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  parent: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext
  langs:
  - csharp
  - vb
  name: AddMapping(IEntityType, IEntityType)
  nameWithType: MigrationsModelDiffer.DiffContext.AddMapping(IEntityType, IEntityType)
  fullName: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.AddMapping(Microsoft.EntityFrameworkCore.Metadata.IEntityType, Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AddMapping
    path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
    startLine: 1286
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Migrations.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual void AddMapping(IEntityType source, IEntityType target)
    content.vb: Public Overridable Sub AddMapping(source As IEntityType, target As IEntityType)
    parameters:
    - id: source
      type: Microsoft.EntityFrameworkCore.Metadata.IEntityType
    - id: target
      type: Microsoft.EntityFrameworkCore.Metadata.IEntityType
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.AddMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IProperty)
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.AddMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IProperty)
  id: AddMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IProperty)
  parent: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext
  langs:
  - csharp
  - vb
  name: AddMapping(IProperty, IProperty)
  nameWithType: MigrationsModelDiffer.DiffContext.AddMapping(IProperty, IProperty)
  fullName: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.AddMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty, Microsoft.EntityFrameworkCore.Metadata.IProperty)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AddMapping
    path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
    startLine: 1296
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Migrations.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual void AddMapping(IProperty source, IProperty target)
    content.vb: Public Overridable Sub AddMapping(source As IProperty, target As IProperty)
    parameters:
    - id: source
      type: Microsoft.EntityFrameworkCore.Metadata.IProperty
    - id: target
      type: Microsoft.EntityFrameworkCore.Metadata.IProperty
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.AddCreate(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Migrations.Operations.CreateTableOperation)
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.AddCreate(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Migrations.Operations.CreateTableOperation)
  id: AddCreate(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Migrations.Operations.CreateTableOperation)
  parent: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext
  langs:
  - csharp
  - vb
  name: AddCreate(IEntityType, CreateTableOperation)
  nameWithType: MigrationsModelDiffer.DiffContext.AddCreate(IEntityType, CreateTableOperation)
  fullName: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.AddCreate(Microsoft.EntityFrameworkCore.Metadata.IEntityType, Microsoft.EntityFrameworkCore.Migrations.Operations.CreateTableOperation)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AddCreate
    path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
    startLine: 1306
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Migrations.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual void AddCreate(IEntityType target, CreateTableOperation operation)
    content.vb: Public Overridable Sub AddCreate(target As IEntityType, operation As CreateTableOperation)
    parameters:
    - id: target
      type: Microsoft.EntityFrameworkCore.Metadata.IEntityType
    - id: operation
      type: Microsoft.EntityFrameworkCore.Migrations.Operations.CreateTableOperation
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.AddDrop(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Migrations.Operations.DropTableOperation)
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.AddDrop(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Migrations.Operations.DropTableOperation)
  id: AddDrop(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Migrations.Operations.DropTableOperation)
  parent: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext
  langs:
  - csharp
  - vb
  name: AddDrop(IEntityType, DropTableOperation)
  nameWithType: MigrationsModelDiffer.DiffContext.AddDrop(IEntityType, DropTableOperation)
  fullName: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.AddDrop(Microsoft.EntityFrameworkCore.Metadata.IEntityType, Microsoft.EntityFrameworkCore.Migrations.Operations.DropTableOperation)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AddDrop
    path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
    startLine: 1313
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Migrations.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual void AddDrop(IEntityType source, DropTableOperation operation)
    content.vb: Public Overridable Sub AddDrop(source As IEntityType, operation As DropTableOperation)
    parameters:
    - id: source
      type: Microsoft.EntityFrameworkCore.Metadata.IEntityType
    - id: operation
      type: Microsoft.EntityFrameworkCore.Migrations.Operations.DropTableOperation
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.FindTarget(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.FindTarget(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  id: FindTarget(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  parent: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext
  langs:
  - csharp
  - vb
  name: FindTarget(IEntityType)
  nameWithType: MigrationsModelDiffer.DiffContext.FindTarget(IEntityType)
  fullName: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.FindTarget(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: FindTarget
    path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
    startLine: 1323
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Migrations.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual IEntityType FindTarget(IEntityType source)
    content.vb: Public Overridable Function FindTarget(source As IEntityType) As IEntityType
    parameters:
    - id: source
      type: Microsoft.EntityFrameworkCore.Metadata.IEntityType
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.IEntityType
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.FindTarget(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.FindTarget(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  id: FindTarget(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  parent: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext
  langs:
  - csharp
  - vb
  name: FindTarget(IProperty)
  nameWithType: MigrationsModelDiffer.DiffContext.FindTarget(IProperty)
  fullName: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.FindTarget(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: FindTarget
    path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
    startLine: 1335
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Migrations.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual IProperty FindTarget(IProperty source)
    content.vb: Public Overridable Function FindTarget(source As IProperty) As IProperty
    parameters:
    - id: source
      type: Microsoft.EntityFrameworkCore.Metadata.IProperty
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.IProperty
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.FindSource(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.FindSource(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  id: FindSource(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  parent: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext
  langs:
  - csharp
  - vb
  name: FindSource(IEntityType)
  nameWithType: MigrationsModelDiffer.DiffContext.FindSource(IEntityType)
  fullName: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.FindSource(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: FindSource
    path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
    startLine: 1347
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Migrations.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual IEntityType FindSource(IEntityType target)
    content.vb: Public Overridable Function FindSource(target As IEntityType) As IEntityType
    parameters:
    - id: target
      type: Microsoft.EntityFrameworkCore.Metadata.IEntityType
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.IEntityType
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.FindSource(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.FindSource(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  id: FindSource(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  parent: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext
  langs:
  - csharp
  - vb
  name: FindSource(IProperty)
  nameWithType: MigrationsModelDiffer.DiffContext.FindSource(IProperty)
  fullName: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.FindSource(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: FindSource
    path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
    startLine: 1359
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Migrations.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual IProperty FindSource(IProperty target)
    content.vb: Public Overridable Function FindSource(target As IProperty) As IProperty
    parameters:
    - id: target
      type: Microsoft.EntityFrameworkCore.Metadata.IProperty
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.IProperty
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.FindCreate(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.FindCreate(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  id: FindCreate(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  parent: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext
  langs:
  - csharp
  - vb
  name: FindCreate(IEntityType)
  nameWithType: MigrationsModelDiffer.DiffContext.FindCreate(IEntityType)
  fullName: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.FindCreate(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: FindCreate
    path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
    startLine: 1371
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Migrations.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual CreateTableOperation FindCreate(IEntityType target)
    content.vb: Public Overridable Function FindCreate(target As IEntityType) As CreateTableOperation
    parameters:
    - id: target
      type: Microsoft.EntityFrameworkCore.Metadata.IEntityType
    return:
      type: Microsoft.EntityFrameworkCore.Migrations.Operations.CreateTableOperation
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.FindDrop(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.FindDrop(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  id: FindDrop(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  parent: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext
  langs:
  - csharp
  - vb
  name: FindDrop(IEntityType)
  nameWithType: MigrationsModelDiffer.DiffContext.FindDrop(IEntityType)
  fullName: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.FindDrop(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: FindDrop
    path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
    startLine: 1383
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Migrations.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual DropTableOperation FindDrop(IEntityType source)
    content.vb: Public Overridable Function FindDrop(source As IEntityType) As DropTableOperation
    parameters:
    - id: source
      type: Microsoft.EntityFrameworkCore.Metadata.IEntityType
    return:
      type: Microsoft.EntityFrameworkCore.Migrations.Operations.DropTableOperation
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.GetMetadata(Microsoft.EntityFrameworkCore.Migrations.Operations.DropTableOperation)
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.GetMetadata(Microsoft.EntityFrameworkCore.Migrations.Operations.DropTableOperation)
  id: GetMetadata(Microsoft.EntityFrameworkCore.Migrations.Operations.DropTableOperation)
  parent: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext
  langs:
  - csharp
  - vb
  name: GetMetadata(DropTableOperation)
  nameWithType: MigrationsModelDiffer.DiffContext.GetMetadata(DropTableOperation)
  fullName: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.GetMetadata(Microsoft.EntityFrameworkCore.Migrations.Operations.DropTableOperation)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetMetadata
    path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
    startLine: 1395
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Migrations.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual IEntityType GetMetadata(DropTableOperation operation)
    content.vb: Public Overridable Function GetMetadata(operation As DropTableOperation) As IEntityType
    parameters:
    - id: operation
      type: Microsoft.EntityFrameworkCore.Migrations.Operations.DropTableOperation
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.IEntityType
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.EntityFrameworkCore.Migrations.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Migrations.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Migrations.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Migrations.Internal
  fullName: Microsoft.EntityFrameworkCore.Migrations.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Metadata.IEntityType
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IEntityType
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IEntityType
  nameWithType: IEntityType
  fullName: Microsoft.EntityFrameworkCore.Metadata.IEntityType
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IProperty
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IProperty
  nameWithType: IProperty
  fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
- uid: Microsoft.EntityFrameworkCore.Migrations.Operations.CreateTableOperation
  commentId: T:Microsoft.EntityFrameworkCore.Migrations.Operations.CreateTableOperation
  parent: Microsoft.EntityFrameworkCore.Migrations.Operations
  isExternal: false
  name: CreateTableOperation
  nameWithType: CreateTableOperation
  fullName: Microsoft.EntityFrameworkCore.Migrations.Operations.CreateTableOperation
- uid: Microsoft.EntityFrameworkCore.Migrations.Operations
  commentId: N:Microsoft.EntityFrameworkCore.Migrations.Operations
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Migrations.Operations
  nameWithType: Microsoft.EntityFrameworkCore.Migrations.Operations
  fullName: Microsoft.EntityFrameworkCore.Migrations.Operations
- uid: Microsoft.EntityFrameworkCore.Migrations.Operations.DropTableOperation
  commentId: T:Microsoft.EntityFrameworkCore.Migrations.Operations.DropTableOperation
  parent: Microsoft.EntityFrameworkCore.Migrations.Operations
  isExternal: false
  name: DropTableOperation
  nameWithType: DropTableOperation
  fullName: Microsoft.EntityFrameworkCore.Migrations.Operations.DropTableOperation
