### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator
  commentId: T:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator
  id: IncludeResultOperator
  parent: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
  children:
  - Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator.#ctor(System.Linq.Expressions.MemberExpression)
  - Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator.#ctor(System.String)
  - Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator.AppendToNavigationPath(System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo})
  - Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator.ChainedNavigationProperties
  - Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator.Clone(CloneContext)
  - Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator.ExecuteInMemory``1(StreamedSequence)
  - Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator.NavigationPropertyPath
  - Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator.QueryModel
  - Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator.QuerySource
  - Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator.StringNavigationPropertyPath
  - Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator.ToString
  - Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator.TransformExpressions(System.Func{System.Linq.Expressions.Expression,System.Linq.Expressions.Expression})
  langs:
  - csharp
  - vb
  name: IncludeResultOperator
  nameWithType: IncludeResultOperator
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/IncludeResultOperator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: IncludeResultOperator
    path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/IncludeResultOperator.cs
    startLine: 22
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public class IncludeResultOperator : SequenceTypePreservingResultOperatorBase, IQueryAnnotation'
    content.vb: >-
      Public Class IncludeResultOperator
          Inherits SequenceTypePreservingResultOperatorBase
          Implements IQueryAnnotation
  inheritance:
  - System.Object
  implements:
  - Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator.#ctor(System.Linq.Expressions.MemberExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator.#ctor(System.Linq.Expressions.MemberExpression)
  id: '#ctor(System.Linq.Expressions.MemberExpression)'
  parent: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator
  langs:
  - csharp
  - vb
  name: IncludeResultOperator(MemberExpression)
  nameWithType: IncludeResultOperator.IncludeResultOperator(MemberExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator.IncludeResultOperator(System.Linq.Expressions.MemberExpression)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/IncludeResultOperator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/IncludeResultOperator.cs
    startLine: 30
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public IncludeResultOperator(MemberExpression navigationPropertyPath)
    content.vb: Public Sub New(navigationPropertyPath As MemberExpression)
    parameters:
    - id: navigationPropertyPath
      type: System.Linq.Expressions.MemberExpression
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator.#ctor(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator
  langs:
  - csharp
  - vb
  name: IncludeResultOperator(String)
  nameWithType: IncludeResultOperator.IncludeResultOperator(String)
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator.IncludeResultOperator(System.String)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/IncludeResultOperator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/IncludeResultOperator.cs
    startLine: 40
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public IncludeResultOperator(string navigationPropertyPath)
    content.vb: Public Sub New(navigationPropertyPath As String)
    parameters:
    - id: navigationPropertyPath
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator.QuerySource
  commentId: P:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator.QuerySource
  id: QuerySource
  parent: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator
  langs:
  - csharp
  - vb
  name: QuerySource
  nameWithType: IncludeResultOperator.QuerySource
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator.QuerySource
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/IncludeResultOperator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: QuerySource
    path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/IncludeResultOperator.cs
    startLine: 57
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual IQuerySource QuerySource { get; set; }
    content.vb: Public Overridable Property QuerySource As IQuerySource
    parameters: []
    return:
      type: IQuerySource
  implements:
  - Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation.QuerySource
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator.QueryModel
  commentId: P:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator.QueryModel
  id: QueryModel
  parent: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator
  langs:
  - csharp
  - vb
  name: QueryModel
  nameWithType: IncludeResultOperator.QueryModel
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator.QueryModel
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/IncludeResultOperator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: QueryModel
    path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/IncludeResultOperator.cs
    startLine: 63
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual QueryModel QueryModel { get; set; }
    content.vb: Public Overridable Property QueryModel As QueryModel
    parameters: []
    return:
      type: QueryModel
  implements:
  - Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation.QueryModel
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator.NavigationPropertyPath
  commentId: P:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator.NavigationPropertyPath
  id: NavigationPropertyPath
  parent: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator
  langs:
  - csharp
  - vb
  name: NavigationPropertyPath
  nameWithType: IncludeResultOperator.NavigationPropertyPath
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator.NavigationPropertyPath
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/IncludeResultOperator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: NavigationPropertyPath
    path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/IncludeResultOperator.cs
    startLine: 69
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual MemberExpression NavigationPropertyPath { get; }
    content.vb: Public Overridable ReadOnly Property NavigationPropertyPath As MemberExpression
    parameters: []
    return:
      type: System.Linq.Expressions.MemberExpression
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator.StringNavigationPropertyPath
  commentId: P:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator.StringNavigationPropertyPath
  id: StringNavigationPropertyPath
  parent: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator
  langs:
  - csharp
  - vb
  name: StringNavigationPropertyPath
  nameWithType: IncludeResultOperator.StringNavigationPropertyPath
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator.StringNavigationPropertyPath
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/IncludeResultOperator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: StringNavigationPropertyPath
    path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/IncludeResultOperator.cs
    startLine: 75
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual string StringNavigationPropertyPath { get; }
    content.vb: Public Overridable ReadOnly Property StringNavigationPropertyPath As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator.ChainedNavigationProperties
  commentId: P:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator.ChainedNavigationProperties
  id: ChainedNavigationProperties
  parent: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator
  langs:
  - csharp
  - vb
  name: ChainedNavigationProperties
  nameWithType: IncludeResultOperator.ChainedNavigationProperties
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator.ChainedNavigationProperties
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/IncludeResultOperator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ChainedNavigationProperties
    path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/IncludeResultOperator.cs
    startLine: 81
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual IReadOnlyList<PropertyInfo> ChainedNavigationProperties { get; }
    content.vb: Public Overridable ReadOnly Property ChainedNavigationProperties As IReadOnlyList(Of PropertyInfo)
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo}
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator.AppendToNavigationPath(System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo})
  commentId: M:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator.AppendToNavigationPath(System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo})
  id: AppendToNavigationPath(System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo})
  parent: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator
  langs:
  - csharp
  - vb
  name: AppendToNavigationPath(IReadOnlyList<PropertyInfo>)
  nameWithType: IncludeResultOperator.AppendToNavigationPath(IReadOnlyList<PropertyInfo>)
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator.AppendToNavigationPath(System.Collections.Generic.IReadOnlyList<System.Reflection.PropertyInfo>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/IncludeResultOperator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: AppendToNavigationPath
    path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/IncludeResultOperator.cs
    startLine: 87
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual void AppendToNavigationPath(IReadOnlyList<PropertyInfo> propertyInfos)
    content.vb: Public Overridable Sub AppendToNavigationPath(propertyInfos As IReadOnlyList(Of PropertyInfo))
    parameters:
    - id: propertyInfos
      type: System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo}
  nameWithType.vb: IncludeResultOperator.AppendToNavigationPath(IReadOnlyList(Of PropertyInfo))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator.AppendToNavigationPath(System.Collections.Generic.IReadOnlyList(Of System.Reflection.PropertyInfo))
  name.vb: AppendToNavigationPath(IReadOnlyList(Of PropertyInfo))
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator.ToString
  commentId: M:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator.ToString
  id: ToString
  parent: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: IncludeResultOperator.ToString()
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator.ToString()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/IncludeResultOperator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ToString
    path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/IncludeResultOperator.cs
    startLine: 101
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator.Clone(CloneContext)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator.Clone(CloneContext)
  id: Clone(CloneContext)
  parent: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator
  langs:
  - csharp
  - vb
  name: Clone(CloneContext)
  nameWithType: IncludeResultOperator.Clone(CloneContext)
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator.Clone(CloneContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/IncludeResultOperator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Clone
    path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/IncludeResultOperator.cs
    startLine: 114
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public override ResultOperatorBase Clone(CloneContext cloneContext)
    content.vb: Public Overrides Function Clone(cloneContext As CloneContext) As ResultOperatorBase
    parameters:
    - id: cloneContext
      type: CloneContext
    return:
      type: ResultOperatorBase
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator.TransformExpressions(System.Func{System.Linq.Expressions.Expression,System.Linq.Expressions.Expression})
  commentId: M:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator.TransformExpressions(System.Func{System.Linq.Expressions.Expression,System.Linq.Expressions.Expression})
  id: TransformExpressions(System.Func{System.Linq.Expressions.Expression,System.Linq.Expressions.Expression})
  parent: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator
  langs:
  - csharp
  - vb
  name: TransformExpressions(Func<Expression, Expression>)
  nameWithType: IncludeResultOperator.TransformExpressions(Func<Expression, Expression>)
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator.TransformExpressions(System.Func<System.Linq.Expressions.Expression, System.Linq.Expressions.Expression>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/IncludeResultOperator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: TransformExpressions
    path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/IncludeResultOperator.cs
    startLine: 126
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public override void TransformExpressions(Func<Expression, Expression> transformation)
    content.vb: Public Overrides Sub TransformExpressions(transformation As Func(Of Expression, Expression))
    parameters:
    - id: transformation
      type: System.Func{System.Linq.Expressions.Expression,System.Linq.Expressions.Expression}
  nameWithType.vb: IncludeResultOperator.TransformExpressions(Func(Of Expression, Expression))
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator.TransformExpressions(System.Func(Of System.Linq.Expressions.Expression, System.Linq.Expressions.Expression))
  name.vb: TransformExpressions(Func(Of Expression, Expression))
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator.ExecuteInMemory``1(StreamedSequence)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator.ExecuteInMemory``1(StreamedSequence)
  id: ExecuteInMemory``1(StreamedSequence)
  parent: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator
  langs:
  - csharp
  - vb
  name: ExecuteInMemory<T>(StreamedSequence)
  nameWithType: IncludeResultOperator.ExecuteInMemory<T>(StreamedSequence)
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator.ExecuteInMemory<T>(StreamedSequence)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/IncludeResultOperator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ExecuteInMemory
    path: src/Microsoft.EntityFrameworkCore/Query/ResultOperators/Internal/IncludeResultOperator.cs
    startLine: 134
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public override StreamedSequence ExecuteInMemory<T>(StreamedSequence input)
    content.vb: Public Overrides Function ExecuteInMemory(Of T)(input As StreamedSequence) As StreamedSequence
    parameters:
    - id: input
      type: StreamedSequence
    typeParameters:
    - id: T
    return:
      type: StreamedSequence
  nameWithType.vb: IncludeResultOperator.ExecuteInMemory(Of T)(StreamedSequence)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator.ExecuteInMemory(Of T)(StreamedSequence)
  name.vb: ExecuteInMemory(Of T)(StreamedSequence)
references:
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation
  commentId: T:Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation
  parent: Microsoft.EntityFrameworkCore.Query.ResultOperators
  isExternal: false
  name: IQueryAnnotation
  nameWithType: IQueryAnnotation
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<IncludeResultOperator, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<IncludeResultOperator, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of IncludeResultOperator, TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator, TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of IncludeResultOperator, TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<IncludeResultOperator, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<IncludeResultOperator, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of IncludeResultOperator, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of IncludeResultOperator, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators
  commentId: N:Microsoft.EntityFrameworkCore.Query.ResultOperators
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query.ResultOperators
  nameWithType: Microsoft.EntityFrameworkCore.Query.ResultOperators
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: System.Linq.Expressions.MemberExpression
  commentId: T:System.Linq.Expressions.MemberExpression
  parent: System.Linq.Expressions
  isExternal: true
  name: MemberExpression
  nameWithType: MemberExpression
  fullName: System.Linq.Expressions.MemberExpression
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: false
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation.QuerySource
  commentId: P:Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation.QuerySource
  parent: Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation
  isExternal: false
  name: QuerySource
  nameWithType: IQueryAnnotation.QuerySource
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation.QuerySource
- uid: IQuerySource
  isExternal: true
  name: IQuerySource
  nameWithType: IQuerySource
  fullName: IQuerySource
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation.QueryModel
  commentId: P:Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation.QueryModel
  parent: Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation
  isExternal: false
  name: QueryModel
  nameWithType: IQueryAnnotation.QueryModel
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation.QueryModel
- uid: QueryModel
  isExternal: true
  name: QueryModel
  nameWithType: QueryModel
  fullName: QueryModel
- uid: System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo}
  commentId: T:System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<PropertyInfo>
  nameWithType: IReadOnlyList<PropertyInfo>
  fullName: System.Collections.Generic.IReadOnlyList<System.Reflection.PropertyInfo>
  nameWithType.vb: IReadOnlyList(Of PropertyInfo)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of System.Reflection.PropertyInfo)
  name.vb: IReadOnlyList(Of PropertyInfo)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    nameWithType: PropertyInfo
    fullName: System.Reflection.PropertyInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    nameWithType: PropertyInfo
    fullName: System.Reflection.PropertyInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: CloneContext
  isExternal: true
  name: CloneContext
  nameWithType: CloneContext
  fullName: CloneContext
- uid: ResultOperatorBase
  isExternal: true
  name: ResultOperatorBase
  nameWithType: ResultOperatorBase
  fullName: ResultOperatorBase
- uid: System.Func{System.Linq.Expressions.Expression,System.Linq.Expressions.Expression}
  commentId: T:System.Func{System.Linq.Expressions.Expression,System.Linq.Expressions.Expression}
  parent: System
  definition: System.Func`2
  name: Func<Expression, Expression>
  nameWithType: Func<Expression, Expression>
  fullName: System.Func<System.Linq.Expressions.Expression, System.Linq.Expressions.Expression>
  nameWithType.vb: Func(Of Expression, Expression)
  fullname.vb: System.Func(Of System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  name.vb: Func(Of Expression, Expression)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullname.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: StreamedSequence
  isExternal: true
  name: StreamedSequence
  nameWithType: StreamedSequence
  fullName: StreamedSequence
