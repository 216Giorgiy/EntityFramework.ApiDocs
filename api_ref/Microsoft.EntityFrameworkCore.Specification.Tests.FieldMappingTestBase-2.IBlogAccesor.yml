### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.IBlogAccesor
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.IBlogAccesor
  id: FieldMappingTestBase`2.IBlogAccesor
  parent: Microsoft.EntityFrameworkCore.Specification.Tests
  children:
  - Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.IBlogAccesor.AccessId
  - Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.IBlogAccesor.AccessPosts
  - Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.IBlogAccesor.AccessTitle
  langs:
  - csharp
  - vb
  name: FieldMappingTestBase<TTestStore, TFixture>.IBlogAccesor
  nameWithType: FieldMappingTestBase<TTestStore, TFixture>.IBlogAccesor
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase<TTestStore, TFixture>.IBlogAccesor
  type: Interface
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/FieldMappingTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: IBlogAccesor
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/FieldMappingTestBase.cs
    startLine: 1228
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: protected interface IBlogAccesor
    content.vb: Protected Interface IBlogAccesor
  nameWithType.vb: FieldMappingTestBase(Of TTestStore, TFixture).IBlogAccesor
  modifiers.csharp:
  - protected
  - interface
  modifiers.vb:
  - Protected
  - Interface
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase(Of TTestStore, TFixture).IBlogAccesor
  name.vb: FieldMappingTestBase(Of TTestStore, TFixture).IBlogAccesor
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.IBlogAccesor.AccessId
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.IBlogAccesor.AccessId
  id: AccessId
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.IBlogAccesor
  langs:
  - csharp
  - vb
  name: AccessId
  nameWithType: FieldMappingTestBase<TTestStore, TFixture>.IBlogAccesor.AccessId
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase<TTestStore, TFixture>.IBlogAccesor.AccessId
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/FieldMappingTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AccessId
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/FieldMappingTestBase.cs
    startLine: 1230
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: int AccessId { get; set; }
    content.vb: Property AccessId As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.IBlogAccesor.AccessId*
  nameWithType.vb: FieldMappingTestBase(Of TTestStore, TFixture).IBlogAccesor.AccessId
  modifiers.csharp:
  - get
  - set
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase(Of TTestStore, TFixture).IBlogAccesor.AccessId
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.IBlogAccesor.AccessTitle
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.IBlogAccesor.AccessTitle
  id: AccessTitle
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.IBlogAccesor
  langs:
  - csharp
  - vb
  name: AccessTitle
  nameWithType: FieldMappingTestBase<TTestStore, TFixture>.IBlogAccesor.AccessTitle
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase<TTestStore, TFixture>.IBlogAccesor.AccessTitle
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/FieldMappingTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AccessTitle
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/FieldMappingTestBase.cs
    startLine: 1231
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: string AccessTitle { get; set; }
    content.vb: Property AccessTitle As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.IBlogAccesor.AccessTitle*
  nameWithType.vb: FieldMappingTestBase(Of TTestStore, TFixture).IBlogAccesor.AccessTitle
  modifiers.csharp:
  - get
  - set
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase(Of TTestStore, TFixture).IBlogAccesor.AccessTitle
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.IBlogAccesor.AccessPosts
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.IBlogAccesor.AccessPosts
  id: AccessPosts
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.IBlogAccesor
  langs:
  - csharp
  - vb
  name: AccessPosts
  nameWithType: FieldMappingTestBase<TTestStore, TFixture>.IBlogAccesor.AccessPosts
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase<TTestStore, TFixture>.IBlogAccesor.AccessPosts
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/FieldMappingTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AccessPosts
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/FieldMappingTestBase.cs
    startLine: 1232
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: IEnumerable<FieldMappingTestBase<TTestStore, TFixture>.IPostAccesor> AccessPosts { get; set; }
    content.vb: Property AccessPosts As IEnumerable(Of FieldMappingTestBase(Of TTestStore, TFixture).IPostAccesor)
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.IPostAccesor}
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.IBlogAccesor.AccessPosts*
  nameWithType.vb: FieldMappingTestBase(Of TTestStore, TFixture).IBlogAccesor.AccessPosts
  modifiers.csharp:
  - get
  - set
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase(Of TTestStore, TFixture).IBlogAccesor.AccessPosts
references:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests
  commentId: N:Microsoft.EntityFrameworkCore.Specification.Tests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Specification.Tests
  nameWithType: Microsoft.EntityFrameworkCore.Specification.Tests
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.IBlogAccesor.AccessId*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.IBlogAccesor.AccessId
  isExternal: false
  name: AccessId
  nameWithType: FieldMappingTestBase<TTestStore, TFixture>.IBlogAccesor.AccessId
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase<TTestStore, TFixture>.IBlogAccesor.AccessId
  nameWithType.vb: FieldMappingTestBase(Of TTestStore, TFixture).IBlogAccesor.AccessId
  fullname.vb: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase(Of TTestStore, TFixture).IBlogAccesor.AccessId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.IBlogAccesor.AccessTitle*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.IBlogAccesor.AccessTitle
  isExternal: false
  name: AccessTitle
  nameWithType: FieldMappingTestBase<TTestStore, TFixture>.IBlogAccesor.AccessTitle
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase<TTestStore, TFixture>.IBlogAccesor.AccessTitle
  nameWithType.vb: FieldMappingTestBase(Of TTestStore, TFixture).IBlogAccesor.AccessTitle
  fullname.vb: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase(Of TTestStore, TFixture).IBlogAccesor.AccessTitle
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.IBlogAccesor.AccessPosts*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.IBlogAccesor.AccessPosts
  isExternal: false
  name: AccessPosts
  nameWithType: FieldMappingTestBase<TTestStore, TFixture>.IBlogAccesor.AccessPosts
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase<TTestStore, TFixture>.IBlogAccesor.AccessPosts
  nameWithType.vb: FieldMappingTestBase(Of TTestStore, TFixture).IBlogAccesor.AccessPosts
  fullname.vb: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase(Of TTestStore, TFixture).IBlogAccesor.AccessPosts
- uid: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.IPostAccesor}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.IPostAccesor}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<FieldMappingTestBase.IPostAccesor<>>
  nameWithType: IEnumerable<FieldMappingTestBase.IPostAccesor<>>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase.IPostAccesor<>>
  nameWithType.vb: IEnumerable(Of FieldMappingTestBase.IPostAccesor(Of ))
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase.IPostAccesor(Of ))
  name.vb: IEnumerable(Of FieldMappingTestBase.IPostAccesor(Of ))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.IPostAccesor
    name: FieldMappingTestBase.IPostAccesor
    nameWithType: FieldMappingTestBase.IPostAccesor
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase.IPostAccesor
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase`2.IPostAccesor
    name: FieldMappingTestBase.IPostAccesor
    nameWithType: FieldMappingTestBase.IPostAccesor
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.FieldMappingTestBase.IPostAccesor
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
