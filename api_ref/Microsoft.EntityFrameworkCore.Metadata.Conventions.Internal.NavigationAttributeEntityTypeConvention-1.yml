### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1
  id: NavigationAttributeEntityTypeConvention`1
  parent: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
  children:
  - Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder)
  - Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)
  - Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.Reflection.PropertyInfo,System.Type,`0)
  - Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.Reflection.PropertyInfo,System.Type,`0)
  - Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.String)
  - Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder,System.String,System.Type)
  - Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder,System.Type,System.Reflection.PropertyInfo,System.Type,`0)
  - Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation)
  - Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation,`0)
  - Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1.ApplyIgnored(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.Reflection.PropertyInfo,System.Type,`0)
  - Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1.FindCandidateNavigationPropertyType(System.Reflection.PropertyInfo)
  langs:
  - csharp
  - vb
  name: NavigationAttributeEntityTypeConvention<TAttribute>
  nameWithType: NavigationAttributeEntityTypeConvention<TAttribute>
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention<TAttribute>
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/Internal/NavigationAttributeEntityTypeConvention.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: NavigationAttributeEntityTypeConvention
    path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/Internal/NavigationAttributeEntityTypeConvention.cs
    startLine: 16
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public abstract class NavigationAttributeEntityTypeConvention<TAttribute> : IEntityTypeConvention, IEntityTypeIgnoredConvention, INavigationConvention, IBaseTypeConvention, IEntityTypeMemberIgnoredConvention where TAttribute : Attribute'
    content.vb: >-
      Public MustInherit Class NavigationAttributeEntityTypeConvention(Of TAttribute As Attribute)
          Implements IEntityTypeConvention, IEntityTypeIgnoredConvention, INavigationConvention, IBaseTypeConvention, IEntityTypeMemberIgnoredConvention
    typeParameters:
    - id: TAttribute
  inheritance:
  - System.Object
  implements:
  - Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeConvention
  - Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeIgnoredConvention
  - Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.INavigationConvention
  - Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IBaseTypeConvention
  - Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeMemberIgnoredConvention
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  nameWithType.vb: NavigationAttributeEntityTypeConvention(Of TAttribute)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention(Of TAttribute)
  name.vb: NavigationAttributeEntityTypeConvention(Of TAttribute)
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder)
  id: Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder)
  parent: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1
  langs:
  - csharp
  - vb
  name: Apply(InternalEntityTypeBuilder)
  nameWithType: NavigationAttributeEntityTypeConvention<TAttribute>.Apply(InternalEntityTypeBuilder)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention<TAttribute>.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/Internal/NavigationAttributeEntityTypeConvention.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Apply
    path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/Internal/NavigationAttributeEntityTypeConvention.cs
    startLine: 23
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual InternalEntityTypeBuilder Apply(InternalEntityTypeBuilder entityTypeBuilder)
    content.vb: Public Overridable Function Apply(entityTypeBuilder As InternalEntityTypeBuilder) As InternalEntityTypeBuilder
    parameters:
    - id: entityTypeBuilder
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  implements:
  - Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder)
  nameWithType.vb: NavigationAttributeEntityTypeConvention(Of TAttribute).Apply(InternalEntityTypeBuilder)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention(Of TAttribute).Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder)
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder,System.String,System.Type)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder,System.String,System.Type)
  id: Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder,System.String,System.Type)
  parent: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1
  langs:
  - csharp
  - vb
  name: Apply(InternalModelBuilder, String, Type)
  nameWithType: NavigationAttributeEntityTypeConvention<TAttribute>.Apply(InternalModelBuilder, String, Type)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention<TAttribute>.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder, System.String, System.Type)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/Internal/NavigationAttributeEntityTypeConvention.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Apply
    path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/Internal/NavigationAttributeEntityTypeConvention.cs
    startLine: 59
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual bool Apply(InternalModelBuilder modelBuilder, string name, Type type)
    content.vb: Public Overridable Function Apply(modelBuilder As InternalModelBuilder, name As String, type As Type) As Boolean
    parameters:
    - id: modelBuilder
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder
    - id: name
      type: System.String
    - id: type
      type: System.Type
    return:
      type: System.Boolean
  implements:
  - Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeIgnoredConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder,System.String,System.Type)
  nameWithType.vb: NavigationAttributeEntityTypeConvention(Of TAttribute).Apply(InternalModelBuilder, String, Type)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention(Of TAttribute).Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder, System.String, System.Type)
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation)
  id: Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation)
  parent: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1
  langs:
  - csharp
  - vb
  name: Apply(InternalRelationshipBuilder, Navigation)
  nameWithType: NavigationAttributeEntityTypeConvention<TAttribute>.Apply(InternalRelationshipBuilder, Navigation)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention<TAttribute>.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder, Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/Internal/NavigationAttributeEntityTypeConvention.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Apply
    path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/Internal/NavigationAttributeEntityTypeConvention.cs
    startLine: 94
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual InternalRelationshipBuilder Apply(InternalRelationshipBuilder relationshipBuilder, Navigation navigation)
    content.vb: Public Overridable Function Apply(relationshipBuilder As InternalRelationshipBuilder, navigation As Navigation) As InternalRelationshipBuilder
    parameters:
    - id: relationshipBuilder
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
    - id: navigation
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
  implements:
  - Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.INavigationConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation)
  nameWithType.vb: NavigationAttributeEntityTypeConvention(Of TAttribute).Apply(InternalRelationshipBuilder, Navigation)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention(Of TAttribute).Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder, Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation)
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)
  id: Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)
  parent: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1
  langs:
  - csharp
  - vb
  name: Apply(InternalEntityTypeBuilder, EntityType)
  nameWithType: NavigationAttributeEntityTypeConvention<TAttribute>.Apply(InternalEntityTypeBuilder, EntityType)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention<TAttribute>.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/Internal/NavigationAttributeEntityTypeConvention.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Apply
    path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/Internal/NavigationAttributeEntityTypeConvention.cs
    startLine: 122
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual bool Apply(InternalEntityTypeBuilder entityTypeBuilder, EntityType oldBaseType)
    content.vb: Public Overridable Function Apply(entityTypeBuilder As InternalEntityTypeBuilder, oldBaseType As EntityType) As Boolean
    parameters:
    - id: entityTypeBuilder
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
    - id: oldBaseType
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
    return:
      type: System.Boolean
  implements:
  - Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IBaseTypeConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)
  nameWithType.vb: NavigationAttributeEntityTypeConvention(Of TAttribute).Apply(InternalEntityTypeBuilder, EntityType)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention(Of TAttribute).Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.String)
  id: Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1
  langs:
  - csharp
  - vb
  name: Apply(InternalEntityTypeBuilder, String)
  nameWithType: NavigationAttributeEntityTypeConvention<TAttribute>.Apply(InternalEntityTypeBuilder, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention<TAttribute>.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/Internal/NavigationAttributeEntityTypeConvention.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Apply
    path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/Internal/NavigationAttributeEntityTypeConvention.cs
    startLine: 158
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual bool Apply(InternalEntityTypeBuilder entityTypeBuilder, string ignoredMemberName)
    content.vb: Public Overridable Function Apply(entityTypeBuilder As InternalEntityTypeBuilder, ignoredMemberName As String) As Boolean
    parameters:
    - id: entityTypeBuilder
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
    - id: ignoredMemberName
      type: System.String
    return:
      type: System.Boolean
  implements:
  - Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeMemberIgnoredConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.String)
  nameWithType.vb: NavigationAttributeEntityTypeConvention(Of TAttribute).Apply(InternalEntityTypeBuilder, String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention(Of TAttribute).Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder, System.String)
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1.FindCandidateNavigationPropertyType(System.Reflection.PropertyInfo)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1.FindCandidateNavigationPropertyType(System.Reflection.PropertyInfo)
  id: FindCandidateNavigationPropertyType(System.Reflection.PropertyInfo)
  parent: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1
  langs:
  - csharp
  - vb
  name: FindCandidateNavigationPropertyType(PropertyInfo)
  nameWithType: NavigationAttributeEntityTypeConvention<TAttribute>.FindCandidateNavigationPropertyType(PropertyInfo)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention<TAttribute>.FindCandidateNavigationPropertyType(System.Reflection.PropertyInfo)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/Internal/NavigationAttributeEntityTypeConvention.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: FindCandidateNavigationPropertyType
    path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/Internal/NavigationAttributeEntityTypeConvention.cs
    startLine: 191
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual Type FindCandidateNavigationPropertyType(PropertyInfo propertyInfo)
    content.vb: Public Overridable Function FindCandidateNavigationPropertyType(propertyInfo As PropertyInfo) As Type
    parameters:
    - id: propertyInfo
      type: System.Reflection.PropertyInfo
    return:
      type: System.Type
  nameWithType.vb: NavigationAttributeEntityTypeConvention(Of TAttribute).FindCandidateNavigationPropertyType(PropertyInfo)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention(Of TAttribute).FindCandidateNavigationPropertyType(System.Reflection.PropertyInfo)
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.Reflection.PropertyInfo,System.Type,`0)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.Reflection.PropertyInfo,System.Type,`0)
  id: Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.Reflection.PropertyInfo,System.Type,`0)
  parent: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1
  langs:
  - csharp
  - vb
  name: Apply(InternalEntityTypeBuilder, PropertyInfo, Type, TAttribute)
  nameWithType: NavigationAttributeEntityTypeConvention<TAttribute>.Apply(InternalEntityTypeBuilder, PropertyInfo, Type, TAttribute)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention<TAttribute>.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder, System.Reflection.PropertyInfo, System.Type, TAttribute)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/Internal/NavigationAttributeEntityTypeConvention.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Apply
    path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/Internal/NavigationAttributeEntityTypeConvention.cs
    startLine: 202
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual InternalEntityTypeBuilder Apply(InternalEntityTypeBuilder entityTypeBuilder, PropertyInfo navigationPropertyInfo, Type targetClrType, TAttribute attribute)
    content.vb: Public Overridable Function Apply(entityTypeBuilder As InternalEntityTypeBuilder, navigationPropertyInfo As PropertyInfo, targetClrType As Type, attribute As TAttribute) As InternalEntityTypeBuilder
    parameters:
    - id: entityTypeBuilder
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
    - id: navigationPropertyInfo
      type: System.Reflection.PropertyInfo
    - id: targetClrType
      type: System.Type
    - id: attribute
      type: '{TAttribute}'
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  nameWithType.vb: NavigationAttributeEntityTypeConvention(Of TAttribute).Apply(InternalEntityTypeBuilder, PropertyInfo, Type, TAttribute)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention(Of TAttribute).Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder, System.Reflection.PropertyInfo, System.Type, TAttribute)
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder,System.Type,System.Reflection.PropertyInfo,System.Type,`0)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder,System.Type,System.Reflection.PropertyInfo,System.Type,`0)
  id: Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder,System.Type,System.Reflection.PropertyInfo,System.Type,`0)
  parent: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1
  langs:
  - csharp
  - vb
  name: Apply(InternalModelBuilder, Type, PropertyInfo, Type, TAttribute)
  nameWithType: NavigationAttributeEntityTypeConvention<TAttribute>.Apply(InternalModelBuilder, Type, PropertyInfo, Type, TAttribute)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention<TAttribute>.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder, System.Type, System.Reflection.PropertyInfo, System.Type, TAttribute)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/Internal/NavigationAttributeEntityTypeConvention.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Apply
    path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/Internal/NavigationAttributeEntityTypeConvention.cs
    startLine: 215
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual bool Apply(InternalModelBuilder modelBuilder, Type type, PropertyInfo navigationPropertyInfo, Type targetClrType, TAttribute attribute)
    content.vb: Public Overridable Function Apply(modelBuilder As InternalModelBuilder, type As Type, navigationPropertyInfo As PropertyInfo, targetClrType As Type, attribute As TAttribute) As Boolean
    parameters:
    - id: modelBuilder
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder
    - id: type
      type: System.Type
    - id: navigationPropertyInfo
      type: System.Reflection.PropertyInfo
    - id: targetClrType
      type: System.Type
    - id: attribute
      type: '{TAttribute}'
    return:
      type: System.Boolean
  nameWithType.vb: NavigationAttributeEntityTypeConvention(Of TAttribute).Apply(InternalModelBuilder, Type, PropertyInfo, Type, TAttribute)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention(Of TAttribute).Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder, System.Type, System.Reflection.PropertyInfo, System.Type, TAttribute)
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation,`0)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation,`0)
  id: Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation,`0)
  parent: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1
  langs:
  - csharp
  - vb
  name: Apply(InternalRelationshipBuilder, Navigation, TAttribute)
  nameWithType: NavigationAttributeEntityTypeConvention<TAttribute>.Apply(InternalRelationshipBuilder, Navigation, TAttribute)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention<TAttribute>.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder, Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation, TAttribute)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/Internal/NavigationAttributeEntityTypeConvention.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Apply
    path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/Internal/NavigationAttributeEntityTypeConvention.cs
    startLine: 229
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual InternalRelationshipBuilder Apply(InternalRelationshipBuilder relationshipBuilder, Navigation navigation, TAttribute attribute)
    content.vb: Public Overridable Function Apply(relationshipBuilder As InternalRelationshipBuilder, navigation As Navigation, attribute As TAttribute) As InternalRelationshipBuilder
    parameters:
    - id: relationshipBuilder
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
    - id: navigation
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation
    - id: attribute
      type: '{TAttribute}'
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
  nameWithType.vb: NavigationAttributeEntityTypeConvention(Of TAttribute).Apply(InternalRelationshipBuilder, Navigation, TAttribute)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention(Of TAttribute).Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder, Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation, TAttribute)
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.Reflection.PropertyInfo,System.Type,`0)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.Reflection.PropertyInfo,System.Type,`0)
  id: Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.Reflection.PropertyInfo,System.Type,`0)
  parent: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1
  langs:
  - csharp
  - vb
  name: Apply(InternalEntityTypeBuilder, EntityType, PropertyInfo, Type, TAttribute)
  nameWithType: NavigationAttributeEntityTypeConvention<TAttribute>.Apply(InternalEntityTypeBuilder, EntityType, PropertyInfo, Type, TAttribute)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention<TAttribute>.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType, System.Reflection.PropertyInfo, System.Type, TAttribute)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/Internal/NavigationAttributeEntityTypeConvention.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Apply
    path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/Internal/NavigationAttributeEntityTypeConvention.cs
    startLine: 241
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual bool Apply(InternalEntityTypeBuilder entityTypeBuilder, EntityType oldBaseType, PropertyInfo navigationPropertyInfo, Type targetClrType, TAttribute attribute)
    content.vb: Public Overridable Function Apply(entityTypeBuilder As InternalEntityTypeBuilder, oldBaseType As EntityType, navigationPropertyInfo As PropertyInfo, targetClrType As Type, attribute As TAttribute) As Boolean
    parameters:
    - id: entityTypeBuilder
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
    - id: oldBaseType
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
    - id: navigationPropertyInfo
      type: System.Reflection.PropertyInfo
    - id: targetClrType
      type: System.Type
    - id: attribute
      type: '{TAttribute}'
    return:
      type: System.Boolean
  nameWithType.vb: NavigationAttributeEntityTypeConvention(Of TAttribute).Apply(InternalEntityTypeBuilder, EntityType, PropertyInfo, Type, TAttribute)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention(Of TAttribute).Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType, System.Reflection.PropertyInfo, System.Type, TAttribute)
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1.ApplyIgnored(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.Reflection.PropertyInfo,System.Type,`0)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1.ApplyIgnored(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.Reflection.PropertyInfo,System.Type,`0)
  id: ApplyIgnored(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.Reflection.PropertyInfo,System.Type,`0)
  parent: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1
  langs:
  - csharp
  - vb
  name: ApplyIgnored(InternalEntityTypeBuilder, PropertyInfo, Type, TAttribute)
  nameWithType: NavigationAttributeEntityTypeConvention<TAttribute>.ApplyIgnored(InternalEntityTypeBuilder, PropertyInfo, Type, TAttribute)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention<TAttribute>.ApplyIgnored(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder, System.Reflection.PropertyInfo, System.Type, TAttribute)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/Internal/NavigationAttributeEntityTypeConvention.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ApplyIgnored
    path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/Internal/NavigationAttributeEntityTypeConvention.cs
    startLine: 255
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual bool ApplyIgnored(InternalEntityTypeBuilder entityTypeBuilder, PropertyInfo navigationPropertyInfo, Type targetClrType, TAttribute attribute)
    content.vb: Public Overridable Function ApplyIgnored(entityTypeBuilder As InternalEntityTypeBuilder, navigationPropertyInfo As PropertyInfo, targetClrType As Type, attribute As TAttribute) As Boolean
    parameters:
    - id: entityTypeBuilder
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
    - id: navigationPropertyInfo
      type: System.Reflection.PropertyInfo
    - id: targetClrType
      type: System.Type
    - id: attribute
      type: '{TAttribute}'
    return:
      type: System.Boolean
  nameWithType.vb: NavigationAttributeEntityTypeConvention(Of TAttribute).ApplyIgnored(InternalEntityTypeBuilder, PropertyInfo, Type, TAttribute)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention(Of TAttribute).ApplyIgnored(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder, System.Reflection.PropertyInfo, System.Type, TAttribute)
references:
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeConvention
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeConvention
  parent: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
  isExternal: false
  name: IEntityTypeConvention
  nameWithType: IEntityTypeConvention
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeConvention
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeIgnoredConvention
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeIgnoredConvention
  parent: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
  isExternal: false
  name: IEntityTypeIgnoredConvention
  nameWithType: IEntityTypeIgnoredConvention
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeIgnoredConvention
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.INavigationConvention
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.INavigationConvention
  parent: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
  isExternal: false
  name: INavigationConvention
  nameWithType: INavigationConvention
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.INavigationConvention
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IBaseTypeConvention
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IBaseTypeConvention
  parent: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
  isExternal: false
  name: IBaseTypeConvention
  nameWithType: IBaseTypeConvention
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IBaseTypeConvention
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeMemberIgnoredConvention
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeMemberIgnoredConvention
  parent: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
  isExternal: false
  name: IEntityTypeMemberIgnoredConvention
  nameWithType: IEntityTypeMemberIgnoredConvention
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeMemberIgnoredConvention
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<NavigationAttributeEntityTypeConvention<TAttribute>, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<NavigationAttributeEntityTypeConvention<TAttribute>, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention<TAttribute>, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of NavigationAttributeEntityTypeConvention(Of TAttribute), TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention(Of TAttribute), TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of NavigationAttributeEntityTypeConvention(Of TAttribute), TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<NavigationAttributeEntityTypeConvention<TAttribute>, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<NavigationAttributeEntityTypeConvention<TAttribute>, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention<TAttribute>, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of NavigationAttributeEntityTypeConvention(Of TAttribute), TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of NavigationAttributeEntityTypeConvention(Of TAttribute), TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention(Of TAttribute), TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder)
  parent: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeConvention
  isExternal: false
  name: Apply(InternalEntityTypeBuilder)
  nameWithType: IEntityTypeConvention.Apply(InternalEntityTypeBuilder)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder)
    name: Apply
    nameWithType: IEntityTypeConvention.Apply
    fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeConvention.Apply
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
    name: InternalEntityTypeBuilder
    nameWithType: InternalEntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder)
    name: Apply
    nameWithType: IEntityTypeConvention.Apply
    fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeConvention.Apply
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
    name: InternalEntityTypeBuilder
    nameWithType: InternalEntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: InternalEntityTypeBuilder
  nameWithType: InternalEntityTypeBuilder
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeIgnoredConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder,System.String,System.Type)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeIgnoredConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder,System.String,System.Type)
  parent: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeIgnoredConvention
  isExternal: true
  name: Apply(InternalModelBuilder, String, Type)
  nameWithType: IEntityTypeIgnoredConvention.Apply(InternalModelBuilder, String, Type)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeIgnoredConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder, System.String, System.Type)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeIgnoredConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder,System.String,System.Type)
    name: Apply
    nameWithType: IEntityTypeIgnoredConvention.Apply
    fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeIgnoredConvention.Apply
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder
    name: InternalModelBuilder
    nameWithType: InternalModelBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeIgnoredConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder,System.String,System.Type)
    name: Apply
    nameWithType: IEntityTypeIgnoredConvention.Apply
    fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeIgnoredConvention.Apply
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder
    name: InternalModelBuilder
    nameWithType: InternalModelBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: InternalModelBuilder
  nameWithType: InternalModelBuilder
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.INavigationConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.INavigationConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation)
  parent: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.INavigationConvention
  isExternal: false
  name: Apply(InternalRelationshipBuilder, Navigation)
  nameWithType: INavigationConvention.Apply(InternalRelationshipBuilder, Navigation)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.INavigationConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder, Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.INavigationConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation)
    name: Apply
    nameWithType: INavigationConvention.Apply
    fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.INavigationConvention.Apply
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
    name: InternalRelationshipBuilder
    nameWithType: InternalRelationshipBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation
    name: Navigation
    nameWithType: Navigation
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.INavigationConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation)
    name: Apply
    nameWithType: INavigationConvention.Apply
    fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.INavigationConvention.Apply
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
    name: InternalRelationshipBuilder
    nameWithType: InternalRelationshipBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation
    name: Navigation
    nameWithType: Navigation
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: InternalRelationshipBuilder
  nameWithType: InternalRelationshipBuilder
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Navigation
  nameWithType: Navigation
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IBaseTypeConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IBaseTypeConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)
  parent: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IBaseTypeConvention
  isExternal: false
  name: Apply(InternalEntityTypeBuilder, EntityType)
  nameWithType: IBaseTypeConvention.Apply(InternalEntityTypeBuilder, EntityType)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IBaseTypeConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IBaseTypeConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)
    name: Apply
    nameWithType: IBaseTypeConvention.Apply
    fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IBaseTypeConvention.Apply
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
    name: InternalEntityTypeBuilder
    nameWithType: InternalEntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
    name: EntityType
    nameWithType: EntityType
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IBaseTypeConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)
    name: Apply
    nameWithType: IBaseTypeConvention.Apply
    fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IBaseTypeConvention.Apply
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
    name: InternalEntityTypeBuilder
    nameWithType: InternalEntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
    name: EntityType
    nameWithType: EntityType
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: EntityType
  nameWithType: EntityType
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeMemberIgnoredConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeMemberIgnoredConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeMemberIgnoredConvention
  isExternal: true
  name: Apply(InternalEntityTypeBuilder, String)
  nameWithType: IEntityTypeMemberIgnoredConvention.Apply(InternalEntityTypeBuilder, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeMemberIgnoredConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder, System.String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeMemberIgnoredConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.String)
    name: Apply
    nameWithType: IEntityTypeMemberIgnoredConvention.Apply
    fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeMemberIgnoredConvention.Apply
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
    name: InternalEntityTypeBuilder
    nameWithType: InternalEntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeMemberIgnoredConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.String)
    name: Apply
    nameWithType: IEntityTypeMemberIgnoredConvention.Apply
    fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeMemberIgnoredConvention.Apply
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
    name: InternalEntityTypeBuilder
    nameWithType: InternalEntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.PropertyInfo
  commentId: T:System.Reflection.PropertyInfo
  parent: System.Reflection
  isExternal: true
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: false
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: '{TAttribute}'
  commentId: '!:TAttribute'
  definition: TAttribute
  name: TAttribute
  nameWithType: TAttribute
  fullName: TAttribute
- uid: TAttribute
  isExternal: false
  name: TAttribute
  nameWithType: TAttribute
  fullName: TAttribute
