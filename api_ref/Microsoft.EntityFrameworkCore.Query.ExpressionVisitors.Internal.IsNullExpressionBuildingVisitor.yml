### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IsNullExpressionBuildingVisitor
  commentId: T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IsNullExpressionBuildingVisitor
  id: IsNullExpressionBuildingVisitor
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  children:
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IsNullExpressionBuildingVisitor.ResultExpression
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IsNullExpressionBuildingVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IsNullExpressionBuildingVisitor.VisitConditional(System.Linq.Expressions.ConditionalExpression)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IsNullExpressionBuildingVisitor.VisitConstant(System.Linq.Expressions.ConstantExpression)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IsNullExpressionBuildingVisitor.VisitExtension(System.Linq.Expressions.Expression)
  langs:
  - csharp
  - vb
  name: IsNullExpressionBuildingVisitor
  nameWithType: IsNullExpressionBuildingVisitor
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IsNullExpressionBuildingVisitor
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/IsNullExpressionBuildingVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: IsNullExpressionBuildingVisitor
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/IsNullExpressionBuildingVisitor.cs
    startLine: 14
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public class IsNullExpressionBuildingVisitor : RelinqExpressionVisitor'
    content.vb: >-
      Public Class IsNullExpressionBuildingVisitor
          Inherits RelinqExpressionVisitor
  inheritance:
  - System.Object
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IsNullExpressionBuildingVisitor.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IsNullExpressionBuildingVisitor.ResultExpression
  commentId: P:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IsNullExpressionBuildingVisitor.ResultExpression
  id: ResultExpression
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IsNullExpressionBuildingVisitor
  langs:
  - csharp
  - vb
  name: ResultExpression
  nameWithType: IsNullExpressionBuildingVisitor.ResultExpression
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IsNullExpressionBuildingVisitor.ResultExpression
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/IsNullExpressionBuildingVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ResultExpression
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/IsNullExpressionBuildingVisitor.cs
    startLine: 22
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual Expression ResultExpression { get; }
    content.vb: Public Overridable ReadOnly Property ResultExpression As Expression
    parameters: []
    return:
      type: System.Linq.Expressions.Expression
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IsNullExpressionBuildingVisitor.VisitConstant(System.Linq.Expressions.ConstantExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IsNullExpressionBuildingVisitor.VisitConstant(System.Linq.Expressions.ConstantExpression)
  id: VisitConstant(System.Linq.Expressions.ConstantExpression)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IsNullExpressionBuildingVisitor
  langs:
  - csharp
  - vb
  name: VisitConstant(ConstantExpression)
  nameWithType: IsNullExpressionBuildingVisitor.VisitConstant(ConstantExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IsNullExpressionBuildingVisitor.VisitConstant(System.Linq.Expressions.ConstantExpression)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/IsNullExpressionBuildingVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: VisitConstant
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/IsNullExpressionBuildingVisitor.cs
    startLine: 28
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected override Expression VisitConstant(ConstantExpression node)
    content.vb: Protected Overrides Function VisitConstant(node As ConstantExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.ConstantExpression
    return:
      type: System.Linq.Expressions.Expression
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IsNullExpressionBuildingVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IsNullExpressionBuildingVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)
  id: VisitBinary(System.Linq.Expressions.BinaryExpression)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IsNullExpressionBuildingVisitor
  langs:
  - csharp
  - vb
  name: VisitBinary(BinaryExpression)
  nameWithType: IsNullExpressionBuildingVisitor.VisitBinary(BinaryExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IsNullExpressionBuildingVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/IsNullExpressionBuildingVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: VisitBinary
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/IsNullExpressionBuildingVisitor.cs
    startLine: 44
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected override Expression VisitBinary(BinaryExpression node)
    content.vb: Protected Overrides Function VisitBinary(node As BinaryExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.BinaryExpression
    return:
      type: System.Linq.Expressions.Expression
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IsNullExpressionBuildingVisitor.VisitExtension(System.Linq.Expressions.Expression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IsNullExpressionBuildingVisitor.VisitExtension(System.Linq.Expressions.Expression)
  id: VisitExtension(System.Linq.Expressions.Expression)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IsNullExpressionBuildingVisitor
  langs:
  - csharp
  - vb
  name: VisitExtension(Expression)
  nameWithType: IsNullExpressionBuildingVisitor.VisitExtension(Expression)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IsNullExpressionBuildingVisitor.VisitExtension(System.Linq.Expressions.Expression)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/IsNullExpressionBuildingVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: VisitExtension
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/IsNullExpressionBuildingVisitor.cs
    startLine: 80
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected override Expression VisitExtension(Expression node)
    content.vb: Protected Overrides Function VisitExtension(node As Expression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.Expression
    return:
      type: System.Linq.Expressions.Expression
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IsNullExpressionBuildingVisitor.VisitConditional(System.Linq.Expressions.ConditionalExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IsNullExpressionBuildingVisitor.VisitConditional(System.Linq.Expressions.ConditionalExpression)
  id: VisitConditional(System.Linq.Expressions.ConditionalExpression)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IsNullExpressionBuildingVisitor
  langs:
  - csharp
  - vb
  name: VisitConditional(ConditionalExpression)
  nameWithType: IsNullExpressionBuildingVisitor.VisitConditional(ConditionalExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IsNullExpressionBuildingVisitor.VisitConditional(System.Linq.Expressions.ConditionalExpression)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/IsNullExpressionBuildingVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: VisitConditional
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/IsNullExpressionBuildingVisitor.cs
    startLine: 124
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected override Expression VisitConditional(ConditionalExpression node)
    content.vb: Protected Overrides Function VisitConditional(node As ConditionalExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.ConditionalExpression
    return:
      type: System.Linq.Expressions.Expression
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IsNullExpressionBuildingVisitor.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<IsNullExpressionBuildingVisitor, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<IsNullExpressionBuildingVisitor, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IsNullExpressionBuildingVisitor, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of IsNullExpressionBuildingVisitor, TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IsNullExpressionBuildingVisitor, TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of IsNullExpressionBuildingVisitor, TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<IsNullExpressionBuildingVisitor, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<IsNullExpressionBuildingVisitor, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IsNullExpressionBuildingVisitor, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of IsNullExpressionBuildingVisitor, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of IsNullExpressionBuildingVisitor, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IsNullExpressionBuildingVisitor, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: System.Linq.Expressions.Expression
  commentId: T:System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: true
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: false
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
- uid: System.Linq.Expressions.ConstantExpression
  commentId: T:System.Linq.Expressions.ConstantExpression
  parent: System.Linq.Expressions
  isExternal: true
  name: ConstantExpression
  nameWithType: ConstantExpression
  fullName: System.Linq.Expressions.ConstantExpression
- uid: System.Linq.Expressions.BinaryExpression
  commentId: T:System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: true
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.ConditionalExpression
  commentId: T:System.Linq.Expressions.ConditionalExpression
  parent: System.Linq.Expressions
  isExternal: true
  name: ConditionalExpression
  nameWithType: ConditionalExpression
  fullName: System.Linq.Expressions.ConditionalExpression
