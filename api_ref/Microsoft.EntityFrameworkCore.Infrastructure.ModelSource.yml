### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Infrastructure.ModelSource
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.ModelSource
  id: ModelSource
  parent: Microsoft.EntityFrameworkCore.Infrastructure
  children:
  - Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.#ctor(Microsoft.EntityFrameworkCore.Internal.IDbSetFinder,Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ICoreConventionSetBuilder,Microsoft.EntityFrameworkCore.Infrastructure.IModelCustomizer,Microsoft.EntityFrameworkCore.Infrastructure.IModelCacheKeyFactory)
  - Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.CoreConventionSetBuilder
  - Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.CreateConventionSet(Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder)
  - Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.CreateModel(Microsoft.EntityFrameworkCore.DbContext,Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder,Microsoft.EntityFrameworkCore.Internal.IModelValidator)
  - Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.FindSets(Microsoft.EntityFrameworkCore.ModelBuilder,Microsoft.EntityFrameworkCore.DbContext)
  - Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.GetModel(Microsoft.EntityFrameworkCore.DbContext,Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder,Microsoft.EntityFrameworkCore.Internal.IModelValidator)
  - Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.ModelCacheKeyFactory
  - Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.ModelCustomizer
  - Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.SetFinder
  langs:
  - csharp
  - vb
  name: ModelSource
  nameWithType: ModelSource
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.ModelSource
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Infrastructure/ModelSource.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ModelSource
    path: src/Microsoft.EntityFrameworkCore/Infrastructure/ModelSource.cs
    startLine: 24
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Infrastructure
  summary: "\n<p>\n    A base implementation of <xref href=\"Microsoft.EntityFrameworkCore.Infrastructure.IModelSource\" data-throw-if-not-resolved=\"false\"></xref> that produces a model based on the <xref href=\"Microsoft.EntityFrameworkCore.DbSet%601\" data-throw-if-not-resolved=\"false\"></xref> properties\n    exposed on the context. The model is cached to avoid recreating it every time it is requested.\n</p>\n<p>\n    This type is typically used by database providers (and other extensions). It is generally\n    not used in application code.\n</p>\n"
  example: []
  syntax:
    content: 'public abstract class ModelSource : IModelSource'
    content.vb: >-
      Public MustInherit Class ModelSource
          Implements IModelSource
  inheritance:
  - System.Object
  implements:
  - Microsoft.EntityFrameworkCore.Infrastructure.IModelSource
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.SetFinder
  commentId: P:Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.SetFinder
  id: SetFinder
  parent: Microsoft.EntityFrameworkCore.Infrastructure.ModelSource
  langs:
  - csharp
  - vb
  name: SetFinder
  nameWithType: ModelSource.SetFinder
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.SetFinder
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Infrastructure/ModelSource.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: SetFinder
    path: src/Microsoft.EntityFrameworkCore/Infrastructure/ModelSource.cs
    startLine: 32
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Infrastructure
  summary: "\n    Gets the <xref href=\"Microsoft.EntityFrameworkCore.Internal.IDbSetFinder\" data-throw-if-not-resolved=\"false\"></xref> that will locate the <xref href=\"Microsoft.EntityFrameworkCore.DbSet%601\" data-throw-if-not-resolved=\"false\"></xref> properties\n    on the derived context.\n"
  example: []
  syntax:
    content: protected virtual IDbSetFinder SetFinder { get; }
    content.vb: Protected Overridable ReadOnly Property SetFinder As IDbSetFinder
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Internal.IDbSetFinder
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.CoreConventionSetBuilder
  commentId: P:Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.CoreConventionSetBuilder
  id: CoreConventionSetBuilder
  parent: Microsoft.EntityFrameworkCore.Infrastructure.ModelSource
  langs:
  - csharp
  - vb
  name: CoreConventionSetBuilder
  nameWithType: ModelSource.CoreConventionSetBuilder
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.CoreConventionSetBuilder
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Infrastructure/ModelSource.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: CoreConventionSetBuilder
    path: src/Microsoft.EntityFrameworkCore/Infrastructure/ModelSource.cs
    startLine: 38
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Infrastructure
  summary: "\n    Gets the <xref href=\"Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ICoreConventionSetBuilder\" data-throw-if-not-resolved=\"false\"></xref> that will build the conventions to be used \n    to build the model.\n"
  example: []
  syntax:
    content: protected virtual ICoreConventionSetBuilder CoreConventionSetBuilder { get; }
    content.vb: Protected Overridable ReadOnly Property CoreConventionSetBuilder As ICoreConventionSetBuilder
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ICoreConventionSetBuilder
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.ModelCustomizer
  commentId: P:Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.ModelCustomizer
  id: ModelCustomizer
  parent: Microsoft.EntityFrameworkCore.Infrastructure.ModelSource
  langs:
  - csharp
  - vb
  name: ModelCustomizer
  nameWithType: ModelSource.ModelCustomizer
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.ModelCustomizer
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Infrastructure/ModelSource.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ModelCustomizer
    path: src/Microsoft.EntityFrameworkCore/Infrastructure/ModelSource.cs
    startLine: 44
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Infrastructure
  summary: "\n    Gets the <xref href=\"Microsoft.EntityFrameworkCore.Infrastructure.IModelCustomizer\" data-throw-if-not-resolved=\"false\"></xref> that will perform additional configuration of the model\n    in addition to what is discovered by convention.\n"
  example: []
  syntax:
    content: protected virtual IModelCustomizer ModelCustomizer { get; }
    content.vb: Protected Overridable ReadOnly Property ModelCustomizer As IModelCustomizer
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Infrastructure.IModelCustomizer
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.ModelCacheKeyFactory
  commentId: P:Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.ModelCacheKeyFactory
  id: ModelCacheKeyFactory
  parent: Microsoft.EntityFrameworkCore.Infrastructure.ModelSource
  langs:
  - csharp
  - vb
  name: ModelCacheKeyFactory
  nameWithType: ModelSource.ModelCacheKeyFactory
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.ModelCacheKeyFactory
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Infrastructure/ModelSource.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ModelCacheKeyFactory
    path: src/Microsoft.EntityFrameworkCore/Infrastructure/ModelSource.cs
    startLine: 50
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Infrastructure
  summary: "\n    Gets the <xref href=\"Microsoft.EntityFrameworkCore.Infrastructure.IModelCacheKeyFactory\" data-throw-if-not-resolved=\"false\"></xref> that will create keys used to store and lookup models\n    the model cache.\n"
  example: []
  syntax:
    content: protected virtual IModelCacheKeyFactory ModelCacheKeyFactory { get; }
    content.vb: Protected Overridable ReadOnly Property ModelCacheKeyFactory As IModelCacheKeyFactory
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Infrastructure.IModelCacheKeyFactory
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.#ctor(Microsoft.EntityFrameworkCore.Internal.IDbSetFinder,Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ICoreConventionSetBuilder,Microsoft.EntityFrameworkCore.Infrastructure.IModelCustomizer,Microsoft.EntityFrameworkCore.Infrastructure.IModelCacheKeyFactory)
  commentId: M:Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.#ctor(Microsoft.EntityFrameworkCore.Internal.IDbSetFinder,Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ICoreConventionSetBuilder,Microsoft.EntityFrameworkCore.Infrastructure.IModelCustomizer,Microsoft.EntityFrameworkCore.Infrastructure.IModelCacheKeyFactory)
  id: '#ctor(Microsoft.EntityFrameworkCore.Internal.IDbSetFinder,Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ICoreConventionSetBuilder,Microsoft.EntityFrameworkCore.Infrastructure.IModelCustomizer,Microsoft.EntityFrameworkCore.Infrastructure.IModelCacheKeyFactory)'
  parent: Microsoft.EntityFrameworkCore.Infrastructure.ModelSource
  langs:
  - csharp
  - vb
  name: ModelSource(IDbSetFinder, ICoreConventionSetBuilder, IModelCustomizer, IModelCacheKeyFactory)
  nameWithType: ModelSource.ModelSource(IDbSetFinder, ICoreConventionSetBuilder, IModelCustomizer, IModelCacheKeyFactory)
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.ModelSource(Microsoft.EntityFrameworkCore.Internal.IDbSetFinder, Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ICoreConventionSetBuilder, Microsoft.EntityFrameworkCore.Infrastructure.IModelCustomizer, Microsoft.EntityFrameworkCore.Infrastructure.IModelCacheKeyFactory)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Infrastructure/ModelSource.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore/Infrastructure/ModelSource.cs
    startLine: 56
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Infrastructure
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected ModelSource(IDbSetFinder setFinder, ICoreConventionSetBuilder coreConventionSetBuilder, IModelCustomizer modelCustomizer, IModelCacheKeyFactory modelCacheKeyFactory)
    content.vb: Protected Sub New(setFinder As IDbSetFinder, coreConventionSetBuilder As ICoreConventionSetBuilder, modelCustomizer As IModelCustomizer, modelCacheKeyFactory As IModelCacheKeyFactory)
    parameters:
    - id: setFinder
      type: Microsoft.EntityFrameworkCore.Internal.IDbSetFinder
    - id: coreConventionSetBuilder
      type: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ICoreConventionSetBuilder
    - id: modelCustomizer
      type: Microsoft.EntityFrameworkCore.Infrastructure.IModelCustomizer
    - id: modelCacheKeyFactory
      type: Microsoft.EntityFrameworkCore.Infrastructure.IModelCacheKeyFactory
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.GetModel(Microsoft.EntityFrameworkCore.DbContext,Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder,Microsoft.EntityFrameworkCore.Internal.IModelValidator)
  commentId: M:Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.GetModel(Microsoft.EntityFrameworkCore.DbContext,Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder,Microsoft.EntityFrameworkCore.Internal.IModelValidator)
  id: GetModel(Microsoft.EntityFrameworkCore.DbContext,Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder,Microsoft.EntityFrameworkCore.Internal.IModelValidator)
  parent: Microsoft.EntityFrameworkCore.Infrastructure.ModelSource
  langs:
  - csharp
  - vb
  name: GetModel(DbContext, IConventionSetBuilder, IModelValidator)
  nameWithType: ModelSource.GetModel(DbContext, IConventionSetBuilder, IModelValidator)
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.GetModel(Microsoft.EntityFrameworkCore.DbContext, Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder, Microsoft.EntityFrameworkCore.Internal.IModelValidator)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Infrastructure/ModelSource.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GetModel
    path: src/Microsoft.EntityFrameworkCore/Infrastructure/ModelSource.cs
    startLine: 76
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Infrastructure
  summary: "\n    Returns the model from the cache, or creates a model if it is not present in the cache.\n"
  example: []
  syntax:
    content: public virtual IModel GetModel(DbContext context, IConventionSetBuilder conventionSetBuilder, IModelValidator validator)
    content.vb: Public Overridable Function GetModel(context As DbContext, conventionSetBuilder As IConventionSetBuilder, validator As IModelValidator) As IModel
    parameters:
    - id: context
      type: Microsoft.EntityFrameworkCore.DbContext
      description: 'The context the model is being produced for. '
    - id: conventionSetBuilder
      type: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder
      description: 'The convention set to use when creating the model. '
    - id: validator
      type: Microsoft.EntityFrameworkCore.Internal.IModelValidator
      description: 'The validator to verify the model can be successfully used with the context. '
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.IModel
      description: 'The model to be used. '
  implements:
  - Microsoft.EntityFrameworkCore.Infrastructure.IModelSource.GetModel(Microsoft.EntityFrameworkCore.DbContext,Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder,Microsoft.EntityFrameworkCore.Internal.IModelValidator)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.CreateModel(Microsoft.EntityFrameworkCore.DbContext,Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder,Microsoft.EntityFrameworkCore.Internal.IModelValidator)
  commentId: M:Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.CreateModel(Microsoft.EntityFrameworkCore.DbContext,Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder,Microsoft.EntityFrameworkCore.Internal.IModelValidator)
  id: CreateModel(Microsoft.EntityFrameworkCore.DbContext,Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder,Microsoft.EntityFrameworkCore.Internal.IModelValidator)
  parent: Microsoft.EntityFrameworkCore.Infrastructure.ModelSource
  langs:
  - csharp
  - vb
  name: CreateModel(DbContext, IConventionSetBuilder, IModelValidator)
  nameWithType: ModelSource.CreateModel(DbContext, IConventionSetBuilder, IModelValidator)
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.CreateModel(Microsoft.EntityFrameworkCore.DbContext, Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder, Microsoft.EntityFrameworkCore.Internal.IModelValidator)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Infrastructure/ModelSource.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: CreateModel
    path: src/Microsoft.EntityFrameworkCore/Infrastructure/ModelSource.cs
    startLine: 86
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Infrastructure
  summary: "\n    Creates the model. This method is called when the model was not found in the cache.\n"
  example: []
  syntax:
    content: protected virtual IModel CreateModel(DbContext context, IConventionSetBuilder conventionSetBuilder, IModelValidator validator)
    content.vb: Protected Overridable Function CreateModel(context As DbContext, conventionSetBuilder As IConventionSetBuilder, validator As IModelValidator) As IModel
    parameters:
    - id: context
      type: Microsoft.EntityFrameworkCore.DbContext
      description: 'The context the model is being produced for. '
    - id: conventionSetBuilder
      type: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder
      description: 'The convention set to use when creating the model. '
    - id: validator
      type: Microsoft.EntityFrameworkCore.Internal.IModelValidator
      description: 'The validator to verify the model can be successfully used with the context. '
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.IModel
      description: 'The model to be used. '
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.CreateConventionSet(Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder)
  commentId: M:Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.CreateConventionSet(Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder)
  id: CreateConventionSet(Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder)
  parent: Microsoft.EntityFrameworkCore.Infrastructure.ModelSource
  langs:
  - csharp
  - vb
  name: CreateConventionSet(IConventionSetBuilder)
  nameWithType: ModelSource.CreateConventionSet(IConventionSetBuilder)
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.CreateConventionSet(Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Infrastructure/ModelSource.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: CreateConventionSet
    path: src/Microsoft.EntityFrameworkCore/Infrastructure/ModelSource.cs
    startLine: 118
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Infrastructure
  summary: "\n    Creates the convention set to be used for the model. Uses the <xref href=\"Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.CoreConventionSetBuilder\" data-throw-if-not-resolved=\"false\"></xref>\n    if <em>conventionSetBuilder</em> is null.\n"
  example: []
  syntax:
    content: protected virtual ConventionSet CreateConventionSet(IConventionSetBuilder conventionSetBuilder)
    content.vb: Protected Overridable Function CreateConventionSet(conventionSetBuilder As IConventionSetBuilder) As ConventionSet
    parameters:
    - id: conventionSetBuilder
      type: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder
      description: 'The convention set builder to be used. '
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet
      description: 'The convention set to be used. '
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.FindSets(Microsoft.EntityFrameworkCore.ModelBuilder,Microsoft.EntityFrameworkCore.DbContext)
  commentId: M:Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.FindSets(Microsoft.EntityFrameworkCore.ModelBuilder,Microsoft.EntityFrameworkCore.DbContext)
  id: FindSets(Microsoft.EntityFrameworkCore.ModelBuilder,Microsoft.EntityFrameworkCore.DbContext)
  parent: Microsoft.EntityFrameworkCore.Infrastructure.ModelSource
  langs:
  - csharp
  - vb
  name: FindSets(ModelBuilder, DbContext)
  nameWithType: ModelSource.FindSets(ModelBuilder, DbContext)
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.FindSets(Microsoft.EntityFrameworkCore.ModelBuilder, Microsoft.EntityFrameworkCore.DbContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Infrastructure/ModelSource.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: FindSets
    path: src/Microsoft.EntityFrameworkCore/Infrastructure/ModelSource.cs
    startLine: 131
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Infrastructure
  summary: "\n    Adds the entity types found in <xref href=\"Microsoft.EntityFrameworkCore.DbSet%601\" data-throw-if-not-resolved=\"false\"></xref> properties on the context to the model.\n"
  example: []
  syntax:
    content: protected virtual void FindSets(ModelBuilder modelBuilder, DbContext context)
    content.vb: Protected Overridable Sub FindSets(modelBuilder As ModelBuilder, context As DbContext)
    parameters:
    - id: modelBuilder
      type: Microsoft.EntityFrameworkCore.ModelBuilder
      description: 'The <xref href="Microsoft.EntityFrameworkCore.ModelBuilder" data-throw-if-not-resolved="false"></xref> being used to build the model. '
    - id: context
      type: Microsoft.EntityFrameworkCore.DbContext
      description: 'The context to find <xref href="Microsoft.EntityFrameworkCore.DbSet%601" data-throw-if-not-resolved="false"></xref> properties on. '
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IModelSource
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.IModelSource
  parent: Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: IModelSource
  nameWithType: IModelSource
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IModelSource
- uid: Microsoft.EntityFrameworkCore.DbSet`1
  commentId: T:Microsoft.EntityFrameworkCore.DbSet`1
  isExternal: false
  name: DbSet<TEntity>
  nameWithType: DbSet<TEntity>
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>
  nameWithType.vb: DbSet(Of TEntity)
  fullname.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity)
  name.vb: DbSet(Of TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure
  commentId: N:Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Infrastructure
  nameWithType: Microsoft.EntityFrameworkCore.Infrastructure
  fullName: Microsoft.EntityFrameworkCore.Infrastructure
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<ModelSource, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<ModelSource, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Infrastructure.ModelSource, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of ModelSource, TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Infrastructure.ModelSource, TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of ModelSource, TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<ModelSource, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<ModelSource, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Infrastructure.ModelSource, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of ModelSource, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of ModelSource, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Infrastructure.ModelSource, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: Microsoft.EntityFrameworkCore.Internal.IDbSetFinder
  commentId: T:Microsoft.EntityFrameworkCore.Internal.IDbSetFinder
  parent: Microsoft.EntityFrameworkCore.Internal
  isExternal: false
  name: IDbSetFinder
  nameWithType: IDbSetFinder
  fullName: Microsoft.EntityFrameworkCore.Internal.IDbSetFinder
- uid: Microsoft.EntityFrameworkCore.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Internal
  fullName: Microsoft.EntityFrameworkCore.Internal
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ICoreConventionSetBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ICoreConventionSetBuilder
  parent: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
  isExternal: false
  name: ICoreConventionSetBuilder
  nameWithType: ICoreConventionSetBuilder
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ICoreConventionSetBuilder
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IModelCustomizer
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.IModelCustomizer
  parent: Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: IModelCustomizer
  nameWithType: IModelCustomizer
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IModelCustomizer
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IModelCacheKeyFactory
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.IModelCacheKeyFactory
  parent: Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: IModelCacheKeyFactory
  nameWithType: IModelCacheKeyFactory
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IModelCacheKeyFactory
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IModelSource.GetModel(Microsoft.EntityFrameworkCore.DbContext,Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder,Microsoft.EntityFrameworkCore.Internal.IModelValidator)
  commentId: M:Microsoft.EntityFrameworkCore.Infrastructure.IModelSource.GetModel(Microsoft.EntityFrameworkCore.DbContext,Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder,Microsoft.EntityFrameworkCore.Internal.IModelValidator)
  parent: Microsoft.EntityFrameworkCore.Infrastructure.IModelSource
  isExternal: false
  name: GetModel(DbContext, IConventionSetBuilder, IModelValidator)
  nameWithType: IModelSource.GetModel(DbContext, IConventionSetBuilder, IModelValidator)
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IModelSource.GetModel(Microsoft.EntityFrameworkCore.DbContext, Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder, Microsoft.EntityFrameworkCore.Internal.IModelValidator)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IModelSource.GetModel(Microsoft.EntityFrameworkCore.DbContext,Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder,Microsoft.EntityFrameworkCore.Internal.IModelValidator)
    name: GetModel
    nameWithType: IModelSource.GetModel
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IModelSource.GetModel
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.DbContext
    name: DbContext
    nameWithType: DbContext
    fullName: Microsoft.EntityFrameworkCore.DbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder
    name: IConventionSetBuilder
    nameWithType: IConventionSetBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Internal.IModelValidator
    name: IModelValidator
    nameWithType: IModelValidator
    fullName: Microsoft.EntityFrameworkCore.Internal.IModelValidator
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IModelSource.GetModel(Microsoft.EntityFrameworkCore.DbContext,Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder,Microsoft.EntityFrameworkCore.Internal.IModelValidator)
    name: GetModel
    nameWithType: IModelSource.GetModel
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IModelSource.GetModel
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.DbContext
    name: DbContext
    nameWithType: DbContext
    fullName: Microsoft.EntityFrameworkCore.DbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder
    name: IConventionSetBuilder
    nameWithType: IConventionSetBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Internal.IModelValidator
    name: IModelValidator
    nameWithType: IModelValidator
    fullName: Microsoft.EntityFrameworkCore.Internal.IModelValidator
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext
  commentId: T:Microsoft.EntityFrameworkCore.DbContext
  parent: Microsoft.EntityFrameworkCore
  isExternal: false
  name: DbContext
  nameWithType: DbContext
  fullName: Microsoft.EntityFrameworkCore.DbContext
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder
  parent: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
  isExternal: false
  name: IConventionSetBuilder
  nameWithType: IConventionSetBuilder
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder
- uid: Microsoft.EntityFrameworkCore.Internal.IModelValidator
  commentId: T:Microsoft.EntityFrameworkCore.Internal.IModelValidator
  parent: Microsoft.EntityFrameworkCore.Internal
  isExternal: false
  name: IModelValidator
  nameWithType: IModelValidator
  fullName: Microsoft.EntityFrameworkCore.Internal.IModelValidator
- uid: Microsoft.EntityFrameworkCore.Metadata.IModel
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IModel
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IModel
  nameWithType: IModel
  fullName: Microsoft.EntityFrameworkCore.Metadata.IModel
- uid: Microsoft.EntityFrameworkCore
  commentId: N:Microsoft.EntityFrameworkCore
  isExternal: false
  name: Microsoft.EntityFrameworkCore
  nameWithType: Microsoft.EntityFrameworkCore
  fullName: Microsoft.EntityFrameworkCore
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.CoreConventionSetBuilder
  commentId: P:Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.CoreConventionSetBuilder
  parent: Microsoft.EntityFrameworkCore.Infrastructure.ModelSource
  isExternal: false
  name: CoreConventionSetBuilder
  nameWithType: ModelSource.CoreConventionSetBuilder
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.CoreConventionSetBuilder
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet
  parent: Microsoft.EntityFrameworkCore.Metadata.Conventions
  isExternal: false
  name: ConventionSet
  nameWithType: ConventionSet
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet
- uid: Microsoft.EntityFrameworkCore.Infrastructure.ModelSource
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.ModelSource
  parent: Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: ModelSource
  nameWithType: ModelSource
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.ModelSource
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Conventions
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Conventions
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Conventions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions
- uid: Microsoft.EntityFrameworkCore.ModelBuilder
  commentId: T:Microsoft.EntityFrameworkCore.ModelBuilder
  parent: Microsoft.EntityFrameworkCore
  isExternal: false
  name: ModelBuilder
  nameWithType: ModelBuilder
  fullName: Microsoft.EntityFrameworkCore.ModelBuilder
