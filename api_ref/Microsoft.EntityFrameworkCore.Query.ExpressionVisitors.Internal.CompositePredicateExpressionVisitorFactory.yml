### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.CompositePredicateExpressionVisitorFactory
  commentId: T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.CompositePredicateExpressionVisitorFactory
  id: CompositePredicateExpressionVisitorFactory
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  children:
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.CompositePredicateExpressionVisitorFactory.#ctor(Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.CompositePredicateExpressionVisitorFactory.Create
  langs:
  - csharp
  - vb
  name: CompositePredicateExpressionVisitorFactory
  nameWithType: CompositePredicateExpressionVisitorFactory
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.CompositePredicateExpressionVisitorFactory
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/CompositePredicateExpressionVisitorFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CompositePredicateExpressionVisitorFactory
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/CompositePredicateExpressionVisitorFactory.cs
    startLine: 14
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public class CompositePredicateExpressionVisitorFactory : ICompositePredicateExpressionVisitorFactory'
    content.vb: >-
      Public Class CompositePredicateExpressionVisitorFactory
          Implements ICompositePredicateExpressionVisitorFactory
  inheritance:
  - System.Object
  implements:
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ICompositePredicateExpressionVisitorFactory
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.CompositePredicateExpressionVisitorFactory.#ctor(Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.CompositePredicateExpressionVisitorFactory.#ctor(Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions)
  id: '#ctor(Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions)'
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.CompositePredicateExpressionVisitorFactory
  langs:
  - csharp
  - vb
  name: CompositePredicateExpressionVisitorFactory(IDbContextOptions)
  nameWithType: CompositePredicateExpressionVisitorFactory.CompositePredicateExpressionVisitorFactory(IDbContextOptions)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.CompositePredicateExpressionVisitorFactory.CompositePredicateExpressionVisitorFactory(Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/CompositePredicateExpressionVisitorFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/CompositePredicateExpressionVisitorFactory.cs
    startLine: 22
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public CompositePredicateExpressionVisitorFactory(IDbContextOptions contextOptions)
    content.vb: Public Sub New(contextOptions As IDbContextOptions)
    parameters:
    - id: contextOptions
      type: Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions
  overload: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.CompositePredicateExpressionVisitorFactory.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.CompositePredicateExpressionVisitorFactory.Create
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.CompositePredicateExpressionVisitorFactory.Create
  id: Create
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.CompositePredicateExpressionVisitorFactory
  langs:
  - csharp
  - vb
  name: Create()
  nameWithType: CompositePredicateExpressionVisitorFactory.Create()
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.CompositePredicateExpressionVisitorFactory.Create()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/CompositePredicateExpressionVisitorFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Create
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/CompositePredicateExpressionVisitorFactory.cs
    startLine: 33
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual ExpressionVisitor Create()
    content.vb: Public Overridable Function Create As ExpressionVisitor
    return:
      type: System.Linq.Expressions.ExpressionVisitor
  overload: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.CompositePredicateExpressionVisitorFactory.Create*
  implements:
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ICompositePredicateExpressionVisitorFactory.Create
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ICompositePredicateExpressionVisitorFactory
  commentId: T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ICompositePredicateExpressionVisitorFactory
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  isExternal: false
  name: ICompositePredicateExpressionVisitorFactory
  nameWithType: ICompositePredicateExpressionVisitorFactory
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ICompositePredicateExpressionVisitorFactory
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.CompositePredicateExpressionVisitorFactory.#ctor*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.CompositePredicateExpressionVisitorFactory.#ctor
  isExternal: false
  name: CompositePredicateExpressionVisitorFactory
  nameWithType: CompositePredicateExpressionVisitorFactory.CompositePredicateExpressionVisitorFactory
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.CompositePredicateExpressionVisitorFactory.CompositePredicateExpressionVisitorFactory
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions
  parent: Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: IDbContextOptions
  nameWithType: IDbContextOptions
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions
- uid: Microsoft.EntityFrameworkCore.Infrastructure
  commentId: N:Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Infrastructure
  nameWithType: Microsoft.EntityFrameworkCore.Infrastructure
  fullName: Microsoft.EntityFrameworkCore.Infrastructure
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.CompositePredicateExpressionVisitorFactory.Create*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.CompositePredicateExpressionVisitorFactory.Create
  isExternal: false
  name: Create
  nameWithType: CompositePredicateExpressionVisitorFactory.Create
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.CompositePredicateExpressionVisitorFactory.Create
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ICompositePredicateExpressionVisitorFactory.Create
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ICompositePredicateExpressionVisitorFactory.Create
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ICompositePredicateExpressionVisitorFactory
  isExternal: false
  name: Create()
  nameWithType: ICompositePredicateExpressionVisitorFactory.Create()
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ICompositePredicateExpressionVisitorFactory.Create()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ICompositePredicateExpressionVisitorFactory.Create
    name: Create
    nameWithType: ICompositePredicateExpressionVisitorFactory.Create
    fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ICompositePredicateExpressionVisitorFactory.Create
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ICompositePredicateExpressionVisitorFactory.Create
    name: Create
    nameWithType: ICompositePredicateExpressionVisitorFactory.Create
    fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ICompositePredicateExpressionVisitorFactory.Create
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.ExpressionVisitor
  commentId: T:System.Linq.Expressions.ExpressionVisitor
  parent: System.Linq.Expressions
  isExternal: true
  name: ExpressionVisitor
  nameWithType: ExpressionVisitor
  fullName: System.Linq.Expressions.ExpressionVisitor
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: false
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
