### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder
  id: IRawSqlCommandBuilder
  parent: Microsoft.EntityFrameworkCore.Storage
  children:
  - Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder.Build(System.String)
  - Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder.Build(System.String,System.Collections.Generic.IReadOnlyList{System.Object})
  langs:
  - csharp
  - vb
  name: IRawSqlCommandBuilder
  nameWithType: IRawSqlCommandBuilder
  fullName: Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder
  type: Interface
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/IRawSqlCommandBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: IRawSqlCommandBuilder
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/IRawSqlCommandBuilder.cs
    startLine: 17
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n<p>\n    Creates commands based on raw SQL command text.\n</p>\n<p>\n    This type is typically used by database providers (and other extensions). It is generally\n    not used in application code.\n</p>\n"
  example: []
  syntax:
    content: public interface IRawSqlCommandBuilder
    content.vb: Public Interface IRawSqlCommandBuilder
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder.Build(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder.Build(System.String)
  id: Build(System.String)
  parent: Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder
  langs:
  - csharp
  - vb
  name: Build(String)
  nameWithType: IRawSqlCommandBuilder.Build(String)
  fullName: Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder.Build(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/IRawSqlCommandBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Build
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/IRawSqlCommandBuilder.cs
    startLine: 24
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n    Creates a new command based on SQL command text.\n"
  example: []
  syntax:
    content: IRelationalCommand Build(string sql)
    content.vb: Function Build(sql As String) As IRelationalCommand
    parameters:
    - id: sql
      type: System.String
      description: 'The command text. '
    return:
      type: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand
      description: 'The newly created command. '
- uid: Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder.Build(System.String,System.Collections.Generic.IReadOnlyList{System.Object})
  commentId: M:Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder.Build(System.String,System.Collections.Generic.IReadOnlyList{System.Object})
  id: Build(System.String,System.Collections.Generic.IReadOnlyList{System.Object})
  parent: Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder
  langs:
  - csharp
  - vb
  name: Build(String, IReadOnlyList<Object>)
  nameWithType: IRawSqlCommandBuilder.Build(String, IReadOnlyList<Object>)
  fullName: Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder.Build(System.String, System.Collections.Generic.IReadOnlyList<System.Object>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/IRawSqlCommandBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Build
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/IRawSqlCommandBuilder.cs
    startLine: 32
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n    Creates a new command based on SQL command text.\n"
  example: []
  syntax:
    content: RawSqlCommand Build(string sql, IReadOnlyList<object> parameters)
    content.vb: Function Build(sql As String, parameters As IReadOnlyList(Of Object)) As RawSqlCommand
    parameters:
    - id: sql
      type: System.String
      description: 'The command text. '
    - id: parameters
      type: System.Collections.Generic.IReadOnlyList{System.Object}
      description: 'Parameters for the command. '
    return:
      type: Microsoft.EntityFrameworkCore.Storage.RawSqlCommand
      description: 'The newly created command. '
  nameWithType.vb: IRawSqlCommandBuilder.Build(String, IReadOnlyList(Of Object))
  fullName.vb: Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder.Build(System.String, System.Collections.Generic.IReadOnlyList(Of System.Object))
  name.vb: Build(String, IReadOnlyList(Of Object))
references:
- uid: Microsoft.EntityFrameworkCore.Storage
  commentId: N:Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Storage
  nameWithType: Microsoft.EntityFrameworkCore.Storage
  fullName: Microsoft.EntityFrameworkCore.Storage
- uid: Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<IRawSqlCommandBuilder, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<IRawSqlCommandBuilder, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of IRawSqlCommandBuilder, TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder, TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of IRawSqlCommandBuilder, TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<IRawSqlCommandBuilder, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<IRawSqlCommandBuilder, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of IRawSqlCommandBuilder, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of IRawSqlCommandBuilder, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IRelationalCommand
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IRelationalCommand
  nameWithType: IRelationalCommand
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IReadOnlyList{System.Object}
  commentId: T:System.Collections.Generic.IReadOnlyList{System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<Object>
  nameWithType: IReadOnlyList<Object>
  fullName: System.Collections.Generic.IReadOnlyList<System.Object>
  nameWithType.vb: IReadOnlyList(Of Object)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of System.Object)
  name.vb: IReadOnlyList(Of Object)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.RawSqlCommand
  commentId: T:Microsoft.EntityFrameworkCore.Storage.RawSqlCommand
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: RawSqlCommand
  nameWithType: RawSqlCommand
  fullName: Microsoft.EntityFrameworkCore.Storage.RawSqlCommand
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
