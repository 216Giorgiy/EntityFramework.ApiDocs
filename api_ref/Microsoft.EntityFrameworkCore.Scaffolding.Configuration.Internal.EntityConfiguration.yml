### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration
  id: EntityConfiguration
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  children:
  - Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration.#ctor(Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.ModelConfiguration,Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  - Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration.AttributeConfigurations
  - Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration.EntityType
  - Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration.FindPropertyConfiguration(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  - Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration.FluentApiConfigurations
  - Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration.GetFluentApiConfigurations(System.Boolean)
  - Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration.GetOrAddPropertyConfiguration(Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration,Microsoft.EntityFrameworkCore.Metadata.Internal.Property)
  - Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration.GetPropertyConfigurations(System.Boolean)
  - Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration.GetRelationshipConfigurations(System.Boolean)
  - Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration.ModelConfiguration
  - Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration.NavigationPropertyConfigurations
  - Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration.NavigationPropertyInitializerConfigurations
  - Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration.PropertyConfigurations
  - Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration.RelationshipConfigurations
  langs:
  - csharp
  - vb
  name: EntityConfiguration
  nameWithType: EntityConfiguration
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/EntityConfiguration.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: EntityConfiguration
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/EntityConfiguration.cs
    startLine: 16
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public class EntityConfiguration
    content.vb: Public Class EntityConfiguration
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration.#ctor(Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.ModelConfiguration,Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration.#ctor(Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.ModelConfiguration,Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  id: '#ctor(Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.ModelConfiguration,Microsoft.EntityFrameworkCore.Metadata.IEntityType)'
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration
  langs:
  - csharp
  - vb
  name: EntityConfiguration(ModelConfiguration, IEntityType)
  nameWithType: EntityConfiguration.EntityConfiguration(ModelConfiguration, IEntityType)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration.EntityConfiguration(Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.ModelConfiguration, Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/EntityConfiguration.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/EntityConfiguration.cs
    startLine: 22
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public EntityConfiguration(ModelConfiguration modelConfiguration, IEntityType entityType)
    content.vb: Public Sub New(modelConfiguration As ModelConfiguration, entityType As IEntityType)
    parameters:
    - id: modelConfiguration
      type: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.ModelConfiguration
    - id: entityType
      type: Microsoft.EntityFrameworkCore.Metadata.IEntityType
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration.ModelConfiguration
  commentId: P:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration.ModelConfiguration
  id: ModelConfiguration
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration
  langs:
  - csharp
  - vb
  name: ModelConfiguration
  nameWithType: EntityConfiguration.ModelConfiguration
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration.ModelConfiguration
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/EntityConfiguration.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ModelConfiguration
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/EntityConfiguration.cs
    startLine: 37
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual ModelConfiguration ModelConfiguration { get; }
    content.vb: Public Overridable ReadOnly Property ModelConfiguration As ModelConfiguration
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.ModelConfiguration
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration.EntityType
  commentId: P:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration.EntityType
  id: EntityType
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration
  langs:
  - csharp
  - vb
  name: EntityType
  nameWithType: EntityConfiguration.EntityType
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration.EntityType
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/EntityConfiguration.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: EntityType
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/EntityConfiguration.cs
    startLine: 43
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual IEntityType EntityType { get; }
    content.vb: Public Overridable ReadOnly Property EntityType As IEntityType
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.IEntityType
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration.AttributeConfigurations
  commentId: P:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration.AttributeConfigurations
  id: AttributeConfigurations
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration
  langs:
  - csharp
  - vb
  name: AttributeConfigurations
  nameWithType: EntityConfiguration.AttributeConfigurations
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration.AttributeConfigurations
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/EntityConfiguration.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AttributeConfigurations
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/EntityConfiguration.cs
    startLine: 49
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual List<IAttributeConfiguration> AttributeConfigurations { get; }
    content.vb: Public Overridable ReadOnly Property AttributeConfigurations As List(Of IAttributeConfiguration)
    parameters: []
    return:
      type: System.Collections.Generic.List{Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IAttributeConfiguration}
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration.FluentApiConfigurations
  commentId: P:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration.FluentApiConfigurations
  id: FluentApiConfigurations
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration
  langs:
  - csharp
  - vb
  name: FluentApiConfigurations
  nameWithType: EntityConfiguration.FluentApiConfigurations
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration.FluentApiConfigurations
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/EntityConfiguration.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: FluentApiConfigurations
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/EntityConfiguration.cs
    startLine: 55
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual List<IFluentApiConfiguration> FluentApiConfigurations { get; }
    content.vb: Public Overridable ReadOnly Property FluentApiConfigurations As List(Of IFluentApiConfiguration)
    parameters: []
    return:
      type: System.Collections.Generic.List{Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IFluentApiConfiguration}
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration.PropertyConfigurations
  commentId: P:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration.PropertyConfigurations
  id: PropertyConfigurations
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration
  langs:
  - csharp
  - vb
  name: PropertyConfigurations
  nameWithType: EntityConfiguration.PropertyConfigurations
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration.PropertyConfigurations
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/EntityConfiguration.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: PropertyConfigurations
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/EntityConfiguration.cs
    startLine: 61
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual List<PropertyConfiguration> PropertyConfigurations { get; }
    content.vb: Public Overridable ReadOnly Property PropertyConfigurations As List(Of PropertyConfiguration)
    parameters: []
    return:
      type: System.Collections.Generic.List{Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration}
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration.NavigationPropertyConfigurations
  commentId: P:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration.NavigationPropertyConfigurations
  id: NavigationPropertyConfigurations
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration
  langs:
  - csharp
  - vb
  name: NavigationPropertyConfigurations
  nameWithType: EntityConfiguration.NavigationPropertyConfigurations
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration.NavigationPropertyConfigurations
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/EntityConfiguration.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: NavigationPropertyConfigurations
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/EntityConfiguration.cs
    startLine: 67
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual List<NavigationPropertyConfiguration> NavigationPropertyConfigurations { get; }
    content.vb: Public Overridable ReadOnly Property NavigationPropertyConfigurations As List(Of NavigationPropertyConfiguration)
    parameters: []
    return:
      type: System.Collections.Generic.List{Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.NavigationPropertyConfiguration}
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration.NavigationPropertyInitializerConfigurations
  commentId: P:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration.NavigationPropertyInitializerConfigurations
  id: NavigationPropertyInitializerConfigurations
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration
  langs:
  - csharp
  - vb
  name: NavigationPropertyInitializerConfigurations
  nameWithType: EntityConfiguration.NavigationPropertyInitializerConfigurations
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration.NavigationPropertyInitializerConfigurations
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/EntityConfiguration.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: NavigationPropertyInitializerConfigurations
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/EntityConfiguration.cs
    startLine: 74
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual List<NavigationPropertyInitializerConfiguration> NavigationPropertyInitializerConfigurations { get; }
    content.vb: Public Overridable ReadOnly Property NavigationPropertyInitializerConfigurations As List(Of NavigationPropertyInitializerConfiguration)
    parameters: []
    return:
      type: System.Collections.Generic.List{Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.NavigationPropertyInitializerConfiguration}
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration.RelationshipConfigurations
  commentId: P:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration.RelationshipConfigurations
  id: RelationshipConfigurations
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration
  langs:
  - csharp
  - vb
  name: RelationshipConfigurations
  nameWithType: EntityConfiguration.RelationshipConfigurations
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration.RelationshipConfigurations
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/EntityConfiguration.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: RelationshipConfigurations
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/EntityConfiguration.cs
    startLine: 81
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual List<RelationshipConfiguration> RelationshipConfigurations { get; }
    content.vb: Public Overridable ReadOnly Property RelationshipConfigurations As List(Of RelationshipConfiguration)
    parameters: []
    return:
      type: System.Collections.Generic.List{Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.RelationshipConfiguration}
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration.FindPropertyConfiguration(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration.FindPropertyConfiguration(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  id: FindPropertyConfiguration(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration
  langs:
  - csharp
  - vb
  name: FindPropertyConfiguration(IProperty)
  nameWithType: EntityConfiguration.FindPropertyConfiguration(IProperty)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration.FindPropertyConfiguration(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/EntityConfiguration.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: FindPropertyConfiguration
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/EntityConfiguration.cs
    startLine: 87
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual PropertyConfiguration FindPropertyConfiguration(IProperty property)
    content.vb: Public Overridable Function FindPropertyConfiguration(property As IProperty) As PropertyConfiguration
    parameters:
    - id: property
      type: Microsoft.EntityFrameworkCore.Metadata.IProperty
    return:
      type: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration.GetOrAddPropertyConfiguration(Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration,Microsoft.EntityFrameworkCore.Metadata.Internal.Property)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration.GetOrAddPropertyConfiguration(Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration,Microsoft.EntityFrameworkCore.Metadata.Internal.Property)
  id: GetOrAddPropertyConfiguration(Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration,Microsoft.EntityFrameworkCore.Metadata.Internal.Property)
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration
  langs:
  - csharp
  - vb
  name: GetOrAddPropertyConfiguration(EntityConfiguration, Property)
  nameWithType: EntityConfiguration.GetOrAddPropertyConfiguration(EntityConfiguration, Property)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration.GetOrAddPropertyConfiguration(Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration, Microsoft.EntityFrameworkCore.Metadata.Internal.Property)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/EntityConfiguration.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetOrAddPropertyConfiguration
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/EntityConfiguration.cs
    startLine: 98
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual PropertyConfiguration GetOrAddPropertyConfiguration(EntityConfiguration entityConfiguration, Property property)
    content.vb: Public Overridable Function GetOrAddPropertyConfiguration(entityConfiguration As EntityConfiguration, property As  Property) As PropertyConfiguration
    parameters:
    - id: entityConfiguration
      type: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration
    - id: property
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.Property
    return:
      type: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration.GetFluentApiConfigurations(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration.GetFluentApiConfigurations(System.Boolean)
  id: GetFluentApiConfigurations(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration
  langs:
  - csharp
  - vb
  name: GetFluentApiConfigurations(Boolean)
  nameWithType: EntityConfiguration.GetFluentApiConfigurations(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration.GetFluentApiConfigurations(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/EntityConfiguration.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetFluentApiConfigurations
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/EntityConfiguration.cs
    startLine: 118
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual List<IFluentApiConfiguration> GetFluentApiConfigurations(bool useFluentApiOnly)
    content.vb: Public Overridable Function GetFluentApiConfigurations(useFluentApiOnly As Boolean) As List(Of IFluentApiConfiguration)
    parameters:
    - id: useFluentApiOnly
      type: System.Boolean
    return:
      type: System.Collections.Generic.List{Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IFluentApiConfiguration}
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration.GetPropertyConfigurations(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration.GetPropertyConfigurations(System.Boolean)
  id: GetPropertyConfigurations(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration
  langs:
  - csharp
  - vb
  name: GetPropertyConfigurations(Boolean)
  nameWithType: EntityConfiguration.GetPropertyConfigurations(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration.GetPropertyConfigurations(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/EntityConfiguration.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetPropertyConfigurations
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/EntityConfiguration.cs
    startLine: 130
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual List<PropertyConfiguration> GetPropertyConfigurations(bool useFluentApiOnly)
    content.vb: Public Overridable Function GetPropertyConfigurations(useFluentApiOnly As Boolean) As List(Of PropertyConfiguration)
    parameters:
    - id: useFluentApiOnly
      type: System.Boolean
    return:
      type: System.Collections.Generic.List{Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration}
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration.GetRelationshipConfigurations(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration.GetRelationshipConfigurations(System.Boolean)
  id: GetRelationshipConfigurations(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration
  langs:
  - csharp
  - vb
  name: GetRelationshipConfigurations(Boolean)
  nameWithType: EntityConfiguration.GetRelationshipConfigurations(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration.GetRelationshipConfigurations(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/EntityConfiguration.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetRelationshipConfigurations
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/EntityConfiguration.cs
    startLine: 140
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual List<RelationshipConfiguration> GetRelationshipConfigurations(bool useFluentApiOnly)
    content.vb: Public Overridable Function GetRelationshipConfigurations(useFluentApiOnly As Boolean) As List(Of RelationshipConfiguration)
    parameters:
    - id: useFluentApiOnly
      type: System.Boolean
    return:
      type: System.Collections.Generic.List{Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.RelationshipConfiguration}
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.ModelConfiguration
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.ModelConfiguration
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  isExternal: false
  name: ModelConfiguration
  nameWithType: ModelConfiguration
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.ModelConfiguration
- uid: Microsoft.EntityFrameworkCore.Metadata.IEntityType
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IEntityType
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IEntityType
  nameWithType: IEntityType
  fullName: Microsoft.EntityFrameworkCore.Metadata.IEntityType
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: System.Collections.Generic.List{Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IAttributeConfiguration}
  commentId: T:System.Collections.Generic.List{Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IAttributeConfiguration}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<IAttributeConfiguration>
  nameWithType: List<IAttributeConfiguration>
  fullName: System.Collections.Generic.List<Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IAttributeConfiguration>
  nameWithType.vb: List(Of IAttributeConfiguration)
  fullname.vb: System.Collections.Generic.List(Of Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IAttributeConfiguration)
  name.vb: List(Of IAttributeConfiguration)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IAttributeConfiguration
    name: IAttributeConfiguration
    nameWithType: IAttributeConfiguration
    fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IAttributeConfiguration
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IAttributeConfiguration
    name: IAttributeConfiguration
    nameWithType: IAttributeConfiguration
    fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IAttributeConfiguration
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullname.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.List{Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IFluentApiConfiguration}
  commentId: T:System.Collections.Generic.List{Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IFluentApiConfiguration}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<IFluentApiConfiguration>
  nameWithType: List<IFluentApiConfiguration>
  fullName: System.Collections.Generic.List<Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IFluentApiConfiguration>
  nameWithType.vb: List(Of IFluentApiConfiguration)
  fullname.vb: System.Collections.Generic.List(Of Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IFluentApiConfiguration)
  name.vb: List(Of IFluentApiConfiguration)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IFluentApiConfiguration
    name: IFluentApiConfiguration
    nameWithType: IFluentApiConfiguration
    fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IFluentApiConfiguration
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IFluentApiConfiguration
    name: IFluentApiConfiguration
    nameWithType: IFluentApiConfiguration
    fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IFluentApiConfiguration
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration}
  commentId: T:System.Collections.Generic.List{Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<PropertyConfiguration>
  nameWithType: List<PropertyConfiguration>
  fullName: System.Collections.Generic.List<Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration>
  nameWithType.vb: List(Of PropertyConfiguration)
  fullname.vb: System.Collections.Generic.List(Of Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration)
  name.vb: List(Of PropertyConfiguration)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration
    name: PropertyConfiguration
    nameWithType: PropertyConfiguration
    fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration
    name: PropertyConfiguration
    nameWithType: PropertyConfiguration
    fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.NavigationPropertyConfiguration}
  commentId: T:System.Collections.Generic.List{Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.NavigationPropertyConfiguration}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<NavigationPropertyConfiguration>
  nameWithType: List<NavigationPropertyConfiguration>
  fullName: System.Collections.Generic.List<Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.NavigationPropertyConfiguration>
  nameWithType.vb: List(Of NavigationPropertyConfiguration)
  fullname.vb: System.Collections.Generic.List(Of Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.NavigationPropertyConfiguration)
  name.vb: List(Of NavigationPropertyConfiguration)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.NavigationPropertyConfiguration
    name: NavigationPropertyConfiguration
    nameWithType: NavigationPropertyConfiguration
    fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.NavigationPropertyConfiguration
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.NavigationPropertyConfiguration
    name: NavigationPropertyConfiguration
    nameWithType: NavigationPropertyConfiguration
    fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.NavigationPropertyConfiguration
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.NavigationPropertyInitializerConfiguration}
  commentId: T:System.Collections.Generic.List{Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.NavigationPropertyInitializerConfiguration}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<NavigationPropertyInitializerConfiguration>
  nameWithType: List<NavigationPropertyInitializerConfiguration>
  fullName: System.Collections.Generic.List<Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.NavigationPropertyInitializerConfiguration>
  nameWithType.vb: List(Of NavigationPropertyInitializerConfiguration)
  fullname.vb: System.Collections.Generic.List(Of Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.NavigationPropertyInitializerConfiguration)
  name.vb: List(Of NavigationPropertyInitializerConfiguration)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.NavigationPropertyInitializerConfiguration
    name: NavigationPropertyInitializerConfiguration
    nameWithType: NavigationPropertyInitializerConfiguration
    fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.NavigationPropertyInitializerConfiguration
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.NavigationPropertyInitializerConfiguration
    name: NavigationPropertyInitializerConfiguration
    nameWithType: NavigationPropertyInitializerConfiguration
    fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.NavigationPropertyInitializerConfiguration
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.RelationshipConfiguration}
  commentId: T:System.Collections.Generic.List{Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.RelationshipConfiguration}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<RelationshipConfiguration>
  nameWithType: List<RelationshipConfiguration>
  fullName: System.Collections.Generic.List<Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.RelationshipConfiguration>
  nameWithType.vb: List(Of RelationshipConfiguration)
  fullname.vb: System.Collections.Generic.List(Of Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.RelationshipConfiguration)
  name.vb: List(Of RelationshipConfiguration)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.RelationshipConfiguration
    name: RelationshipConfiguration
    nameWithType: RelationshipConfiguration
    fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.RelationshipConfiguration
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.RelationshipConfiguration
    name: RelationshipConfiguration
    nameWithType: RelationshipConfiguration
    fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.RelationshipConfiguration
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IProperty
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IProperty
  nameWithType: IProperty
  fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  isExternal: false
  name: PropertyConfiguration
  nameWithType: PropertyConfiguration
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  isExternal: false
  name: EntityConfiguration
  nameWithType: EntityConfiguration
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.Property
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.Property
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Property
  nameWithType: Property
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.Property
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
