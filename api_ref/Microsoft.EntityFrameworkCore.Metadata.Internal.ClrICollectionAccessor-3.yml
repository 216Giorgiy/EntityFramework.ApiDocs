### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3
  id: ClrICollectionAccessor`3
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  children:
  - Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3.#ctor(System.String,System.Func{`0,`1},System.Action{`0,`1},System.Func{`0,System.Action{`0,`1},`1},System.Func{`1})
  - Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3.Add(System.Object,System.Object)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3.AddRange(System.Object,System.Collections.Generic.IEnumerable{System.Object})
  - Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3.CollectionType
  - Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3.Contains(System.Object,System.Object)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3.Create(System.Collections.Generic.IEnumerable{System.Object})
  - Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3.GetOrCreate(System.Object)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3.Remove(System.Object,System.Object)
  langs:
  - csharp
  - vb
  name: ClrICollectionAccessor<TEntity, TCollection, TElement>
  nameWithType: ClrICollectionAccessor<TEntity, TCollection, TElement>
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor<TEntity, TCollection, TElement>
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ClrICollectionAccessor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ClrICollectionAccessor
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ClrICollectionAccessor.cs
    startLine: 14
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public class ClrICollectionAccessor<TEntity, TCollection, TElement> : IClrCollectionAccessor where TEntity : class where TCollection : class, IEnumerable<TElement>'
    content.vb: >-
      Public Class ClrICollectionAccessor(Of TEntity As Class, TCollection As {Class, IEnumerable(Of TElement)}, TElement)
          Implements IClrCollectionAccessor
    typeParameters:
    - id: TEntity
    - id: TCollection
    - id: TElement
  inheritance:
  - System.Object
  implements:
  - Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: ClrICollectionAccessor(Of TEntity, TCollection, TElement)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor(Of TEntity, TCollection, TElement)
  name.vb: ClrICollectionAccessor(Of TEntity, TCollection, TElement)
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3.CollectionType
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3.CollectionType
  id: CollectionType
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3
  langs:
  - csharp
  - vb
  name: CollectionType
  nameWithType: ClrICollectionAccessor<TEntity, TCollection, TElement>.CollectionType
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor<TEntity, TCollection, TElement>.CollectionType
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ClrICollectionAccessor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CollectionType
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ClrICollectionAccessor.cs
    startLine: 28
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual Type CollectionType { get; }
    content.vb: Public Overridable ReadOnly Property CollectionType As Type
    parameters: []
    return:
      type: System.Type
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3.CollectionType*
  implements:
  - Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor.CollectionType
  nameWithType.vb: ClrICollectionAccessor(Of TEntity, TCollection, TElement).CollectionType
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor(Of TEntity, TCollection, TElement).CollectionType
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3.#ctor(System.String,System.Func{`0,`1},System.Action{`0,`1},System.Func{`0,System.Action{`0,`1},`1},System.Func{`1})
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3.#ctor(System.String,System.Func{`0,`1},System.Action{`0,`1},System.Func{`0,System.Action{`0,`1},`1},System.Func{`1})
  id: '#ctor(System.String,System.Func{`0,`1},System.Action{`0,`1},System.Func{`0,System.Action{`0,`1},`1},System.Func{`1})'
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3
  langs:
  - csharp
  - vb
  name: ClrICollectionAccessor(String, Func<TEntity, TCollection>, Action<TEntity, TCollection>, Func<TEntity, Action<TEntity, TCollection>, TCollection>, Func<TCollection>)
  nameWithType: ClrICollectionAccessor<TEntity, TCollection, TElement>.ClrICollectionAccessor(String, Func<TEntity, TCollection>, Action<TEntity, TCollection>, Func<TEntity, Action<TEntity, TCollection>, TCollection>, Func<TCollection>)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor<TEntity, TCollection, TElement>.ClrICollectionAccessor(System.String, System.Func<TEntity, TCollection>, System.Action<TEntity, TCollection>, System.Func<TEntity, System.Action<TEntity, TCollection>, TCollection>, System.Func<TCollection>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ClrICollectionAccessor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ClrICollectionAccessor.cs
    startLine: 34
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public ClrICollectionAccessor(string propertyName, Func<TEntity, TCollection> getCollection, Action<TEntity, TCollection> setCollection, Func<TEntity, Action<TEntity, TCollection>, TCollection> createAndSetCollection, Func<TCollection> createCollection)
    content.vb: Public Sub New(propertyName As String, getCollection As Func(Of TEntity, TCollection), setCollection As Action(Of TEntity, TCollection), createAndSetCollection As Func(Of TEntity, Action(Of TEntity, TCollection), TCollection), createCollection As Func(Of TCollection))
    parameters:
    - id: propertyName
      type: System.String
    - id: getCollection
      type: System.Func{{TEntity},{TCollection}}
    - id: setCollection
      type: System.Action{{TEntity},{TCollection}}
    - id: createAndSetCollection
      type: System.Func{{TEntity},System.Action{{TEntity},{TCollection}},{TCollection}}
    - id: createCollection
      type: System.Func{{TCollection}}
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3.#ctor*
  nameWithType.vb: ClrICollectionAccessor(Of TEntity, TCollection, TElement).ClrICollectionAccessor(String, Func(Of TEntity, TCollection), Action(Of TEntity, TCollection), Func(Of TEntity, Action(Of TEntity, TCollection), TCollection), Func(Of TCollection))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor(Of TEntity, TCollection, TElement).ClrICollectionAccessor(System.String, System.Func(Of TEntity, TCollection), System.Action(Of TEntity, TCollection), System.Func(Of TEntity, System.Action(Of TEntity, TCollection), TCollection), System.Func(Of TCollection))
  name.vb: ClrICollectionAccessor(String, Func(Of TEntity, TCollection), Action(Of TEntity, TCollection), Func(Of TEntity, Action(Of TEntity, TCollection), TCollection), Func(Of TCollection))
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3.Add(System.Object,System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3.Add(System.Object,System.Object)
  id: Add(System.Object,System.Object)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3
  langs:
  - csharp
  - vb
  name: Add(Object, Object)
  nameWithType: ClrICollectionAccessor<TEntity, TCollection, TElement>.Add(Object, Object)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor<TEntity, TCollection, TElement>.Add(System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ClrICollectionAccessor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Add
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ClrICollectionAccessor.cs
    startLine: 52
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual bool Add(object instance, object value)
    content.vb: Public Overridable Function Add(instance As Object, value As Object) As Boolean
    parameters:
    - id: instance
      type: System.Object
    - id: value
      type: System.Object
    return:
      type: System.Boolean
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3.Add*
  implements:
  - Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor.Add(System.Object,System.Object)
  nameWithType.vb: ClrICollectionAccessor(Of TEntity, TCollection, TElement).Add(Object, Object)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor(Of TEntity, TCollection, TElement).Add(System.Object, System.Object)
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3.AddRange(System.Object,System.Collections.Generic.IEnumerable{System.Object})
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3.AddRange(System.Object,System.Collections.Generic.IEnumerable{System.Object})
  id: AddRange(System.Object,System.Collections.Generic.IEnumerable{System.Object})
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3
  langs:
  - csharp
  - vb
  name: AddRange(Object, IEnumerable<Object>)
  nameWithType: ClrICollectionAccessor<TEntity, TCollection, TElement>.AddRange(Object, IEnumerable<Object>)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor<TEntity, TCollection, TElement>.AddRange(System.Object, System.Collections.Generic.IEnumerable<System.Object>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ClrICollectionAccessor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AddRange
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ClrICollectionAccessor.cs
    startLine: 69
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual void AddRange(object instance, IEnumerable<object> values)
    content.vb: Public Overridable Sub AddRange(instance As Object, values As IEnumerable(Of Object))
    parameters:
    - id: instance
      type: System.Object
    - id: values
      type: System.Collections.Generic.IEnumerable{System.Object}
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3.AddRange*
  implements:
  - Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor.AddRange(System.Object,System.Collections.Generic.IEnumerable{System.Object})
  nameWithType.vb: ClrICollectionAccessor(Of TEntity, TCollection, TElement).AddRange(Object, IEnumerable(Of Object))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor(Of TEntity, TCollection, TElement).AddRange(System.Object, System.Collections.Generic.IEnumerable(Of System.Object))
  name.vb: AddRange(Object, IEnumerable(Of Object))
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3.Create(System.Collections.Generic.IEnumerable{System.Object})
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3.Create(System.Collections.Generic.IEnumerable{System.Object})
  id: Create(System.Collections.Generic.IEnumerable{System.Object})
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3
  langs:
  - csharp
  - vb
  name: Create(IEnumerable<Object>)
  nameWithType: ClrICollectionAccessor<TEntity, TCollection, TElement>.Create(IEnumerable<Object>)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor<TEntity, TCollection, TElement>.Create(System.Collections.Generic.IEnumerable<System.Object>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ClrICollectionAccessor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Create
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ClrICollectionAccessor.cs
    startLine: 86
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual object Create(IEnumerable<object> values)
    content.vb: Public Overridable Function Create(values As IEnumerable(Of Object)) As Object
    parameters:
    - id: values
      type: System.Collections.Generic.IEnumerable{System.Object}
    return:
      type: System.Object
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3.Create*
  implements:
  - Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor.Create(System.Collections.Generic.IEnumerable{System.Object})
  nameWithType.vb: ClrICollectionAccessor(Of TEntity, TCollection, TElement).Create(IEnumerable(Of Object))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor(Of TEntity, TCollection, TElement).Create(System.Collections.Generic.IEnumerable(Of System.Object))
  name.vb: Create(IEnumerable(Of Object))
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3.GetOrCreate(System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3.GetOrCreate(System.Object)
  id: GetOrCreate(System.Object)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3
  langs:
  - csharp
  - vb
  name: GetOrCreate(Object)
  nameWithType: ClrICollectionAccessor<TEntity, TCollection, TElement>.GetOrCreate(Object)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor<TEntity, TCollection, TElement>.GetOrCreate(System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ClrICollectionAccessor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetOrCreate
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ClrICollectionAccessor.cs
    startLine: 107
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual object GetOrCreate(object instance)
    content.vb: Public Overridable Function GetOrCreate(instance As Object) As Object
    parameters:
    - id: instance
      type: System.Object
    return:
      type: System.Object
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3.GetOrCreate*
  implements:
  - Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor.GetOrCreate(System.Object)
  nameWithType.vb: ClrICollectionAccessor(Of TEntity, TCollection, TElement).GetOrCreate(Object)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor(Of TEntity, TCollection, TElement).GetOrCreate(System.Object)
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3.Contains(System.Object,System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3.Contains(System.Object,System.Object)
  id: Contains(System.Object,System.Object)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3
  langs:
  - csharp
  - vb
  name: Contains(Object, Object)
  nameWithType: ClrICollectionAccessor<TEntity, TCollection, TElement>.Contains(Object, Object)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor<TEntity, TCollection, TElement>.Contains(System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ClrICollectionAccessor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Contains
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ClrICollectionAccessor.cs
    startLine: 155
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual bool Contains(object instance, object value)
    content.vb: Public Overridable Function Contains(instance As Object, value As Object) As Boolean
    parameters:
    - id: instance
      type: System.Object
    - id: value
      type: System.Object
    return:
      type: System.Boolean
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3.Contains*
  implements:
  - Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor.Contains(System.Object,System.Object)
  nameWithType.vb: ClrICollectionAccessor(Of TEntity, TCollection, TElement).Contains(Object, Object)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor(Of TEntity, TCollection, TElement).Contains(System.Object, System.Object)
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3.Remove(System.Object,System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3.Remove(System.Object,System.Object)
  id: Remove(System.Object,System.Object)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3
  langs:
  - csharp
  - vb
  name: Remove(Object, Object)
  nameWithType: ClrICollectionAccessor<TEntity, TCollection, TElement>.Remove(Object, Object)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor<TEntity, TCollection, TElement>.Remove(System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ClrICollectionAccessor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Remove
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ClrICollectionAccessor.cs
    startLine: 166
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual void Remove(object instance, object value)
    content.vb: Public Overridable Sub Remove(instance As Object, value As Object)
    parameters:
    - id: instance
      type: System.Object
    - id: value
      type: System.Object
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3.Remove*
  implements:
  - Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor.Remove(System.Object,System.Object)
  nameWithType.vb: ClrICollectionAccessor(Of TEntity, TCollection, TElement).Remove(Object, Object)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor(Of TEntity, TCollection, TElement).Remove(System.Object, System.Object)
references:
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: IClrCollectionAccessor
  nameWithType: IClrCollectionAccessor
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3.CollectionType*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3.CollectionType
  isExternal: false
  name: CollectionType
  nameWithType: ClrICollectionAccessor<TEntity, TCollection, TElement>.CollectionType
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor<TEntity, TCollection, TElement>.CollectionType
  nameWithType.vb: ClrICollectionAccessor(Of TEntity, TCollection, TElement).CollectionType
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor(Of TEntity, TCollection, TElement).CollectionType
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor.CollectionType
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor.CollectionType
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor
  isExternal: false
  name: CollectionType
  nameWithType: IClrCollectionAccessor.CollectionType
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor.CollectionType
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3.#ctor*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3.#ctor
  isExternal: false
  name: ClrICollectionAccessor
  nameWithType: ClrICollectionAccessor<TEntity, TCollection, TElement>.ClrICollectionAccessor
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor<TEntity, TCollection, TElement>.ClrICollectionAccessor
  nameWithType.vb: ClrICollectionAccessor(Of TEntity, TCollection, TElement).ClrICollectionAccessor
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor(Of TEntity, TCollection, TElement).ClrICollectionAccessor
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Func{{TEntity},{TCollection}}
  commentId: T:System.Func{`0,`1}
  parent: System
  definition: System.Func`2
  name: Func<TEntity, TCollection>
  nameWithType: Func<TEntity, TCollection>
  fullName: System.Func<TEntity, TCollection>
  nameWithType.vb: Func(Of TEntity, TCollection)
  fullname.vb: System.Func(Of TEntity, TCollection)
  name.vb: Func(Of TEntity, TCollection)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TCollection
    nameWithType: TCollection
    fullName: TCollection
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TCollection
    nameWithType: TCollection
    fullName: TCollection
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{{TEntity},{TCollection}}
  commentId: T:System.Action{`0,`1}
  parent: System
  definition: System.Action`2
  name: Action<TEntity, TCollection>
  nameWithType: Action<TEntity, TCollection>
  fullName: System.Action<TEntity, TCollection>
  nameWithType.vb: Action(Of TEntity, TCollection)
  fullname.vb: System.Action(Of TEntity, TCollection)
  name.vb: Action(Of TEntity, TCollection)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TCollection
    nameWithType: TCollection
    fullName: TCollection
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TCollection
    nameWithType: TCollection
    fullName: TCollection
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{{TEntity},System.Action{{TEntity},{TCollection}},{TCollection}}
  commentId: T:System.Func{`0,System.Action{`0,`1},`1}
  parent: System
  definition: System.Func`3
  name: Func<TEntity, Action<TEntity, TCollection>, TCollection>
  nameWithType: Func<TEntity, Action<TEntity, TCollection>, TCollection>
  fullName: System.Func<TEntity, System.Action<TEntity, TCollection>, TCollection>
  nameWithType.vb: Func(Of TEntity, Action(Of TEntity, TCollection), TCollection)
  fullname.vb: System.Func(Of TEntity, System.Action(Of TEntity, TCollection), TCollection)
  name.vb: Func(Of TEntity, Action(Of TEntity, TCollection), TCollection)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TCollection
    nameWithType: TCollection
    fullName: TCollection
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TCollection
    nameWithType: TCollection
    fullName: TCollection
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TCollection
    nameWithType: TCollection
    fullName: TCollection
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TCollection
    nameWithType: TCollection
    fullName: TCollection
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{{TCollection}}
  commentId: T:System.Func{`1}
  parent: System
  definition: System.Func`1
  name: Func<TCollection>
  nameWithType: Func<TCollection>
  fullName: System.Func<TCollection>
  nameWithType.vb: Func(Of TCollection)
  fullname.vb: System.Func(Of TCollection)
  name.vb: Func(Of TCollection)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TCollection
    nameWithType: TCollection
    fullName: TCollection
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCollection
    nameWithType: TCollection
    fullName: TCollection
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullname.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullname.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullname.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullname.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3.Add*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3.Add
  isExternal: false
  name: Add
  nameWithType: ClrICollectionAccessor<TEntity, TCollection, TElement>.Add
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor<TEntity, TCollection, TElement>.Add
  nameWithType.vb: ClrICollectionAccessor(Of TEntity, TCollection, TElement).Add
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor(Of TEntity, TCollection, TElement).Add
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor.Add(System.Object,System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor.Add(System.Object,System.Object)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor
  isExternal: true
  name: Add(Object, Object)
  nameWithType: IClrCollectionAccessor.Add(Object, Object)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor.Add(System.Object, System.Object)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor.Add(System.Object,System.Object)
    name: Add
    nameWithType: IClrCollectionAccessor.Add
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor.Add(System.Object,System.Object)
    name: Add
    nameWithType: IClrCollectionAccessor.Add
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3.AddRange*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3.AddRange
  isExternal: false
  name: AddRange
  nameWithType: ClrICollectionAccessor<TEntity, TCollection, TElement>.AddRange
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor<TEntity, TCollection, TElement>.AddRange
  nameWithType.vb: ClrICollectionAccessor(Of TEntity, TCollection, TElement).AddRange
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor(Of TEntity, TCollection, TElement).AddRange
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor.AddRange(System.Object,System.Collections.Generic.IEnumerable{System.Object})
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor.AddRange(System.Object,System.Collections.Generic.IEnumerable{System.Object})
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor
  isExternal: true
  name: AddRange(Object, IEnumerable<Object>)
  nameWithType: IClrCollectionAccessor.AddRange(Object, IEnumerable<Object>)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor.AddRange(System.Object, System.Collections.Generic.IEnumerable<System.Object>)
  nameWithType.vb: IClrCollectionAccessor.AddRange(Object, IEnumerable(Of Object))
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor.AddRange(System.Object, System.Collections.Generic.IEnumerable(Of System.Object))
  name.vb: AddRange(Object, IEnumerable(Of Object))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor.AddRange(System.Object,System.Collections.Generic.IEnumerable{System.Object})
    name: AddRange
    nameWithType: IClrCollectionAccessor.AddRange
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor.AddRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor.AddRange(System.Object,System.Collections.Generic.IEnumerable{System.Object})
    name: AddRange
    nameWithType: IClrCollectionAccessor.AddRange
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor.AddRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Object}
  commentId: T:System.Collections.Generic.IEnumerable{System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Object>
  nameWithType: IEnumerable<Object>
  fullName: System.Collections.Generic.IEnumerable<System.Object>
  nameWithType.vb: IEnumerable(Of Object)
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Object)
  name.vb: IEnumerable(Of Object)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3.Create*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3.Create
  isExternal: false
  name: Create
  nameWithType: ClrICollectionAccessor<TEntity, TCollection, TElement>.Create
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor<TEntity, TCollection, TElement>.Create
  nameWithType.vb: ClrICollectionAccessor(Of TEntity, TCollection, TElement).Create
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor(Of TEntity, TCollection, TElement).Create
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor.Create(System.Collections.Generic.IEnumerable{System.Object})
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor.Create(System.Collections.Generic.IEnumerable{System.Object})
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor
  isExternal: true
  name: Create(IEnumerable<Object>)
  nameWithType: IClrCollectionAccessor.Create(IEnumerable<Object>)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor.Create(System.Collections.Generic.IEnumerable<System.Object>)
  nameWithType.vb: IClrCollectionAccessor.Create(IEnumerable(Of Object))
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor.Create(System.Collections.Generic.IEnumerable(Of System.Object))
  name.vb: Create(IEnumerable(Of Object))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor.Create(System.Collections.Generic.IEnumerable{System.Object})
    name: Create
    nameWithType: IClrCollectionAccessor.Create
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor.Create
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor.Create(System.Collections.Generic.IEnumerable{System.Object})
    name: Create
    nameWithType: IClrCollectionAccessor.Create
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor.Create
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3.GetOrCreate*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3.GetOrCreate
  isExternal: false
  name: GetOrCreate
  nameWithType: ClrICollectionAccessor<TEntity, TCollection, TElement>.GetOrCreate
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor<TEntity, TCollection, TElement>.GetOrCreate
  nameWithType.vb: ClrICollectionAccessor(Of TEntity, TCollection, TElement).GetOrCreate
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor(Of TEntity, TCollection, TElement).GetOrCreate
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor.GetOrCreate(System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor.GetOrCreate(System.Object)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor
  isExternal: true
  name: GetOrCreate(Object)
  nameWithType: IClrCollectionAccessor.GetOrCreate(Object)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor.GetOrCreate(System.Object)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor.GetOrCreate(System.Object)
    name: GetOrCreate
    nameWithType: IClrCollectionAccessor.GetOrCreate
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor.GetOrCreate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor.GetOrCreate(System.Object)
    name: GetOrCreate
    nameWithType: IClrCollectionAccessor.GetOrCreate
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor.GetOrCreate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3.Contains*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3.Contains
  isExternal: false
  name: Contains
  nameWithType: ClrICollectionAccessor<TEntity, TCollection, TElement>.Contains
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor<TEntity, TCollection, TElement>.Contains
  nameWithType.vb: ClrICollectionAccessor(Of TEntity, TCollection, TElement).Contains
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor(Of TEntity, TCollection, TElement).Contains
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor.Contains(System.Object,System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor.Contains(System.Object,System.Object)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor
  isExternal: true
  name: Contains(Object, Object)
  nameWithType: IClrCollectionAccessor.Contains(Object, Object)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor.Contains(System.Object, System.Object)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor.Contains(System.Object,System.Object)
    name: Contains
    nameWithType: IClrCollectionAccessor.Contains
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor.Contains
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor.Contains(System.Object,System.Object)
    name: Contains
    nameWithType: IClrCollectionAccessor.Contains
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor.Contains
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3.Remove*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3.Remove
  isExternal: false
  name: Remove
  nameWithType: ClrICollectionAccessor<TEntity, TCollection, TElement>.Remove
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor<TEntity, TCollection, TElement>.Remove
  nameWithType.vb: ClrICollectionAccessor(Of TEntity, TCollection, TElement).Remove
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor(Of TEntity, TCollection, TElement).Remove
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor.Remove(System.Object,System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor.Remove(System.Object,System.Object)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor
  isExternal: true
  name: Remove(Object, Object)
  nameWithType: IClrCollectionAccessor.Remove(Object, Object)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor.Remove(System.Object, System.Object)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor.Remove(System.Object,System.Object)
    name: Remove
    nameWithType: IClrCollectionAccessor.Remove
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor.Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor.Remove(System.Object,System.Object)
    name: Remove
    nameWithType: IClrCollectionAccessor.Remove
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor.Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
