### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.IndexComparer
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.IndexComparer
  id: IndexComparer
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities
  children:
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.IndexComparer.#ctor(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.IndexComparer.Compare(Microsoft.EntityFrameworkCore.Metadata.IIndex,Microsoft.EntityFrameworkCore.Metadata.IIndex)
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.IndexComparer.Equals(Microsoft.EntityFrameworkCore.Metadata.IIndex,Microsoft.EntityFrameworkCore.Metadata.IIndex)
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.IndexComparer.GetHashCode(Microsoft.EntityFrameworkCore.Metadata.IIndex)
  langs:
  - csharp
  - vb
  name: IndexComparer
  nameWithType: IndexComparer
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.IndexComparer
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestUtilities/IndexComparer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: IndexComparer
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestUtilities/IndexComparer.cs
    startLine: 10
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities
  syntax:
    content: 'public class IndexComparer : IEqualityComparer<IIndex>, IComparer<IIndex>'
    content.vb: >-
      Public Class IndexComparer
          Implements IEqualityComparer(Of IIndex), IComparer(Of IIndex)
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEqualityComparer{Microsoft.EntityFrameworkCore.Metadata.IIndex}
  - System.Collections.Generic.IComparer{Microsoft.EntityFrameworkCore.Metadata.IIndex}
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.IndexComparer.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.IndexComparer.#ctor(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.IndexComparer.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.IndexComparer
  langs:
  - csharp
  - vb
  name: IndexComparer(Boolean)
  nameWithType: IndexComparer.IndexComparer(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.IndexComparer.IndexComparer(System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestUtilities/IndexComparer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestUtilities/IndexComparer.cs
    startLine: 14
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities
  syntax:
    content: public IndexComparer(bool compareAnnotations = true)
    content.vb: Public Sub New(compareAnnotations As Boolean = True)
    parameters:
    - id: compareAnnotations
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.IndexComparer.Compare(Microsoft.EntityFrameworkCore.Metadata.IIndex,Microsoft.EntityFrameworkCore.Metadata.IIndex)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.IndexComparer.Compare(Microsoft.EntityFrameworkCore.Metadata.IIndex,Microsoft.EntityFrameworkCore.Metadata.IIndex)
  id: Compare(Microsoft.EntityFrameworkCore.Metadata.IIndex,Microsoft.EntityFrameworkCore.Metadata.IIndex)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.IndexComparer
  langs:
  - csharp
  - vb
  name: Compare(IIndex, IIndex)
  nameWithType: IndexComparer.Compare(IIndex, IIndex)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.IndexComparer.Compare(Microsoft.EntityFrameworkCore.Metadata.IIndex, Microsoft.EntityFrameworkCore.Metadata.IIndex)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestUtilities/IndexComparer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Compare
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestUtilities/IndexComparer.cs
    startLine: 19
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities
  syntax:
    content: public int Compare(IIndex x, IIndex y)
    content.vb: Public Function Compare(x As IIndex, y As IIndex) As Integer
    parameters:
    - id: x
      type: Microsoft.EntityFrameworkCore.Metadata.IIndex
    - id: y
      type: Microsoft.EntityFrameworkCore.Metadata.IIndex
    return:
      type: System.Int32
  implements:
  - System.Collections.Generic.IComparer{Microsoft.EntityFrameworkCore.Metadata.IIndex}.Compare(Microsoft.EntityFrameworkCore.Metadata.IIndex,Microsoft.EntityFrameworkCore.Metadata.IIndex)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.IndexComparer.Equals(Microsoft.EntityFrameworkCore.Metadata.IIndex,Microsoft.EntityFrameworkCore.Metadata.IIndex)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.IndexComparer.Equals(Microsoft.EntityFrameworkCore.Metadata.IIndex,Microsoft.EntityFrameworkCore.Metadata.IIndex)
  id: Equals(Microsoft.EntityFrameworkCore.Metadata.IIndex,Microsoft.EntityFrameworkCore.Metadata.IIndex)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.IndexComparer
  langs:
  - csharp
  - vb
  name: Equals(IIndex, IIndex)
  nameWithType: IndexComparer.Equals(IIndex, IIndex)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.IndexComparer.Equals(Microsoft.EntityFrameworkCore.Metadata.IIndex, Microsoft.EntityFrameworkCore.Metadata.IIndex)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestUtilities/IndexComparer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Equals
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestUtilities/IndexComparer.cs
    startLine: 21
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities
  syntax:
    content: public bool Equals(IIndex x, IIndex y)
    content.vb: Public Function Equals(x As IIndex, y As IIndex) As Boolean
    parameters:
    - id: x
      type: Microsoft.EntityFrameworkCore.Metadata.IIndex
    - id: y
      type: Microsoft.EntityFrameworkCore.Metadata.IIndex
    return:
      type: System.Boolean
  implements:
  - System.Collections.Generic.IEqualityComparer{Microsoft.EntityFrameworkCore.Metadata.IIndex}.Equals(Microsoft.EntityFrameworkCore.Metadata.IIndex,Microsoft.EntityFrameworkCore.Metadata.IIndex)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.IndexComparer.GetHashCode(Microsoft.EntityFrameworkCore.Metadata.IIndex)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.IndexComparer.GetHashCode(Microsoft.EntityFrameworkCore.Metadata.IIndex)
  id: GetHashCode(Microsoft.EntityFrameworkCore.Metadata.IIndex)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.IndexComparer
  langs:
  - csharp
  - vb
  name: GetHashCode(IIndex)
  nameWithType: IndexComparer.GetHashCode(IIndex)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.IndexComparer.GetHashCode(Microsoft.EntityFrameworkCore.Metadata.IIndex)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestUtilities/IndexComparer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GetHashCode
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestUtilities/IndexComparer.cs
    startLine: 38
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities
  syntax:
    content: public int GetHashCode(IIndex obj)
    content.vb: Public Function GetHashCode(obj As IIndex) As Integer
    parameters:
    - id: obj
      type: Microsoft.EntityFrameworkCore.Metadata.IIndex
    return:
      type: System.Int32
  implements:
  - System.Collections.Generic.IEqualityComparer{Microsoft.EntityFrameworkCore.Metadata.IIndex}.GetHashCode(Microsoft.EntityFrameworkCore.Metadata.IIndex)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities
  commentId: N:Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities
  nameWithType: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.IEqualityComparer{Microsoft.EntityFrameworkCore.Metadata.IIndex}
  commentId: T:System.Collections.Generic.IEqualityComparer{Microsoft.EntityFrameworkCore.Metadata.IIndex}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEqualityComparer`1
  name: IEqualityComparer<IIndex>
  nameWithType: IEqualityComparer<IIndex>
  fullName: System.Collections.Generic.IEqualityComparer<Microsoft.EntityFrameworkCore.Metadata.IIndex>
  nameWithType.vb: IEqualityComparer(Of IIndex)
  fullname.vb: System.Collections.Generic.IEqualityComparer(Of Microsoft.EntityFrameworkCore.Metadata.IIndex)
  name.vb: IEqualityComparer(Of IIndex)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.IIndex
    name: IIndex
    nameWithType: IIndex
    fullName: Microsoft.EntityFrameworkCore.Metadata.IIndex
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IIndex
    name: IIndex
    nameWithType: IIndex
    fullName: Microsoft.EntityFrameworkCore.Metadata.IIndex
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IComparer{Microsoft.EntityFrameworkCore.Metadata.IIndex}
  commentId: T:System.Collections.Generic.IComparer{Microsoft.EntityFrameworkCore.Metadata.IIndex}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IComparer`1
  name: IComparer<IIndex>
  nameWithType: IComparer<IIndex>
  fullName: System.Collections.Generic.IComparer<Microsoft.EntityFrameworkCore.Metadata.IIndex>
  nameWithType.vb: IComparer(Of IIndex)
  fullname.vb: System.Collections.Generic.IComparer(Of Microsoft.EntityFrameworkCore.Metadata.IIndex)
  name.vb: IComparer(Of IIndex)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.IIndex
    name: IIndex
    nameWithType: IIndex
    fullName: Microsoft.EntityFrameworkCore.Metadata.IIndex
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IIndex
    name: IIndex
    nameWithType: IIndex
    fullName: Microsoft.EntityFrameworkCore.Metadata.IIndex
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.IndexComparer.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<IndexComparer, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<IndexComparer, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.IndexComparer, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of IndexComparer, TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.IndexComparer, TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of IndexComparer, TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<IndexComparer, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<IndexComparer, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.IndexComparer, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of IndexComparer, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of IndexComparer, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.IndexComparer, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEqualityComparer`1
  commentId: T:System.Collections.Generic.IEqualityComparer`1
  isExternal: true
  name: IEqualityComparer<T>
  nameWithType: IEqualityComparer<T>
  fullName: System.Collections.Generic.IEqualityComparer<T>
  nameWithType.vb: IEqualityComparer(Of T)
  fullname.vb: System.Collections.Generic.IEqualityComparer(Of T)
  name.vb: IEqualityComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IComparer`1
  commentId: T:System.Collections.Generic.IComparer`1
  isExternal: true
  name: IComparer<T>
  nameWithType: IComparer<T>
  fullName: System.Collections.Generic.IComparer<T>
  nameWithType.vb: IComparer(Of T)
  fullname.vb: System.Collections.Generic.IComparer(Of T)
  name.vb: IComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IComparer{Microsoft.EntityFrameworkCore.Metadata.IIndex}.Compare(Microsoft.EntityFrameworkCore.Metadata.IIndex,Microsoft.EntityFrameworkCore.Metadata.IIndex)
  commentId: M:System.Collections.Generic.IComparer{Microsoft.EntityFrameworkCore.Metadata.IIndex}.Compare(Microsoft.EntityFrameworkCore.Metadata.IIndex,Microsoft.EntityFrameworkCore.Metadata.IIndex)
  parent: System.Collections.Generic.IComparer{Microsoft.EntityFrameworkCore.Metadata.IIndex}
  definition: System.Collections.Generic.IComparer`1.Compare(`0,`0)
  name: Compare(IIndex, IIndex)
  nameWithType: IComparer<IIndex>.Compare(IIndex, IIndex)
  fullName: System.Collections.Generic.IComparer<Microsoft.EntityFrameworkCore.Metadata.IIndex>.Compare(Microsoft.EntityFrameworkCore.Metadata.IIndex, Microsoft.EntityFrameworkCore.Metadata.IIndex)
  nameWithType.vb: IComparer(Of IIndex).Compare(IIndex, IIndex)
  fullname.vb: System.Collections.Generic.IComparer(Of Microsoft.EntityFrameworkCore.Metadata.IIndex).Compare(Microsoft.EntityFrameworkCore.Metadata.IIndex, Microsoft.EntityFrameworkCore.Metadata.IIndex)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
    name: Compare
    nameWithType: IComparer<IIndex>.Compare
    fullName: System.Collections.Generic.IComparer<Microsoft.EntityFrameworkCore.Metadata.IIndex>.Compare
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IIndex
    name: IIndex
    nameWithType: IIndex
    fullName: Microsoft.EntityFrameworkCore.Metadata.IIndex
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IIndex
    name: IIndex
    nameWithType: IIndex
    fullName: Microsoft.EntityFrameworkCore.Metadata.IIndex
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
    name: Compare
    nameWithType: IComparer(Of IIndex).Compare
    fullName: System.Collections.Generic.IComparer(Of Microsoft.EntityFrameworkCore.Metadata.IIndex).Compare
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IIndex
    name: IIndex
    nameWithType: IIndex
    fullName: Microsoft.EntityFrameworkCore.Metadata.IIndex
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IIndex
    name: IIndex
    nameWithType: IIndex
    fullName: Microsoft.EntityFrameworkCore.Metadata.IIndex
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.IIndex
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IIndex
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IIndex
  nameWithType: IIndex
  fullName: Microsoft.EntityFrameworkCore.Metadata.IIndex
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
  commentId: M:System.Collections.Generic.IComparer`1.Compare(`0,`0)
  isExternal: true
  name: Compare(T, T)
  nameWithType: IComparer<T>.Compare(T, T)
  fullName: System.Collections.Generic.IComparer<T>.Compare(T, T)
  nameWithType.vb: IComparer(Of T).Compare(T, T)
  fullname.vb: System.Collections.Generic.IComparer(Of T).Compare(T, T)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
    name: Compare
    nameWithType: IComparer<T>.Compare
    fullName: System.Collections.Generic.IComparer<T>.Compare
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
    name: Compare
    nameWithType: IComparer(Of T).Compare
    fullName: System.Collections.Generic.IComparer(Of T).Compare
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: System.Collections.Generic.IEqualityComparer{Microsoft.EntityFrameworkCore.Metadata.IIndex}.Equals(Microsoft.EntityFrameworkCore.Metadata.IIndex,Microsoft.EntityFrameworkCore.Metadata.IIndex)
  commentId: M:System.Collections.Generic.IEqualityComparer{Microsoft.EntityFrameworkCore.Metadata.IIndex}.Equals(Microsoft.EntityFrameworkCore.Metadata.IIndex,Microsoft.EntityFrameworkCore.Metadata.IIndex)
  parent: System.Collections.Generic.IEqualityComparer{Microsoft.EntityFrameworkCore.Metadata.IIndex}
  definition: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
  name: Equals(IIndex, IIndex)
  nameWithType: IEqualityComparer<IIndex>.Equals(IIndex, IIndex)
  fullName: System.Collections.Generic.IEqualityComparer<Microsoft.EntityFrameworkCore.Metadata.IIndex>.Equals(Microsoft.EntityFrameworkCore.Metadata.IIndex, Microsoft.EntityFrameworkCore.Metadata.IIndex)
  nameWithType.vb: IEqualityComparer(Of IIndex).Equals(IIndex, IIndex)
  fullname.vb: System.Collections.Generic.IEqualityComparer(Of Microsoft.EntityFrameworkCore.Metadata.IIndex).Equals(Microsoft.EntityFrameworkCore.Metadata.IIndex, Microsoft.EntityFrameworkCore.Metadata.IIndex)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
    name: Equals
    nameWithType: IEqualityComparer<IIndex>.Equals
    fullName: System.Collections.Generic.IEqualityComparer<Microsoft.EntityFrameworkCore.Metadata.IIndex>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IIndex
    name: IIndex
    nameWithType: IIndex
    fullName: Microsoft.EntityFrameworkCore.Metadata.IIndex
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IIndex
    name: IIndex
    nameWithType: IIndex
    fullName: Microsoft.EntityFrameworkCore.Metadata.IIndex
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
    name: Equals
    nameWithType: IEqualityComparer(Of IIndex).Equals
    fullName: System.Collections.Generic.IEqualityComparer(Of Microsoft.EntityFrameworkCore.Metadata.IIndex).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IIndex
    name: IIndex
    nameWithType: IIndex
    fullName: Microsoft.EntityFrameworkCore.Metadata.IIndex
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IIndex
    name: IIndex
    nameWithType: IIndex
    fullName: Microsoft.EntityFrameworkCore.Metadata.IIndex
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
  commentId: M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
  isExternal: true
  name: Equals(T, T)
  nameWithType: IEqualityComparer<T>.Equals(T, T)
  fullName: System.Collections.Generic.IEqualityComparer<T>.Equals(T, T)
  nameWithType.vb: IEqualityComparer(Of T).Equals(T, T)
  fullname.vb: System.Collections.Generic.IEqualityComparer(Of T).Equals(T, T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
    name: Equals
    nameWithType: IEqualityComparer<T>.Equals
    fullName: System.Collections.Generic.IEqualityComparer<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
    name: Equals
    nameWithType: IEqualityComparer(Of T).Equals
    fullName: System.Collections.Generic.IEqualityComparer(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEqualityComparer{Microsoft.EntityFrameworkCore.Metadata.IIndex}.GetHashCode(Microsoft.EntityFrameworkCore.Metadata.IIndex)
  commentId: M:System.Collections.Generic.IEqualityComparer{Microsoft.EntityFrameworkCore.Metadata.IIndex}.GetHashCode(Microsoft.EntityFrameworkCore.Metadata.IIndex)
  parent: System.Collections.Generic.IEqualityComparer{Microsoft.EntityFrameworkCore.Metadata.IIndex}
  definition: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
  name: GetHashCode(IIndex)
  nameWithType: IEqualityComparer<IIndex>.GetHashCode(IIndex)
  fullName: System.Collections.Generic.IEqualityComparer<Microsoft.EntityFrameworkCore.Metadata.IIndex>.GetHashCode(Microsoft.EntityFrameworkCore.Metadata.IIndex)
  nameWithType.vb: IEqualityComparer(Of IIndex).GetHashCode(IIndex)
  fullname.vb: System.Collections.Generic.IEqualityComparer(Of Microsoft.EntityFrameworkCore.Metadata.IIndex).GetHashCode(Microsoft.EntityFrameworkCore.Metadata.IIndex)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
    name: GetHashCode
    nameWithType: IEqualityComparer<IIndex>.GetHashCode
    fullName: System.Collections.Generic.IEqualityComparer<Microsoft.EntityFrameworkCore.Metadata.IIndex>.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IIndex
    name: IIndex
    nameWithType: IIndex
    fullName: Microsoft.EntityFrameworkCore.Metadata.IIndex
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
    name: GetHashCode
    nameWithType: IEqualityComparer(Of IIndex).GetHashCode
    fullName: System.Collections.Generic.IEqualityComparer(Of Microsoft.EntityFrameworkCore.Metadata.IIndex).GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IIndex
    name: IIndex
    nameWithType: IIndex
    fullName: Microsoft.EntityFrameworkCore.Metadata.IIndex
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
  commentId: M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
  isExternal: true
  name: GetHashCode(T)
  nameWithType: IEqualityComparer<T>.GetHashCode(T)
  fullName: System.Collections.Generic.IEqualityComparer<T>.GetHashCode(T)
  nameWithType.vb: IEqualityComparer(Of T).GetHashCode(T)
  fullname.vb: System.Collections.Generic.IEqualityComparer(Of T).GetHashCode(T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
    name: GetHashCode
    nameWithType: IEqualityComparer<T>.GetHashCode
    fullName: System.Collections.Generic.IEqualityComparer<T>.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
    name: GetHashCode
    nameWithType: IEqualityComparer(Of T).GetHashCode
    fullName: System.Collections.Generic.IEqualityComparer(Of T).GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
