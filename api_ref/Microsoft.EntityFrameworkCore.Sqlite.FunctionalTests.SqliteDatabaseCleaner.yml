### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteDatabaseCleaner
  commentId: T:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteDatabaseCleaner
  id: SqliteDatabaseCleaner
  parent: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  children:
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteDatabaseCleaner.AcceptForeignKey(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ForeignKeyModel)
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteDatabaseCleaner.AcceptIndex(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.IndexModel)
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteDatabaseCleaner.BuildCustomSql(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel)
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteDatabaseCleaner.CreateDatabaseModelFactory(Microsoft.Extensions.Logging.ILoggerFactory)
  langs:
  - csharp
  - vb
  name: SqliteDatabaseCleaner
  nameWithType: SqliteDatabaseCleaner
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteDatabaseCleaner
  type: Class
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/SqliteDatabaseCleaner.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: SqliteDatabaseCleaner
    path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/SqliteDatabaseCleaner.cs
    startLine: 10
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  syntax:
    content: 'public class SqliteDatabaseCleaner : RelationalDatabaseCleaner'
    content.vb: >-
      Public Class SqliteDatabaseCleaner
          Inherits RelationalDatabaseCleaner
  inheritance:
  - System.Object
  - Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner
  inheritedMembers:
  - Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.AcceptTable(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.TableModel)
  - Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.AcceptSequence(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.SequenceModel)
  - Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.BuildCustomEndingSql(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel)
  - Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.Clean(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
  - Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.Drop(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.SequenceModel)
  - Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.Drop(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.TableModel)
  - Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.Drop(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ForeignKeyModel)
  - Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.Drop(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.IndexModel)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteDatabaseCleaner.CreateDatabaseModelFactory(Microsoft.Extensions.Logging.ILoggerFactory)
  commentId: M:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteDatabaseCleaner.CreateDatabaseModelFactory(Microsoft.Extensions.Logging.ILoggerFactory)
  id: CreateDatabaseModelFactory(Microsoft.Extensions.Logging.ILoggerFactory)
  parent: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteDatabaseCleaner
  langs:
  - csharp
  - vb
  name: CreateDatabaseModelFactory(ILoggerFactory)
  nameWithType: SqliteDatabaseCleaner.CreateDatabaseModelFactory(ILoggerFactory)
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteDatabaseCleaner.CreateDatabaseModelFactory(Microsoft.Extensions.Logging.ILoggerFactory)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/SqliteDatabaseCleaner.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateDatabaseModelFactory
    path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/SqliteDatabaseCleaner.cs
    startLine: 12
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  syntax:
    content: protected override IInternalDatabaseModelFactory CreateDatabaseModelFactory(ILoggerFactory loggerFactory)
    content.vb: Protected Overrides Function CreateDatabaseModelFactory(loggerFactory As ILoggerFactory) As IInternalDatabaseModelFactory
    parameters:
    - id: loggerFactory
      type: Microsoft.Extensions.Logging.ILoggerFactory
    return:
      type: Microsoft.EntityFrameworkCore.Scaffolding.Internal.IInternalDatabaseModelFactory
  overridden: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.CreateDatabaseModelFactory(Microsoft.Extensions.Logging.ILoggerFactory)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteDatabaseCleaner.AcceptForeignKey(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ForeignKeyModel)
  commentId: M:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteDatabaseCleaner.AcceptForeignKey(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ForeignKeyModel)
  id: AcceptForeignKey(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ForeignKeyModel)
  parent: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteDatabaseCleaner
  langs:
  - csharp
  - vb
  name: AcceptForeignKey(ForeignKeyModel)
  nameWithType: SqliteDatabaseCleaner.AcceptForeignKey(ForeignKeyModel)
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteDatabaseCleaner.AcceptForeignKey(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ForeignKeyModel)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/SqliteDatabaseCleaner.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AcceptForeignKey
    path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/SqliteDatabaseCleaner.cs
    startLine: 15
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  syntax:
    content: protected override bool AcceptForeignKey(ForeignKeyModel foreignKey)
    content.vb: Protected Overrides Function AcceptForeignKey(foreignKey As ForeignKeyModel) As Boolean
    parameters:
    - id: foreignKey
      type: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ForeignKeyModel
    return:
      type: System.Boolean
  overridden: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.AcceptForeignKey(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ForeignKeyModel)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteDatabaseCleaner.AcceptIndex(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.IndexModel)
  commentId: M:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteDatabaseCleaner.AcceptIndex(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.IndexModel)
  id: AcceptIndex(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.IndexModel)
  parent: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteDatabaseCleaner
  langs:
  - csharp
  - vb
  name: AcceptIndex(IndexModel)
  nameWithType: SqliteDatabaseCleaner.AcceptIndex(IndexModel)
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteDatabaseCleaner.AcceptIndex(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.IndexModel)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/SqliteDatabaseCleaner.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AcceptIndex
    path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/SqliteDatabaseCleaner.cs
    startLine: 17
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  syntax:
    content: protected override bool AcceptIndex(IndexModel index)
    content.vb: Protected Overrides Function AcceptIndex(index As IndexModel) As Boolean
    parameters:
    - id: index
      type: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.IndexModel
    return:
      type: System.Boolean
  overridden: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.AcceptIndex(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.IndexModel)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteDatabaseCleaner.BuildCustomSql(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel)
  commentId: M:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteDatabaseCleaner.BuildCustomSql(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel)
  id: BuildCustomSql(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel)
  parent: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteDatabaseCleaner
  langs:
  - csharp
  - vb
  name: BuildCustomSql(DatabaseModel)
  nameWithType: SqliteDatabaseCleaner.BuildCustomSql(DatabaseModel)
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteDatabaseCleaner.BuildCustomSql(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/SqliteDatabaseCleaner.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: BuildCustomSql
    path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/SqliteDatabaseCleaner.cs
    startLine: 19
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  syntax:
    content: protected override string BuildCustomSql(DatabaseModel databaseModel)
    content.vb: Protected Overrides Function BuildCustomSql(databaseModel As DatabaseModel) As String
    parameters:
    - id: databaseModel
      type: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel
    return:
      type: System.String
  overridden: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.BuildCustomSql(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  commentId: N:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  nameWithType: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner
  commentId: T:Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner
  parent: Microsoft.EntityFrameworkCore.Tests
  isExternal: false
  name: RelationalDatabaseCleaner
  nameWithType: RelationalDatabaseCleaner
  fullName: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner
- uid: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.AcceptTable(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.TableModel)
  commentId: M:Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.AcceptTable(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.TableModel)
  parent: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner
  isExternal: false
  name: AcceptTable(TableModel)
  nameWithType: RelationalDatabaseCleaner.AcceptTable(TableModel)
  fullName: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.AcceptTable(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.TableModel)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.AcceptTable(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.TableModel)
    name: AcceptTable
    nameWithType: RelationalDatabaseCleaner.AcceptTable
    fullName: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.AcceptTable
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.TableModel
    name: TableModel
    nameWithType: TableModel
    fullName: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.TableModel
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.AcceptTable(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.TableModel)
    name: AcceptTable
    nameWithType: RelationalDatabaseCleaner.AcceptTable
    fullName: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.AcceptTable
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.TableModel
    name: TableModel
    nameWithType: TableModel
    fullName: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.TableModel
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.AcceptSequence(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.SequenceModel)
  commentId: M:Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.AcceptSequence(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.SequenceModel)
  parent: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner
  isExternal: false
  name: AcceptSequence(SequenceModel)
  nameWithType: RelationalDatabaseCleaner.AcceptSequence(SequenceModel)
  fullName: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.AcceptSequence(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.SequenceModel)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.AcceptSequence(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.SequenceModel)
    name: AcceptSequence
    nameWithType: RelationalDatabaseCleaner.AcceptSequence
    fullName: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.AcceptSequence
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.SequenceModel
    name: SequenceModel
    nameWithType: SequenceModel
    fullName: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.SequenceModel
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.AcceptSequence(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.SequenceModel)
    name: AcceptSequence
    nameWithType: RelationalDatabaseCleaner.AcceptSequence
    fullName: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.AcceptSequence
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.SequenceModel
    name: SequenceModel
    nameWithType: SequenceModel
    fullName: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.SequenceModel
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.BuildCustomEndingSql(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel)
  commentId: M:Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.BuildCustomEndingSql(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel)
  parent: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner
  isExternal: false
  name: BuildCustomEndingSql(DatabaseModel)
  nameWithType: RelationalDatabaseCleaner.BuildCustomEndingSql(DatabaseModel)
  fullName: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.BuildCustomEndingSql(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.BuildCustomEndingSql(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel)
    name: BuildCustomEndingSql
    nameWithType: RelationalDatabaseCleaner.BuildCustomEndingSql
    fullName: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.BuildCustomEndingSql
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel
    name: DatabaseModel
    nameWithType: DatabaseModel
    fullName: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.BuildCustomEndingSql(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel)
    name: BuildCustomEndingSql
    nameWithType: RelationalDatabaseCleaner.BuildCustomEndingSql
    fullName: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.BuildCustomEndingSql
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel
    name: DatabaseModel
    nameWithType: DatabaseModel
    fullName: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.Clean(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
  commentId: M:Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.Clean(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
  parent: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner
  isExternal: false
  name: Clean(DatabaseFacade)
  nameWithType: RelationalDatabaseCleaner.Clean(DatabaseFacade)
  fullName: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.Clean(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.Clean(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
    name: Clean
    nameWithType: RelationalDatabaseCleaner.Clean
    fullName: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.Clean
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
    name: DatabaseFacade
    nameWithType: DatabaseFacade
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.Clean(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
    name: Clean
    nameWithType: RelationalDatabaseCleaner.Clean
    fullName: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.Clean
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
    name: DatabaseFacade
    nameWithType: DatabaseFacade
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.Drop(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.SequenceModel)
  commentId: M:Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.Drop(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.SequenceModel)
  parent: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner
  isExternal: false
  name: Drop(SequenceModel)
  nameWithType: RelationalDatabaseCleaner.Drop(SequenceModel)
  fullName: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.Drop(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.SequenceModel)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.Drop(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.SequenceModel)
    name: Drop
    nameWithType: RelationalDatabaseCleaner.Drop
    fullName: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.Drop
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.SequenceModel
    name: SequenceModel
    nameWithType: SequenceModel
    fullName: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.SequenceModel
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.Drop(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.SequenceModel)
    name: Drop
    nameWithType: RelationalDatabaseCleaner.Drop
    fullName: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.Drop
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.SequenceModel
    name: SequenceModel
    nameWithType: SequenceModel
    fullName: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.SequenceModel
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.Drop(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.TableModel)
  commentId: M:Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.Drop(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.TableModel)
  parent: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner
  isExternal: false
  name: Drop(TableModel)
  nameWithType: RelationalDatabaseCleaner.Drop(TableModel)
  fullName: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.Drop(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.TableModel)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.Drop(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.TableModel)
    name: Drop
    nameWithType: RelationalDatabaseCleaner.Drop
    fullName: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.Drop
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.TableModel
    name: TableModel
    nameWithType: TableModel
    fullName: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.TableModel
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.Drop(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.TableModel)
    name: Drop
    nameWithType: RelationalDatabaseCleaner.Drop
    fullName: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.Drop
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.TableModel
    name: TableModel
    nameWithType: TableModel
    fullName: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.TableModel
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.Drop(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ForeignKeyModel)
  commentId: M:Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.Drop(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ForeignKeyModel)
  parent: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner
  isExternal: false
  name: Drop(ForeignKeyModel)
  nameWithType: RelationalDatabaseCleaner.Drop(ForeignKeyModel)
  fullName: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.Drop(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ForeignKeyModel)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.Drop(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ForeignKeyModel)
    name: Drop
    nameWithType: RelationalDatabaseCleaner.Drop
    fullName: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.Drop
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ForeignKeyModel
    name: ForeignKeyModel
    nameWithType: ForeignKeyModel
    fullName: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ForeignKeyModel
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.Drop(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ForeignKeyModel)
    name: Drop
    nameWithType: RelationalDatabaseCleaner.Drop
    fullName: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.Drop
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ForeignKeyModel
    name: ForeignKeyModel
    nameWithType: ForeignKeyModel
    fullName: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ForeignKeyModel
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.Drop(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.IndexModel)
  commentId: M:Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.Drop(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.IndexModel)
  parent: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner
  isExternal: false
  name: Drop(IndexModel)
  nameWithType: RelationalDatabaseCleaner.Drop(IndexModel)
  fullName: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.Drop(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.IndexModel)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.Drop(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.IndexModel)
    name: Drop
    nameWithType: RelationalDatabaseCleaner.Drop
    fullName: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.Drop
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.IndexModel
    name: IndexModel
    nameWithType: IndexModel
    fullName: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.IndexModel
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.Drop(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.IndexModel)
    name: Drop
    nameWithType: RelationalDatabaseCleaner.Drop
    fullName: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.Drop
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.IndexModel
    name: IndexModel
    nameWithType: IndexModel
    fullName: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.IndexModel
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Tests
  commentId: N:Microsoft.EntityFrameworkCore.Tests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Tests
  nameWithType: Microsoft.EntityFrameworkCore.Tests
  fullName: Microsoft.EntityFrameworkCore.Tests
- uid: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.CreateDatabaseModelFactory(Microsoft.Extensions.Logging.ILoggerFactory)
  commentId: M:Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.CreateDatabaseModelFactory(Microsoft.Extensions.Logging.ILoggerFactory)
  parent: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner
  isExternal: true
  name: CreateDatabaseModelFactory(ILoggerFactory)
  nameWithType: RelationalDatabaseCleaner.CreateDatabaseModelFactory(ILoggerFactory)
  fullName: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.CreateDatabaseModelFactory(Microsoft.Extensions.Logging.ILoggerFactory)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.CreateDatabaseModelFactory(Microsoft.Extensions.Logging.ILoggerFactory)
    name: CreateDatabaseModelFactory
    nameWithType: RelationalDatabaseCleaner.CreateDatabaseModelFactory
    fullName: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.CreateDatabaseModelFactory
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.CreateDatabaseModelFactory(Microsoft.Extensions.Logging.ILoggerFactory)
    name: CreateDatabaseModelFactory
    nameWithType: RelationalDatabaseCleaner.CreateDatabaseModelFactory
    fullName: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.CreateDatabaseModelFactory
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ILoggerFactory
  commentId: T:Microsoft.Extensions.Logging.ILoggerFactory
  parent: Microsoft.Extensions.Logging
  isExternal: true
  name: ILoggerFactory
  nameWithType: ILoggerFactory
  fullName: Microsoft.Extensions.Logging.ILoggerFactory
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.IInternalDatabaseModelFactory
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.Internal.IInternalDatabaseModelFactory
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  isExternal: false
  name: IInternalDatabaseModelFactory
  nameWithType: IInternalDatabaseModelFactory
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.IInternalDatabaseModelFactory
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: false
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Scaffolding.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal
- uid: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.AcceptForeignKey(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ForeignKeyModel)
  commentId: M:Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.AcceptForeignKey(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ForeignKeyModel)
  parent: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner
  isExternal: false
  name: AcceptForeignKey(ForeignKeyModel)
  nameWithType: RelationalDatabaseCleaner.AcceptForeignKey(ForeignKeyModel)
  fullName: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.AcceptForeignKey(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ForeignKeyModel)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.AcceptForeignKey(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ForeignKeyModel)
    name: AcceptForeignKey
    nameWithType: RelationalDatabaseCleaner.AcceptForeignKey
    fullName: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.AcceptForeignKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ForeignKeyModel
    name: ForeignKeyModel
    nameWithType: ForeignKeyModel
    fullName: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ForeignKeyModel
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.AcceptForeignKey(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ForeignKeyModel)
    name: AcceptForeignKey
    nameWithType: RelationalDatabaseCleaner.AcceptForeignKey
    fullName: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.AcceptForeignKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ForeignKeyModel
    name: ForeignKeyModel
    nameWithType: ForeignKeyModel
    fullName: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ForeignKeyModel
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ForeignKeyModel
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ForeignKeyModel
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Metadata
  isExternal: false
  name: ForeignKeyModel
  nameWithType: ForeignKeyModel
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ForeignKeyModel
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Scaffolding.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Scaffolding.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Scaffolding.Metadata
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Metadata
- uid: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.AcceptIndex(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.IndexModel)
  commentId: M:Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.AcceptIndex(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.IndexModel)
  parent: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner
  isExternal: false
  name: AcceptIndex(IndexModel)
  nameWithType: RelationalDatabaseCleaner.AcceptIndex(IndexModel)
  fullName: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.AcceptIndex(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.IndexModel)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.AcceptIndex(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.IndexModel)
    name: AcceptIndex
    nameWithType: RelationalDatabaseCleaner.AcceptIndex
    fullName: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.AcceptIndex
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.IndexModel
    name: IndexModel
    nameWithType: IndexModel
    fullName: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.IndexModel
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.AcceptIndex(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.IndexModel)
    name: AcceptIndex
    nameWithType: RelationalDatabaseCleaner.AcceptIndex
    fullName: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.AcceptIndex
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.IndexModel
    name: IndexModel
    nameWithType: IndexModel
    fullName: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.IndexModel
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.IndexModel
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.Metadata.IndexModel
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Metadata
  isExternal: false
  name: IndexModel
  nameWithType: IndexModel
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.IndexModel
- uid: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.BuildCustomSql(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel)
  commentId: M:Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.BuildCustomSql(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel)
  parent: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner
  isExternal: false
  name: BuildCustomSql(DatabaseModel)
  nameWithType: RelationalDatabaseCleaner.BuildCustomSql(DatabaseModel)
  fullName: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.BuildCustomSql(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.BuildCustomSql(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel)
    name: BuildCustomSql
    nameWithType: RelationalDatabaseCleaner.BuildCustomSql
    fullName: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.BuildCustomSql
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel
    name: DatabaseModel
    nameWithType: DatabaseModel
    fullName: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.BuildCustomSql(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel)
    name: BuildCustomSql
    nameWithType: RelationalDatabaseCleaner.BuildCustomSql
    fullName: Microsoft.EntityFrameworkCore.Tests.RelationalDatabaseCleaner.BuildCustomSql
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel
    name: DatabaseModel
    nameWithType: DatabaseModel
    fullName: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Metadata
  isExternal: false
  name: DatabaseModel
  nameWithType: DatabaseModel
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
