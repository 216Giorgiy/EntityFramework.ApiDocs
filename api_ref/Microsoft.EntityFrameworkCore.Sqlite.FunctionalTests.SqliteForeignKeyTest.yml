### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteForeignKeyTest
  commentId: T:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteForeignKeyTest
  id: SqliteForeignKeyTest
  parent: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  children:
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteForeignKeyTest.#ctor
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteForeignKeyTest.Dispose
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteForeignKeyTest.It_allows_foreign_key_to_unique_index
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteForeignKeyTest.It_enforces_foreign_key(System.Boolean)
  langs:
  - csharp
  - vb
  name: SqliteForeignKeyTest
  nameWithType: SqliteForeignKeyTest
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteForeignKeyTest
  type: Class
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/SqliteForeignKeyTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: SqliteForeignKeyTest
    path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/SqliteForeignKeyTest.cs
    startLine: 10
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  syntax:
    content: 'public class SqliteForeignKeyTest : IDisposable'
    content.vb: >-
      Public Class SqliteForeignKeyTest
          Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteForeignKeyTest.#ctor
  commentId: M:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteForeignKeyTest.#ctor
  id: '#ctor'
  parent: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteForeignKeyTest
  langs:
  - csharp
  - vb
  name: SqliteForeignKeyTest()
  nameWithType: SqliteForeignKeyTest.SqliteForeignKeyTest()
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteForeignKeyTest.SqliteForeignKeyTest()
  type: Constructor
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/SqliteForeignKeyTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/SqliteForeignKeyTest.cs
    startLine: 14
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  syntax:
    content: public SqliteForeignKeyTest()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteForeignKeyTest.Dispose
  commentId: M:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteForeignKeyTest.Dispose
  id: Dispose
  parent: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteForeignKeyTest
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: SqliteForeignKeyTest.Dispose()
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteForeignKeyTest.Dispose()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/SqliteForeignKeyTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Dispose
    path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/SqliteForeignKeyTest.cs
    startLine: 19
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteForeignKeyTest.It_enforces_foreign_key(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteForeignKeyTest.It_enforces_foreign_key(System.Boolean)
  id: It_enforces_foreign_key(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteForeignKeyTest
  langs:
  - csharp
  - vb
  name: It_enforces_foreign_key(Boolean)
  nameWithType: SqliteForeignKeyTest.It_enforces_foreign_key(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteForeignKeyTest.It_enforces_foreign_key(System.Boolean)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/SqliteForeignKeyTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: It_enforces_foreign_key
    path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/SqliteForeignKeyTest.cs
    startLine: 21
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public void It_enforces_foreign_key(bool suppress)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Sub It_enforces_foreign_key(suppress As Boolean)
    parameters:
    - id: suppress
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteForeignKeyTest.It_allows_foreign_key_to_unique_index
  commentId: M:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteForeignKeyTest.It_allows_foreign_key_to_unique_index
  id: It_allows_foreign_key_to_unique_index
  parent: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteForeignKeyTest
  langs:
  - csharp
  - vb
  name: It_allows_foreign_key_to_unique_index()
  nameWithType: SqliteForeignKeyTest.It_allows_foreign_key_to_unique_index()
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteForeignKeyTest.It_allows_foreign_key_to_unique_index()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/SqliteForeignKeyTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: It_allows_foreign_key_to_unique_index
    path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/SqliteForeignKeyTest.cs
    startLine: 84
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  syntax:
    content: >-
      [Fact]

      public void It_allows_foreign_key_to_unique_index()
    content.vb: >-
      <Fact>

      Public Sub It_allows_foreign_key_to_unique_index
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  commentId: N:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  nameWithType: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
