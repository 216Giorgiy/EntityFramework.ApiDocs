### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper
  commentId: T:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper
  id: RelationalTypeMapper
  parent: Microsoft.EntityFrameworkCore.Storage
  children:
  - Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.ByteArrayMapper
  - Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.CreateMappingFromStoreType(System.String)
  - Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.FindCustomMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  - Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.FindMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  - Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.FindMapping(System.String)
  - Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.FindMapping(System.Type)
  - Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.GetByteArrayMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  - Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.GetClrTypeMappings
  - Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.GetColumnType(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  - Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.GetStoreTypeMappings
  - Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.GetStringMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  - Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.RequiresKeyMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  - Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.StringMapper
  - Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.ValidateTypeName(System.String)
  langs:
  - csharp
  - vb
  name: RelationalTypeMapper
  nameWithType: RelationalTypeMapper
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/RelationalTypeMapper.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: RelationalTypeMapper
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/RelationalTypeMapper.cs
    startLine: 22
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n<p>\n    Maps .NET types to their corresponding relational database types.\n</p>\n<p>\n    This type is typically used by database providers (and other extensions). It is generally\n    not used in application code.\n</p>\n"
  example: []
  syntax:
    content: 'public abstract class RelationalTypeMapper : IRelationalTypeMapper'
    content.vb: >-
      Public MustInherit Class RelationalTypeMapper
          Implements IRelationalTypeMapper
  inheritance:
  - System.Object
  implements:
  - Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMappingForValue(System.Object)
  - Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  - Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMapping(System.Type)
  - Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMapping(System.String)
  - Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.IsTypeMapped(System.Type)
  - Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.GetClrTypeMappings
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.GetClrTypeMappings
  id: GetClrTypeMappings
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper
  langs:
  - csharp
  - vb
  name: GetClrTypeMappings()
  nameWithType: RelationalTypeMapper.GetClrTypeMappings()
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.GetClrTypeMappings()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/RelationalTypeMapper.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GetClrTypeMappings
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/RelationalTypeMapper.cs
    startLine: 31
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n    Gets the mappings from .NET types to database types.\n"
  example: []
  syntax:
    content: protected abstract IReadOnlyDictionary<Type, RelationalTypeMapping> GetClrTypeMappings()
    content.vb: Protected MustOverride Function GetClrTypeMappings As IReadOnlyDictionary(Of Type, RelationalTypeMapping)
    return:
      type: System.Collections.Generic.IReadOnlyDictionary{System.Type,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping}
      description: 'The type mappings. '
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.GetStoreTypeMappings
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.GetStoreTypeMappings
  id: GetStoreTypeMappings
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper
  langs:
  - csharp
  - vb
  name: GetStoreTypeMappings()
  nameWithType: RelationalTypeMapper.GetStoreTypeMappings()
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.GetStoreTypeMappings()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/RelationalTypeMapper.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GetStoreTypeMappings
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/RelationalTypeMapper.cs
    startLine: 37
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n    Gets the mappings from database types to .NET types.\n"
  example: []
  syntax:
    content: protected abstract IReadOnlyDictionary<string, RelationalTypeMapping> GetStoreTypeMappings()
    content.vb: Protected MustOverride Function GetStoreTypeMappings As IReadOnlyDictionary(Of String, RelationalTypeMapping)
    return:
      type: System.Collections.Generic.IReadOnlyDictionary{System.String,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping}
      description: 'The type mappings. '
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.GetColumnType(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.GetColumnType(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  id: GetColumnType(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper
  langs:
  - csharp
  - vb
  name: GetColumnType(IProperty)
  nameWithType: RelationalTypeMapper.GetColumnType(IProperty)
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.GetColumnType(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/RelationalTypeMapper.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GetColumnType
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/RelationalTypeMapper.cs
    startLine: 45
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n    Gets column type for the given property.\n"
  example: []
  syntax:
    content: protected abstract string GetColumnType(IProperty property)
    content.vb: Protected MustOverride Function GetColumnType(property As IProperty) As String
    parameters:
    - id: property
      type: Microsoft.EntityFrameworkCore.Metadata.IProperty
      description: 'The property. '
    return:
      type: System.String
      description: 'The name of the database type. '
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.ValidateTypeName(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.ValidateTypeName(System.String)
  id: ValidateTypeName(System.String)
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper
  langs:
  - csharp
  - vb
  name: ValidateTypeName(String)
  nameWithType: RelationalTypeMapper.ValidateTypeName(String)
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.ValidateTypeName(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/RelationalTypeMapper.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ValidateTypeName
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/RelationalTypeMapper.cs
    startLine: 52
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n    Ensures that the given type name is a valid type for the relational database.\n    An exception is thrown if it is not a valid type.\n"
  example: []
  syntax:
    content: public virtual void ValidateTypeName(string storeType)
    content.vb: Public Overridable Sub ValidateTypeName(storeType As String)
    parameters:
    - id: storeType
      type: System.String
      description: The type to be validated.
  implements:
  - Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.ValidateTypeName(System.String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.FindMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.FindMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  id: FindMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper
  langs:
  - csharp
  - vb
  name: FindMapping(IProperty)
  nameWithType: RelationalTypeMapper.FindMapping(IProperty)
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.FindMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/RelationalTypeMapper.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: FindMapping
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/RelationalTypeMapper.cs
    startLine: 64
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n    Gets the relational database type for the given property.\n    Returns null if no mapping is found.\n"
  example: []
  syntax:
    content: public virtual RelationalTypeMapping FindMapping(IProperty property)
    content.vb: Public Overridable Function FindMapping(property As IProperty) As RelationalTypeMapping
    parameters:
    - id: property
      type: Microsoft.EntityFrameworkCore.Metadata.IProperty
      description: The property to get the mapping for.
    return:
      type: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping
      description: "\n    The type mapping to be used.\n"
  implements:
  - Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.FindMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.FindMapping(System.Type)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.FindMapping(System.Type)
  id: FindMapping(System.Type)
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper
  langs:
  - csharp
  - vb
  name: FindMapping(Type)
  nameWithType: RelationalTypeMapper.FindMapping(Type)
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.FindMapping(System.Type)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/RelationalTypeMapper.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: FindMapping
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/RelationalTypeMapper.cs
    startLine: 92
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n    Gets the relational database type for a given .NET type.\n    Returns null if no mapping is found.\n"
  example: []
  syntax:
    content: public virtual RelationalTypeMapping FindMapping(Type clrType)
    content.vb: Public Overridable Function FindMapping(clrType As Type) As RelationalTypeMapping
    parameters:
    - id: clrType
      type: System.Type
      description: The type to get the mapping for.
    return:
      type: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping
      description: "\n    The type mapping to be used.\n"
  implements:
  - Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.FindMapping(System.Type)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.FindMapping(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.FindMapping(System.String)
  id: FindMapping(System.String)
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper
  langs:
  - csharp
  - vb
  name: FindMapping(String)
  nameWithType: RelationalTypeMapper.FindMapping(String)
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.FindMapping(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/RelationalTypeMapper.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: FindMapping
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/RelationalTypeMapper.cs
    startLine: 110
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n    Gets the mapping that represents the given database type.\n    Returns null if no mapping is found.\n"
  example: []
  syntax:
    content: public virtual RelationalTypeMapping FindMapping(string storeType)
    content.vb: Public Overridable Function FindMapping(storeType As String) As RelationalTypeMapping
    parameters:
    - id: storeType
      type: System.String
      description: The type to get the mapping for.
    return:
      type: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping
      description: "\n    The type mapping to be used.\n"
  implements:
  - Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.FindMapping(System.String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.CreateMappingFromStoreType(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.CreateMappingFromStoreType(System.String)
  id: CreateMappingFromStoreType(System.String)
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper
  langs:
  - csharp
  - vb
  name: CreateMappingFromStoreType(String)
  nameWithType: RelationalTypeMapper.CreateMappingFromStoreType(String)
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.CreateMappingFromStoreType(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/RelationalTypeMapper.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: CreateMappingFromStoreType
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/RelationalTypeMapper.cs
    startLine: 122
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n    Creates the mapping for the given database type.\n"
  example: []
  syntax:
    content: protected virtual RelationalTypeMapping CreateMappingFromStoreType(string storeType)
    content.vb: Protected Overridable Function CreateMappingFromStoreType(storeType As String) As RelationalTypeMapping
    parameters:
    - id: storeType
      type: System.String
      description: The type to create the mapping for.
    return:
      type: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping
      description: 'The type mapping to be used. '
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.FindCustomMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.FindCustomMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  id: FindCustomMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper
  langs:
  - csharp
  - vb
  name: FindCustomMapping(IProperty)
  nameWithType: RelationalTypeMapper.FindCustomMapping(IProperty)
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.FindCustomMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/RelationalTypeMapper.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: FindCustomMapping
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/RelationalTypeMapper.cs
    startLine: 167
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n    Gets the relational database type for the given property, using a separate type mapper if needed.\n    This base implementation uses custom mappers for string and byte array properties.\n    Returns null if no mapping is found.\n"
  example: []
  syntax:
    content: protected virtual RelationalTypeMapping FindCustomMapping(IProperty property)
    content.vb: Protected Overridable Function FindCustomMapping(property As IProperty) As RelationalTypeMapping
    parameters:
    - id: property
      type: Microsoft.EntityFrameworkCore.Metadata.IProperty
      description: The property to get the mapping for.
    return:
      type: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping
      description: "\n    The type mapping to be used.\n"
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.ByteArrayMapper
  commentId: P:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.ByteArrayMapper
  id: ByteArrayMapper
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper
  langs:
  - csharp
  - vb
  name: ByteArrayMapper
  nameWithType: RelationalTypeMapper.ByteArrayMapper
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.ByteArrayMapper
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/RelationalTypeMapper.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ByteArrayMapper
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/RelationalTypeMapper.cs
    startLine: 183
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n    Gets the mapper to be used for byte array properties.\n"
  example: []
  syntax:
    content: public virtual IByteArrayRelationalTypeMapper ByteArrayMapper { get; }
    content.vb: Public Overridable ReadOnly Property ByteArrayMapper As IByteArrayRelationalTypeMapper
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Storage.IByteArrayRelationalTypeMapper
  implements:
  - Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.ByteArrayMapper
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.StringMapper
  commentId: P:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.StringMapper
  id: StringMapper
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper
  langs:
  - csharp
  - vb
  name: StringMapper
  nameWithType: RelationalTypeMapper.StringMapper
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.StringMapper
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/RelationalTypeMapper.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: StringMapper
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/RelationalTypeMapper.cs
    startLine: 188
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n    Gets the mapper to be used for string properties.\n"
  example: []
  syntax:
    content: public virtual IStringRelationalTypeMapper StringMapper { get; }
    content.vb: Public Overridable ReadOnly Property StringMapper As IStringRelationalTypeMapper
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Storage.IStringRelationalTypeMapper
  implements:
  - Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.StringMapper
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.GetStringMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.GetStringMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  id: GetStringMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper
  langs:
  - csharp
  - vb
  name: GetStringMapping(IProperty)
  nameWithType: RelationalTypeMapper.GetStringMapping(IProperty)
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.GetStringMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/RelationalTypeMapper.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GetStringMapping
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/RelationalTypeMapper.cs
    startLine: 195
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n    Gets the relational database type for the given string property.\n"
  example: []
  syntax:
    content: protected virtual RelationalTypeMapping GetStringMapping(IProperty property)
    content.vb: Protected Overridable Function GetStringMapping(property As IProperty) As RelationalTypeMapping
    parameters:
    - id: property
      type: Microsoft.EntityFrameworkCore.Metadata.IProperty
      description: 'The property to get the mapping for. '
    return:
      type: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping
      description: 'The type mapping to be used. '
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.GetByteArrayMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.GetByteArrayMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  id: GetByteArrayMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper
  langs:
  - csharp
  - vb
  name: GetByteArrayMapping(IProperty)
  nameWithType: RelationalTypeMapper.GetByteArrayMapping(IProperty)
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.GetByteArrayMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/RelationalTypeMapper.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GetByteArrayMapping
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/RelationalTypeMapper.cs
    startLine: 212
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n    Gets the relational database type for the given byte array property.\n"
  example: []
  syntax:
    content: protected virtual RelationalTypeMapping GetByteArrayMapping(IProperty property)
    content.vb: Protected Overridable Function GetByteArrayMapping(property As IProperty) As RelationalTypeMapping
    parameters:
    - id: property
      type: Microsoft.EntityFrameworkCore.Metadata.IProperty
      description: 'The property to get the mapping for. '
    return:
      type: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping
      description: 'The type mapping to be used. '
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.RequiresKeyMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.RequiresKeyMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  id: RequiresKeyMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper
  langs:
  - csharp
  - vb
  name: RequiresKeyMapping(IProperty)
  nameWithType: RelationalTypeMapper.RequiresKeyMapping(IProperty)
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.RequiresKeyMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/RelationalTypeMapper.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: RequiresKeyMapping
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/RelationalTypeMapper.cs
    startLine: 227
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n    Gets a value indicating whether the given property should use a database type that is suitable for key properties.\n"
  example: []
  syntax:
    content: protected virtual bool RequiresKeyMapping(IProperty property)
    content.vb: Protected Overridable Function RequiresKeyMapping(property As IProperty) As Boolean
    parameters:
    - id: property
      type: Microsoft.EntityFrameworkCore.Metadata.IProperty
      description: 'The property to get the mapping for. '
    return:
      type: System.Boolean
      description: 'True if the property is a key, otherwise false. '
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: Microsoft.EntityFrameworkCore.Storage
  commentId: N:Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Storage
  nameWithType: Microsoft.EntityFrameworkCore.Storage
  fullName: Microsoft.EntityFrameworkCore.Storage
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IRelationalTypeMapper
  nameWithType: IRelationalTypeMapper
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMappingForValue(System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMappingForValue(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,System.Object)
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions
  definition: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMappingForValue(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,System.Object)
  name: GetMappingForValue(Object)
  nameWithType: RelationalTypeMapperExtensions.GetMappingForValue(Object)
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMappingForValue(System.Object)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMappingForValue(System.Object)
    name: GetMappingForValue
    nameWithType: RelationalTypeMapperExtensions.GetMappingForValue
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMappingForValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMappingForValue(System.Object)
    name: GetMappingForValue
    nameWithType: RelationalTypeMapperExtensions.GetMappingForValue
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMappingForValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMapping(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,Microsoft.EntityFrameworkCore.Metadata.IProperty)
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions
  definition: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMapping(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,Microsoft.EntityFrameworkCore.Metadata.IProperty)
  name: GetMapping(IProperty)
  nameWithType: RelationalTypeMapperExtensions.GetMapping(IProperty)
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)
    name: GetMapping
    nameWithType: RelationalTypeMapperExtensions.GetMapping
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMapping
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
    name: IProperty
    nameWithType: IProperty
    fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)
    name: GetMapping
    nameWithType: RelationalTypeMapperExtensions.GetMapping
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMapping
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
    name: IProperty
    nameWithType: IProperty
    fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMapping(System.Type)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMapping(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,System.Type)
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions
  definition: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMapping(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,System.Type)
  name: GetMapping(Type)
  nameWithType: RelationalTypeMapperExtensions.GetMapping(Type)
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMapping(System.Type)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMapping(System.Type)
    name: GetMapping
    nameWithType: RelationalTypeMapperExtensions.GetMapping
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMapping
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMapping(System.Type)
    name: GetMapping
    nameWithType: RelationalTypeMapperExtensions.GetMapping
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMapping
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMapping(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMapping(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,System.String)
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions
  definition: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMapping(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,System.String)
  name: GetMapping(String)
  nameWithType: RelationalTypeMapperExtensions.GetMapping(String)
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMapping(System.String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMapping(System.String)
    name: GetMapping
    nameWithType: RelationalTypeMapperExtensions.GetMapping
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMapping
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMapping(System.String)
    name: GetMapping
    nameWithType: RelationalTypeMapperExtensions.GetMapping
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMapping
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.IsTypeMapped(System.Type)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.IsTypeMapped(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,System.Type)
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions
  definition: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.IsTypeMapped(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,System.Type)
  name: IsTypeMapped(Type)
  nameWithType: RelationalTypeMapperExtensions.IsTypeMapped(Type)
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.IsTypeMapped(System.Type)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.IsTypeMapped(System.Type)
    name: IsTypeMapped
    nameWithType: RelationalTypeMapperExtensions.IsTypeMapped
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.IsTypeMapped
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.IsTypeMapped(System.Type)
    name: IsTypeMapped
    nameWithType: RelationalTypeMapperExtensions.IsTypeMapped
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.IsTypeMapped
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<RelationalTypeMapper, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<RelationalTypeMapper, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of RelationalTypeMapper, TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper, TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of RelationalTypeMapper, TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<RelationalTypeMapper, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<RelationalTypeMapper, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of RelationalTypeMapper, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of RelationalTypeMapper, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMappingForValue(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMappingForValue(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,System.Object)
  isExternal: true
  name: GetMappingForValue(IRelationalTypeMapper, Object)
  nameWithType: RelationalTypeMapperExtensions.GetMappingForValue(IRelationalTypeMapper, Object)
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMappingForValue(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper, System.Object)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMappingForValue(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,System.Object)
    name: GetMappingForValue
    nameWithType: RelationalTypeMapperExtensions.GetMappingForValue
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMappingForValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper
    name: IRelationalTypeMapper
    nameWithType: IRelationalTypeMapper
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMappingForValue(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,System.Object)
    name: GetMappingForValue
    nameWithType: RelationalTypeMapperExtensions.GetMappingForValue
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMappingForValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper
    name: IRelationalTypeMapper
    nameWithType: IRelationalTypeMapper
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: RelationalTypeMapperExtensions
  nameWithType: RelationalTypeMapperExtensions
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMapping(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,Microsoft.EntityFrameworkCore.Metadata.IProperty)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMapping(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,Microsoft.EntityFrameworkCore.Metadata.IProperty)
  isExternal: false
  name: GetMapping(IRelationalTypeMapper, IProperty)
  nameWithType: RelationalTypeMapperExtensions.GetMapping(IRelationalTypeMapper, IProperty)
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMapping(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper, Microsoft.EntityFrameworkCore.Metadata.IProperty)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMapping(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,Microsoft.EntityFrameworkCore.Metadata.IProperty)
    name: GetMapping
    nameWithType: RelationalTypeMapperExtensions.GetMapping
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMapping
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper
    name: IRelationalTypeMapper
    nameWithType: IRelationalTypeMapper
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
    name: IProperty
    nameWithType: IProperty
    fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMapping(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,Microsoft.EntityFrameworkCore.Metadata.IProperty)
    name: GetMapping
    nameWithType: RelationalTypeMapperExtensions.GetMapping
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMapping
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper
    name: IRelationalTypeMapper
    nameWithType: IRelationalTypeMapper
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
    name: IProperty
    nameWithType: IProperty
    fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMapping(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,System.Type)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMapping(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,System.Type)
  isExternal: true
  name: GetMapping(IRelationalTypeMapper, Type)
  nameWithType: RelationalTypeMapperExtensions.GetMapping(IRelationalTypeMapper, Type)
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMapping(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper, System.Type)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMapping(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,System.Type)
    name: GetMapping
    nameWithType: RelationalTypeMapperExtensions.GetMapping
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMapping
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper
    name: IRelationalTypeMapper
    nameWithType: IRelationalTypeMapper
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMapping(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,System.Type)
    name: GetMapping
    nameWithType: RelationalTypeMapperExtensions.GetMapping
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMapping
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper
    name: IRelationalTypeMapper
    nameWithType: IRelationalTypeMapper
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMapping(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMapping(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,System.String)
  isExternal: true
  name: GetMapping(IRelationalTypeMapper, String)
  nameWithType: RelationalTypeMapperExtensions.GetMapping(IRelationalTypeMapper, String)
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMapping(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper, System.String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMapping(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,System.String)
    name: GetMapping
    nameWithType: RelationalTypeMapperExtensions.GetMapping
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMapping
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper
    name: IRelationalTypeMapper
    nameWithType: IRelationalTypeMapper
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMapping(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,System.String)
    name: GetMapping
    nameWithType: RelationalTypeMapperExtensions.GetMapping
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMapping
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper
    name: IRelationalTypeMapper
    nameWithType: IRelationalTypeMapper
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.IsTypeMapped(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,System.Type)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.IsTypeMapped(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,System.Type)
  isExternal: true
  name: IsTypeMapped(IRelationalTypeMapper, Type)
  nameWithType: RelationalTypeMapperExtensions.IsTypeMapped(IRelationalTypeMapper, Type)
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.IsTypeMapped(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper, System.Type)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.IsTypeMapped(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,System.Type)
    name: IsTypeMapped
    nameWithType: RelationalTypeMapperExtensions.IsTypeMapped
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.IsTypeMapped
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper
    name: IRelationalTypeMapper
    nameWithType: IRelationalTypeMapper
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.IsTypeMapped(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,System.Type)
    name: IsTypeMapped
    nameWithType: RelationalTypeMapperExtensions.IsTypeMapped
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.IsTypeMapped
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper
    name: IRelationalTypeMapper
    nameWithType: IRelationalTypeMapper
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: System.Collections.Generic.IReadOnlyDictionary{System.Type,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping}
  commentId: T:System.Collections.Generic.IReadOnlyDictionary{System.Type,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyDictionary`2
  name: IReadOnlyDictionary<Type, RelationalTypeMapping>
  nameWithType: IReadOnlyDictionary<Type, RelationalTypeMapping>
  fullName: System.Collections.Generic.IReadOnlyDictionary<System.Type, Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping>
  nameWithType.vb: IReadOnlyDictionary(Of Type, RelationalTypeMapping)
  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of System.Type, Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping)
  name.vb: IReadOnlyDictionary(Of Type, RelationalTypeMapping)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping
    name: RelationalTypeMapping
    nameWithType: RelationalTypeMapping
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping
    name: RelationalTypeMapping
    nameWithType: RelationalTypeMapping
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyDictionary`2
  commentId: T:System.Collections.Generic.IReadOnlyDictionary`2
  isExternal: true
  name: IReadOnlyDictionary<TKey, TValue>
  nameWithType: IReadOnlyDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>
  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue)
  name.vb: IReadOnlyDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IReadOnlyDictionary{System.String,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping}
  commentId: T:System.Collections.Generic.IReadOnlyDictionary{System.String,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyDictionary`2
  name: IReadOnlyDictionary<String, RelationalTypeMapping>
  nameWithType: IReadOnlyDictionary<String, RelationalTypeMapping>
  fullName: System.Collections.Generic.IReadOnlyDictionary<System.String, Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping>
  nameWithType.vb: IReadOnlyDictionary(Of String, RelationalTypeMapping)
  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of System.String, Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping)
  name.vb: IReadOnlyDictionary(Of String, RelationalTypeMapping)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping
    name: RelationalTypeMapping
    nameWithType: RelationalTypeMapping
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping
    name: RelationalTypeMapping
    nameWithType: RelationalTypeMapping
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IProperty
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IProperty
  nameWithType: IProperty
  fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.ValidateTypeName(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.ValidateTypeName(System.String)
  parent: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper
  isExternal: true
  name: ValidateTypeName(String)
  nameWithType: IRelationalTypeMapper.ValidateTypeName(String)
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.ValidateTypeName(System.String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.ValidateTypeName(System.String)
    name: ValidateTypeName
    nameWithType: IRelationalTypeMapper.ValidateTypeName
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.ValidateTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.ValidateTypeName(System.String)
    name: ValidateTypeName
    nameWithType: IRelationalTypeMapper.ValidateTypeName
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.ValidateTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.FindMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.FindMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  parent: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper
  isExternal: false
  name: FindMapping(IProperty)
  nameWithType: IRelationalTypeMapper.FindMapping(IProperty)
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.FindMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.FindMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)
    name: FindMapping
    nameWithType: IRelationalTypeMapper.FindMapping
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.FindMapping
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
    name: IProperty
    nameWithType: IProperty
    fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.FindMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)
    name: FindMapping
    nameWithType: IRelationalTypeMapper.FindMapping
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.FindMapping
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
    name: IProperty
    nameWithType: IProperty
    fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping
  commentId: T:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: RelationalTypeMapping
  nameWithType: RelationalTypeMapping
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.FindMapping(System.Type)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.FindMapping(System.Type)
  parent: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper
  isExternal: true
  name: FindMapping(Type)
  nameWithType: IRelationalTypeMapper.FindMapping(Type)
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.FindMapping(System.Type)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.FindMapping(System.Type)
    name: FindMapping
    nameWithType: IRelationalTypeMapper.FindMapping
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.FindMapping
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.FindMapping(System.Type)
    name: FindMapping
    nameWithType: IRelationalTypeMapper.FindMapping
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.FindMapping
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.FindMapping(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.FindMapping(System.String)
  parent: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper
  isExternal: true
  name: FindMapping(String)
  nameWithType: IRelationalTypeMapper.FindMapping(String)
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.FindMapping(System.String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.FindMapping(System.String)
    name: FindMapping
    nameWithType: IRelationalTypeMapper.FindMapping
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.FindMapping
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.FindMapping(System.String)
    name: FindMapping
    nameWithType: IRelationalTypeMapper.FindMapping
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.FindMapping
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.ByteArrayMapper
  commentId: P:Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.ByteArrayMapper
  parent: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper
  isExternal: false
  name: ByteArrayMapper
  nameWithType: IRelationalTypeMapper.ByteArrayMapper
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.ByteArrayMapper
- uid: Microsoft.EntityFrameworkCore.Storage.IByteArrayRelationalTypeMapper
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IByteArrayRelationalTypeMapper
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IByteArrayRelationalTypeMapper
  nameWithType: IByteArrayRelationalTypeMapper
  fullName: Microsoft.EntityFrameworkCore.Storage.IByteArrayRelationalTypeMapper
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.StringMapper
  commentId: P:Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.StringMapper
  parent: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper
  isExternal: false
  name: StringMapper
  nameWithType: IRelationalTypeMapper.StringMapper
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.StringMapper
- uid: Microsoft.EntityFrameworkCore.Storage.IStringRelationalTypeMapper
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IStringRelationalTypeMapper
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IStringRelationalTypeMapper
  nameWithType: IStringRelationalTypeMapper
  fullName: Microsoft.EntityFrameworkCore.Storage.IStringRelationalTypeMapper
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
