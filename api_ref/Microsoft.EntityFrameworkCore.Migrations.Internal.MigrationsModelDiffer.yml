### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer
  commentId: T:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer
  id: MigrationsModelDiffer
  parent: Microsoft.EntityFrameworkCore.Migrations.Internal
  children:
  - Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider,Microsoft.EntityFrameworkCore.Migrations.IMigrationsAnnotationProvider)
  - Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Add(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  - Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Add(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  - Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Add(Microsoft.EntityFrameworkCore.Metadata.IIndex,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  - Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Add(Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  - Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Add(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  - Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Add(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext,System.Boolean)
  - Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Add(Microsoft.EntityFrameworkCore.Metadata.ISequence)
  - Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Add(System.String)
  - Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Annotations
  - Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  - Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  - Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(Microsoft.EntityFrameworkCore.Metadata.IIndex,Microsoft.EntityFrameworkCore.Metadata.IIndex,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  - Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  - Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  - Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IProperty)
  - Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(Microsoft.EntityFrameworkCore.Metadata.ISequence,Microsoft.EntityFrameworkCore.Metadata.ISequence)
  - Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IEntityType},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IEntityType},Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  - Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IForeignKey},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IForeignKey},Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  - Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IIndex},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IIndex},Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  - Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IKey},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IKey},Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  - Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IProperty},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IProperty},Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  - Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.ISequence},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.ISequence})
  - Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})
  - Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(System.String,System.String)
  - Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffCollection``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation}},System.Func{``0,System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation}},System.Func{``0,System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation}},System.Func{``0,``0,System.Boolean}[])
  - Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.GetColumns(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IProperty})
  - Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.GetDefaultValue(System.Type)
  - Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.GetDifferences(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Metadata.IModel)
  - Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.GetSchemas(Microsoft.EntityFrameworkCore.Metadata.IModel)
  - Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.HasDifferences(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Metadata.IModel)
  - Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.HasDifferences(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation})
  - Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.MigrationsAnnotations
  - Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Remove(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  - Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Remove(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  - Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Remove(Microsoft.EntityFrameworkCore.Metadata.IIndex)
  - Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Remove(Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  - Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Remove(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  - Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Remove(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  - Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Remove(Microsoft.EntityFrameworkCore.Metadata.ISequence)
  - Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Remove(System.String)
  - Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Sort(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation},Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  - Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.TypeMapper
  langs:
  - csharp
  - vb
  name: MigrationsModelDiffer
  nameWithType: MigrationsModelDiffer
  fullName: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: MigrationsModelDiffer
    path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
    startLine: 23
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Migrations.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public class MigrationsModelDiffer : IMigrationsModelDiffer'
    content.vb: >-
      Public Class MigrationsModelDiffer
          Implements IMigrationsModelDiffer
  inheritance:
  - System.Object
  implements:
  - Microsoft.EntityFrameworkCore.Migrations.IMigrationsModelDiffer
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider,Microsoft.EntityFrameworkCore.Migrations.IMigrationsAnnotationProvider)
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider,Microsoft.EntityFrameworkCore.Migrations.IMigrationsAnnotationProvider)
  id: '#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider,Microsoft.EntityFrameworkCore.Migrations.IMigrationsAnnotationProvider)'
  parent: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer
  langs:
  - csharp
  - vb
  name: MigrationsModelDiffer(IRelationalTypeMapper, IRelationalAnnotationProvider, IMigrationsAnnotationProvider)
  nameWithType: MigrationsModelDiffer.MigrationsModelDiffer(IRelationalTypeMapper, IRelationalAnnotationProvider, IMigrationsAnnotationProvider)
  fullName: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.MigrationsModelDiffer(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper, Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider, Microsoft.EntityFrameworkCore.Migrations.IMigrationsAnnotationProvider)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
    startLine: 63
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Migrations.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public MigrationsModelDiffer(IRelationalTypeMapper typeMapper, IRelationalAnnotationProvider annotations, IMigrationsAnnotationProvider migrationsAnnotations)
    content.vb: Public Sub New(typeMapper As IRelationalTypeMapper, annotations As IRelationalAnnotationProvider, migrationsAnnotations As IMigrationsAnnotationProvider)
    parameters:
    - id: typeMapper
      type: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper
    - id: annotations
      type: Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider
    - id: migrationsAnnotations
      type: Microsoft.EntityFrameworkCore.Migrations.IMigrationsAnnotationProvider
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.TypeMapper
  commentId: P:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.TypeMapper
  id: TypeMapper
  parent: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer
  langs:
  - csharp
  - vb
  name: TypeMapper
  nameWithType: MigrationsModelDiffer.TypeMapper
  fullName: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.TypeMapper
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: TypeMapper
    path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
    startLine: 81
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Migrations.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual IRelationalTypeMapper TypeMapper { get; }
    content.vb: Protected Overridable ReadOnly Property TypeMapper As IRelationalTypeMapper
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Annotations
  commentId: P:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Annotations
  id: Annotations
  parent: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer
  langs:
  - csharp
  - vb
  name: Annotations
  nameWithType: MigrationsModelDiffer.Annotations
  fullName: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Annotations
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Annotations
    path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
    startLine: 87
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Migrations.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual IRelationalAnnotationProvider Annotations { get; }
    content.vb: Protected Overridable ReadOnly Property Annotations As IRelationalAnnotationProvider
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.MigrationsAnnotations
  commentId: P:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.MigrationsAnnotations
  id: MigrationsAnnotations
  parent: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer
  langs:
  - csharp
  - vb
  name: MigrationsAnnotations
  nameWithType: MigrationsModelDiffer.MigrationsAnnotations
  fullName: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.MigrationsAnnotations
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: MigrationsAnnotations
    path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
    startLine: 93
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Migrations.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual IMigrationsAnnotationProvider MigrationsAnnotations { get; }
    content.vb: Protected Overridable ReadOnly Property MigrationsAnnotations As IMigrationsAnnotationProvider
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Migrations.IMigrationsAnnotationProvider
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.HasDifferences(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Metadata.IModel)
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.HasDifferences(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Metadata.IModel)
  id: HasDifferences(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Metadata.IModel)
  parent: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer
  langs:
  - csharp
  - vb
  name: HasDifferences(IModel, IModel)
  nameWithType: MigrationsModelDiffer.HasDifferences(IModel, IModel)
  fullName: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.HasDifferences(Microsoft.EntityFrameworkCore.Metadata.IModel, Microsoft.EntityFrameworkCore.Metadata.IModel)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: HasDifferences
    path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
    startLine: 99
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Migrations.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual bool HasDifferences(IModel source, IModel target)
    content.vb: Public Overridable Function HasDifferences(source As IModel, target As IModel) As Boolean
    parameters:
    - id: source
      type: Microsoft.EntityFrameworkCore.Metadata.IModel
    - id: target
      type: Microsoft.EntityFrameworkCore.Metadata.IModel
    return:
      type: System.Boolean
  implements:
  - Microsoft.EntityFrameworkCore.Migrations.IMigrationsModelDiffer.HasDifferences(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Metadata.IModel)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.GetDifferences(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Metadata.IModel)
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.GetDifferences(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Metadata.IModel)
  id: GetDifferences(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Metadata.IModel)
  parent: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer
  langs:
  - csharp
  - vb
  name: GetDifferences(IModel, IModel)
  nameWithType: MigrationsModelDiffer.GetDifferences(IModel, IModel)
  fullName: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.GetDifferences(Microsoft.EntityFrameworkCore.Metadata.IModel, Microsoft.EntityFrameworkCore.Metadata.IModel)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GetDifferences
    path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
    startLine: 106
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Migrations.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual IReadOnlyList<MigrationOperation> GetDifferences(IModel source, IModel target)
    content.vb: Public Overridable Function GetDifferences(source As IModel, target As IModel) As IReadOnlyList(Of MigrationOperation)
    parameters:
    - id: source
      type: Microsoft.EntityFrameworkCore.Metadata.IModel
    - id: target
      type: Microsoft.EntityFrameworkCore.Metadata.IModel
    return:
      type: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation}
  implements:
  - Microsoft.EntityFrameworkCore.Migrations.IMigrationsModelDiffer.GetDifferences(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Metadata.IModel)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Sort(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation},Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Sort(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation},Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  id: Sort(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation},Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  parent: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer
  langs:
  - csharp
  - vb
  name: Sort(IEnumerable<MigrationOperation>, MigrationsModelDiffer.DiffContext)
  nameWithType: MigrationsModelDiffer.Sort(IEnumerable<MigrationOperation>, MigrationsModelDiffer.DiffContext)
  fullName: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Sort(System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation>, Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Sort
    path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
    startLine: 117
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Migrations.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual IReadOnlyList<MigrationOperation> Sort(IEnumerable<MigrationOperation> operations, MigrationsModelDiffer.DiffContext diffContext)
    content.vb: Protected Overridable Function Sort(operations As IEnumerable(Of MigrationOperation), diffContext As MigrationsModelDiffer.DiffContext) As IReadOnlyList(Of MigrationOperation)
    parameters:
    - id: operations
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation}
    - id: diffContext
      type: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext
    return:
      type: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation}
  nameWithType.vb: MigrationsModelDiffer.Sort(IEnumerable(Of MigrationOperation), MigrationsModelDiffer.DiffContext)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Sort(System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation), Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  name.vb: Sort(IEnumerable(Of MigrationOperation), MigrationsModelDiffer.DiffContext)
- uid: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  id: Diff(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  parent: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer
  langs:
  - csharp
  - vb
  name: Diff(IModel, IModel, MigrationsModelDiffer.DiffContext)
  nameWithType: MigrationsModelDiffer.Diff(IModel, IModel, MigrationsModelDiffer.DiffContext)
  fullName: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(Microsoft.EntityFrameworkCore.Metadata.IModel, Microsoft.EntityFrameworkCore.Metadata.IModel, Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Diff
    path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
    startLine: 297
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Migrations.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual IEnumerable<MigrationOperation> Diff(IModel source, IModel target, MigrationsModelDiffer.DiffContext diffContext)
    content.vb: Protected Overridable Function Diff(source As IModel, target As IModel, diffContext As MigrationsModelDiffer.DiffContext) As IEnumerable(Of MigrationOperation)
    parameters:
    - id: source
      type: Microsoft.EntityFrameworkCore.Metadata.IModel
    - id: target
      type: Microsoft.EntityFrameworkCore.Metadata.IModel
    - id: diffContext
      type: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation}
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Add(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Add(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  id: Add(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  parent: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer
  langs:
  - csharp
  - vb
  name: Add(IModel, MigrationsModelDiffer.DiffContext)
  nameWithType: MigrationsModelDiffer.Add(IModel, MigrationsModelDiffer.DiffContext)
  fullName: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Add(Microsoft.EntityFrameworkCore.Metadata.IModel, Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Add
    path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
    startLine: 362
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Migrations.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual IEnumerable<MigrationOperation> Add(IModel target, MigrationsModelDiffer.DiffContext diffContext)
    content.vb: Protected Overridable Function Add(target As IModel, diffContext As MigrationsModelDiffer.DiffContext) As IEnumerable(Of MigrationOperation)
    parameters:
    - id: target
      type: Microsoft.EntityFrameworkCore.Metadata.IModel
    - id: diffContext
      type: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation}
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Remove(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Remove(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  id: Remove(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  parent: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer
  langs:
  - csharp
  - vb
  name: Remove(IModel, MigrationsModelDiffer.DiffContext)
  nameWithType: MigrationsModelDiffer.Remove(IModel, MigrationsModelDiffer.DiffContext)
  fullName: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Remove(Microsoft.EntityFrameworkCore.Metadata.IModel, Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Remove
    path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
    startLine: 373
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Migrations.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual IEnumerable<MigrationOperation> Remove(IModel source, MigrationsModelDiffer.DiffContext diffContext)
    content.vb: Protected Overridable Function Remove(source As IModel, diffContext As MigrationsModelDiffer.DiffContext) As IEnumerable(Of MigrationOperation)
    parameters:
    - id: source
      type: Microsoft.EntityFrameworkCore.Metadata.IModel
    - id: diffContext
      type: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation}
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})
  id: Diff(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})
  parent: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer
  langs:
  - csharp
  - vb
  name: Diff(IEnumerable<String>, IEnumerable<String>)
  nameWithType: MigrationsModelDiffer.Diff(IEnumerable<String>, IEnumerable<String>)
  fullName: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(System.Collections.Generic.IEnumerable<System.String>, System.Collections.Generic.IEnumerable<System.String>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Diff
    path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
    startLine: 386
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Migrations.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual IEnumerable<MigrationOperation> Diff(IEnumerable<string> source, IEnumerable<string> target)
    content.vb: Protected Overridable Function Diff(source As IEnumerable(Of String), target As IEnumerable(Of String)) As IEnumerable(Of MigrationOperation)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.String}
    - id: target
      type: System.Collections.Generic.IEnumerable{System.String}
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation}
  nameWithType.vb: MigrationsModelDiffer.Diff(IEnumerable(Of String), IEnumerable(Of String))
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(System.Collections.Generic.IEnumerable(Of System.String), System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: Diff(IEnumerable(Of String), IEnumerable(Of String))
- uid: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(System.String,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(System.String,System.String)
  id: Diff(System.String,System.String)
  parent: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer
  langs:
  - csharp
  - vb
  name: Diff(String, String)
  nameWithType: MigrationsModelDiffer.Diff(String, String)
  fullName: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Diff
    path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
    startLine: 396
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Migrations.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual IEnumerable<MigrationOperation> Diff(string source, string target)
    content.vb: Protected Overridable Function Diff(source As String, target As String) As IEnumerable(Of MigrationOperation)
    parameters:
    - id: source
      type: System.String
    - id: target
      type: System.String
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation}
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Add(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Add(System.String)
  id: Add(System.String)
  parent: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer
  langs:
  - csharp
  - vb
  name: Add(String)
  nameWithType: MigrationsModelDiffer.Add(String)
  fullName: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Add(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Add
    path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
    startLine: 403
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Migrations.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual IEnumerable<MigrationOperation> Add(string target)
    content.vb: Protected Overridable Function Add(target As String) As IEnumerable(Of MigrationOperation)
    parameters:
    - id: target
      type: System.String
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation}
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Remove(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Remove(System.String)
  id: Remove(System.String)
  parent: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer
  langs:
  - csharp
  - vb
  name: Remove(String)
  nameWithType: MigrationsModelDiffer.Remove(String)
  fullName: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Remove(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Remove
    path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
    startLine: 412
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Migrations.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual IEnumerable<MigrationOperation> Remove(string source)
    content.vb: Protected Overridable Function Remove(source As String) As IEnumerable(Of MigrationOperation)
    parameters:
    - id: source
      type: System.String
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation}
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IEntityType},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IEntityType},Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IEntityType},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IEntityType},Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  id: Diff(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IEntityType},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IEntityType},Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  parent: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer
  langs:
  - csharp
  - vb
  name: Diff(IEnumerable<IEntityType>, IEnumerable<IEntityType>, MigrationsModelDiffer.DiffContext)
  nameWithType: MigrationsModelDiffer.Diff(IEnumerable<IEntityType>, IEnumerable<IEntityType>, MigrationsModelDiffer.DiffContext)
  fullName: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Metadata.IEntityType>, System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Metadata.IEntityType>, Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Diff
    path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
    startLine: 422
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Migrations.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual IEnumerable<MigrationOperation> Diff(IEnumerable<IEntityType> source, IEnumerable<IEntityType> target, MigrationsModelDiffer.DiffContext diffContext)
    content.vb: Protected Overridable Function Diff(source As IEnumerable(Of IEntityType), target As IEnumerable(Of IEntityType), diffContext As MigrationsModelDiffer.DiffContext) As IEnumerable(Of MigrationOperation)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IEntityType}
    - id: target
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IEntityType}
    - id: diffContext
      type: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation}
  nameWithType.vb: MigrationsModelDiffer.Diff(IEnumerable(Of IEntityType), IEnumerable(Of IEntityType), MigrationsModelDiffer.DiffContext)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Metadata.IEntityType), System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Metadata.IEntityType), Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  name.vb: Diff(IEnumerable(Of IEntityType), IEnumerable(Of IEntityType), MigrationsModelDiffer.DiffContext)
- uid: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  id: Diff(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  parent: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer
  langs:
  - csharp
  - vb
  name: Diff(IEntityType, IEntityType, MigrationsModelDiffer.DiffContext)
  nameWithType: MigrationsModelDiffer.Diff(IEntityType, IEntityType, MigrationsModelDiffer.DiffContext)
  fullName: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(Microsoft.EntityFrameworkCore.Metadata.IEntityType, Microsoft.EntityFrameworkCore.Metadata.IEntityType, Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Diff
    path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
    startLine: 450
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Migrations.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual IEnumerable<MigrationOperation> Diff(IEntityType source, IEntityType target, MigrationsModelDiffer.DiffContext diffContext)
    content.vb: Protected Overridable Function Diff(source As IEntityType, target As IEntityType, diffContext As MigrationsModelDiffer.DiffContext) As IEnumerable(Of MigrationOperation)
    parameters:
    - id: source
      type: Microsoft.EntityFrameworkCore.Metadata.IEntityType
    - id: target
      type: Microsoft.EntityFrameworkCore.Metadata.IEntityType
    - id: diffContext
      type: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation}
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Add(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Add(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  id: Add(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  parent: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer
  langs:
  - csharp
  - vb
  name: Add(IEntityType, MigrationsModelDiffer.DiffContext)
  nameWithType: MigrationsModelDiffer.Add(IEntityType, MigrationsModelDiffer.DiffContext)
  fullName: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Add(Microsoft.EntityFrameworkCore.Metadata.IEntityType, Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Add
    path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
    startLine: 508
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Migrations.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual IEnumerable<MigrationOperation> Add(IEntityType target, MigrationsModelDiffer.DiffContext diffContext)
    content.vb: Protected Overridable Function Add(target As IEntityType, diffContext As MigrationsModelDiffer.DiffContext) As IEnumerable(Of MigrationOperation)
    parameters:
    - id: target
      type: Microsoft.EntityFrameworkCore.Metadata.IEntityType
    - id: diffContext
      type: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation}
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Remove(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Remove(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  id: Remove(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  parent: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer
  langs:
  - csharp
  - vb
  name: Remove(IEntityType, MigrationsModelDiffer.DiffContext)
  nameWithType: MigrationsModelDiffer.Remove(IEntityType, MigrationsModelDiffer.DiffContext)
  fullName: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Remove(Microsoft.EntityFrameworkCore.Metadata.IEntityType, Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Remove
    path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
    startLine: 541
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Migrations.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual IEnumerable<MigrationOperation> Remove(IEntityType source, MigrationsModelDiffer.DiffContext diffContext)
    content.vb: Protected Overridable Function Remove(source As IEntityType, diffContext As MigrationsModelDiffer.DiffContext) As IEnumerable(Of MigrationOperation)
    parameters:
    - id: source
      type: Microsoft.EntityFrameworkCore.Metadata.IEntityType
    - id: diffContext
      type: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation}
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IProperty},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IProperty},Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IProperty},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IProperty},Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  id: Diff(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IProperty},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IProperty},Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  parent: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer
  langs:
  - csharp
  - vb
  name: Diff(IEnumerable<IProperty>, IEnumerable<IProperty>, MigrationsModelDiffer.DiffContext)
  nameWithType: MigrationsModelDiffer.Diff(IEnumerable<IProperty>, IEnumerable<IProperty>, MigrationsModelDiffer.DiffContext)
  fullName: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Metadata.IProperty>, System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Metadata.IProperty>, Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Diff
    path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
    startLine: 577
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Migrations.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual IEnumerable<MigrationOperation> Diff(IEnumerable<IProperty> source, IEnumerable<IProperty> target, MigrationsModelDiffer.DiffContext diffContext)
    content.vb: Protected Overridable Function Diff(source As IEnumerable(Of IProperty), target As IEnumerable(Of IProperty), diffContext As MigrationsModelDiffer.DiffContext) As IEnumerable(Of MigrationOperation)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IProperty}
    - id: target
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IProperty}
    - id: diffContext
      type: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation}
  nameWithType.vb: MigrationsModelDiffer.Diff(IEnumerable(Of IProperty), IEnumerable(Of IProperty), MigrationsModelDiffer.DiffContext)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Metadata.IProperty), System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Metadata.IProperty), Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  name.vb: Diff(IEnumerable(Of IProperty), IEnumerable(Of IProperty), MigrationsModelDiffer.DiffContext)
- uid: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IProperty)
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IProperty)
  id: Diff(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IProperty)
  parent: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer
  langs:
  - csharp
  - vb
  name: Diff(IProperty, IProperty)
  nameWithType: MigrationsModelDiffer.Diff(IProperty, IProperty)
  fullName: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(Microsoft.EntityFrameworkCore.Metadata.IProperty, Microsoft.EntityFrameworkCore.Metadata.IProperty)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Diff
    path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
    startLine: 602
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Migrations.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual IEnumerable<MigrationOperation> Diff(IProperty source, IProperty target)
    content.vb: Protected Overridable Function Diff(source As IProperty, target As IProperty) As IEnumerable(Of MigrationOperation)
    parameters:
    - id: source
      type: Microsoft.EntityFrameworkCore.Metadata.IProperty
    - id: target
      type: Microsoft.EntityFrameworkCore.Metadata.IProperty
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation}
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Add(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext,System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Add(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext,System.Boolean)
  id: Add(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext,System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer
  langs:
  - csharp
  - vb
  name: Add(IProperty, MigrationsModelDiffer.DiffContext, Boolean)
  nameWithType: MigrationsModelDiffer.Add(IProperty, MigrationsModelDiffer.DiffContext, Boolean)
  fullName: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Add(Microsoft.EntityFrameworkCore.Metadata.IProperty, Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Add
    path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
    startLine: 665
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Migrations.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual IEnumerable<MigrationOperation> Add(IProperty target, MigrationsModelDiffer.DiffContext diffContext, bool inline = false)
    content.vb: Protected Overridable Function Add(target As IProperty, diffContext As MigrationsModelDiffer.DiffContext, inline As Boolean = False) As IEnumerable(Of MigrationOperation)
    parameters:
    - id: target
      type: Microsoft.EntityFrameworkCore.Metadata.IProperty
    - id: diffContext
      type: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext
    - id: inline
      type: System.Boolean
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation}
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Remove(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Remove(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  id: Remove(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  parent: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer
  langs:
  - csharp
  - vb
  name: Remove(IProperty)
  nameWithType: MigrationsModelDiffer.Remove(IProperty)
  fullName: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Remove(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Remove
    path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
    startLine: 688
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Migrations.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual IEnumerable<MigrationOperation> Remove(IProperty source)
    content.vb: Protected Overridable Function Remove(source As IProperty) As IEnumerable(Of MigrationOperation)
    parameters:
    - id: source
      type: Microsoft.EntityFrameworkCore.Metadata.IProperty
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation}
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IKey},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IKey},Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IKey},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IKey},Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  id: Diff(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IKey},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IKey},Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  parent: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer
  langs:
  - csharp
  - vb
  name: Diff(IEnumerable<IKey>, IEnumerable<IKey>, MigrationsModelDiffer.DiffContext)
  nameWithType: MigrationsModelDiffer.Diff(IEnumerable<IKey>, IEnumerable<IKey>, MigrationsModelDiffer.DiffContext)
  fullName: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Metadata.IKey>, System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Metadata.IKey>, Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Diff
    path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
    startLine: 738
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Migrations.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual IEnumerable<MigrationOperation> Diff(IEnumerable<IKey> source, IEnumerable<IKey> target, MigrationsModelDiffer.DiffContext diffContext)
    content.vb: Protected Overridable Function Diff(source As IEnumerable(Of IKey), target As IEnumerable(Of IKey), diffContext As MigrationsModelDiffer.DiffContext) As IEnumerable(Of MigrationOperation)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IKey}
    - id: target
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IKey}
    - id: diffContext
      type: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation}
  nameWithType.vb: MigrationsModelDiffer.Diff(IEnumerable(Of IKey), IEnumerable(Of IKey), MigrationsModelDiffer.DiffContext)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Metadata.IKey), System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Metadata.IKey), Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  name.vb: Diff(IEnumerable(Of IKey), IEnumerable(Of IKey), MigrationsModelDiffer.DiffContext)
- uid: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  id: Diff(Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  parent: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer
  langs:
  - csharp
  - vb
  name: Diff(IKey, IKey, MigrationsModelDiffer.DiffContext)
  nameWithType: MigrationsModelDiffer.Diff(IKey, IKey, MigrationsModelDiffer.DiffContext)
  fullName: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(Microsoft.EntityFrameworkCore.Metadata.IKey, Microsoft.EntityFrameworkCore.Metadata.IKey, Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Diff
    path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
    startLine: 755
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Migrations.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual IEnumerable<MigrationOperation> Diff(IKey source, IKey target, MigrationsModelDiffer.DiffContext diffContext)
    content.vb: Protected Overridable Function Diff(source As IKey, target As IKey, diffContext As MigrationsModelDiffer.DiffContext) As IEnumerable(Of MigrationOperation)
    parameters:
    - id: source
      type: Microsoft.EntityFrameworkCore.Metadata.IKey
    - id: target
      type: Microsoft.EntityFrameworkCore.Metadata.IKey
    - id: diffContext
      type: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation}
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Add(Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Add(Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  id: Add(Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  parent: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer
  langs:
  - csharp
  - vb
  name: Add(IKey, MigrationsModelDiffer.DiffContext)
  nameWithType: MigrationsModelDiffer.Add(IKey, MigrationsModelDiffer.DiffContext)
  fullName: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Add(Microsoft.EntityFrameworkCore.Metadata.IKey, Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Add
    path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
    startLine: 767
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Migrations.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual IEnumerable<MigrationOperation> Add(IKey target, MigrationsModelDiffer.DiffContext diffContext)
    content.vb: Protected Overridable Function Add(target As IKey, diffContext As MigrationsModelDiffer.DiffContext) As IEnumerable(Of MigrationOperation)
    parameters:
    - id: target
      type: Microsoft.EntityFrameworkCore.Metadata.IKey
    - id: diffContext
      type: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation}
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Remove(Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Remove(Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  id: Remove(Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  parent: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer
  langs:
  - csharp
  - vb
  name: Remove(IKey, MigrationsModelDiffer.DiffContext)
  nameWithType: MigrationsModelDiffer.Remove(IKey, MigrationsModelDiffer.DiffContext)
  fullName: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Remove(Microsoft.EntityFrameworkCore.Metadata.IKey, Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Remove
    path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
    startLine: 804
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Migrations.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual IEnumerable<MigrationOperation> Remove(IKey source, MigrationsModelDiffer.DiffContext diffContext)
    content.vb: Protected Overridable Function Remove(source As IKey, diffContext As MigrationsModelDiffer.DiffContext) As IEnumerable(Of MigrationOperation)
    parameters:
    - id: source
      type: Microsoft.EntityFrameworkCore.Metadata.IKey
    - id: diffContext
      type: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation}
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IForeignKey},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IForeignKey},Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IForeignKey},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IForeignKey},Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  id: Diff(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IForeignKey},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IForeignKey},Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  parent: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer
  langs:
  - csharp
  - vb
  name: Diff(IEnumerable<IForeignKey>, IEnumerable<IForeignKey>, MigrationsModelDiffer.DiffContext)
  nameWithType: MigrationsModelDiffer.Diff(IEnumerable<IForeignKey>, IEnumerable<IForeignKey>, MigrationsModelDiffer.DiffContext)
  fullName: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Metadata.IForeignKey>, System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Metadata.IForeignKey>, Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Diff
    path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
    startLine: 843
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Migrations.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual IEnumerable<MigrationOperation> Diff(IEnumerable<IForeignKey> source, IEnumerable<IForeignKey> target, MigrationsModelDiffer.DiffContext diffContext)
    content.vb: Protected Overridable Function Diff(source As IEnumerable(Of IForeignKey), target As IEnumerable(Of IForeignKey), diffContext As MigrationsModelDiffer.DiffContext) As IEnumerable(Of MigrationOperation)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IForeignKey}
    - id: target
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IForeignKey}
    - id: diffContext
      type: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation}
  nameWithType.vb: MigrationsModelDiffer.Diff(IEnumerable(Of IForeignKey), IEnumerable(Of IForeignKey), MigrationsModelDiffer.DiffContext)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Metadata.IForeignKey), System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Metadata.IForeignKey), Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  name.vb: Diff(IEnumerable(Of IForeignKey), IEnumerable(Of IForeignKey), MigrationsModelDiffer.DiffContext)
- uid: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  id: Diff(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  parent: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer
  langs:
  - csharp
  - vb
  name: Diff(IForeignKey, IForeignKey, MigrationsModelDiffer.DiffContext)
  nameWithType: MigrationsModelDiffer.Diff(IForeignKey, IForeignKey, MigrationsModelDiffer.DiffContext)
  fullName: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(Microsoft.EntityFrameworkCore.Metadata.IForeignKey, Microsoft.EntityFrameworkCore.Metadata.IForeignKey, Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Diff
    path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
    startLine: 863
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Migrations.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual IEnumerable<MigrationOperation> Diff(IForeignKey source, IForeignKey target, MigrationsModelDiffer.DiffContext diffContext)
    content.vb: Protected Overridable Function Diff(source As IForeignKey, target As IForeignKey, diffContext As MigrationsModelDiffer.DiffContext) As IEnumerable(Of MigrationOperation)
    parameters:
    - id: source
      type: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    - id: target
      type: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    - id: diffContext
      type: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation}
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Add(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Add(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  id: Add(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  parent: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer
  langs:
  - csharp
  - vb
  name: Add(IForeignKey, MigrationsModelDiffer.DiffContext)
  nameWithType: MigrationsModelDiffer.Add(IForeignKey, MigrationsModelDiffer.DiffContext)
  fullName: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Add(Microsoft.EntityFrameworkCore.Metadata.IForeignKey, Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Add
    path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
    startLine: 873
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Migrations.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual IEnumerable<MigrationOperation> Add(IForeignKey target, MigrationsModelDiffer.DiffContext diffContext)
    content.vb: Protected Overridable Function Add(target As IForeignKey, diffContext As MigrationsModelDiffer.DiffContext) As IEnumerable(Of MigrationOperation)
    parameters:
    - id: target
      type: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    - id: diffContext
      type: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation}
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Remove(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Remove(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  id: Remove(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  parent: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer
  langs:
  - csharp
  - vb
  name: Remove(IForeignKey, MigrationsModelDiffer.DiffContext)
  nameWithType: MigrationsModelDiffer.Remove(IForeignKey, MigrationsModelDiffer.DiffContext)
  fullName: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Remove(Microsoft.EntityFrameworkCore.Metadata.IForeignKey, Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Remove
    path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
    startLine: 911
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Migrations.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual IEnumerable<MigrationOperation> Remove(IForeignKey source, MigrationsModelDiffer.DiffContext diffContext)
    content.vb: Protected Overridable Function Remove(source As IForeignKey, diffContext As MigrationsModelDiffer.DiffContext) As IEnumerable(Of MigrationOperation)
    parameters:
    - id: source
      type: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    - id: diffContext
      type: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation}
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IIndex},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IIndex},Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IIndex},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IIndex},Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  id: Diff(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IIndex},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IIndex},Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  parent: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer
  langs:
  - csharp
  - vb
  name: Diff(IEnumerable<IIndex>, IEnumerable<IIndex>, MigrationsModelDiffer.DiffContext)
  nameWithType: MigrationsModelDiffer.Diff(IEnumerable<IIndex>, IEnumerable<IIndex>, MigrationsModelDiffer.DiffContext)
  fullName: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Metadata.IIndex>, System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Metadata.IIndex>, Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Diff
    path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
    startLine: 939
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Migrations.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual IEnumerable<MigrationOperation> Diff(IEnumerable<IIndex> source, IEnumerable<IIndex> target, MigrationsModelDiffer.DiffContext diffContext)
    content.vb: Protected Overridable Function Diff(source As IEnumerable(Of IIndex), target As IEnumerable(Of IIndex), diffContext As MigrationsModelDiffer.DiffContext) As IEnumerable(Of MigrationOperation)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IIndex}
    - id: target
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IIndex}
    - id: diffContext
      type: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation}
  nameWithType.vb: MigrationsModelDiffer.Diff(IEnumerable(Of IIndex), IEnumerable(Of IIndex), MigrationsModelDiffer.DiffContext)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Metadata.IIndex), System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Metadata.IIndex), Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  name.vb: Diff(IEnumerable(Of IIndex), IEnumerable(Of IIndex), MigrationsModelDiffer.DiffContext)
- uid: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(Microsoft.EntityFrameworkCore.Metadata.IIndex,Microsoft.EntityFrameworkCore.Metadata.IIndex,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(Microsoft.EntityFrameworkCore.Metadata.IIndex,Microsoft.EntityFrameworkCore.Metadata.IIndex,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  id: Diff(Microsoft.EntityFrameworkCore.Metadata.IIndex,Microsoft.EntityFrameworkCore.Metadata.IIndex,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  parent: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer
  langs:
  - csharp
  - vb
  name: Diff(IIndex, IIndex, MigrationsModelDiffer.DiffContext)
  nameWithType: MigrationsModelDiffer.Diff(IIndex, IIndex, MigrationsModelDiffer.DiffContext)
  fullName: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(Microsoft.EntityFrameworkCore.Metadata.IIndex, Microsoft.EntityFrameworkCore.Metadata.IIndex, Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Diff
    path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
    startLine: 964
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Migrations.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual IEnumerable<MigrationOperation> Diff(IIndex source, IIndex target, MigrationsModelDiffer.DiffContext diffContext)
    content.vb: Protected Overridable Function Diff(source As IIndex, target As IIndex, diffContext As MigrationsModelDiffer.DiffContext) As IEnumerable(Of MigrationOperation)
    parameters:
    - id: source
      type: Microsoft.EntityFrameworkCore.Metadata.IIndex
    - id: target
      type: Microsoft.EntityFrameworkCore.Metadata.IIndex
    - id: diffContext
      type: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation}
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Add(Microsoft.EntityFrameworkCore.Metadata.IIndex,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Add(Microsoft.EntityFrameworkCore.Metadata.IIndex,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  id: Add(Microsoft.EntityFrameworkCore.Metadata.IIndex,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  parent: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer
  langs:
  - csharp
  - vb
  name: Add(IIndex, MigrationsModelDiffer.DiffContext)
  nameWithType: MigrationsModelDiffer.Add(IIndex, MigrationsModelDiffer.DiffContext)
  fullName: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Add(Microsoft.EntityFrameworkCore.Metadata.IIndex, Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Add
    path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
    startLine: 989
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Migrations.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual IEnumerable<MigrationOperation> Add(IIndex target, MigrationsModelDiffer.DiffContext diffContext)
    content.vb: Protected Overridable Function Add(target As IIndex, diffContext As MigrationsModelDiffer.DiffContext) As IEnumerable(Of MigrationOperation)
    parameters:
    - id: target
      type: Microsoft.EntityFrameworkCore.Metadata.IIndex
    - id: diffContext
      type: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation}
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Remove(Microsoft.EntityFrameworkCore.Metadata.IIndex)
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Remove(Microsoft.EntityFrameworkCore.Metadata.IIndex)
  id: Remove(Microsoft.EntityFrameworkCore.Metadata.IIndex)
  parent: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer
  langs:
  - csharp
  - vb
  name: Remove(IIndex)
  nameWithType: MigrationsModelDiffer.Remove(IIndex)
  fullName: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Remove(Microsoft.EntityFrameworkCore.Metadata.IIndex)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Remove
    path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
    startLine: 1013
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Migrations.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual IEnumerable<MigrationOperation> Remove(IIndex source)
    content.vb: Protected Overridable Function Remove(source As IIndex) As IEnumerable(Of MigrationOperation)
    parameters:
    - id: source
      type: Microsoft.EntityFrameworkCore.Metadata.IIndex
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation}
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.ISequence},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.ISequence})
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.ISequence},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.ISequence})
  id: Diff(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.ISequence},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.ISequence})
  parent: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer
  langs:
  - csharp
  - vb
  name: Diff(IEnumerable<ISequence>, IEnumerable<ISequence>)
  nameWithType: MigrationsModelDiffer.Diff(IEnumerable<ISequence>, IEnumerable<ISequence>)
  fullName: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Metadata.ISequence>, System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Metadata.ISequence>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Diff
    path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
    startLine: 1036
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Migrations.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual IEnumerable<MigrationOperation> Diff(IEnumerable<ISequence> source, IEnumerable<ISequence> target)
    content.vb: Protected Overridable Function Diff(source As IEnumerable(Of ISequence), target As IEnumerable(Of ISequence)) As IEnumerable(Of MigrationOperation)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.ISequence}
    - id: target
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.ISequence}
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation}
  nameWithType.vb: MigrationsModelDiffer.Diff(IEnumerable(Of ISequence), IEnumerable(Of ISequence))
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Metadata.ISequence), System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Metadata.ISequence))
  name.vb: Diff(IEnumerable(Of ISequence), IEnumerable(Of ISequence))
- uid: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(Microsoft.EntityFrameworkCore.Metadata.ISequence,Microsoft.EntityFrameworkCore.Metadata.ISequence)
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(Microsoft.EntityFrameworkCore.Metadata.ISequence,Microsoft.EntityFrameworkCore.Metadata.ISequence)
  id: Diff(Microsoft.EntityFrameworkCore.Metadata.ISequence,Microsoft.EntityFrameworkCore.Metadata.ISequence)
  parent: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer
  langs:
  - csharp
  - vb
  name: Diff(ISequence, ISequence)
  nameWithType: MigrationsModelDiffer.Diff(ISequence, ISequence)
  fullName: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(Microsoft.EntityFrameworkCore.Metadata.ISequence, Microsoft.EntityFrameworkCore.Metadata.ISequence)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Diff
    path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
    startLine: 1052
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Migrations.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual IEnumerable<MigrationOperation> Diff(ISequence source, ISequence target)
    content.vb: Protected Overridable Function Diff(source As ISequence, target As ISequence) As IEnumerable(Of MigrationOperation)
    parameters:
    - id: source
      type: Microsoft.EntityFrameworkCore.Metadata.ISequence
    - id: target
      type: Microsoft.EntityFrameworkCore.Metadata.ISequence
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation}
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Add(Microsoft.EntityFrameworkCore.Metadata.ISequence)
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Add(Microsoft.EntityFrameworkCore.Metadata.ISequence)
  id: Add(Microsoft.EntityFrameworkCore.Metadata.ISequence)
  parent: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer
  langs:
  - csharp
  - vb
  name: Add(ISequence)
  nameWithType: MigrationsModelDiffer.Add(ISequence)
  fullName: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Add(Microsoft.EntityFrameworkCore.Metadata.ISequence)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Add
    path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
    startLine: 1103
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Migrations.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual IEnumerable<MigrationOperation> Add(ISequence target)
    content.vb: Protected Overridable Function Add(target As ISequence) As IEnumerable(Of MigrationOperation)
    parameters:
    - id: target
      type: Microsoft.EntityFrameworkCore.Metadata.ISequence
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation}
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Remove(Microsoft.EntityFrameworkCore.Metadata.ISequence)
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Remove(Microsoft.EntityFrameworkCore.Metadata.ISequence)
  id: Remove(Microsoft.EntityFrameworkCore.Metadata.ISequence)
  parent: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer
  langs:
  - csharp
  - vb
  name: Remove(ISequence)
  nameWithType: MigrationsModelDiffer.Remove(ISequence)
  fullName: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Remove(Microsoft.EntityFrameworkCore.Metadata.ISequence)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Remove
    path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
    startLine: 1120
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Migrations.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual IEnumerable<MigrationOperation> Remove(ISequence source)
    content.vb: Protected Overridable Function Remove(source As ISequence) As IEnumerable(Of MigrationOperation)
    parameters:
    - id: source
      type: Microsoft.EntityFrameworkCore.Metadata.ISequence
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation}
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffCollection``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation}},System.Func{``0,System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation}},System.Func{``0,System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation}},System.Func{``0,``0,System.Boolean}[])
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffCollection``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation}},System.Func{``0,System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation}},System.Func{``0,System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation}},System.Func{``0,``0,System.Boolean}[])
  id: DiffCollection``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation}},System.Func{``0,System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation}},System.Func{``0,System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation}},System.Func{``0,``0,System.Boolean}[])
  parent: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer
  langs:
  - csharp
  - vb
  name: DiffCollection<T>(IEnumerable<T>, IEnumerable<T>, Func<T, T, IEnumerable<MigrationOperation>>, Func<T, IEnumerable<MigrationOperation>>, Func<T, IEnumerable<MigrationOperation>>, Func<T, T, Boolean>[])
  nameWithType: MigrationsModelDiffer.DiffCollection<T>(IEnumerable<T>, IEnumerable<T>, Func<T, T, IEnumerable<MigrationOperation>>, Func<T, IEnumerable<MigrationOperation>>, Func<T, IEnumerable<MigrationOperation>>, Func<T, T, Boolean>[])
  fullName: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffCollection<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<T>, System.Func<T, T, System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation>>, System.Func<T, System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation>>, System.Func<T, System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation>>, System.Func<T, T, System.Boolean>[])
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: DiffCollection
    path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
    startLine: 1152
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Migrations.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual IEnumerable<MigrationOperation> DiffCollection<T>(IEnumerable<T> sources, IEnumerable<T> targets, Func<T, T, IEnumerable<MigrationOperation>> diff, Func<T, IEnumerable<MigrationOperation>> add, Func<T, IEnumerable<MigrationOperation>> remove, params Func<T, T, bool>[] predicates)
    content.vb: Protected Overridable Function DiffCollection(Of T)(sources As IEnumerable(Of T), targets As IEnumerable(Of T), diff As Func(Of T, T, IEnumerable(Of MigrationOperation)), add As Func(Of T, IEnumerable(Of MigrationOperation)), remove As Func(Of T, IEnumerable(Of MigrationOperation)), ParamArray predicates As Func(Of T, T, Boolean)()) As IEnumerable(Of MigrationOperation)
    parameters:
    - id: sources
      type: System.Collections.Generic.IEnumerable{{T}}
    - id: targets
      type: System.Collections.Generic.IEnumerable{{T}}
    - id: diff
      type: System.Func{{T},{T},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation}}
    - id: add
      type: System.Func{{T},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation}}
    - id: remove
      type: System.Func{{T},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation}}
    - id: predicates
      type: System.Func{{T},{T},System.Boolean}[]
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation}
  nameWithType.vb: MigrationsModelDiffer.DiffCollection(Of T)(IEnumerable(Of T), IEnumerable(Of T), Func(Of T, T, IEnumerable(Of MigrationOperation)), Func(Of T, IEnumerable(Of MigrationOperation)), Func(Of T, IEnumerable(Of MigrationOperation)), Func(Of T, T, Boolean)())
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffCollection(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, T, System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation)), System.Func(Of T, System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation)), System.Func(Of T, System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation)), System.Func(Of T, T, System.Boolean)())
  name.vb: DiffCollection(Of T)(IEnumerable(Of T), IEnumerable(Of T), Func(Of T, T, IEnumerable(Of MigrationOperation)), Func(Of T, IEnumerable(Of MigrationOperation)), Func(Of T, IEnumerable(Of MigrationOperation)), Func(Of T, T, Boolean)())
- uid: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.GetColumns(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IProperty})
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.GetColumns(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IProperty})
  id: GetColumns(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IProperty})
  parent: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer
  langs:
  - csharp
  - vb
  name: GetColumns(IEnumerable<IProperty>)
  nameWithType: MigrationsModelDiffer.GetColumns(IEnumerable<IProperty>)
  fullName: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.GetColumns(System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Metadata.IProperty>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GetColumns
    path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
    startLine: 1216
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Migrations.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual string[] GetColumns(IEnumerable<IProperty> properties)
    content.vb: Protected Overridable Function GetColumns(properties As IEnumerable(Of IProperty)) As String()
    parameters:
    - id: properties
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IProperty}
    return:
      type: System.String[]
  nameWithType.vb: MigrationsModelDiffer.GetColumns(IEnumerable(Of IProperty))
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.GetColumns(System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Metadata.IProperty))
  name.vb: GetColumns(IEnumerable(Of IProperty))
- uid: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.HasDifferences(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation})
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.HasDifferences(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation})
  id: HasDifferences(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation})
  parent: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer
  langs:
  - csharp
  - vb
  name: HasDifferences(IEnumerable<IAnnotation>, IEnumerable<IAnnotation>)
  nameWithType: MigrationsModelDiffer.HasDifferences(IEnumerable<IAnnotation>, IEnumerable<IAnnotation>)
  fullName: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.HasDifferences(System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation>, System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: HasDifferences
    path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
    startLine: 1223
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Migrations.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual bool HasDifferences(IEnumerable<IAnnotation> source, IEnumerable<IAnnotation> target)
    content.vb: Protected Overridable Function HasDifferences(source As IEnumerable(Of IAnnotation), target As IEnumerable(Of IAnnotation)) As Boolean
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation}
    - id: target
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation}
    return:
      type: System.Boolean
  nameWithType.vb: MigrationsModelDiffer.HasDifferences(IEnumerable(Of IAnnotation), IEnumerable(Of IAnnotation))
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.HasDifferences(System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation), System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation))
  name.vb: HasDifferences(IEnumerable(Of IAnnotation), IEnumerable(Of IAnnotation))
- uid: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.GetSchemas(Microsoft.EntityFrameworkCore.Metadata.IModel)
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.GetSchemas(Microsoft.EntityFrameworkCore.Metadata.IModel)
  id: GetSchemas(Microsoft.EntityFrameworkCore.Metadata.IModel)
  parent: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer
  langs:
  - csharp
  - vb
  name: GetSchemas(IModel)
  nameWithType: MigrationsModelDiffer.GetSchemas(IModel)
  fullName: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.GetSchemas(Microsoft.EntityFrameworkCore.Metadata.IModel)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GetSchemas
    path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
    startLine: 1245
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Migrations.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual IEnumerable<string> GetSchemas(IModel model)
    content.vb: Protected Overridable Function GetSchemas(model As IModel) As IEnumerable(Of String)
    parameters:
    - id: model
      type: Microsoft.EntityFrameworkCore.Metadata.IModel
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.GetDefaultValue(System.Type)
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.GetDefaultValue(System.Type)
  id: GetDefaultValue(System.Type)
  parent: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer
  langs:
  - csharp
  - vb
  name: GetDefaultValue(Type)
  nameWithType: MigrationsModelDiffer.GetDefaultValue(Type)
  fullName: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.GetDefaultValue(System.Type)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GetDefaultValue
    path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/Internal/MigrationsModelDiffer.cs
    startLine: 1255
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Migrations.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual object GetDefaultValue(Type type)
    content.vb: Protected Overridable Function GetDefaultValue(type As Type) As Object
    parameters:
    - id: type
      type: System.Type
    return:
      type: System.Object
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: Microsoft.EntityFrameworkCore.Migrations.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Migrations.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Migrations.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Migrations.Internal
  fullName: Microsoft.EntityFrameworkCore.Migrations.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Migrations.IMigrationsModelDiffer
  commentId: T:Microsoft.EntityFrameworkCore.Migrations.IMigrationsModelDiffer
  parent: Microsoft.EntityFrameworkCore.Migrations
  isExternal: false
  name: IMigrationsModelDiffer
  nameWithType: IMigrationsModelDiffer
  fullName: Microsoft.EntityFrameworkCore.Migrations.IMigrationsModelDiffer
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<MigrationsModelDiffer, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<MigrationsModelDiffer, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of MigrationsModelDiffer, TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer, TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of MigrationsModelDiffer, TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<MigrationsModelDiffer, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<MigrationsModelDiffer, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of MigrationsModelDiffer, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of MigrationsModelDiffer, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Migrations
  commentId: N:Microsoft.EntityFrameworkCore.Migrations
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Migrations
  nameWithType: Microsoft.EntityFrameworkCore.Migrations
  fullName: Microsoft.EntityFrameworkCore.Migrations
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IRelationalTypeMapper
  nameWithType: IRelationalTypeMapper
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper
- uid: Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IRelationalAnnotationProvider
  nameWithType: IRelationalAnnotationProvider
  fullName: Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider
- uid: Microsoft.EntityFrameworkCore.Migrations.IMigrationsAnnotationProvider
  commentId: T:Microsoft.EntityFrameworkCore.Migrations.IMigrationsAnnotationProvider
  parent: Microsoft.EntityFrameworkCore.Migrations
  isExternal: false
  name: IMigrationsAnnotationProvider
  nameWithType: IMigrationsAnnotationProvider
  fullName: Microsoft.EntityFrameworkCore.Migrations.IMigrationsAnnotationProvider
- uid: Microsoft.EntityFrameworkCore.Storage
  commentId: N:Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Storage
  nameWithType: Microsoft.EntityFrameworkCore.Storage
  fullName: Microsoft.EntityFrameworkCore.Storage
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: Microsoft.EntityFrameworkCore.Migrations.IMigrationsModelDiffer.HasDifferences(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Metadata.IModel)
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.IMigrationsModelDiffer.HasDifferences(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Metadata.IModel)
  parent: Microsoft.EntityFrameworkCore.Migrations.IMigrationsModelDiffer
  isExternal: false
  name: HasDifferences(IModel, IModel)
  nameWithType: IMigrationsModelDiffer.HasDifferences(IModel, IModel)
  fullName: Microsoft.EntityFrameworkCore.Migrations.IMigrationsModelDiffer.HasDifferences(Microsoft.EntityFrameworkCore.Metadata.IModel, Microsoft.EntityFrameworkCore.Metadata.IModel)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Migrations.IMigrationsModelDiffer.HasDifferences(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Metadata.IModel)
    name: HasDifferences
    nameWithType: IMigrationsModelDiffer.HasDifferences
    fullName: Microsoft.EntityFrameworkCore.Migrations.IMigrationsModelDiffer.HasDifferences
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IModel
    name: IModel
    nameWithType: IModel
    fullName: Microsoft.EntityFrameworkCore.Metadata.IModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IModel
    name: IModel
    nameWithType: IModel
    fullName: Microsoft.EntityFrameworkCore.Metadata.IModel
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Migrations.IMigrationsModelDiffer.HasDifferences(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Metadata.IModel)
    name: HasDifferences
    nameWithType: IMigrationsModelDiffer.HasDifferences
    fullName: Microsoft.EntityFrameworkCore.Migrations.IMigrationsModelDiffer.HasDifferences
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IModel
    name: IModel
    nameWithType: IModel
    fullName: Microsoft.EntityFrameworkCore.Metadata.IModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IModel
    name: IModel
    nameWithType: IModel
    fullName: Microsoft.EntityFrameworkCore.Metadata.IModel
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.IModel
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IModel
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IModel
  nameWithType: IModel
  fullName: Microsoft.EntityFrameworkCore.Metadata.IModel
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.EntityFrameworkCore.Migrations.IMigrationsModelDiffer.GetDifferences(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Metadata.IModel)
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.IMigrationsModelDiffer.GetDifferences(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Metadata.IModel)
  parent: Microsoft.EntityFrameworkCore.Migrations.IMigrationsModelDiffer
  isExternal: false
  name: GetDifferences(IModel, IModel)
  nameWithType: IMigrationsModelDiffer.GetDifferences(IModel, IModel)
  fullName: Microsoft.EntityFrameworkCore.Migrations.IMigrationsModelDiffer.GetDifferences(Microsoft.EntityFrameworkCore.Metadata.IModel, Microsoft.EntityFrameworkCore.Metadata.IModel)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Migrations.IMigrationsModelDiffer.GetDifferences(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Metadata.IModel)
    name: GetDifferences
    nameWithType: IMigrationsModelDiffer.GetDifferences
    fullName: Microsoft.EntityFrameworkCore.Migrations.IMigrationsModelDiffer.GetDifferences
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IModel
    name: IModel
    nameWithType: IModel
    fullName: Microsoft.EntityFrameworkCore.Metadata.IModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IModel
    name: IModel
    nameWithType: IModel
    fullName: Microsoft.EntityFrameworkCore.Metadata.IModel
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Migrations.IMigrationsModelDiffer.GetDifferences(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Metadata.IModel)
    name: GetDifferences
    nameWithType: IMigrationsModelDiffer.GetDifferences
    fullName: Microsoft.EntityFrameworkCore.Migrations.IMigrationsModelDiffer.GetDifferences
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IModel
    name: IModel
    nameWithType: IModel
    fullName: Microsoft.EntityFrameworkCore.Metadata.IModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IModel
    name: IModel
    nameWithType: IModel
    fullName: Microsoft.EntityFrameworkCore.Metadata.IModel
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation}
  commentId: T:System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<MigrationOperation>
  nameWithType: IReadOnlyList<MigrationOperation>
  fullName: System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation>
  nameWithType.vb: IReadOnlyList(Of MigrationOperation)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation)
  name.vb: IReadOnlyList(Of MigrationOperation)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation
    name: MigrationOperation
    nameWithType: MigrationOperation
    fullName: Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation
    name: MigrationOperation
    nameWithType: MigrationOperation
    fullName: Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<MigrationOperation>
  nameWithType: IEnumerable<MigrationOperation>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation>
  nameWithType.vb: IEnumerable(Of MigrationOperation)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation)
  name.vb: IEnumerable(Of MigrationOperation)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation
    name: MigrationOperation
    nameWithType: MigrationOperation
    fullName: Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation
    name: MigrationOperation
    nameWithType: MigrationOperation
    fullName: Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext
  commentId: T:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext
  parent: Microsoft.EntityFrameworkCore.Migrations.Internal
  isExternal: false
  name: MigrationsModelDiffer.DiffContext
  nameWithType: MigrationsModelDiffer.DiffContext
  fullName: Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IEntityType}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IEntityType}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IEntityType>
  nameWithType: IEnumerable<IEntityType>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Metadata.IEntityType>
  nameWithType.vb: IEnumerable(Of IEntityType)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  name.vb: IEnumerable(Of IEntityType)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.IEntityType
    name: IEntityType
    nameWithType: IEntityType
    fullName: Microsoft.EntityFrameworkCore.Metadata.IEntityType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IEntityType
    name: IEntityType
    nameWithType: IEntityType
    fullName: Microsoft.EntityFrameworkCore.Metadata.IEntityType
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.IEntityType
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IEntityType
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IEntityType
  nameWithType: IEntityType
  fullName: Microsoft.EntityFrameworkCore.Metadata.IEntityType
- uid: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IProperty}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IProperty}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IProperty>
  nameWithType: IEnumerable<IProperty>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Metadata.IProperty>
  nameWithType.vb: IEnumerable(Of IProperty)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Metadata.IProperty)
  name.vb: IEnumerable(Of IProperty)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
    name: IProperty
    nameWithType: IProperty
    fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
    name: IProperty
    nameWithType: IProperty
    fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IProperty
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IProperty
  nameWithType: IProperty
  fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
- uid: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IKey}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IKey}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IKey>
  nameWithType: IEnumerable<IKey>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Metadata.IKey>
  nameWithType.vb: IEnumerable(Of IKey)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Metadata.IKey)
  name.vb: IEnumerable(Of IKey)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.IKey
    name: IKey
    nameWithType: IKey
    fullName: Microsoft.EntityFrameworkCore.Metadata.IKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IKey
    name: IKey
    nameWithType: IKey
    fullName: Microsoft.EntityFrameworkCore.Metadata.IKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.IKey
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IKey
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IKey
  nameWithType: IKey
  fullName: Microsoft.EntityFrameworkCore.Metadata.IKey
- uid: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IForeignKey}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IForeignKey}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IForeignKey>
  nameWithType: IEnumerable<IForeignKey>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Metadata.IForeignKey>
  nameWithType.vb: IEnumerable(Of IForeignKey)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  name.vb: IEnumerable(Of IForeignKey)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    name: IForeignKey
    nameWithType: IForeignKey
    fullName: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    name: IForeignKey
    nameWithType: IForeignKey
    fullName: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IForeignKey
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IForeignKey
  nameWithType: IForeignKey
  fullName: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
- uid: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IIndex}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IIndex}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IIndex>
  nameWithType: IEnumerable<IIndex>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Metadata.IIndex>
  nameWithType.vb: IEnumerable(Of IIndex)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Metadata.IIndex)
  name.vb: IEnumerable(Of IIndex)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.IIndex
    name: IIndex
    nameWithType: IIndex
    fullName: Microsoft.EntityFrameworkCore.Metadata.IIndex
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IIndex
    name: IIndex
    nameWithType: IIndex
    fullName: Microsoft.EntityFrameworkCore.Metadata.IIndex
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.IIndex
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IIndex
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IIndex
  nameWithType: IIndex
  fullName: Microsoft.EntityFrameworkCore.Metadata.IIndex
- uid: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.ISequence}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.ISequence}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ISequence>
  nameWithType: IEnumerable<ISequence>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Metadata.ISequence>
  nameWithType.vb: IEnumerable(Of ISequence)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Metadata.ISequence)
  name.vb: IEnumerable(Of ISequence)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.ISequence
    name: ISequence
    nameWithType: ISequence
    fullName: Microsoft.EntityFrameworkCore.Metadata.ISequence
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.ISequence
    name: ISequence
    nameWithType: ISequence
    fullName: Microsoft.EntityFrameworkCore.Metadata.ISequence
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.ISequence
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.ISequence
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: ISequence
  nameWithType: ISequence
  fullName: Microsoft.EntityFrameworkCore.Metadata.ISequence
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{{T},{T},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation}}
  commentId: T:System.Func{``0,``0,System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation}}
  parent: System
  definition: System.Func`3
  name: Func<T, T, IEnumerable<MigrationOperation>>
  nameWithType: Func<T, T, IEnumerable<MigrationOperation>>
  fullName: System.Func<T, T, System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation>>
  nameWithType.vb: Func(Of T, T, IEnumerable(Of MigrationOperation))
  fullname.vb: System.Func(Of T, T, System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation))
  name.vb: Func(Of T, T, IEnumerable(Of MigrationOperation))
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation
    name: MigrationOperation
    nameWithType: MigrationOperation
    fullName: Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation
    name: MigrationOperation
    nameWithType: MigrationOperation
    fullName: Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{{T},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation}}
  commentId: T:System.Func{``0,System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation}}
  parent: System
  definition: System.Func`2
  name: Func<T, IEnumerable<MigrationOperation>>
  nameWithType: Func<T, IEnumerable<MigrationOperation>>
  fullName: System.Func<T, System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation>>
  nameWithType.vb: Func(Of T, IEnumerable(Of MigrationOperation))
  fullname.vb: System.Func(Of T, System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation))
  name.vb: Func(Of T, IEnumerable(Of MigrationOperation))
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation
    name: MigrationOperation
    nameWithType: MigrationOperation
    fullName: Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation
    name: MigrationOperation
    nameWithType: MigrationOperation
    fullName: Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{{T},{T},System.Boolean}[]
  name: Func<T, T, Boolean>[]
  nameWithType: Func<T, T, Boolean>[]
  fullName: System.Func<T, T, System.Boolean>[]
  nameWithType.vb: Func(Of T, T, Boolean)()
  fullname.vb: System.Func(Of T, T, System.Boolean)()
  name.vb: Func(Of T, T, Boolean)()
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullname.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullname.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String[]
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullname.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IAnnotation>
  nameWithType: IEnumerable<IAnnotation>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation>
  nameWithType.vb: IEnumerable(Of IAnnotation)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation)
  name.vb: IEnumerable(Of IAnnotation)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation
    name: IAnnotation
    nameWithType: IAnnotation
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation
    name: IAnnotation
    nameWithType: IAnnotation
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
