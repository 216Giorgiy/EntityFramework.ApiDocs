### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.SqliteRelationalConnection
  commentId: T:Microsoft.EntityFrameworkCore.Storage.Internal.SqliteRelationalConnection
  id: SqliteRelationalConnection
  parent: Microsoft.EntityFrameworkCore.Storage.Internal
  children:
  - Microsoft.EntityFrameworkCore.Storage.Internal.SqliteRelationalConnection.#ctor(Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder,Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions,Microsoft.Extensions.Logging.ILogger{Microsoft.EntityFrameworkCore.Storage.Internal.SqliteRelationalConnection})
  - Microsoft.EntityFrameworkCore.Storage.Internal.SqliteRelationalConnection.Close
  - Microsoft.EntityFrameworkCore.Storage.Internal.SqliteRelationalConnection.CreateDbConnection
  - Microsoft.EntityFrameworkCore.Storage.Internal.SqliteRelationalConnection.CreateReadOnlyConnection
  - Microsoft.EntityFrameworkCore.Storage.Internal.SqliteRelationalConnection.IsMultipleActiveResultSetsEnabled
  - Microsoft.EntityFrameworkCore.Storage.Internal.SqliteRelationalConnection.Open
  - Microsoft.EntityFrameworkCore.Storage.Internal.SqliteRelationalConnection.OpenAsync(System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: SqliteRelationalConnection
  nameWithType: SqliteRelationalConnection
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.SqliteRelationalConnection
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Sqlite/Storage/Internal/SqliteRelationalConnection.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: SqliteRelationalConnection
    path: src/Microsoft.EntityFrameworkCore.Sqlite/Storage/Internal/SqliteRelationalConnection.cs
    startLine: 20
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public class SqliteRelationalConnection : RelationalConnection, IRelationalConnection, IRelationalTransactionManager, IDbContextTransactionManager, IDisposable'
    content.vb: >-
      Public Class SqliteRelationalConnection
          Inherits RelationalConnection
          Implements IRelationalConnection, IRelationalTransactionManager, IDbContextTransactionManager, IDisposable
  inheritance:
  - System.Object
  - Microsoft.EntityFrameworkCore.Storage.RelationalConnection
  implements:
  - Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
  - Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager
  - Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager
  - System.IDisposable
  inheritedMembers:
  - Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Logger
  - Microsoft.EntityFrameworkCore.Storage.RelationalConnection.ConnectionString
  - Microsoft.EntityFrameworkCore.Storage.RelationalConnection.DbConnection
  - Microsoft.EntityFrameworkCore.Storage.RelationalConnection.CurrentTransaction
  - Microsoft.EntityFrameworkCore.Storage.RelationalConnection.CommandTimeout
  - Microsoft.EntityFrameworkCore.Storage.RelationalConnection.BeginTransaction
  - Microsoft.EntityFrameworkCore.Storage.RelationalConnection.BeginTransactionAsync(System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.Storage.RelationalConnection.BeginTransaction(System.Data.IsolationLevel)
  - Microsoft.EntityFrameworkCore.Storage.RelationalConnection.BeginTransactionAsync(System.Data.IsolationLevel,System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.Storage.RelationalConnection.UseTransaction(System.Data.Common.DbTransaction)
  - Microsoft.EntityFrameworkCore.Storage.RelationalConnection.CommitTransaction
  - Microsoft.EntityFrameworkCore.Storage.RelationalConnection.RollbackTransaction
  - Microsoft.EntityFrameworkCore.Storage.RelationalConnection.ActiveCursor
  - Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Dispose
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.SqliteRelationalConnection.#ctor(Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder,Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions,Microsoft.Extensions.Logging.ILogger{Microsoft.EntityFrameworkCore.Storage.Internal.SqliteRelationalConnection})
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.SqliteRelationalConnection.#ctor(Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder,Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions,Microsoft.Extensions.Logging.ILogger{Microsoft.EntityFrameworkCore.Storage.Internal.SqliteRelationalConnection})
  id: '#ctor(Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder,Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions,Microsoft.Extensions.Logging.ILogger{Microsoft.EntityFrameworkCore.Storage.Internal.SqliteRelationalConnection})'
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.SqliteRelationalConnection
  langs:
  - csharp
  - vb
  name: SqliteRelationalConnection(IRawSqlCommandBuilder, IDbContextOptions, ILogger<SqliteRelationalConnection>)
  nameWithType: SqliteRelationalConnection.SqliteRelationalConnection(IRawSqlCommandBuilder, IDbContextOptions, ILogger<SqliteRelationalConnection>)
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.SqliteRelationalConnection.SqliteRelationalConnection(Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder, Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions, Microsoft.Extensions.Logging.ILogger<Microsoft.EntityFrameworkCore.Storage.Internal.SqliteRelationalConnection>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Sqlite/Storage/Internal/SqliteRelationalConnection.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Sqlite/Storage/Internal/SqliteRelationalConnection.cs
    startLine: 30
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public SqliteRelationalConnection(IRawSqlCommandBuilder rawSqlCommandBuilder, IDbContextOptions options, ILogger<SqliteRelationalConnection> logger)
    content.vb: Public Sub New(rawSqlCommandBuilder As IRawSqlCommandBuilder, options As IDbContextOptions, logger As ILogger(Of SqliteRelationalConnection))
    parameters:
    - id: rawSqlCommandBuilder
      type: Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder
    - id: options
      type: Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger{Microsoft.EntityFrameworkCore.Storage.Internal.SqliteRelationalConnection}
  nameWithType.vb: SqliteRelationalConnection.SqliteRelationalConnection(IRawSqlCommandBuilder, IDbContextOptions, ILogger(Of SqliteRelationalConnection))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Storage.Internal.SqliteRelationalConnection.SqliteRelationalConnection(Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder, Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions, Microsoft.Extensions.Logging.ILogger(Of Microsoft.EntityFrameworkCore.Storage.Internal.SqliteRelationalConnection))
  name.vb: SqliteRelationalConnection(IRawSqlCommandBuilder, IDbContextOptions, ILogger(Of SqliteRelationalConnection))
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.SqliteRelationalConnection.CreateDbConnection
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.SqliteRelationalConnection.CreateDbConnection
  id: CreateDbConnection
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.SqliteRelationalConnection
  langs:
  - csharp
  - vb
  name: CreateDbConnection()
  nameWithType: SqliteRelationalConnection.CreateDbConnection()
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.SqliteRelationalConnection.CreateDbConnection()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Sqlite/Storage/Internal/SqliteRelationalConnection.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateDbConnection
    path: src/Microsoft.EntityFrameworkCore.Sqlite/Storage/Internal/SqliteRelationalConnection.cs
    startLine: 52
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected override DbConnection CreateDbConnection()
    content.vb: Protected Overrides Function CreateDbConnection As DbConnection
    return:
      type: System.Data.Common.DbConnection
  overridden: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.CreateDbConnection
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.SqliteRelationalConnection.IsMultipleActiveResultSetsEnabled
  commentId: P:Microsoft.EntityFrameworkCore.Storage.Internal.SqliteRelationalConnection.IsMultipleActiveResultSetsEnabled
  id: IsMultipleActiveResultSetsEnabled
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.SqliteRelationalConnection
  langs:
  - csharp
  - vb
  name: IsMultipleActiveResultSetsEnabled
  nameWithType: SqliteRelationalConnection.IsMultipleActiveResultSetsEnabled
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.SqliteRelationalConnection.IsMultipleActiveResultSetsEnabled
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Sqlite/Storage/Internal/SqliteRelationalConnection.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: IsMultipleActiveResultSetsEnabled
    path: src/Microsoft.EntityFrameworkCore.Sqlite/Storage/Internal/SqliteRelationalConnection.cs
    startLine: 58
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public override bool IsMultipleActiveResultSetsEnabled { get; }
    content.vb: Public Overrides ReadOnly Property IsMultipleActiveResultSetsEnabled As Boolean
    parameters: []
    return:
      type: System.Boolean
  overridden: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.IsMultipleActiveResultSetsEnabled
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.SqliteRelationalConnection.Open
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.SqliteRelationalConnection.Open
  id: Open
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.SqliteRelationalConnection
  langs:
  - csharp
  - vb
  name: Open()
  nameWithType: SqliteRelationalConnection.Open()
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.SqliteRelationalConnection.Open()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Sqlite/Storage/Internal/SqliteRelationalConnection.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Open
    path: src/Microsoft.EntityFrameworkCore.Sqlite/Storage/Internal/SqliteRelationalConnection.cs
    startLine: 64
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public override void Open()
    content.vb: Public Overrides Sub Open
  overridden: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Open
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.SqliteRelationalConnection.OpenAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.SqliteRelationalConnection.OpenAsync(System.Threading.CancellationToken)
  id: OpenAsync(System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.SqliteRelationalConnection
  langs:
  - csharp
  - vb
  name: OpenAsync(CancellationToken)
  nameWithType: SqliteRelationalConnection.OpenAsync(CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.SqliteRelationalConnection.OpenAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Sqlite/Storage/Internal/SqliteRelationalConnection.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: OpenAsync
    path: src/Microsoft.EntityFrameworkCore.Sqlite/Storage/Internal/SqliteRelationalConnection.cs
    startLine: 80
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public override Task OpenAsync(CancellationToken cancellationToken = null)
    content.vb: Public Overrides Function OpenAsync(cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
  overridden: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.SqliteRelationalConnection.Close
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.SqliteRelationalConnection.Close
  id: Close
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.SqliteRelationalConnection
  langs:
  - csharp
  - vb
  name: Close()
  nameWithType: SqliteRelationalConnection.Close()
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.SqliteRelationalConnection.Close()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Sqlite/Storage/Internal/SqliteRelationalConnection.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Close
    path: src/Microsoft.EntityFrameworkCore.Sqlite/Storage/Internal/SqliteRelationalConnection.cs
    startLine: 96
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public override void Close()
    content.vb: Public Overrides Sub Close
  overridden: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Close
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.SqliteRelationalConnection.CreateReadOnlyConnection
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.SqliteRelationalConnection.CreateReadOnlyConnection
  id: CreateReadOnlyConnection
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.SqliteRelationalConnection
  langs:
  - csharp
  - vb
  name: CreateReadOnlyConnection()
  nameWithType: SqliteRelationalConnection.CreateReadOnlyConnection()
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.SqliteRelationalConnection.CreateReadOnlyConnection()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Sqlite/Storage/Internal/SqliteRelationalConnection.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateReadOnlyConnection
    path: src/Microsoft.EntityFrameworkCore.Sqlite/Storage/Internal/SqliteRelationalConnection.cs
    startLine: 119
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual SqliteRelationalConnection CreateReadOnlyConnection()
    content.vb: Public Overridable Function CreateReadOnlyConnection As SqliteRelationalConnection
    return:
      type: Microsoft.EntityFrameworkCore.Storage.Internal.SqliteRelationalConnection
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.EntityFrameworkCore.Storage.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Storage.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Storage.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Storage.Internal
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalConnection
  commentId: T:Microsoft.EntityFrameworkCore.Storage.RelationalConnection
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: RelationalConnection
  nameWithType: RelationalConnection
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalConnection
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IRelationalConnection
  nameWithType: IRelationalConnection
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IRelationalTransactionManager
  nameWithType: IRelationalTransactionManager
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IDbContextTransactionManager
  nameWithType: IDbContextTransactionManager
  fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Logger
  commentId: P:Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Logger
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalConnection
  isExternal: false
  name: Logger
  nameWithType: RelationalConnection.Logger
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Logger
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.ConnectionString
  commentId: P:Microsoft.EntityFrameworkCore.Storage.RelationalConnection.ConnectionString
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalConnection
  isExternal: false
  name: ConnectionString
  nameWithType: RelationalConnection.ConnectionString
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.ConnectionString
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.DbConnection
  commentId: P:Microsoft.EntityFrameworkCore.Storage.RelationalConnection.DbConnection
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalConnection
  isExternal: false
  name: DbConnection
  nameWithType: RelationalConnection.DbConnection
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.DbConnection
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.CurrentTransaction
  commentId: P:Microsoft.EntityFrameworkCore.Storage.RelationalConnection.CurrentTransaction
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalConnection
  isExternal: false
  name: CurrentTransaction
  nameWithType: RelationalConnection.CurrentTransaction
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.CurrentTransaction
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.CommandTimeout
  commentId: P:Microsoft.EntityFrameworkCore.Storage.RelationalConnection.CommandTimeout
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalConnection
  isExternal: false
  name: CommandTimeout
  nameWithType: RelationalConnection.CommandTimeout
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.CommandTimeout
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.BeginTransaction
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalConnection.BeginTransaction
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalConnection
  isExternal: false
  name: BeginTransaction()
  nameWithType: RelationalConnection.BeginTransaction()
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.BeginTransaction()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.BeginTransaction
    name: BeginTransaction
    nameWithType: RelationalConnection.BeginTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.BeginTransaction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.BeginTransaction
    name: BeginTransaction
    nameWithType: RelationalConnection.BeginTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.BeginTransaction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.BeginTransactionAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalConnection.BeginTransactionAsync(System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalConnection
  isExternal: true
  name: BeginTransactionAsync(CancellationToken)
  nameWithType: RelationalConnection.BeginTransactionAsync(CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.BeginTransactionAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.BeginTransactionAsync(System.Threading.CancellationToken)
    name: BeginTransactionAsync
    nameWithType: RelationalConnection.BeginTransactionAsync
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.BeginTransactionAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.BeginTransactionAsync(System.Threading.CancellationToken)
    name: BeginTransactionAsync
    nameWithType: RelationalConnection.BeginTransactionAsync
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.BeginTransactionAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.BeginTransaction(System.Data.IsolationLevel)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalConnection.BeginTransaction(System.Data.IsolationLevel)
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalConnection
  isExternal: true
  name: BeginTransaction(IsolationLevel)
  nameWithType: RelationalConnection.BeginTransaction(IsolationLevel)
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.BeginTransaction(System.Data.IsolationLevel)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.BeginTransaction(System.Data.IsolationLevel)
    name: BeginTransaction
    nameWithType: RelationalConnection.BeginTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.BeginTransaction
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.IsolationLevel
    name: IsolationLevel
    nameWithType: IsolationLevel
    fullName: System.Data.IsolationLevel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.BeginTransaction(System.Data.IsolationLevel)
    name: BeginTransaction
    nameWithType: RelationalConnection.BeginTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.BeginTransaction
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.IsolationLevel
    name: IsolationLevel
    nameWithType: IsolationLevel
    fullName: System.Data.IsolationLevel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.BeginTransactionAsync(System.Data.IsolationLevel,System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalConnection.BeginTransactionAsync(System.Data.IsolationLevel,System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalConnection
  isExternal: true
  name: BeginTransactionAsync(IsolationLevel, CancellationToken)
  nameWithType: RelationalConnection.BeginTransactionAsync(IsolationLevel, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.BeginTransactionAsync(System.Data.IsolationLevel, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.BeginTransactionAsync(System.Data.IsolationLevel,System.Threading.CancellationToken)
    name: BeginTransactionAsync
    nameWithType: RelationalConnection.BeginTransactionAsync
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.BeginTransactionAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.IsolationLevel
    name: IsolationLevel
    nameWithType: IsolationLevel
    fullName: System.Data.IsolationLevel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.BeginTransactionAsync(System.Data.IsolationLevel,System.Threading.CancellationToken)
    name: BeginTransactionAsync
    nameWithType: RelationalConnection.BeginTransactionAsync
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.BeginTransactionAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.IsolationLevel
    name: IsolationLevel
    nameWithType: IsolationLevel
    fullName: System.Data.IsolationLevel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.UseTransaction(System.Data.Common.DbTransaction)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalConnection.UseTransaction(System.Data.Common.DbTransaction)
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalConnection
  isExternal: true
  name: UseTransaction(DbTransaction)
  nameWithType: RelationalConnection.UseTransaction(DbTransaction)
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.UseTransaction(System.Data.Common.DbTransaction)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.UseTransaction(System.Data.Common.DbTransaction)
    name: UseTransaction
    nameWithType: RelationalConnection.UseTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.UseTransaction
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.Common.DbTransaction
    name: DbTransaction
    nameWithType: DbTransaction
    fullName: System.Data.Common.DbTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.UseTransaction(System.Data.Common.DbTransaction)
    name: UseTransaction
    nameWithType: RelationalConnection.UseTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.UseTransaction
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.Common.DbTransaction
    name: DbTransaction
    nameWithType: DbTransaction
    fullName: System.Data.Common.DbTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.CommitTransaction
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalConnection.CommitTransaction
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalConnection
  isExternal: false
  name: CommitTransaction()
  nameWithType: RelationalConnection.CommitTransaction()
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.CommitTransaction()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.CommitTransaction
    name: CommitTransaction
    nameWithType: RelationalConnection.CommitTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.CommitTransaction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.CommitTransaction
    name: CommitTransaction
    nameWithType: RelationalConnection.CommitTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.CommitTransaction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.RollbackTransaction
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalConnection.RollbackTransaction
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalConnection
  isExternal: false
  name: RollbackTransaction()
  nameWithType: RelationalConnection.RollbackTransaction()
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.RollbackTransaction()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.RollbackTransaction
    name: RollbackTransaction
    nameWithType: RelationalConnection.RollbackTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.RollbackTransaction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.RollbackTransaction
    name: RollbackTransaction
    nameWithType: RelationalConnection.RollbackTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.RollbackTransaction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.ActiveCursor
  commentId: P:Microsoft.EntityFrameworkCore.Storage.RelationalConnection.ActiveCursor
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalConnection
  isExternal: false
  name: ActiveCursor
  nameWithType: RelationalConnection.ActiveCursor
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.ActiveCursor
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Dispose
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Dispose
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalConnection
  isExternal: false
  name: Dispose()
  nameWithType: RelationalConnection.Dispose()
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Dispose()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Dispose
    name: Dispose
    nameWithType: RelationalConnection.Dispose
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Dispose
    name: Dispose
    nameWithType: RelationalConnection.Dispose
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Storage
  commentId: N:Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Storage
  nameWithType: Microsoft.EntityFrameworkCore.Storage
  fullName: Microsoft.EntityFrameworkCore.Storage
- uid: Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IRawSqlCommandBuilder
  nameWithType: IRawSqlCommandBuilder
  fullName: Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions
  parent: Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: IDbContextOptions
  nameWithType: IDbContextOptions
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions
- uid: Microsoft.Extensions.Logging.ILogger{Microsoft.EntityFrameworkCore.Storage.Internal.SqliteRelationalConnection}
  commentId: T:Microsoft.Extensions.Logging.ILogger{Microsoft.EntityFrameworkCore.Storage.Internal.SqliteRelationalConnection}
  parent: Microsoft.Extensions.Logging
  definition: Microsoft.Extensions.Logging.ILogger`1
  name: ILogger<SqliteRelationalConnection>
  nameWithType: ILogger<SqliteRelationalConnection>
  fullName: Microsoft.Extensions.Logging.ILogger<Microsoft.EntityFrameworkCore.Storage.Internal.SqliteRelationalConnection>
  nameWithType.vb: ILogger(Of SqliteRelationalConnection)
  fullname.vb: Microsoft.Extensions.Logging.ILogger(Of Microsoft.EntityFrameworkCore.Storage.Internal.SqliteRelationalConnection)
  name.vb: ILogger(Of SqliteRelationalConnection)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Storage.Internal.SqliteRelationalConnection
    name: SqliteRelationalConnection
    nameWithType: SqliteRelationalConnection
    fullName: Microsoft.EntityFrameworkCore.Storage.Internal.SqliteRelationalConnection
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Storage.Internal.SqliteRelationalConnection
    name: SqliteRelationalConnection
    nameWithType: SqliteRelationalConnection
    fullName: Microsoft.EntityFrameworkCore.Storage.Internal.SqliteRelationalConnection
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure
  commentId: N:Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Infrastructure
  nameWithType: Microsoft.EntityFrameworkCore.Infrastructure
  fullName: Microsoft.EntityFrameworkCore.Infrastructure
- uid: Microsoft.Extensions.Logging.ILogger`1
  commentId: T:Microsoft.Extensions.Logging.ILogger`1
  isExternal: true
  name: ILogger<TCategoryName>
  nameWithType: ILogger<TCategoryName>
  fullName: Microsoft.Extensions.Logging.ILogger<TCategoryName>
  nameWithType.vb: ILogger(Of TCategoryName)
  fullname.vb: Microsoft.Extensions.Logging.ILogger(Of TCategoryName)
  name.vb: ILogger(Of TCategoryName)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TCategoryName
    nameWithType: TCategoryName
    fullName: TCategoryName
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCategoryName
    nameWithType: TCategoryName
    fullName: TCategoryName
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: false
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.CreateDbConnection
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalConnection.CreateDbConnection
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalConnection
  isExternal: false
  name: CreateDbConnection()
  nameWithType: RelationalConnection.CreateDbConnection()
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.CreateDbConnection()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.CreateDbConnection
    name: CreateDbConnection
    nameWithType: RelationalConnection.CreateDbConnection
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.CreateDbConnection
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.CreateDbConnection
    name: CreateDbConnection
    nameWithType: RelationalConnection.CreateDbConnection
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.CreateDbConnection
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.Common.DbConnection
  commentId: T:System.Data.Common.DbConnection
  parent: System.Data.Common
  isExternal: true
  name: DbConnection
  nameWithType: DbConnection
  fullName: System.Data.Common.DbConnection
- uid: System.Data.Common
  commentId: N:System.Data.Common
  isExternal: false
  name: System.Data.Common
  nameWithType: System.Data.Common
  fullName: System.Data.Common
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.IsMultipleActiveResultSetsEnabled
  commentId: P:Microsoft.EntityFrameworkCore.Storage.RelationalConnection.IsMultipleActiveResultSetsEnabled
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalConnection
  isExternal: false
  name: IsMultipleActiveResultSetsEnabled
  nameWithType: RelationalConnection.IsMultipleActiveResultSetsEnabled
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.IsMultipleActiveResultSetsEnabled
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Open
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Open
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalConnection
  isExternal: false
  name: Open()
  nameWithType: RelationalConnection.Open()
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Open()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Open
    name: Open
    nameWithType: RelationalConnection.Open
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Open
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Open
    name: Open
    nameWithType: RelationalConnection.Open
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Open
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalConnection
  isExternal: true
  name: OpenAsync(CancellationToken)
  nameWithType: RelationalConnection.OpenAsync(CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(System.Threading.CancellationToken)
    name: OpenAsync
    nameWithType: RelationalConnection.OpenAsync
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(System.Threading.CancellationToken)
    name: OpenAsync
    nameWithType: RelationalConnection.OpenAsync
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Close
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Close
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalConnection
  isExternal: false
  name: Close()
  nameWithType: RelationalConnection.Close()
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Close()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Close
    name: Close
    nameWithType: RelationalConnection.Close
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Close
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Close
    name: Close
    nameWithType: RelationalConnection.Close
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Close
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.SqliteRelationalConnection
  commentId: T:Microsoft.EntityFrameworkCore.Storage.Internal.SqliteRelationalConnection
  parent: Microsoft.EntityFrameworkCore.Storage.Internal
  isExternal: false
  name: SqliteRelationalConnection
  nameWithType: SqliteRelationalConnection
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.SqliteRelationalConnection
