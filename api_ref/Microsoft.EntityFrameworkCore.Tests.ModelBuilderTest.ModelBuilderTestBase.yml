### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase
  commentId: T:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase
  id: ModelBuilderTest.ModelBuilderTestBase
  parent: Microsoft.EntityFrameworkCore.Tests
  children:
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IForeignKey},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IForeignKey},Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.ForeignKeyStrictComparer)
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IIndex},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IIndex},Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.IndexComparer)
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IKey},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IKey},Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.KeyComparer)
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.INavigation},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.INavigation},Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.NavigationComparer)
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IProperty},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IProperty},Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.PropertyComparer)
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.StringComparer)
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.CreateModelBuilder
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.CreateTestModelBuilder(Microsoft.EntityFrameworkCore.ModelBuilder)
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.HobNobBuilder
  langs:
  - csharp
  - vb
  name: ModelBuilderTest.ModelBuilderTestBase
  nameWithType: ModelBuilderTest.ModelBuilderTestBase
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase
  type: Class
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ModelBuilderTestBase
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
    startLine: 22
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: public abstract class ModelBuilderTestBase
    content.vb: Public MustInherit Class ModelBuilderTestBase
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.StringComparer)
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.StringComparer)
  id: AssertEqual(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.StringComparer)
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase
  langs:
  - csharp
  - vb
  name: AssertEqual(IEnumerable<String>, IEnumerable<String>, StringComparer)
  nameWithType: ModelBuilderTest.ModelBuilderTestBase.AssertEqual(IEnumerable<String>, IEnumerable<String>, StringComparer)
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual(System.Collections.Generic.IEnumerable<System.String>, System.Collections.Generic.IEnumerable<System.String>, System.StringComparer)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AssertEqual
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
    startLine: 24
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: protected void AssertEqual(IEnumerable<string> expectedNames, IEnumerable<string> actualNames, StringComparer stringComparer = null)
    content.vb: Protected Sub AssertEqual(expectedNames As IEnumerable(Of String), actualNames As IEnumerable(Of String), stringComparer As StringComparer = Nothing)
    parameters:
    - id: expectedNames
      type: System.Collections.Generic.IEnumerable{System.String}
    - id: actualNames
      type: System.Collections.Generic.IEnumerable{System.String}
    - id: stringComparer
      type: System.StringComparer
  nameWithType.vb: ModelBuilderTest.ModelBuilderTestBase.AssertEqual(IEnumerable(Of String), IEnumerable(Of String), StringComparer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual(System.Collections.Generic.IEnumerable(Of System.String), System.Collections.Generic.IEnumerable(Of System.String), System.StringComparer)
  name.vb: AssertEqual(IEnumerable(Of String), IEnumerable(Of String), StringComparer)
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IProperty},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IProperty},Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.PropertyComparer)
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IProperty},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IProperty},Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.PropertyComparer)
  id: AssertEqual(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IProperty},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IProperty},Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.PropertyComparer)
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase
  langs:
  - csharp
  - vb
  name: AssertEqual(IEnumerable<IProperty>, IEnumerable<IProperty>, PropertyComparer)
  nameWithType: ModelBuilderTest.ModelBuilderTestBase.AssertEqual(IEnumerable<IProperty>, IEnumerable<IProperty>, PropertyComparer)
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual(System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Metadata.IProperty>, System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Metadata.IProperty>, Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.PropertyComparer)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AssertEqual
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
    startLine: 36
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: protected void AssertEqual(IEnumerable<IProperty> expectedProperties, IEnumerable<IProperty> actualProperties, PropertyComparer propertyComparer = null)
    content.vb: Protected Sub AssertEqual(expectedProperties As IEnumerable(Of IProperty), actualProperties As IEnumerable(Of IProperty), propertyComparer As PropertyComparer = Nothing)
    parameters:
    - id: expectedProperties
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IProperty}
    - id: actualProperties
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IProperty}
    - id: propertyComparer
      type: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.PropertyComparer
  nameWithType.vb: ModelBuilderTest.ModelBuilderTestBase.AssertEqual(IEnumerable(Of IProperty), IEnumerable(Of IProperty), PropertyComparer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual(System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Metadata.IProperty), System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Metadata.IProperty), Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.PropertyComparer)
  name.vb: AssertEqual(IEnumerable(Of IProperty), IEnumerable(Of IProperty), PropertyComparer)
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.INavigation},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.INavigation},Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.NavigationComparer)
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.INavigation},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.INavigation},Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.NavigationComparer)
  id: AssertEqual(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.INavigation},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.INavigation},Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.NavigationComparer)
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase
  langs:
  - csharp
  - vb
  name: AssertEqual(IEnumerable<INavigation>, IEnumerable<INavigation>, NavigationComparer)
  nameWithType: ModelBuilderTest.ModelBuilderTestBase.AssertEqual(IEnumerable<INavigation>, IEnumerable<INavigation>, NavigationComparer)
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual(System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Metadata.INavigation>, System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Metadata.INavigation>, Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.NavigationComparer)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AssertEqual
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
    startLine: 48
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: protected void AssertEqual(IEnumerable<INavigation> expectedNavigations, IEnumerable<INavigation> actualNavigations, NavigationComparer navigationComparer = null)
    content.vb: Protected Sub AssertEqual(expectedNavigations As IEnumerable(Of INavigation), actualNavigations As IEnumerable(Of INavigation), navigationComparer As NavigationComparer = Nothing)
    parameters:
    - id: expectedNavigations
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.INavigation}
    - id: actualNavigations
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.INavigation}
    - id: navigationComparer
      type: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.NavigationComparer
  nameWithType.vb: ModelBuilderTest.ModelBuilderTestBase.AssertEqual(IEnumerable(Of INavigation), IEnumerable(Of INavigation), NavigationComparer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual(System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Metadata.INavigation), System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Metadata.INavigation), Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.NavigationComparer)
  name.vb: AssertEqual(IEnumerable(Of INavigation), IEnumerable(Of INavigation), NavigationComparer)
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IKey},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IKey},Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.KeyComparer)
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IKey},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IKey},Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.KeyComparer)
  id: AssertEqual(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IKey},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IKey},Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.KeyComparer)
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase
  langs:
  - csharp
  - vb
  name: AssertEqual(IEnumerable<IKey>, IEnumerable<IKey>, KeyComparer)
  nameWithType: ModelBuilderTest.ModelBuilderTestBase.AssertEqual(IEnumerable<IKey>, IEnumerable<IKey>, KeyComparer)
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual(System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Metadata.IKey>, System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Metadata.IKey>, Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.KeyComparer)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AssertEqual
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
    startLine: 60
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: protected void AssertEqual(IEnumerable<IKey> expectedKeys, IEnumerable<IKey> actualKeys, KeyComparer keyComparer = null)
    content.vb: Protected Sub AssertEqual(expectedKeys As IEnumerable(Of IKey), actualKeys As IEnumerable(Of IKey), keyComparer As KeyComparer = Nothing)
    parameters:
    - id: expectedKeys
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IKey}
    - id: actualKeys
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IKey}
    - id: keyComparer
      type: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.KeyComparer
  nameWithType.vb: ModelBuilderTest.ModelBuilderTestBase.AssertEqual(IEnumerable(Of IKey), IEnumerable(Of IKey), KeyComparer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual(System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Metadata.IKey), System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Metadata.IKey), Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.KeyComparer)
  name.vb: AssertEqual(IEnumerable(Of IKey), IEnumerable(Of IKey), KeyComparer)
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IForeignKey},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IForeignKey},Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.ForeignKeyStrictComparer)
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IForeignKey},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IForeignKey},Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.ForeignKeyStrictComparer)
  id: AssertEqual(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IForeignKey},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IForeignKey},Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.ForeignKeyStrictComparer)
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase
  langs:
  - csharp
  - vb
  name: AssertEqual(IEnumerable<IForeignKey>, IEnumerable<IForeignKey>, ForeignKeyStrictComparer)
  nameWithType: ModelBuilderTest.ModelBuilderTestBase.AssertEqual(IEnumerable<IForeignKey>, IEnumerable<IForeignKey>, ForeignKeyStrictComparer)
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual(System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Metadata.IForeignKey>, System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Metadata.IForeignKey>, Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.ForeignKeyStrictComparer)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AssertEqual
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
    startLine: 72
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: protected void AssertEqual(IEnumerable<IForeignKey> expectedForeignKeys, IEnumerable<IForeignKey> actualForeignKeys, ForeignKeyStrictComparer foreignKeyComparer = null)
    content.vb: Protected Sub AssertEqual(expectedForeignKeys As IEnumerable(Of IForeignKey), actualForeignKeys As IEnumerable(Of IForeignKey), foreignKeyComparer As ForeignKeyStrictComparer = Nothing)
    parameters:
    - id: expectedForeignKeys
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IForeignKey}
    - id: actualForeignKeys
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IForeignKey}
    - id: foreignKeyComparer
      type: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.ForeignKeyStrictComparer
  nameWithType.vb: ModelBuilderTest.ModelBuilderTestBase.AssertEqual(IEnumerable(Of IForeignKey), IEnumerable(Of IForeignKey), ForeignKeyStrictComparer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual(System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Metadata.IForeignKey), System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Metadata.IForeignKey), Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.ForeignKeyStrictComparer)
  name.vb: AssertEqual(IEnumerable(Of IForeignKey), IEnumerable(Of IForeignKey), ForeignKeyStrictComparer)
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IIndex},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IIndex},Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.IndexComparer)
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IIndex},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IIndex},Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.IndexComparer)
  id: AssertEqual(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IIndex},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IIndex},Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.IndexComparer)
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase
  langs:
  - csharp
  - vb
  name: AssertEqual(IEnumerable<IIndex>, IEnumerable<IIndex>, IndexComparer)
  nameWithType: ModelBuilderTest.ModelBuilderTestBase.AssertEqual(IEnumerable<IIndex>, IEnumerable<IIndex>, IndexComparer)
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual(System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Metadata.IIndex>, System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Metadata.IIndex>, Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.IndexComparer)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AssertEqual
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
    startLine: 84
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: protected void AssertEqual(IEnumerable<IIndex> expectedIndexes, IEnumerable<IIndex> actualIndexes, IndexComparer indexComparer = null)
    content.vb: Protected Sub AssertEqual(expectedIndexes As IEnumerable(Of IIndex), actualIndexes As IEnumerable(Of IIndex), indexComparer As IndexComparer = Nothing)
    parameters:
    - id: expectedIndexes
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IIndex}
    - id: actualIndexes
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IIndex}
    - id: indexComparer
      type: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.IndexComparer
  nameWithType.vb: ModelBuilderTest.ModelBuilderTestBase.AssertEqual(IEnumerable(Of IIndex), IEnumerable(Of IIndex), IndexComparer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.AssertEqual(System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Metadata.IIndex), System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Metadata.IIndex), Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.IndexComparer)
  name.vb: AssertEqual(IEnumerable(Of IIndex), IEnumerable(Of IIndex), IndexComparer)
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.CreateModelBuilder
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.CreateModelBuilder
  id: CreateModelBuilder
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase
  langs:
  - csharp
  - vb
  name: CreateModelBuilder()
  nameWithType: ModelBuilderTest.ModelBuilderTestBase.CreateModelBuilder()
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.CreateModelBuilder()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateModelBuilder
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
    startLine: 96
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: protected virtual ModelBuilderTest.TestModelBuilder CreateModelBuilder()
    content.vb: Protected Overridable Function CreateModelBuilder As ModelBuilderTest.TestModelBuilder
    return:
      type: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.HobNobBuilder
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.HobNobBuilder
  id: HobNobBuilder
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase
  langs:
  - csharp
  - vb
  name: HobNobBuilder()
  nameWithType: ModelBuilderTest.ModelBuilderTestBase.HobNobBuilder()
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.HobNobBuilder()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: HobNobBuilder
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
    startLine: 99
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: protected ModelBuilderTest.TestModelBuilder HobNobBuilder()
    content.vb: Protected Function HobNobBuilder As ModelBuilderTest.TestModelBuilder
    return:
      type: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.CreateTestModelBuilder(Microsoft.EntityFrameworkCore.ModelBuilder)
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.CreateTestModelBuilder(Microsoft.EntityFrameworkCore.ModelBuilder)
  id: CreateTestModelBuilder(Microsoft.EntityFrameworkCore.ModelBuilder)
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase
  langs:
  - csharp
  - vb
  name: CreateTestModelBuilder(ModelBuilder)
  nameWithType: ModelBuilderTest.ModelBuilderTestBase.CreateTestModelBuilder(ModelBuilder)
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.ModelBuilderTestBase.CreateTestModelBuilder(Microsoft.EntityFrameworkCore.ModelBuilder)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateTestModelBuilder
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
    startLine: 109
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: protected abstract ModelBuilderTest.TestModelBuilder CreateTestModelBuilder(ModelBuilder modelBuilder)
    content.vb: Protected MustOverride Function CreateTestModelBuilder(modelBuilder As ModelBuilder) As ModelBuilderTest.TestModelBuilder
    parameters:
    - id: modelBuilder
      type: Microsoft.EntityFrameworkCore.ModelBuilder
    return:
      type: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
references:
- uid: Microsoft.EntityFrameworkCore.Tests
  commentId: N:Microsoft.EntityFrameworkCore.Tests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Tests
  nameWithType: Microsoft.EntityFrameworkCore.Tests
  fullName: Microsoft.EntityFrameworkCore.Tests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.StringComparer
  commentId: T:System.StringComparer
  parent: System
  isExternal: true
  name: StringComparer
  nameWithType: StringComparer
  fullName: System.StringComparer
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IProperty}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IProperty}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IProperty>
  nameWithType: IEnumerable<IProperty>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Metadata.IProperty>
  nameWithType.vb: IEnumerable(Of IProperty)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Metadata.IProperty)
  name.vb: IEnumerable(Of IProperty)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
    name: IProperty
    nameWithType: IProperty
    fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
    name: IProperty
    nameWithType: IProperty
    fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.PropertyComparer
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.PropertyComparer
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities
  isExternal: false
  name: PropertyComparer
  nameWithType: PropertyComparer
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.PropertyComparer
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities
  commentId: N:Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities
  nameWithType: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities
- uid: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.INavigation}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.INavigation}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<INavigation>
  nameWithType: IEnumerable<INavigation>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Metadata.INavigation>
  nameWithType.vb: IEnumerable(Of INavigation)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Metadata.INavigation)
  name.vb: IEnumerable(Of INavigation)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.INavigation
    name: INavigation
    nameWithType: INavigation
    fullName: Microsoft.EntityFrameworkCore.Metadata.INavigation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.INavigation
    name: INavigation
    nameWithType: INavigation
    fullName: Microsoft.EntityFrameworkCore.Metadata.INavigation
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.NavigationComparer
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.NavigationComparer
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities
  isExternal: false
  name: NavigationComparer
  nameWithType: NavigationComparer
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.NavigationComparer
- uid: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IKey}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IKey}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IKey>
  nameWithType: IEnumerable<IKey>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Metadata.IKey>
  nameWithType.vb: IEnumerable(Of IKey)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Metadata.IKey)
  name.vb: IEnumerable(Of IKey)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.IKey
    name: IKey
    nameWithType: IKey
    fullName: Microsoft.EntityFrameworkCore.Metadata.IKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IKey
    name: IKey
    nameWithType: IKey
    fullName: Microsoft.EntityFrameworkCore.Metadata.IKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.KeyComparer
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.KeyComparer
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities
  isExternal: false
  name: KeyComparer
  nameWithType: KeyComparer
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.KeyComparer
- uid: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IForeignKey}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IForeignKey}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IForeignKey>
  nameWithType: IEnumerable<IForeignKey>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Metadata.IForeignKey>
  nameWithType.vb: IEnumerable(Of IForeignKey)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  name.vb: IEnumerable(Of IForeignKey)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    name: IForeignKey
    nameWithType: IForeignKey
    fullName: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    name: IForeignKey
    nameWithType: IForeignKey
    fullName: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.ForeignKeyStrictComparer
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.ForeignKeyStrictComparer
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities
  isExternal: false
  name: ForeignKeyStrictComparer
  nameWithType: ForeignKeyStrictComparer
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.ForeignKeyStrictComparer
- uid: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IIndex}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IIndex}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IIndex>
  nameWithType: IEnumerable<IIndex>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Metadata.IIndex>
  nameWithType.vb: IEnumerable(Of IIndex)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Metadata.IIndex)
  name.vb: IEnumerable(Of IIndex)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.IIndex
    name: IIndex
    nameWithType: IIndex
    fullName: Microsoft.EntityFrameworkCore.Metadata.IIndex
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IIndex
    name: IIndex
    nameWithType: IIndex
    fullName: Microsoft.EntityFrameworkCore.Metadata.IIndex
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.IndexComparer
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.IndexComparer
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities
  isExternal: false
  name: IndexComparer
  nameWithType: IndexComparer
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.IndexComparer
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder
  parent: Microsoft.EntityFrameworkCore.Tests
  isExternal: false
  name: ModelBuilderTest.TestModelBuilder
  nameWithType: ModelBuilderTest.TestModelBuilder
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder
- uid: Microsoft.EntityFrameworkCore.ModelBuilder
  commentId: T:Microsoft.EntityFrameworkCore.ModelBuilder
  parent: Microsoft.EntityFrameworkCore
  isExternal: false
  name: ModelBuilder
  nameWithType: ModelBuilder
  fullName: Microsoft.EntityFrameworkCore.ModelBuilder
- uid: Microsoft.EntityFrameworkCore
  commentId: N:Microsoft.EntityFrameworkCore
  isExternal: false
  name: Microsoft.EntityFrameworkCore
  nameWithType: Microsoft.EntityFrameworkCore
  fullName: Microsoft.EntityFrameworkCore
