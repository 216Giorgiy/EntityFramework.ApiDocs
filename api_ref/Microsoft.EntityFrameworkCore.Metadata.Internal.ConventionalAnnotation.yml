### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ConventionalAnnotation
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.ConventionalAnnotation
  id: ConventionalAnnotation
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  children:
  - Microsoft.EntityFrameworkCore.Metadata.Internal.ConventionalAnnotation.#ctor(System.String,System.Object,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.ConventionalAnnotation.GetConfigurationSource
  - Microsoft.EntityFrameworkCore.Metadata.Internal.ConventionalAnnotation.UpdateConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  langs:
  - csharp
  - vb
  name: ConventionalAnnotation
  nameWithType: ConventionalAnnotation
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ConventionalAnnotation
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ConventionalAnnotation.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ConventionalAnnotation
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ConventionalAnnotation.cs
    startLine: 12
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public class ConventionalAnnotation : Annotation, IAnnotation'
    content.vb: >-
      Public Class ConventionalAnnotation
          Inherits Annotation
          Implements IAnnotation
  inheritance:
  - System.Object
  - Microsoft.EntityFrameworkCore.Infrastructure.Annotation
  implements:
  - Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation
  inheritedMembers:
  - Microsoft.EntityFrameworkCore.Infrastructure.Annotation.Name
  - Microsoft.EntityFrameworkCore.Infrastructure.Annotation.Value
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ConventionalAnnotation.#ctor(System.String,System.Object,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.ConventionalAnnotation.#ctor(System.String,System.Object,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  id: '#ctor(System.String,System.Object,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)'
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.ConventionalAnnotation
  langs:
  - csharp
  - vb
  name: ConventionalAnnotation(String, Object, ConfigurationSource)
  nameWithType: ConventionalAnnotation.ConventionalAnnotation(String, Object, ConfigurationSource)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ConventionalAnnotation.ConventionalAnnotation(System.String, System.Object, Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ConventionalAnnotation.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ConventionalAnnotation.cs
    startLine: 20
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public ConventionalAnnotation(string name, object value, ConfigurationSource configurationSource)
    content.vb: Public Sub New(name As String, value As Object, configurationSource As ConfigurationSource)
    parameters:
    - id: name
      type: System.String
    - id: value
      type: System.Object
    - id: configurationSource
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ConventionalAnnotation.GetConfigurationSource
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.ConventionalAnnotation.GetConfigurationSource
  id: GetConfigurationSource
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.ConventionalAnnotation
  langs:
  - csharp
  - vb
  name: GetConfigurationSource()
  nameWithType: ConventionalAnnotation.GetConfigurationSource()
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ConventionalAnnotation.GetConfigurationSource()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ConventionalAnnotation.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetConfigurationSource
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ConventionalAnnotation.cs
    startLine: 30
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual ConfigurationSource GetConfigurationSource()
    content.vb: Public Overridable Function GetConfigurationSource As ConfigurationSource
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ConventionalAnnotation.UpdateConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.ConventionalAnnotation.UpdateConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  id: UpdateConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.ConventionalAnnotation
  langs:
  - csharp
  - vb
  name: UpdateConfigurationSource(ConfigurationSource)
  nameWithType: ConventionalAnnotation.UpdateConfigurationSource(ConfigurationSource)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ConventionalAnnotation.UpdateConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ConventionalAnnotation.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: UpdateConfigurationSource
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ConventionalAnnotation.cs
    startLine: 36
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual ConfigurationSource UpdateConfigurationSource(ConfigurationSource configurationSource)
    content.vb: Public Overridable Function UpdateConfigurationSource(configurationSource As ConfigurationSource) As ConfigurationSource
    parameters:
    - id: configurationSource
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Infrastructure.Annotation
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.Annotation
  parent: Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: Annotation
  nameWithType: Annotation
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.Annotation
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation
  parent: Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: IAnnotation
  nameWithType: IAnnotation
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation
- uid: Microsoft.EntityFrameworkCore.Infrastructure.Annotation.Name
  commentId: P:Microsoft.EntityFrameworkCore.Infrastructure.Annotation.Name
  parent: Microsoft.EntityFrameworkCore.Infrastructure.Annotation
  isExternal: false
  name: Name
  nameWithType: Annotation.Name
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.Annotation.Name
- uid: Microsoft.EntityFrameworkCore.Infrastructure.Annotation.Value
  commentId: P:Microsoft.EntityFrameworkCore.Infrastructure.Annotation.Value
  parent: Microsoft.EntityFrameworkCore.Infrastructure.Annotation
  isExternal: false
  name: Value
  nameWithType: Annotation.Value
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.Annotation.Value
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Infrastructure
  commentId: N:Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Infrastructure
  nameWithType: Microsoft.EntityFrameworkCore.Infrastructure
  fullName: Microsoft.EntityFrameworkCore.Infrastructure
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: ConfigurationSource
  nameWithType: ConfigurationSource
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
