### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestFileLogger
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.TestFileLogger
  id: TestFileLogger
  parent: Microsoft.EntityFrameworkCore.Specification.Tests
  children:
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestFileLogger.#ctor(System.String)
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestFileLogger.BeginScope``1(``0)
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestFileLogger.Factory
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestFileLogger.Instance
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestFileLogger.IsEnabled(System.LogLevel)
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestFileLogger.Log``1(System.LogLevel,EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})
  langs:
  - csharp
  - vb
  name: TestFileLogger
  nameWithType: TestFileLogger
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestFileLogger
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestFileLogger.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: TestFileLogger
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestFileLogger.cs
    startLine: 10
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: 'public class TestFileLogger : ILogger'
    content.vb: >-
      Public Class TestFileLogger
          Inherits ILogger
  inheritance:
  - System.Object
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestFileLogger.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestFileLogger.Factory
  commentId: F:Microsoft.EntityFrameworkCore.Specification.Tests.TestFileLogger.Factory
  id: Factory
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestFileLogger
  langs:
  - csharp
  - vb
  name: Factory
  nameWithType: TestFileLogger.Factory
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestFileLogger.Factory
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestFileLogger.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Factory
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestFileLogger.cs
    startLine: 12
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public static readonly ILoggerFactory Factory
    content.vb: Public Shared ReadOnly Factory As ILoggerFactory
    return:
      type: ILoggerFactory
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestFileLogger.Instance
  commentId: F:Microsoft.EntityFrameworkCore.Specification.Tests.TestFileLogger.Instance
  id: Instance
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestFileLogger
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: TestFileLogger.Instance
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestFileLogger.Instance
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestFileLogger.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Instance
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestFileLogger.cs
    startLine: 27
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public static readonly ILogger Instance
    content.vb: Public Shared ReadOnly Instance As ILogger
    return:
      type: ILogger
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestFileLogger.#ctor(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TestFileLogger.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestFileLogger
  langs:
  - csharp
  - vb
  name: TestFileLogger(String)
  nameWithType: TestFileLogger.TestFileLogger(String)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestFileLogger.TestFileLogger(System.String)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestFileLogger.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestFileLogger.cs
    startLine: 31
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: protected TestFileLogger(string fileName = "data-test.log")
    content.vb: Protected Sub New(fileName As String = "data-test.log")
    parameters:
    - id: fileName
      type: System.String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestFileLogger.Log``1(System.LogLevel,EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TestFileLogger.Log``1(System.LogLevel,EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})
  id: Log``1(System.LogLevel,EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestFileLogger
  langs:
  - csharp
  - vb
  name: Log<TState>(LogLevel, EventId, TState, Exception, Func<TState, Exception, String>)
  nameWithType: TestFileLogger.Log<TState>(LogLevel, EventId, TState, Exception, Func<TState, Exception, String>)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestFileLogger.Log<TState>(System.LogLevel, EventId, TState, System.Exception, System.Func<TState, System.Exception, System.String>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestFileLogger.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Log
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestFileLogger.cs
    startLine: 44
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public void Log<TState>(LogLevel logLevel, EventId eventId, TState state, Exception exception, Func<TState, Exception, string> formatter)
    content.vb: Public Sub Log(Of TState)(logLevel As LogLevel, eventId As EventId, state As TState, exception As Exception, formatter As Func(Of TState, Exception, String))
    parameters:
    - id: logLevel
      type: System.LogLevel
    - id: eventId
      type: EventId
    - id: state
      type: '{TState}'
    - id: exception
      type: System.Exception
    - id: formatter
      type: System.Func{{TState},System.Exception,System.String}
    typeParameters:
    - id: TState
  nameWithType.vb: TestFileLogger.Log(Of TState)(LogLevel, EventId, TState, Exception, Func(Of TState, Exception, String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.TestFileLogger.Log(Of TState)(System.LogLevel, EventId, TState, System.Exception, System.Func(Of TState, System.Exception, System.String))
  name.vb: Log(Of TState)(LogLevel, EventId, TState, Exception, Func(Of TState, Exception, String))
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestFileLogger.IsEnabled(System.LogLevel)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TestFileLogger.IsEnabled(System.LogLevel)
  id: IsEnabled(System.LogLevel)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestFileLogger
  langs:
  - csharp
  - vb
  name: IsEnabled(LogLevel)
  nameWithType: TestFileLogger.IsEnabled(LogLevel)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestFileLogger.IsEnabled(System.LogLevel)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestFileLogger.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: IsEnabled
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestFileLogger.cs
    startLine: 58
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public bool IsEnabled(LogLevel logLevel)
    content.vb: Public Function IsEnabled(logLevel As LogLevel) As Boolean
    parameters:
    - id: logLevel
      type: System.LogLevel
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestFileLogger.BeginScope``1(``0)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TestFileLogger.BeginScope``1(``0)
  id: BeginScope``1(``0)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestFileLogger
  langs:
  - csharp
  - vb
  name: BeginScope<TState>(TState)
  nameWithType: TestFileLogger.BeginScope<TState>(TState)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestFileLogger.BeginScope<TState>(TState)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestFileLogger.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: BeginScope
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestFileLogger.cs
    startLine: 60
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public IDisposable BeginScope<TState>(TState state)
    content.vb: Public Function BeginScope(Of TState)(state As TState) As IDisposable
    parameters:
    - id: state
      type: '{TState}'
    typeParameters:
    - id: TState
    return:
      type: System.IDisposable
  nameWithType.vb: TestFileLogger.BeginScope(Of TState)(TState)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.TestFileLogger.BeginScope(Of TState)(TState)
  name.vb: BeginScope(Of TState)(TState)
references:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests
  commentId: N:Microsoft.EntityFrameworkCore.Specification.Tests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Specification.Tests
  nameWithType: Microsoft.EntityFrameworkCore.Specification.Tests
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestFileLogger.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<TestFileLogger, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TestFileLogger, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Specification.Tests.TestFileLogger, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TestFileLogger, TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Specification.Tests.TestFileLogger, TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of TestFileLogger, TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<TestFileLogger, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TestFileLogger, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Specification.Tests.TestFileLogger, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of TestFileLogger, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TestFileLogger, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Specification.Tests.TestFileLogger, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: ILoggerFactory
  isExternal: true
  name: ILoggerFactory
  nameWithType: ILoggerFactory
  fullName: ILoggerFactory
- uid: ILogger
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: ILogger
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.LogLevel
  isExternal: true
  name: LogLevel
  nameWithType: LogLevel
  fullName: System.LogLevel
- uid: EventId
  isExternal: true
  name: EventId
  nameWithType: EventId
  fullName: EventId
- uid: '{TState}'
  commentId: '!:TState'
  definition: TState
  name: TState
  nameWithType: TState
  fullName: TState
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Func{{TState},System.Exception,System.String}
  commentId: T:System.Func{``0,System.Exception,System.String}
  parent: System
  definition: System.Func`3
  name: Func<TState, Exception, String>
  nameWithType: Func<TState, Exception, String>
  fullName: System.Func<TState, System.Exception, System.String>
  nameWithType.vb: Func(Of TState, Exception, String)
  fullname.vb: System.Func(Of TState, System.Exception, System.String)
  name.vb: Func(Of TState, Exception, String)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TState
    nameWithType: TState
    fullName: TState
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TState
    nameWithType: TState
    fullName: TState
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TState
  isExternal: false
  name: TState
  nameWithType: TState
  fullName: TState
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullname.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
