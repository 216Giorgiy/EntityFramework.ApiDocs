### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrPropertyGetter`2
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrPropertyGetter`2
  id: ClrPropertyGetter`2
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  children:
  - Microsoft.EntityFrameworkCore.Metadata.Internal.ClrPropertyGetter`2.#ctor(System.Func{`0,`1})
  - Microsoft.EntityFrameworkCore.Metadata.Internal.ClrPropertyGetter`2.GetClrValue(System.Object)
  langs:
  - csharp
  - vb
  name: ClrPropertyGetter<TEntity, TValue>
  nameWithType: ClrPropertyGetter<TEntity, TValue>
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrPropertyGetter<TEntity, TValue>
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ClrPropertyGetter.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ClrPropertyGetter
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ClrPropertyGetter.cs
    startLine: 12
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public class ClrPropertyGetter<TEntity, TValue> : IClrPropertyGetter where TEntity : class'
    content.vb: >-
      Public Class ClrPropertyGetter(Of TEntity As Class, TValue)
          Implements IClrPropertyGetter
    typeParameters:
    - id: TEntity
    - id: TValue
  inheritance:
  - System.Object
  implements:
  - Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertyGetter
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: ClrPropertyGetter(Of TEntity, TValue)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrPropertyGetter(Of TEntity, TValue)
  name.vb: ClrPropertyGetter(Of TEntity, TValue)
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrPropertyGetter`2.#ctor(System.Func{`0,`1})
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrPropertyGetter`2.#ctor(System.Func{`0,`1})
  id: '#ctor(System.Func{`0,`1})'
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrPropertyGetter`2
  langs:
  - csharp
  - vb
  name: ClrPropertyGetter(Func<TEntity, TValue>)
  nameWithType: ClrPropertyGetter<TEntity, TValue>.ClrPropertyGetter(Func<TEntity, TValue>)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrPropertyGetter<TEntity, TValue>.ClrPropertyGetter(System.Func<TEntity, TValue>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ClrPropertyGetter.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ClrPropertyGetter.cs
    startLine: 21
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public ClrPropertyGetter(Func<TEntity, TValue> getter)
    content.vb: Public Sub New(getter As Func(Of TEntity, TValue))
    parameters:
    - id: getter
      type: System.Func{{TEntity},{TValue}}
  nameWithType.vb: ClrPropertyGetter(Of TEntity, TValue).ClrPropertyGetter(Func(Of TEntity, TValue))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrPropertyGetter(Of TEntity, TValue).ClrPropertyGetter(System.Func(Of TEntity, TValue))
  name.vb: ClrPropertyGetter(Func(Of TEntity, TValue))
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrPropertyGetter`2.GetClrValue(System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrPropertyGetter`2.GetClrValue(System.Object)
  id: GetClrValue(System.Object)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrPropertyGetter`2
  langs:
  - csharp
  - vb
  name: GetClrValue(Object)
  nameWithType: ClrPropertyGetter<TEntity, TValue>.GetClrValue(Object)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrPropertyGetter<TEntity, TValue>.GetClrValue(System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ClrPropertyGetter.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetClrValue
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ClrPropertyGetter.cs
    startLine: 30
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual object GetClrValue(object instance)
    content.vb: Public Overridable Function GetClrValue(instance As Object) As Object
    parameters:
    - id: instance
      type: System.Object
    return:
      type: System.Object
  implements:
  - Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertyGetter.GetClrValue(System.Object)
  nameWithType.vb: ClrPropertyGetter(Of TEntity, TValue).GetClrValue(Object)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.ClrPropertyGetter(Of TEntity, TValue).GetClrValue(System.Object)
references:
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertyGetter
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertyGetter
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: IClrPropertyGetter
  nameWithType: IClrPropertyGetter
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertyGetter
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Func{{TEntity},{TValue}}
  commentId: T:System.Func{`0,`1}
  parent: System
  definition: System.Func`2
  name: Func<TEntity, TValue>
  nameWithType: Func<TEntity, TValue>
  fullName: System.Func<TEntity, TValue>
  nameWithType.vb: Func(Of TEntity, TValue)
  fullname.vb: System.Func(Of TEntity, TValue)
  name.vb: Func(Of TEntity, TValue)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullname.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertyGetter.GetClrValue(System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertyGetter.GetClrValue(System.Object)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertyGetter
  isExternal: true
  name: GetClrValue(Object)
  nameWithType: IClrPropertyGetter.GetClrValue(Object)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertyGetter.GetClrValue(System.Object)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertyGetter.GetClrValue(System.Object)
    name: GetClrValue
    nameWithType: IClrPropertyGetter.GetClrValue
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertyGetter.GetClrValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertyGetter.GetClrValue(System.Object)
    name: GetClrValue
    nameWithType: IClrPropertyGetter.GetClrValue
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertyGetter.GetClrValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
