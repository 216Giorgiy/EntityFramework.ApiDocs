### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Internal.DbSetFinder
  commentId: T:Microsoft.EntityFrameworkCore.Internal.DbSetFinder
  id: DbSetFinder
  parent: Microsoft.EntityFrameworkCore.Internal
  children:
  - Microsoft.EntityFrameworkCore.Internal.DbSetFinder.FindSets(Microsoft.EntityFrameworkCore.DbContext)
  langs:
  - csharp
  - vb
  name: DbSetFinder
  nameWithType: DbSetFinder
  fullName: Microsoft.EntityFrameworkCore.Internal.DbSetFinder
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/DbSetFinder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: DbSetFinder
    path: src/Microsoft.EntityFrameworkCore/Internal/DbSetFinder.cs
    startLine: 16
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public class DbSetFinder : IDbSetFinder'
    content.vb: >-
      Public Class DbSetFinder
          Implements IDbSetFinder
  inheritance:
  - System.Object
  implements:
  - Microsoft.EntityFrameworkCore.Internal.IDbSetFinder
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Internal.IDbSetFinder.Microsoft.EntityFrameworkCore.Internal.DbSetFinderExtensions.CreateClrTypeDbSetMapping(Microsoft.EntityFrameworkCore.DbContext)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Internal.DbSetFinder.FindSets(Microsoft.EntityFrameworkCore.DbContext)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.DbSetFinder.FindSets(Microsoft.EntityFrameworkCore.DbContext)
  id: FindSets(Microsoft.EntityFrameworkCore.DbContext)
  parent: Microsoft.EntityFrameworkCore.Internal.DbSetFinder
  langs:
  - csharp
  - vb
  name: FindSets(DbContext)
  nameWithType: DbSetFinder.FindSets(DbContext)
  fullName: Microsoft.EntityFrameworkCore.Internal.DbSetFinder.FindSets(Microsoft.EntityFrameworkCore.DbContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/DbSetFinder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: FindSets
    path: src/Microsoft.EntityFrameworkCore/Internal/DbSetFinder.cs
    startLine: 25
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual IReadOnlyList<DbSetProperty> FindSets(DbContext context)
    content.vb: Public Overridable Function FindSets(context As DbContext) As IReadOnlyList(Of DbSetProperty)
    parameters:
    - id: context
      type: Microsoft.EntityFrameworkCore.DbContext
    return:
      type: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Internal.DbSetProperty}
  overload: Microsoft.EntityFrameworkCore.Internal.DbSetFinder.FindSets*
  implements:
  - Microsoft.EntityFrameworkCore.Internal.IDbSetFinder.FindSets(Microsoft.EntityFrameworkCore.DbContext)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.EntityFrameworkCore.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Internal
  fullName: Microsoft.EntityFrameworkCore.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Internal.IDbSetFinder
  commentId: T:Microsoft.EntityFrameworkCore.Internal.IDbSetFinder
  parent: Microsoft.EntityFrameworkCore.Internal
  isExternal: false
  name: IDbSetFinder
  nameWithType: IDbSetFinder
  fullName: Microsoft.EntityFrameworkCore.Internal.IDbSetFinder
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Internal.IDbSetFinder.Microsoft.EntityFrameworkCore.Internal.DbSetFinderExtensions.CreateClrTypeDbSetMapping(Microsoft.EntityFrameworkCore.DbContext)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.DbSetFinderExtensions.CreateClrTypeDbSetMapping(Microsoft.EntityFrameworkCore.Internal.IDbSetFinder,Microsoft.EntityFrameworkCore.DbContext)
  parent: Microsoft.EntityFrameworkCore.Internal.DbSetFinderExtensions
  definition: Microsoft.EntityFrameworkCore.Internal.DbSetFinderExtensions.CreateClrTypeDbSetMapping(Microsoft.EntityFrameworkCore.Internal.IDbSetFinder,Microsoft.EntityFrameworkCore.DbContext)
  name: CreateClrTypeDbSetMapping(DbContext)
  nameWithType: DbSetFinderExtensions.CreateClrTypeDbSetMapping(DbContext)
  fullName: Microsoft.EntityFrameworkCore.Internal.DbSetFinderExtensions.CreateClrTypeDbSetMapping(Microsoft.EntityFrameworkCore.DbContext)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Internal.DbSetFinderExtensions.CreateClrTypeDbSetMapping(Microsoft.EntityFrameworkCore.DbContext)
    name: CreateClrTypeDbSetMapping
    nameWithType: DbSetFinderExtensions.CreateClrTypeDbSetMapping
    fullName: Microsoft.EntityFrameworkCore.Internal.DbSetFinderExtensions.CreateClrTypeDbSetMapping
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.DbContext
    name: DbContext
    nameWithType: DbContext
    fullName: Microsoft.EntityFrameworkCore.DbContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Internal.DbSetFinderExtensions.CreateClrTypeDbSetMapping(Microsoft.EntityFrameworkCore.DbContext)
    name: CreateClrTypeDbSetMapping
    nameWithType: DbSetFinderExtensions.CreateClrTypeDbSetMapping
    fullName: Microsoft.EntityFrameworkCore.Internal.DbSetFinderExtensions.CreateClrTypeDbSetMapping
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.DbContext
    name: DbContext
    nameWithType: DbContext
    fullName: Microsoft.EntityFrameworkCore.DbContext
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Internal.DbSetFinderExtensions.CreateClrTypeDbSetMapping(Microsoft.EntityFrameworkCore.Internal.IDbSetFinder,Microsoft.EntityFrameworkCore.DbContext)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.DbSetFinderExtensions.CreateClrTypeDbSetMapping(Microsoft.EntityFrameworkCore.Internal.IDbSetFinder,Microsoft.EntityFrameworkCore.DbContext)
  isExternal: false
  name: CreateClrTypeDbSetMapping(IDbSetFinder, DbContext)
  nameWithType: DbSetFinderExtensions.CreateClrTypeDbSetMapping(IDbSetFinder, DbContext)
  fullName: Microsoft.EntityFrameworkCore.Internal.DbSetFinderExtensions.CreateClrTypeDbSetMapping(Microsoft.EntityFrameworkCore.Internal.IDbSetFinder, Microsoft.EntityFrameworkCore.DbContext)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Internal.DbSetFinderExtensions.CreateClrTypeDbSetMapping(Microsoft.EntityFrameworkCore.Internal.IDbSetFinder,Microsoft.EntityFrameworkCore.DbContext)
    name: CreateClrTypeDbSetMapping
    nameWithType: DbSetFinderExtensions.CreateClrTypeDbSetMapping
    fullName: Microsoft.EntityFrameworkCore.Internal.DbSetFinderExtensions.CreateClrTypeDbSetMapping
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Internal.IDbSetFinder
    name: IDbSetFinder
    nameWithType: IDbSetFinder
    fullName: Microsoft.EntityFrameworkCore.Internal.IDbSetFinder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.DbContext
    name: DbContext
    nameWithType: DbContext
    fullName: Microsoft.EntityFrameworkCore.DbContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Internal.DbSetFinderExtensions.CreateClrTypeDbSetMapping(Microsoft.EntityFrameworkCore.Internal.IDbSetFinder,Microsoft.EntityFrameworkCore.DbContext)
    name: CreateClrTypeDbSetMapping
    nameWithType: DbSetFinderExtensions.CreateClrTypeDbSetMapping
    fullName: Microsoft.EntityFrameworkCore.Internal.DbSetFinderExtensions.CreateClrTypeDbSetMapping
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Internal.IDbSetFinder
    name: IDbSetFinder
    nameWithType: IDbSetFinder
    fullName: Microsoft.EntityFrameworkCore.Internal.IDbSetFinder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.DbContext
    name: DbContext
    nameWithType: DbContext
    fullName: Microsoft.EntityFrameworkCore.DbContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Internal.DbSetFinderExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Internal.DbSetFinderExtensions
  parent: Microsoft.EntityFrameworkCore.Internal
  isExternal: false
  name: DbSetFinderExtensions
  nameWithType: DbSetFinderExtensions
  fullName: Microsoft.EntityFrameworkCore.Internal.DbSetFinderExtensions
- uid: Microsoft.EntityFrameworkCore.Internal.DbSetFinder.FindSets*
  commentId: Overload:Microsoft.EntityFrameworkCore.Internal.DbSetFinder.FindSets
  isExternal: false
  name: FindSets
  nameWithType: DbSetFinder.FindSets
  fullName: Microsoft.EntityFrameworkCore.Internal.DbSetFinder.FindSets
- uid: Microsoft.EntityFrameworkCore.Internal.IDbSetFinder.FindSets(Microsoft.EntityFrameworkCore.DbContext)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.IDbSetFinder.FindSets(Microsoft.EntityFrameworkCore.DbContext)
  parent: Microsoft.EntityFrameworkCore.Internal.IDbSetFinder
  isExternal: false
  name: FindSets(DbContext)
  nameWithType: IDbSetFinder.FindSets(DbContext)
  fullName: Microsoft.EntityFrameworkCore.Internal.IDbSetFinder.FindSets(Microsoft.EntityFrameworkCore.DbContext)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Internal.IDbSetFinder.FindSets(Microsoft.EntityFrameworkCore.DbContext)
    name: FindSets
    nameWithType: IDbSetFinder.FindSets
    fullName: Microsoft.EntityFrameworkCore.Internal.IDbSetFinder.FindSets
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.DbContext
    name: DbContext
    nameWithType: DbContext
    fullName: Microsoft.EntityFrameworkCore.DbContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Internal.IDbSetFinder.FindSets(Microsoft.EntityFrameworkCore.DbContext)
    name: FindSets
    nameWithType: IDbSetFinder.FindSets
    fullName: Microsoft.EntityFrameworkCore.Internal.IDbSetFinder.FindSets
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.DbContext
    name: DbContext
    nameWithType: DbContext
    fullName: Microsoft.EntityFrameworkCore.DbContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext
  commentId: T:Microsoft.EntityFrameworkCore.DbContext
  parent: Microsoft.EntityFrameworkCore
  isExternal: false
  name: DbContext
  nameWithType: DbContext
  fullName: Microsoft.EntityFrameworkCore.DbContext
- uid: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Internal.DbSetProperty}
  commentId: T:System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Internal.DbSetProperty}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<DbSetProperty>
  nameWithType: IReadOnlyList<DbSetProperty>
  fullName: System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Internal.DbSetProperty>
  nameWithType.vb: IReadOnlyList(Of DbSetProperty)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Internal.DbSetProperty)
  name.vb: IReadOnlyList(Of DbSetProperty)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Internal.DbSetProperty
    name: DbSetProperty
    nameWithType: DbSetProperty
    fullName: Microsoft.EntityFrameworkCore.Internal.DbSetProperty
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Internal.DbSetProperty
    name: DbSetProperty
    nameWithType: DbSetProperty
    fullName: Microsoft.EntityFrameworkCore.Internal.DbSetProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore
  commentId: N:Microsoft.EntityFrameworkCore
  isExternal: false
  name: Microsoft.EntityFrameworkCore
  nameWithType: Microsoft.EntityFrameworkCore
  fullName: Microsoft.EntityFrameworkCore
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
