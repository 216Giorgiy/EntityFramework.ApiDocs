### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore
  commentId: T:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore
  id: SqliteTestStore
  parent: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  children:
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore.AsTransient
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore.CommandTimeout
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore.Connection
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore.ConnectionString
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore.CreateConnectionString(System.String,System.Boolean)
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore.CreateScratch(System.Boolean)
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore.Dispose
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore.ExecuteNonQuery(System.String,System.Object[])
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore.GetOrCreateShared(System.String,System.Action)
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore.GetOrCreateShared(System.String,System.Boolean,System.Boolean,System.Action)
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore.OpenConnection
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore.Transaction
  langs:
  - csharp
  - vb
  name: SqliteTestStore
  nameWithType: SqliteTestStore
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore
  type: Class
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/SqliteTestStore.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: SqliteTestStore
    path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/SqliteTestStore.cs
    startLine: 12
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  syntax:
    content: 'public class SqliteTestStore : RelationalTestStore, IDisposable'
    content.vb: >-
      Public Class SqliteTestStore
          Inherits RelationalTestStore
          Implements IDisposable
  inheritance:
  - System.Object
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestStore
  - Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore
  implements:
  - System.IDisposable
  inheritedMembers:
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestStore.CreateShared(System.String,System.Action)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore.GetOrCreateShared(System.String,System.Boolean,System.Boolean,System.Action)
  commentId: M:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore.GetOrCreateShared(System.String,System.Boolean,System.Boolean,System.Action)
  id: GetOrCreateShared(System.String,System.Boolean,System.Boolean,System.Action)
  parent: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore
  langs:
  - csharp
  - vb
  name: GetOrCreateShared(String, Boolean, Boolean, Action)
  nameWithType: SqliteTestStore.GetOrCreateShared(String, Boolean, Boolean, Action)
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore.GetOrCreateShared(System.String, System.Boolean, System.Boolean, System.Action)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/SqliteTestStore.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GetOrCreateShared
    path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/SqliteTestStore.cs
    startLine: 16
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  syntax:
    content: public static SqliteTestStore GetOrCreateShared(string name, bool useTransaction, bool sharedCache, Action initializeDatabase = null)
    content.vb: Public Shared Function GetOrCreateShared(name As String, useTransaction As Boolean, sharedCache As Boolean, initializeDatabase As Action = Nothing) As SqliteTestStore
    parameters:
    - id: name
      type: System.String
    - id: useTransaction
      type: System.Boolean
    - id: sharedCache
      type: System.Boolean
    - id: initializeDatabase
      type: System.Action
    return:
      type: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore.GetOrCreateShared(System.String,System.Action)
  commentId: M:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore.GetOrCreateShared(System.String,System.Action)
  id: GetOrCreateShared(System.String,System.Action)
  parent: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore
  langs:
  - csharp
  - vb
  name: GetOrCreateShared(String, Action)
  nameWithType: SqliteTestStore.GetOrCreateShared(String, Action)
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore.GetOrCreateShared(System.String, System.Action)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/SqliteTestStore.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GetOrCreateShared
    path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/SqliteTestStore.cs
    startLine: 19
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  syntax:
    content: public static SqliteTestStore GetOrCreateShared(string name, Action initializeDatabase = null)
    content.vb: Public Shared Function GetOrCreateShared(name As String, initializeDatabase As Action = Nothing) As SqliteTestStore
    parameters:
    - id: name
      type: System.String
    - id: initializeDatabase
      type: System.Action
    return:
      type: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore.CreateScratch(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore.CreateScratch(System.Boolean)
  id: CreateScratch(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore
  langs:
  - csharp
  - vb
  name: CreateScratch(Boolean)
  nameWithType: SqliteTestStore.CreateScratch(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore.CreateScratch(System.Boolean)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/SqliteTestStore.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: CreateScratch
    path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/SqliteTestStore.cs
    startLine: 28
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  syntax:
    content: public static SqliteTestStore CreateScratch(bool sharedCache = false)
    content.vb: Public Shared Function CreateScratch(sharedCache As Boolean = False) As SqliteTestStore
    parameters:
    - id: sharedCache
      type: System.Boolean
    return:
      type: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore.CommandTimeout
  commentId: F:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore.CommandTimeout
  id: CommandTimeout
  parent: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore
  langs:
  - csharp
  - vb
  name: CommandTimeout
  nameWithType: SqliteTestStore.CommandTimeout
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore.CommandTimeout
  type: Field
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/SqliteTestStore.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: CommandTimeout
    path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/SqliteTestStore.cs
    startLine: 45
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  syntax:
    content: public const int CommandTimeout = 30
    content.vb: Public Const CommandTimeout As Integer = 30
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore.ConnectionString
  commentId: P:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore.ConnectionString
  id: ConnectionString
  parent: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore
  langs:
  - csharp
  - vb
  name: ConnectionString
  nameWithType: SqliteTestStore.ConnectionString
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore.ConnectionString
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/SqliteTestStore.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ConnectionString
    path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/SqliteTestStore.cs
    startLine: 52
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  syntax:
    content: public override string ConnectionString { get; }
    content.vb: Public Overrides ReadOnly Property ConnectionString As String
    parameters: []
    return:
      type: System.String
  overridden: Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore.ConnectionString
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore.OpenConnection
  commentId: M:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore.OpenConnection
  id: OpenConnection
  parent: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore
  langs:
  - csharp
  - vb
  name: OpenConnection()
  nameWithType: SqliteTestStore.OpenConnection()
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore.OpenConnection()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/SqliteTestStore.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: OpenConnection
    path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/SqliteTestStore.cs
    startLine: 85
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  syntax:
    content: public override void OpenConnection()
    content.vb: Public Overrides Sub OpenConnection
  overridden: Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore.OpenConnection
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore.AsTransient
  commentId: M:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore.AsTransient
  id: AsTransient
  parent: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore
  langs:
  - csharp
  - vb
  name: AsTransient()
  nameWithType: SqliteTestStore.AsTransient()
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore.AsTransient()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/SqliteTestStore.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: AsTransient
    path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/SqliteTestStore.cs
    startLine: 94
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  syntax:
    content: public SqliteTestStore AsTransient()
    content.vb: Public Function AsTransient As SqliteTestStore
    return:
      type: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore.ExecuteNonQuery(System.String,System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore.ExecuteNonQuery(System.String,System.Object[])
  id: ExecuteNonQuery(System.String,System.Object[])
  parent: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore
  langs:
  - csharp
  - vb
  name: ExecuteNonQuery(String, Object[])
  nameWithType: SqliteTestStore.ExecuteNonQuery(String, Object[])
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore.ExecuteNonQuery(System.String, System.Object[])
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/SqliteTestStore.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ExecuteNonQuery
    path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/SqliteTestStore.cs
    startLine: 100
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  syntax:
    content: public int ExecuteNonQuery(string sql, params object[] parameters)
    content.vb: Public Function ExecuteNonQuery(sql As String, ParamArray parameters As Object()) As Integer
    parameters:
    - id: sql
      type: System.String
    - id: parameters
      type: System.Object[]
    return:
      type: System.Int32
  nameWithType.vb: SqliteTestStore.ExecuteNonQuery(String, Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore.ExecuteNonQuery(System.String, System.Object())
  name.vb: ExecuteNonQuery(String, Object())
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore.Connection
  commentId: P:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore.Connection
  id: Connection
  parent: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore
  langs:
  - csharp
  - vb
  name: Connection
  nameWithType: SqliteTestStore.Connection
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore.Connection
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/SqliteTestStore.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Connection
    path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/SqliteTestStore.cs
    startLine: 128
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  syntax:
    content: public override DbConnection Connection { get; }
    content.vb: Public Overrides ReadOnly Property Connection As DbConnection
    parameters: []
    return:
      type: DbConnection
  overridden: Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore.Connection
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore.Transaction
  commentId: P:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore.Transaction
  id: Transaction
  parent: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore
  langs:
  - csharp
  - vb
  name: Transaction
  nameWithType: SqliteTestStore.Transaction
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore.Transaction
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/SqliteTestStore.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Transaction
    path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/SqliteTestStore.cs
    startLine: 129
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  syntax:
    content: public override DbTransaction Transaction { get; }
    content.vb: Public Overrides ReadOnly Property Transaction As DbTransaction
    parameters: []
    return:
      type: DbTransaction
  overridden: Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore.Transaction
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore.Dispose
  commentId: M:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore.Dispose
  id: Dispose
  parent: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: SqliteTestStore.Dispose()
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore.Dispose()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/SqliteTestStore.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Dispose
    path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/SqliteTestStore.cs
    startLine: 131
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  syntax:
    content: public override void Dispose()
    content.vb: Public Overrides Sub Dispose
  overridden: Microsoft.EntityFrameworkCore.Specification.Tests.TestStore.Dispose
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore.CreateConnectionString(System.String,System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore.CreateConnectionString(System.String,System.Boolean)
  id: CreateConnectionString(System.String,System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore
  langs:
  - csharp
  - vb
  name: CreateConnectionString(String, Boolean)
  nameWithType: SqliteTestStore.CreateConnectionString(String, Boolean)
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore.CreateConnectionString(System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/SqliteTestStore.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: CreateConnectionString
    path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/SqliteTestStore.cs
    startLine: 143
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  syntax:
    content: public static string CreateConnectionString(string name, bool sharedCache = false)
    content.vb: Public Shared Function CreateConnectionString(name As String, sharedCache As Boolean = False) As String
    parameters:
    - id: name
      type: System.String
    - id: sharedCache
      type: System.Boolean
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  commentId: N:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  nameWithType: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestStore
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.TestStore
  parent: Microsoft.EntityFrameworkCore.Specification.Tests
  isExternal: false
  name: TestStore
  nameWithType: TestStore
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestStore
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore
  parent: Microsoft.EntityFrameworkCore.Specification.Tests
  isExternal: false
  name: RelationalTestStore
  nameWithType: RelationalTestStore
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestStore.CreateShared(System.String,System.Action)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TestStore.CreateShared(System.String,System.Action)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestStore
  isExternal: true
  name: CreateShared(String, Action)
  nameWithType: TestStore.CreateShared(String, Action)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestStore.CreateShared(System.String, System.Action)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestStore.CreateShared(System.String,System.Action)
    name: CreateShared
    nameWithType: TestStore.CreateShared
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestStore.CreateShared
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestStore.CreateShared(System.String,System.Action)
    name: CreateShared
    nameWithType: TestStore.CreateShared
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestStore.CreateShared
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<SqliteTestStore, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<SqliteTestStore, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of SqliteTestStore, TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore, TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of SqliteTestStore, TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<SqliteTestStore, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<SqliteTestStore, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of SqliteTestStore, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of SqliteTestStore, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Specification.Tests
  commentId: N:Microsoft.EntityFrameworkCore.Specification.Tests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Specification.Tests
  nameWithType: Microsoft.EntityFrameworkCore.Specification.Tests
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore
  commentId: T:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore
  parent: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  isExternal: false
  name: SqliteTestStore
  nameWithType: SqliteTestStore
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore.ConnectionString
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore.ConnectionString
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore
  isExternal: false
  name: ConnectionString
  nameWithType: RelationalTestStore.ConnectionString
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore.ConnectionString
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore.OpenConnection
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore.OpenConnection
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore
  isExternal: false
  name: OpenConnection()
  nameWithType: RelationalTestStore.OpenConnection()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore.OpenConnection()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore.OpenConnection
    name: OpenConnection
    nameWithType: RelationalTestStore.OpenConnection
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore.OpenConnection
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore.OpenConnection
    name: OpenConnection
    nameWithType: RelationalTestStore.OpenConnection
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore.OpenConnection
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object[]
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullname.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore.Connection
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore.Connection
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore
  isExternal: false
  name: Connection
  nameWithType: RelationalTestStore.Connection
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore.Connection
- uid: DbConnection
  isExternal: true
  name: DbConnection
  nameWithType: DbConnection
  fullName: DbConnection
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore.Transaction
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore.Transaction
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore
  isExternal: false
  name: Transaction
  nameWithType: RelationalTestStore.Transaction
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.RelationalTestStore.Transaction
- uid: DbTransaction
  commentId: '!:DbTransaction'
  isExternal: true
  name: DbTransaction
  nameWithType: DbTransaction
  fullName: DbTransaction
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestStore.Dispose
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TestStore.Dispose
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestStore
  isExternal: false
  name: Dispose()
  nameWithType: TestStore.Dispose()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestStore.Dispose()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestStore.Dispose
    name: Dispose
    nameWithType: TestStore.Dispose
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestStore.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestStore.Dispose
    name: Dispose
    nameWithType: TestStore.Dispose
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestStore.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
