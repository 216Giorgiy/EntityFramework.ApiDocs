### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Scaffolding.ScaffoldingTypeMapper
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.ScaffoldingTypeMapper
  id: ScaffoldingTypeMapper
  parent: Microsoft.EntityFrameworkCore.Scaffolding
  children:
  - Microsoft.EntityFrameworkCore.Scaffolding.ScaffoldingTypeMapper.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper)
  - Microsoft.EntityFrameworkCore.Scaffolding.ScaffoldingTypeMapper.FindMapping(System.String,System.Boolean,System.Boolean)
  - Microsoft.EntityFrameworkCore.Scaffolding.ScaffoldingTypeMapper.TypeMapper
  langs:
  - csharp
  - vb
  name: ScaffoldingTypeMapper
  nameWithType: ScaffoldingTypeMapper
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.ScaffoldingTypeMapper
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/ScaffoldingTypeMapper.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ScaffoldingTypeMapper
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/ScaffoldingTypeMapper.cs
    startLine: 10
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding
  syntax:
    content: public class ScaffoldingTypeMapper
    content.vb: Public Class ScaffoldingTypeMapper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Scaffolding.ScaffoldingTypeMapper.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.ScaffoldingTypeMapper.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper)
  id: '#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper)'
  parent: Microsoft.EntityFrameworkCore.Scaffolding.ScaffoldingTypeMapper
  langs:
  - csharp
  - vb
  name: ScaffoldingTypeMapper(IRelationalTypeMapper)
  nameWithType: ScaffoldingTypeMapper.ScaffoldingTypeMapper(IRelationalTypeMapper)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.ScaffoldingTypeMapper.ScaffoldingTypeMapper(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/ScaffoldingTypeMapper.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/ScaffoldingTypeMapper.cs
    startLine: 12
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding
  syntax:
    content: public ScaffoldingTypeMapper(IRelationalTypeMapper typeMapper)
    content.vb: Public Sub New(typeMapper As IRelationalTypeMapper)
    parameters:
    - id: typeMapper
      type: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper
  overload: Microsoft.EntityFrameworkCore.Scaffolding.ScaffoldingTypeMapper.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Scaffolding.ScaffoldingTypeMapper.TypeMapper
  commentId: P:Microsoft.EntityFrameworkCore.Scaffolding.ScaffoldingTypeMapper.TypeMapper
  id: TypeMapper
  parent: Microsoft.EntityFrameworkCore.Scaffolding.ScaffoldingTypeMapper
  langs:
  - csharp
  - vb
  name: TypeMapper
  nameWithType: ScaffoldingTypeMapper.TypeMapper
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.ScaffoldingTypeMapper.TypeMapper
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/ScaffoldingTypeMapper.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: TypeMapper
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/ScaffoldingTypeMapper.cs
    startLine: 19
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding
  syntax:
    content: protected virtual IRelationalTypeMapper TypeMapper { get; }
    content.vb: Protected Overridable ReadOnly Property TypeMapper As IRelationalTypeMapper
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper
  overload: Microsoft.EntityFrameworkCore.Scaffolding.ScaffoldingTypeMapper.TypeMapper*
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Scaffolding.ScaffoldingTypeMapper.FindMapping(System.String,System.Boolean,System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.ScaffoldingTypeMapper.FindMapping(System.String,System.Boolean,System.Boolean)
  id: FindMapping(System.String,System.Boolean,System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Scaffolding.ScaffoldingTypeMapper
  langs:
  - csharp
  - vb
  name: FindMapping(String, Boolean, Boolean)
  nameWithType: ScaffoldingTypeMapper.FindMapping(String, Boolean, Boolean)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.ScaffoldingTypeMapper.FindMapping(System.String, System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/ScaffoldingTypeMapper.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: FindMapping
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/ScaffoldingTypeMapper.cs
    startLine: 21
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding
  syntax:
    content: public virtual TypeScaffoldingInfo FindMapping(string storeType, bool keyOrIndex, bool rowVersion)
    content.vb: Public Overridable Function FindMapping(storeType As String, keyOrIndex As Boolean, rowVersion As Boolean) As TypeScaffoldingInfo
    parameters:
    - id: storeType
      type: System.String
    - id: keyOrIndex
      type: System.Boolean
    - id: rowVersion
      type: System.Boolean
    return:
      type: Microsoft.EntityFrameworkCore.Scaffolding.TypeScaffoldingInfo
  overload: Microsoft.EntityFrameworkCore.Scaffolding.ScaffoldingTypeMapper.FindMapping*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.EntityFrameworkCore.Scaffolding
  commentId: N:Microsoft.EntityFrameworkCore.Scaffolding
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Scaffolding
  nameWithType: Microsoft.EntityFrameworkCore.Scaffolding
  fullName: Microsoft.EntityFrameworkCore.Scaffolding
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Scaffolding.ScaffoldingTypeMapper.#ctor*
  commentId: Overload:Microsoft.EntityFrameworkCore.Scaffolding.ScaffoldingTypeMapper.#ctor
  isExternal: false
  name: ScaffoldingTypeMapper
  nameWithType: ScaffoldingTypeMapper.ScaffoldingTypeMapper
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.ScaffoldingTypeMapper.ScaffoldingTypeMapper
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IRelationalTypeMapper
  nameWithType: IRelationalTypeMapper
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper
- uid: Microsoft.EntityFrameworkCore.Storage
  commentId: N:Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Storage
  nameWithType: Microsoft.EntityFrameworkCore.Storage
  fullName: Microsoft.EntityFrameworkCore.Storage
- uid: Microsoft.EntityFrameworkCore.Scaffolding.ScaffoldingTypeMapper.TypeMapper*
  commentId: Overload:Microsoft.EntityFrameworkCore.Scaffolding.ScaffoldingTypeMapper.TypeMapper
  isExternal: false
  name: TypeMapper
  nameWithType: ScaffoldingTypeMapper.TypeMapper
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.ScaffoldingTypeMapper.TypeMapper
- uid: Microsoft.EntityFrameworkCore.Scaffolding.ScaffoldingTypeMapper.FindMapping*
  commentId: Overload:Microsoft.EntityFrameworkCore.Scaffolding.ScaffoldingTypeMapper.FindMapping
  isExternal: false
  name: FindMapping
  nameWithType: ScaffoldingTypeMapper.FindMapping
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.ScaffoldingTypeMapper.FindMapping
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.EntityFrameworkCore.Scaffolding.TypeScaffoldingInfo
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.TypeScaffoldingInfo
  parent: Microsoft.EntityFrameworkCore.Scaffolding
  isExternal: false
  name: TypeScaffoldingInfo
  nameWithType: TypeScaffoldingInfo
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.TypeScaffoldingInfo
