### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames
  id: RelationalAnnotationNames
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  children:
  - Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames.ColumnName
  - Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames.ColumnType
  - Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames.ComputedColumnSql
  - Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames.DatabaseName
  - Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames.DefaultSchema
  - Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames.DefaultValue
  - Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames.DefaultValueSql
  - Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames.DiscriminatorProperty
  - Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames.DiscriminatorValue
  - Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames.Name
  - Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames.Prefix
  - Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames.Schema
  - Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames.SequencePrefix
  - Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames.TableName
  langs:
  - csharp
  - vb
  name: RelationalAnnotationNames
  nameWithType: RelationalAnnotationNames
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Internal/RelationalAnnotationNames.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: RelationalAnnotationNames
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Internal/RelationalAnnotationNames.cs
    startLine: 9
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public static class RelationalAnnotationNames
    content.vb: Public Module RelationalAnnotationNames
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames.Prefix
  commentId: F:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames.Prefix
  id: Prefix
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames
  langs:
  - csharp
  - vb
  name: Prefix
  nameWithType: RelationalAnnotationNames.Prefix
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames.Prefix
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Internal/RelationalAnnotationNames.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Prefix
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Internal/RelationalAnnotationNames.cs
    startLine: 15
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public const string Prefix = "Relational:"
    content.vb: Public Const Prefix As String = "Relational:"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames.ColumnName
  commentId: F:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames.ColumnName
  id: ColumnName
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames
  langs:
  - csharp
  - vb
  name: ColumnName
  nameWithType: RelationalAnnotationNames.ColumnName
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames.ColumnName
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Internal/RelationalAnnotationNames.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ColumnName
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Internal/RelationalAnnotationNames.cs
    startLine: 21
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public const string ColumnName = "ColumnName"
    content.vb: Public Const ColumnName As String = "ColumnName"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames.ColumnType
  commentId: F:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames.ColumnType
  id: ColumnType
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames
  langs:
  - csharp
  - vb
  name: ColumnType
  nameWithType: RelationalAnnotationNames.ColumnType
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames.ColumnType
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Internal/RelationalAnnotationNames.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ColumnType
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Internal/RelationalAnnotationNames.cs
    startLine: 27
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public const string ColumnType = "ColumnType"
    content.vb: Public Const ColumnType As String = "ColumnType"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames.DefaultValueSql
  commentId: F:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames.DefaultValueSql
  id: DefaultValueSql
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames
  langs:
  - csharp
  - vb
  name: DefaultValueSql
  nameWithType: RelationalAnnotationNames.DefaultValueSql
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames.DefaultValueSql
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Internal/RelationalAnnotationNames.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: DefaultValueSql
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Internal/RelationalAnnotationNames.cs
    startLine: 33
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public const string DefaultValueSql = "DefaultValueSql"
    content.vb: Public Const DefaultValueSql As String = "DefaultValueSql"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames.ComputedColumnSql
  commentId: F:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames.ComputedColumnSql
  id: ComputedColumnSql
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames
  langs:
  - csharp
  - vb
  name: ComputedColumnSql
  nameWithType: RelationalAnnotationNames.ComputedColumnSql
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames.ComputedColumnSql
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Internal/RelationalAnnotationNames.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ComputedColumnSql
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Internal/RelationalAnnotationNames.cs
    startLine: 39
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public const string ComputedColumnSql = "ComputedColumnSql"
    content.vb: Public Const ComputedColumnSql As String = "ComputedColumnSql"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames.DefaultValue
  commentId: F:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames.DefaultValue
  id: DefaultValue
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames
  langs:
  - csharp
  - vb
  name: DefaultValue
  nameWithType: RelationalAnnotationNames.DefaultValue
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames.DefaultValue
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Internal/RelationalAnnotationNames.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: DefaultValue
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Internal/RelationalAnnotationNames.cs
    startLine: 45
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public const string DefaultValue = "DefaultValue"
    content.vb: Public Const DefaultValue As String = "DefaultValue"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames.DatabaseName
  commentId: F:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames.DatabaseName
  id: DatabaseName
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames
  langs:
  - csharp
  - vb
  name: DatabaseName
  nameWithType: RelationalAnnotationNames.DatabaseName
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames.DatabaseName
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Internal/RelationalAnnotationNames.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: DatabaseName
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Internal/RelationalAnnotationNames.cs
    startLine: 51
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public const string DatabaseName = "DatabaseName"
    content.vb: Public Const DatabaseName As String = "DatabaseName"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames.TableName
  commentId: F:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames.TableName
  id: TableName
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames
  langs:
  - csharp
  - vb
  name: TableName
  nameWithType: RelationalAnnotationNames.TableName
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames.TableName
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Internal/RelationalAnnotationNames.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: TableName
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Internal/RelationalAnnotationNames.cs
    startLine: 57
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public const string TableName = "TableName"
    content.vb: Public Const TableName As String = "TableName"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames.Schema
  commentId: F:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames.Schema
  id: Schema
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames
  langs:
  - csharp
  - vb
  name: Schema
  nameWithType: RelationalAnnotationNames.Schema
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames.Schema
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Internal/RelationalAnnotationNames.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Schema
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Internal/RelationalAnnotationNames.cs
    startLine: 63
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public const string Schema = "Schema"
    content.vb: Public Const Schema As String = "Schema"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames.DefaultSchema
  commentId: F:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames.DefaultSchema
  id: DefaultSchema
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames
  langs:
  - csharp
  - vb
  name: DefaultSchema
  nameWithType: RelationalAnnotationNames.DefaultSchema
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames.DefaultSchema
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Internal/RelationalAnnotationNames.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: DefaultSchema
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Internal/RelationalAnnotationNames.cs
    startLine: 69
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public const string DefaultSchema = "DefaultSchema"
    content.vb: Public Const DefaultSchema As String = "DefaultSchema"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames.Name
  commentId: F:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames.Name
  id: Name
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: RelationalAnnotationNames.Name
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames.Name
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Internal/RelationalAnnotationNames.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Name
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Internal/RelationalAnnotationNames.cs
    startLine: 75
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public const string Name = "Name"
    content.vb: Public Const Name As String = "Name"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames.SequencePrefix
  commentId: F:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames.SequencePrefix
  id: SequencePrefix
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames
  langs:
  - csharp
  - vb
  name: SequencePrefix
  nameWithType: RelationalAnnotationNames.SequencePrefix
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames.SequencePrefix
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Internal/RelationalAnnotationNames.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: SequencePrefix
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Internal/RelationalAnnotationNames.cs
    startLine: 81
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public const string SequencePrefix = "Sequence:"
    content.vb: Public Const SequencePrefix As String = "Sequence:"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames.DiscriminatorProperty
  commentId: F:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames.DiscriminatorProperty
  id: DiscriminatorProperty
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames
  langs:
  - csharp
  - vb
  name: DiscriminatorProperty
  nameWithType: RelationalAnnotationNames.DiscriminatorProperty
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames.DiscriminatorProperty
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Internal/RelationalAnnotationNames.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: DiscriminatorProperty
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Internal/RelationalAnnotationNames.cs
    startLine: 87
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public const string DiscriminatorProperty = "DiscriminatorProperty"
    content.vb: Public Const DiscriminatorProperty As String = "DiscriminatorProperty"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames.DiscriminatorValue
  commentId: F:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames.DiscriminatorValue
  id: DiscriminatorValue
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames
  langs:
  - csharp
  - vb
  name: DiscriminatorValue
  nameWithType: RelationalAnnotationNames.DiscriminatorValue
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames.DiscriminatorValue
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Internal/RelationalAnnotationNames.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: DiscriminatorValue
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Internal/RelationalAnnotationNames.cs
    startLine: 93
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public const string DiscriminatorValue = "DiscriminatorValue"
    content.vb: Public Const DiscriminatorValue As String = "DiscriminatorValue"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
