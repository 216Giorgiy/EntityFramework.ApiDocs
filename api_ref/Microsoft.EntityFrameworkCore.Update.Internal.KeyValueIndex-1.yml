### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndex`1
  commentId: T:Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndex`1
  id: KeyValueIndex`1
  parent: Microsoft.EntityFrameworkCore.Update.Internal
  children:
  - Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndex`1.#ctor(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,`0,System.Collections.Generic.IEqualityComparer{`0},System.Boolean)
  - Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndex`1.Equals(System.Object)
  - Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndex`1.GetHashCode
  - Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndex`1.WithOriginalValuesFlag
  langs:
  - csharp
  - vb
  name: KeyValueIndex<TKey>
  nameWithType: KeyValueIndex<TKey>
  fullName: Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndex<TKey>
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Update/Internal/KeyValueIndex.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: KeyValueIndex
    path: src/Microsoft.EntityFrameworkCore.Relational/Update/Internal/KeyValueIndex.cs
    startLine: 13
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Update.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public sealed class KeyValueIndex<TKey> : IKeyValueIndex'
    content.vb: >-
      Public NotInheritable Class KeyValueIndex(Of TKey)
          Implements IKeyValueIndex
    typeParameters:
    - id: TKey
  inheritance:
  - System.Object
  implements:
  - Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndex
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: KeyValueIndex(Of TKey)
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  fullName.vb: Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndex(Of TKey)
  name.vb: KeyValueIndex(Of TKey)
- uid: Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndex`1.#ctor(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,`0,System.Collections.Generic.IEqualityComparer{`0},System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndex`1.#ctor(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,`0,System.Collections.Generic.IEqualityComparer{`0},System.Boolean)
  id: '#ctor(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,`0,System.Collections.Generic.IEqualityComparer{`0},System.Boolean)'
  parent: Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndex`1
  langs:
  - csharp
  - vb
  name: KeyValueIndex(IForeignKey, TKey, IEqualityComparer<TKey>, Boolean)
  nameWithType: KeyValueIndex<TKey>.KeyValueIndex(IForeignKey, TKey, IEqualityComparer<TKey>, Boolean)
  fullName: Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndex<TKey>.KeyValueIndex(Microsoft.EntityFrameworkCore.Metadata.IForeignKey, TKey, System.Collections.Generic.IEqualityComparer<TKey>, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Update/Internal/KeyValueIndex.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Relational/Update/Internal/KeyValueIndex.cs
    startLine: 24
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Update.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public KeyValueIndex(IForeignKey foreignKey, TKey keyValue, IEqualityComparer<TKey> keyComparer, bool fromOriginalValues)
    content.vb: Public Sub New(foreignKey As IForeignKey, keyValue As TKey, keyComparer As IEqualityComparer(Of TKey), fromOriginalValues As Boolean)
    parameters:
    - id: foreignKey
      type: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    - id: keyValue
      type: '{TKey}'
    - id: keyComparer
      type: System.Collections.Generic.IEqualityComparer{{TKey}}
    - id: fromOriginalValues
      type: System.Boolean
  overload: Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndex`1.#ctor*
  nameWithType.vb: KeyValueIndex(Of TKey).KeyValueIndex(IForeignKey, TKey, IEqualityComparer(Of TKey), Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndex(Of TKey).KeyValueIndex(Microsoft.EntityFrameworkCore.Metadata.IForeignKey, TKey, System.Collections.Generic.IEqualityComparer(Of TKey), System.Boolean)
  name.vb: KeyValueIndex(IForeignKey, TKey, IEqualityComparer(Of TKey), Boolean)
- uid: Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndex`1.WithOriginalValuesFlag
  commentId: M:Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndex`1.WithOriginalValuesFlag
  id: WithOriginalValuesFlag
  parent: Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndex`1
  langs:
  - csharp
  - vb
  name: WithOriginalValuesFlag()
  nameWithType: KeyValueIndex<TKey>.WithOriginalValuesFlag()
  fullName: Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndex<TKey>.WithOriginalValuesFlag()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Update/Internal/KeyValueIndex.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: WithOriginalValuesFlag
    path: src/Microsoft.EntityFrameworkCore.Relational/Update/Internal/KeyValueIndex.cs
    startLine: 40
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Update.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public IKeyValueIndex WithOriginalValuesFlag()
    content.vb: Public Function WithOriginalValuesFlag As IKeyValueIndex
    return:
      type: Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndex
  overload: Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndex`1.WithOriginalValuesFlag*
  implements:
  - Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndex.WithOriginalValuesFlag
  nameWithType.vb: KeyValueIndex(Of TKey).WithOriginalValuesFlag()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndex(Of TKey).WithOriginalValuesFlag()
- uid: Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndex`1.Equals(System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndex`1.Equals(System.Object)
  id: Equals(System.Object)
  parent: Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndex`1
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: KeyValueIndex<TKey>.Equals(Object)
  fullName: Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndex<TKey>.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Update/Internal/KeyValueIndex.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Equals
    path: src/Microsoft.EntityFrameworkCore.Relational/Update/Internal/KeyValueIndex.cs
    startLine: 52
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Update.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndex`1.Equals*
  nameWithType.vb: KeyValueIndex(Of TKey).Equals(Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndex(Of TKey).Equals(System.Object)
- uid: Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndex`1.GetHashCode
  commentId: M:Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndex`1.GetHashCode
  id: GetHashCode
  parent: Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndex`1
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: KeyValueIndex<TKey>.GetHashCode()
  fullName: Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndex<TKey>.GetHashCode()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Update/Internal/KeyValueIndex.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetHashCode
    path: src/Microsoft.EntityFrameworkCore.Relational/Update/Internal/KeyValueIndex.cs
    startLine: 62
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Update.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
  overridden: System.Object.GetHashCode
  overload: Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndex`1.GetHashCode*
  nameWithType.vb: KeyValueIndex(Of TKey).GetHashCode()
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndex(Of TKey).GetHashCode()
references:
- uid: Microsoft.EntityFrameworkCore.Update.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Update.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Update.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Update.Internal
  fullName: Microsoft.EntityFrameworkCore.Update.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndex
  commentId: T:Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndex
  parent: Microsoft.EntityFrameworkCore.Update.Internal
  isExternal: false
  name: IKeyValueIndex
  nameWithType: IKeyValueIndex
  fullName: Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndex
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndex`1.#ctor*
  commentId: Overload:Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndex`1.#ctor
  isExternal: false
  name: KeyValueIndex
  nameWithType: KeyValueIndex<TKey>.KeyValueIndex
  fullName: Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndex<TKey>.KeyValueIndex
  nameWithType.vb: KeyValueIndex(Of TKey).KeyValueIndex
  fullname.vb: Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndex(Of TKey).KeyValueIndex
- uid: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IForeignKey
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IForeignKey
  nameWithType: IForeignKey
  fullName: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
- uid: '{TKey}'
  commentId: '!:TKey'
  definition: TKey
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: System.Collections.Generic.IEqualityComparer{{TKey}}
  commentId: T:System.Collections.Generic.IEqualityComparer{``1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEqualityComparer`1
  name: IEqualityComparer<TKey>
  nameWithType: IEqualityComparer<TKey>
  fullName: System.Collections.Generic.IEqualityComparer<TKey>
  nameWithType.vb: IEqualityComparer(Of TKey)
  fullname.vb: System.Collections.Generic.IEqualityComparer(Of TKey)
  name.vb: IEqualityComparer(Of TKey)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: TKey
  isExternal: false
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: System.Collections.Generic.IEqualityComparer`1
  commentId: T:System.Collections.Generic.IEqualityComparer`1
  isExternal: true
  name: IEqualityComparer<T>
  nameWithType: IEqualityComparer<T>
  fullName: System.Collections.Generic.IEqualityComparer<T>
  nameWithType.vb: IEqualityComparer(Of T)
  fullname.vb: System.Collections.Generic.IEqualityComparer(Of T)
  name.vb: IEqualityComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndex`1.WithOriginalValuesFlag*
  commentId: Overload:Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndex`1.WithOriginalValuesFlag
  isExternal: false
  name: WithOriginalValuesFlag
  nameWithType: KeyValueIndex<TKey>.WithOriginalValuesFlag
  fullName: Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndex<TKey>.WithOriginalValuesFlag
  nameWithType.vb: KeyValueIndex(Of TKey).WithOriginalValuesFlag
  fullname.vb: Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndex(Of TKey).WithOriginalValuesFlag
- uid: Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndex.WithOriginalValuesFlag
  commentId: M:Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndex.WithOriginalValuesFlag
  parent: Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndex
  isExternal: false
  name: WithOriginalValuesFlag()
  nameWithType: IKeyValueIndex.WithOriginalValuesFlag()
  fullName: Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndex.WithOriginalValuesFlag()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndex.WithOriginalValuesFlag
    name: WithOriginalValuesFlag
    nameWithType: IKeyValueIndex.WithOriginalValuesFlag
    fullName: Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndex.WithOriginalValuesFlag
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndex.WithOriginalValuesFlag
    name: WithOriginalValuesFlag
    nameWithType: IKeyValueIndex.WithOriginalValuesFlag
    fullName: Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndex.WithOriginalValuesFlag
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndex`1.Equals*
  commentId: Overload:Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndex`1.Equals
  isExternal: false
  name: Equals
  nameWithType: KeyValueIndex<TKey>.Equals
  fullName: Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndex<TKey>.Equals
  nameWithType.vb: KeyValueIndex(Of TKey).Equals
  fullname.vb: Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndex(Of TKey).Equals
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndex`1.GetHashCode*
  commentId: Overload:Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndex`1.GetHashCode
  isExternal: false
  name: GetHashCode
  nameWithType: KeyValueIndex<TKey>.GetHashCode
  fullName: Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndex<TKey>.GetHashCode
  nameWithType.vb: KeyValueIndex(Of TKey).GetHashCode
  fullname.vb: Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndex(Of TKey).GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
