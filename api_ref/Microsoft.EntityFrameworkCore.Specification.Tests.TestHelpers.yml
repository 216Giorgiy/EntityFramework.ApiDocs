### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers
  id: TestHelpers
  parent: Microsoft.EntityFrameworkCore.Specification.Tests
  children:
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.#ctor
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.AddProviderServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.AssertResults``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IList{``0},System.Boolean,System.Action{System.Collections.Generic.IList{``0},System.Collections.Generic.IList{``0}})
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.BuildModelFor``1
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateContext
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateContext(Microsoft.EntityFrameworkCore.DbContextOptions)
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateContext(Microsoft.EntityFrameworkCore.Metadata.IModel)
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateContext(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateContext(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.EntityFrameworkCore.DbContextOptions)
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateContext(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.EntityFrameworkCore.Metadata.IModel)
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateContext(System.IServiceProvider)
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateContext(System.IServiceProvider,Microsoft.EntityFrameworkCore.DbContextOptions)
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateContext(System.IServiceProvider,Microsoft.EntityFrameworkCore.Metadata.IModel)
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateContextServices
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateContextServices(Microsoft.EntityFrameworkCore.DbContextOptions)
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateContextServices(Microsoft.EntityFrameworkCore.Metadata.IModel)
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateContextServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateContextServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.EntityFrameworkCore.DbContextOptions)
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateContextServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.EntityFrameworkCore.Metadata.IModel)
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateContextServices(System.IServiceProvider)
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateContextServices(System.IServiceProvider,Microsoft.EntityFrameworkCore.DbContextOptions)
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateContextServices(System.IServiceProvider,Microsoft.EntityFrameworkCore.Metadata.IModel)
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateConventionBuilder
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateInternalEntry``1(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.EntityState,``0)
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateOptions(Microsoft.EntityFrameworkCore.Metadata.IModel,System.IServiceProvider)
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateOptions(System.IServiceProvider)
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateServiceProvider(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.Instance
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.UseProviderOptions(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
  langs:
  - csharp
  - vb
  name: TestHelpers
  nameWithType: TestHelpers
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestHelpers.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: TestHelpers
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestHelpers.cs
    startLine: 17
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public class TestHelpers
    content.vb: Public Class TestHelpers
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.#ctor
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.#ctor
  id: '#ctor'
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers
  langs:
  - csharp
  - vb
  name: TestHelpers()
  nameWithType: TestHelpers.TestHelpers()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.TestHelpers()
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestHelpers.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestHelpers.cs
    startLine: 19
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: protected TestHelpers()
    content.vb: Protected Sub New
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.Instance
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.Instance
  id: Instance
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: TestHelpers.Instance
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.Instance
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestHelpers.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Instance
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestHelpers.cs
    startLine: 23
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public static TestHelpers Instance { get; }
    content.vb: Public Shared ReadOnly Property Instance As TestHelpers
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateOptions(Microsoft.EntityFrameworkCore.Metadata.IModel,System.IServiceProvider)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateOptions(Microsoft.EntityFrameworkCore.Metadata.IModel,System.IServiceProvider)
  id: CreateOptions(Microsoft.EntityFrameworkCore.Metadata.IModel,System.IServiceProvider)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers
  langs:
  - csharp
  - vb
  name: CreateOptions(IModel, IServiceProvider)
  nameWithType: TestHelpers.CreateOptions(IModel, IServiceProvider)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateOptions(Microsoft.EntityFrameworkCore.Metadata.IModel, System.IServiceProvider)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestHelpers.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateOptions
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestHelpers.cs
    startLine: 25
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public DbContextOptions CreateOptions(IModel model, IServiceProvider serviceProvider = null)
    content.vb: Public Function CreateOptions(model As IModel, serviceProvider As IServiceProvider = Nothing) As DbContextOptions
    parameters:
    - id: model
      type: Microsoft.EntityFrameworkCore.Metadata.IModel
    - id: serviceProvider
      type: System.IServiceProvider
    return:
      type: Microsoft.EntityFrameworkCore.DbContextOptions
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateOptions(System.IServiceProvider)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateOptions(System.IServiceProvider)
  id: CreateOptions(System.IServiceProvider)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers
  langs:
  - csharp
  - vb
  name: CreateOptions(IServiceProvider)
  nameWithType: TestHelpers.CreateOptions(IServiceProvider)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateOptions(System.IServiceProvider)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestHelpers.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateOptions
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestHelpers.cs
    startLine: 35
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public DbContextOptions CreateOptions(IServiceProvider serviceProvider = null)
    content.vb: Public Function CreateOptions(serviceProvider As IServiceProvider = Nothing) As DbContextOptions
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
    return:
      type: Microsoft.EntityFrameworkCore.DbContextOptions
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateServiceProvider(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateServiceProvider(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  id: CreateServiceProvider(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers
  langs:
  - csharp
  - vb
  name: CreateServiceProvider(IServiceCollection)
  nameWithType: TestHelpers.CreateServiceProvider(IServiceCollection)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateServiceProvider(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestHelpers.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateServiceProvider
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestHelpers.cs
    startLine: 45
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public IServiceProvider CreateServiceProvider(IServiceCollection customServices = null)
    content.vb: Public Function CreateServiceProvider(customServices As IServiceCollection = Nothing) As IServiceProvider
    parameters:
    - id: customServices
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    return:
      type: System.IServiceProvider
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.AddProviderServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.AddProviderServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  id: AddProviderServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers
  langs:
  - csharp
  - vb
  name: AddProviderServices(IServiceCollection)
  nameWithType: TestHelpers.AddProviderServices(IServiceCollection)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.AddProviderServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestHelpers.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AddProviderServices
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestHelpers.cs
    startLine: 66
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual IServiceCollection AddProviderServices(IServiceCollection services)
    content.vb: Public Overridable Function AddProviderServices(services As IServiceCollection) As IServiceCollection
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.UseProviderOptions(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.UseProviderOptions(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
  id: UseProviderOptions(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers
  langs:
  - csharp
  - vb
  name: UseProviderOptions(DbContextOptionsBuilder)
  nameWithType: TestHelpers.UseProviderOptions(DbContextOptionsBuilder)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.UseProviderOptions(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestHelpers.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: UseProviderOptions
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestHelpers.cs
    startLine: 68
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: protected virtual void UseProviderOptions(DbContextOptionsBuilder optionsBuilder)
    content.vb: Protected Overridable Sub UseProviderOptions(optionsBuilder As DbContextOptionsBuilder)
    parameters:
    - id: optionsBuilder
      type: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateContext(System.IServiceProvider,Microsoft.EntityFrameworkCore.Metadata.IModel)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateContext(System.IServiceProvider,Microsoft.EntityFrameworkCore.Metadata.IModel)
  id: CreateContext(System.IServiceProvider,Microsoft.EntityFrameworkCore.Metadata.IModel)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers
  langs:
  - csharp
  - vb
  name: CreateContext(IServiceProvider, IModel)
  nameWithType: TestHelpers.CreateContext(IServiceProvider, IModel)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateContext(System.IServiceProvider, Microsoft.EntityFrameworkCore.Metadata.IModel)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestHelpers.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateContext
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestHelpers.cs
    startLine: 70
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public DbContext CreateContext(IServiceProvider serviceProvider, IModel model)
    content.vb: Public Function CreateContext(serviceProvider As IServiceProvider, model As IModel) As DbContext
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
    - id: model
      type: Microsoft.EntityFrameworkCore.Metadata.IModel
    return:
      type: Microsoft.EntityFrameworkCore.DbContext
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateContext(System.IServiceProvider,Microsoft.EntityFrameworkCore.DbContextOptions)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateContext(System.IServiceProvider,Microsoft.EntityFrameworkCore.DbContextOptions)
  id: CreateContext(System.IServiceProvider,Microsoft.EntityFrameworkCore.DbContextOptions)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers
  langs:
  - csharp
  - vb
  name: CreateContext(IServiceProvider, DbContextOptions)
  nameWithType: TestHelpers.CreateContext(IServiceProvider, DbContextOptions)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateContext(System.IServiceProvider, Microsoft.EntityFrameworkCore.DbContextOptions)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestHelpers.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateContext
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestHelpers.cs
    startLine: 73
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public DbContext CreateContext(IServiceProvider serviceProvider, DbContextOptions options)
    content.vb: Public Function CreateContext(serviceProvider As IServiceProvider, options As DbContextOptions) As DbContext
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
    - id: options
      type: Microsoft.EntityFrameworkCore.DbContextOptions
    return:
      type: Microsoft.EntityFrameworkCore.DbContext
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateContext(System.IServiceProvider)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateContext(System.IServiceProvider)
  id: CreateContext(System.IServiceProvider)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers
  langs:
  - csharp
  - vb
  name: CreateContext(IServiceProvider)
  nameWithType: TestHelpers.CreateContext(IServiceProvider)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateContext(System.IServiceProvider)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestHelpers.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateContext
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestHelpers.cs
    startLine: 76
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public DbContext CreateContext(IServiceProvider serviceProvider)
    content.vb: Public Function CreateContext(serviceProvider As IServiceProvider) As DbContext
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
    return:
      type: Microsoft.EntityFrameworkCore.DbContext
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateContext(Microsoft.EntityFrameworkCore.Metadata.IModel)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateContext(Microsoft.EntityFrameworkCore.Metadata.IModel)
  id: CreateContext(Microsoft.EntityFrameworkCore.Metadata.IModel)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers
  langs:
  - csharp
  - vb
  name: CreateContext(IModel)
  nameWithType: TestHelpers.CreateContext(IModel)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateContext(Microsoft.EntityFrameworkCore.Metadata.IModel)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestHelpers.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateContext
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestHelpers.cs
    startLine: 79
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public DbContext CreateContext(IModel model)
    content.vb: Public Function CreateContext(model As IModel) As DbContext
    parameters:
    - id: model
      type: Microsoft.EntityFrameworkCore.Metadata.IModel
    return:
      type: Microsoft.EntityFrameworkCore.DbContext
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateContext(Microsoft.EntityFrameworkCore.DbContextOptions)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateContext(Microsoft.EntityFrameworkCore.DbContextOptions)
  id: CreateContext(Microsoft.EntityFrameworkCore.DbContextOptions)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers
  langs:
  - csharp
  - vb
  name: CreateContext(DbContextOptions)
  nameWithType: TestHelpers.CreateContext(DbContextOptions)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateContext(Microsoft.EntityFrameworkCore.DbContextOptions)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestHelpers.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateContext
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestHelpers.cs
    startLine: 82
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public DbContext CreateContext(DbContextOptions options)
    content.vb: Public Function CreateContext(options As DbContextOptions) As DbContext
    parameters:
    - id: options
      type: Microsoft.EntityFrameworkCore.DbContextOptions
    return:
      type: Microsoft.EntityFrameworkCore.DbContext
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateContext
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateContext
  id: CreateContext
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers
  langs:
  - csharp
  - vb
  name: CreateContext()
  nameWithType: TestHelpers.CreateContext()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateContext()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestHelpers.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateContext
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestHelpers.cs
    startLine: 85
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public DbContext CreateContext()
    content.vb: Public Function CreateContext As DbContext
    return:
      type: Microsoft.EntityFrameworkCore.DbContext
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateContext(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.EntityFrameworkCore.Metadata.IModel)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateContext(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.EntityFrameworkCore.Metadata.IModel)
  id: CreateContext(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.EntityFrameworkCore.Metadata.IModel)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers
  langs:
  - csharp
  - vb
  name: CreateContext(IServiceCollection, IModel)
  nameWithType: TestHelpers.CreateContext(IServiceCollection, IModel)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateContext(Microsoft.Extensions.DependencyInjection.IServiceCollection, Microsoft.EntityFrameworkCore.Metadata.IModel)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestHelpers.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateContext
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestHelpers.cs
    startLine: 88
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public DbContext CreateContext(IServiceCollection customServices, IModel model)
    content.vb: Public Function CreateContext(customServices As IServiceCollection, model As IModel) As DbContext
    parameters:
    - id: customServices
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: model
      type: Microsoft.EntityFrameworkCore.Metadata.IModel
    return:
      type: Microsoft.EntityFrameworkCore.DbContext
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateContext(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.EntityFrameworkCore.DbContextOptions)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateContext(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.EntityFrameworkCore.DbContextOptions)
  id: CreateContext(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.EntityFrameworkCore.DbContextOptions)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers
  langs:
  - csharp
  - vb
  name: CreateContext(IServiceCollection, DbContextOptions)
  nameWithType: TestHelpers.CreateContext(IServiceCollection, DbContextOptions)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateContext(Microsoft.Extensions.DependencyInjection.IServiceCollection, Microsoft.EntityFrameworkCore.DbContextOptions)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestHelpers.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateContext
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestHelpers.cs
    startLine: 91
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public DbContext CreateContext(IServiceCollection customServices, DbContextOptions options)
    content.vb: Public Function CreateContext(customServices As IServiceCollection, options As DbContextOptions) As DbContext
    parameters:
    - id: customServices
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: options
      type: Microsoft.EntityFrameworkCore.DbContextOptions
    return:
      type: Microsoft.EntityFrameworkCore.DbContext
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateContext(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateContext(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  id: CreateContext(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers
  langs:
  - csharp
  - vb
  name: CreateContext(IServiceCollection)
  nameWithType: TestHelpers.CreateContext(IServiceCollection)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateContext(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestHelpers.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateContext
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestHelpers.cs
    startLine: 94
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public DbContext CreateContext(IServiceCollection customServices)
    content.vb: Public Function CreateContext(customServices As IServiceCollection) As DbContext
    parameters:
    - id: customServices
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    return:
      type: Microsoft.EntityFrameworkCore.DbContext
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateContextServices(System.IServiceProvider,Microsoft.EntityFrameworkCore.Metadata.IModel)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateContextServices(System.IServiceProvider,Microsoft.EntityFrameworkCore.Metadata.IModel)
  id: CreateContextServices(System.IServiceProvider,Microsoft.EntityFrameworkCore.Metadata.IModel)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers
  langs:
  - csharp
  - vb
  name: CreateContextServices(IServiceProvider, IModel)
  nameWithType: TestHelpers.CreateContextServices(IServiceProvider, IModel)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateContextServices(System.IServiceProvider, Microsoft.EntityFrameworkCore.Metadata.IModel)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestHelpers.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateContextServices
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestHelpers.cs
    startLine: 97
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public IServiceProvider CreateContextServices(IServiceProvider serviceProvider, IModel model)
    content.vb: Public Function CreateContextServices(serviceProvider As IServiceProvider, model As IModel) As IServiceProvider
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
    - id: model
      type: Microsoft.EntityFrameworkCore.Metadata.IModel
    return:
      type: System.IServiceProvider
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateContextServices(System.IServiceProvider,Microsoft.EntityFrameworkCore.DbContextOptions)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateContextServices(System.IServiceProvider,Microsoft.EntityFrameworkCore.DbContextOptions)
  id: CreateContextServices(System.IServiceProvider,Microsoft.EntityFrameworkCore.DbContextOptions)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers
  langs:
  - csharp
  - vb
  name: CreateContextServices(IServiceProvider, DbContextOptions)
  nameWithType: TestHelpers.CreateContextServices(IServiceProvider, DbContextOptions)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateContextServices(System.IServiceProvider, Microsoft.EntityFrameworkCore.DbContextOptions)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestHelpers.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateContextServices
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestHelpers.cs
    startLine: 100
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public IServiceProvider CreateContextServices(IServiceProvider serviceProvider, DbContextOptions options)
    content.vb: Public Function CreateContextServices(serviceProvider As IServiceProvider, options As DbContextOptions) As IServiceProvider
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
    - id: options
      type: Microsoft.EntityFrameworkCore.DbContextOptions
    return:
      type: System.IServiceProvider
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateContextServices(System.IServiceProvider)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateContextServices(System.IServiceProvider)
  id: CreateContextServices(System.IServiceProvider)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers
  langs:
  - csharp
  - vb
  name: CreateContextServices(IServiceProvider)
  nameWithType: TestHelpers.CreateContextServices(IServiceProvider)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateContextServices(System.IServiceProvider)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestHelpers.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateContextServices
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestHelpers.cs
    startLine: 103
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public IServiceProvider CreateContextServices(IServiceProvider serviceProvider)
    content.vb: Public Function CreateContextServices(serviceProvider As IServiceProvider) As IServiceProvider
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
    return:
      type: System.IServiceProvider
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateContextServices(Microsoft.EntityFrameworkCore.Metadata.IModel)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateContextServices(Microsoft.EntityFrameworkCore.Metadata.IModel)
  id: CreateContextServices(Microsoft.EntityFrameworkCore.Metadata.IModel)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers
  langs:
  - csharp
  - vb
  name: CreateContextServices(IModel)
  nameWithType: TestHelpers.CreateContextServices(IModel)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateContextServices(Microsoft.EntityFrameworkCore.Metadata.IModel)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestHelpers.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateContextServices
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestHelpers.cs
    startLine: 105
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public IServiceProvider CreateContextServices(IModel model)
    content.vb: Public Function CreateContextServices(model As IModel) As IServiceProvider
    parameters:
    - id: model
      type: Microsoft.EntityFrameworkCore.Metadata.IModel
    return:
      type: System.IServiceProvider
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateContextServices(Microsoft.EntityFrameworkCore.DbContextOptions)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateContextServices(Microsoft.EntityFrameworkCore.DbContextOptions)
  id: CreateContextServices(Microsoft.EntityFrameworkCore.DbContextOptions)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers
  langs:
  - csharp
  - vb
  name: CreateContextServices(DbContextOptions)
  nameWithType: TestHelpers.CreateContextServices(DbContextOptions)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateContextServices(Microsoft.EntityFrameworkCore.DbContextOptions)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestHelpers.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateContextServices
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestHelpers.cs
    startLine: 108
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public IServiceProvider CreateContextServices(DbContextOptions options)
    content.vb: Public Function CreateContextServices(options As DbContextOptions) As IServiceProvider
    parameters:
    - id: options
      type: Microsoft.EntityFrameworkCore.DbContextOptions
    return:
      type: System.IServiceProvider
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateContextServices
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateContextServices
  id: CreateContextServices
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers
  langs:
  - csharp
  - vb
  name: CreateContextServices()
  nameWithType: TestHelpers.CreateContextServices()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateContextServices()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestHelpers.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateContextServices
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestHelpers.cs
    startLine: 111
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public IServiceProvider CreateContextServices()
    content.vb: Public Function CreateContextServices As IServiceProvider
    return:
      type: System.IServiceProvider
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateContextServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.EntityFrameworkCore.Metadata.IModel)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateContextServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.EntityFrameworkCore.Metadata.IModel)
  id: CreateContextServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.EntityFrameworkCore.Metadata.IModel)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers
  langs:
  - csharp
  - vb
  name: CreateContextServices(IServiceCollection, IModel)
  nameWithType: TestHelpers.CreateContextServices(IServiceCollection, IModel)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateContextServices(Microsoft.Extensions.DependencyInjection.IServiceCollection, Microsoft.EntityFrameworkCore.Metadata.IModel)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestHelpers.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateContextServices
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestHelpers.cs
    startLine: 114
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public IServiceProvider CreateContextServices(IServiceCollection customServices, IModel model)
    content.vb: Public Function CreateContextServices(customServices As IServiceCollection, model As IModel) As IServiceProvider
    parameters:
    - id: customServices
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: model
      type: Microsoft.EntityFrameworkCore.Metadata.IModel
    return:
      type: System.IServiceProvider
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateContextServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.EntityFrameworkCore.DbContextOptions)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateContextServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.EntityFrameworkCore.DbContextOptions)
  id: CreateContextServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.EntityFrameworkCore.DbContextOptions)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers
  langs:
  - csharp
  - vb
  name: CreateContextServices(IServiceCollection, DbContextOptions)
  nameWithType: TestHelpers.CreateContextServices(IServiceCollection, DbContextOptions)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateContextServices(Microsoft.Extensions.DependencyInjection.IServiceCollection, Microsoft.EntityFrameworkCore.DbContextOptions)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestHelpers.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateContextServices
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestHelpers.cs
    startLine: 117
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public IServiceProvider CreateContextServices(IServiceCollection customServices, DbContextOptions options)
    content.vb: Public Function CreateContextServices(customServices As IServiceCollection, options As DbContextOptions) As IServiceProvider
    parameters:
    - id: customServices
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: options
      type: Microsoft.EntityFrameworkCore.DbContextOptions
    return:
      type: System.IServiceProvider
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateContextServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateContextServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  id: CreateContextServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers
  langs:
  - csharp
  - vb
  name: CreateContextServices(IServiceCollection)
  nameWithType: TestHelpers.CreateContextServices(IServiceCollection)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateContextServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestHelpers.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateContextServices
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestHelpers.cs
    startLine: 120
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public IServiceProvider CreateContextServices(IServiceCollection customServices)
    content.vb: Public Function CreateContextServices(customServices As IServiceCollection) As IServiceProvider
    parameters:
    - id: customServices
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    return:
      type: System.IServiceProvider
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.BuildModelFor``1
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.BuildModelFor``1
  id: BuildModelFor``1
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers
  langs:
  - csharp
  - vb
  name: BuildModelFor<TEntity>()
  nameWithType: TestHelpers.BuildModelFor<TEntity>()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.BuildModelFor<TEntity>()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestHelpers.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: BuildModelFor
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestHelpers.cs
    startLine: 123
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: 'public IMutableModel BuildModelFor<TEntity>()where TEntity : class'
    content.vb: Public Function BuildModelFor(Of TEntity As Class) As IMutableModel
    typeParameters:
    - id: TEntity
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.IMutableModel
  nameWithType.vb: TestHelpers.BuildModelFor(Of TEntity)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.BuildModelFor(Of TEntity)()
  name.vb: BuildModelFor(Of TEntity)()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateConventionBuilder
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateConventionBuilder
  id: CreateConventionBuilder
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers
  langs:
  - csharp
  - vb
  name: CreateConventionBuilder()
  nameWithType: TestHelpers.CreateConventionBuilder()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateConventionBuilder()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestHelpers.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateConventionBuilder
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestHelpers.cs
    startLine: 130
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public ModelBuilder CreateConventionBuilder()
    content.vb: Public Function CreateConventionBuilder As ModelBuilder
    return:
      type: Microsoft.EntityFrameworkCore.ModelBuilder
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateInternalEntry``1(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.EntityState,``0)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateInternalEntry``1(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.EntityState,``0)
  id: CreateInternalEntry``1(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.EntityState,``0)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers
  langs:
  - csharp
  - vb
  name: CreateInternalEntry<TEntity>(IModel, EntityState, TEntity)
  nameWithType: TestHelpers.CreateInternalEntry<TEntity>(IModel, EntityState, TEntity)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateInternalEntry<TEntity>(Microsoft.EntityFrameworkCore.Metadata.IModel, Microsoft.EntityFrameworkCore.EntityState, TEntity)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestHelpers.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateInternalEntry
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestHelpers.cs
    startLine: 142
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: 'public InternalEntityEntry CreateInternalEntry<TEntity>(IModel model, EntityState entityState = EntityState.Detached, TEntity entity = null)where TEntity : class, new ()'
    content.vb: Public Function CreateInternalEntry(Of TEntity As {Class, New})(model As IModel, entityState As EntityState = EntityState.Detached, entity As TEntity = Nothing) As InternalEntityEntry
    parameters:
    - id: model
      type: Microsoft.EntityFrameworkCore.Metadata.IModel
    - id: entityState
      type: Microsoft.EntityFrameworkCore.EntityState
    - id: entity
      type: '{TEntity}'
    typeParameters:
    - id: TEntity
    return:
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  nameWithType.vb: TestHelpers.CreateInternalEntry(Of TEntity)(IModel, EntityState, TEntity)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.CreateInternalEntry(Of TEntity)(Microsoft.EntityFrameworkCore.Metadata.IModel, Microsoft.EntityFrameworkCore.EntityState, TEntity)
  name.vb: CreateInternalEntry(Of TEntity)(IModel, EntityState, TEntity)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.AssertResults``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IList{``0},System.Boolean,System.Action{System.Collections.Generic.IList{``0},System.Collections.Generic.IList{``0}})
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.AssertResults``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IList{``0},System.Boolean,System.Action{System.Collections.Generic.IList{``0},System.Collections.Generic.IList{``0}})
  id: AssertResults``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IList{``0},System.Boolean,System.Action{System.Collections.Generic.IList{``0},System.Collections.Generic.IList{``0}})
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers
  langs:
  - csharp
  - vb
  name: AssertResults<T>(IList<T>, IList<T>, Boolean, Action<IList<T>, IList<T>>)
  nameWithType: TestHelpers.AssertResults<T>(IList<T>, IList<T>, Boolean, Action<IList<T>, IList<T>>)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.AssertResults<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IList<T>, System.Boolean, System.Action<System.Collections.Generic.IList<T>, System.Collections.Generic.IList<T>>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestHelpers.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AssertResults
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestHelpers.cs
    startLine: 155
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public static int AssertResults<T>(IList<T> expected, IList<T> actual, bool assertOrder, Action<IList<T>, IList<T>> asserter = null)
    content.vb: Public Shared Function AssertResults(Of T)(expected As IList(Of T), actual As IList(Of T), assertOrder As Boolean, asserter As Action(Of IList(Of T), IList(Of T)) = Nothing) As Integer
    parameters:
    - id: expected
      type: System.Collections.Generic.IList{{T}}
    - id: actual
      type: System.Collections.Generic.IList{{T}}
    - id: assertOrder
      type: System.Boolean
    - id: asserter
      type: System.Action{System.Collections.Generic.IList{{T}},System.Collections.Generic.IList{{T}}}
    typeParameters:
    - id: T
    return:
      type: System.Int32
  nameWithType.vb: TestHelpers.AssertResults(Of T)(IList(Of T), IList(Of T), Boolean, Action(Of IList(Of T), IList(Of T)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers.AssertResults(Of T)(System.Collections.Generic.IList(Of T), System.Collections.Generic.IList(Of T), System.Boolean, System.Action(Of System.Collections.Generic.IList(Of T), System.Collections.Generic.IList(Of T)))
  name.vb: AssertResults(Of T)(IList(Of T), IList(Of T), Boolean, Action(Of IList(Of T), IList(Of T)))
references:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests
  commentId: N:Microsoft.EntityFrameworkCore.Specification.Tests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Specification.Tests
  nameWithType: Microsoft.EntityFrameworkCore.Specification.Tests
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers
  parent: Microsoft.EntityFrameworkCore.Specification.Tests
  isExternal: false
  name: TestHelpers
  nameWithType: TestHelpers
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers
- uid: Microsoft.EntityFrameworkCore.Metadata.IModel
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IModel
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IModel
  nameWithType: IModel
  fullName: Microsoft.EntityFrameworkCore.Metadata.IModel
- uid: System.IServiceProvider
  commentId: T:System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: Microsoft.EntityFrameworkCore.DbContextOptions
  commentId: T:Microsoft.EntityFrameworkCore.DbContextOptions
  parent: Microsoft.EntityFrameworkCore
  isExternal: false
  name: DbContextOptions
  nameWithType: DbContextOptions
  fullName: Microsoft.EntityFrameworkCore.DbContextOptions
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: Microsoft.EntityFrameworkCore
  commentId: N:Microsoft.EntityFrameworkCore
  isExternal: false
  name: Microsoft.EntityFrameworkCore
  nameWithType: Microsoft.EntityFrameworkCore
  fullName: Microsoft.EntityFrameworkCore
- uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
  commentId: T:Microsoft.Extensions.DependencyInjection.IServiceCollection
  parent: Microsoft.Extensions.DependencyInjection
  isExternal: true
  name: IServiceCollection
  nameWithType: IServiceCollection
  fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
- uid: Microsoft.Extensions.DependencyInjection
  commentId: N:Microsoft.Extensions.DependencyInjection
  isExternal: false
  name: Microsoft.Extensions.DependencyInjection
  nameWithType: Microsoft.Extensions.DependencyInjection
  fullName: Microsoft.Extensions.DependencyInjection
- uid: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder
  commentId: T:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder
  parent: Microsoft.EntityFrameworkCore
  isExternal: false
  name: DbContextOptionsBuilder
  nameWithType: DbContextOptionsBuilder
  fullName: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder
- uid: Microsoft.EntityFrameworkCore.DbContext
  commentId: T:Microsoft.EntityFrameworkCore.DbContext
  parent: Microsoft.EntityFrameworkCore
  isExternal: false
  name: DbContext
  nameWithType: DbContext
  fullName: Microsoft.EntityFrameworkCore.DbContext
- uid: Microsoft.EntityFrameworkCore.Metadata.IMutableModel
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IMutableModel
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IMutableModel
  nameWithType: IMutableModel
  fullName: Microsoft.EntityFrameworkCore.Metadata.IMutableModel
- uid: Microsoft.EntityFrameworkCore.ModelBuilder
  commentId: T:Microsoft.EntityFrameworkCore.ModelBuilder
  parent: Microsoft.EntityFrameworkCore
  isExternal: false
  name: ModelBuilder
  nameWithType: ModelBuilder
  fullName: Microsoft.EntityFrameworkCore.ModelBuilder
- uid: Microsoft.EntityFrameworkCore.EntityState
  commentId: T:Microsoft.EntityFrameworkCore.EntityState
  parent: Microsoft.EntityFrameworkCore
  isExternal: false
  name: EntityState
  nameWithType: EntityState
  fullName: Microsoft.EntityFrameworkCore.EntityState
- uid: '{TEntity}'
  commentId: '!:TEntity'
  definition: TEntity
  name: TEntity
  nameWithType: TEntity
  fullName: TEntity
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  isExternal: false
  name: InternalEntityEntry
  nameWithType: InternalEntityEntry
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
- uid: TEntity
  isExternal: false
  name: TEntity
  nameWithType: TEntity
  fullName: TEntity
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  commentId: N:Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  nameWithType: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
- uid: System.Collections.Generic.IList{{T}}
  commentId: T:System.Collections.Generic.IList{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Action{System.Collections.Generic.IList{{T}},System.Collections.Generic.IList{{T}}}
  commentId: T:System.Action{System.Collections.Generic.IList{``0},System.Collections.Generic.IList{``0}}
  parent: System
  definition: System.Action`2
  name: Action<IList<T>, IList<T>>
  nameWithType: Action<IList<T>, IList<T>>
  fullName: System.Action<System.Collections.Generic.IList<T>, System.Collections.Generic.IList<T>>
  nameWithType.vb: Action(Of IList(Of T), IList(Of T))
  fullname.vb: System.Action(Of System.Collections.Generic.IList(Of T), System.Collections.Generic.IList(Of T))
  name.vb: Action(Of IList(Of T), IList(Of T))
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullname.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: )
    nameWithType: )
    fullName: )
