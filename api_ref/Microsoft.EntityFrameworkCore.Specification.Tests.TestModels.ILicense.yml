### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense
  id: ILicense
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  children:
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.Driver
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.ExpirationDate
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.LicenseClass
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.LicenseNumber
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.Name
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.Restrictions
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.State
  langs:
  - csharp
  - vb
  name: ILicense
  nameWithType: ILicense
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense
  type: Interface
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterModel.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ILicense
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterModel.cs
    startLine: 117
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  syntax:
    content: public interface ILicense
    content.vb: Public Interface ILicense
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.Name
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.Name
  id: Name
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ILicense.Name
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.Name
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterModel.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Name
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterModel.cs
    startLine: 119
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  syntax:
    content: string Name { get; set; }
    content.vb: Property Name As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - get
  - set
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.LicenseNumber
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.LicenseNumber
  id: LicenseNumber
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense
  langs:
  - csharp
  - vb
  name: LicenseNumber
  nameWithType: ILicense.LicenseNumber
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.LicenseNumber
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterModel.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: LicenseNumber
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterModel.cs
    startLine: 120
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  syntax:
    content: string LicenseNumber { get; set; }
    content.vb: Property LicenseNumber As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - get
  - set
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.LicenseClass
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.LicenseClass
  id: LicenseClass
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense
  langs:
  - csharp
  - vb
  name: LicenseClass
  nameWithType: ILicense.LicenseClass
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.LicenseClass
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterModel.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: LicenseClass
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterModel.cs
    startLine: 121
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  syntax:
    content: string LicenseClass { get; set; }
    content.vb: Property LicenseClass As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - get
  - set
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.Restrictions
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.Restrictions
  id: Restrictions
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense
  langs:
  - csharp
  - vb
  name: Restrictions
  nameWithType: ILicense.Restrictions
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.Restrictions
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterModel.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Restrictions
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterModel.cs
    startLine: 122
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  syntax:
    content: string Restrictions { get; set; }
    content.vb: Property Restrictions As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - get
  - set
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.ExpirationDate
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.ExpirationDate
  id: ExpirationDate
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense
  langs:
  - csharp
  - vb
  name: ExpirationDate
  nameWithType: ILicense.ExpirationDate
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.ExpirationDate
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterModel.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ExpirationDate
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterModel.cs
    startLine: 123
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  syntax:
    content: DateTime ExpirationDate { get; set; }
    content.vb: Property ExpirationDate As Date
    parameters: []
    return:
      type: System.DateTime
  modifiers.csharp:
  - get
  - set
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.State
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.State
  id: State
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense
  langs:
  - csharp
  - vb
  name: State
  nameWithType: ILicense.State
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.State
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterModel.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: State
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterModel.cs
    startLine: 124
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  syntax:
    content: LicenseState? State { get; set; }
    content.vb: Property State As LicenseState?
    parameters: []
    return:
      type: System.Nullable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.LicenseState}
  modifiers.csharp:
  - get
  - set
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.Driver
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.Driver
  id: Driver
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense
  langs:
  - csharp
  - vb
  name: Driver
  nameWithType: ILicense.Driver
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.Driver
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterModel.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Driver
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterModel.cs
    startLine: 125
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  syntax:
    content: IDriver Driver { get; set; }
    content.vb: Property Driver As IDriver
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IDriver
  modifiers.csharp:
  - get
  - set
references:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  commentId: N:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  nameWithType: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<ILicense, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<ILicense, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of ILicense, TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense, TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of ILicense, TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<ILicense, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<ILicense, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of ILicense, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of ILicense, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Nullable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.LicenseState}
  commentId: T:System.Nullable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.LicenseState}
  parent: System
  definition: System.Nullable`1
  name: Nullable<LicenseState>
  nameWithType: Nullable<LicenseState>
  fullName: System.Nullable<Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.LicenseState>
  nameWithType.vb: Nullable(Of LicenseState)
  fullname.vb: System.Nullable(Of Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.LicenseState)
  name.vb: Nullable(Of LicenseState)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.LicenseState
    name: LicenseState
    nameWithType: LicenseState
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.LicenseState
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.LicenseState
    name: LicenseState
    nameWithType: LicenseState
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.LicenseState
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IDriver
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IDriver
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  isExternal: false
  name: IDriver
  nameWithType: IDriver
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IDriver
