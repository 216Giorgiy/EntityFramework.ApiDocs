### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense
  id: ILicense
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  children:
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.Driver
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.ExpirationDate
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.LicenseClass
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.LicenseNumber
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.Name
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.Restrictions
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.State
  langs:
  - csharp
  - vb
  name: ILicense
  nameWithType: ILicense
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense
  type: Interface
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterModel.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ILicense
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterModel.cs
    startLine: 117
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  syntax:
    content: public interface ILicense
    content.vb: Public Interface ILicense
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.Name
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.Name
  id: Name
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ILicense.Name
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.Name
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterModel.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Name
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterModel.cs
    startLine: 119
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  syntax:
    content: string Name { get; set; }
    content.vb: Property Name As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.Name*
  modifiers.csharp:
  - get
  - set
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.LicenseNumber
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.LicenseNumber
  id: LicenseNumber
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense
  langs:
  - csharp
  - vb
  name: LicenseNumber
  nameWithType: ILicense.LicenseNumber
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.LicenseNumber
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterModel.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: LicenseNumber
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterModel.cs
    startLine: 120
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  syntax:
    content: string LicenseNumber { get; set; }
    content.vb: Property LicenseNumber As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.LicenseNumber*
  modifiers.csharp:
  - get
  - set
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.LicenseClass
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.LicenseClass
  id: LicenseClass
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense
  langs:
  - csharp
  - vb
  name: LicenseClass
  nameWithType: ILicense.LicenseClass
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.LicenseClass
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterModel.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: LicenseClass
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterModel.cs
    startLine: 121
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  syntax:
    content: string LicenseClass { get; set; }
    content.vb: Property LicenseClass As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.LicenseClass*
  modifiers.csharp:
  - get
  - set
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.Restrictions
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.Restrictions
  id: Restrictions
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense
  langs:
  - csharp
  - vb
  name: Restrictions
  nameWithType: ILicense.Restrictions
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.Restrictions
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterModel.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Restrictions
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterModel.cs
    startLine: 122
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  syntax:
    content: string Restrictions { get; set; }
    content.vb: Property Restrictions As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.Restrictions*
  modifiers.csharp:
  - get
  - set
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.ExpirationDate
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.ExpirationDate
  id: ExpirationDate
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense
  langs:
  - csharp
  - vb
  name: ExpirationDate
  nameWithType: ILicense.ExpirationDate
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.ExpirationDate
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterModel.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ExpirationDate
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterModel.cs
    startLine: 123
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  syntax:
    content: DateTime ExpirationDate { get; set; }
    content.vb: Property ExpirationDate As Date
    parameters: []
    return:
      type: System.DateTime
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.ExpirationDate*
  modifiers.csharp:
  - get
  - set
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.State
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.State
  id: State
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense
  langs:
  - csharp
  - vb
  name: State
  nameWithType: ILicense.State
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.State
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterModel.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: State
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterModel.cs
    startLine: 124
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  syntax:
    content: LicenseState? State { get; set; }
    content.vb: Property State As LicenseState?
    parameters: []
    return:
      type: System.Nullable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.LicenseState}
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.State*
  modifiers.csharp:
  - get
  - set
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.Driver
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.Driver
  id: Driver
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense
  langs:
  - csharp
  - vb
  name: Driver
  nameWithType: ILicense.Driver
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.Driver
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterModel.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Driver
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterModel.cs
    startLine: 125
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  syntax:
    content: IDriver Driver { get; set; }
    content.vb: Property Driver As IDriver
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IDriver
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.Driver*
  modifiers.csharp:
  - get
  - set
references:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  commentId: N:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  nameWithType: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.Name*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.Name
  isExternal: false
  name: Name
  nameWithType: ILicense.Name
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.LicenseNumber*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.LicenseNumber
  isExternal: false
  name: LicenseNumber
  nameWithType: ILicense.LicenseNumber
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.LicenseNumber
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.LicenseClass*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.LicenseClass
  isExternal: false
  name: LicenseClass
  nameWithType: ILicense.LicenseClass
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.LicenseClass
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.Restrictions*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.Restrictions
  isExternal: false
  name: Restrictions
  nameWithType: ILicense.Restrictions
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.Restrictions
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.ExpirationDate*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.ExpirationDate
  isExternal: false
  name: ExpirationDate
  nameWithType: ILicense.ExpirationDate
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.ExpirationDate
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.State*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.State
  isExternal: false
  name: State
  nameWithType: ILicense.State
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.State
- uid: System.Nullable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.LicenseState}
  commentId: T:System.Nullable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.LicenseState}
  parent: System
  definition: System.Nullable`1
  name: Nullable<LicenseState>
  nameWithType: Nullable<LicenseState>
  fullName: System.Nullable<Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.LicenseState>
  nameWithType.vb: Nullable(Of LicenseState)
  fullname.vb: System.Nullable(Of Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.LicenseState)
  name.vb: Nullable(Of LicenseState)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.LicenseState
    name: LicenseState
    nameWithType: LicenseState
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.LicenseState
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.LicenseState
    name: LicenseState
    nameWithType: LicenseState
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.LicenseState
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.Driver*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.Driver
  isExternal: false
  name: Driver
  nameWithType: ILicense.Driver
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILicense.Driver
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IDriver
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IDriver
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  isExternal: false
  name: IDriver
  nameWithType: IDriver
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IDriver
