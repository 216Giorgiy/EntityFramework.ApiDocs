### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  id: LoadTestBase`2
  parent: Microsoft.EntityFrameworkCore.Specification.Tests
  children:
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.#ctor(`1)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Can_change_IsLoaded_flag_for_collection
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Can_change_IsLoaded_flag_for_reference_only_if_null
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.ClearLog
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.CreateContext
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Dispose
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Fixture
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_collection(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_collection_already_loaded(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_collection_already_loaded_untyped(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_collection_alternate_key(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_collection_composite_key(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_collection_not_found(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_collection_not_found_untyped(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_collection_shadow_fk(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_collection_untyped(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_collection_using_Query(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_collection_using_Query_already_loaded(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_collection_using_Query_already_loaded_untyped(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_collection_using_Query_alternate_key(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_collection_using_Query_composite_key(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_collection_using_Query_not_found(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_collection_using_Query_not_found_untyped(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_collection_using_Query_shadow_fk(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_collection_using_Query_untyped(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_already_loaded(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_already_loaded_untyped(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_alternate_key(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_composite_key(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_not_found(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_not_found_untyped(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_null_FK(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_null_FK_alternate_key(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_null_FK_composite_key(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_null_FK_shadow_fk(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_shadow_fk(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_untyped(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_using_Query(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_using_Query_already_loaded(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_using_Query_already_loaded_untyped(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_using_Query_alternate_key(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_using_Query_composite_key(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_using_Query_not_found(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_using_Query_not_found_untyped(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_using_Query_null_FK(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_using_Query_null_FK_alternate_key(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_using_Query_null_FK_composite_key(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_using_Query_null_FK_shadow_fk(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_using_Query_shadow_fk(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_using_Query_untyped(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_PK_to_PK_reference_to_dependent(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_PK_to_PK_reference_to_dependent_already_loaded(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_PK_to_PK_reference_to_dependent_using_Query(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_PK_to_PK_reference_to_dependent_using_Query_already_loaded(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_PK_to_PK_reference_to_principal(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_PK_to_PK_reference_to_principal_already_loaded(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_PK_to_PK_reference_to_principal_using_Query(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_PK_to_PK_reference_to_principal_using_Query_already_loaded(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_dependent(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_dependent_already_loaded(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_dependent_already_loaded_untyped(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_dependent_alternate_key(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_dependent_composite_key(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_dependent_not_found(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_dependent_not_found_untyped(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_dependent_shadow_fk(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_dependent_untyped(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_dependent_using_Query(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_dependent_using_Query_already_loaded(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_dependent_using_Query_already_loaded_untyped(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_dependent_using_Query_alternate_key(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_dependent_using_Query_composite_key(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_dependent_using_Query_not_found(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_dependent_using_Query_not_found_untyped(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_dependent_using_Query_shadow_fk(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_dependent_using_Query_untyped(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_already_loaded(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_already_loaded_untyped(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_alternate_key(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_composite_key(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_not_found(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_not_found_untyped(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_null_FK(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_null_FK_alternate_key(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_null_FK_composite_key(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_null_FK_shadow_fk(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_shadow_fk(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_untyped(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_using_Query(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_using_Query_already_loaded(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_using_Query_already_loaded_untyped(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_using_Query_alternate_key(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_using_Query_composite_key(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_using_Query_not_found(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_using_Query_not_found_untyped(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_using_Query_null_FK(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_using_Query_null_FK_alternate_key(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_using_Query_null_FK_composite_key(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_using_Query_null_FK_shadow_fk(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_using_Query_shadow_fk(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_using_Query_untyped(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.RecordLog
  - Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.TestStore
  langs:
  - csharp
  - vb
  name: LoadTestBase<TTestStore, TFixture>
  nameWithType: LoadTestBase<TTestStore, TFixture>
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: LoadTestBase
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 13
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: 'public abstract class LoadTestBase<TTestStore, TFixture> : IClassFixture<TFixture>, IDisposable where TTestStore : TestStore where TFixture : LoadTestBase<TTestStore, TFixture>.LoadFixtureBase'
    content.vb: >-
      Public MustInherit Class LoadTestBase(Of TTestStore As TestStore, TFixture As LoadTestBase(Of TTestStore, TFixture).LoadFixtureBase)
          Implements IClassFixture(Of TFixture), IDisposable
    typeParameters:
    - id: TTestStore
    - id: TFixture
  inheritance:
  - System.Object
  implements:
  - Xunit.IClassFixture{{TFixture}}
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture)
  name.vb: LoadTestBase(Of TTestStore, TFixture)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_collection(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_collection(System.Boolean)
  id: Load_collection(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_collection(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_collection(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_collection(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_collection
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 17
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_collection(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_collection(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_collection(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_collection(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal(System.Boolean)
  id: Load_many_to_one_reference_to_principal(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_many_to_one_reference_to_principal(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_many_to_one_reference_to_principal(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_many_to_one_reference_to_principal(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_many_to_one_reference_to_principal
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 52
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_many_to_one_reference_to_principal(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_many_to_one_reference_to_principal(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_many_to_one_reference_to_principal(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_many_to_one_reference_to_principal(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal(System.Boolean)
  id: Load_one_to_one_reference_to_principal(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_one_to_one_reference_to_principal(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_principal(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_principal(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_one_to_one_reference_to_principal
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 89
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_one_to_one_reference_to_principal(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_one_to_one_reference_to_principal(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_principal(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_principal(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_dependent(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_dependent(System.Boolean)
  id: Load_one_to_one_reference_to_dependent(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_one_to_one_reference_to_dependent(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_dependent(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_dependent(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_one_to_one_reference_to_dependent
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 126
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_one_to_one_reference_to_dependent(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_one_to_one_reference_to_dependent(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_dependent(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_dependent(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_PK_to_PK_reference_to_principal(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_PK_to_PK_reference_to_principal(System.Boolean)
  id: Load_one_to_one_PK_to_PK_reference_to_principal(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_one_to_one_PK_to_PK_reference_to_principal(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_one_to_one_PK_to_PK_reference_to_principal(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_one_to_one_PK_to_PK_reference_to_principal(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_one_to_one_PK_to_PK_reference_to_principal
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 163
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_one_to_one_PK_to_PK_reference_to_principal(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_one_to_one_PK_to_PK_reference_to_principal(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_PK_to_PK_reference_to_principal(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_PK_to_PK_reference_to_principal(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_PK_to_PK_reference_to_dependent(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_PK_to_PK_reference_to_dependent(System.Boolean)
  id: Load_one_to_one_PK_to_PK_reference_to_dependent(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_one_to_one_PK_to_PK_reference_to_dependent(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_one_to_one_PK_to_PK_reference_to_dependent(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_one_to_one_PK_to_PK_reference_to_dependent(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_one_to_one_PK_to_PK_reference_to_dependent
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 200
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_one_to_one_PK_to_PK_reference_to_dependent(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_one_to_one_PK_to_PK_reference_to_dependent(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_PK_to_PK_reference_to_dependent(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_PK_to_PK_reference_to_dependent(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_collection_using_Query(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_collection_using_Query(System.Boolean)
  id: Load_collection_using_Query(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_collection_using_Query(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_collection_using_Query(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_collection_using_Query(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_collection_using_Query
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 237
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_collection_using_Query(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_collection_using_Query(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_collection_using_Query(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_collection_using_Query(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_using_Query(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_using_Query(System.Boolean)
  id: Load_many_to_one_reference_to_principal_using_Query(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_many_to_one_reference_to_principal_using_Query(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_many_to_one_reference_to_principal_using_Query(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_many_to_one_reference_to_principal_using_Query(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_many_to_one_reference_to_principal_using_Query
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 269
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_many_to_one_reference_to_principal_using_Query(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_many_to_one_reference_to_principal_using_Query(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_many_to_one_reference_to_principal_using_Query(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_many_to_one_reference_to_principal_using_Query(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_using_Query(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_using_Query(System.Boolean)
  id: Load_one_to_one_reference_to_principal_using_Query(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_one_to_one_reference_to_principal_using_Query(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_principal_using_Query(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_principal_using_Query(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_one_to_one_reference_to_principal_using_Query
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 300
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_one_to_one_reference_to_principal_using_Query(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_one_to_one_reference_to_principal_using_Query(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_principal_using_Query(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_principal_using_Query(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_dependent_using_Query(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_dependent_using_Query(System.Boolean)
  id: Load_one_to_one_reference_to_dependent_using_Query(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_one_to_one_reference_to_dependent_using_Query(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_dependent_using_Query(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_dependent_using_Query(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_one_to_one_reference_to_dependent_using_Query
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 331
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_one_to_one_reference_to_dependent_using_Query(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_one_to_one_reference_to_dependent_using_Query(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_dependent_using_Query(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_dependent_using_Query(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_PK_to_PK_reference_to_principal_using_Query(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_PK_to_PK_reference_to_principal_using_Query(System.Boolean)
  id: Load_one_to_one_PK_to_PK_reference_to_principal_using_Query(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_one_to_one_PK_to_PK_reference_to_principal_using_Query(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_one_to_one_PK_to_PK_reference_to_principal_using_Query(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_one_to_one_PK_to_PK_reference_to_principal_using_Query(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_one_to_one_PK_to_PK_reference_to_principal_using_Query
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 362
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_one_to_one_PK_to_PK_reference_to_principal_using_Query(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_one_to_one_PK_to_PK_reference_to_principal_using_Query(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_PK_to_PK_reference_to_principal_using_Query(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_PK_to_PK_reference_to_principal_using_Query(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_PK_to_PK_reference_to_dependent_using_Query(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_PK_to_PK_reference_to_dependent_using_Query(System.Boolean)
  id: Load_one_to_one_PK_to_PK_reference_to_dependent_using_Query(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_one_to_one_PK_to_PK_reference_to_dependent_using_Query(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_one_to_one_PK_to_PK_reference_to_dependent_using_Query(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_one_to_one_PK_to_PK_reference_to_dependent_using_Query(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_one_to_one_PK_to_PK_reference_to_dependent_using_Query
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 393
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_one_to_one_PK_to_PK_reference_to_dependent_using_Query(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_one_to_one_PK_to_PK_reference_to_dependent_using_Query(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_PK_to_PK_reference_to_dependent_using_Query(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_PK_to_PK_reference_to_dependent_using_Query(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_null_FK(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_null_FK(System.Boolean)
  id: Load_many_to_one_reference_to_principal_null_FK(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_many_to_one_reference_to_principal_null_FK(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_many_to_one_reference_to_principal_null_FK(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_many_to_one_reference_to_principal_null_FK(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_many_to_one_reference_to_principal_null_FK
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 424
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_many_to_one_reference_to_principal_null_FK(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_many_to_one_reference_to_principal_null_FK(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_many_to_one_reference_to_principal_null_FK(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_many_to_one_reference_to_principal_null_FK(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_null_FK(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_null_FK(System.Boolean)
  id: Load_one_to_one_reference_to_principal_null_FK(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_one_to_one_reference_to_principal_null_FK(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_principal_null_FK(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_principal_null_FK(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_one_to_one_reference_to_principal_null_FK
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 457
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_one_to_one_reference_to_principal_null_FK(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_one_to_one_reference_to_principal_null_FK(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_principal_null_FK(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_principal_null_FK(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_using_Query_null_FK(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_using_Query_null_FK(System.Boolean)
  id: Load_many_to_one_reference_to_principal_using_Query_null_FK(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_many_to_one_reference_to_principal_using_Query_null_FK(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_many_to_one_reference_to_principal_using_Query_null_FK(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_many_to_one_reference_to_principal_using_Query_null_FK(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_many_to_one_reference_to_principal_using_Query_null_FK
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 491
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_many_to_one_reference_to_principal_using_Query_null_FK(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_many_to_one_reference_to_principal_using_Query_null_FK(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_many_to_one_reference_to_principal_using_Query_null_FK(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_many_to_one_reference_to_principal_using_Query_null_FK(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_using_Query_null_FK(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_using_Query_null_FK(System.Boolean)
  id: Load_one_to_one_reference_to_principal_using_Query_null_FK(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_one_to_one_reference_to_principal_using_Query_null_FK(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_principal_using_Query_null_FK(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_principal_using_Query_null_FK(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_one_to_one_reference_to_principal_using_Query_null_FK
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 521
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_one_to_one_reference_to_principal_using_Query_null_FK(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_one_to_one_reference_to_principal_using_Query_null_FK(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_principal_using_Query_null_FK(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_principal_using_Query_null_FK(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_collection_not_found(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_collection_not_found(System.Boolean)
  id: Load_collection_not_found(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_collection_not_found(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_collection_not_found(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_collection_not_found(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_collection_not_found
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 551
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_collection_not_found(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_collection_not_found(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_collection_not_found(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_collection_not_found(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_not_found(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_not_found(System.Boolean)
  id: Load_many_to_one_reference_to_principal_not_found(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_many_to_one_reference_to_principal_not_found(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_many_to_one_reference_to_principal_not_found(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_many_to_one_reference_to_principal_not_found(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_many_to_one_reference_to_principal_not_found
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 584
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_many_to_one_reference_to_principal_not_found(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_many_to_one_reference_to_principal_not_found(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_many_to_one_reference_to_principal_not_found(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_many_to_one_reference_to_principal_not_found(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_not_found(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_not_found(System.Boolean)
  id: Load_one_to_one_reference_to_principal_not_found(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_one_to_one_reference_to_principal_not_found(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_principal_not_found(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_principal_not_found(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_one_to_one_reference_to_principal_not_found
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 617
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_one_to_one_reference_to_principal_not_found(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_one_to_one_reference_to_principal_not_found(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_principal_not_found(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_principal_not_found(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_dependent_not_found(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_dependent_not_found(System.Boolean)
  id: Load_one_to_one_reference_to_dependent_not_found(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_one_to_one_reference_to_dependent_not_found(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_dependent_not_found(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_dependent_not_found(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_one_to_one_reference_to_dependent_not_found
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 651
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_one_to_one_reference_to_dependent_not_found(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_one_to_one_reference_to_dependent_not_found(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_dependent_not_found(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_dependent_not_found(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_collection_using_Query_not_found(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_collection_using_Query_not_found(System.Boolean)
  id: Load_collection_using_Query_not_found(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_collection_using_Query_not_found(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_collection_using_Query_not_found(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_collection_using_Query_not_found(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_collection_using_Query_not_found
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 685
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_collection_using_Query_not_found(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_collection_using_Query_not_found(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_collection_using_Query_not_found(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_collection_using_Query_not_found(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_using_Query_not_found(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_using_Query_not_found(System.Boolean)
  id: Load_many_to_one_reference_to_principal_using_Query_not_found(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_many_to_one_reference_to_principal_using_Query_not_found(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_many_to_one_reference_to_principal_using_Query_not_found(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_many_to_one_reference_to_principal_using_Query_not_found(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_many_to_one_reference_to_principal_using_Query_not_found
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 715
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_many_to_one_reference_to_principal_using_Query_not_found(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_many_to_one_reference_to_principal_using_Query_not_found(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_many_to_one_reference_to_principal_using_Query_not_found(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_many_to_one_reference_to_principal_using_Query_not_found(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_using_Query_not_found(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_using_Query_not_found(System.Boolean)
  id: Load_one_to_one_reference_to_principal_using_Query_not_found(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_one_to_one_reference_to_principal_using_Query_not_found(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_principal_using_Query_not_found(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_principal_using_Query_not_found(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_one_to_one_reference_to_principal_using_Query_not_found
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 745
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_one_to_one_reference_to_principal_using_Query_not_found(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_one_to_one_reference_to_principal_using_Query_not_found(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_principal_using_Query_not_found(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_principal_using_Query_not_found(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_dependent_using_Query_not_found(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_dependent_using_Query_not_found(System.Boolean)
  id: Load_one_to_one_reference_to_dependent_using_Query_not_found(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_one_to_one_reference_to_dependent_using_Query_not_found(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_dependent_using_Query_not_found(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_dependent_using_Query_not_found(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_one_to_one_reference_to_dependent_using_Query_not_found
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 775
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_one_to_one_reference_to_dependent_using_Query_not_found(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_one_to_one_reference_to_dependent_using_Query_not_found(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_dependent_using_Query_not_found(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_dependent_using_Query_not_found(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_collection_already_loaded(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_collection_already_loaded(System.Boolean)
  id: Load_collection_already_loaded(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_collection_already_loaded(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_collection_already_loaded(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_collection_already_loaded(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_collection_already_loaded
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 805
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_collection_already_loaded(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_collection_already_loaded(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_collection_already_loaded(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_collection_already_loaded(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_already_loaded(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_already_loaded(System.Boolean)
  id: Load_many_to_one_reference_to_principal_already_loaded(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_many_to_one_reference_to_principal_already_loaded(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_many_to_one_reference_to_principal_already_loaded(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_many_to_one_reference_to_principal_already_loaded(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_many_to_one_reference_to_principal_already_loaded
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 840
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_many_to_one_reference_to_principal_already_loaded(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_many_to_one_reference_to_principal_already_loaded(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_many_to_one_reference_to_principal_already_loaded(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_many_to_one_reference_to_principal_already_loaded(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_already_loaded(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_already_loaded(System.Boolean)
  id: Load_one_to_one_reference_to_principal_already_loaded(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_one_to_one_reference_to_principal_already_loaded(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_principal_already_loaded(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_principal_already_loaded(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_one_to_one_reference_to_principal_already_loaded
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 877
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_one_to_one_reference_to_principal_already_loaded(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_one_to_one_reference_to_principal_already_loaded(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_principal_already_loaded(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_principal_already_loaded(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_dependent_already_loaded(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_dependent_already_loaded(System.Boolean)
  id: Load_one_to_one_reference_to_dependent_already_loaded(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_one_to_one_reference_to_dependent_already_loaded(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_dependent_already_loaded(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_dependent_already_loaded(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_one_to_one_reference_to_dependent_already_loaded
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 914
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_one_to_one_reference_to_dependent_already_loaded(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_one_to_one_reference_to_dependent_already_loaded(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_dependent_already_loaded(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_dependent_already_loaded(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_PK_to_PK_reference_to_principal_already_loaded(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_PK_to_PK_reference_to_principal_already_loaded(System.Boolean)
  id: Load_one_to_one_PK_to_PK_reference_to_principal_already_loaded(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_one_to_one_PK_to_PK_reference_to_principal_already_loaded(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_one_to_one_PK_to_PK_reference_to_principal_already_loaded(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_one_to_one_PK_to_PK_reference_to_principal_already_loaded(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_one_to_one_PK_to_PK_reference_to_principal_already_loaded
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 951
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_one_to_one_PK_to_PK_reference_to_principal_already_loaded(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_one_to_one_PK_to_PK_reference_to_principal_already_loaded(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_PK_to_PK_reference_to_principal_already_loaded(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_PK_to_PK_reference_to_principal_already_loaded(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_PK_to_PK_reference_to_dependent_already_loaded(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_PK_to_PK_reference_to_dependent_already_loaded(System.Boolean)
  id: Load_one_to_one_PK_to_PK_reference_to_dependent_already_loaded(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_one_to_one_PK_to_PK_reference_to_dependent_already_loaded(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_one_to_one_PK_to_PK_reference_to_dependent_already_loaded(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_one_to_one_PK_to_PK_reference_to_dependent_already_loaded(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_one_to_one_PK_to_PK_reference_to_dependent_already_loaded
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 988
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_one_to_one_PK_to_PK_reference_to_dependent_already_loaded(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_one_to_one_PK_to_PK_reference_to_dependent_already_loaded(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_PK_to_PK_reference_to_dependent_already_loaded(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_PK_to_PK_reference_to_dependent_already_loaded(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_collection_using_Query_already_loaded(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_collection_using_Query_already_loaded(System.Boolean)
  id: Load_collection_using_Query_already_loaded(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_collection_using_Query_already_loaded(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_collection_using_Query_already_loaded(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_collection_using_Query_already_loaded(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_collection_using_Query_already_loaded
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 1025
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_collection_using_Query_already_loaded(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_collection_using_Query_already_loaded(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_collection_using_Query_already_loaded(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_collection_using_Query_already_loaded(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_using_Query_already_loaded(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_using_Query_already_loaded(System.Boolean)
  id: Load_many_to_one_reference_to_principal_using_Query_already_loaded(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_many_to_one_reference_to_principal_using_Query_already_loaded(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_many_to_one_reference_to_principal_using_Query_already_loaded(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_many_to_one_reference_to_principal_using_Query_already_loaded(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_many_to_one_reference_to_principal_using_Query_already_loaded
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 1057
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_many_to_one_reference_to_principal_using_Query_already_loaded(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_many_to_one_reference_to_principal_using_Query_already_loaded(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_many_to_one_reference_to_principal_using_Query_already_loaded(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_many_to_one_reference_to_principal_using_Query_already_loaded(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_using_Query_already_loaded(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_using_Query_already_loaded(System.Boolean)
  id: Load_one_to_one_reference_to_principal_using_Query_already_loaded(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_one_to_one_reference_to_principal_using_Query_already_loaded(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_principal_using_Query_already_loaded(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_principal_using_Query_already_loaded(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_one_to_one_reference_to_principal_using_Query_already_loaded
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 1088
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_one_to_one_reference_to_principal_using_Query_already_loaded(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_one_to_one_reference_to_principal_using_Query_already_loaded(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_principal_using_Query_already_loaded(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_principal_using_Query_already_loaded(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_dependent_using_Query_already_loaded(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_dependent_using_Query_already_loaded(System.Boolean)
  id: Load_one_to_one_reference_to_dependent_using_Query_already_loaded(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_one_to_one_reference_to_dependent_using_Query_already_loaded(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_dependent_using_Query_already_loaded(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_dependent_using_Query_already_loaded(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_one_to_one_reference_to_dependent_using_Query_already_loaded
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 1119
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_one_to_one_reference_to_dependent_using_Query_already_loaded(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_one_to_one_reference_to_dependent_using_Query_already_loaded(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_dependent_using_Query_already_loaded(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_dependent_using_Query_already_loaded(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_PK_to_PK_reference_to_principal_using_Query_already_loaded(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_PK_to_PK_reference_to_principal_using_Query_already_loaded(System.Boolean)
  id: Load_one_to_one_PK_to_PK_reference_to_principal_using_Query_already_loaded(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_one_to_one_PK_to_PK_reference_to_principal_using_Query_already_loaded(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_one_to_one_PK_to_PK_reference_to_principal_using_Query_already_loaded(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_one_to_one_PK_to_PK_reference_to_principal_using_Query_already_loaded(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_one_to_one_PK_to_PK_reference_to_principal_using_Query_already_loaded
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 1150
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_one_to_one_PK_to_PK_reference_to_principal_using_Query_already_loaded(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_one_to_one_PK_to_PK_reference_to_principal_using_Query_already_loaded(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_PK_to_PK_reference_to_principal_using_Query_already_loaded(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_PK_to_PK_reference_to_principal_using_Query_already_loaded(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_PK_to_PK_reference_to_dependent_using_Query_already_loaded(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_PK_to_PK_reference_to_dependent_using_Query_already_loaded(System.Boolean)
  id: Load_one_to_one_PK_to_PK_reference_to_dependent_using_Query_already_loaded(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_one_to_one_PK_to_PK_reference_to_dependent_using_Query_already_loaded(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_one_to_one_PK_to_PK_reference_to_dependent_using_Query_already_loaded(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_one_to_one_PK_to_PK_reference_to_dependent_using_Query_already_loaded(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_one_to_one_PK_to_PK_reference_to_dependent_using_Query_already_loaded
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 1181
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_one_to_one_PK_to_PK_reference_to_dependent_using_Query_already_loaded(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_one_to_one_PK_to_PK_reference_to_dependent_using_Query_already_loaded(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_PK_to_PK_reference_to_dependent_using_Query_already_loaded(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_PK_to_PK_reference_to_dependent_using_Query_already_loaded(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_collection_untyped(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_collection_untyped(System.Boolean)
  id: Load_collection_untyped(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_collection_untyped(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_collection_untyped(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_collection_untyped(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_collection_untyped
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 1212
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_collection_untyped(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_collection_untyped(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_collection_untyped(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_collection_untyped(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_untyped(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_untyped(System.Boolean)
  id: Load_many_to_one_reference_to_principal_untyped(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_many_to_one_reference_to_principal_untyped(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_many_to_one_reference_to_principal_untyped(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_many_to_one_reference_to_principal_untyped(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_many_to_one_reference_to_principal_untyped
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 1247
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_many_to_one_reference_to_principal_untyped(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_many_to_one_reference_to_principal_untyped(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_many_to_one_reference_to_principal_untyped(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_many_to_one_reference_to_principal_untyped(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_untyped(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_untyped(System.Boolean)
  id: Load_one_to_one_reference_to_principal_untyped(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_one_to_one_reference_to_principal_untyped(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_principal_untyped(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_principal_untyped(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_one_to_one_reference_to_principal_untyped
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 1284
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_one_to_one_reference_to_principal_untyped(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_one_to_one_reference_to_principal_untyped(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_principal_untyped(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_principal_untyped(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_dependent_untyped(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_dependent_untyped(System.Boolean)
  id: Load_one_to_one_reference_to_dependent_untyped(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_one_to_one_reference_to_dependent_untyped(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_dependent_untyped(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_dependent_untyped(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_one_to_one_reference_to_dependent_untyped
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 1321
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_one_to_one_reference_to_dependent_untyped(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_one_to_one_reference_to_dependent_untyped(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_dependent_untyped(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_dependent_untyped(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_collection_using_Query_untyped(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_collection_using_Query_untyped(System.Boolean)
  id: Load_collection_using_Query_untyped(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_collection_using_Query_untyped(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_collection_using_Query_untyped(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_collection_using_Query_untyped(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_collection_using_Query_untyped
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 1358
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_collection_using_Query_untyped(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_collection_using_Query_untyped(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_collection_using_Query_untyped(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_collection_using_Query_untyped(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_using_Query_untyped(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_using_Query_untyped(System.Boolean)
  id: Load_many_to_one_reference_to_principal_using_Query_untyped(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_many_to_one_reference_to_principal_using_Query_untyped(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_many_to_one_reference_to_principal_using_Query_untyped(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_many_to_one_reference_to_principal_using_Query_untyped(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_many_to_one_reference_to_principal_using_Query_untyped
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 1390
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_many_to_one_reference_to_principal_using_Query_untyped(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_many_to_one_reference_to_principal_using_Query_untyped(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_many_to_one_reference_to_principal_using_Query_untyped(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_many_to_one_reference_to_principal_using_Query_untyped(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_using_Query_untyped(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_using_Query_untyped(System.Boolean)
  id: Load_one_to_one_reference_to_principal_using_Query_untyped(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_one_to_one_reference_to_principal_using_Query_untyped(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_principal_using_Query_untyped(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_principal_using_Query_untyped(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_one_to_one_reference_to_principal_using_Query_untyped
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 1421
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_one_to_one_reference_to_principal_using_Query_untyped(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_one_to_one_reference_to_principal_using_Query_untyped(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_principal_using_Query_untyped(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_principal_using_Query_untyped(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_dependent_using_Query_untyped(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_dependent_using_Query_untyped(System.Boolean)
  id: Load_one_to_one_reference_to_dependent_using_Query_untyped(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_one_to_one_reference_to_dependent_using_Query_untyped(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_dependent_using_Query_untyped(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_dependent_using_Query_untyped(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_one_to_one_reference_to_dependent_using_Query_untyped
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 1452
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_one_to_one_reference_to_dependent_using_Query_untyped(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_one_to_one_reference_to_dependent_using_Query_untyped(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_dependent_using_Query_untyped(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_dependent_using_Query_untyped(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_collection_not_found_untyped(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_collection_not_found_untyped(System.Boolean)
  id: Load_collection_not_found_untyped(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_collection_not_found_untyped(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_collection_not_found_untyped(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_collection_not_found_untyped(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_collection_not_found_untyped
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 1483
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_collection_not_found_untyped(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_collection_not_found_untyped(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_collection_not_found_untyped(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_collection_not_found_untyped(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_not_found_untyped(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_not_found_untyped(System.Boolean)
  id: Load_many_to_one_reference_to_principal_not_found_untyped(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_many_to_one_reference_to_principal_not_found_untyped(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_many_to_one_reference_to_principal_not_found_untyped(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_many_to_one_reference_to_principal_not_found_untyped(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_many_to_one_reference_to_principal_not_found_untyped
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 1516
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_many_to_one_reference_to_principal_not_found_untyped(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_many_to_one_reference_to_principal_not_found_untyped(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_many_to_one_reference_to_principal_not_found_untyped(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_many_to_one_reference_to_principal_not_found_untyped(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_not_found_untyped(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_not_found_untyped(System.Boolean)
  id: Load_one_to_one_reference_to_principal_not_found_untyped(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_one_to_one_reference_to_principal_not_found_untyped(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_principal_not_found_untyped(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_principal_not_found_untyped(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_one_to_one_reference_to_principal_not_found_untyped
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 1549
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_one_to_one_reference_to_principal_not_found_untyped(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_one_to_one_reference_to_principal_not_found_untyped(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_principal_not_found_untyped(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_principal_not_found_untyped(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_dependent_not_found_untyped(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_dependent_not_found_untyped(System.Boolean)
  id: Load_one_to_one_reference_to_dependent_not_found_untyped(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_one_to_one_reference_to_dependent_not_found_untyped(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_dependent_not_found_untyped(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_dependent_not_found_untyped(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_one_to_one_reference_to_dependent_not_found_untyped
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 1583
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_one_to_one_reference_to_dependent_not_found_untyped(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_one_to_one_reference_to_dependent_not_found_untyped(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_dependent_not_found_untyped(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_dependent_not_found_untyped(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_collection_using_Query_not_found_untyped(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_collection_using_Query_not_found_untyped(System.Boolean)
  id: Load_collection_using_Query_not_found_untyped(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_collection_using_Query_not_found_untyped(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_collection_using_Query_not_found_untyped(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_collection_using_Query_not_found_untyped(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_collection_using_Query_not_found_untyped
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 1617
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_collection_using_Query_not_found_untyped(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_collection_using_Query_not_found_untyped(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_collection_using_Query_not_found_untyped(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_collection_using_Query_not_found_untyped(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_using_Query_not_found_untyped(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_using_Query_not_found_untyped(System.Boolean)
  id: Load_many_to_one_reference_to_principal_using_Query_not_found_untyped(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_many_to_one_reference_to_principal_using_Query_not_found_untyped(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_many_to_one_reference_to_principal_using_Query_not_found_untyped(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_many_to_one_reference_to_principal_using_Query_not_found_untyped(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_many_to_one_reference_to_principal_using_Query_not_found_untyped
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 1647
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_many_to_one_reference_to_principal_using_Query_not_found_untyped(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_many_to_one_reference_to_principal_using_Query_not_found_untyped(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_many_to_one_reference_to_principal_using_Query_not_found_untyped(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_many_to_one_reference_to_principal_using_Query_not_found_untyped(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_using_Query_not_found_untyped(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_using_Query_not_found_untyped(System.Boolean)
  id: Load_one_to_one_reference_to_principal_using_Query_not_found_untyped(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_one_to_one_reference_to_principal_using_Query_not_found_untyped(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_principal_using_Query_not_found_untyped(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_principal_using_Query_not_found_untyped(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_one_to_one_reference_to_principal_using_Query_not_found_untyped
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 1677
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_one_to_one_reference_to_principal_using_Query_not_found_untyped(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_one_to_one_reference_to_principal_using_Query_not_found_untyped(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_principal_using_Query_not_found_untyped(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_principal_using_Query_not_found_untyped(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_dependent_using_Query_not_found_untyped(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_dependent_using_Query_not_found_untyped(System.Boolean)
  id: Load_one_to_one_reference_to_dependent_using_Query_not_found_untyped(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_one_to_one_reference_to_dependent_using_Query_not_found_untyped(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_dependent_using_Query_not_found_untyped(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_dependent_using_Query_not_found_untyped(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_one_to_one_reference_to_dependent_using_Query_not_found_untyped
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 1707
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_one_to_one_reference_to_dependent_using_Query_not_found_untyped(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_one_to_one_reference_to_dependent_using_Query_not_found_untyped(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_dependent_using_Query_not_found_untyped(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_dependent_using_Query_not_found_untyped(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_collection_already_loaded_untyped(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_collection_already_loaded_untyped(System.Boolean)
  id: Load_collection_already_loaded_untyped(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_collection_already_loaded_untyped(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_collection_already_loaded_untyped(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_collection_already_loaded_untyped(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_collection_already_loaded_untyped
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 1737
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_collection_already_loaded_untyped(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_collection_already_loaded_untyped(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_collection_already_loaded_untyped(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_collection_already_loaded_untyped(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_already_loaded_untyped(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_already_loaded_untyped(System.Boolean)
  id: Load_many_to_one_reference_to_principal_already_loaded_untyped(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_many_to_one_reference_to_principal_already_loaded_untyped(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_many_to_one_reference_to_principal_already_loaded_untyped(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_many_to_one_reference_to_principal_already_loaded_untyped(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_many_to_one_reference_to_principal_already_loaded_untyped
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 1772
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_many_to_one_reference_to_principal_already_loaded_untyped(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_many_to_one_reference_to_principal_already_loaded_untyped(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_many_to_one_reference_to_principal_already_loaded_untyped(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_many_to_one_reference_to_principal_already_loaded_untyped(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_already_loaded_untyped(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_already_loaded_untyped(System.Boolean)
  id: Load_one_to_one_reference_to_principal_already_loaded_untyped(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_one_to_one_reference_to_principal_already_loaded_untyped(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_principal_already_loaded_untyped(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_principal_already_loaded_untyped(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_one_to_one_reference_to_principal_already_loaded_untyped
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 1809
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_one_to_one_reference_to_principal_already_loaded_untyped(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_one_to_one_reference_to_principal_already_loaded_untyped(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_principal_already_loaded_untyped(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_principal_already_loaded_untyped(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_dependent_already_loaded_untyped(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_dependent_already_loaded_untyped(System.Boolean)
  id: Load_one_to_one_reference_to_dependent_already_loaded_untyped(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_one_to_one_reference_to_dependent_already_loaded_untyped(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_dependent_already_loaded_untyped(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_dependent_already_loaded_untyped(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_one_to_one_reference_to_dependent_already_loaded_untyped
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 1846
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_one_to_one_reference_to_dependent_already_loaded_untyped(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_one_to_one_reference_to_dependent_already_loaded_untyped(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_dependent_already_loaded_untyped(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_dependent_already_loaded_untyped(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_collection_using_Query_already_loaded_untyped(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_collection_using_Query_already_loaded_untyped(System.Boolean)
  id: Load_collection_using_Query_already_loaded_untyped(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_collection_using_Query_already_loaded_untyped(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_collection_using_Query_already_loaded_untyped(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_collection_using_Query_already_loaded_untyped(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_collection_using_Query_already_loaded_untyped
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 1883
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_collection_using_Query_already_loaded_untyped(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_collection_using_Query_already_loaded_untyped(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_collection_using_Query_already_loaded_untyped(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_collection_using_Query_already_loaded_untyped(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_using_Query_already_loaded_untyped(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_using_Query_already_loaded_untyped(System.Boolean)
  id: Load_many_to_one_reference_to_principal_using_Query_already_loaded_untyped(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_many_to_one_reference_to_principal_using_Query_already_loaded_untyped(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_many_to_one_reference_to_principal_using_Query_already_loaded_untyped(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_many_to_one_reference_to_principal_using_Query_already_loaded_untyped(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_many_to_one_reference_to_principal_using_Query_already_loaded_untyped
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 1915
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_many_to_one_reference_to_principal_using_Query_already_loaded_untyped(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_many_to_one_reference_to_principal_using_Query_already_loaded_untyped(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_many_to_one_reference_to_principal_using_Query_already_loaded_untyped(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_many_to_one_reference_to_principal_using_Query_already_loaded_untyped(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_using_Query_already_loaded_untyped(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_using_Query_already_loaded_untyped(System.Boolean)
  id: Load_one_to_one_reference_to_principal_using_Query_already_loaded_untyped(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_one_to_one_reference_to_principal_using_Query_already_loaded_untyped(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_principal_using_Query_already_loaded_untyped(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_principal_using_Query_already_loaded_untyped(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_one_to_one_reference_to_principal_using_Query_already_loaded_untyped
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 1946
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_one_to_one_reference_to_principal_using_Query_already_loaded_untyped(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_one_to_one_reference_to_principal_using_Query_already_loaded_untyped(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_principal_using_Query_already_loaded_untyped(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_principal_using_Query_already_loaded_untyped(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_dependent_using_Query_already_loaded_untyped(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_dependent_using_Query_already_loaded_untyped(System.Boolean)
  id: Load_one_to_one_reference_to_dependent_using_Query_already_loaded_untyped(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_one_to_one_reference_to_dependent_using_Query_already_loaded_untyped(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_dependent_using_Query_already_loaded_untyped(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_dependent_using_Query_already_loaded_untyped(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_one_to_one_reference_to_dependent_using_Query_already_loaded_untyped
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 1977
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_one_to_one_reference_to_dependent_using_Query_already_loaded_untyped(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_one_to_one_reference_to_dependent_using_Query_already_loaded_untyped(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_dependent_using_Query_already_loaded_untyped(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_dependent_using_Query_already_loaded_untyped(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_collection_alternate_key(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_collection_alternate_key(System.Boolean)
  id: Load_collection_alternate_key(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_collection_alternate_key(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_collection_alternate_key(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_collection_alternate_key(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_collection_alternate_key
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 2008
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_collection_alternate_key(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_collection_alternate_key(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_collection_alternate_key(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_collection_alternate_key(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_alternate_key(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_alternate_key(System.Boolean)
  id: Load_many_to_one_reference_to_principal_alternate_key(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_many_to_one_reference_to_principal_alternate_key(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_many_to_one_reference_to_principal_alternate_key(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_many_to_one_reference_to_principal_alternate_key(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_many_to_one_reference_to_principal_alternate_key
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 2043
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_many_to_one_reference_to_principal_alternate_key(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_many_to_one_reference_to_principal_alternate_key(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_many_to_one_reference_to_principal_alternate_key(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_many_to_one_reference_to_principal_alternate_key(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_alternate_key(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_alternate_key(System.Boolean)
  id: Load_one_to_one_reference_to_principal_alternate_key(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_one_to_one_reference_to_principal_alternate_key(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_principal_alternate_key(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_principal_alternate_key(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_one_to_one_reference_to_principal_alternate_key
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 2080
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_one_to_one_reference_to_principal_alternate_key(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_one_to_one_reference_to_principal_alternate_key(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_principal_alternate_key(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_principal_alternate_key(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_dependent_alternate_key(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_dependent_alternate_key(System.Boolean)
  id: Load_one_to_one_reference_to_dependent_alternate_key(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_one_to_one_reference_to_dependent_alternate_key(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_dependent_alternate_key(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_dependent_alternate_key(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_one_to_one_reference_to_dependent_alternate_key
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 2117
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_one_to_one_reference_to_dependent_alternate_key(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_one_to_one_reference_to_dependent_alternate_key(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_dependent_alternate_key(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_dependent_alternate_key(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_collection_using_Query_alternate_key(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_collection_using_Query_alternate_key(System.Boolean)
  id: Load_collection_using_Query_alternate_key(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_collection_using_Query_alternate_key(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_collection_using_Query_alternate_key(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_collection_using_Query_alternate_key(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_collection_using_Query_alternate_key
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 2154
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_collection_using_Query_alternate_key(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_collection_using_Query_alternate_key(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_collection_using_Query_alternate_key(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_collection_using_Query_alternate_key(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_using_Query_alternate_key(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_using_Query_alternate_key(System.Boolean)
  id: Load_many_to_one_reference_to_principal_using_Query_alternate_key(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_many_to_one_reference_to_principal_using_Query_alternate_key(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_many_to_one_reference_to_principal_using_Query_alternate_key(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_many_to_one_reference_to_principal_using_Query_alternate_key(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_many_to_one_reference_to_principal_using_Query_alternate_key
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 2186
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_many_to_one_reference_to_principal_using_Query_alternate_key(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_many_to_one_reference_to_principal_using_Query_alternate_key(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_many_to_one_reference_to_principal_using_Query_alternate_key(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_many_to_one_reference_to_principal_using_Query_alternate_key(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_using_Query_alternate_key(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_using_Query_alternate_key(System.Boolean)
  id: Load_one_to_one_reference_to_principal_using_Query_alternate_key(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_one_to_one_reference_to_principal_using_Query_alternate_key(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_principal_using_Query_alternate_key(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_principal_using_Query_alternate_key(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_one_to_one_reference_to_principal_using_Query_alternate_key
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 2217
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_one_to_one_reference_to_principal_using_Query_alternate_key(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_one_to_one_reference_to_principal_using_Query_alternate_key(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_principal_using_Query_alternate_key(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_principal_using_Query_alternate_key(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_dependent_using_Query_alternate_key(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_dependent_using_Query_alternate_key(System.Boolean)
  id: Load_one_to_one_reference_to_dependent_using_Query_alternate_key(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_one_to_one_reference_to_dependent_using_Query_alternate_key(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_dependent_using_Query_alternate_key(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_dependent_using_Query_alternate_key(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_one_to_one_reference_to_dependent_using_Query_alternate_key
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 2248
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_one_to_one_reference_to_dependent_using_Query_alternate_key(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_one_to_one_reference_to_dependent_using_Query_alternate_key(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_dependent_using_Query_alternate_key(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_dependent_using_Query_alternate_key(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_null_FK_alternate_key(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_null_FK_alternate_key(System.Boolean)
  id: Load_many_to_one_reference_to_principal_null_FK_alternate_key(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_many_to_one_reference_to_principal_null_FK_alternate_key(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_many_to_one_reference_to_principal_null_FK_alternate_key(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_many_to_one_reference_to_principal_null_FK_alternate_key(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_many_to_one_reference_to_principal_null_FK_alternate_key
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 2279
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_many_to_one_reference_to_principal_null_FK_alternate_key(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_many_to_one_reference_to_principal_null_FK_alternate_key(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_many_to_one_reference_to_principal_null_FK_alternate_key(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_many_to_one_reference_to_principal_null_FK_alternate_key(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_null_FK_alternate_key(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_null_FK_alternate_key(System.Boolean)
  id: Load_one_to_one_reference_to_principal_null_FK_alternate_key(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_one_to_one_reference_to_principal_null_FK_alternate_key(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_principal_null_FK_alternate_key(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_principal_null_FK_alternate_key(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_one_to_one_reference_to_principal_null_FK_alternate_key
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 2312
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_one_to_one_reference_to_principal_null_FK_alternate_key(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_one_to_one_reference_to_principal_null_FK_alternate_key(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_principal_null_FK_alternate_key(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_principal_null_FK_alternate_key(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_using_Query_null_FK_alternate_key(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_using_Query_null_FK_alternate_key(System.Boolean)
  id: Load_many_to_one_reference_to_principal_using_Query_null_FK_alternate_key(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_many_to_one_reference_to_principal_using_Query_null_FK_alternate_key(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_many_to_one_reference_to_principal_using_Query_null_FK_alternate_key(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_many_to_one_reference_to_principal_using_Query_null_FK_alternate_key(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_many_to_one_reference_to_principal_using_Query_null_FK_alternate_key
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 2346
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_many_to_one_reference_to_principal_using_Query_null_FK_alternate_key(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_many_to_one_reference_to_principal_using_Query_null_FK_alternate_key(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_many_to_one_reference_to_principal_using_Query_null_FK_alternate_key(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_many_to_one_reference_to_principal_using_Query_null_FK_alternate_key(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_using_Query_null_FK_alternate_key(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_using_Query_null_FK_alternate_key(System.Boolean)
  id: Load_one_to_one_reference_to_principal_using_Query_null_FK_alternate_key(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_one_to_one_reference_to_principal_using_Query_null_FK_alternate_key(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_principal_using_Query_null_FK_alternate_key(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_principal_using_Query_null_FK_alternate_key(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_one_to_one_reference_to_principal_using_Query_null_FK_alternate_key
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 2376
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_one_to_one_reference_to_principal_using_Query_null_FK_alternate_key(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_one_to_one_reference_to_principal_using_Query_null_FK_alternate_key(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_principal_using_Query_null_FK_alternate_key(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_principal_using_Query_null_FK_alternate_key(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_collection_shadow_fk(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_collection_shadow_fk(System.Boolean)
  id: Load_collection_shadow_fk(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_collection_shadow_fk(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_collection_shadow_fk(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_collection_shadow_fk(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_collection_shadow_fk
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 2406
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_collection_shadow_fk(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_collection_shadow_fk(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_collection_shadow_fk(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_collection_shadow_fk(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_shadow_fk(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_shadow_fk(System.Boolean)
  id: Load_many_to_one_reference_to_principal_shadow_fk(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_many_to_one_reference_to_principal_shadow_fk(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_many_to_one_reference_to_principal_shadow_fk(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_many_to_one_reference_to_principal_shadow_fk(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_many_to_one_reference_to_principal_shadow_fk
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 2441
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_many_to_one_reference_to_principal_shadow_fk(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_many_to_one_reference_to_principal_shadow_fk(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_many_to_one_reference_to_principal_shadow_fk(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_many_to_one_reference_to_principal_shadow_fk(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_shadow_fk(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_shadow_fk(System.Boolean)
  id: Load_one_to_one_reference_to_principal_shadow_fk(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_one_to_one_reference_to_principal_shadow_fk(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_principal_shadow_fk(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_principal_shadow_fk(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_one_to_one_reference_to_principal_shadow_fk
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 2478
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_one_to_one_reference_to_principal_shadow_fk(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_one_to_one_reference_to_principal_shadow_fk(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_principal_shadow_fk(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_principal_shadow_fk(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_dependent_shadow_fk(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_dependent_shadow_fk(System.Boolean)
  id: Load_one_to_one_reference_to_dependent_shadow_fk(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_one_to_one_reference_to_dependent_shadow_fk(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_dependent_shadow_fk(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_dependent_shadow_fk(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_one_to_one_reference_to_dependent_shadow_fk
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 2515
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_one_to_one_reference_to_dependent_shadow_fk(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_one_to_one_reference_to_dependent_shadow_fk(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_dependent_shadow_fk(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_dependent_shadow_fk(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_collection_using_Query_shadow_fk(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_collection_using_Query_shadow_fk(System.Boolean)
  id: Load_collection_using_Query_shadow_fk(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_collection_using_Query_shadow_fk(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_collection_using_Query_shadow_fk(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_collection_using_Query_shadow_fk(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_collection_using_Query_shadow_fk
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 2552
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_collection_using_Query_shadow_fk(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_collection_using_Query_shadow_fk(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_collection_using_Query_shadow_fk(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_collection_using_Query_shadow_fk(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_using_Query_shadow_fk(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_using_Query_shadow_fk(System.Boolean)
  id: Load_many_to_one_reference_to_principal_using_Query_shadow_fk(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_many_to_one_reference_to_principal_using_Query_shadow_fk(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_many_to_one_reference_to_principal_using_Query_shadow_fk(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_many_to_one_reference_to_principal_using_Query_shadow_fk(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_many_to_one_reference_to_principal_using_Query_shadow_fk
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 2584
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_many_to_one_reference_to_principal_using_Query_shadow_fk(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_many_to_one_reference_to_principal_using_Query_shadow_fk(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_many_to_one_reference_to_principal_using_Query_shadow_fk(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_many_to_one_reference_to_principal_using_Query_shadow_fk(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_using_Query_shadow_fk(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_using_Query_shadow_fk(System.Boolean)
  id: Load_one_to_one_reference_to_principal_using_Query_shadow_fk(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_one_to_one_reference_to_principal_using_Query_shadow_fk(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_principal_using_Query_shadow_fk(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_principal_using_Query_shadow_fk(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_one_to_one_reference_to_principal_using_Query_shadow_fk
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 2615
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_one_to_one_reference_to_principal_using_Query_shadow_fk(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_one_to_one_reference_to_principal_using_Query_shadow_fk(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_principal_using_Query_shadow_fk(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_principal_using_Query_shadow_fk(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_dependent_using_Query_shadow_fk(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_dependent_using_Query_shadow_fk(System.Boolean)
  id: Load_one_to_one_reference_to_dependent_using_Query_shadow_fk(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_one_to_one_reference_to_dependent_using_Query_shadow_fk(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_dependent_using_Query_shadow_fk(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_dependent_using_Query_shadow_fk(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_one_to_one_reference_to_dependent_using_Query_shadow_fk
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 2646
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_one_to_one_reference_to_dependent_using_Query_shadow_fk(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_one_to_one_reference_to_dependent_using_Query_shadow_fk(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_dependent_using_Query_shadow_fk(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_dependent_using_Query_shadow_fk(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_null_FK_shadow_fk(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_null_FK_shadow_fk(System.Boolean)
  id: Load_many_to_one_reference_to_principal_null_FK_shadow_fk(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_many_to_one_reference_to_principal_null_FK_shadow_fk(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_many_to_one_reference_to_principal_null_FK_shadow_fk(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_many_to_one_reference_to_principal_null_FK_shadow_fk(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_many_to_one_reference_to_principal_null_FK_shadow_fk
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 2677
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_many_to_one_reference_to_principal_null_FK_shadow_fk(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_many_to_one_reference_to_principal_null_FK_shadow_fk(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_many_to_one_reference_to_principal_null_FK_shadow_fk(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_many_to_one_reference_to_principal_null_FK_shadow_fk(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_null_FK_shadow_fk(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_null_FK_shadow_fk(System.Boolean)
  id: Load_one_to_one_reference_to_principal_null_FK_shadow_fk(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_one_to_one_reference_to_principal_null_FK_shadow_fk(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_principal_null_FK_shadow_fk(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_principal_null_FK_shadow_fk(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_one_to_one_reference_to_principal_null_FK_shadow_fk
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 2710
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_one_to_one_reference_to_principal_null_FK_shadow_fk(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_one_to_one_reference_to_principal_null_FK_shadow_fk(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_principal_null_FK_shadow_fk(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_principal_null_FK_shadow_fk(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_using_Query_null_FK_shadow_fk(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_using_Query_null_FK_shadow_fk(System.Boolean)
  id: Load_many_to_one_reference_to_principal_using_Query_null_FK_shadow_fk(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_many_to_one_reference_to_principal_using_Query_null_FK_shadow_fk(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_many_to_one_reference_to_principal_using_Query_null_FK_shadow_fk(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_many_to_one_reference_to_principal_using_Query_null_FK_shadow_fk(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_many_to_one_reference_to_principal_using_Query_null_FK_shadow_fk
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 2744
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_many_to_one_reference_to_principal_using_Query_null_FK_shadow_fk(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_many_to_one_reference_to_principal_using_Query_null_FK_shadow_fk(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_many_to_one_reference_to_principal_using_Query_null_FK_shadow_fk(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_many_to_one_reference_to_principal_using_Query_null_FK_shadow_fk(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_using_Query_null_FK_shadow_fk(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_using_Query_null_FK_shadow_fk(System.Boolean)
  id: Load_one_to_one_reference_to_principal_using_Query_null_FK_shadow_fk(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_one_to_one_reference_to_principal_using_Query_null_FK_shadow_fk(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_principal_using_Query_null_FK_shadow_fk(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_principal_using_Query_null_FK_shadow_fk(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_one_to_one_reference_to_principal_using_Query_null_FK_shadow_fk
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 2774
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_one_to_one_reference_to_principal_using_Query_null_FK_shadow_fk(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_one_to_one_reference_to_principal_using_Query_null_FK_shadow_fk(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_principal_using_Query_null_FK_shadow_fk(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_principal_using_Query_null_FK_shadow_fk(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_collection_composite_key(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_collection_composite_key(System.Boolean)
  id: Load_collection_composite_key(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_collection_composite_key(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_collection_composite_key(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_collection_composite_key(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_collection_composite_key
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 2804
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_collection_composite_key(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_collection_composite_key(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_collection_composite_key(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_collection_composite_key(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_composite_key(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_composite_key(System.Boolean)
  id: Load_many_to_one_reference_to_principal_composite_key(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_many_to_one_reference_to_principal_composite_key(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_many_to_one_reference_to_principal_composite_key(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_many_to_one_reference_to_principal_composite_key(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_many_to_one_reference_to_principal_composite_key
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 2839
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_many_to_one_reference_to_principal_composite_key(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_many_to_one_reference_to_principal_composite_key(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_many_to_one_reference_to_principal_composite_key(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_many_to_one_reference_to_principal_composite_key(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_composite_key(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_composite_key(System.Boolean)
  id: Load_one_to_one_reference_to_principal_composite_key(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_one_to_one_reference_to_principal_composite_key(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_principal_composite_key(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_principal_composite_key(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_one_to_one_reference_to_principal_composite_key
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 2876
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_one_to_one_reference_to_principal_composite_key(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_one_to_one_reference_to_principal_composite_key(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_principal_composite_key(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_principal_composite_key(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_dependent_composite_key(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_dependent_composite_key(System.Boolean)
  id: Load_one_to_one_reference_to_dependent_composite_key(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_one_to_one_reference_to_dependent_composite_key(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_dependent_composite_key(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_dependent_composite_key(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_one_to_one_reference_to_dependent_composite_key
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 2913
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_one_to_one_reference_to_dependent_composite_key(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_one_to_one_reference_to_dependent_composite_key(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_dependent_composite_key(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_dependent_composite_key(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_collection_using_Query_composite_key(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_collection_using_Query_composite_key(System.Boolean)
  id: Load_collection_using_Query_composite_key(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_collection_using_Query_composite_key(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_collection_using_Query_composite_key(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_collection_using_Query_composite_key(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_collection_using_Query_composite_key
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 2950
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_collection_using_Query_composite_key(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_collection_using_Query_composite_key(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_collection_using_Query_composite_key(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_collection_using_Query_composite_key(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_using_Query_composite_key(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_using_Query_composite_key(System.Boolean)
  id: Load_many_to_one_reference_to_principal_using_Query_composite_key(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_many_to_one_reference_to_principal_using_Query_composite_key(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_many_to_one_reference_to_principal_using_Query_composite_key(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_many_to_one_reference_to_principal_using_Query_composite_key(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_many_to_one_reference_to_principal_using_Query_composite_key
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 2982
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_many_to_one_reference_to_principal_using_Query_composite_key(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_many_to_one_reference_to_principal_using_Query_composite_key(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_many_to_one_reference_to_principal_using_Query_composite_key(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_many_to_one_reference_to_principal_using_Query_composite_key(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_using_Query_composite_key(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_using_Query_composite_key(System.Boolean)
  id: Load_one_to_one_reference_to_principal_using_Query_composite_key(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_one_to_one_reference_to_principal_using_Query_composite_key(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_principal_using_Query_composite_key(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_principal_using_Query_composite_key(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_one_to_one_reference_to_principal_using_Query_composite_key
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 3013
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_one_to_one_reference_to_principal_using_Query_composite_key(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_one_to_one_reference_to_principal_using_Query_composite_key(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_principal_using_Query_composite_key(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_principal_using_Query_composite_key(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_dependent_using_Query_composite_key(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_dependent_using_Query_composite_key(System.Boolean)
  id: Load_one_to_one_reference_to_dependent_using_Query_composite_key(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_one_to_one_reference_to_dependent_using_Query_composite_key(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_dependent_using_Query_composite_key(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_dependent_using_Query_composite_key(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_one_to_one_reference_to_dependent_using_Query_composite_key
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 3044
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_one_to_one_reference_to_dependent_using_Query_composite_key(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_one_to_one_reference_to_dependent_using_Query_composite_key(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_dependent_using_Query_composite_key(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_dependent_using_Query_composite_key(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_null_FK_composite_key(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_null_FK_composite_key(System.Boolean)
  id: Load_many_to_one_reference_to_principal_null_FK_composite_key(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_many_to_one_reference_to_principal_null_FK_composite_key(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_many_to_one_reference_to_principal_null_FK_composite_key(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_many_to_one_reference_to_principal_null_FK_composite_key(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_many_to_one_reference_to_principal_null_FK_composite_key
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 3075
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_many_to_one_reference_to_principal_null_FK_composite_key(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_many_to_one_reference_to_principal_null_FK_composite_key(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_many_to_one_reference_to_principal_null_FK_composite_key(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_many_to_one_reference_to_principal_null_FK_composite_key(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_null_FK_composite_key(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_null_FK_composite_key(System.Boolean)
  id: Load_one_to_one_reference_to_principal_null_FK_composite_key(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_one_to_one_reference_to_principal_null_FK_composite_key(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_principal_null_FK_composite_key(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_principal_null_FK_composite_key(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_one_to_one_reference_to_principal_null_FK_composite_key
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 3108
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_one_to_one_reference_to_principal_null_FK_composite_key(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_one_to_one_reference_to_principal_null_FK_composite_key(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_principal_null_FK_composite_key(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_principal_null_FK_composite_key(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_using_Query_null_FK_composite_key(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_many_to_one_reference_to_principal_using_Query_null_FK_composite_key(System.Boolean)
  id: Load_many_to_one_reference_to_principal_using_Query_null_FK_composite_key(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_many_to_one_reference_to_principal_using_Query_null_FK_composite_key(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_many_to_one_reference_to_principal_using_Query_null_FK_composite_key(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_many_to_one_reference_to_principal_using_Query_null_FK_composite_key(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_many_to_one_reference_to_principal_using_Query_null_FK_composite_key
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 3142
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_many_to_one_reference_to_principal_using_Query_null_FK_composite_key(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_many_to_one_reference_to_principal_using_Query_null_FK_composite_key(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_many_to_one_reference_to_principal_using_Query_null_FK_composite_key(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_many_to_one_reference_to_principal_using_Query_null_FK_composite_key(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_using_Query_null_FK_composite_key(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Load_one_to_one_reference_to_principal_using_Query_null_FK_composite_key(System.Boolean)
  id: Load_one_to_one_reference_to_principal_using_Query_null_FK_composite_key(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Load_one_to_one_reference_to_principal_using_Query_null_FK_composite_key(Boolean)
  nameWithType: LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_principal_using_Query_null_FK_composite_key(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Load_one_to_one_reference_to_principal_using_Query_null_FK_composite_key(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load_one_to_one_reference_to_principal_using_Query_null_FK_composite_key
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 3172
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{true})]

      [InlineData(new object[]{false})]

      public virtual Task Load_one_to_one_reference_to_principal_using_Query_null_FK_composite_key(bool async)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {True})>

      <InlineData(New Object() {False})>

      Public Overridable Function Load_one_to_one_reference_to_principal_using_Query_null_FK_composite_key(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_principal_using_Query_null_FK_composite_key(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Load_one_to_one_reference_to_principal_using_Query_null_FK_composite_key(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Can_change_IsLoaded_flag_for_collection
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Can_change_IsLoaded_flag_for_collection
  id: Can_change_IsLoaded_flag_for_collection
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Can_change_IsLoaded_flag_for_collection()
  nameWithType: LoadTestBase<TTestStore, TFixture>.Can_change_IsLoaded_flag_for_collection()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Can_change_IsLoaded_flag_for_collection()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_change_IsLoaded_flag_for_collection
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 3202
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Can_change_IsLoaded_flag_for_collection()
    content.vb: >-
      <Fact>

      Public Overridable Sub Can_change_IsLoaded_flag_for_collection
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Can_change_IsLoaded_flag_for_collection()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Can_change_IsLoaded_flag_for_collection()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Can_change_IsLoaded_flag_for_reference_only_if_null
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Can_change_IsLoaded_flag_for_reference_only_if_null
  id: Can_change_IsLoaded_flag_for_reference_only_if_null
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Can_change_IsLoaded_flag_for_reference_only_if_null()
  nameWithType: LoadTestBase<TTestStore, TFixture>.Can_change_IsLoaded_flag_for_reference_only_if_null()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Can_change_IsLoaded_flag_for_reference_only_if_null()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_change_IsLoaded_flag_for_reference_only_if_null
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 3238
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Can_change_IsLoaded_flag_for_reference_only_if_null()
    content.vb: >-
      <Fact>

      Public Overridable Sub Can_change_IsLoaded_flag_for_reference_only_if_null
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Can_change_IsLoaded_flag_for_reference_only_if_null()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Can_change_IsLoaded_flag_for_reference_only_if_null()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.#ctor(`1)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.#ctor(`1)
  id: '#ctor(`1)'
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: LoadTestBase(TFixture)
  nameWithType: LoadTestBase<TTestStore, TFixture>.LoadTestBase(TFixture)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.LoadTestBase(TFixture)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 3395
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: protected LoadTestBase(TFixture fixture)
    content.vb: Protected Sub New(fixture As TFixture)
    parameters:
    - id: fixture
      type: '{TFixture}'
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).LoadTestBase(TFixture)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).LoadTestBase(TFixture)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.CreateContext
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.CreateContext
  id: CreateContext
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: CreateContext()
  nameWithType: LoadTestBase<TTestStore, TFixture>.CreateContext()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.CreateContext()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateContext
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 3402
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: protected LoadTestBase<TTestStore, TFixture>.LoadContext CreateContext()
    content.vb: Protected Function CreateContext As LoadTestBase(Of TTestStore, TFixture).LoadContext
    return:
      type: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.LoadContext
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).CreateContext()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).CreateContext()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Fixture
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Fixture
  id: Fixture
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Fixture
  nameWithType: LoadTestBase<TTestStore, TFixture>.Fixture
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Fixture
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Fixture
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 3404
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: protected TFixture Fixture { get; }
    content.vb: Protected ReadOnly Property Fixture As TFixture
    parameters: []
    return:
      type: '{TFixture}'
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Fixture
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Fixture
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.TestStore
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.TestStore
  id: TestStore
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: TestStore
  nameWithType: LoadTestBase<TTestStore, TFixture>.TestStore
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.TestStore
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: TestStore
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 3405
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: protected TTestStore TestStore { get; }
    content.vb: Protected ReadOnly Property TestStore As TTestStore
    parameters: []
    return:
      type: '{TTestStore}'
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).TestStore
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).TestStore
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Dispose
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.Dispose
  id: Dispose
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: LoadTestBase<TTestStore, TFixture>.Dispose()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.Dispose()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Dispose
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 3407
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual void Dispose()
    content.vb: Public Overridable Sub Dispose
  implements:
  - System.IDisposable.Dispose
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).Dispose()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).Dispose()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.ClearLog
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.ClearLog
  id: ClearLog
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: ClearLog()
  nameWithType: LoadTestBase<TTestStore, TFixture>.ClearLog()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.ClearLog()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ClearLog
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 3409
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual void ClearLog()
    content.vb: Public Overridable Sub ClearLog
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).ClearLog()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).ClearLog()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.RecordLog
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.RecordLog
  id: RecordLog
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2
  langs:
  - csharp
  - vb
  name: RecordLog()
  nameWithType: LoadTestBase<TTestStore, TFixture>.RecordLog()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase<TTestStore, TFixture>.RecordLog()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: RecordLog
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/LoadTestBase.cs
    startLine: 3413
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual void RecordLog()
    content.vb: Public Overridable Sub RecordLog
  nameWithType.vb: LoadTestBase(Of TTestStore, TFixture).RecordLog()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase(Of TTestStore, TFixture).RecordLog()
references:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests
  commentId: N:Microsoft.EntityFrameworkCore.Specification.Tests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Specification.Tests
  nameWithType: Microsoft.EntityFrameworkCore.Specification.Tests
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Xunit.IClassFixture{{TFixture}}
  commentId: T:Xunit.IClassFixture{`0}
  parent: Xunit
  definition: Xunit.IClassFixture`1
  name: IClassFixture<TFixture>
  nameWithType: IClassFixture<TFixture>
  fullName: Xunit.IClassFixture<TFixture>
  nameWithType.vb: IClassFixture(Of TFixture)
  fullname.vb: Xunit.IClassFixture(Of TFixture)
  name.vb: IClassFixture(Of TFixture)
  spec.csharp:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    nameWithType: IClassFixture
    fullName: Xunit.IClassFixture
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TFixture
    nameWithType: TFixture
    fullName: TFixture
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    nameWithType: IClassFixture
    fullName: Xunit.IClassFixture
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TFixture
    nameWithType: TFixture
    fullName: TFixture
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Xunit.IClassFixture`1
  commentId: T:Xunit.IClassFixture`1
  isExternal: true
  name: IClassFixture<TFixture>
  nameWithType: IClassFixture<TFixture>
  fullName: Xunit.IClassFixture<TFixture>
  nameWithType.vb: IClassFixture(Of TFixture)
  fullname.vb: Xunit.IClassFixture(Of TFixture)
  name.vb: IClassFixture(Of TFixture)
  spec.csharp:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    nameWithType: IClassFixture
    fullName: Xunit.IClassFixture
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TFixture
    nameWithType: TFixture
    fullName: TFixture
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    nameWithType: IClassFixture
    fullName: Xunit.IClassFixture
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TFixture
    nameWithType: TFixture
    fullName: TFixture
  - name: )
    nameWithType: )
    fullName: )
- uid: Xunit
  commentId: N:Xunit
  isExternal: false
  name: Xunit
  nameWithType: Xunit
  fullName: Xunit
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: '{TFixture}'
  commentId: '!:TFixture'
  definition: TFixture
  name: TFixture
  nameWithType: TFixture
  fullName: TFixture
- uid: TFixture
  isExternal: false
  name: TFixture
  nameWithType: TFixture
  fullName: TFixture
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.LoadContext
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.LoadContext
  parent: Microsoft.EntityFrameworkCore.Specification.Tests
  isExternal: false
  name: LoadTestBase.LoadContext<>
  nameWithType: LoadTestBase.LoadContext<>
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase.LoadContext<>
  nameWithType.vb: LoadTestBase.LoadContext(Of )
  fullname.vb: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase.LoadContext(Of )
  name.vb: LoadTestBase.LoadContext(Of )
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.LoadContext
    name: LoadTestBase.LoadContext
    nameWithType: LoadTestBase.LoadContext
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase.LoadContext
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase`2.LoadContext
    name: LoadTestBase.LoadContext
    nameWithType: LoadTestBase.LoadContext
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.LoadTestBase.LoadContext
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TTestStore}'
  commentId: '!:TTestStore'
  definition: TTestStore
  name: TTestStore
  nameWithType: TTestStore
  fullName: TTestStore
- uid: TTestStore
  isExternal: false
  name: TTestStore
  nameWithType: TTestStore
  fullName: TTestStore
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
