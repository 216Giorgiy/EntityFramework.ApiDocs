### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  id: InternalEntityTypeBuilder
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  children:
  - Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.CanAddNavigation(System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.CanAddOrReplaceNavigation(System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.CanRemoveForeignKey(Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.CreateForeignKey(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},Microsoft.EntityFrameworkCore.Metadata.Internal.Key,System.String,System.Nullable{System.Boolean},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource,System.Boolean)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.GetActualProperties(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},System.Nullable{Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource})
  - Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.GetOrCreateProperties(System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.GetOrCreateProperties(System.Collections.Generic.IEnumerable{System.String},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource,System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.Internal.Property})
  - Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasBaseType(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasBaseType(System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasBaseType(System.Type,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasForeignKey(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasForeignKey(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},Microsoft.EntityFrameworkCore.Metadata.Internal.Key,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasForeignKey(System.String,System.Collections.Generic.IReadOnlyList{System.String},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasForeignKey(System.String,System.Collections.Generic.IReadOnlyList{System.String},Microsoft.EntityFrameworkCore.Metadata.Internal.Key,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasForeignKey(System.Type,System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasForeignKey(System.Type,System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo},Microsoft.EntityFrameworkCore.Metadata.Internal.Key,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasIndex(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasIndex(System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasIndex(System.Collections.Generic.IReadOnlyList{System.String},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasKey(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},System.Nullable{Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource})
  - Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasKey(System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasKey(System.Collections.Generic.IReadOnlyList{System.String},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Ignore(System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.IsIgnored(System.String,System.Nullable{Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource})
  - Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Navigation(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.Reflection.PropertyInfo,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource,System.Boolean)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Navigation(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.PrimaryKey(System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.PrimaryKey(System.Collections.Generic.IReadOnlyList{System.String},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Property(System.Reflection.MemberInfo,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Property(System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Property(System.String,System.Type,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Relationship(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Relationship(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.Key,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Relationship(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Relationship(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.Key,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Relationship(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.Reflection.PropertyInfo,System.Reflection.PropertyInfo,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Relationship(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.RemoveForeignKey(Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.RemoveForeignKey(Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource,System.Boolean,System.Boolean)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.RemoveIndex(Microsoft.EntityFrameworkCore.Metadata.Internal.Index,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.RemoveKey(Microsoft.EntityFrameworkCore.Metadata.Internal.Key,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource,System.Boolean)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.RemoveShadowPropertiesIfUnused(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property})
  - Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.ReUniquifyTemporaryProperties(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},System.Boolean,System.String)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.UsePropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  langs:
  - csharp
  - vb
  name: InternalEntityTypeBuilder
  nameWithType: InternalEntityTypeBuilder
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: InternalEntityTypeBuilder
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
    startLine: 19
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public class InternalEntityTypeBuilder : InternalMetadataItemBuilder<EntityType>'
    content.vb: >-
      Public Class InternalEntityTypeBuilder
          Inherits InternalMetadataItemBuilder(Of EntityType)
  inheritance:
  - System.Object
  - Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder
  - Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder{Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType}
  - Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataItemBuilder{Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType}
  inheritedMembers:
  - Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataItemBuilder{Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType}.ModelBuilder
  - Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder{Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType}.Metadata
  - Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder.HasAnnotation(System.String,System.Object,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder.CanSetAnnotation(System.String,System.Object,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder.MergeAnnotationsFrom(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Microsoft.EntityFrameworkCore.Metadata.Internal.SqlServerInternalMetadataBuilderExtensions.SqlServer(Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Microsoft.EntityFrameworkCore.Metadata.Internal.SqliteInternalMetadataBuilderExtensions.Sqlite(Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalInternalMetadataBuilderExtensions.Relational(Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder)
  id: '#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder)'
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  langs:
  - csharp
  - vb
  name: InternalEntityTypeBuilder(EntityType, InternalModelBuilder)
  nameWithType: InternalEntityTypeBuilder.InternalEntityTypeBuilder(EntityType, InternalModelBuilder)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.InternalEntityTypeBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType, Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
    startLine: 26
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public InternalEntityTypeBuilder(EntityType metadata, InternalModelBuilder modelBuilder)
    content.vb: Public Sub New(metadata As EntityType, modelBuilder As InternalModelBuilder)
    parameters:
    - id: metadata
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
    - id: modelBuilder
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.PrimaryKey(System.Collections.Generic.IReadOnlyList{System.String},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.PrimaryKey(System.Collections.Generic.IReadOnlyList{System.String},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  id: PrimaryKey(System.Collections.Generic.IReadOnlyList{System.String},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  langs:
  - csharp
  - vb
  name: PrimaryKey(IReadOnlyList<String>, ConfigurationSource)
  nameWithType: InternalEntityTypeBuilder.PrimaryKey(IReadOnlyList<String>, ConfigurationSource)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.PrimaryKey(System.Collections.Generic.IReadOnlyList<System.String>, Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: PrimaryKey
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
    startLine: 35
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual InternalKeyBuilder PrimaryKey(IReadOnlyList<string> propertyNames, ConfigurationSource configurationSource)
    content.vb: Public Overridable Function PrimaryKey(propertyNames As IReadOnlyList(Of String), configurationSource As ConfigurationSource) As InternalKeyBuilder
    parameters:
    - id: propertyNames
      type: System.Collections.Generic.IReadOnlyList{System.String}
    - id: configurationSource
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.PrimaryKey*
  nameWithType.vb: InternalEntityTypeBuilder.PrimaryKey(IReadOnlyList(Of String), ConfigurationSource)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.PrimaryKey(System.Collections.Generic.IReadOnlyList(Of System.String), Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  name.vb: PrimaryKey(IReadOnlyList(Of String), ConfigurationSource)
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.PrimaryKey(System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.PrimaryKey(System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  id: PrimaryKey(System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  langs:
  - csharp
  - vb
  name: PrimaryKey(IReadOnlyList<PropertyInfo>, ConfigurationSource)
  nameWithType: InternalEntityTypeBuilder.PrimaryKey(IReadOnlyList<PropertyInfo>, ConfigurationSource)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.PrimaryKey(System.Collections.Generic.IReadOnlyList<System.Reflection.PropertyInfo>, Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: PrimaryKey
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
    startLine: 42
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual InternalKeyBuilder PrimaryKey(IReadOnlyList<PropertyInfo> clrProperties, ConfigurationSource configurationSource)
    content.vb: Public Overridable Function PrimaryKey(clrProperties As IReadOnlyList(Of PropertyInfo), configurationSource As ConfigurationSource) As InternalKeyBuilder
    parameters:
    - id: clrProperties
      type: System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo}
    - id: configurationSource
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.PrimaryKey*
  nameWithType.vb: InternalEntityTypeBuilder.PrimaryKey(IReadOnlyList(Of PropertyInfo), ConfigurationSource)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.PrimaryKey(System.Collections.Generic.IReadOnlyList(Of System.Reflection.PropertyInfo), Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  name.vb: PrimaryKey(IReadOnlyList(Of PropertyInfo), ConfigurationSource)
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasKey(System.Collections.Generic.IReadOnlyList{System.String},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasKey(System.Collections.Generic.IReadOnlyList{System.String},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  id: HasKey(System.Collections.Generic.IReadOnlyList{System.String},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  langs:
  - csharp
  - vb
  name: HasKey(IReadOnlyList<String>, ConfigurationSource)
  nameWithType: InternalEntityTypeBuilder.HasKey(IReadOnlyList<String>, ConfigurationSource)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasKey(System.Collections.Generic.IReadOnlyList<System.String>, Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: HasKey
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
    startLine: 113
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual InternalKeyBuilder HasKey(IReadOnlyList<string> propertyNames, ConfigurationSource configurationSource)
    content.vb: Public Overridable Function HasKey(propertyNames As IReadOnlyList(Of String), configurationSource As ConfigurationSource) As InternalKeyBuilder
    parameters:
    - id: propertyNames
      type: System.Collections.Generic.IReadOnlyList{System.String}
    - id: configurationSource
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasKey*
  nameWithType.vb: InternalEntityTypeBuilder.HasKey(IReadOnlyList(Of String), ConfigurationSource)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasKey(System.Collections.Generic.IReadOnlyList(Of System.String), Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  name.vb: HasKey(IReadOnlyList(Of String), ConfigurationSource)
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasKey(System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasKey(System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  id: HasKey(System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  langs:
  - csharp
  - vb
  name: HasKey(IReadOnlyList<PropertyInfo>, ConfigurationSource)
  nameWithType: InternalEntityTypeBuilder.HasKey(IReadOnlyList<PropertyInfo>, ConfigurationSource)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasKey(System.Collections.Generic.IReadOnlyList<System.Reflection.PropertyInfo>, Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: HasKey
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
    startLine: 120
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual InternalKeyBuilder HasKey(IReadOnlyList<PropertyInfo> clrProperties, ConfigurationSource configurationSource)
    content.vb: Public Overridable Function HasKey(clrProperties As IReadOnlyList(Of PropertyInfo), configurationSource As ConfigurationSource) As InternalKeyBuilder
    parameters:
    - id: clrProperties
      type: System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo}
    - id: configurationSource
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasKey*
  nameWithType.vb: InternalEntityTypeBuilder.HasKey(IReadOnlyList(Of PropertyInfo), ConfigurationSource)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasKey(System.Collections.Generic.IReadOnlyList(Of System.Reflection.PropertyInfo), Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  name.vb: HasKey(IReadOnlyList(Of PropertyInfo), ConfigurationSource)
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasKey(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},System.Nullable{Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource})
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasKey(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},System.Nullable{Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource})
  id: HasKey(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},System.Nullable{Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource})
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  langs:
  - csharp
  - vb
  name: HasKey(IReadOnlyList<Property>, Nullable<ConfigurationSource>)
  nameWithType: InternalEntityTypeBuilder.HasKey(IReadOnlyList<Property>, Nullable<ConfigurationSource>)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasKey(System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Metadata.Internal.Property>, System.Nullable<Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: HasKey
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
    startLine: 127
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual InternalKeyBuilder HasKey(IReadOnlyList<Property> properties, ConfigurationSource? configurationSource)
    content.vb: Public Overridable Function HasKey(properties As IReadOnlyList(Of  Property), configurationSource As ConfigurationSource?) As InternalKeyBuilder
    parameters:
    - id: properties
      type: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property}
    - id: configurationSource
      type: System.Nullable{Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource}
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasKey*
  nameWithType.vb: InternalEntityTypeBuilder.HasKey(IReadOnlyList(Of Property), Nullable(Of ConfigurationSource))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasKey(System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Metadata.Internal.Property), System.Nullable(Of Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource))
  name.vb: HasKey(IReadOnlyList(Of Property), Nullable(Of ConfigurationSource))
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.RemoveKey(Microsoft.EntityFrameworkCore.Metadata.Internal.Key,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource,System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.RemoveKey(Microsoft.EntityFrameworkCore.Metadata.Internal.Key,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource,System.Boolean)
  id: RemoveKey(Microsoft.EntityFrameworkCore.Metadata.Internal.Key,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource,System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  langs:
  - csharp
  - vb
  name: RemoveKey(Key, ConfigurationSource, Boolean)
  nameWithType: InternalEntityTypeBuilder.RemoveKey(Key, ConfigurationSource, Boolean)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.RemoveKey(Microsoft.EntityFrameworkCore.Metadata.Internal.Key, Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: RemoveKey
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
    startLine: 168
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual ConfigurationSource? RemoveKey(Key key, ConfigurationSource configurationSource, bool runConventions = true)
    content.vb: Public Overridable Function RemoveKey(key As Key, configurationSource As ConfigurationSource, runConventions As Boolean = True) As ConfigurationSource?
    parameters:
    - id: key
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.Key
    - id: configurationSource
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
    - id: runConventions
      type: System.Boolean
    return:
      type: System.Nullable{Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource}
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.RemoveKey*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Property(System.String,System.Type,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Property(System.String,System.Type,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  id: Property(System.String,System.Type,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  langs:
  - csharp
  - vb
  name: Property(String, Type, ConfigurationSource)
  nameWithType: InternalEntityTypeBuilder.Property(String, Type, ConfigurationSource)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Property(System.String, System.Type, Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Property
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
    startLine: 281
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual InternalPropertyBuilder Property(string propertyName, Type propertyType, ConfigurationSource configurationSource)
    content.vb: Public Overridable Function Property(propertyName As String, propertyType As Type, configurationSource As ConfigurationSource) As InternalPropertyBuilder
    parameters:
    - id: propertyName
      type: System.String
    - id: propertyType
      type: System.Type
    - id: configurationSource
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Property*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Property(System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Property(System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  id: Property(System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  langs:
  - csharp
  - vb
  name: Property(String, ConfigurationSource)
  nameWithType: InternalEntityTypeBuilder.Property(String, ConfigurationSource)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Property(System.String, Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Property
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
    startLine: 289
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual InternalPropertyBuilder Property(string propertyName, ConfigurationSource configurationSource)
    content.vb: Public Overridable Function Property(propertyName As String, configurationSource As ConfigurationSource) As InternalPropertyBuilder
    parameters:
    - id: propertyName
      type: System.String
    - id: configurationSource
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Property*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Property(System.Reflection.MemberInfo,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Property(System.Reflection.MemberInfo,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  id: Property(System.Reflection.MemberInfo,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  langs:
  - csharp
  - vb
  name: Property(MemberInfo, ConfigurationSource)
  nameWithType: InternalEntityTypeBuilder.Property(MemberInfo, ConfigurationSource)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Property(System.Reflection.MemberInfo, Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Property
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
    startLine: 296
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual InternalPropertyBuilder Property(MemberInfo clrProperty, ConfigurationSource configurationSource)
    content.vb: Public Overridable Function Property(clrProperty As MemberInfo, configurationSource As ConfigurationSource) As InternalPropertyBuilder
    parameters:
    - id: clrProperty
      type: System.Reflection.MemberInfo
    - id: configurationSource
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Property*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.CanAddNavigation(System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.CanAddNavigation(System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  id: CanAddNavigation(System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  langs:
  - csharp
  - vb
  name: CanAddNavigation(String, ConfigurationSource)
  nameWithType: InternalEntityTypeBuilder.CanAddNavigation(String, ConfigurationSource)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.CanAddNavigation(System.String, Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CanAddNavigation
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
    startLine: 420
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual bool CanAddNavigation(string navigationName, ConfigurationSource configurationSource)
    content.vb: Public Overridable Function CanAddNavigation(navigationName As String, configurationSource As ConfigurationSource) As Boolean
    parameters:
    - id: navigationName
      type: System.String
    - id: configurationSource
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
    return:
      type: System.Boolean
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.CanAddNavigation*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.CanAddOrReplaceNavigation(System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.CanAddOrReplaceNavigation(System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  id: CanAddOrReplaceNavigation(System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  langs:
  - csharp
  - vb
  name: CanAddOrReplaceNavigation(String, ConfigurationSource)
  nameWithType: InternalEntityTypeBuilder.CanAddOrReplaceNavigation(String, ConfigurationSource)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.CanAddOrReplaceNavigation(System.String, Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CanAddOrReplaceNavigation
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
    startLine: 428
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual bool CanAddOrReplaceNavigation(string navigationName, ConfigurationSource configurationSource)
    content.vb: Public Overridable Function CanAddOrReplaceNavigation(navigationName As String, configurationSource As ConfigurationSource) As Boolean
    parameters:
    - id: navigationName
      type: System.String
    - id: configurationSource
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
    return:
      type: System.Boolean
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.CanAddOrReplaceNavigation*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.IsIgnored(System.String,System.Nullable{Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource})
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.IsIgnored(System.String,System.Nullable{Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource})
  id: IsIgnored(System.String,System.Nullable{Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource})
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  langs:
  - csharp
  - vb
  name: IsIgnored(String, Nullable<ConfigurationSource>)
  nameWithType: InternalEntityTypeBuilder.IsIgnored(String, Nullable<ConfigurationSource>)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.IsIgnored(System.String, System.Nullable<Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: IsIgnored
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
    startLine: 437
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual bool IsIgnored(string name, ConfigurationSource? configurationSource)
    content.vb: Public Overridable Function IsIgnored(name As String, configurationSource As ConfigurationSource?) As Boolean
    parameters:
    - id: name
      type: System.String
    - id: configurationSource
      type: System.Nullable{Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource}
    return:
      type: System.Boolean
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.IsIgnored*
  nameWithType.vb: InternalEntityTypeBuilder.IsIgnored(String, Nullable(Of ConfigurationSource))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.IsIgnored(System.String, System.Nullable(Of Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource))
  name.vb: IsIgnored(String, Nullable(Of ConfigurationSource))
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.CanRemoveForeignKey(Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.CanRemoveForeignKey(Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  id: CanRemoveForeignKey(Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  langs:
  - csharp
  - vb
  name: CanRemoveForeignKey(ForeignKey, ConfigurationSource)
  nameWithType: InternalEntityTypeBuilder.CanRemoveForeignKey(ForeignKey, ConfigurationSource)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.CanRemoveForeignKey(Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey, Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CanRemoveForeignKey
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
    startLine: 455
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual bool CanRemoveForeignKey(ForeignKey foreignKey, ConfigurationSource configurationSource)
    content.vb: Public Overridable Function CanRemoveForeignKey(foreignKey As ForeignKey, configurationSource As ConfigurationSource) As Boolean
    parameters:
    - id: foreignKey
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey
    - id: configurationSource
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
    return:
      type: System.Boolean
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.CanRemoveForeignKey*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Ignore(System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Ignore(System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  id: Ignore(System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  langs:
  - csharp
  - vb
  name: Ignore(String, ConfigurationSource)
  nameWithType: InternalEntityTypeBuilder.Ignore(String, ConfigurationSource)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Ignore(System.String, Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Ignore
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
    startLine: 467
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual bool Ignore(string name, ConfigurationSource configurationSource)
    content.vb: Public Overridable Function Ignore(name As String, configurationSource As ConfigurationSource) As Boolean
    parameters:
    - id: name
      type: System.String
    - id: configurationSource
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
    return:
      type: System.Boolean
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Ignore*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasBaseType(System.Type,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasBaseType(System.Type,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  id: HasBaseType(System.Type,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  langs:
  - csharp
  - vb
  name: HasBaseType(Type, ConfigurationSource)
  nameWithType: InternalEntityTypeBuilder.HasBaseType(Type, ConfigurationSource)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasBaseType(System.Type, Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: HasBaseType
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
    startLine: 557
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual InternalEntityTypeBuilder HasBaseType(Type baseEntityType, ConfigurationSource configurationSource)
    content.vb: Public Overridable Function HasBaseType(baseEntityType As Type, configurationSource As ConfigurationSource) As InternalEntityTypeBuilder
    parameters:
    - id: baseEntityType
      type: System.Type
    - id: configurationSource
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasBaseType*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasBaseType(System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasBaseType(System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  id: HasBaseType(System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  langs:
  - csharp
  - vb
  name: HasBaseType(String, ConfigurationSource)
  nameWithType: InternalEntityTypeBuilder.HasBaseType(String, ConfigurationSource)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasBaseType(System.String, Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: HasBaseType
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
    startLine: 574
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual InternalEntityTypeBuilder HasBaseType(string baseEntityTypeName, ConfigurationSource configurationSource)
    content.vb: Public Overridable Function HasBaseType(baseEntityTypeName As String, configurationSource As ConfigurationSource) As InternalEntityTypeBuilder
    parameters:
    - id: baseEntityTypeName
      type: System.String
    - id: configurationSource
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasBaseType*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasBaseType(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasBaseType(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  id: HasBaseType(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  langs:
  - csharp
  - vb
  name: HasBaseType(EntityType, ConfigurationSource)
  nameWithType: InternalEntityTypeBuilder.HasBaseType(EntityType, ConfigurationSource)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasBaseType(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType, Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: HasBaseType
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
    startLine: 591
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual InternalEntityTypeBuilder HasBaseType(EntityType baseEntityType, ConfigurationSource configurationSource)
    content.vb: Public Overridable Function HasBaseType(baseEntityType As EntityType, configurationSource As ConfigurationSource) As InternalEntityTypeBuilder
    parameters:
    - id: baseEntityType
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
    - id: configurationSource
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasBaseType*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.RemoveForeignKey(Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.RemoveForeignKey(Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  id: RemoveForeignKey(Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  langs:
  - csharp
  - vb
  name: RemoveForeignKey(ForeignKey, ConfigurationSource)
  nameWithType: InternalEntityTypeBuilder.RemoveForeignKey(ForeignKey, ConfigurationSource)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.RemoveForeignKey(Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey, Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: RemoveForeignKey
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
    startLine: 983
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual ConfigurationSource? RemoveForeignKey(ForeignKey foreignKey, ConfigurationSource configurationSource)
    content.vb: Public Overridable Function RemoveForeignKey(foreignKey As ForeignKey, configurationSource As ConfigurationSource) As ConfigurationSource?
    parameters:
    - id: foreignKey
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey
    - id: configurationSource
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
    return:
      type: System.Nullable{Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource}
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.RemoveForeignKey*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.RemoveForeignKey(Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource,System.Boolean,System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.RemoveForeignKey(Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource,System.Boolean,System.Boolean)
  id: RemoveForeignKey(Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource,System.Boolean,System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  langs:
  - csharp
  - vb
  name: RemoveForeignKey(ForeignKey, ConfigurationSource, Boolean, Boolean)
  nameWithType: InternalEntityTypeBuilder.RemoveForeignKey(ForeignKey, ConfigurationSource, Boolean, Boolean)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.RemoveForeignKey(Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey, Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource, System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: RemoveForeignKey
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
    startLine: 990
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual ConfigurationSource? RemoveForeignKey(ForeignKey foreignKey, ConfigurationSource configurationSource, bool canOverrideSameSource = true, bool runConventions = true)
    content.vb: Public Overridable Function RemoveForeignKey(foreignKey As ForeignKey, configurationSource As ConfigurationSource, canOverrideSameSource As Boolean = True, runConventions As Boolean = True) As ConfigurationSource?
    parameters:
    - id: foreignKey
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey
    - id: configurationSource
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
    - id: canOverrideSameSource
      type: System.Boolean
    - id: runConventions
      type: System.Boolean
    return:
      type: System.Nullable{Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource}
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.RemoveForeignKey*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.RemoveShadowPropertiesIfUnused(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property})
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.RemoveShadowPropertiesIfUnused(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property})
  id: RemoveShadowPropertiesIfUnused(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property})
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  langs:
  - csharp
  - vb
  name: RemoveShadowPropertiesIfUnused(IReadOnlyList<Property>)
  nameWithType: InternalEntityTypeBuilder.RemoveShadowPropertiesIfUnused(IReadOnlyList<Property>)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.RemoveShadowPropertiesIfUnused(System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Metadata.Internal.Property>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: RemoveShadowPropertiesIfUnused
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
    startLine: 1039
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual void RemoveShadowPropertiesIfUnused(IReadOnlyList<Property> properties)
    content.vb: Public Overridable Sub RemoveShadowPropertiesIfUnused(properties As IReadOnlyList(Of  Property))
    parameters:
    - id: properties
      type: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property}
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.RemoveShadowPropertiesIfUnused*
  nameWithType.vb: InternalEntityTypeBuilder.RemoveShadowPropertiesIfUnused(IReadOnlyList(Of Property))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.RemoveShadowPropertiesIfUnused(System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Metadata.Internal.Property))
  name.vb: RemoveShadowPropertiesIfUnused(IReadOnlyList(Of Property))
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasIndex(System.Collections.Generic.IReadOnlyList{System.String},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasIndex(System.Collections.Generic.IReadOnlyList{System.String},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  id: HasIndex(System.Collections.Generic.IReadOnlyList{System.String},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  langs:
  - csharp
  - vb
  name: HasIndex(IReadOnlyList<String>, ConfigurationSource)
  nameWithType: InternalEntityTypeBuilder.HasIndex(IReadOnlyList<String>, ConfigurationSource)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasIndex(System.Collections.Generic.IReadOnlyList<System.String>, Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: HasIndex
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
    startLine: 1081
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual InternalIndexBuilder HasIndex(IReadOnlyList<string> propertyNames, ConfigurationSource configurationSource)
    content.vb: Public Overridable Function HasIndex(propertyNames As IReadOnlyList(Of String), configurationSource As ConfigurationSource) As InternalIndexBuilder
    parameters:
    - id: propertyNames
      type: System.Collections.Generic.IReadOnlyList{System.String}
    - id: configurationSource
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasIndex*
  nameWithType.vb: InternalEntityTypeBuilder.HasIndex(IReadOnlyList(Of String), ConfigurationSource)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasIndex(System.Collections.Generic.IReadOnlyList(Of System.String), Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  name.vb: HasIndex(IReadOnlyList(Of String), ConfigurationSource)
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasIndex(System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasIndex(System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  id: HasIndex(System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  langs:
  - csharp
  - vb
  name: HasIndex(IReadOnlyList<PropertyInfo>, ConfigurationSource)
  nameWithType: InternalEntityTypeBuilder.HasIndex(IReadOnlyList<PropertyInfo>, ConfigurationSource)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasIndex(System.Collections.Generic.IReadOnlyList<System.Reflection.PropertyInfo>, Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: HasIndex
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
    startLine: 1088
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual InternalIndexBuilder HasIndex(IReadOnlyList<PropertyInfo> clrProperties, ConfigurationSource configurationSource)
    content.vb: Public Overridable Function HasIndex(clrProperties As IReadOnlyList(Of PropertyInfo), configurationSource As ConfigurationSource) As InternalIndexBuilder
    parameters:
    - id: clrProperties
      type: System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo}
    - id: configurationSource
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasIndex*
  nameWithType.vb: InternalEntityTypeBuilder.HasIndex(IReadOnlyList(Of PropertyInfo), ConfigurationSource)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasIndex(System.Collections.Generic.IReadOnlyList(Of System.Reflection.PropertyInfo), Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  name.vb: HasIndex(IReadOnlyList(Of PropertyInfo), ConfigurationSource)
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasIndex(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasIndex(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  id: HasIndex(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  langs:
  - csharp
  - vb
  name: HasIndex(IReadOnlyList<Property>, ConfigurationSource)
  nameWithType: InternalEntityTypeBuilder.HasIndex(IReadOnlyList<Property>, ConfigurationSource)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasIndex(System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Metadata.Internal.Property>, Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: HasIndex
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
    startLine: 1095
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual InternalIndexBuilder HasIndex(IReadOnlyList<Property> properties, ConfigurationSource configurationSource)
    content.vb: Public Overridable Function HasIndex(properties As IReadOnlyList(Of  Property), configurationSource As ConfigurationSource) As InternalIndexBuilder
    parameters:
    - id: properties
      type: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property}
    - id: configurationSource
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasIndex*
  nameWithType.vb: InternalEntityTypeBuilder.HasIndex(IReadOnlyList(Of Property), ConfigurationSource)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasIndex(System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Metadata.Internal.Property), Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  name.vb: HasIndex(IReadOnlyList(Of Property), ConfigurationSource)
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.RemoveIndex(Microsoft.EntityFrameworkCore.Metadata.Internal.Index,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.RemoveIndex(Microsoft.EntityFrameworkCore.Metadata.Internal.Index,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  id: RemoveIndex(Microsoft.EntityFrameworkCore.Metadata.Internal.Index,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  langs:
  - csharp
  - vb
  name: RemoveIndex(Index, ConfigurationSource)
  nameWithType: InternalEntityTypeBuilder.RemoveIndex(Index, ConfigurationSource)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.RemoveIndex(Microsoft.EntityFrameworkCore.Metadata.Internal.Index, Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: RemoveIndex
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
    startLine: 1145
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual ConfigurationSource? RemoveIndex(Index index, ConfigurationSource configurationSource)
    content.vb: Public Overridable Function RemoveIndex(index As Index, configurationSource As ConfigurationSource) As ConfigurationSource?
    parameters:
    - id: index
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.Index
    - id: configurationSource
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
    return:
      type: System.Nullable{Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource}
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.RemoveIndex*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasForeignKey(System.String,System.Collections.Generic.IReadOnlyList{System.String},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasForeignKey(System.String,System.Collections.Generic.IReadOnlyList{System.String},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  id: HasForeignKey(System.String,System.Collections.Generic.IReadOnlyList{System.String},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  langs:
  - csharp
  - vb
  name: HasForeignKey(String, IReadOnlyList<String>, ConfigurationSource)
  nameWithType: InternalEntityTypeBuilder.HasForeignKey(String, IReadOnlyList<String>, ConfigurationSource)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasForeignKey(System.String, System.Collections.Generic.IReadOnlyList<System.String>, Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: HasForeignKey
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
    startLine: 1188
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual InternalRelationshipBuilder HasForeignKey(string principalEntityTypeName, IReadOnlyList<string> propertyNames, ConfigurationSource configurationSource)
    content.vb: Public Overridable Function HasForeignKey(principalEntityTypeName As String, propertyNames As IReadOnlyList(Of String), configurationSource As ConfigurationSource) As InternalRelationshipBuilder
    parameters:
    - id: principalEntityTypeName
      type: System.String
    - id: propertyNames
      type: System.Collections.Generic.IReadOnlyList{System.String}
    - id: configurationSource
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasForeignKey*
  nameWithType.vb: InternalEntityTypeBuilder.HasForeignKey(String, IReadOnlyList(Of String), ConfigurationSource)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasForeignKey(System.String, System.Collections.Generic.IReadOnlyList(Of System.String), Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  name.vb: HasForeignKey(String, IReadOnlyList(Of String), ConfigurationSource)
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasForeignKey(System.String,System.Collections.Generic.IReadOnlyList{System.String},Microsoft.EntityFrameworkCore.Metadata.Internal.Key,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasForeignKey(System.String,System.Collections.Generic.IReadOnlyList{System.String},Microsoft.EntityFrameworkCore.Metadata.Internal.Key,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  id: HasForeignKey(System.String,System.Collections.Generic.IReadOnlyList{System.String},Microsoft.EntityFrameworkCore.Metadata.Internal.Key,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  langs:
  - csharp
  - vb
  name: HasForeignKey(String, IReadOnlyList<String>, Key, ConfigurationSource)
  nameWithType: InternalEntityTypeBuilder.HasForeignKey(String, IReadOnlyList<String>, Key, ConfigurationSource)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasForeignKey(System.String, System.Collections.Generic.IReadOnlyList<System.String>, Microsoft.EntityFrameworkCore.Metadata.Internal.Key, Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: HasForeignKey
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
    startLine: 1210
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual InternalRelationshipBuilder HasForeignKey(string principalEntityTypeName, IReadOnlyList<string> propertyNames, Key principalKey, ConfigurationSource configurationSource)
    content.vb: Public Overridable Function HasForeignKey(principalEntityTypeName As String, propertyNames As IReadOnlyList(Of String), principalKey As Key, configurationSource As ConfigurationSource) As InternalRelationshipBuilder
    parameters:
    - id: principalEntityTypeName
      type: System.String
    - id: propertyNames
      type: System.Collections.Generic.IReadOnlyList{System.String}
    - id: principalKey
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.Key
    - id: configurationSource
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasForeignKey*
  nameWithType.vb: InternalEntityTypeBuilder.HasForeignKey(String, IReadOnlyList(Of String), Key, ConfigurationSource)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasForeignKey(System.String, System.Collections.Generic.IReadOnlyList(Of System.String), Microsoft.EntityFrameworkCore.Metadata.Internal.Key, Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  name.vb: HasForeignKey(String, IReadOnlyList(Of String), Key, ConfigurationSource)
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasForeignKey(System.Type,System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasForeignKey(System.Type,System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  id: HasForeignKey(System.Type,System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  langs:
  - csharp
  - vb
  name: HasForeignKey(Type, IReadOnlyList<PropertyInfo>, ConfigurationSource)
  nameWithType: InternalEntityTypeBuilder.HasForeignKey(Type, IReadOnlyList<PropertyInfo>, ConfigurationSource)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasForeignKey(System.Type, System.Collections.Generic.IReadOnlyList<System.Reflection.PropertyInfo>, Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: HasForeignKey
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
    startLine: 1233
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual InternalRelationshipBuilder HasForeignKey(Type principalClrType, IReadOnlyList<PropertyInfo> clrProperties, ConfigurationSource configurationSource)
    content.vb: Public Overridable Function HasForeignKey(principalClrType As Type, clrProperties As IReadOnlyList(Of PropertyInfo), configurationSource As ConfigurationSource) As InternalRelationshipBuilder
    parameters:
    - id: principalClrType
      type: System.Type
    - id: clrProperties
      type: System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo}
    - id: configurationSource
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasForeignKey*
  nameWithType.vb: InternalEntityTypeBuilder.HasForeignKey(Type, IReadOnlyList(Of PropertyInfo), ConfigurationSource)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasForeignKey(System.Type, System.Collections.Generic.IReadOnlyList(Of System.Reflection.PropertyInfo), Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  name.vb: HasForeignKey(Type, IReadOnlyList(Of PropertyInfo), ConfigurationSource)
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasForeignKey(System.Type,System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo},Microsoft.EntityFrameworkCore.Metadata.Internal.Key,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasForeignKey(System.Type,System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo},Microsoft.EntityFrameworkCore.Metadata.Internal.Key,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  id: HasForeignKey(System.Type,System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo},Microsoft.EntityFrameworkCore.Metadata.Internal.Key,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  langs:
  - csharp
  - vb
  name: HasForeignKey(Type, IReadOnlyList<PropertyInfo>, Key, ConfigurationSource)
  nameWithType: InternalEntityTypeBuilder.HasForeignKey(Type, IReadOnlyList<PropertyInfo>, Key, ConfigurationSource)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasForeignKey(System.Type, System.Collections.Generic.IReadOnlyList<System.Reflection.PropertyInfo>, Microsoft.EntityFrameworkCore.Metadata.Internal.Key, Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: HasForeignKey
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
    startLine: 1255
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual InternalRelationshipBuilder HasForeignKey(Type principalClrType, IReadOnlyList<PropertyInfo> clrProperties, Key principalKey, ConfigurationSource configurationSource)
    content.vb: Public Overridable Function HasForeignKey(principalClrType As Type, clrProperties As IReadOnlyList(Of PropertyInfo), principalKey As Key, configurationSource As ConfigurationSource) As InternalRelationshipBuilder
    parameters:
    - id: principalClrType
      type: System.Type
    - id: clrProperties
      type: System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo}
    - id: principalKey
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.Key
    - id: configurationSource
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasForeignKey*
  nameWithType.vb: InternalEntityTypeBuilder.HasForeignKey(Type, IReadOnlyList(Of PropertyInfo), Key, ConfigurationSource)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasForeignKey(System.Type, System.Collections.Generic.IReadOnlyList(Of System.Reflection.PropertyInfo), Microsoft.EntityFrameworkCore.Metadata.Internal.Key, Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  name.vb: HasForeignKey(Type, IReadOnlyList(Of PropertyInfo), Key, ConfigurationSource)
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasForeignKey(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasForeignKey(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  id: HasForeignKey(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  langs:
  - csharp
  - vb
  name: HasForeignKey(InternalEntityTypeBuilder, IReadOnlyList<Property>, ConfigurationSource)
  nameWithType: InternalEntityTypeBuilder.HasForeignKey(InternalEntityTypeBuilder, IReadOnlyList<Property>, ConfigurationSource)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasForeignKey(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder, System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Metadata.Internal.Property>, Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: HasForeignKey
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
    startLine: 1278
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual InternalRelationshipBuilder HasForeignKey(InternalEntityTypeBuilder principalEntityTypeBuilder, IReadOnlyList<Property> dependentProperties, ConfigurationSource configurationSource)
    content.vb: Public Overridable Function HasForeignKey(principalEntityTypeBuilder As InternalEntityTypeBuilder, dependentProperties As IReadOnlyList(Of  Property), configurationSource As ConfigurationSource) As InternalRelationshipBuilder
    parameters:
    - id: principalEntityTypeBuilder
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
    - id: dependentProperties
      type: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property}
    - id: configurationSource
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasForeignKey*
  nameWithType.vb: InternalEntityTypeBuilder.HasForeignKey(InternalEntityTypeBuilder, IReadOnlyList(Of Property), ConfigurationSource)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasForeignKey(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder, System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Metadata.Internal.Property), Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  name.vb: HasForeignKey(InternalEntityTypeBuilder, IReadOnlyList(Of Property), ConfigurationSource)
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasForeignKey(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},Microsoft.EntityFrameworkCore.Metadata.Internal.Key,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasForeignKey(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},Microsoft.EntityFrameworkCore.Metadata.Internal.Key,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  id: HasForeignKey(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},Microsoft.EntityFrameworkCore.Metadata.Internal.Key,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  langs:
  - csharp
  - vb
  name: HasForeignKey(InternalEntityTypeBuilder, IReadOnlyList<Property>, Key, ConfigurationSource)
  nameWithType: InternalEntityTypeBuilder.HasForeignKey(InternalEntityTypeBuilder, IReadOnlyList<Property>, Key, ConfigurationSource)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasForeignKey(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder, System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Metadata.Internal.Property>, Microsoft.EntityFrameworkCore.Metadata.Internal.Key, Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: HasForeignKey
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
    startLine: 1291
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual InternalRelationshipBuilder HasForeignKey(InternalEntityTypeBuilder principalEntityTypeBuilder, IReadOnlyList<Property> dependentProperties, Key principalKey, ConfigurationSource configurationSource)
    content.vb: Public Overridable Function HasForeignKey(principalEntityTypeBuilder As InternalEntityTypeBuilder, dependentProperties As IReadOnlyList(Of  Property), principalKey As Key, configurationSource As ConfigurationSource) As InternalRelationshipBuilder
    parameters:
    - id: principalEntityTypeBuilder
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
    - id: dependentProperties
      type: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property}
    - id: principalKey
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.Key
    - id: configurationSource
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasForeignKey*
  nameWithType.vb: InternalEntityTypeBuilder.HasForeignKey(InternalEntityTypeBuilder, IReadOnlyList(Of Property), Key, ConfigurationSource)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasForeignKey(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder, System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Metadata.Internal.Property), Microsoft.EntityFrameworkCore.Metadata.Internal.Key, Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  name.vb: HasForeignKey(InternalEntityTypeBuilder, IReadOnlyList(Of Property), Key, ConfigurationSource)
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Relationship(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Relationship(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  id: Relationship(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  langs:
  - csharp
  - vb
  name: Relationship(InternalEntityTypeBuilder, String, String, ConfigurationSource)
  nameWithType: InternalEntityTypeBuilder.Relationship(InternalEntityTypeBuilder, String, String, ConfigurationSource)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Relationship(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder, System.String, System.String, Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Relationship
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
    startLine: 1347
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual InternalRelationshipBuilder Relationship(InternalEntityTypeBuilder targetEntityTypeBuilder, string navigationToTargetName, string inverseNavigationName, ConfigurationSource configurationSource)
    content.vb: Public Overridable Function Relationship(targetEntityTypeBuilder As InternalEntityTypeBuilder, navigationToTargetName As String, inverseNavigationName As String, configurationSource As ConfigurationSource) As InternalRelationshipBuilder
    parameters:
    - id: targetEntityTypeBuilder
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
    - id: navigationToTargetName
      type: System.String
    - id: inverseNavigationName
      type: System.String
    - id: configurationSource
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Relationship*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Relationship(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.Reflection.PropertyInfo,System.Reflection.PropertyInfo,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Relationship(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.Reflection.PropertyInfo,System.Reflection.PropertyInfo,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  id: Relationship(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.Reflection.PropertyInfo,System.Reflection.PropertyInfo,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  langs:
  - csharp
  - vb
  name: Relationship(InternalEntityTypeBuilder, PropertyInfo, PropertyInfo, ConfigurationSource)
  nameWithType: InternalEntityTypeBuilder.Relationship(InternalEntityTypeBuilder, PropertyInfo, PropertyInfo, ConfigurationSource)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Relationship(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder, System.Reflection.PropertyInfo, System.Reflection.PropertyInfo, Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Relationship
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
    startLine: 1362
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual InternalRelationshipBuilder Relationship(InternalEntityTypeBuilder targetEntityTypeBuilder, PropertyInfo navigationToTarget, PropertyInfo inverseNavigation, ConfigurationSource configurationSource)
    content.vb: Public Overridable Function Relationship(targetEntityTypeBuilder As InternalEntityTypeBuilder, navigationToTarget As PropertyInfo, inverseNavigation As PropertyInfo, configurationSource As ConfigurationSource) As InternalRelationshipBuilder
    parameters:
    - id: targetEntityTypeBuilder
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
    - id: navigationToTarget
      type: System.Reflection.PropertyInfo
    - id: inverseNavigation
      type: System.Reflection.PropertyInfo
    - id: configurationSource
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Relationship*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Relationship(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Relationship(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  id: Relationship(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  langs:
  - csharp
  - vb
  name: Relationship(EntityType, ConfigurationSource)
  nameWithType: InternalEntityTypeBuilder.Relationship(EntityType, ConfigurationSource)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Relationship(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType, Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Relationship
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
    startLine: 1496
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual InternalRelationshipBuilder Relationship(EntityType principalEntityType, ConfigurationSource configurationSource)
    content.vb: Public Overridable Function Relationship(principalEntityType As EntityType, configurationSource As ConfigurationSource) As InternalRelationshipBuilder
    parameters:
    - id: principalEntityType
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
    - id: configurationSource
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Relationship*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Relationship(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.Key,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Relationship(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.Key,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  id: Relationship(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.Key,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  langs:
  - csharp
  - vb
  name: Relationship(EntityType, Key, ConfigurationSource)
  nameWithType: InternalEntityTypeBuilder.Relationship(EntityType, Key, ConfigurationSource)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Relationship(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType, Microsoft.EntityFrameworkCore.Metadata.Internal.Key, Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Relationship
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
    startLine: 1505
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual InternalRelationshipBuilder Relationship(EntityType principalEntityType, Key principalKey, ConfigurationSource configurationSource)
    content.vb: Public Overridable Function Relationship(principalEntityType As EntityType, principalKey As Key, configurationSource As ConfigurationSource) As InternalRelationshipBuilder
    parameters:
    - id: principalEntityType
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
    - id: principalKey
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.Key
    - id: configurationSource
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Relationship*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Relationship(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Relationship(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  id: Relationship(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  langs:
  - csharp
  - vb
  name: Relationship(InternalEntityTypeBuilder, ConfigurationSource)
  nameWithType: InternalEntityTypeBuilder.Relationship(InternalEntityTypeBuilder, ConfigurationSource)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Relationship(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Relationship
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
    startLine: 1515
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual InternalRelationshipBuilder Relationship(InternalEntityTypeBuilder principalEntityTypeBuilder, ConfigurationSource configurationSource)
    content.vb: Public Overridable Function Relationship(principalEntityTypeBuilder As InternalEntityTypeBuilder, configurationSource As ConfigurationSource) As InternalRelationshipBuilder
    parameters:
    - id: principalEntityTypeBuilder
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
    - id: configurationSource
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Relationship*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Relationship(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.Key,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Relationship(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.Key,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  id: Relationship(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.Key,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  langs:
  - csharp
  - vb
  name: Relationship(InternalEntityTypeBuilder, Key, ConfigurationSource)
  nameWithType: InternalEntityTypeBuilder.Relationship(InternalEntityTypeBuilder, Key, ConfigurationSource)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Relationship(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Internal.Key, Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Relationship
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
    startLine: 1524
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual InternalRelationshipBuilder Relationship(InternalEntityTypeBuilder principalEntityTypeBuilder, Key principalKey, ConfigurationSource configurationSource)
    content.vb: Public Overridable Function Relationship(principalEntityTypeBuilder As InternalEntityTypeBuilder, principalKey As Key, configurationSource As ConfigurationSource) As InternalRelationshipBuilder
    parameters:
    - id: principalEntityTypeBuilder
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
    - id: principalKey
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.Key
    - id: configurationSource
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Relationship*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Navigation(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Navigation(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  id: Navigation(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  langs:
  - csharp
  - vb
  name: Navigation(InternalEntityTypeBuilder, String, ConfigurationSource)
  nameWithType: InternalEntityTypeBuilder.Navigation(InternalEntityTypeBuilder, String, ConfigurationSource)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Navigation(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder, System.String, Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Navigation
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
    startLine: 1566
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual InternalRelationshipBuilder Navigation(InternalEntityTypeBuilder targetEntityTypeBuilder, string navigationName, ConfigurationSource configurationSource)
    content.vb: Public Overridable Function Navigation(targetEntityTypeBuilder As InternalEntityTypeBuilder, navigationName As String, configurationSource As ConfigurationSource) As InternalRelationshipBuilder
    parameters:
    - id: targetEntityTypeBuilder
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
    - id: navigationName
      type: System.String
    - id: configurationSource
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Navigation*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Navigation(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.Reflection.PropertyInfo,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource,System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Navigation(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.Reflection.PropertyInfo,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource,System.Boolean)
  id: Navigation(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.Reflection.PropertyInfo,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource,System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  langs:
  - csharp
  - vb
  name: Navigation(InternalEntityTypeBuilder, PropertyInfo, ConfigurationSource, Boolean)
  nameWithType: InternalEntityTypeBuilder.Navigation(InternalEntityTypeBuilder, PropertyInfo, ConfigurationSource, Boolean)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Navigation(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder, System.Reflection.PropertyInfo, Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Navigation
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
    startLine: 1580
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual InternalRelationshipBuilder Navigation(InternalEntityTypeBuilder targetEntityTypeBuilder, PropertyInfo navigationProperty, ConfigurationSource configurationSource, bool strictPrincipalEnd = false)
    content.vb: Public Overridable Function Navigation(targetEntityTypeBuilder As InternalEntityTypeBuilder, navigationProperty As PropertyInfo, configurationSource As ConfigurationSource, strictPrincipalEnd As Boolean = False) As InternalRelationshipBuilder
    parameters:
    - id: targetEntityTypeBuilder
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
    - id: navigationProperty
      type: System.Reflection.PropertyInfo
    - id: configurationSource
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
    - id: strictPrincipalEnd
      type: System.Boolean
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Navigation*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.CreateForeignKey(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},Microsoft.EntityFrameworkCore.Metadata.Internal.Key,System.String,System.Nullable{System.Boolean},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource,System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.CreateForeignKey(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},Microsoft.EntityFrameworkCore.Metadata.Internal.Key,System.String,System.Nullable{System.Boolean},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource,System.Boolean)
  id: CreateForeignKey(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},Microsoft.EntityFrameworkCore.Metadata.Internal.Key,System.String,System.Nullable{System.Boolean},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource,System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  langs:
  - csharp
  - vb
  name: CreateForeignKey(InternalEntityTypeBuilder, IReadOnlyList<Property>, Key, String, Nullable<Boolean>, ConfigurationSource, Boolean)
  nameWithType: InternalEntityTypeBuilder.CreateForeignKey(InternalEntityTypeBuilder, IReadOnlyList<Property>, Key, String, Nullable<Boolean>, ConfigurationSource, Boolean)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.CreateForeignKey(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder, System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Metadata.Internal.Property>, Microsoft.EntityFrameworkCore.Metadata.Internal.Key, System.String, System.Nullable<System.Boolean>, Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateForeignKey
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
    startLine: 1595
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual InternalRelationshipBuilder CreateForeignKey(InternalEntityTypeBuilder principalEntityTypeBuilder, IReadOnlyList<Property> dependentProperties, Key principalKey, string navigationToPrincipalName, bool ? isRequired, ConfigurationSource configurationSource, bool runConventions)
    content.vb: Public Overridable Function CreateForeignKey(principalEntityTypeBuilder As InternalEntityTypeBuilder, dependentProperties As IReadOnlyList(Of  Property), principalKey As Key, navigationToPrincipalName As String, isRequired As Boolean?, configurationSource As ConfigurationSource, runConventions As Boolean) As InternalRelationshipBuilder
    parameters:
    - id: principalEntityTypeBuilder
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
    - id: dependentProperties
      type: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property}
    - id: principalKey
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.Key
    - id: navigationToPrincipalName
      type: System.String
    - id: isRequired
      type: System.Nullable{System.Boolean}
    - id: configurationSource
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
    - id: runConventions
      type: System.Boolean
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.CreateForeignKey*
  nameWithType.vb: InternalEntityTypeBuilder.CreateForeignKey(InternalEntityTypeBuilder, IReadOnlyList(Of Property), Key, String, Nullable(Of Boolean), ConfigurationSource, Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.CreateForeignKey(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder, System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Metadata.Internal.Property), Microsoft.EntityFrameworkCore.Metadata.Internal.Key, System.String, System.Nullable(Of System.Boolean), Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource, System.Boolean)
  name.vb: CreateForeignKey(InternalEntityTypeBuilder, IReadOnlyList(Of Property), Key, String, Nullable(Of Boolean), ConfigurationSource, Boolean)
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.ReUniquifyTemporaryProperties(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},System.Boolean,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.ReUniquifyTemporaryProperties(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},System.Boolean,System.String)
  id: ReUniquifyTemporaryProperties(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},System.Boolean,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  langs:
  - csharp
  - vb
  name: ReUniquifyTemporaryProperties(IReadOnlyList<Property>, IReadOnlyList<Property>, Boolean, String)
  nameWithType: InternalEntityTypeBuilder.ReUniquifyTemporaryProperties(IReadOnlyList<Property>, IReadOnlyList<Property>, Boolean, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.ReUniquifyTemporaryProperties(System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Metadata.Internal.Property>, System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Metadata.Internal.Property>, System.Boolean, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ReUniquifyTemporaryProperties
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
    startLine: 1660
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual IReadOnlyList<Property> ReUniquifyTemporaryProperties(IReadOnlyList<Property> currentProperties, IReadOnlyList<Property> principalProperties, bool isRequired, string baseName)
    content.vb: Public Overridable Function ReUniquifyTemporaryProperties(currentProperties As IReadOnlyList(Of  Property), principalProperties As IReadOnlyList(Of  Property), isRequired As Boolean, baseName As String) As IReadOnlyList(Of  Property)
    parameters:
    - id: currentProperties
      type: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property}
    - id: principalProperties
      type: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property}
    - id: isRequired
      type: System.Boolean
    - id: baseName
      type: System.String
    return:
      type: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property}
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.ReUniquifyTemporaryProperties*
  nameWithType.vb: InternalEntityTypeBuilder.ReUniquifyTemporaryProperties(IReadOnlyList(Of Property), IReadOnlyList(Of Property), Boolean, String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.ReUniquifyTemporaryProperties(System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Metadata.Internal.Property), System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Metadata.Internal.Property), System.Boolean, System.String)
  name.vb: ReUniquifyTemporaryProperties(IReadOnlyList(Of Property), IReadOnlyList(Of Property), Boolean, String)
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.GetOrCreateProperties(System.Collections.Generic.IEnumerable{System.String},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource,System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.Internal.Property})
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.GetOrCreateProperties(System.Collections.Generic.IEnumerable{System.String},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource,System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.Internal.Property})
  id: GetOrCreateProperties(System.Collections.Generic.IEnumerable{System.String},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource,System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.Internal.Property})
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  langs:
  - csharp
  - vb
  name: GetOrCreateProperties(IEnumerable<String>, ConfigurationSource, IEnumerable<Property>)
  nameWithType: InternalEntityTypeBuilder.GetOrCreateProperties(IEnumerable<String>, ConfigurationSource, IEnumerable<Property>)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.GetOrCreateProperties(System.Collections.Generic.IEnumerable<System.String>, Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource, System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Metadata.Internal.Property>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetOrCreateProperties
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
    startLine: 1753
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual IReadOnlyList<Property> GetOrCreateProperties(IEnumerable<string> propertyNames, ConfigurationSource configurationSource, IEnumerable<Property> referencedProperties = null)
    content.vb: Public Overridable Function GetOrCreateProperties(propertyNames As IEnumerable(Of String), configurationSource As ConfigurationSource, referencedProperties As IEnumerable(Of  Property) = Nothing) As IReadOnlyList(Of  Property)
    parameters:
    - id: propertyNames
      type: System.Collections.Generic.IEnumerable{System.String}
    - id: configurationSource
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
    - id: referencedProperties
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.Internal.Property}
    return:
      type: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property}
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.GetOrCreateProperties*
  nameWithType.vb: InternalEntityTypeBuilder.GetOrCreateProperties(IEnumerable(Of String), ConfigurationSource, IEnumerable(Of Property))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.GetOrCreateProperties(System.Collections.Generic.IEnumerable(Of System.String), Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource, System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Metadata.Internal.Property))
  name.vb: GetOrCreateProperties(IEnumerable(Of String), ConfigurationSource, IEnumerable(Of Property))
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.GetOrCreateProperties(System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.GetOrCreateProperties(System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  id: GetOrCreateProperties(System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  langs:
  - csharp
  - vb
  name: GetOrCreateProperties(IEnumerable<MemberInfo>, ConfigurationSource)
  nameWithType: InternalEntityTypeBuilder.GetOrCreateProperties(IEnumerable<MemberInfo>, ConfigurationSource)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.GetOrCreateProperties(System.Collections.Generic.IEnumerable<System.Reflection.MemberInfo>, Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetOrCreateProperties
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
    startLine: 1815
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual IReadOnlyList<Property> GetOrCreateProperties(IEnumerable<MemberInfo> clrProperties, ConfigurationSource configurationSource)
    content.vb: Public Overridable Function GetOrCreateProperties(clrProperties As IEnumerable(Of MemberInfo), configurationSource As ConfigurationSource) As IReadOnlyList(Of  Property)
    parameters:
    - id: clrProperties
      type: System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo}
    - id: configurationSource
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
    return:
      type: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property}
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.GetOrCreateProperties*
  nameWithType.vb: InternalEntityTypeBuilder.GetOrCreateProperties(IEnumerable(Of MemberInfo), ConfigurationSource)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.GetOrCreateProperties(System.Collections.Generic.IEnumerable(Of System.Reflection.MemberInfo), Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  name.vb: GetOrCreateProperties(IEnumerable(Of MemberInfo), ConfigurationSource)
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.GetActualProperties(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},System.Nullable{Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource})
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.GetActualProperties(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},System.Nullable{Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource})
  id: GetActualProperties(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},System.Nullable{Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource})
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  langs:
  - csharp
  - vb
  name: GetActualProperties(IReadOnlyList<Property>, Nullable<ConfigurationSource>)
  nameWithType: InternalEntityTypeBuilder.GetActualProperties(IReadOnlyList<Property>, Nullable<ConfigurationSource>)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.GetActualProperties(System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Metadata.Internal.Property>, System.Nullable<Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetActualProperties
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
    startLine: 1840
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual IReadOnlyList<Property> GetActualProperties(IReadOnlyList<Property> properties, ConfigurationSource? configurationSource)
    content.vb: Public Overridable Function GetActualProperties(properties As IReadOnlyList(Of  Property), configurationSource As ConfigurationSource?) As IReadOnlyList(Of  Property)
    parameters:
    - id: properties
      type: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property}
    - id: configurationSource
      type: System.Nullable{Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource}
    return:
      type: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property}
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.GetActualProperties*
  nameWithType.vb: InternalEntityTypeBuilder.GetActualProperties(IReadOnlyList(Of Property), Nullable(Of ConfigurationSource))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.GetActualProperties(System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Metadata.Internal.Property), System.Nullable(Of Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource))
  name.vb: GetActualProperties(IReadOnlyList(Of Property), Nullable(Of ConfigurationSource))
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.UsePropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.UsePropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  id: UsePropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  langs:
  - csharp
  - vb
  name: UsePropertyAccessMode(PropertyAccessMode, ConfigurationSource)
  nameWithType: InternalEntityTypeBuilder.UsePropertyAccessMode(PropertyAccessMode, ConfigurationSource)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.UsePropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode, Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: UsePropertyAccessMode
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalEntityTypeBuilder.cs
    startLine: 1872
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual bool UsePropertyAccessMode(PropertyAccessMode propertyAccessMode, ConfigurationSource configurationSource)
    content.vb: Public Overridable Function UsePropertyAccessMode(propertyAccessMode As PropertyAccessMode, configurationSource As ConfigurationSource) As Boolean
    parameters:
    - id: propertyAccessMode
      type: Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode
    - id: configurationSource
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
    return:
      type: System.Boolean
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.UsePropertyAccessMode*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: InternalMetadataBuilder
  nameWithType: InternalMetadataBuilder
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder{Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType}
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder{Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType}
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder`1
  name: InternalMetadataBuilder<EntityType>
  nameWithType: InternalMetadataBuilder<EntityType>
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder<Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType>
  nameWithType.vb: InternalMetadataBuilder(Of EntityType)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder(Of Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)
  name.vb: InternalMetadataBuilder(Of EntityType)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder`1
    name: InternalMetadataBuilder
    nameWithType: InternalMetadataBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
    name: EntityType
    nameWithType: EntityType
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder`1
    name: InternalMetadataBuilder
    nameWithType: InternalMetadataBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
    name: EntityType
    nameWithType: EntityType
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataItemBuilder{Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType}
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataItemBuilder{Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType}
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataItemBuilder`1
  name: InternalMetadataItemBuilder<EntityType>
  nameWithType: InternalMetadataItemBuilder<EntityType>
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataItemBuilder<Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType>
  nameWithType.vb: InternalMetadataItemBuilder(Of EntityType)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataItemBuilder(Of Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)
  name.vb: InternalMetadataItemBuilder(Of EntityType)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataItemBuilder`1
    name: InternalMetadataItemBuilder
    nameWithType: InternalMetadataItemBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataItemBuilder
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
    name: EntityType
    nameWithType: EntityType
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataItemBuilder`1
    name: InternalMetadataItemBuilder
    nameWithType: InternalMetadataItemBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataItemBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
    name: EntityType
    nameWithType: EntityType
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataItemBuilder{Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType}.ModelBuilder
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataItemBuilder{Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType}.ModelBuilder
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataItemBuilder{Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType}
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataItemBuilder`1.ModelBuilder
  name: ModelBuilder
  nameWithType: InternalMetadataItemBuilder<EntityType>.ModelBuilder
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataItemBuilder<Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType>.ModelBuilder
  nameWithType.vb: InternalMetadataItemBuilder(Of EntityType).ModelBuilder
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataItemBuilder(Of Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType).ModelBuilder
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder{Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType}.Metadata
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder{Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType}.Metadata
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder{Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType}
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder`1.Metadata
  name: Metadata
  nameWithType: InternalMetadataBuilder<EntityType>.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder<Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType>.Metadata
  nameWithType.vb: InternalMetadataBuilder(Of EntityType).Metadata
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder(Of Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType).Metadata
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder.HasAnnotation(System.String,System.Object,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder.HasAnnotation(System.String,System.Object,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder
  isExternal: true
  name: HasAnnotation(String, Object, ConfigurationSource)
  nameWithType: InternalMetadataBuilder.HasAnnotation(String, Object, ConfigurationSource)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder.HasAnnotation(System.String, System.Object, Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder.HasAnnotation(System.String,System.Object,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
    name: HasAnnotation
    nameWithType: InternalMetadataBuilder.HasAnnotation
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder.HasAnnotation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
    name: ConfigurationSource
    nameWithType: ConfigurationSource
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder.HasAnnotation(System.String,System.Object,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
    name: HasAnnotation
    nameWithType: InternalMetadataBuilder.HasAnnotation
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder.HasAnnotation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
    name: ConfigurationSource
    nameWithType: ConfigurationSource
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder.CanSetAnnotation(System.String,System.Object,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder.CanSetAnnotation(System.String,System.Object,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder
  isExternal: true
  name: CanSetAnnotation(String, Object, ConfigurationSource)
  nameWithType: InternalMetadataBuilder.CanSetAnnotation(String, Object, ConfigurationSource)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder.CanSetAnnotation(System.String, System.Object, Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder.CanSetAnnotation(System.String,System.Object,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
    name: CanSetAnnotation
    nameWithType: InternalMetadataBuilder.CanSetAnnotation
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder.CanSetAnnotation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
    name: ConfigurationSource
    nameWithType: ConfigurationSource
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder.CanSetAnnotation(System.String,System.Object,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
    name: CanSetAnnotation
    nameWithType: InternalMetadataBuilder.CanSetAnnotation
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder.CanSetAnnotation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
    name: ConfigurationSource
    nameWithType: ConfigurationSource
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder.MergeAnnotationsFrom(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder.MergeAnnotationsFrom(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder
  isExternal: false
  name: MergeAnnotationsFrom(InternalMetadataBuilder)
  nameWithType: InternalMetadataBuilder.MergeAnnotationsFrom(InternalMetadataBuilder)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder.MergeAnnotationsFrom(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder.MergeAnnotationsFrom(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder)
    name: MergeAnnotationsFrom
    nameWithType: InternalMetadataBuilder.MergeAnnotationsFrom
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder.MergeAnnotationsFrom
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder
    name: InternalMetadataBuilder
    nameWithType: InternalMetadataBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder.MergeAnnotationsFrom(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder)
    name: MergeAnnotationsFrom
    nameWithType: InternalMetadataBuilder.MergeAnnotationsFrom
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder.MergeAnnotationsFrom
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder
    name: InternalMetadataBuilder
    nameWithType: InternalMetadataBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Microsoft.EntityFrameworkCore.Metadata.Internal.SqlServerInternalMetadataBuilderExtensions.SqlServer(Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.SqlServerInternalMetadataBuilderExtensions.SqlServer(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.SqlServerInternalMetadataBuilderExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.SqlServerInternalMetadataBuilderExtensions.SqlServer(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  name: SqlServer(ConfigurationSource)
  nameWithType: SqlServerInternalMetadataBuilderExtensions.SqlServer(ConfigurationSource)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.SqlServerInternalMetadataBuilderExtensions.SqlServer(Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.SqlServerInternalMetadataBuilderExtensions.SqlServer(Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
    name: SqlServer
    nameWithType: SqlServerInternalMetadataBuilderExtensions.SqlServer
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.SqlServerInternalMetadataBuilderExtensions.SqlServer
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
    name: ConfigurationSource
    nameWithType: ConfigurationSource
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.SqlServerInternalMetadataBuilderExtensions.SqlServer(Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
    name: SqlServer
    nameWithType: SqlServerInternalMetadataBuilderExtensions.SqlServer
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.SqlServerInternalMetadataBuilderExtensions.SqlServer
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
    name: ConfigurationSource
    nameWithType: ConfigurationSource
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Microsoft.EntityFrameworkCore.Metadata.Internal.SqliteInternalMetadataBuilderExtensions.Sqlite(Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.SqliteInternalMetadataBuilderExtensions.Sqlite(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.SqliteInternalMetadataBuilderExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.SqliteInternalMetadataBuilderExtensions.Sqlite(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  name: Sqlite(ConfigurationSource)
  nameWithType: SqliteInternalMetadataBuilderExtensions.Sqlite(ConfigurationSource)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.SqliteInternalMetadataBuilderExtensions.Sqlite(Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.SqliteInternalMetadataBuilderExtensions.Sqlite(Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
    name: Sqlite
    nameWithType: SqliteInternalMetadataBuilderExtensions.Sqlite
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.SqliteInternalMetadataBuilderExtensions.Sqlite
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
    name: ConfigurationSource
    nameWithType: ConfigurationSource
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.SqliteInternalMetadataBuilderExtensions.Sqlite(Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
    name: Sqlite
    nameWithType: SqliteInternalMetadataBuilderExtensions.Sqlite
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.SqliteInternalMetadataBuilderExtensions.Sqlite
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
    name: ConfigurationSource
    nameWithType: ConfigurationSource
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalInternalMetadataBuilderExtensions.Relational(Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalInternalMetadataBuilderExtensions.Relational(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalInternalMetadataBuilderExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalInternalMetadataBuilderExtensions.Relational(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  name: Relational(ConfigurationSource)
  nameWithType: RelationalInternalMetadataBuilderExtensions.Relational(ConfigurationSource)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalInternalMetadataBuilderExtensions.Relational(Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalInternalMetadataBuilderExtensions.Relational(Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
    name: Relational
    nameWithType: RelationalInternalMetadataBuilderExtensions.Relational
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalInternalMetadataBuilderExtensions.Relational
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
    name: ConfigurationSource
    nameWithType: ConfigurationSource
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalInternalMetadataBuilderExtensions.Relational(Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
    name: Relational
    nameWithType: RelationalInternalMetadataBuilderExtensions.Relational
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalInternalMetadataBuilderExtensions.Relational
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
    name: ConfigurationSource
    nameWithType: ConfigurationSource
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder`1
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder`1
  isExternal: false
  name: InternalMetadataBuilder<TMetadata>
  nameWithType: InternalMetadataBuilder<TMetadata>
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder<TMetadata>
  nameWithType.vb: InternalMetadataBuilder(Of TMetadata)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder(Of TMetadata)
  name.vb: InternalMetadataBuilder(Of TMetadata)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder`1
    name: InternalMetadataBuilder
    nameWithType: InternalMetadataBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: TMetadata
    nameWithType: TMetadata
    fullName: TMetadata
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder`1
    name: InternalMetadataBuilder
    nameWithType: InternalMetadataBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TMetadata
    nameWithType: TMetadata
    fullName: TMetadata
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataItemBuilder`1
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataItemBuilder`1
  isExternal: false
  name: InternalMetadataItemBuilder<TMetadata>
  nameWithType: InternalMetadataItemBuilder<TMetadata>
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataItemBuilder<TMetadata>
  nameWithType.vb: InternalMetadataItemBuilder(Of TMetadata)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataItemBuilder(Of TMetadata)
  name.vb: InternalMetadataItemBuilder(Of TMetadata)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataItemBuilder`1
    name: InternalMetadataItemBuilder
    nameWithType: InternalMetadataItemBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataItemBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: TMetadata
    nameWithType: TMetadata
    fullName: TMetadata
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataItemBuilder`1
    name: InternalMetadataItemBuilder
    nameWithType: InternalMetadataItemBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataItemBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TMetadata
    nameWithType: TMetadata
    fullName: TMetadata
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataItemBuilder`1.ModelBuilder
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataItemBuilder`1.ModelBuilder
  isExternal: false
  name: ModelBuilder
  nameWithType: InternalMetadataItemBuilder<TMetadata>.ModelBuilder
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataItemBuilder<TMetadata>.ModelBuilder
  nameWithType.vb: InternalMetadataItemBuilder(Of TMetadata).ModelBuilder
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataItemBuilder(Of TMetadata).ModelBuilder
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder`1.Metadata
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder`1.Metadata
  isExternal: false
  name: Metadata
  nameWithType: InternalMetadataBuilder<TMetadata>.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder<TMetadata>.Metadata
  nameWithType.vb: InternalMetadataBuilder(Of TMetadata).Metadata
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder(Of TMetadata).Metadata
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.SqlServerInternalMetadataBuilderExtensions.SqlServer(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.SqlServerInternalMetadataBuilderExtensions.SqlServer(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  isExternal: false
  name: SqlServer(InternalEntityTypeBuilder, ConfigurationSource)
  nameWithType: SqlServerInternalMetadataBuilderExtensions.SqlServer(InternalEntityTypeBuilder, ConfigurationSource)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.SqlServerInternalMetadataBuilderExtensions.SqlServer(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.SqlServerInternalMetadataBuilderExtensions.SqlServer(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
    name: SqlServer
    nameWithType: SqlServerInternalMetadataBuilderExtensions.SqlServer
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.SqlServerInternalMetadataBuilderExtensions.SqlServer
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
    name: InternalEntityTypeBuilder
    nameWithType: InternalEntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
    name: ConfigurationSource
    nameWithType: ConfigurationSource
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.SqlServerInternalMetadataBuilderExtensions.SqlServer(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
    name: SqlServer
    nameWithType: SqlServerInternalMetadataBuilderExtensions.SqlServer
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.SqlServerInternalMetadataBuilderExtensions.SqlServer
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
    name: InternalEntityTypeBuilder
    nameWithType: InternalEntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
    name: ConfigurationSource
    nameWithType: ConfigurationSource
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.SqlServerInternalMetadataBuilderExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.SqlServerInternalMetadataBuilderExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: SqlServerInternalMetadataBuilderExtensions
  nameWithType: SqlServerInternalMetadataBuilderExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.SqlServerInternalMetadataBuilderExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.SqliteInternalMetadataBuilderExtensions.Sqlite(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.SqliteInternalMetadataBuilderExtensions.Sqlite(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  isExternal: false
  name: Sqlite(InternalEntityTypeBuilder, ConfigurationSource)
  nameWithType: SqliteInternalMetadataBuilderExtensions.Sqlite(InternalEntityTypeBuilder, ConfigurationSource)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.SqliteInternalMetadataBuilderExtensions.Sqlite(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.SqliteInternalMetadataBuilderExtensions.Sqlite(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
    name: Sqlite
    nameWithType: SqliteInternalMetadataBuilderExtensions.Sqlite
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.SqliteInternalMetadataBuilderExtensions.Sqlite
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
    name: InternalEntityTypeBuilder
    nameWithType: InternalEntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
    name: ConfigurationSource
    nameWithType: ConfigurationSource
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.SqliteInternalMetadataBuilderExtensions.Sqlite(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
    name: Sqlite
    nameWithType: SqliteInternalMetadataBuilderExtensions.Sqlite
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.SqliteInternalMetadataBuilderExtensions.Sqlite
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
    name: InternalEntityTypeBuilder
    nameWithType: InternalEntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
    name: ConfigurationSource
    nameWithType: ConfigurationSource
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.SqliteInternalMetadataBuilderExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.SqliteInternalMetadataBuilderExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: SqliteInternalMetadataBuilderExtensions
  nameWithType: SqliteInternalMetadataBuilderExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.SqliteInternalMetadataBuilderExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalInternalMetadataBuilderExtensions.Relational(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalInternalMetadataBuilderExtensions.Relational(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  isExternal: false
  name: Relational(InternalEntityTypeBuilder, ConfigurationSource)
  nameWithType: RelationalInternalMetadataBuilderExtensions.Relational(InternalEntityTypeBuilder, ConfigurationSource)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalInternalMetadataBuilderExtensions.Relational(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalInternalMetadataBuilderExtensions.Relational(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
    name: Relational
    nameWithType: RelationalInternalMetadataBuilderExtensions.Relational
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalInternalMetadataBuilderExtensions.Relational
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
    name: InternalEntityTypeBuilder
    nameWithType: InternalEntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
    name: ConfigurationSource
    nameWithType: ConfigurationSource
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalInternalMetadataBuilderExtensions.Relational(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
    name: Relational
    nameWithType: RelationalInternalMetadataBuilderExtensions.Relational
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalInternalMetadataBuilderExtensions.Relational
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
    name: InternalEntityTypeBuilder
    nameWithType: InternalEntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
    name: ConfigurationSource
    nameWithType: ConfigurationSource
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalInternalMetadataBuilderExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalInternalMetadataBuilderExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: RelationalInternalMetadataBuilderExtensions
  nameWithType: RelationalInternalMetadataBuilderExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalInternalMetadataBuilderExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.#ctor*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.#ctor
  isExternal: false
  name: InternalEntityTypeBuilder
  nameWithType: InternalEntityTypeBuilder.InternalEntityTypeBuilder
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.InternalEntityTypeBuilder
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: EntityType
  nameWithType: EntityType
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: InternalModelBuilder
  nameWithType: InternalModelBuilder
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.PrimaryKey*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.PrimaryKey
  isExternal: false
  name: PrimaryKey
  nameWithType: InternalEntityTypeBuilder.PrimaryKey
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.PrimaryKey
- uid: System.Collections.Generic.IReadOnlyList{System.String}
  commentId: T:System.Collections.Generic.IReadOnlyList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<String>
  nameWithType: IReadOnlyList<String>
  fullName: System.Collections.Generic.IReadOnlyList<System.String>
  nameWithType.vb: IReadOnlyList(Of String)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of System.String)
  name.vb: IReadOnlyList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: ConfigurationSource
  nameWithType: ConfigurationSource
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: InternalKeyBuilder
  nameWithType: InternalKeyBuilder
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo}
  commentId: T:System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<PropertyInfo>
  nameWithType: IReadOnlyList<PropertyInfo>
  fullName: System.Collections.Generic.IReadOnlyList<System.Reflection.PropertyInfo>
  nameWithType.vb: IReadOnlyList(Of PropertyInfo)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of System.Reflection.PropertyInfo)
  name.vb: IReadOnlyList(Of PropertyInfo)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    nameWithType: PropertyInfo
    fullName: System.Reflection.PropertyInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    nameWithType: PropertyInfo
    fullName: System.Reflection.PropertyInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasKey*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasKey
  isExternal: false
  name: HasKey
  nameWithType: InternalEntityTypeBuilder.HasKey
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasKey
- uid: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property}
  commentId: T:System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<Property>
  nameWithType: IReadOnlyList<Property>
  fullName: System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Metadata.Internal.Property>
  nameWithType.vb: IReadOnlyList(Of Property)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Metadata.Internal.Property)
  name.vb: IReadOnlyList(Of Property)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.Property
    name: Property
    nameWithType: Property
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.Property
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.Property
    name: Property
    nameWithType: Property
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.Property
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource}
  commentId: T:System.Nullable{Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource}
  parent: System
  definition: System.Nullable`1
  name: Nullable<ConfigurationSource>
  nameWithType: Nullable<ConfigurationSource>
  fullName: System.Nullable<Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource>
  nameWithType.vb: Nullable(Of ConfigurationSource)
  fullname.vb: System.Nullable(Of Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  name.vb: Nullable(Of ConfigurationSource)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
    name: ConfigurationSource
    nameWithType: ConfigurationSource
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
    name: ConfigurationSource
    nameWithType: ConfigurationSource
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.RemoveKey*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.RemoveKey
  isExternal: false
  name: RemoveKey
  nameWithType: InternalEntityTypeBuilder.RemoveKey
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.RemoveKey
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.Key
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.Key
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Key
  nameWithType: Key
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.Key
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Property*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Property
  isExternal: false
  name: Property
  nameWithType: InternalEntityTypeBuilder.Property
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Property
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: InternalPropertyBuilder
  nameWithType: InternalPropertyBuilder
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder
- uid: System.Reflection.MemberInfo
  commentId: T:System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: true
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: false
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.CanAddNavigation*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.CanAddNavigation
  isExternal: false
  name: CanAddNavigation
  nameWithType: InternalEntityTypeBuilder.CanAddNavigation
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.CanAddNavigation
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.CanAddOrReplaceNavigation*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.CanAddOrReplaceNavigation
  isExternal: false
  name: CanAddOrReplaceNavigation
  nameWithType: InternalEntityTypeBuilder.CanAddOrReplaceNavigation
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.CanAddOrReplaceNavigation
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.IsIgnored*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.IsIgnored
  isExternal: false
  name: IsIgnored
  nameWithType: InternalEntityTypeBuilder.IsIgnored
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.IsIgnored
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.CanRemoveForeignKey*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.CanRemoveForeignKey
  isExternal: false
  name: CanRemoveForeignKey
  nameWithType: InternalEntityTypeBuilder.CanRemoveForeignKey
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.CanRemoveForeignKey
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: ForeignKey
  nameWithType: ForeignKey
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Ignore*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Ignore
  isExternal: false
  name: Ignore
  nameWithType: InternalEntityTypeBuilder.Ignore
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Ignore
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasBaseType*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasBaseType
  isExternal: false
  name: HasBaseType
  nameWithType: InternalEntityTypeBuilder.HasBaseType
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasBaseType
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: InternalEntityTypeBuilder
  nameWithType: InternalEntityTypeBuilder
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.RemoveForeignKey*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.RemoveForeignKey
  isExternal: false
  name: RemoveForeignKey
  nameWithType: InternalEntityTypeBuilder.RemoveForeignKey
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.RemoveForeignKey
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.RemoveShadowPropertiesIfUnused*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.RemoveShadowPropertiesIfUnused
  isExternal: false
  name: RemoveShadowPropertiesIfUnused
  nameWithType: InternalEntityTypeBuilder.RemoveShadowPropertiesIfUnused
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.RemoveShadowPropertiesIfUnused
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasIndex*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasIndex
  isExternal: false
  name: HasIndex
  nameWithType: InternalEntityTypeBuilder.HasIndex
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasIndex
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: InternalIndexBuilder
  nameWithType: InternalIndexBuilder
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.RemoveIndex*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.RemoveIndex
  isExternal: false
  name: RemoveIndex
  nameWithType: InternalEntityTypeBuilder.RemoveIndex
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.RemoveIndex
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.Index
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.Index
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Index
  nameWithType: Index
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.Index
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasForeignKey*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasForeignKey
  isExternal: false
  name: HasForeignKey
  nameWithType: InternalEntityTypeBuilder.HasForeignKey
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasForeignKey
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: InternalRelationshipBuilder
  nameWithType: InternalRelationshipBuilder
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Relationship*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Relationship
  isExternal: false
  name: Relationship
  nameWithType: InternalEntityTypeBuilder.Relationship
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Relationship
- uid: System.Reflection.PropertyInfo
  commentId: T:System.Reflection.PropertyInfo
  parent: System.Reflection
  isExternal: true
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Navigation*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Navigation
  isExternal: false
  name: Navigation
  nameWithType: InternalEntityTypeBuilder.Navigation
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Navigation
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.CreateForeignKey*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.CreateForeignKey
  isExternal: false
  name: CreateForeignKey
  nameWithType: InternalEntityTypeBuilder.CreateForeignKey
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.CreateForeignKey
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.ReUniquifyTemporaryProperties*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.ReUniquifyTemporaryProperties
  isExternal: false
  name: ReUniquifyTemporaryProperties
  nameWithType: InternalEntityTypeBuilder.ReUniquifyTemporaryProperties
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.ReUniquifyTemporaryProperties
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.GetOrCreateProperties*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.GetOrCreateProperties
  isExternal: false
  name: GetOrCreateProperties
  nameWithType: InternalEntityTypeBuilder.GetOrCreateProperties
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.GetOrCreateProperties
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.Internal.Property}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.Internal.Property}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Property>
  nameWithType: IEnumerable<Property>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Metadata.Internal.Property>
  nameWithType.vb: IEnumerable(Of Property)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Metadata.Internal.Property)
  name.vb: IEnumerable(Of Property)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.Property
    name: Property
    nameWithType: Property
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.Property
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.Property
    name: Property
    nameWithType: Property
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.Property
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo}
  commentId: T:System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<MemberInfo>
  nameWithType: IEnumerable<MemberInfo>
  fullName: System.Collections.Generic.IEnumerable<System.Reflection.MemberInfo>
  nameWithType.vb: IEnumerable(Of MemberInfo)
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Reflection.MemberInfo)
  name.vb: IEnumerable(Of MemberInfo)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    nameWithType: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    nameWithType: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.GetActualProperties*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.GetActualProperties
  isExternal: false
  name: GetActualProperties
  nameWithType: InternalEntityTypeBuilder.GetActualProperties
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.GetActualProperties
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.UsePropertyAccessMode*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.UsePropertyAccessMode
  isExternal: false
  name: UsePropertyAccessMode
  nameWithType: InternalEntityTypeBuilder.UsePropertyAccessMode
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.UsePropertyAccessMode
- uid: Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: PropertyAccessMode
  nameWithType: PropertyAccessMode
  fullName: Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
