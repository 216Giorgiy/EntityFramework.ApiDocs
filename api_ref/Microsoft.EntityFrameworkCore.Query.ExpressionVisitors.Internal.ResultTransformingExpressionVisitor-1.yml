### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ResultTransformingExpressionVisitor`1
  commentId: T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ResultTransformingExpressionVisitor`1
  id: ResultTransformingExpressionVisitor`1
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  children:
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ResultTransformingExpressionVisitor`1.#ctor(IQuerySource,Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ResultTransformingExpressionVisitor`1.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  langs:
  - csharp
  - vb
  name: ResultTransformingExpressionVisitor<TResult>
  nameWithType: ResultTransformingExpressionVisitor<TResult>
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ResultTransformingExpressionVisitor<TResult>
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/ResultTransformingExpressionVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ResultTransformingExpressionVisitor
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/ResultTransformingExpressionVisitor.cs
    startLine: 17
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public class ResultTransformingExpressionVisitor<TResult> : ExpressionVisitorBase'
    content.vb: >-
      Public Class ResultTransformingExpressionVisitor(Of TResult)
          Inherits ExpressionVisitorBase
    typeParameters:
    - id: TResult
  inheritance:
  - System.Object
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase
  inheritedMembers:
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.Visit(System.Linq.Expressions.Expression)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.VisitExtension(System.Linq.Expressions.Expression)
  nameWithType.vb: ResultTransformingExpressionVisitor(Of TResult)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ResultTransformingExpressionVisitor(Of TResult)
  name.vb: ResultTransformingExpressionVisitor(Of TResult)
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ResultTransformingExpressionVisitor`1.#ctor(IQuerySource,Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ResultTransformingExpressionVisitor`1.#ctor(IQuerySource,Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext)
  id: '#ctor(IQuerySource,Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext)'
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ResultTransformingExpressionVisitor`1
  langs:
  - csharp
  - vb
  name: ResultTransformingExpressionVisitor(IQuerySource, RelationalQueryCompilationContext)
  nameWithType: ResultTransformingExpressionVisitor<TResult>.ResultTransformingExpressionVisitor(IQuerySource, RelationalQueryCompilationContext)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ResultTransformingExpressionVisitor<TResult>.ResultTransformingExpressionVisitor(IQuerySource, Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/ResultTransformingExpressionVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/ResultTransformingExpressionVisitor.cs
    startLine: 25
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public ResultTransformingExpressionVisitor(IQuerySource outerQuerySource, RelationalQueryCompilationContext relationalQueryCompilationContext)
    content.vb: Public Sub New(outerQuerySource As IQuerySource, relationalQueryCompilationContext As RelationalQueryCompilationContext)
    parameters:
    - id: outerQuerySource
      type: IQuerySource
    - id: relationalQueryCompilationContext
      type: Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext
  overload: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ResultTransformingExpressionVisitor`1.#ctor*
  nameWithType.vb: ResultTransformingExpressionVisitor(Of TResult).ResultTransformingExpressionVisitor(IQuerySource, RelationalQueryCompilationContext)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ResultTransformingExpressionVisitor(Of TResult).ResultTransformingExpressionVisitor(IQuerySource, Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext)
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ResultTransformingExpressionVisitor`1.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ResultTransformingExpressionVisitor`1.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  id: VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ResultTransformingExpressionVisitor`1
  langs:
  - csharp
  - vb
  name: VisitMethodCall(MethodCallExpression)
  nameWithType: ResultTransformingExpressionVisitor<TResult>.VisitMethodCall(MethodCallExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ResultTransformingExpressionVisitor<TResult>.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/ResultTransformingExpressionVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: VisitMethodCall
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/ResultTransformingExpressionVisitor.cs
    startLine: 39
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected override Expression VisitMethodCall(MethodCallExpression node)
    content.vb: Protected Overrides Function VisitMethodCall(node As MethodCallExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.MethodCallExpression
    return:
      type: System.Linq.Expressions.Expression
  overload: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ResultTransformingExpressionVisitor`1.VisitMethodCall*
  nameWithType.vb: ResultTransformingExpressionVisitor(Of TResult).VisitMethodCall(MethodCallExpression)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ResultTransformingExpressionVisitor(Of TResult).VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
references:
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase
  commentId: T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
  isExternal: false
  name: ExpressionVisitorBase
  nameWithType: ExpressionVisitorBase
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.Visit(System.Linq.Expressions.Expression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.Visit(System.Linq.Expressions.Expression)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase
  isExternal: true
  name: Visit(Expression)
  nameWithType: ExpressionVisitorBase.Visit(Expression)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.Visit(System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.Visit(System.Linq.Expressions.Expression)
    name: Visit
    nameWithType: ExpressionVisitorBase.Visit
    fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.Visit
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.Visit(System.Linq.Expressions.Expression)
    name: Visit
    nameWithType: ExpressionVisitorBase.Visit
    fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.Visit
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.VisitExtension(System.Linq.Expressions.Expression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.VisitExtension(System.Linq.Expressions.Expression)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase
  isExternal: true
  name: VisitExtension(Expression)
  nameWithType: ExpressionVisitorBase.VisitExtension(Expression)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.VisitExtension(System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.VisitExtension(System.Linq.Expressions.Expression)
    name: VisitExtension
    nameWithType: ExpressionVisitorBase.VisitExtension
    fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.VisitExtension
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.VisitExtension(System.Linq.Expressions.Expression)
    name: VisitExtension
    nameWithType: ExpressionVisitorBase.VisitExtension
    fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.VisitExtension
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
  commentId: N:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
  nameWithType: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ResultTransformingExpressionVisitor`1.#ctor*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ResultTransformingExpressionVisitor`1.#ctor
  isExternal: false
  name: ResultTransformingExpressionVisitor
  nameWithType: ResultTransformingExpressionVisitor<TResult>.ResultTransformingExpressionVisitor
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ResultTransformingExpressionVisitor<TResult>.ResultTransformingExpressionVisitor
  nameWithType.vb: ResultTransformingExpressionVisitor(Of TResult).ResultTransformingExpressionVisitor
  fullname.vb: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ResultTransformingExpressionVisitor(Of TResult).ResultTransformingExpressionVisitor
- uid: IQuerySource
  isExternal: true
  name: IQuerySource
  nameWithType: IQuerySource
  fullName: IQuerySource
- uid: Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext
  commentId: T:Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext
  parent: Microsoft.EntityFrameworkCore.Query
  isExternal: false
  name: RelationalQueryCompilationContext
  nameWithType: RelationalQueryCompilationContext
  fullName: Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext
- uid: Microsoft.EntityFrameworkCore.Query
  commentId: N:Microsoft.EntityFrameworkCore.Query
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query
  nameWithType: Microsoft.EntityFrameworkCore.Query
  fullName: Microsoft.EntityFrameworkCore.Query
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ResultTransformingExpressionVisitor`1.VisitMethodCall*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ResultTransformingExpressionVisitor`1.VisitMethodCall
  isExternal: false
  name: VisitMethodCall
  nameWithType: ResultTransformingExpressionVisitor<TResult>.VisitMethodCall
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ResultTransformingExpressionVisitor<TResult>.VisitMethodCall
  nameWithType.vb: ResultTransformingExpressionVisitor(Of TResult).VisitMethodCall
  fullname.vb: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ResultTransformingExpressionVisitor(Of TResult).VisitMethodCall
- uid: System.Linq.Expressions.MethodCallExpression
  commentId: T:System.Linq.Expressions.MethodCallExpression
  parent: System.Linq.Expressions
  isExternal: true
  name: MethodCallExpression
  nameWithType: MethodCallExpression
  fullName: System.Linq.Expressions.MethodCallExpression
- uid: System.Linq.Expressions.Expression
  commentId: T:System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: true
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: false
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
