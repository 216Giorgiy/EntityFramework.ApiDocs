### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet
  id: TableSelectionSet
  parent: Microsoft.EntityFrameworkCore.Scaffolding
  children:
  - Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet.#ctor
  - Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet.#ctor(System.Collections.Generic.IEnumerable{System.String})
  - Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})
  - Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet.All
  - Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet.Schemas
  - Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet.Tables
  langs:
  - csharp
  - vb
  name: TableSelectionSet
  nameWithType: TableSelectionSet
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/TableSelectionSet.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: TableSelectionSet
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/TableSelectionSet.cs
    startLine: 10
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding
  syntax:
    content: public class TableSelectionSet
    content.vb: Public Class TableSelectionSet
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet.All
  commentId: F:Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet.All
  id: All
  parent: Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet
  langs:
  - csharp
  - vb
  name: All
  nameWithType: TableSelectionSet.All
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet.All
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/TableSelectionSet.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: All
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/TableSelectionSet.cs
    startLine: 12
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding
  syntax:
    content: public static readonly TableSelectionSet All
    content.vb: Public Shared ReadOnly All As TableSelectionSet
    return:
      type: Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet.#ctor
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet.#ctor
  id: '#ctor'
  parent: Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet
  langs:
  - csharp
  - vb
  name: TableSelectionSet()
  nameWithType: TableSelectionSet.TableSelectionSet()
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet.TableSelectionSet()
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/TableSelectionSet.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/TableSelectionSet.cs
    startLine: 14
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding
  syntax:
    content: public TableSelectionSet()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet.#ctor(System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet.#ctor(System.Collections.Generic.IEnumerable{System.String})
  id: '#ctor(System.Collections.Generic.IEnumerable{System.String})'
  parent: Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet
  langs:
  - csharp
  - vb
  name: TableSelectionSet(IEnumerable<String>)
  nameWithType: TableSelectionSet.TableSelectionSet(IEnumerable<String>)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet.TableSelectionSet(System.Collections.Generic.IEnumerable<System.String>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/TableSelectionSet.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/TableSelectionSet.cs
    startLine: 19
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding
  syntax:
    content: public TableSelectionSet(IEnumerable<string> tables)
    content.vb: Public Sub New(tables As IEnumerable(Of String))
    parameters:
    - id: tables
      type: System.Collections.Generic.IEnumerable{System.String}
  nameWithType.vb: TableSelectionSet.TableSelectionSet(IEnumerable(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet.TableSelectionSet(System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: TableSelectionSet(IEnumerable(Of String))
- uid: Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})
  id: '#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})'
  parent: Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet
  langs:
  - csharp
  - vb
  name: TableSelectionSet(IEnumerable<String>, IEnumerable<String>)
  nameWithType: TableSelectionSet.TableSelectionSet(IEnumerable<String>, IEnumerable<String>)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet.TableSelectionSet(System.Collections.Generic.IEnumerable<System.String>, System.Collections.Generic.IEnumerable<System.String>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/TableSelectionSet.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/TableSelectionSet.cs
    startLine: 24
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding
  syntax:
    content: public TableSelectionSet(IEnumerable<string> tables, IEnumerable<string> schemas)
    content.vb: Public Sub New(tables As IEnumerable(Of String), schemas As IEnumerable(Of String))
    parameters:
    - id: tables
      type: System.Collections.Generic.IEnumerable{System.String}
    - id: schemas
      type: System.Collections.Generic.IEnumerable{System.String}
  nameWithType.vb: TableSelectionSet.TableSelectionSet(IEnumerable(Of String), IEnumerable(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet.TableSelectionSet(System.Collections.Generic.IEnumerable(Of System.String), System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: TableSelectionSet(IEnumerable(Of String), IEnumerable(Of String))
- uid: Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet.Schemas
  commentId: P:Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet.Schemas
  id: Schemas
  parent: Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet
  langs:
  - csharp
  - vb
  name: Schemas
  nameWithType: TableSelectionSet.Schemas
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet.Schemas
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/TableSelectionSet.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Schemas
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/TableSelectionSet.cs
    startLine: 33
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding
  syntax:
    content: public virtual IReadOnlyList<TableSelectionSet.Selection> Schemas { get; }
    content.vb: Public Overridable ReadOnly Property Schemas As IReadOnlyList(Of TableSelectionSet.Selection)
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet.Selection}
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet.Tables
  commentId: P:Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet.Tables
  id: Tables
  parent: Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet
  langs:
  - csharp
  - vb
  name: Tables
  nameWithType: TableSelectionSet.Tables
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet.Tables
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/TableSelectionSet.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Tables
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/TableSelectionSet.cs
    startLine: 34
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding
  syntax:
    content: public virtual IReadOnlyList<TableSelectionSet.Selection> Tables { get; }
    content.vb: Public Overridable ReadOnly Property Tables As IReadOnlyList(Of TableSelectionSet.Selection)
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet.Selection}
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
references:
- uid: Microsoft.EntityFrameworkCore.Scaffolding
  commentId: N:Microsoft.EntityFrameworkCore.Scaffolding
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Scaffolding
  nameWithType: Microsoft.EntityFrameworkCore.Scaffolding
  fullName: Microsoft.EntityFrameworkCore.Scaffolding
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet
  parent: Microsoft.EntityFrameworkCore.Scaffolding
  isExternal: false
  name: TableSelectionSet
  nameWithType: TableSelectionSet
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet.Selection}
  commentId: T:System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet.Selection}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<TableSelectionSet.Selection>
  nameWithType: IReadOnlyList<TableSelectionSet.Selection>
  fullName: System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet.Selection>
  nameWithType.vb: IReadOnlyList(Of TableSelectionSet.Selection)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet.Selection)
  name.vb: IReadOnlyList(Of TableSelectionSet.Selection)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet.Selection
    name: TableSelectionSet.Selection
    nameWithType: TableSelectionSet.Selection
    fullName: Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet.Selection
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet.Selection
    name: TableSelectionSet.Selection
    nameWithType: TableSelectionSet.Selection
    fullName: Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet.Selection
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
