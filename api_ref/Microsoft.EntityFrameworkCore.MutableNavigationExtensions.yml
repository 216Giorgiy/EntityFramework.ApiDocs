### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.MutableNavigationExtensions
  commentId: T:Microsoft.EntityFrameworkCore.MutableNavigationExtensions
  id: MutableNavigationExtensions
  parent: Microsoft.EntityFrameworkCore
  children:
  - Microsoft.EntityFrameworkCore.MutableNavigationExtensions.FindInverse(Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation)
  - Microsoft.EntityFrameworkCore.MutableNavigationExtensions.GetTargetType(Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation)
  - Microsoft.EntityFrameworkCore.MutableNavigationExtensions.SetField(Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation,System.String)
  - Microsoft.EntityFrameworkCore.MutableNavigationExtensions.SetPropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation,System.Nullable{Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode})
  langs:
  - csharp
  - vb
  name: MutableNavigationExtensions
  nameWithType: MutableNavigationExtensions
  fullName: Microsoft.EntityFrameworkCore.MutableNavigationExtensions
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Extensions/MutableNavigationExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: MutableNavigationExtensions
    path: src/Microsoft.EntityFrameworkCore/Extensions/MutableNavigationExtensions.cs
    startLine: 14
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore
  summary: "\n    Extension methods for <xref href=\"Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static class MutableNavigationExtensions
    content.vb: Public Module MutableNavigationExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.EntityFrameworkCore.MutableNavigationExtensions.FindInverse(Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation)
  commentId: M:Microsoft.EntityFrameworkCore.MutableNavigationExtensions.FindInverse(Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation)
  id: FindInverse(Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.MutableNavigationExtensions
  langs:
  - csharp
  - vb
  name: FindInverse(IMutableNavigation)
  nameWithType: MutableNavigationExtensions.FindInverse(IMutableNavigation)
  fullName: Microsoft.EntityFrameworkCore.MutableNavigationExtensions.FindInverse(Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Extensions/MutableNavigationExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: FindInverse
    path: src/Microsoft.EntityFrameworkCore/Extensions/MutableNavigationExtensions.cs
    startLine: 24
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore
  summary: "\n    Gets the navigation property on the other end of the relationship. Returns null if\n    there is no navigation property defined on the other end of the relationship.\n"
  example: []
  syntax:
    content: public static IMutableNavigation FindInverse(this IMutableNavigation navigation)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function FindInverse(navigation As IMutableNavigation) As IMutableNavigation
    parameters:
    - id: navigation
      type: Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation
      description: 'The navigation property to find the inverse of. '
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation
      description: "\n    The inverse navigation, or null if none is defined.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.MutableNavigationExtensions.GetTargetType(Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation)
  commentId: M:Microsoft.EntityFrameworkCore.MutableNavigationExtensions.GetTargetType(Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation)
  id: GetTargetType(Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.MutableNavigationExtensions
  langs:
  - csharp
  - vb
  name: GetTargetType(IMutableNavigation)
  nameWithType: MutableNavigationExtensions.GetTargetType(IMutableNavigation)
  fullName: Microsoft.EntityFrameworkCore.MutableNavigationExtensions.GetTargetType(Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Extensions/MutableNavigationExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GetTargetType
    path: src/Microsoft.EntityFrameworkCore/Extensions/MutableNavigationExtensions.cs
    startLine: 33
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore
  summary: "\n    Gets the entity type that a given navigation property will hold an instance of\n    (or hold instances of if it is a collection navigation).\n"
  example: []
  syntax:
    content: public static IMutableEntityType GetTargetType(this IMutableNavigation navigation)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetTargetType(navigation As IMutableNavigation) As IMutableEntityType
    parameters:
    - id: navigation
      type: Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation
      description: 'The navigation property to find the target entity type of. '
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType
      description: 'The target entity type. '
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.MutableNavigationExtensions.SetField(Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.MutableNavigationExtensions.SetField(Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation,System.String)
  id: SetField(Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation,System.String)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.MutableNavigationExtensions
  langs:
  - csharp
  - vb
  name: SetField(IMutableNavigation, String)
  nameWithType: MutableNavigationExtensions.SetField(IMutableNavigation, String)
  fullName: Microsoft.EntityFrameworkCore.MutableNavigationExtensions.SetField(Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Extensions/MutableNavigationExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: SetField
    path: src/Microsoft.EntityFrameworkCore/Extensions/MutableNavigationExtensions.cs
    startLine: 54
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore
  summary: "\n<p>\n    Sets the backing field to use for this navigation property.\n</p>\n<p>\n    Backing fields are normally found by convention as described\n    here: http://go.microsoft.com/fwlink/?LinkId=723277.\n    This method is useful for setting backing fields explicitly in cases where the\n    correct field is not found by convention.\n</p>\n<p>\n    By default, the backing field is only used for navigation properties when the property\n    must be read and there is no getter, or the property must be set and there is not setter.\n    This can be changed by calling <xref href=\"Microsoft.EntityFrameworkCore.MutableNavigationExtensions.SetPropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation%2cSystem.Nullable%7bMicrosoft.EntityFrameworkCore.Metadata.PropertyAccessMode%7d)\" data-throw-if-not-resolved=\"false\"></xref> for the property.\n</p>\n"
  example: []
  syntax:
    content: public static void SetField(this IMutableNavigation navigation, string fieldName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub SetField(navigation As IMutableNavigation, fieldName As String)
    parameters:
    - id: navigation
      type: Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation
      description: 'The navigation property for which the field should be set. '
    - id: fieldName
      type: System.String
      description: 'The name of the field to use. '
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.MutableNavigationExtensions.SetPropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation,System.Nullable{Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode})
  commentId: M:Microsoft.EntityFrameworkCore.MutableNavigationExtensions.SetPropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation,System.Nullable{Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode})
  id: SetPropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation,System.Nullable{Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode})
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.MutableNavigationExtensions
  langs:
  - csharp
  - vb
  name: SetPropertyAccessMode(IMutableNavigation, Nullable<PropertyAccessMode>)
  nameWithType: MutableNavigationExtensions.SetPropertyAccessMode(IMutableNavigation, Nullable<PropertyAccessMode>)
  fullName: Microsoft.EntityFrameworkCore.MutableNavigationExtensions.SetPropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation, System.Nullable<Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Extensions/MutableNavigationExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: SetPropertyAccessMode
    path: src/Microsoft.EntityFrameworkCore/Extensions/MutableNavigationExtensions.cs
    startLine: 63
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore
  summary: "\n    Sets the <xref href=\"Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode\" data-throw-if-not-resolved=\"false\"></xref> to use for this navigation property.\n"
  example: []
  syntax:
    content: public static void SetPropertyAccessMode(this IMutableNavigation navigation, PropertyAccessMode? propertyAccessMode)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub SetPropertyAccessMode(navigation As IMutableNavigation, propertyAccessMode As PropertyAccessMode?)
    parameters:
    - id: navigation
      type: Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation
      description: 'The navigation property for which to set the access mode. '
    - id: propertyAccessMode
      type: System.Nullable{Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode}
      description: The <xref href="Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode" data-throw-if-not-resolved="false"></xref>, or null to clear the mode set.
  nameWithType.vb: MutableNavigationExtensions.SetPropertyAccessMode(IMutableNavigation, Nullable(Of PropertyAccessMode))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.EntityFrameworkCore.MutableNavigationExtensions.SetPropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation, System.Nullable(Of Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode))
  name.vb: SetPropertyAccessMode(IMutableNavigation, Nullable(Of PropertyAccessMode))
references:
- uid: Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IMutableNavigation
  nameWithType: IMutableNavigation
  fullName: Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation
- uid: Microsoft.EntityFrameworkCore
  commentId: N:Microsoft.EntityFrameworkCore
  isExternal: false
  name: Microsoft.EntityFrameworkCore
  nameWithType: Microsoft.EntityFrameworkCore
  fullName: Microsoft.EntityFrameworkCore
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IMutableEntityType
  nameWithType: IMutableEntityType
  fullName: Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType
- uid: Microsoft.EntityFrameworkCore.MutableNavigationExtensions.SetPropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation,System.Nullable{Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode})
  commentId: M:Microsoft.EntityFrameworkCore.MutableNavigationExtensions.SetPropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation,System.Nullable{Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode})
  isExternal: true
  name: SetPropertyAccessMode(IMutableNavigation, Nullable<PropertyAccessMode>)
  nameWithType: MutableNavigationExtensions.SetPropertyAccessMode(IMutableNavigation, Nullable<PropertyAccessMode>)
  fullName: Microsoft.EntityFrameworkCore.MutableNavigationExtensions.SetPropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation, System.Nullable<Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode>)
  nameWithType.vb: MutableNavigationExtensions.SetPropertyAccessMode(IMutableNavigation, Nullable(Of PropertyAccessMode))
  fullname.vb: Microsoft.EntityFrameworkCore.MutableNavigationExtensions.SetPropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation, System.Nullable(Of Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode))
  name.vb: SetPropertyAccessMode(IMutableNavigation, Nullable(Of PropertyAccessMode))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.MutableNavigationExtensions.SetPropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation,System.Nullable{Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode})
    name: SetPropertyAccessMode
    nameWithType: MutableNavigationExtensions.SetPropertyAccessMode
    fullName: Microsoft.EntityFrameworkCore.MutableNavigationExtensions.SetPropertyAccessMode
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation
    name: IMutableNavigation
    nameWithType: IMutableNavigation
    fullName: Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode
    name: PropertyAccessMode
    nameWithType: PropertyAccessMode
    fullName: Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.MutableNavigationExtensions.SetPropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation,System.Nullable{Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode})
    name: SetPropertyAccessMode
    nameWithType: MutableNavigationExtensions.SetPropertyAccessMode
    fullName: Microsoft.EntityFrameworkCore.MutableNavigationExtensions.SetPropertyAccessMode
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation
    name: IMutableNavigation
    nameWithType: IMutableNavigation
    fullName: Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode
    name: PropertyAccessMode
    nameWithType: PropertyAccessMode
    fullName: Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: PropertyAccessMode
  nameWithType: PropertyAccessMode
  fullName: Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode
- uid: System.Nullable{Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode}
  commentId: T:System.Nullable{Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode}
  parent: System
  definition: System.Nullable`1
  name: Nullable<PropertyAccessMode>
  nameWithType: Nullable<PropertyAccessMode>
  fullName: System.Nullable<Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode>
  nameWithType.vb: Nullable(Of PropertyAccessMode)
  fullname.vb: System.Nullable(Of Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode)
  name.vb: Nullable(Of PropertyAccessMode)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode
    name: PropertyAccessMode
    nameWithType: PropertyAccessMode
    fullName: Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode
    name: PropertyAccessMode
    nameWithType: PropertyAccessMode
    fullName: Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
