### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTestFrameworkExecutor
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTestFrameworkExecutor
  id: ConditionalTestFrameworkExecutor
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit
  children:
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTestFrameworkExecutor.#ctor(System.Reflection.AssemblyName,ISourceInformationProvider,IMessageSink)
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTestFrameworkExecutor.RunTestCases(System.Collections.Generic.IEnumerable{IXunitTestCase},IMessageSink,ITestFrameworkExecutionOptions)
  langs:
  - csharp
  - vb
  name: ConditionalTestFrameworkExecutor
  nameWithType: ConditionalTestFrameworkExecutor
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTestFrameworkExecutor
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestUtilities/Xunit/ConditionalTestFrameworkExecutor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ConditionalTestFrameworkExecutor
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestUtilities/Xunit/ConditionalTestFrameworkExecutor.cs
    startLine: 12
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit
  syntax:
    content: 'public class ConditionalTestFrameworkExecutor : XunitTestFrameworkExecutor'
    content.vb: >-
      Public Class ConditionalTestFrameworkExecutor
          Inherits XunitTestFrameworkExecutor
  inheritance:
  - System.Object
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTestFrameworkExecutor.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTestFrameworkExecutor.#ctor(System.Reflection.AssemblyName,ISourceInformationProvider,IMessageSink)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTestFrameworkExecutor.#ctor(System.Reflection.AssemblyName,ISourceInformationProvider,IMessageSink)
  id: '#ctor(System.Reflection.AssemblyName,ISourceInformationProvider,IMessageSink)'
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTestFrameworkExecutor
  langs:
  - csharp
  - vb
  name: ConditionalTestFrameworkExecutor(AssemblyName, ISourceInformationProvider, IMessageSink)
  nameWithType: ConditionalTestFrameworkExecutor.ConditionalTestFrameworkExecutor(AssemblyName, ISourceInformationProvider, IMessageSink)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTestFrameworkExecutor.ConditionalTestFrameworkExecutor(System.Reflection.AssemblyName, ISourceInformationProvider, IMessageSink)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestUtilities/Xunit/ConditionalTestFrameworkExecutor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestUtilities/Xunit/ConditionalTestFrameworkExecutor.cs
    startLine: 14
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit
  syntax:
    content: public ConditionalTestFrameworkExecutor(AssemblyName assemblyName, ISourceInformationProvider sourceInformationProvider, IMessageSink diagnosticMessageSink)
    content.vb: Public Sub New(assemblyName As AssemblyName, sourceInformationProvider As ISourceInformationProvider, diagnosticMessageSink As IMessageSink)
    parameters:
    - id: assemblyName
      type: System.Reflection.AssemblyName
    - id: sourceInformationProvider
      type: ISourceInformationProvider
    - id: diagnosticMessageSink
      type: IMessageSink
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTestFrameworkExecutor.RunTestCases(System.Collections.Generic.IEnumerable{IXunitTestCase},IMessageSink,ITestFrameworkExecutionOptions)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTestFrameworkExecutor.RunTestCases(System.Collections.Generic.IEnumerable{IXunitTestCase},IMessageSink,ITestFrameworkExecutionOptions)
  id: RunTestCases(System.Collections.Generic.IEnumerable{IXunitTestCase},IMessageSink,ITestFrameworkExecutionOptions)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTestFrameworkExecutor
  langs:
  - csharp
  - vb
  name: RunTestCases(IEnumerable<IXunitTestCase>, IMessageSink, ITestFrameworkExecutionOptions)
  nameWithType: ConditionalTestFrameworkExecutor.RunTestCases(IEnumerable<IXunitTestCase>, IMessageSink, ITestFrameworkExecutionOptions)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTestFrameworkExecutor.RunTestCases(System.Collections.Generic.IEnumerable<IXunitTestCase>, IMessageSink, ITestFrameworkExecutionOptions)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestUtilities/Xunit/ConditionalTestFrameworkExecutor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: RunTestCases
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestUtilities/Xunit/ConditionalTestFrameworkExecutor.cs
    startLine: 19
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit
  syntax:
    content: protected override void RunTestCases(IEnumerable<IXunitTestCase> testCases, IMessageSink executionMessageSink, ITestFrameworkExecutionOptions executionOptions)
    content.vb: Protected Overrides Sub RunTestCases(testCases As IEnumerable(Of IXunitTestCase), executionMessageSink As IMessageSink, executionOptions As ITestFrameworkExecutionOptions)
    parameters:
    - id: testCases
      type: System.Collections.Generic.IEnumerable{IXunitTestCase}
    - id: executionMessageSink
      type: IMessageSink
    - id: executionOptions
      type: ITestFrameworkExecutionOptions
  nameWithType.vb: ConditionalTestFrameworkExecutor.RunTestCases(IEnumerable(Of IXunitTestCase), IMessageSink, ITestFrameworkExecutionOptions)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTestFrameworkExecutor.RunTestCases(System.Collections.Generic.IEnumerable(Of IXunitTestCase), IMessageSink, ITestFrameworkExecutionOptions)
  name.vb: RunTestCases(IEnumerable(Of IXunitTestCase), IMessageSink, ITestFrameworkExecutionOptions)
references:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit
  commentId: N:Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit
  nameWithType: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTestFrameworkExecutor.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<ConditionalTestFrameworkExecutor, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<ConditionalTestFrameworkExecutor, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTestFrameworkExecutor, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of ConditionalTestFrameworkExecutor, TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTestFrameworkExecutor, TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of ConditionalTestFrameworkExecutor, TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<ConditionalTestFrameworkExecutor, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<ConditionalTestFrameworkExecutor, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTestFrameworkExecutor, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of ConditionalTestFrameworkExecutor, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of ConditionalTestFrameworkExecutor, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTestFrameworkExecutor, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: System.Reflection.AssemblyName
  commentId: T:System.Reflection.AssemblyName
  parent: System.Reflection
  isExternal: true
  name: AssemblyName
  nameWithType: AssemblyName
  fullName: System.Reflection.AssemblyName
- uid: ISourceInformationProvider
  commentId: '!:ISourceInformationProvider'
  isExternal: true
  name: ISourceInformationProvider
  nameWithType: ISourceInformationProvider
  fullName: ISourceInformationProvider
- uid: IMessageSink
  isExternal: true
  name: IMessageSink
  nameWithType: IMessageSink
  fullName: IMessageSink
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: false
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: System.Collections.Generic.IEnumerable{IXunitTestCase}
  commentId: T:System.Collections.Generic.IEnumerable{IXunitTestCase}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IXunitTestCase>
  nameWithType: IEnumerable<IXunitTestCase>
  fullName: System.Collections.Generic.IEnumerable<IXunitTestCase>
  nameWithType.vb: IEnumerable(Of IXunitTestCase)
  fullname.vb: System.Collections.Generic.IEnumerable(Of IXunitTestCase)
  name.vb: IEnumerable(Of IXunitTestCase)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: IXunitTestCase
    name: IXunitTestCase
    nameWithType: IXunitTestCase
    fullName: IXunitTestCase
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: IXunitTestCase
    name: IXunitTestCase
    nameWithType: IXunitTestCase
    fullName: IXunitTestCase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ITestFrameworkExecutionOptions
  commentId: '!:ITestFrameworkExecutionOptions'
  isExternal: true
  name: ITestFrameworkExecutionOptions
  nameWithType: ITestFrameworkExecutionOptions
  fullName: ITestFrameworkExecutionOptions
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
