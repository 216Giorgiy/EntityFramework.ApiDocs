### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTestFrameworkExecutor
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTestFrameworkExecutor
  id: ConditionalTestFrameworkExecutor
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit
  children:
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTestFrameworkExecutor.#ctor(System.Reflection.AssemblyName,Xunit.Abstractions.ISourceInformationProvider,Xunit.Abstractions.IMessageSink)
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTestFrameworkExecutor.RunTestCases(System.Collections.Generic.IEnumerable{Xunit.Sdk.IXunitTestCase},Xunit.Abstractions.IMessageSink,Xunit.Abstractions.ITestFrameworkExecutionOptions)
  langs:
  - csharp
  - vb
  name: ConditionalTestFrameworkExecutor
  nameWithType: ConditionalTestFrameworkExecutor
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTestFrameworkExecutor
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestUtilities/Xunit/ConditionalTestFrameworkExecutor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ConditionalTestFrameworkExecutor
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestUtilities/Xunit/ConditionalTestFrameworkExecutor.cs
    startLine: 12
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit
  syntax:
    content: 'public class ConditionalTestFrameworkExecutor : XunitTestFrameworkExecutor, ITestFrameworkExecutor, IDisposable'
    content.vb: >-
      Public Class ConditionalTestFrameworkExecutor
          Inherits XunitTestFrameworkExecutor
          Implements ITestFrameworkExecutor, IDisposable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - Xunit.LongLivedMarshalByRefObject
  - Xunit.Sdk.TestFrameworkExecutor{Xunit.Sdk.IXunitTestCase}
  - Xunit.Sdk.XunitTestFrameworkExecutor
  implements:
  - Xunit.Abstractions.ITestFrameworkExecutor
  - System.IDisposable
  inheritedMembers:
  - Xunit.Sdk.XunitTestFrameworkExecutor.CreateDiscoverer
  - Xunit.Sdk.XunitTestFrameworkExecutor.TestAssembly
  - Xunit.Sdk.TestFrameworkExecutor{Xunit.Sdk.IXunitTestCase}.Deserialize(System.String)
  - Xunit.Sdk.TestFrameworkExecutor{Xunit.Sdk.IXunitTestCase}.Dispose
  - Xunit.Sdk.TestFrameworkExecutor{Xunit.Sdk.IXunitTestCase}.RunAll(Xunit.Abstractions.IMessageSink,Xunit.Abstractions.ITestFrameworkDiscoveryOptions,Xunit.Abstractions.ITestFrameworkExecutionOptions)
  - Xunit.Sdk.TestFrameworkExecutor{Xunit.Sdk.IXunitTestCase}.RunTests(System.Collections.Generic.IEnumerable{Xunit.Abstractions.ITestCase},Xunit.Abstractions.IMessageSink,Xunit.Abstractions.ITestFrameworkExecutionOptions)
  - Xunit.Sdk.TestFrameworkExecutor{Xunit.Sdk.IXunitTestCase}.AssemblyInfo
  - Xunit.Sdk.TestFrameworkExecutor{Xunit.Sdk.IXunitTestCase}.DiagnosticMessageSink
  - Xunit.Sdk.TestFrameworkExecutor{Xunit.Sdk.IXunitTestCase}.DisposalTracker
  - Xunit.Sdk.TestFrameworkExecutor{Xunit.Sdk.IXunitTestCase}.SourceInformationProvider
  - Xunit.LongLivedMarshalByRefObject.DisconnectAll
  - Xunit.LongLivedMarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTestFrameworkExecutor.#ctor(System.Reflection.AssemblyName,Xunit.Abstractions.ISourceInformationProvider,Xunit.Abstractions.IMessageSink)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTestFrameworkExecutor.#ctor(System.Reflection.AssemblyName,Xunit.Abstractions.ISourceInformationProvider,Xunit.Abstractions.IMessageSink)
  id: '#ctor(System.Reflection.AssemblyName,Xunit.Abstractions.ISourceInformationProvider,Xunit.Abstractions.IMessageSink)'
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTestFrameworkExecutor
  langs:
  - csharp
  - vb
  name: ConditionalTestFrameworkExecutor(AssemblyName, ISourceInformationProvider, IMessageSink)
  nameWithType: ConditionalTestFrameworkExecutor.ConditionalTestFrameworkExecutor(AssemblyName, ISourceInformationProvider, IMessageSink)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTestFrameworkExecutor.ConditionalTestFrameworkExecutor(System.Reflection.AssemblyName, Xunit.Abstractions.ISourceInformationProvider, Xunit.Abstractions.IMessageSink)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestUtilities/Xunit/ConditionalTestFrameworkExecutor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestUtilities/Xunit/ConditionalTestFrameworkExecutor.cs
    startLine: 14
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit
  syntax:
    content: public ConditionalTestFrameworkExecutor(AssemblyName assemblyName, ISourceInformationProvider sourceInformationProvider, IMessageSink diagnosticMessageSink)
    content.vb: Public Sub New(assemblyName As AssemblyName, sourceInformationProvider As ISourceInformationProvider, diagnosticMessageSink As IMessageSink)
    parameters:
    - id: assemblyName
      type: System.Reflection.AssemblyName
    - id: sourceInformationProvider
      type: Xunit.Abstractions.ISourceInformationProvider
    - id: diagnosticMessageSink
      type: Xunit.Abstractions.IMessageSink
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTestFrameworkExecutor.RunTestCases(System.Collections.Generic.IEnumerable{Xunit.Sdk.IXunitTestCase},Xunit.Abstractions.IMessageSink,Xunit.Abstractions.ITestFrameworkExecutionOptions)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTestFrameworkExecutor.RunTestCases(System.Collections.Generic.IEnumerable{Xunit.Sdk.IXunitTestCase},Xunit.Abstractions.IMessageSink,Xunit.Abstractions.ITestFrameworkExecutionOptions)
  id: RunTestCases(System.Collections.Generic.IEnumerable{Xunit.Sdk.IXunitTestCase},Xunit.Abstractions.IMessageSink,Xunit.Abstractions.ITestFrameworkExecutionOptions)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTestFrameworkExecutor
  langs:
  - csharp
  - vb
  name: RunTestCases(IEnumerable<IXunitTestCase>, IMessageSink, ITestFrameworkExecutionOptions)
  nameWithType: ConditionalTestFrameworkExecutor.RunTestCases(IEnumerable<IXunitTestCase>, IMessageSink, ITestFrameworkExecutionOptions)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTestFrameworkExecutor.RunTestCases(System.Collections.Generic.IEnumerable<Xunit.Sdk.IXunitTestCase>, Xunit.Abstractions.IMessageSink, Xunit.Abstractions.ITestFrameworkExecutionOptions)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestUtilities/Xunit/ConditionalTestFrameworkExecutor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: RunTestCases
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestUtilities/Xunit/ConditionalTestFrameworkExecutor.cs
    startLine: 19
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit
  syntax:
    content: protected override void RunTestCases(IEnumerable<IXunitTestCase> testCases, IMessageSink executionMessageSink, ITestFrameworkExecutionOptions executionOptions)
    content.vb: Protected Overrides Sub RunTestCases(testCases As IEnumerable(Of IXunitTestCase), executionMessageSink As IMessageSink, executionOptions As ITestFrameworkExecutionOptions)
    parameters:
    - id: testCases
      type: System.Collections.Generic.IEnumerable{Xunit.Sdk.IXunitTestCase}
    - id: executionMessageSink
      type: Xunit.Abstractions.IMessageSink
    - id: executionOptions
      type: Xunit.Abstractions.ITestFrameworkExecutionOptions
  overridden: Xunit.Sdk.XunitTestFrameworkExecutor.RunTestCases(System.Collections.Generic.IEnumerable{Xunit.Sdk.IXunitTestCase},Xunit.Abstractions.IMessageSink,Xunit.Abstractions.ITestFrameworkExecutionOptions)
  nameWithType.vb: ConditionalTestFrameworkExecutor.RunTestCases(IEnumerable(Of IXunitTestCase), IMessageSink, ITestFrameworkExecutionOptions)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTestFrameworkExecutor.RunTestCases(System.Collections.Generic.IEnumerable(Of Xunit.Sdk.IXunitTestCase), Xunit.Abstractions.IMessageSink, Xunit.Abstractions.ITestFrameworkExecutionOptions)
  name.vb: RunTestCases(IEnumerable(Of IXunitTestCase), IMessageSink, ITestFrameworkExecutionOptions)
references:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit
  commentId: N:Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit
  nameWithType: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.MarshalByRefObject
  commentId: T:System.MarshalByRefObject
  parent: System
  isExternal: true
  name: MarshalByRefObject
  nameWithType: MarshalByRefObject
  fullName: System.MarshalByRefObject
- uid: Xunit.LongLivedMarshalByRefObject
  commentId: T:Xunit.LongLivedMarshalByRefObject
  parent: Xunit
  isExternal: true
  name: LongLivedMarshalByRefObject
  nameWithType: LongLivedMarshalByRefObject
  fullName: Xunit.LongLivedMarshalByRefObject
- uid: Xunit.Sdk.TestFrameworkExecutor{Xunit.Sdk.IXunitTestCase}
  commentId: T:Xunit.Sdk.TestFrameworkExecutor{Xunit.Sdk.IXunitTestCase}
  parent: Xunit.Sdk
  definition: Xunit.Sdk.TestFrameworkExecutor`1
  name: TestFrameworkExecutor<IXunitTestCase>
  nameWithType: TestFrameworkExecutor<IXunitTestCase>
  fullName: Xunit.Sdk.TestFrameworkExecutor<Xunit.Sdk.IXunitTestCase>
  nameWithType.vb: TestFrameworkExecutor(Of IXunitTestCase)
  fullname.vb: Xunit.Sdk.TestFrameworkExecutor(Of Xunit.Sdk.IXunitTestCase)
  name.vb: TestFrameworkExecutor(Of IXunitTestCase)
  spec.csharp:
  - uid: Xunit.Sdk.TestFrameworkExecutor`1
    name: TestFrameworkExecutor
    nameWithType: TestFrameworkExecutor
    fullName: Xunit.Sdk.TestFrameworkExecutor
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Xunit.Sdk.IXunitTestCase
    name: IXunitTestCase
    nameWithType: IXunitTestCase
    fullName: Xunit.Sdk.IXunitTestCase
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Xunit.Sdk.TestFrameworkExecutor`1
    name: TestFrameworkExecutor
    nameWithType: TestFrameworkExecutor
    fullName: Xunit.Sdk.TestFrameworkExecutor
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Xunit.Sdk.IXunitTestCase
    name: IXunitTestCase
    nameWithType: IXunitTestCase
    fullName: Xunit.Sdk.IXunitTestCase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Xunit.Sdk.XunitTestFrameworkExecutor
  commentId: T:Xunit.Sdk.XunitTestFrameworkExecutor
  parent: Xunit.Sdk
  isExternal: true
  name: XunitTestFrameworkExecutor
  nameWithType: XunitTestFrameworkExecutor
  fullName: Xunit.Sdk.XunitTestFrameworkExecutor
- uid: Xunit.Abstractions.ITestFrameworkExecutor
  commentId: T:Xunit.Abstractions.ITestFrameworkExecutor
  parent: Xunit.Abstractions
  isExternal: true
  name: ITestFrameworkExecutor
  nameWithType: ITestFrameworkExecutor
  fullName: Xunit.Abstractions.ITestFrameworkExecutor
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Xunit.Sdk.XunitTestFrameworkExecutor.CreateDiscoverer
  commentId: M:Xunit.Sdk.XunitTestFrameworkExecutor.CreateDiscoverer
  parent: Xunit.Sdk.XunitTestFrameworkExecutor
  isExternal: true
  name: CreateDiscoverer()
  nameWithType: XunitTestFrameworkExecutor.CreateDiscoverer()
  fullName: Xunit.Sdk.XunitTestFrameworkExecutor.CreateDiscoverer()
  spec.csharp:
  - uid: Xunit.Sdk.XunitTestFrameworkExecutor.CreateDiscoverer
    name: CreateDiscoverer
    nameWithType: XunitTestFrameworkExecutor.CreateDiscoverer
    fullName: Xunit.Sdk.XunitTestFrameworkExecutor.CreateDiscoverer
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Xunit.Sdk.XunitTestFrameworkExecutor.CreateDiscoverer
    name: CreateDiscoverer
    nameWithType: XunitTestFrameworkExecutor.CreateDiscoverer
    fullName: Xunit.Sdk.XunitTestFrameworkExecutor.CreateDiscoverer
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Xunit.Sdk.XunitTestFrameworkExecutor.TestAssembly
  commentId: P:Xunit.Sdk.XunitTestFrameworkExecutor.TestAssembly
  parent: Xunit.Sdk.XunitTestFrameworkExecutor
  isExternal: true
  name: TestAssembly
  nameWithType: XunitTestFrameworkExecutor.TestAssembly
  fullName: Xunit.Sdk.XunitTestFrameworkExecutor.TestAssembly
- uid: Xunit.Sdk.TestFrameworkExecutor{Xunit.Sdk.IXunitTestCase}.Deserialize(System.String)
  commentId: M:Xunit.Sdk.TestFrameworkExecutor{Xunit.Sdk.IXunitTestCase}.Deserialize(System.String)
  parent: Xunit.Sdk.TestFrameworkExecutor{Xunit.Sdk.IXunitTestCase}
  definition: Xunit.Sdk.TestFrameworkExecutor`1.Deserialize(System.String)
  name: Deserialize(String)
  nameWithType: TestFrameworkExecutor<IXunitTestCase>.Deserialize(String)
  fullName: Xunit.Sdk.TestFrameworkExecutor<Xunit.Sdk.IXunitTestCase>.Deserialize(System.String)
  nameWithType.vb: TestFrameworkExecutor(Of IXunitTestCase).Deserialize(String)
  fullname.vb: Xunit.Sdk.TestFrameworkExecutor(Of Xunit.Sdk.IXunitTestCase).Deserialize(System.String)
  spec.csharp:
  - uid: Xunit.Sdk.TestFrameworkExecutor`1.Deserialize(System.String)
    name: Deserialize
    nameWithType: TestFrameworkExecutor<IXunitTestCase>.Deserialize
    fullName: Xunit.Sdk.TestFrameworkExecutor<Xunit.Sdk.IXunitTestCase>.Deserialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Xunit.Sdk.TestFrameworkExecutor`1.Deserialize(System.String)
    name: Deserialize
    nameWithType: TestFrameworkExecutor(Of IXunitTestCase).Deserialize
    fullName: Xunit.Sdk.TestFrameworkExecutor(Of Xunit.Sdk.IXunitTestCase).Deserialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Xunit.Sdk.TestFrameworkExecutor{Xunit.Sdk.IXunitTestCase}.Dispose
  commentId: M:Xunit.Sdk.TestFrameworkExecutor{Xunit.Sdk.IXunitTestCase}.Dispose
  parent: Xunit.Sdk.TestFrameworkExecutor{Xunit.Sdk.IXunitTestCase}
  definition: Xunit.Sdk.TestFrameworkExecutor`1.Dispose
  name: Dispose()
  nameWithType: TestFrameworkExecutor<IXunitTestCase>.Dispose()
  fullName: Xunit.Sdk.TestFrameworkExecutor<Xunit.Sdk.IXunitTestCase>.Dispose()
  nameWithType.vb: TestFrameworkExecutor(Of IXunitTestCase).Dispose()
  fullname.vb: Xunit.Sdk.TestFrameworkExecutor(Of Xunit.Sdk.IXunitTestCase).Dispose()
  spec.csharp:
  - uid: Xunit.Sdk.TestFrameworkExecutor`1.Dispose
    name: Dispose
    nameWithType: TestFrameworkExecutor<IXunitTestCase>.Dispose
    fullName: Xunit.Sdk.TestFrameworkExecutor<Xunit.Sdk.IXunitTestCase>.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Xunit.Sdk.TestFrameworkExecutor`1.Dispose
    name: Dispose
    nameWithType: TestFrameworkExecutor(Of IXunitTestCase).Dispose
    fullName: Xunit.Sdk.TestFrameworkExecutor(Of Xunit.Sdk.IXunitTestCase).Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Xunit.Sdk.TestFrameworkExecutor{Xunit.Sdk.IXunitTestCase}.RunAll(Xunit.Abstractions.IMessageSink,Xunit.Abstractions.ITestFrameworkDiscoveryOptions,Xunit.Abstractions.ITestFrameworkExecutionOptions)
  commentId: M:Xunit.Sdk.TestFrameworkExecutor{Xunit.Sdk.IXunitTestCase}.RunAll(Xunit.Abstractions.IMessageSink,Xunit.Abstractions.ITestFrameworkDiscoveryOptions,Xunit.Abstractions.ITestFrameworkExecutionOptions)
  parent: Xunit.Sdk.TestFrameworkExecutor{Xunit.Sdk.IXunitTestCase}
  definition: Xunit.Sdk.TestFrameworkExecutor`1.RunAll(Xunit.Abstractions.IMessageSink,Xunit.Abstractions.ITestFrameworkDiscoveryOptions,Xunit.Abstractions.ITestFrameworkExecutionOptions)
  name: RunAll(IMessageSink, ITestFrameworkDiscoveryOptions, ITestFrameworkExecutionOptions)
  nameWithType: TestFrameworkExecutor<IXunitTestCase>.RunAll(IMessageSink, ITestFrameworkDiscoveryOptions, ITestFrameworkExecutionOptions)
  fullName: Xunit.Sdk.TestFrameworkExecutor<Xunit.Sdk.IXunitTestCase>.RunAll(Xunit.Abstractions.IMessageSink, Xunit.Abstractions.ITestFrameworkDiscoveryOptions, Xunit.Abstractions.ITestFrameworkExecutionOptions)
  nameWithType.vb: TestFrameworkExecutor(Of IXunitTestCase).RunAll(IMessageSink, ITestFrameworkDiscoveryOptions, ITestFrameworkExecutionOptions)
  fullname.vb: Xunit.Sdk.TestFrameworkExecutor(Of Xunit.Sdk.IXunitTestCase).RunAll(Xunit.Abstractions.IMessageSink, Xunit.Abstractions.ITestFrameworkDiscoveryOptions, Xunit.Abstractions.ITestFrameworkExecutionOptions)
  spec.csharp:
  - uid: Xunit.Sdk.TestFrameworkExecutor`1.RunAll(Xunit.Abstractions.IMessageSink,Xunit.Abstractions.ITestFrameworkDiscoveryOptions,Xunit.Abstractions.ITestFrameworkExecutionOptions)
    name: RunAll
    nameWithType: TestFrameworkExecutor<IXunitTestCase>.RunAll
    fullName: Xunit.Sdk.TestFrameworkExecutor<Xunit.Sdk.IXunitTestCase>.RunAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Xunit.Abstractions.IMessageSink
    name: IMessageSink
    nameWithType: IMessageSink
    fullName: Xunit.Abstractions.IMessageSink
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Xunit.Abstractions.ITestFrameworkDiscoveryOptions
    name: ITestFrameworkDiscoveryOptions
    nameWithType: ITestFrameworkDiscoveryOptions
    fullName: Xunit.Abstractions.ITestFrameworkDiscoveryOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Xunit.Abstractions.ITestFrameworkExecutionOptions
    name: ITestFrameworkExecutionOptions
    nameWithType: ITestFrameworkExecutionOptions
    fullName: Xunit.Abstractions.ITestFrameworkExecutionOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Xunit.Sdk.TestFrameworkExecutor`1.RunAll(Xunit.Abstractions.IMessageSink,Xunit.Abstractions.ITestFrameworkDiscoveryOptions,Xunit.Abstractions.ITestFrameworkExecutionOptions)
    name: RunAll
    nameWithType: TestFrameworkExecutor(Of IXunitTestCase).RunAll
    fullName: Xunit.Sdk.TestFrameworkExecutor(Of Xunit.Sdk.IXunitTestCase).RunAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Xunit.Abstractions.IMessageSink
    name: IMessageSink
    nameWithType: IMessageSink
    fullName: Xunit.Abstractions.IMessageSink
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Xunit.Abstractions.ITestFrameworkDiscoveryOptions
    name: ITestFrameworkDiscoveryOptions
    nameWithType: ITestFrameworkDiscoveryOptions
    fullName: Xunit.Abstractions.ITestFrameworkDiscoveryOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Xunit.Abstractions.ITestFrameworkExecutionOptions
    name: ITestFrameworkExecutionOptions
    nameWithType: ITestFrameworkExecutionOptions
    fullName: Xunit.Abstractions.ITestFrameworkExecutionOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Xunit.Sdk.TestFrameworkExecutor{Xunit.Sdk.IXunitTestCase}.RunTests(System.Collections.Generic.IEnumerable{Xunit.Abstractions.ITestCase},Xunit.Abstractions.IMessageSink,Xunit.Abstractions.ITestFrameworkExecutionOptions)
  commentId: M:Xunit.Sdk.TestFrameworkExecutor{Xunit.Sdk.IXunitTestCase}.RunTests(System.Collections.Generic.IEnumerable{Xunit.Abstractions.ITestCase},Xunit.Abstractions.IMessageSink,Xunit.Abstractions.ITestFrameworkExecutionOptions)
  parent: Xunit.Sdk.TestFrameworkExecutor{Xunit.Sdk.IXunitTestCase}
  definition: Xunit.Sdk.TestFrameworkExecutor`1.RunTests(System.Collections.Generic.IEnumerable{Xunit.Abstractions.ITestCase},Xunit.Abstractions.IMessageSink,Xunit.Abstractions.ITestFrameworkExecutionOptions)
  name: RunTests(IEnumerable<ITestCase>, IMessageSink, ITestFrameworkExecutionOptions)
  nameWithType: TestFrameworkExecutor<IXunitTestCase>.RunTests(IEnumerable<ITestCase>, IMessageSink, ITestFrameworkExecutionOptions)
  fullName: Xunit.Sdk.TestFrameworkExecutor<Xunit.Sdk.IXunitTestCase>.RunTests(System.Collections.Generic.IEnumerable<Xunit.Abstractions.ITestCase>, Xunit.Abstractions.IMessageSink, Xunit.Abstractions.ITestFrameworkExecutionOptions)
  nameWithType.vb: TestFrameworkExecutor(Of IXunitTestCase).RunTests(IEnumerable(Of ITestCase), IMessageSink, ITestFrameworkExecutionOptions)
  fullname.vb: Xunit.Sdk.TestFrameworkExecutor(Of Xunit.Sdk.IXunitTestCase).RunTests(System.Collections.Generic.IEnumerable(Of Xunit.Abstractions.ITestCase), Xunit.Abstractions.IMessageSink, Xunit.Abstractions.ITestFrameworkExecutionOptions)
  name.vb: RunTests(IEnumerable(Of ITestCase), IMessageSink, ITestFrameworkExecutionOptions)
  spec.csharp:
  - uid: Xunit.Sdk.TestFrameworkExecutor`1.RunTests(System.Collections.Generic.IEnumerable{Xunit.Abstractions.ITestCase},Xunit.Abstractions.IMessageSink,Xunit.Abstractions.ITestFrameworkExecutionOptions)
    name: RunTests
    nameWithType: TestFrameworkExecutor<IXunitTestCase>.RunTests
    fullName: Xunit.Sdk.TestFrameworkExecutor<Xunit.Sdk.IXunitTestCase>.RunTests
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Xunit.Abstractions.ITestCase
    name: ITestCase
    nameWithType: ITestCase
    fullName: Xunit.Abstractions.ITestCase
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Xunit.Abstractions.IMessageSink
    name: IMessageSink
    nameWithType: IMessageSink
    fullName: Xunit.Abstractions.IMessageSink
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Xunit.Abstractions.ITestFrameworkExecutionOptions
    name: ITestFrameworkExecutionOptions
    nameWithType: ITestFrameworkExecutionOptions
    fullName: Xunit.Abstractions.ITestFrameworkExecutionOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Xunit.Sdk.TestFrameworkExecutor`1.RunTests(System.Collections.Generic.IEnumerable{Xunit.Abstractions.ITestCase},Xunit.Abstractions.IMessageSink,Xunit.Abstractions.ITestFrameworkExecutionOptions)
    name: RunTests
    nameWithType: TestFrameworkExecutor(Of IXunitTestCase).RunTests
    fullName: Xunit.Sdk.TestFrameworkExecutor(Of Xunit.Sdk.IXunitTestCase).RunTests
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Xunit.Abstractions.ITestCase
    name: ITestCase
    nameWithType: ITestCase
    fullName: Xunit.Abstractions.ITestCase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Xunit.Abstractions.IMessageSink
    name: IMessageSink
    nameWithType: IMessageSink
    fullName: Xunit.Abstractions.IMessageSink
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Xunit.Abstractions.ITestFrameworkExecutionOptions
    name: ITestFrameworkExecutionOptions
    nameWithType: ITestFrameworkExecutionOptions
    fullName: Xunit.Abstractions.ITestFrameworkExecutionOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Xunit.Sdk.TestFrameworkExecutor{Xunit.Sdk.IXunitTestCase}.AssemblyInfo
  commentId: P:Xunit.Sdk.TestFrameworkExecutor{Xunit.Sdk.IXunitTestCase}.AssemblyInfo
  parent: Xunit.Sdk.TestFrameworkExecutor{Xunit.Sdk.IXunitTestCase}
  definition: Xunit.Sdk.TestFrameworkExecutor`1.AssemblyInfo
  name: AssemblyInfo
  nameWithType: TestFrameworkExecutor<IXunitTestCase>.AssemblyInfo
  fullName: Xunit.Sdk.TestFrameworkExecutor<Xunit.Sdk.IXunitTestCase>.AssemblyInfo
  nameWithType.vb: TestFrameworkExecutor(Of IXunitTestCase).AssemblyInfo
  fullname.vb: Xunit.Sdk.TestFrameworkExecutor(Of Xunit.Sdk.IXunitTestCase).AssemblyInfo
- uid: Xunit.Sdk.TestFrameworkExecutor{Xunit.Sdk.IXunitTestCase}.DiagnosticMessageSink
  commentId: P:Xunit.Sdk.TestFrameworkExecutor{Xunit.Sdk.IXunitTestCase}.DiagnosticMessageSink
  parent: Xunit.Sdk.TestFrameworkExecutor{Xunit.Sdk.IXunitTestCase}
  definition: Xunit.Sdk.TestFrameworkExecutor`1.DiagnosticMessageSink
  name: DiagnosticMessageSink
  nameWithType: TestFrameworkExecutor<IXunitTestCase>.DiagnosticMessageSink
  fullName: Xunit.Sdk.TestFrameworkExecutor<Xunit.Sdk.IXunitTestCase>.DiagnosticMessageSink
  nameWithType.vb: TestFrameworkExecutor(Of IXunitTestCase).DiagnosticMessageSink
  fullname.vb: Xunit.Sdk.TestFrameworkExecutor(Of Xunit.Sdk.IXunitTestCase).DiagnosticMessageSink
- uid: Xunit.Sdk.TestFrameworkExecutor{Xunit.Sdk.IXunitTestCase}.DisposalTracker
  commentId: P:Xunit.Sdk.TestFrameworkExecutor{Xunit.Sdk.IXunitTestCase}.DisposalTracker
  parent: Xunit.Sdk.TestFrameworkExecutor{Xunit.Sdk.IXunitTestCase}
  definition: Xunit.Sdk.TestFrameworkExecutor`1.DisposalTracker
  name: DisposalTracker
  nameWithType: TestFrameworkExecutor<IXunitTestCase>.DisposalTracker
  fullName: Xunit.Sdk.TestFrameworkExecutor<Xunit.Sdk.IXunitTestCase>.DisposalTracker
  nameWithType.vb: TestFrameworkExecutor(Of IXunitTestCase).DisposalTracker
  fullname.vb: Xunit.Sdk.TestFrameworkExecutor(Of Xunit.Sdk.IXunitTestCase).DisposalTracker
- uid: Xunit.Sdk.TestFrameworkExecutor{Xunit.Sdk.IXunitTestCase}.SourceInformationProvider
  commentId: P:Xunit.Sdk.TestFrameworkExecutor{Xunit.Sdk.IXunitTestCase}.SourceInformationProvider
  parent: Xunit.Sdk.TestFrameworkExecutor{Xunit.Sdk.IXunitTestCase}
  definition: Xunit.Sdk.TestFrameworkExecutor`1.SourceInformationProvider
  name: SourceInformationProvider
  nameWithType: TestFrameworkExecutor<IXunitTestCase>.SourceInformationProvider
  fullName: Xunit.Sdk.TestFrameworkExecutor<Xunit.Sdk.IXunitTestCase>.SourceInformationProvider
  nameWithType.vb: TestFrameworkExecutor(Of IXunitTestCase).SourceInformationProvider
  fullname.vb: Xunit.Sdk.TestFrameworkExecutor(Of Xunit.Sdk.IXunitTestCase).SourceInformationProvider
- uid: Xunit.LongLivedMarshalByRefObject.DisconnectAll
  commentId: M:Xunit.LongLivedMarshalByRefObject.DisconnectAll
  parent: Xunit.LongLivedMarshalByRefObject
  isExternal: true
  name: DisconnectAll()
  nameWithType: LongLivedMarshalByRefObject.DisconnectAll()
  fullName: Xunit.LongLivedMarshalByRefObject.DisconnectAll()
  spec.csharp:
  - uid: Xunit.LongLivedMarshalByRefObject.DisconnectAll
    name: DisconnectAll
    nameWithType: LongLivedMarshalByRefObject.DisconnectAll
    fullName: Xunit.LongLivedMarshalByRefObject.DisconnectAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Xunit.LongLivedMarshalByRefObject.DisconnectAll
    name: DisconnectAll
    nameWithType: LongLivedMarshalByRefObject.DisconnectAll
    fullName: Xunit.LongLivedMarshalByRefObject.DisconnectAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Xunit.LongLivedMarshalByRefObject.InitializeLifetimeService
  commentId: M:Xunit.LongLivedMarshalByRefObject.InitializeLifetimeService
  parent: Xunit.LongLivedMarshalByRefObject
  isExternal: true
  name: InitializeLifetimeService()
  nameWithType: LongLivedMarshalByRefObject.InitializeLifetimeService()
  fullName: Xunit.LongLivedMarshalByRefObject.InitializeLifetimeService()
  spec.csharp:
  - uid: Xunit.LongLivedMarshalByRefObject.InitializeLifetimeService
    name: InitializeLifetimeService
    nameWithType: LongLivedMarshalByRefObject.InitializeLifetimeService
    fullName: Xunit.LongLivedMarshalByRefObject.InitializeLifetimeService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Xunit.LongLivedMarshalByRefObject.InitializeLifetimeService
    name: InitializeLifetimeService
    nameWithType: LongLivedMarshalByRefObject.InitializeLifetimeService
    fullName: Xunit.LongLivedMarshalByRefObject.InitializeLifetimeService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  commentId: M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  parent: System.MarshalByRefObject
  isExternal: true
  name: MemberwiseClone(Boolean)
  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)
  fullName: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  spec.csharp:
  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
    name: MemberwiseClone
    nameWithType: MarshalByRefObject.MemberwiseClone
    fullName: System.MarshalByRefObject.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
    name: MemberwiseClone
    nameWithType: MarshalByRefObject.MemberwiseClone
    fullName: System.MarshalByRefObject.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.MarshalByRefObject.GetLifetimeService
  commentId: M:System.MarshalByRefObject.GetLifetimeService
  parent: System.MarshalByRefObject
  isExternal: true
  name: GetLifetimeService()
  nameWithType: MarshalByRefObject.GetLifetimeService()
  fullName: System.MarshalByRefObject.GetLifetimeService()
  spec.csharp:
  - uid: System.MarshalByRefObject.GetLifetimeService
    name: GetLifetimeService
    nameWithType: MarshalByRefObject.GetLifetimeService
    fullName: System.MarshalByRefObject.GetLifetimeService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.GetLifetimeService
    name: GetLifetimeService
    nameWithType: MarshalByRefObject.GetLifetimeService
    fullName: System.MarshalByRefObject.GetLifetimeService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.MarshalByRefObject.CreateObjRef(System.Type)
  commentId: M:System.MarshalByRefObject.CreateObjRef(System.Type)
  parent: System.MarshalByRefObject
  isExternal: true
  name: CreateObjRef(Type)
  nameWithType: MarshalByRefObject.CreateObjRef(Type)
  fullName: System.MarshalByRefObject.CreateObjRef(System.Type)
  spec.csharp:
  - uid: System.MarshalByRefObject.CreateObjRef(System.Type)
    name: CreateObjRef
    nameWithType: MarshalByRefObject.CreateObjRef
    fullName: System.MarshalByRefObject.CreateObjRef
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.CreateObjRef(System.Type)
    name: CreateObjRef
    nameWithType: MarshalByRefObject.CreateObjRef
    fullName: System.MarshalByRefObject.CreateObjRef
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Xunit
  commentId: N:Xunit
  isExternal: false
  name: Xunit
  nameWithType: Xunit
  fullName: Xunit
- uid: Xunit.Sdk.TestFrameworkExecutor`1
  commentId: T:Xunit.Sdk.TestFrameworkExecutor`1
  isExternal: true
  name: TestFrameworkExecutor<TTestCase>
  nameWithType: TestFrameworkExecutor<TTestCase>
  fullName: Xunit.Sdk.TestFrameworkExecutor<TTestCase>
  nameWithType.vb: TestFrameworkExecutor(Of TTestCase)
  fullname.vb: Xunit.Sdk.TestFrameworkExecutor(Of TTestCase)
  name.vb: TestFrameworkExecutor(Of TTestCase)
  spec.csharp:
  - uid: Xunit.Sdk.TestFrameworkExecutor`1
    name: TestFrameworkExecutor
    nameWithType: TestFrameworkExecutor
    fullName: Xunit.Sdk.TestFrameworkExecutor
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TTestCase
    nameWithType: TTestCase
    fullName: TTestCase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Xunit.Sdk.TestFrameworkExecutor`1
    name: TestFrameworkExecutor
    nameWithType: TestFrameworkExecutor
    fullName: Xunit.Sdk.TestFrameworkExecutor
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TTestCase
    nameWithType: TTestCase
    fullName: TTestCase
  - name: )
    nameWithType: )
    fullName: )
- uid: Xunit.Sdk
  commentId: N:Xunit.Sdk
  isExternal: false
  name: Xunit.Sdk
  nameWithType: Xunit.Sdk
  fullName: Xunit.Sdk
- uid: Xunit.Abstractions
  commentId: N:Xunit.Abstractions
  isExternal: false
  name: Xunit.Abstractions
  nameWithType: Xunit.Abstractions
  fullName: Xunit.Abstractions
- uid: Xunit.Sdk.TestFrameworkExecutor`1.Deserialize(System.String)
  commentId: M:Xunit.Sdk.TestFrameworkExecutor`1.Deserialize(System.String)
  isExternal: true
  name: Deserialize(String)
  nameWithType: TestFrameworkExecutor<TTestCase>.Deserialize(String)
  fullName: Xunit.Sdk.TestFrameworkExecutor<TTestCase>.Deserialize(System.String)
  nameWithType.vb: TestFrameworkExecutor(Of TTestCase).Deserialize(String)
  fullname.vb: Xunit.Sdk.TestFrameworkExecutor(Of TTestCase).Deserialize(System.String)
  spec.csharp:
  - uid: Xunit.Sdk.TestFrameworkExecutor`1.Deserialize(System.String)
    name: Deserialize
    nameWithType: TestFrameworkExecutor<TTestCase>.Deserialize
    fullName: Xunit.Sdk.TestFrameworkExecutor<TTestCase>.Deserialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Xunit.Sdk.TestFrameworkExecutor`1.Deserialize(System.String)
    name: Deserialize
    nameWithType: TestFrameworkExecutor(Of TTestCase).Deserialize
    fullName: Xunit.Sdk.TestFrameworkExecutor(Of TTestCase).Deserialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Xunit.Sdk.TestFrameworkExecutor`1.Dispose
  commentId: M:Xunit.Sdk.TestFrameworkExecutor`1.Dispose
  isExternal: true
  name: Dispose()
  nameWithType: TestFrameworkExecutor<TTestCase>.Dispose()
  fullName: Xunit.Sdk.TestFrameworkExecutor<TTestCase>.Dispose()
  nameWithType.vb: TestFrameworkExecutor(Of TTestCase).Dispose()
  fullname.vb: Xunit.Sdk.TestFrameworkExecutor(Of TTestCase).Dispose()
  spec.csharp:
  - uid: Xunit.Sdk.TestFrameworkExecutor`1.Dispose
    name: Dispose
    nameWithType: TestFrameworkExecutor<TTestCase>.Dispose
    fullName: Xunit.Sdk.TestFrameworkExecutor<TTestCase>.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Xunit.Sdk.TestFrameworkExecutor`1.Dispose
    name: Dispose
    nameWithType: TestFrameworkExecutor(Of TTestCase).Dispose
    fullName: Xunit.Sdk.TestFrameworkExecutor(Of TTestCase).Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Xunit.Sdk.TestFrameworkExecutor`1.RunAll(Xunit.Abstractions.IMessageSink,Xunit.Abstractions.ITestFrameworkDiscoveryOptions,Xunit.Abstractions.ITestFrameworkExecutionOptions)
  commentId: M:Xunit.Sdk.TestFrameworkExecutor`1.RunAll(Xunit.Abstractions.IMessageSink,Xunit.Abstractions.ITestFrameworkDiscoveryOptions,Xunit.Abstractions.ITestFrameworkExecutionOptions)
  isExternal: true
  name: RunAll(IMessageSink, ITestFrameworkDiscoveryOptions, ITestFrameworkExecutionOptions)
  nameWithType: TestFrameworkExecutor<TTestCase>.RunAll(IMessageSink, ITestFrameworkDiscoveryOptions, ITestFrameworkExecutionOptions)
  fullName: Xunit.Sdk.TestFrameworkExecutor<TTestCase>.RunAll(Xunit.Abstractions.IMessageSink, Xunit.Abstractions.ITestFrameworkDiscoveryOptions, Xunit.Abstractions.ITestFrameworkExecutionOptions)
  nameWithType.vb: TestFrameworkExecutor(Of TTestCase).RunAll(IMessageSink, ITestFrameworkDiscoveryOptions, ITestFrameworkExecutionOptions)
  fullname.vb: Xunit.Sdk.TestFrameworkExecutor(Of TTestCase).RunAll(Xunit.Abstractions.IMessageSink, Xunit.Abstractions.ITestFrameworkDiscoveryOptions, Xunit.Abstractions.ITestFrameworkExecutionOptions)
  spec.csharp:
  - uid: Xunit.Sdk.TestFrameworkExecutor`1.RunAll(Xunit.Abstractions.IMessageSink,Xunit.Abstractions.ITestFrameworkDiscoveryOptions,Xunit.Abstractions.ITestFrameworkExecutionOptions)
    name: RunAll
    nameWithType: TestFrameworkExecutor<TTestCase>.RunAll
    fullName: Xunit.Sdk.TestFrameworkExecutor<TTestCase>.RunAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Xunit.Abstractions.IMessageSink
    name: IMessageSink
    nameWithType: IMessageSink
    fullName: Xunit.Abstractions.IMessageSink
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Xunit.Abstractions.ITestFrameworkDiscoveryOptions
    name: ITestFrameworkDiscoveryOptions
    nameWithType: ITestFrameworkDiscoveryOptions
    fullName: Xunit.Abstractions.ITestFrameworkDiscoveryOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Xunit.Abstractions.ITestFrameworkExecutionOptions
    name: ITestFrameworkExecutionOptions
    nameWithType: ITestFrameworkExecutionOptions
    fullName: Xunit.Abstractions.ITestFrameworkExecutionOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Xunit.Sdk.TestFrameworkExecutor`1.RunAll(Xunit.Abstractions.IMessageSink,Xunit.Abstractions.ITestFrameworkDiscoveryOptions,Xunit.Abstractions.ITestFrameworkExecutionOptions)
    name: RunAll
    nameWithType: TestFrameworkExecutor(Of TTestCase).RunAll
    fullName: Xunit.Sdk.TestFrameworkExecutor(Of TTestCase).RunAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Xunit.Abstractions.IMessageSink
    name: IMessageSink
    nameWithType: IMessageSink
    fullName: Xunit.Abstractions.IMessageSink
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Xunit.Abstractions.ITestFrameworkDiscoveryOptions
    name: ITestFrameworkDiscoveryOptions
    nameWithType: ITestFrameworkDiscoveryOptions
    fullName: Xunit.Abstractions.ITestFrameworkDiscoveryOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Xunit.Abstractions.ITestFrameworkExecutionOptions
    name: ITestFrameworkExecutionOptions
    nameWithType: ITestFrameworkExecutionOptions
    fullName: Xunit.Abstractions.ITestFrameworkExecutionOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Xunit.Sdk.TestFrameworkExecutor`1.RunTests(System.Collections.Generic.IEnumerable{Xunit.Abstractions.ITestCase},Xunit.Abstractions.IMessageSink,Xunit.Abstractions.ITestFrameworkExecutionOptions)
  commentId: M:Xunit.Sdk.TestFrameworkExecutor`1.RunTests(System.Collections.Generic.IEnumerable{Xunit.Abstractions.ITestCase},Xunit.Abstractions.IMessageSink,Xunit.Abstractions.ITestFrameworkExecutionOptions)
  isExternal: true
  name: RunTests(IEnumerable<ITestCase>, IMessageSink, ITestFrameworkExecutionOptions)
  nameWithType: TestFrameworkExecutor<TTestCase>.RunTests(IEnumerable<ITestCase>, IMessageSink, ITestFrameworkExecutionOptions)
  fullName: Xunit.Sdk.TestFrameworkExecutor<TTestCase>.RunTests(System.Collections.Generic.IEnumerable<Xunit.Abstractions.ITestCase>, Xunit.Abstractions.IMessageSink, Xunit.Abstractions.ITestFrameworkExecutionOptions)
  nameWithType.vb: TestFrameworkExecutor(Of TTestCase).RunTests(IEnumerable(Of ITestCase), IMessageSink, ITestFrameworkExecutionOptions)
  fullname.vb: Xunit.Sdk.TestFrameworkExecutor(Of TTestCase).RunTests(System.Collections.Generic.IEnumerable(Of Xunit.Abstractions.ITestCase), Xunit.Abstractions.IMessageSink, Xunit.Abstractions.ITestFrameworkExecutionOptions)
  name.vb: RunTests(IEnumerable(Of ITestCase), IMessageSink, ITestFrameworkExecutionOptions)
  spec.csharp:
  - uid: Xunit.Sdk.TestFrameworkExecutor`1.RunTests(System.Collections.Generic.IEnumerable{Xunit.Abstractions.ITestCase},Xunit.Abstractions.IMessageSink,Xunit.Abstractions.ITestFrameworkExecutionOptions)
    name: RunTests
    nameWithType: TestFrameworkExecutor<TTestCase>.RunTests
    fullName: Xunit.Sdk.TestFrameworkExecutor<TTestCase>.RunTests
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Xunit.Abstractions.ITestCase
    name: ITestCase
    nameWithType: ITestCase
    fullName: Xunit.Abstractions.ITestCase
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Xunit.Abstractions.IMessageSink
    name: IMessageSink
    nameWithType: IMessageSink
    fullName: Xunit.Abstractions.IMessageSink
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Xunit.Abstractions.ITestFrameworkExecutionOptions
    name: ITestFrameworkExecutionOptions
    nameWithType: ITestFrameworkExecutionOptions
    fullName: Xunit.Abstractions.ITestFrameworkExecutionOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Xunit.Sdk.TestFrameworkExecutor`1.RunTests(System.Collections.Generic.IEnumerable{Xunit.Abstractions.ITestCase},Xunit.Abstractions.IMessageSink,Xunit.Abstractions.ITestFrameworkExecutionOptions)
    name: RunTests
    nameWithType: TestFrameworkExecutor(Of TTestCase).RunTests
    fullName: Xunit.Sdk.TestFrameworkExecutor(Of TTestCase).RunTests
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Xunit.Abstractions.ITestCase
    name: ITestCase
    nameWithType: ITestCase
    fullName: Xunit.Abstractions.ITestCase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Xunit.Abstractions.IMessageSink
    name: IMessageSink
    nameWithType: IMessageSink
    fullName: Xunit.Abstractions.IMessageSink
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Xunit.Abstractions.ITestFrameworkExecutionOptions
    name: ITestFrameworkExecutionOptions
    nameWithType: ITestFrameworkExecutionOptions
    fullName: Xunit.Abstractions.ITestFrameworkExecutionOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Xunit.Sdk.TestFrameworkExecutor`1.AssemblyInfo
  commentId: P:Xunit.Sdk.TestFrameworkExecutor`1.AssemblyInfo
  isExternal: true
  name: AssemblyInfo
  nameWithType: TestFrameworkExecutor<TTestCase>.AssemblyInfo
  fullName: Xunit.Sdk.TestFrameworkExecutor<TTestCase>.AssemblyInfo
  nameWithType.vb: TestFrameworkExecutor(Of TTestCase).AssemblyInfo
  fullname.vb: Xunit.Sdk.TestFrameworkExecutor(Of TTestCase).AssemblyInfo
- uid: Xunit.Sdk.TestFrameworkExecutor`1.DiagnosticMessageSink
  commentId: P:Xunit.Sdk.TestFrameworkExecutor`1.DiagnosticMessageSink
  isExternal: true
  name: DiagnosticMessageSink
  nameWithType: TestFrameworkExecutor<TTestCase>.DiagnosticMessageSink
  fullName: Xunit.Sdk.TestFrameworkExecutor<TTestCase>.DiagnosticMessageSink
  nameWithType.vb: TestFrameworkExecutor(Of TTestCase).DiagnosticMessageSink
  fullname.vb: Xunit.Sdk.TestFrameworkExecutor(Of TTestCase).DiagnosticMessageSink
- uid: Xunit.Sdk.TestFrameworkExecutor`1.DisposalTracker
  commentId: P:Xunit.Sdk.TestFrameworkExecutor`1.DisposalTracker
  isExternal: true
  name: DisposalTracker
  nameWithType: TestFrameworkExecutor<TTestCase>.DisposalTracker
  fullName: Xunit.Sdk.TestFrameworkExecutor<TTestCase>.DisposalTracker
  nameWithType.vb: TestFrameworkExecutor(Of TTestCase).DisposalTracker
  fullname.vb: Xunit.Sdk.TestFrameworkExecutor(Of TTestCase).DisposalTracker
- uid: Xunit.Sdk.TestFrameworkExecutor`1.SourceInformationProvider
  commentId: P:Xunit.Sdk.TestFrameworkExecutor`1.SourceInformationProvider
  isExternal: true
  name: SourceInformationProvider
  nameWithType: TestFrameworkExecutor<TTestCase>.SourceInformationProvider
  fullName: Xunit.Sdk.TestFrameworkExecutor<TTestCase>.SourceInformationProvider
  nameWithType.vb: TestFrameworkExecutor(Of TTestCase).SourceInformationProvider
  fullname.vb: Xunit.Sdk.TestFrameworkExecutor(Of TTestCase).SourceInformationProvider
- uid: System.Reflection.AssemblyName
  commentId: T:System.Reflection.AssemblyName
  parent: System.Reflection
  isExternal: true
  name: AssemblyName
  nameWithType: AssemblyName
  fullName: System.Reflection.AssemblyName
- uid: Xunit.Abstractions.ISourceInformationProvider
  commentId: T:Xunit.Abstractions.ISourceInformationProvider
  parent: Xunit.Abstractions
  isExternal: true
  name: ISourceInformationProvider
  nameWithType: ISourceInformationProvider
  fullName: Xunit.Abstractions.ISourceInformationProvider
- uid: Xunit.Abstractions.IMessageSink
  commentId: T:Xunit.Abstractions.IMessageSink
  parent: Xunit.Abstractions
  isExternal: true
  name: IMessageSink
  nameWithType: IMessageSink
  fullName: Xunit.Abstractions.IMessageSink
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: false
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: Xunit.Sdk.XunitTestFrameworkExecutor.RunTestCases(System.Collections.Generic.IEnumerable{Xunit.Sdk.IXunitTestCase},Xunit.Abstractions.IMessageSink,Xunit.Abstractions.ITestFrameworkExecutionOptions)
  commentId: M:Xunit.Sdk.XunitTestFrameworkExecutor.RunTestCases(System.Collections.Generic.IEnumerable{Xunit.Sdk.IXunitTestCase},Xunit.Abstractions.IMessageSink,Xunit.Abstractions.ITestFrameworkExecutionOptions)
  parent: Xunit.Sdk.XunitTestFrameworkExecutor
  isExternal: true
  name: RunTestCases(IEnumerable<IXunitTestCase>, IMessageSink, ITestFrameworkExecutionOptions)
  nameWithType: XunitTestFrameworkExecutor.RunTestCases(IEnumerable<IXunitTestCase>, IMessageSink, ITestFrameworkExecutionOptions)
  fullName: Xunit.Sdk.XunitTestFrameworkExecutor.RunTestCases(System.Collections.Generic.IEnumerable<Xunit.Sdk.IXunitTestCase>, Xunit.Abstractions.IMessageSink, Xunit.Abstractions.ITestFrameworkExecutionOptions)
  nameWithType.vb: XunitTestFrameworkExecutor.RunTestCases(IEnumerable(Of IXunitTestCase), IMessageSink, ITestFrameworkExecutionOptions)
  fullname.vb: Xunit.Sdk.XunitTestFrameworkExecutor.RunTestCases(System.Collections.Generic.IEnumerable(Of Xunit.Sdk.IXunitTestCase), Xunit.Abstractions.IMessageSink, Xunit.Abstractions.ITestFrameworkExecutionOptions)
  name.vb: RunTestCases(IEnumerable(Of IXunitTestCase), IMessageSink, ITestFrameworkExecutionOptions)
  spec.csharp:
  - uid: Xunit.Sdk.XunitTestFrameworkExecutor.RunTestCases(System.Collections.Generic.IEnumerable{Xunit.Sdk.IXunitTestCase},Xunit.Abstractions.IMessageSink,Xunit.Abstractions.ITestFrameworkExecutionOptions)
    name: RunTestCases
    nameWithType: XunitTestFrameworkExecutor.RunTestCases
    fullName: Xunit.Sdk.XunitTestFrameworkExecutor.RunTestCases
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Xunit.Sdk.IXunitTestCase
    name: IXunitTestCase
    nameWithType: IXunitTestCase
    fullName: Xunit.Sdk.IXunitTestCase
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Xunit.Abstractions.IMessageSink
    name: IMessageSink
    nameWithType: IMessageSink
    fullName: Xunit.Abstractions.IMessageSink
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Xunit.Abstractions.ITestFrameworkExecutionOptions
    name: ITestFrameworkExecutionOptions
    nameWithType: ITestFrameworkExecutionOptions
    fullName: Xunit.Abstractions.ITestFrameworkExecutionOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Xunit.Sdk.XunitTestFrameworkExecutor.RunTestCases(System.Collections.Generic.IEnumerable{Xunit.Sdk.IXunitTestCase},Xunit.Abstractions.IMessageSink,Xunit.Abstractions.ITestFrameworkExecutionOptions)
    name: RunTestCases
    nameWithType: XunitTestFrameworkExecutor.RunTestCases
    fullName: Xunit.Sdk.XunitTestFrameworkExecutor.RunTestCases
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Xunit.Sdk.IXunitTestCase
    name: IXunitTestCase
    nameWithType: IXunitTestCase
    fullName: Xunit.Sdk.IXunitTestCase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Xunit.Abstractions.IMessageSink
    name: IMessageSink
    nameWithType: IMessageSink
    fullName: Xunit.Abstractions.IMessageSink
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Xunit.Abstractions.ITestFrameworkExecutionOptions
    name: ITestFrameworkExecutionOptions
    nameWithType: ITestFrameworkExecutionOptions
    fullName: Xunit.Abstractions.ITestFrameworkExecutionOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Xunit.Sdk.IXunitTestCase}
  commentId: T:System.Collections.Generic.IEnumerable{Xunit.Sdk.IXunitTestCase}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IXunitTestCase>
  nameWithType: IEnumerable<IXunitTestCase>
  fullName: System.Collections.Generic.IEnumerable<Xunit.Sdk.IXunitTestCase>
  nameWithType.vb: IEnumerable(Of IXunitTestCase)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Xunit.Sdk.IXunitTestCase)
  name.vb: IEnumerable(Of IXunitTestCase)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Xunit.Sdk.IXunitTestCase
    name: IXunitTestCase
    nameWithType: IXunitTestCase
    fullName: Xunit.Sdk.IXunitTestCase
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Xunit.Sdk.IXunitTestCase
    name: IXunitTestCase
    nameWithType: IXunitTestCase
    fullName: Xunit.Sdk.IXunitTestCase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Xunit.Abstractions.ITestFrameworkExecutionOptions
  commentId: T:Xunit.Abstractions.ITestFrameworkExecutionOptions
  parent: Xunit.Abstractions
  isExternal: true
  name: ITestFrameworkExecutionOptions
  nameWithType: ITestFrameworkExecutionOptions
  fullName: Xunit.Abstractions.ITestFrameworkExecutionOptions
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
