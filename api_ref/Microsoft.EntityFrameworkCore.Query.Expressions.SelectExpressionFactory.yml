### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpressionFactory
  commentId: T:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpressionFactory
  id: SelectExpressionFactory
  parent: Microsoft.EntityFrameworkCore.Query.Expressions
  children:
  - Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpressionFactory.#ctor(Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGeneratorFactory)
  - Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpressionFactory.Create(Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext)
  - Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpressionFactory.Create(Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext,System.String)
  langs:
  - csharp
  - vb
  name: SelectExpressionFactory
  nameWithType: SelectExpressionFactory
  fullName: Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpressionFactory
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/Expressions/SelectExpressionFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: SelectExpressionFactory
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/Expressions/SelectExpressionFactory.cs
    startLine: 12
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.Expressions
  summary: "\nA SelectExpression factory.\n"
  example: []
  syntax:
    content: 'public class SelectExpressionFactory : ISelectExpressionFactory'
    content.vb: >-
      Public Class SelectExpressionFactory
          Implements ISelectExpressionFactory
  inheritance:
  - System.Object
  implements:
  - Microsoft.EntityFrameworkCore.Query.Expressions.ISelectExpressionFactory
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpressionFactory.#ctor(Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGeneratorFactory)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpressionFactory.#ctor(Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGeneratorFactory)
  id: '#ctor(Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGeneratorFactory)'
  parent: Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpressionFactory
  langs:
  - csharp
  - vb
  name: SelectExpressionFactory(IQuerySqlGeneratorFactory)
  nameWithType: SelectExpressionFactory.SelectExpressionFactory(IQuerySqlGeneratorFactory)
  fullName: Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpressionFactory.SelectExpressionFactory(Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGeneratorFactory)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/Expressions/SelectExpressionFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/Expressions/SelectExpressionFactory.cs
    startLine: 20
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.Expressions
  summary: "\nInitializes a new instance of the Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpressionFactory class.\n"
  example: []
  syntax:
    content: public SelectExpressionFactory(IQuerySqlGeneratorFactory querySqlGeneratorFactory)
    content.vb: Public Sub New(querySqlGeneratorFactory As IQuerySqlGeneratorFactory)
    parameters:
    - id: querySqlGeneratorFactory
      type: Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGeneratorFactory
      description: 'The query SQL generator factory. '
  overload: Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpressionFactory.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpressionFactory.Create(Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpressionFactory.Create(Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext)
  id: Create(Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext)
  parent: Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpressionFactory
  langs:
  - csharp
  - vb
  name: Create(RelationalQueryCompilationContext)
  nameWithType: SelectExpressionFactory.Create(RelationalQueryCompilationContext)
  fullName: Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpressionFactory.Create(Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/Expressions/SelectExpressionFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Create
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/Expressions/SelectExpressionFactory.cs
    startLine: 34
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.Expressions
  summary: "\nCreates a new SelectExpression.\n"
  example: []
  syntax:
    content: public virtual SelectExpression Create(RelationalQueryCompilationContext queryCompilationContext)
    content.vb: Public Overridable Function Create(queryCompilationContext As RelationalQueryCompilationContext) As SelectExpression
    parameters:
    - id: queryCompilationContext
      type: Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext
      description: 'Context for the query compilation. '
    return:
      type: Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression
      description: "\nA SelectExpression.\n"
  overload: Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpressionFactory.Create*
  implements:
  - Microsoft.EntityFrameworkCore.Query.Expressions.ISelectExpressionFactory.Create(Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpressionFactory.Create(Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpressionFactory.Create(Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext,System.String)
  id: Create(Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext,System.String)
  parent: Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpressionFactory
  langs:
  - csharp
  - vb
  name: Create(RelationalQueryCompilationContext, String)
  nameWithType: SelectExpressionFactory.Create(RelationalQueryCompilationContext, String)
  fullName: Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpressionFactory.Create(Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/Expressions/SelectExpressionFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Create
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/Expressions/SelectExpressionFactory.cs
    startLine: 45
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.Expressions
  summary: "\nCreates a new SelectExpression.\n"
  example: []
  syntax:
    content: public virtual SelectExpression Create(RelationalQueryCompilationContext queryCompilationContext, string alias)
    content.vb: Public Overridable Function Create(queryCompilationContext As RelationalQueryCompilationContext, alias As String) As SelectExpression
    parameters:
    - id: queryCompilationContext
      type: Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext
      description: 'Context for the query compilation. '
    - id: alias
      type: System.String
      description: 'The alias of this SelectExpression. '
    return:
      type: Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression
      description: "\nA SelectExpression.\n"
  overload: Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpressionFactory.Create*
  implements:
  - Microsoft.EntityFrameworkCore.Query.Expressions.ISelectExpressionFactory.Create(Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext,System.String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.EntityFrameworkCore.Query.Expressions
  commentId: N:Microsoft.EntityFrameworkCore.Query.Expressions
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query.Expressions
  nameWithType: Microsoft.EntityFrameworkCore.Query.Expressions
  fullName: Microsoft.EntityFrameworkCore.Query.Expressions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Query.Expressions.ISelectExpressionFactory
  commentId: T:Microsoft.EntityFrameworkCore.Query.Expressions.ISelectExpressionFactory
  parent: Microsoft.EntityFrameworkCore.Query.Expressions
  isExternal: false
  name: ISelectExpressionFactory
  nameWithType: ISelectExpressionFactory
  fullName: Microsoft.EntityFrameworkCore.Query.Expressions.ISelectExpressionFactory
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpressionFactory.#ctor*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpressionFactory.#ctor
  isExternal: false
  name: SelectExpressionFactory
  nameWithType: SelectExpressionFactory.SelectExpressionFactory
  fullName: Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpressionFactory.SelectExpressionFactory
- uid: Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGeneratorFactory
  commentId: T:Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGeneratorFactory
  parent: Microsoft.EntityFrameworkCore.Query.Sql
  isExternal: false
  name: IQuerySqlGeneratorFactory
  nameWithType: IQuerySqlGeneratorFactory
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGeneratorFactory
- uid: Microsoft.EntityFrameworkCore.Query.Sql
  commentId: N:Microsoft.EntityFrameworkCore.Query.Sql
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query.Sql
  nameWithType: Microsoft.EntityFrameworkCore.Query.Sql
  fullName: Microsoft.EntityFrameworkCore.Query.Sql
- uid: Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpressionFactory.Create*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpressionFactory.Create
  isExternal: false
  name: Create
  nameWithType: SelectExpressionFactory.Create
  fullName: Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpressionFactory.Create
- uid: Microsoft.EntityFrameworkCore.Query.Expressions.ISelectExpressionFactory.Create(Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Expressions.ISelectExpressionFactory.Create(Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext)
  parent: Microsoft.EntityFrameworkCore.Query.Expressions.ISelectExpressionFactory
  isExternal: false
  name: Create(RelationalQueryCompilationContext)
  nameWithType: ISelectExpressionFactory.Create(RelationalQueryCompilationContext)
  fullName: Microsoft.EntityFrameworkCore.Query.Expressions.ISelectExpressionFactory.Create(Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.Expressions.ISelectExpressionFactory.Create(Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext)
    name: Create
    nameWithType: ISelectExpressionFactory.Create
    fullName: Microsoft.EntityFrameworkCore.Query.Expressions.ISelectExpressionFactory.Create
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext
    name: RelationalQueryCompilationContext
    nameWithType: RelationalQueryCompilationContext
    fullName: Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.Expressions.ISelectExpressionFactory.Create(Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext)
    name: Create
    nameWithType: ISelectExpressionFactory.Create
    fullName: Microsoft.EntityFrameworkCore.Query.Expressions.ISelectExpressionFactory.Create
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext
    name: RelationalQueryCompilationContext
    nameWithType: RelationalQueryCompilationContext
    fullName: Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext
  commentId: T:Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext
  parent: Microsoft.EntityFrameworkCore.Query
  isExternal: false
  name: RelationalQueryCompilationContext
  nameWithType: RelationalQueryCompilationContext
  fullName: Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext
- uid: Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression
  commentId: T:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression
  parent: Microsoft.EntityFrameworkCore.Query.Expressions
  isExternal: false
  name: SelectExpression
  nameWithType: SelectExpression
  fullName: Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression
- uid: Microsoft.EntityFrameworkCore.Query
  commentId: N:Microsoft.EntityFrameworkCore.Query
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query
  nameWithType: Microsoft.EntityFrameworkCore.Query
  fullName: Microsoft.EntityFrameworkCore.Query
- uid: Microsoft.EntityFrameworkCore.Query.Expressions.ISelectExpressionFactory.Create(Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Expressions.ISelectExpressionFactory.Create(Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext,System.String)
  parent: Microsoft.EntityFrameworkCore.Query.Expressions.ISelectExpressionFactory
  isExternal: true
  name: Create(RelationalQueryCompilationContext, String)
  nameWithType: ISelectExpressionFactory.Create(RelationalQueryCompilationContext, String)
  fullName: Microsoft.EntityFrameworkCore.Query.Expressions.ISelectExpressionFactory.Create(Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext, System.String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.Expressions.ISelectExpressionFactory.Create(Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext,System.String)
    name: Create
    nameWithType: ISelectExpressionFactory.Create
    fullName: Microsoft.EntityFrameworkCore.Query.Expressions.ISelectExpressionFactory.Create
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext
    name: RelationalQueryCompilationContext
    nameWithType: RelationalQueryCompilationContext
    fullName: Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.Expressions.ISelectExpressionFactory.Create(Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext,System.String)
    name: Create
    nameWithType: ISelectExpressionFactory.Create
    fullName: Microsoft.EntityFrameworkCore.Query.Expressions.ISelectExpressionFactory.Create
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext
    name: RelationalQueryCompilationContext
    nameWithType: RelationalQueryCompilationContext
    fullName: Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
