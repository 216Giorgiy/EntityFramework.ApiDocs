### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder
  id: ModelBuilderTest.TestModelBuilder
  parent: Microsoft.EntityFrameworkCore.Tests
  children:
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.#ctor(Microsoft.EntityFrameworkCore.ModelBuilder)
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Entity``1
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Entity``1(System.Action{Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder{``0}})
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.GetDisplayName(System.Type)
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Ignore``1
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Model
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.ModelBuilder
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.UsePropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode)
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Validate
  langs:
  - csharp
  - vb
  name: ModelBuilderTest.TestModelBuilder
  nameWithType: ModelBuilderTest.TestModelBuilder
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder
  type: Class
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: TestModelBuilder
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
    startLine: 112
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: public abstract class TestModelBuilder
    content.vb: Public MustInherit Class TestModelBuilder
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.#ctor(Microsoft.EntityFrameworkCore.ModelBuilder)
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.#ctor(Microsoft.EntityFrameworkCore.ModelBuilder)
  id: '#ctor(Microsoft.EntityFrameworkCore.ModelBuilder)'
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder
  langs:
  - csharp
  - vb
  name: TestModelBuilder(ModelBuilder)
  nameWithType: ModelBuilderTest.TestModelBuilder.TestModelBuilder(ModelBuilder)
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.TestModelBuilder(Microsoft.EntityFrameworkCore.ModelBuilder)
  type: Constructor
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: .ctor
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
    startLine: 114
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: protected TestModelBuilder(ModelBuilder modelBuilder)
    content.vb: Protected Sub New(modelBuilder As ModelBuilder)
    parameters:
    - id: modelBuilder
      type: Microsoft.EntityFrameworkCore.ModelBuilder
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Model
  commentId: P:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Model
  id: Model
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder
  langs:
  - csharp
  - vb
  name: Model
  nameWithType: ModelBuilderTest.TestModelBuilder.Model
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Model
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Model
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
    startLine: 119
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: public virtual IMutableModel Model { get; }
    content.vb: Public Overridable ReadOnly Property Model As IMutableModel
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.IMutableModel
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.ModelBuilder
  commentId: P:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.ModelBuilder
  id: ModelBuilder
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder
  langs:
  - csharp
  - vb
  name: ModelBuilder
  nameWithType: ModelBuilderTest.TestModelBuilder.ModelBuilder
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.ModelBuilder
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ModelBuilder
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
    startLine: 120
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: protected ModelBuilder ModelBuilder { get; }
    content.vb: Protected ReadOnly Property ModelBuilder As ModelBuilder
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.ModelBuilder
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Entity``1
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Entity``1
  id: Entity``1
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder
  langs:
  - csharp
  - vb
  name: Entity<TEntity>()
  nameWithType: ModelBuilderTest.TestModelBuilder.Entity<TEntity>()
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Entity<TEntity>()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Entity
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
    startLine: 122
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: 'public abstract ModelBuilderTest.TestEntityTypeBuilder<TEntity> Entity<TEntity>()where TEntity : class'
    content.vb: Public MustOverride Function Entity(Of TEntity As Class) As ModelBuilderTest.TestEntityTypeBuilder(Of TEntity)
    typeParameters:
    - id: TEntity
    return:
      type: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder{{TEntity}}
  nameWithType.vb: ModelBuilderTest.TestModelBuilder.Entity(Of TEntity)()
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Entity(Of TEntity)()
  name.vb: Entity(Of TEntity)()
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Entity``1(System.Action{Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder{``0}})
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Entity``1(System.Action{Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder{``0}})
  id: Entity``1(System.Action{Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder{``0}})
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder
  langs:
  - csharp
  - vb
  name: Entity<TEntity>(Action<ModelBuilderTest.TestEntityTypeBuilder<TEntity>>)
  nameWithType: ModelBuilderTest.TestModelBuilder.Entity<TEntity>(Action<ModelBuilderTest.TestEntityTypeBuilder<TEntity>>)
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Entity<TEntity>(System.Action<Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder<TEntity>>)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Entity
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
    startLine: 125
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: 'public abstract ModelBuilderTest.TestModelBuilder Entity<TEntity>(Action<ModelBuilderTest.TestEntityTypeBuilder<TEntity>> buildAction)where TEntity : class'
    content.vb: Public MustOverride Function Entity(Of TEntity As Class)(buildAction As Action(Of ModelBuilderTest.TestEntityTypeBuilder(Of TEntity))) As ModelBuilderTest.TestModelBuilder
    parameters:
    - id: buildAction
      type: System.Action{Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder{{TEntity}}}
    typeParameters:
    - id: TEntity
    return:
      type: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder
  nameWithType.vb: ModelBuilderTest.TestModelBuilder.Entity(Of TEntity)(Action(Of ModelBuilderTest.TestEntityTypeBuilder(Of TEntity)))
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Entity(Of TEntity)(System.Action(Of Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder(Of TEntity)))
  name.vb: Entity(Of TEntity)(Action(Of ModelBuilderTest.TestEntityTypeBuilder(Of TEntity)))
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Ignore``1
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Ignore``1
  id: Ignore``1
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder
  langs:
  - csharp
  - vb
  name: Ignore<TEntity>()
  nameWithType: ModelBuilderTest.TestModelBuilder.Ignore<TEntity>()
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Ignore<TEntity>()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Ignore
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
    startLine: 128
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: 'public abstract ModelBuilderTest.TestModelBuilder Ignore<TEntity>()where TEntity : class'
    content.vb: Public MustOverride Function Ignore(Of TEntity As Class) As ModelBuilderTest.TestModelBuilder
    typeParameters:
    - id: TEntity
    return:
      type: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder
  nameWithType.vb: ModelBuilderTest.TestModelBuilder.Ignore(Of TEntity)()
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Ignore(Of TEntity)()
  name.vb: Ignore(Of TEntity)()
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Validate
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Validate
  id: Validate
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: ModelBuilderTest.TestModelBuilder.Validate()
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Validate()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Validate
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
    startLine: 131
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: public virtual ModelBuilderTest.TestModelBuilder Validate()
    content.vb: Public Overridable Function Validate As ModelBuilderTest.TestModelBuilder
    return:
      type: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.GetDisplayName(System.Type)
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.GetDisplayName(System.Type)
  id: GetDisplayName(System.Type)
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder
  langs:
  - csharp
  - vb
  name: GetDisplayName(Type)
  nameWithType: ModelBuilderTest.TestModelBuilder.GetDisplayName(Type)
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.GetDisplayName(System.Type)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GetDisplayName
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
    startLine: 138
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: public virtual string GetDisplayName(Type entityType)
    content.vb: Public Overridable Function GetDisplayName(entityType As Type) As String
    parameters:
    - id: entityType
      type: System.Type
    return:
      type: System.String
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.UsePropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode)
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.UsePropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode)
  id: UsePropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode)
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder
  langs:
  - csharp
  - vb
  name: UsePropertyAccessMode(PropertyAccessMode)
  nameWithType: ModelBuilderTest.TestModelBuilder.UsePropertyAccessMode(PropertyAccessMode)
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.UsePropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: UsePropertyAccessMode
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
    startLine: 140
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: public virtual ModelBuilder UsePropertyAccessMode(PropertyAccessMode propertyAccessMode)
    content.vb: Public Overridable Function UsePropertyAccessMode(propertyAccessMode As PropertyAccessMode) As ModelBuilder
    parameters:
    - id: propertyAccessMode
      type: Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode
    return:
      type: Microsoft.EntityFrameworkCore.ModelBuilder
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.EntityFrameworkCore.Tests
  commentId: N:Microsoft.EntityFrameworkCore.Tests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Tests
  nameWithType: Microsoft.EntityFrameworkCore.Tests
  fullName: Microsoft.EntityFrameworkCore.Tests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<ModelBuilderTest.TestModelBuilder, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<ModelBuilderTest.TestModelBuilder, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of ModelBuilderTest.TestModelBuilder, TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder, TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of ModelBuilderTest.TestModelBuilder, TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<ModelBuilderTest.TestModelBuilder, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<ModelBuilderTest.TestModelBuilder, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of ModelBuilderTest.TestModelBuilder, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of ModelBuilderTest.TestModelBuilder, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: Microsoft.EntityFrameworkCore.ModelBuilder
  commentId: T:Microsoft.EntityFrameworkCore.ModelBuilder
  parent: Microsoft.EntityFrameworkCore
  isExternal: false
  name: ModelBuilder
  nameWithType: ModelBuilder
  fullName: Microsoft.EntityFrameworkCore.ModelBuilder
- uid: Microsoft.EntityFrameworkCore
  commentId: N:Microsoft.EntityFrameworkCore
  isExternal: false
  name: Microsoft.EntityFrameworkCore
  nameWithType: Microsoft.EntityFrameworkCore
  fullName: Microsoft.EntityFrameworkCore
- uid: Microsoft.EntityFrameworkCore.Metadata.IMutableModel
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IMutableModel
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IMutableModel
  nameWithType: IMutableModel
  fullName: Microsoft.EntityFrameworkCore.Metadata.IMutableModel
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder{{TEntity}}
  commentId: T:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder{``0}
  parent: Microsoft.EntityFrameworkCore.Tests
  definition: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder`1
  name: ModelBuilderTest.TestEntityTypeBuilder<TEntity>
  nameWithType: ModelBuilderTest.TestEntityTypeBuilder<TEntity>
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder<TEntity>
  nameWithType.vb: ModelBuilderTest.TestEntityTypeBuilder(Of TEntity)
  fullname.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder(Of TEntity)
  name.vb: ModelBuilderTest.TestEntityTypeBuilder(Of TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder`1
    name: ModelBuilderTest.TestEntityTypeBuilder
    nameWithType: ModelBuilderTest.TestEntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder`1
    name: ModelBuilderTest.TestEntityTypeBuilder
    nameWithType: ModelBuilderTest.TestEntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder`1
  commentId: T:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder`1
  parent: Microsoft.EntityFrameworkCore.Tests
  isExternal: false
  name: ModelBuilderTest.TestEntityTypeBuilder<TEntity>
  nameWithType: ModelBuilderTest.TestEntityTypeBuilder<TEntity>
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder<TEntity>
  nameWithType.vb: ModelBuilderTest.TestEntityTypeBuilder(Of TEntity)
  fullname.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder(Of TEntity)
  name.vb: ModelBuilderTest.TestEntityTypeBuilder(Of TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder`1
    name: ModelBuilderTest.TestEntityTypeBuilder
    nameWithType: ModelBuilderTest.TestEntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder`1
    name: ModelBuilderTest.TestEntityTypeBuilder
    nameWithType: ModelBuilderTest.TestEntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder{{TEntity}}}
  commentId: T:System.Action{Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder{``0}}
  parent: System
  definition: System.Action`1
  name: Action<ModelBuilderTest.TestEntityTypeBuilder<TEntity>>
  nameWithType: Action<ModelBuilderTest.TestEntityTypeBuilder<TEntity>>
  fullName: System.Action<Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder<TEntity>>
  nameWithType.vb: Action(Of ModelBuilderTest.TestEntityTypeBuilder(Of TEntity))
  fullname.vb: System.Action(Of Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder(Of TEntity))
  name.vb: Action(Of ModelBuilderTest.TestEntityTypeBuilder(Of TEntity))
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder`1
    name: ModelBuilderTest.TestEntityTypeBuilder
    nameWithType: ModelBuilderTest.TestEntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder`1
    name: ModelBuilderTest.TestEntityTypeBuilder
    nameWithType: ModelBuilderTest.TestEntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestEntityTypeBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder
  parent: Microsoft.EntityFrameworkCore.Tests
  isExternal: false
  name: ModelBuilderTest.TestModelBuilder
  nameWithType: ModelBuilderTest.TestModelBuilder
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestModelBuilder
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullname.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: PropertyAccessMode
  nameWithType: PropertyAccessMode
  fullName: Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode
