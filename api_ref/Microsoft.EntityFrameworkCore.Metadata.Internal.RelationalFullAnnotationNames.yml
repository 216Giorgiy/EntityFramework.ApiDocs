### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames
  id: RelationalFullAnnotationNames
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  children:
  - Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.#ctor(System.String)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.ColumnName
  - Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.ColumnType
  - Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.ComputedColumnSql
  - Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.DatabaseName
  - Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.DefaultSchema
  - Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.DefaultValue
  - Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.DefaultValueSql
  - Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.DiscriminatorProperty
  - Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.DiscriminatorValue
  - Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.Instance
  - Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.Name
  - Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.Schema
  - Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.SequencePrefix
  - Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.TableName
  langs:
  - csharp
  - vb
  name: RelationalFullAnnotationNames
  nameWithType: RelationalFullAnnotationNames
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Internal/RelationalFullAnnotationNames.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: RelationalFullAnnotationNames
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Internal/RelationalFullAnnotationNames.cs
    startLine: 9
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public class RelationalFullAnnotationNames
    content.vb: Public Class RelationalFullAnnotationNames
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.#ctor(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames
  langs:
  - csharp
  - vb
  name: RelationalFullAnnotationNames(String)
  nameWithType: RelationalFullAnnotationNames.RelationalFullAnnotationNames(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.RelationalFullAnnotationNames(System.String)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Internal/RelationalFullAnnotationNames.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Internal/RelationalFullAnnotationNames.cs
    startLine: 15
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected RelationalFullAnnotationNames(string prefix)
    content.vb: Protected Sub New(prefix As String)
    parameters:
    - id: prefix
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.Instance
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.Instance
  id: Instance
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: RelationalFullAnnotationNames.Instance
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.Instance
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Internal/RelationalFullAnnotationNames.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Instance
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Internal/RelationalFullAnnotationNames.cs
    startLine: 36
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public static RelationalFullAnnotationNames Instance { get; }
    content.vb: Public Shared ReadOnly Property Instance As RelationalFullAnnotationNames
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.Instance*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.ColumnName
  commentId: F:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.ColumnName
  id: ColumnName
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames
  langs:
  - csharp
  - vb
  name: ColumnName
  nameWithType: RelationalFullAnnotationNames.ColumnName
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.ColumnName
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Internal/RelationalFullAnnotationNames.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ColumnName
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Internal/RelationalFullAnnotationNames.cs
    startLine: 42
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public readonly string ColumnName
    content.vb: Public ReadOnly ColumnName As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.ColumnType
  commentId: F:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.ColumnType
  id: ColumnType
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames
  langs:
  - csharp
  - vb
  name: ColumnType
  nameWithType: RelationalFullAnnotationNames.ColumnType
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.ColumnType
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Internal/RelationalFullAnnotationNames.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ColumnType
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Internal/RelationalFullAnnotationNames.cs
    startLine: 48
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public readonly string ColumnType
    content.vb: Public ReadOnly ColumnType As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.DefaultValueSql
  commentId: F:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.DefaultValueSql
  id: DefaultValueSql
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames
  langs:
  - csharp
  - vb
  name: DefaultValueSql
  nameWithType: RelationalFullAnnotationNames.DefaultValueSql
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.DefaultValueSql
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Internal/RelationalFullAnnotationNames.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: DefaultValueSql
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Internal/RelationalFullAnnotationNames.cs
    startLine: 54
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public readonly string DefaultValueSql
    content.vb: Public ReadOnly DefaultValueSql As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.ComputedColumnSql
  commentId: F:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.ComputedColumnSql
  id: ComputedColumnSql
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames
  langs:
  - csharp
  - vb
  name: ComputedColumnSql
  nameWithType: RelationalFullAnnotationNames.ComputedColumnSql
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.ComputedColumnSql
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Internal/RelationalFullAnnotationNames.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ComputedColumnSql
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Internal/RelationalFullAnnotationNames.cs
    startLine: 60
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public readonly string ComputedColumnSql
    content.vb: Public ReadOnly ComputedColumnSql As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.DefaultValue
  commentId: F:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.DefaultValue
  id: DefaultValue
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames
  langs:
  - csharp
  - vb
  name: DefaultValue
  nameWithType: RelationalFullAnnotationNames.DefaultValue
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.DefaultValue
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Internal/RelationalFullAnnotationNames.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: DefaultValue
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Internal/RelationalFullAnnotationNames.cs
    startLine: 66
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public readonly string DefaultValue
    content.vb: Public ReadOnly DefaultValue As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.DatabaseName
  commentId: F:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.DatabaseName
  id: DatabaseName
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames
  langs:
  - csharp
  - vb
  name: DatabaseName
  nameWithType: RelationalFullAnnotationNames.DatabaseName
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.DatabaseName
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Internal/RelationalFullAnnotationNames.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: DatabaseName
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Internal/RelationalFullAnnotationNames.cs
    startLine: 72
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public readonly string DatabaseName
    content.vb: Public ReadOnly DatabaseName As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.TableName
  commentId: F:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.TableName
  id: TableName
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames
  langs:
  - csharp
  - vb
  name: TableName
  nameWithType: RelationalFullAnnotationNames.TableName
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.TableName
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Internal/RelationalFullAnnotationNames.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: TableName
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Internal/RelationalFullAnnotationNames.cs
    startLine: 78
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public readonly string TableName
    content.vb: Public ReadOnly TableName As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.Schema
  commentId: F:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.Schema
  id: Schema
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames
  langs:
  - csharp
  - vb
  name: Schema
  nameWithType: RelationalFullAnnotationNames.Schema
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.Schema
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Internal/RelationalFullAnnotationNames.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Schema
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Internal/RelationalFullAnnotationNames.cs
    startLine: 84
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public readonly string Schema
    content.vb: Public ReadOnly Schema As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.DefaultSchema
  commentId: F:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.DefaultSchema
  id: DefaultSchema
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames
  langs:
  - csharp
  - vb
  name: DefaultSchema
  nameWithType: RelationalFullAnnotationNames.DefaultSchema
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.DefaultSchema
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Internal/RelationalFullAnnotationNames.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: DefaultSchema
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Internal/RelationalFullAnnotationNames.cs
    startLine: 90
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public readonly string DefaultSchema
    content.vb: Public ReadOnly DefaultSchema As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.Name
  commentId: F:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.Name
  id: Name
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: RelationalFullAnnotationNames.Name
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.Name
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Internal/RelationalFullAnnotationNames.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Name
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Internal/RelationalFullAnnotationNames.cs
    startLine: 96
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public readonly string Name
    content.vb: Public ReadOnly Name As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.SequencePrefix
  commentId: F:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.SequencePrefix
  id: SequencePrefix
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames
  langs:
  - csharp
  - vb
  name: SequencePrefix
  nameWithType: RelationalFullAnnotationNames.SequencePrefix
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.SequencePrefix
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Internal/RelationalFullAnnotationNames.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: SequencePrefix
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Internal/RelationalFullAnnotationNames.cs
    startLine: 102
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public readonly string SequencePrefix
    content.vb: Public ReadOnly SequencePrefix As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.DiscriminatorProperty
  commentId: F:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.DiscriminatorProperty
  id: DiscriminatorProperty
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames
  langs:
  - csharp
  - vb
  name: DiscriminatorProperty
  nameWithType: RelationalFullAnnotationNames.DiscriminatorProperty
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.DiscriminatorProperty
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Internal/RelationalFullAnnotationNames.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: DiscriminatorProperty
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Internal/RelationalFullAnnotationNames.cs
    startLine: 108
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public readonly string DiscriminatorProperty
    content.vb: Public ReadOnly DiscriminatorProperty As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.DiscriminatorValue
  commentId: F:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.DiscriminatorValue
  id: DiscriminatorValue
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames
  langs:
  - csharp
  - vb
  name: DiscriminatorValue
  nameWithType: RelationalFullAnnotationNames.DiscriminatorValue
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.DiscriminatorValue
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Internal/RelationalFullAnnotationNames.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: DiscriminatorValue
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Internal/RelationalFullAnnotationNames.cs
    startLine: 114
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public readonly string DiscriminatorValue
    content.vb: Public ReadOnly DiscriminatorValue As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.#ctor*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.#ctor
  isExternal: false
  name: RelationalFullAnnotationNames
  nameWithType: RelationalFullAnnotationNames.RelationalFullAnnotationNames
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.RelationalFullAnnotationNames
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.Instance*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.Instance
  isExternal: false
  name: Instance
  nameWithType: RelationalFullAnnotationNames.Instance
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.Instance
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: RelationalFullAnnotationNames
  nameWithType: RelationalFullAnnotationNames
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames
