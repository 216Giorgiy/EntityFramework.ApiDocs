### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes
  commentId: T:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes
  id: MappedDataTypes
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  children:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Bigint
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Binary_varyingMax
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Bit
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Char_varyingMax
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Character_varyingMax
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Date
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Datetime
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Datetime2
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Datetimeoffset
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Dec
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Decimal
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Double_precision
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Float
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Image
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Int
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Money
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.National_char_varyingMax
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.National_character_varyingMax
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Ntext
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Numeric
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.NvarcharMax
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Real
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Smalldatetime
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Smallint
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Smallmoney
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Text
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Time
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Tinyint
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.VarbinaryMax
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.VarcharMax
  langs:
  - csharp
  - vb
  name: MappedDataTypes
  nameWithType: MappedDataTypes
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes
  type: Class
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: MappedDataTypes
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 173
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public class MappedDataTypes
    content.vb: Public Class MappedDataTypes
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Int
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Int
  id: Int
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes
  langs:
  - csharp
  - vb
  name: Int
  nameWithType: MappedDataTypes.Int
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Int
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Int
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 175
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public int Int { get; set; }
    content.vb: Public Property Int As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Bigint
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Bigint
  id: Bigint
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes
  langs:
  - csharp
  - vb
  name: Bigint
  nameWithType: MappedDataTypes.Bigint
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Bigint
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Bigint
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 176
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public long Bigint { get; set; }
    content.vb: Public Property Bigint As Long
    parameters: []
    return:
      type: System.Int64
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Smallint
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Smallint
  id: Smallint
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes
  langs:
  - csharp
  - vb
  name: Smallint
  nameWithType: MappedDataTypes.Smallint
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Smallint
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Smallint
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 177
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public short Smallint { get; set; }
    content.vb: Public Property Smallint As Short
    parameters: []
    return:
      type: System.Int16
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Tinyint
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Tinyint
  id: Tinyint
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes
  langs:
  - csharp
  - vb
  name: Tinyint
  nameWithType: MappedDataTypes.Tinyint
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Tinyint
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Tinyint
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 178
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public byte Tinyint { get; set; }
    content.vb: Public Property Tinyint As Byte
    parameters: []
    return:
      type: System.Byte
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Bit
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Bit
  id: Bit
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes
  langs:
  - csharp
  - vb
  name: Bit
  nameWithType: MappedDataTypes.Bit
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Bit
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Bit
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 179
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public bool Bit { get; set; }
    content.vb: Public Property Bit As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Money
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Money
  id: Money
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes
  langs:
  - csharp
  - vb
  name: Money
  nameWithType: MappedDataTypes.Money
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Money
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Money
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 180
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public decimal Money { get; set; }
    content.vb: Public Property Money As Decimal
    parameters: []
    return:
      type: System.Decimal
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Smallmoney
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Smallmoney
  id: Smallmoney
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes
  langs:
  - csharp
  - vb
  name: Smallmoney
  nameWithType: MappedDataTypes.Smallmoney
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Smallmoney
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Smallmoney
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 181
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public decimal Smallmoney { get; set; }
    content.vb: Public Property Smallmoney As Decimal
    parameters: []
    return:
      type: System.Decimal
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Float
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Float
  id: Float
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes
  langs:
  - csharp
  - vb
  name: Float
  nameWithType: MappedDataTypes.Float
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Float
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Float
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 182
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public double Float { get; set; }
    content.vb: Public Property Float As Double
    parameters: []
    return:
      type: System.Double
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Real
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Real
  id: Real
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes
  langs:
  - csharp
  - vb
  name: Real
  nameWithType: MappedDataTypes.Real
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Real
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Real
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 183
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public float Real { get; set; }
    content.vb: Public Property Real As Single
    parameters: []
    return:
      type: System.Single
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Double_precision
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Double_precision
  id: Double_precision
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes
  langs:
  - csharp
  - vb
  name: Double_precision
  nameWithType: MappedDataTypes.Double_precision
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Double_precision
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Double_precision
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 184
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public double Double_precision { get; set; }
    content.vb: Public Property Double_precision As Double
    parameters: []
    return:
      type: System.Double
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Date
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Date
  id: Date
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes
  langs:
  - csharp
  - vb
  name: Date
  nameWithType: MappedDataTypes.Date
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Date
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Date
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 185
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public DateTime Date { get; set; }
    content.vb: Public Property Date As Date
    parameters: []
    return:
      type: System.DateTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Datetimeoffset
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Datetimeoffset
  id: Datetimeoffset
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes
  langs:
  - csharp
  - vb
  name: Datetimeoffset
  nameWithType: MappedDataTypes.Datetimeoffset
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Datetimeoffset
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Datetimeoffset
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 186
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public DateTimeOffset Datetimeoffset { get; set; }
    content.vb: Public Property Datetimeoffset As DateTimeOffset
    parameters: []
    return:
      type: System.DateTimeOffset
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Datetime2
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Datetime2
  id: Datetime2
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes
  langs:
  - csharp
  - vb
  name: Datetime2
  nameWithType: MappedDataTypes.Datetime2
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Datetime2
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Datetime2
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 187
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public DateTime Datetime2 { get; set; }
    content.vb: Public Property Datetime2 As Date
    parameters: []
    return:
      type: System.DateTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Smalldatetime
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Smalldatetime
  id: Smalldatetime
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes
  langs:
  - csharp
  - vb
  name: Smalldatetime
  nameWithType: MappedDataTypes.Smalldatetime
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Smalldatetime
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Smalldatetime
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 188
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public DateTime Smalldatetime { get; set; }
    content.vb: Public Property Smalldatetime As Date
    parameters: []
    return:
      type: System.DateTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Datetime
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Datetime
  id: Datetime
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes
  langs:
  - csharp
  - vb
  name: Datetime
  nameWithType: MappedDataTypes.Datetime
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Datetime
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Datetime
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 189
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public DateTime Datetime { get; set; }
    content.vb: Public Property Datetime As Date
    parameters: []
    return:
      type: System.DateTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Time
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Time
  id: Time
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes
  langs:
  - csharp
  - vb
  name: Time
  nameWithType: MappedDataTypes.Time
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Time
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Time
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 190
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public TimeSpan Time { get; set; }
    content.vb: Public Property Time As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.VarcharMax
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.VarcharMax
  id: VarcharMax
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes
  langs:
  - csharp
  - vb
  name: VarcharMax
  nameWithType: MappedDataTypes.VarcharMax
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.VarcharMax
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: VarcharMax
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 191
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public string VarcharMax { get; set; }
    content.vb: Public Property VarcharMax As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Char_varyingMax
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Char_varyingMax
  id: Char_varyingMax
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes
  langs:
  - csharp
  - vb
  name: Char_varyingMax
  nameWithType: MappedDataTypes.Char_varyingMax
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Char_varyingMax
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Char_varyingMax
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 192
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public string Char_varyingMax { get; set; }
    content.vb: Public Property Char_varyingMax As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Character_varyingMax
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Character_varyingMax
  id: Character_varyingMax
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes
  langs:
  - csharp
  - vb
  name: Character_varyingMax
  nameWithType: MappedDataTypes.Character_varyingMax
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Character_varyingMax
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Character_varyingMax
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 193
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public string Character_varyingMax { get; set; }
    content.vb: Public Property Character_varyingMax As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.NvarcharMax
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.NvarcharMax
  id: NvarcharMax
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes
  langs:
  - csharp
  - vb
  name: NvarcharMax
  nameWithType: MappedDataTypes.NvarcharMax
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.NvarcharMax
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: NvarcharMax
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 194
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public string NvarcharMax { get; set; }
    content.vb: Public Property NvarcharMax As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.National_char_varyingMax
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.National_char_varyingMax
  id: National_char_varyingMax
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes
  langs:
  - csharp
  - vb
  name: National_char_varyingMax
  nameWithType: MappedDataTypes.National_char_varyingMax
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.National_char_varyingMax
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: National_char_varyingMax
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 195
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public string National_char_varyingMax { get; set; }
    content.vb: Public Property National_char_varyingMax As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.National_character_varyingMax
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.National_character_varyingMax
  id: National_character_varyingMax
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes
  langs:
  - csharp
  - vb
  name: National_character_varyingMax
  nameWithType: MappedDataTypes.National_character_varyingMax
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.National_character_varyingMax
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: National_character_varyingMax
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 196
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public string National_character_varyingMax { get; set; }
    content.vb: Public Property National_character_varyingMax As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Text
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Text
  id: Text
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes
  langs:
  - csharp
  - vb
  name: Text
  nameWithType: MappedDataTypes.Text
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Text
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Text
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 197
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public string Text { get; set; }
    content.vb: Public Property Text As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Ntext
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Ntext
  id: Ntext
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes
  langs:
  - csharp
  - vb
  name: Ntext
  nameWithType: MappedDataTypes.Ntext
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Ntext
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Ntext
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 198
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public string Ntext { get; set; }
    content.vb: Public Property Ntext As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.VarbinaryMax
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.VarbinaryMax
  id: VarbinaryMax
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes
  langs:
  - csharp
  - vb
  name: VarbinaryMax
  nameWithType: MappedDataTypes.VarbinaryMax
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.VarbinaryMax
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: VarbinaryMax
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 199
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public byte[] VarbinaryMax { get; set; }
    content.vb: Public Property VarbinaryMax As Byte()
    parameters: []
    return:
      type: System.Byte[]
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Binary_varyingMax
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Binary_varyingMax
  id: Binary_varyingMax
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes
  langs:
  - csharp
  - vb
  name: Binary_varyingMax
  nameWithType: MappedDataTypes.Binary_varyingMax
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Binary_varyingMax
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Binary_varyingMax
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 200
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public byte[] Binary_varyingMax { get; set; }
    content.vb: Public Property Binary_varyingMax As Byte()
    parameters: []
    return:
      type: System.Byte[]
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Image
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Image
  id: Image
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes
  langs:
  - csharp
  - vb
  name: Image
  nameWithType: MappedDataTypes.Image
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Image
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Image
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 201
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public byte[] Image { get; set; }
    content.vb: Public Property Image As Byte()
    parameters: []
    return:
      type: System.Byte[]
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Decimal
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Decimal
  id: Decimal
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes
  langs:
  - csharp
  - vb
  name: Decimal
  nameWithType: MappedDataTypes.Decimal
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Decimal
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Decimal
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 202
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public decimal Decimal { get; set; }
    content.vb: Public Property Decimal As Decimal
    parameters: []
    return:
      type: System.Decimal
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Dec
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Dec
  id: Dec
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes
  langs:
  - csharp
  - vb
  name: Dec
  nameWithType: MappedDataTypes.Dec
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Dec
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Dec
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 203
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public decimal Dec { get; set; }
    content.vb: Public Property Dec As Decimal
    parameters: []
    return:
      type: System.Decimal
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Numeric
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Numeric
  id: Numeric
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes
  langs:
  - csharp
  - vb
  name: Numeric
  nameWithType: MappedDataTypes.Numeric
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Numeric
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Numeric
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/BuiltInDataTypesSqlServerFixture.cs
    startLine: 204
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public decimal Numeric { get; set; }
    content.vb: Public Property Numeric As Decimal
    parameters: []
    return:
      type: System.Decimal
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  commentId: N:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  nameWithType: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<MappedDataTypes, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<MappedDataTypes, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of MappedDataTypes, TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes, TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of MappedDataTypes, TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<MappedDataTypes, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<MappedDataTypes, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of MappedDataTypes, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of MappedDataTypes, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.MappedDataTypes, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Int16
  commentId: T:System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Decimal
  commentId: T:System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.DateTimeOffset
  commentId: T:System.DateTimeOffset
  parent: System
  isExternal: true
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
