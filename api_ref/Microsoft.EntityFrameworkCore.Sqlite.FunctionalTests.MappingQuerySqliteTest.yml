### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappingQuerySqliteTest
  commentId: T:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappingQuerySqliteTest
  id: MappingQuerySqliteTest
  parent: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  children:
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappingQuerySqliteTest.#ctor(Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappingQuerySqliteFixture)
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappingQuerySqliteTest.All_customers
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappingQuerySqliteTest.All_employees
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappingQuerySqliteTest.All_orders
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappingQuerySqliteTest.CreateContext
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappingQuerySqliteTest.Project_nullable_enum
  langs:
  - csharp
  - vb
  name: MappingQuerySqliteTest
  nameWithType: MappingQuerySqliteTest
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappingQuerySqliteTest
  type: Class
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/MappingQuerySqliteTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: MappingQuerySqliteTest
    path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/MappingQuerySqliteTest.cs
    startLine: 9
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  syntax:
    content: 'public class MappingQuerySqliteTest : MappingQueryTestBase, IClassFixture<MappingQuerySqliteFixture>'
    content.vb: >-
      Public Class MappingQuerySqliteTest
          Inherits MappingQueryTestBase
          Implements IClassFixture(Of MappingQuerySqliteFixture)
  inheritance:
  - System.Object
  - Microsoft.EntityFrameworkCore.Specification.Tests.MappingQueryTestBase
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappingQuerySqliteTest.All_customers
  commentId: M:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappingQuerySqliteTest.All_customers
  id: All_customers
  parent: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappingQuerySqliteTest
  langs:
  - csharp
  - vb
  name: All_customers()
  nameWithType: MappingQuerySqliteTest.All_customers()
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappingQuerySqliteTest.All_customers()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/MappingQuerySqliteTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: All_customers
    path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/MappingQuerySqliteTest.cs
    startLine: 11
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  syntax:
    content: public override void All_customers()
    content.vb: Public Overrides Sub All_customers
  overridden: Microsoft.EntityFrameworkCore.Specification.Tests.MappingQueryTestBase.All_customers
  overload: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappingQuerySqliteTest.All_customers*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappingQuerySqliteTest.All_employees
  commentId: M:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappingQuerySqliteTest.All_employees
  id: All_employees
  parent: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappingQuerySqliteTest
  langs:
  - csharp
  - vb
  name: All_employees()
  nameWithType: MappingQuerySqliteTest.All_employees()
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappingQuerySqliteTest.All_employees()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/MappingQuerySqliteTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: All_employees
    path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/MappingQuerySqliteTest.cs
    startLine: 21
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  syntax:
    content: public override void All_employees()
    content.vb: Public Overrides Sub All_employees
  overridden: Microsoft.EntityFrameworkCore.Specification.Tests.MappingQueryTestBase.All_employees
  overload: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappingQuerySqliteTest.All_employees*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappingQuerySqliteTest.All_orders
  commentId: M:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappingQuerySqliteTest.All_orders
  id: All_orders
  parent: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappingQuerySqliteTest
  langs:
  - csharp
  - vb
  name: All_orders()
  nameWithType: MappingQuerySqliteTest.All_orders()
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappingQuerySqliteTest.All_orders()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/MappingQuerySqliteTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: All_orders
    path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/MappingQuerySqliteTest.cs
    startLine: 31
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  syntax:
    content: public override void All_orders()
    content.vb: Public Overrides Sub All_orders
  overridden: Microsoft.EntityFrameworkCore.Specification.Tests.MappingQueryTestBase.All_orders
  overload: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappingQuerySqliteTest.All_orders*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappingQuerySqliteTest.Project_nullable_enum
  commentId: M:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappingQuerySqliteTest.Project_nullable_enum
  id: Project_nullable_enum
  parent: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappingQuerySqliteTest
  langs:
  - csharp
  - vb
  name: Project_nullable_enum()
  nameWithType: MappingQuerySqliteTest.Project_nullable_enum()
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappingQuerySqliteTest.Project_nullable_enum()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/MappingQuerySqliteTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Project_nullable_enum
    path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/MappingQuerySqliteTest.cs
    startLine: 41
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  syntax:
    content: public override void Project_nullable_enum()
    content.vb: Public Overrides Sub Project_nullable_enum
  overridden: Microsoft.EntityFrameworkCore.Specification.Tests.MappingQueryTestBase.Project_nullable_enum
  overload: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappingQuerySqliteTest.Project_nullable_enum*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappingQuerySqliteTest.#ctor(Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappingQuerySqliteFixture)
  commentId: M:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappingQuerySqliteTest.#ctor(Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappingQuerySqliteFixture)
  id: '#ctor(Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappingQuerySqliteFixture)'
  parent: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappingQuerySqliteTest
  langs:
  - csharp
  - vb
  name: MappingQuerySqliteTest(MappingQuerySqliteFixture)
  nameWithType: MappingQuerySqliteTest.MappingQuerySqliteTest(MappingQuerySqliteFixture)
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappingQuerySqliteTest.MappingQuerySqliteTest(Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappingQuerySqliteFixture)
  type: Constructor
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/MappingQuerySqliteTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/MappingQuerySqliteTest.cs
    startLine: 53
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  syntax:
    content: public MappingQuerySqliteTest(MappingQuerySqliteFixture fixture)
    content.vb: Public Sub New(fixture As MappingQuerySqliteFixture)
    parameters:
    - id: fixture
      type: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappingQuerySqliteFixture
  overload: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappingQuerySqliteTest.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappingQuerySqliteTest.CreateContext
  commentId: M:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappingQuerySqliteTest.CreateContext
  id: CreateContext
  parent: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappingQuerySqliteTest
  langs:
  - csharp
  - vb
  name: CreateContext()
  nameWithType: MappingQuerySqliteTest.CreateContext()
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappingQuerySqliteTest.CreateContext()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/MappingQuerySqliteTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateContext
    path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/MappingQuerySqliteTest.cs
    startLine: 58
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  syntax:
    content: protected override DbContext CreateContext()
    content.vb: Protected Overrides Function CreateContext As DbContext
    return:
      type: Microsoft.EntityFrameworkCore.DbContext
  overridden: Microsoft.EntityFrameworkCore.Specification.Tests.MappingQueryTestBase.CreateContext
  overload: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappingQuerySqliteTest.CreateContext*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  commentId: N:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  nameWithType: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.MappingQueryTestBase
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.MappingQueryTestBase
  parent: Microsoft.EntityFrameworkCore.Specification.Tests
  isExternal: false
  name: MappingQueryTestBase
  nameWithType: MappingQueryTestBase
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.MappingQueryTestBase
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Specification.Tests
  commentId: N:Microsoft.EntityFrameworkCore.Specification.Tests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Specification.Tests
  nameWithType: Microsoft.EntityFrameworkCore.Specification.Tests
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.MappingQueryTestBase.All_customers
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.MappingQueryTestBase.All_customers
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.MappingQueryTestBase
  isExternal: false
  name: All_customers()
  nameWithType: MappingQueryTestBase.All_customers()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.MappingQueryTestBase.All_customers()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.MappingQueryTestBase.All_customers
    name: All_customers
    nameWithType: MappingQueryTestBase.All_customers
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.MappingQueryTestBase.All_customers
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.MappingQueryTestBase.All_customers
    name: All_customers
    nameWithType: MappingQueryTestBase.All_customers
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.MappingQueryTestBase.All_customers
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappingQuerySqliteTest.All_customers*
  commentId: Overload:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappingQuerySqliteTest.All_customers
  isExternal: false
  name: All_customers
  nameWithType: MappingQuerySqliteTest.All_customers
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappingQuerySqliteTest.All_customers
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.MappingQueryTestBase.All_employees
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.MappingQueryTestBase.All_employees
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.MappingQueryTestBase
  isExternal: false
  name: All_employees()
  nameWithType: MappingQueryTestBase.All_employees()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.MappingQueryTestBase.All_employees()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.MappingQueryTestBase.All_employees
    name: All_employees
    nameWithType: MappingQueryTestBase.All_employees
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.MappingQueryTestBase.All_employees
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.MappingQueryTestBase.All_employees
    name: All_employees
    nameWithType: MappingQueryTestBase.All_employees
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.MappingQueryTestBase.All_employees
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappingQuerySqliteTest.All_employees*
  commentId: Overload:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappingQuerySqliteTest.All_employees
  isExternal: false
  name: All_employees
  nameWithType: MappingQuerySqliteTest.All_employees
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappingQuerySqliteTest.All_employees
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.MappingQueryTestBase.All_orders
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.MappingQueryTestBase.All_orders
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.MappingQueryTestBase
  isExternal: false
  name: All_orders()
  nameWithType: MappingQueryTestBase.All_orders()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.MappingQueryTestBase.All_orders()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.MappingQueryTestBase.All_orders
    name: All_orders
    nameWithType: MappingQueryTestBase.All_orders
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.MappingQueryTestBase.All_orders
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.MappingQueryTestBase.All_orders
    name: All_orders
    nameWithType: MappingQueryTestBase.All_orders
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.MappingQueryTestBase.All_orders
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappingQuerySqliteTest.All_orders*
  commentId: Overload:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappingQuerySqliteTest.All_orders
  isExternal: false
  name: All_orders
  nameWithType: MappingQuerySqliteTest.All_orders
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappingQuerySqliteTest.All_orders
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.MappingQueryTestBase.Project_nullable_enum
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.MappingQueryTestBase.Project_nullable_enum
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.MappingQueryTestBase
  isExternal: false
  name: Project_nullable_enum()
  nameWithType: MappingQueryTestBase.Project_nullable_enum()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.MappingQueryTestBase.Project_nullable_enum()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.MappingQueryTestBase.Project_nullable_enum
    name: Project_nullable_enum
    nameWithType: MappingQueryTestBase.Project_nullable_enum
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.MappingQueryTestBase.Project_nullable_enum
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.MappingQueryTestBase.Project_nullable_enum
    name: Project_nullable_enum
    nameWithType: MappingQueryTestBase.Project_nullable_enum
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.MappingQueryTestBase.Project_nullable_enum
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappingQuerySqliteTest.Project_nullable_enum*
  commentId: Overload:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappingQuerySqliteTest.Project_nullable_enum
  isExternal: false
  name: Project_nullable_enum
  nameWithType: MappingQuerySqliteTest.Project_nullable_enum
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappingQuerySqliteTest.Project_nullable_enum
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappingQuerySqliteTest.#ctor*
  commentId: Overload:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappingQuerySqliteTest.#ctor
  isExternal: false
  name: MappingQuerySqliteTest
  nameWithType: MappingQuerySqliteTest.MappingQuerySqliteTest
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappingQuerySqliteTest.MappingQuerySqliteTest
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappingQuerySqliteFixture
  commentId: T:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappingQuerySqliteFixture
  parent: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  isExternal: false
  name: MappingQuerySqliteFixture
  nameWithType: MappingQuerySqliteFixture
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappingQuerySqliteFixture
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.MappingQueryTestBase.CreateContext
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.MappingQueryTestBase.CreateContext
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.MappingQueryTestBase
  isExternal: false
  name: CreateContext()
  nameWithType: MappingQueryTestBase.CreateContext()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.MappingQueryTestBase.CreateContext()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.MappingQueryTestBase.CreateContext
    name: CreateContext
    nameWithType: MappingQueryTestBase.CreateContext
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.MappingQueryTestBase.CreateContext
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.MappingQueryTestBase.CreateContext
    name: CreateContext
    nameWithType: MappingQueryTestBase.CreateContext
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.MappingQueryTestBase.CreateContext
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappingQuerySqliteTest.CreateContext*
  commentId: Overload:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappingQuerySqliteTest.CreateContext
  isExternal: false
  name: CreateContext
  nameWithType: MappingQuerySqliteTest.CreateContext
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.MappingQuerySqliteTest.CreateContext
- uid: Microsoft.EntityFrameworkCore.DbContext
  commentId: T:Microsoft.EntityFrameworkCore.DbContext
  parent: Microsoft.EntityFrameworkCore
  isExternal: false
  name: DbContext
  nameWithType: DbContext
  fullName: Microsoft.EntityFrameworkCore.DbContext
- uid: Microsoft.EntityFrameworkCore
  commentId: N:Microsoft.EntityFrameworkCore
  isExternal: false
  name: Microsoft.EntityFrameworkCore
  nameWithType: Microsoft.EntityFrameworkCore
  fullName: Microsoft.EntityFrameworkCore
