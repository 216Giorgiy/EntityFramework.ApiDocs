### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderNonGenericTest.NonGenericTestCollectionNavigationBuilder`2
  commentId: T:Microsoft.EntityFrameworkCore.Tests.ModelBuilderNonGenericTest.NonGenericTestCollectionNavigationBuilder`2
  id: ModelBuilderNonGenericTest.NonGenericTestCollectionNavigationBuilder`2
  parent: Microsoft.EntityFrameworkCore.Tests
  children:
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderNonGenericTest.NonGenericTestCollectionNavigationBuilder`2.#ctor(Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder)
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderNonGenericTest.NonGenericTestCollectionNavigationBuilder`2.WithOne(System.Linq.Expressions.Expression{System.Func{`1,`0}})
  langs:
  - csharp
  - vb
  name: ModelBuilderNonGenericTest.NonGenericTestCollectionNavigationBuilder<TEntity, TRelatedEntity>
  nameWithType: ModelBuilderNonGenericTest.NonGenericTestCollectionNavigationBuilder<TEntity, TRelatedEntity>
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderNonGenericTest.NonGenericTestCollectionNavigationBuilder<TEntity, TRelatedEntity>
  type: Class
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderNonGenericTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: NonGenericTestCollectionNavigationBuilder
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderNonGenericTest.cs
    startLine: 220
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: 'protected class NonGenericTestCollectionNavigationBuilder<TEntity, TRelatedEntity> : ModelBuilderTest.TestCollectionNavigationBuilder<TEntity, TRelatedEntity> where TEntity : class where TRelatedEntity : class'
    content.vb: >-
      Protected Class NonGenericTestCollectionNavigationBuilder(Of TEntity As Class, TRelatedEntity As Class)
          Inherits ModelBuilderTest.TestCollectionNavigationBuilder(Of TEntity, TRelatedEntity)
    typeParameters:
    - id: TEntity
    - id: TRelatedEntity
  inheritance:
  - System.Object
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestCollectionNavigationBuilder{{TEntity},{TRelatedEntity}}
  inheritedMembers:
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestCollectionNavigationBuilder{{TEntity},{TRelatedEntity}}.WithOne(System.Linq.Expressions.Expression{System.Func{{TRelatedEntity},{TEntity}}})
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: ModelBuilderNonGenericTest.NonGenericTestCollectionNavigationBuilder(Of TEntity, TRelatedEntity)
  modifiers.csharp:
  - protected
  - class
  modifiers.vb:
  - Protected
  - Class
  fullName.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderNonGenericTest.NonGenericTestCollectionNavigationBuilder(Of TEntity, TRelatedEntity)
  name.vb: ModelBuilderNonGenericTest.NonGenericTestCollectionNavigationBuilder(Of TEntity, TRelatedEntity)
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderNonGenericTest.NonGenericTestCollectionNavigationBuilder`2.#ctor(Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder)
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderNonGenericTest.NonGenericTestCollectionNavigationBuilder`2.#ctor(Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder)
  id: '#ctor(Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder)'
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderNonGenericTest.NonGenericTestCollectionNavigationBuilder`2
  langs:
  - csharp
  - vb
  name: NonGenericTestCollectionNavigationBuilder(CollectionNavigationBuilder)
  nameWithType: ModelBuilderNonGenericTest.NonGenericTestCollectionNavigationBuilder<TEntity, TRelatedEntity>.NonGenericTestCollectionNavigationBuilder(CollectionNavigationBuilder)
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderNonGenericTest.NonGenericTestCollectionNavigationBuilder<TEntity, TRelatedEntity>.NonGenericTestCollectionNavigationBuilder(Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder)
  type: Constructor
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderNonGenericTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderNonGenericTest.cs
    startLine: 224
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: public NonGenericTestCollectionNavigationBuilder(CollectionNavigationBuilder collectionNavigationBuilder)
    content.vb: Public Sub New(collectionNavigationBuilder As CollectionNavigationBuilder)
    parameters:
    - id: collectionNavigationBuilder
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder
  nameWithType.vb: ModelBuilderNonGenericTest.NonGenericTestCollectionNavigationBuilder(Of TEntity, TRelatedEntity).NonGenericTestCollectionNavigationBuilder(CollectionNavigationBuilder)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderNonGenericTest.NonGenericTestCollectionNavigationBuilder(Of TEntity, TRelatedEntity).NonGenericTestCollectionNavigationBuilder(Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder)
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderNonGenericTest.NonGenericTestCollectionNavigationBuilder`2.WithOne(System.Linq.Expressions.Expression{System.Func{`1,`0}})
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderNonGenericTest.NonGenericTestCollectionNavigationBuilder`2.WithOne(System.Linq.Expressions.Expression{System.Func{`1,`0}})
  id: WithOne(System.Linq.Expressions.Expression{System.Func{`1,`0}})
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderNonGenericTest.NonGenericTestCollectionNavigationBuilder`2
  langs:
  - csharp
  - vb
  name: WithOne(Expression<Func<TRelatedEntity, TEntity>>)
  nameWithType: ModelBuilderNonGenericTest.NonGenericTestCollectionNavigationBuilder<TEntity, TRelatedEntity>.WithOne(Expression<Func<TRelatedEntity, TEntity>>)
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderNonGenericTest.NonGenericTestCollectionNavigationBuilder<TEntity, TRelatedEntity>.WithOne(System.Linq.Expressions.Expression<System.Func<TRelatedEntity, TEntity>>)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderNonGenericTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: WithOne
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderNonGenericTest.cs
    startLine: 231
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: public override ModelBuilderTest.TestReferenceCollectionBuilder<TEntity, TRelatedEntity> WithOne(Expression<Func<TRelatedEntity, TEntity>> reference = null)
    content.vb: Public Overrides Function WithOne(reference As Expression(Of Func(Of TRelatedEntity, TEntity)) = Nothing) As ModelBuilderTest.TestReferenceCollectionBuilder(Of TEntity, TRelatedEntity)
    parameters:
    - id: reference
      type: System.Linq.Expressions.Expression{System.Func{{TRelatedEntity},{TEntity}}}
    return:
      type: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder{{TEntity},{TRelatedEntity}}
  overridden: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestCollectionNavigationBuilder{{TEntity},{TRelatedEntity}}.WithOne(System.Linq.Expressions.Expression{System.Func{{TRelatedEntity},{TEntity}}})
  nameWithType.vb: ModelBuilderNonGenericTest.NonGenericTestCollectionNavigationBuilder(Of TEntity, TRelatedEntity).WithOne(Expression(Of Func(Of TRelatedEntity, TEntity)))
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderNonGenericTest.NonGenericTestCollectionNavigationBuilder(Of TEntity, TRelatedEntity).WithOne(System.Linq.Expressions.Expression(Of System.Func(Of TRelatedEntity, TEntity)))
  name.vb: WithOne(Expression(Of Func(Of TRelatedEntity, TEntity)))
references:
- uid: Microsoft.EntityFrameworkCore.Tests
  commentId: N:Microsoft.EntityFrameworkCore.Tests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Tests
  nameWithType: Microsoft.EntityFrameworkCore.Tests
  fullName: Microsoft.EntityFrameworkCore.Tests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestCollectionNavigationBuilder{{TEntity},{TRelatedEntity}}
  commentId: T:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestCollectionNavigationBuilder{`0,``0}
  parent: Microsoft.EntityFrameworkCore.Tests
  definition: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestCollectionNavigationBuilder`2
  name: ModelBuilderTest.TestCollectionNavigationBuilder<TEntity, TRelatedEntity>
  nameWithType: ModelBuilderTest.TestCollectionNavigationBuilder<TEntity, TRelatedEntity>
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestCollectionNavigationBuilder<TEntity, TRelatedEntity>
  nameWithType.vb: ModelBuilderTest.TestCollectionNavigationBuilder(Of TEntity, TRelatedEntity)
  fullname.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestCollectionNavigationBuilder(Of TEntity, TRelatedEntity)
  name.vb: ModelBuilderTest.TestCollectionNavigationBuilder(Of TEntity, TRelatedEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestCollectionNavigationBuilder`2
    name: ModelBuilderTest.TestCollectionNavigationBuilder
    nameWithType: ModelBuilderTest.TestCollectionNavigationBuilder
    fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestCollectionNavigationBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRelatedEntity
    nameWithType: TRelatedEntity
    fullName: TRelatedEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestCollectionNavigationBuilder`2
    name: ModelBuilderTest.TestCollectionNavigationBuilder
    nameWithType: ModelBuilderTest.TestCollectionNavigationBuilder
    fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestCollectionNavigationBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRelatedEntity
    nameWithType: TRelatedEntity
    fullName: TRelatedEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestCollectionNavigationBuilder{{TEntity},{TRelatedEntity}}.WithOne(System.Linq.Expressions.Expression{System.Func{{TRelatedEntity},{TEntity}}})
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestCollectionNavigationBuilder{`0,`1}.WithOne(System.Linq.Expressions.Expression{System.Func{`1,`0}})
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestCollectionNavigationBuilder{{TEntity},{TRelatedEntity}}
  definition: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestCollectionNavigationBuilder`2.WithOne(System.Linq.Expressions.Expression{System.Func{`1,`0}})
  name: WithOne(Expression<Func<TRelatedEntity, TEntity>>)
  nameWithType: ModelBuilderTest.TestCollectionNavigationBuilder<TEntity, TRelatedEntity>.WithOne(Expression<Func<TRelatedEntity, TEntity>>)
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestCollectionNavigationBuilder<TEntity, TRelatedEntity>.WithOne(System.Linq.Expressions.Expression<System.Func<TRelatedEntity, TEntity>>)
  nameWithType.vb: ModelBuilderTest.TestCollectionNavigationBuilder(Of TEntity, TRelatedEntity).WithOne(Expression(Of Func(Of TRelatedEntity, TEntity)))
  fullname.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestCollectionNavigationBuilder(Of TEntity, TRelatedEntity).WithOne(System.Linq.Expressions.Expression(Of System.Func(Of TRelatedEntity, TEntity)))
  name.vb: WithOne(Expression(Of Func(Of TRelatedEntity, TEntity)))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestCollectionNavigationBuilder`2.WithOne(System.Linq.Expressions.Expression{System.Func{`1,`0}})
    name: WithOne
    nameWithType: ModelBuilderTest.TestCollectionNavigationBuilder<TEntity, TRelatedEntity>.WithOne
    fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestCollectionNavigationBuilder<TEntity, TRelatedEntity>.WithOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRelatedEntity
    nameWithType: TRelatedEntity
    fullName: TRelatedEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestCollectionNavigationBuilder`2.WithOne(System.Linq.Expressions.Expression{System.Func{`1,`0}})
    name: WithOne
    nameWithType: ModelBuilderTest.TestCollectionNavigationBuilder(Of TEntity, TRelatedEntity).WithOne
    fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestCollectionNavigationBuilder(Of TEntity, TRelatedEntity).WithOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRelatedEntity
    nameWithType: TRelatedEntity
    fullName: TRelatedEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestCollectionNavigationBuilder`2
  commentId: T:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestCollectionNavigationBuilder`2
  isExternal: false
  name: ModelBuilderTest.TestCollectionNavigationBuilder<TEntity, TRelatedEntity>
  nameWithType: ModelBuilderTest.TestCollectionNavigationBuilder<TEntity, TRelatedEntity>
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestCollectionNavigationBuilder<TEntity, TRelatedEntity>
  nameWithType.vb: ModelBuilderTest.TestCollectionNavigationBuilder(Of TEntity, TRelatedEntity)
  fullname.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestCollectionNavigationBuilder(Of TEntity, TRelatedEntity)
  name.vb: ModelBuilderTest.TestCollectionNavigationBuilder(Of TEntity, TRelatedEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestCollectionNavigationBuilder`2
    name: ModelBuilderTest.TestCollectionNavigationBuilder
    nameWithType: ModelBuilderTest.TestCollectionNavigationBuilder
    fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestCollectionNavigationBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRelatedEntity
    nameWithType: TRelatedEntity
    fullName: TRelatedEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestCollectionNavigationBuilder`2
    name: ModelBuilderTest.TestCollectionNavigationBuilder
    nameWithType: ModelBuilderTest.TestCollectionNavigationBuilder
    fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestCollectionNavigationBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRelatedEntity
    nameWithType: TRelatedEntity
    fullName: TRelatedEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestCollectionNavigationBuilder`2.WithOne(System.Linq.Expressions.Expression{System.Func{`1,`0}})
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestCollectionNavigationBuilder`2.WithOne(System.Linq.Expressions.Expression{System.Func{`1,`0}})
  isExternal: true
  name: WithOne(Expression<Func<TRelatedEntity, TEntity>>)
  nameWithType: ModelBuilderTest.TestCollectionNavigationBuilder<TEntity, TRelatedEntity>.WithOne(Expression<Func<TRelatedEntity, TEntity>>)
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestCollectionNavigationBuilder<TEntity, TRelatedEntity>.WithOne(System.Linq.Expressions.Expression<System.Func<TRelatedEntity, TEntity>>)
  nameWithType.vb: ModelBuilderTest.TestCollectionNavigationBuilder(Of TEntity, TRelatedEntity).WithOne(Expression(Of Func(Of TRelatedEntity, TEntity)))
  fullname.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestCollectionNavigationBuilder(Of TEntity, TRelatedEntity).WithOne(System.Linq.Expressions.Expression(Of System.Func(Of TRelatedEntity, TEntity)))
  name.vb: WithOne(Expression(Of Func(Of TRelatedEntity, TEntity)))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestCollectionNavigationBuilder`2.WithOne(System.Linq.Expressions.Expression{System.Func{`1,`0}})
    name: WithOne
    nameWithType: ModelBuilderTest.TestCollectionNavigationBuilder<TEntity, TRelatedEntity>.WithOne
    fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestCollectionNavigationBuilder<TEntity, TRelatedEntity>.WithOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRelatedEntity
    nameWithType: TRelatedEntity
    fullName: TRelatedEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestCollectionNavigationBuilder`2.WithOne(System.Linq.Expressions.Expression{System.Func{`1,`0}})
    name: WithOne
    nameWithType: ModelBuilderTest.TestCollectionNavigationBuilder(Of TEntity, TRelatedEntity).WithOne
    fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestCollectionNavigationBuilder(Of TEntity, TRelatedEntity).WithOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRelatedEntity
    nameWithType: TRelatedEntity
    fullName: TRelatedEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders
  isExternal: false
  name: CollectionNavigationBuilder
  nameWithType: CollectionNavigationBuilder
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Builders
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Builders
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Builders
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders
- uid: System.Linq.Expressions.Expression{System.Func{{TRelatedEntity},{TEntity}}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{`1,`0}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  name: Expression<Func<TRelatedEntity, TEntity>>
  nameWithType: Expression<Func<TRelatedEntity, TEntity>>
  fullName: System.Linq.Expressions.Expression<System.Func<TRelatedEntity, TEntity>>
  nameWithType.vb: Expression(Of Func(Of TRelatedEntity, TEntity))
  fullname.vb: System.Linq.Expressions.Expression(Of System.Func(Of TRelatedEntity, TEntity))
  name.vb: Expression(Of Func(Of TRelatedEntity, TEntity))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRelatedEntity
    nameWithType: TRelatedEntity
    fullName: TRelatedEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRelatedEntity
    nameWithType: TRelatedEntity
    fullName: TRelatedEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder{{TEntity},{TRelatedEntity}}
  commentId: T:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder{`0,`1}
  parent: Microsoft.EntityFrameworkCore.Tests
  definition: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder`2
  name: ModelBuilderTest.TestReferenceCollectionBuilder<TEntity, TRelatedEntity>
  nameWithType: ModelBuilderTest.TestReferenceCollectionBuilder<TEntity, TRelatedEntity>
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder<TEntity, TRelatedEntity>
  nameWithType.vb: ModelBuilderTest.TestReferenceCollectionBuilder(Of TEntity, TRelatedEntity)
  fullname.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder(Of TEntity, TRelatedEntity)
  name.vb: ModelBuilderTest.TestReferenceCollectionBuilder(Of TEntity, TRelatedEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder`2
    name: ModelBuilderTest.TestReferenceCollectionBuilder
    nameWithType: ModelBuilderTest.TestReferenceCollectionBuilder
    fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRelatedEntity
    nameWithType: TRelatedEntity
    fullName: TRelatedEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder`2
    name: ModelBuilderTest.TestReferenceCollectionBuilder
    nameWithType: ModelBuilderTest.TestReferenceCollectionBuilder
    fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRelatedEntity
    nameWithType: TRelatedEntity
    fullName: TRelatedEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.Expression`1
  commentId: T:System.Linq.Expressions.Expression`1
  isExternal: true
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
  nameWithType.vb: Expression(Of TDelegate)
  fullname.vb: System.Linq.Expressions.Expression(Of TDelegate)
  name.vb: Expression(Of TDelegate)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TDelegate
    nameWithType: TDelegate
    fullName: TDelegate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDelegate
    nameWithType: TDelegate
    fullName: TDelegate
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: false
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder`2
  commentId: T:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder`2
  parent: Microsoft.EntityFrameworkCore.Tests
  isExternal: false
  name: ModelBuilderTest.TestReferenceCollectionBuilder<TEntity, TRelatedEntity>
  nameWithType: ModelBuilderTest.TestReferenceCollectionBuilder<TEntity, TRelatedEntity>
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder<TEntity, TRelatedEntity>
  nameWithType.vb: ModelBuilderTest.TestReferenceCollectionBuilder(Of TEntity, TRelatedEntity)
  fullname.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder(Of TEntity, TRelatedEntity)
  name.vb: ModelBuilderTest.TestReferenceCollectionBuilder(Of TEntity, TRelatedEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder`2
    name: ModelBuilderTest.TestReferenceCollectionBuilder
    nameWithType: ModelBuilderTest.TestReferenceCollectionBuilder
    fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRelatedEntity
    nameWithType: TRelatedEntity
    fullName: TRelatedEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder`2
    name: ModelBuilderTest.TestReferenceCollectionBuilder
    nameWithType: ModelBuilderTest.TestReferenceCollectionBuilder
    fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestReferenceCollectionBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRelatedEntity
    nameWithType: TRelatedEntity
    fullName: TRelatedEntity
  - name: )
    nameWithType: )
    fullName: )
