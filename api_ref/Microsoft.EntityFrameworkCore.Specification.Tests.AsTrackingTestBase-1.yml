### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsTrackingTestBase`1
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.AsTrackingTestBase`1
  id: AsTrackingTestBase`1
  parent: Microsoft.EntityFrameworkCore.Specification.Tests
  children:
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsTrackingTestBase`1.#ctor(`0)
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsTrackingTestBase`1.Applied_to_body_clause
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsTrackingTestBase`1.Applied_to_body_clause_with_projection
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsTrackingTestBase`1.Applied_to_multiple_body_clauses
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsTrackingTestBase`1.Applied_to_projection
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsTrackingTestBase`1.CreateContext
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsTrackingTestBase`1.Entity_added_to_state_manager
  - Microsoft.EntityFrameworkCore.Specification.Tests.AsTrackingTestBase`1.Fixture
  langs:
  - csharp
  - vb
  name: AsTrackingTestBase<TFixture>
  nameWithType: AsTrackingTestBase<TFixture>
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsTrackingTestBase<TFixture>
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsTrackingTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AsTrackingTestBase
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsTrackingTestBase.cs
    startLine: 10
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: 'public abstract class AsTrackingTestBase<TFixture> : IClassFixture<TFixture> where TFixture : NorthwindQueryFixtureBase, new ()'
    content.vb: >-
      Public MustInherit Class AsTrackingTestBase(Of TFixture As {NorthwindQueryFixtureBase, New})
          Implements IClassFixture(Of TFixture)
    typeParameters:
    - id: TFixture
  inheritance:
  - System.Object
  implements:
  - Xunit.IClassFixture{{TFixture}}
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: AsTrackingTestBase(Of TFixture)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsTrackingTestBase(Of TFixture)
  name.vb: AsTrackingTestBase(Of TFixture)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsTrackingTestBase`1.Entity_added_to_state_manager
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsTrackingTestBase`1.Entity_added_to_state_manager
  id: Entity_added_to_state_manager
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsTrackingTestBase`1
  langs:
  - csharp
  - vb
  name: Entity_added_to_state_manager()
  nameWithType: AsTrackingTestBase<TFixture>.Entity_added_to_state_manager()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsTrackingTestBase<TFixture>.Entity_added_to_state_manager()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsTrackingTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Entity_added_to_state_manager
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsTrackingTestBase.cs
    startLine: 13
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Entity_added_to_state_manager()
    content.vb: >-
      <Fact>

      Public Overridable Sub Entity_added_to_state_manager
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: AsTrackingTestBase(Of TFixture).Entity_added_to_state_manager()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsTrackingTestBase(Of TFixture).Entity_added_to_state_manager()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsTrackingTestBase`1.Applied_to_body_clause
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsTrackingTestBase`1.Applied_to_body_clause
  id: Applied_to_body_clause
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsTrackingTestBase`1
  langs:
  - csharp
  - vb
  name: Applied_to_body_clause()
  nameWithType: AsTrackingTestBase<TFixture>.Applied_to_body_clause()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsTrackingTestBase<TFixture>.Applied_to_body_clause()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsTrackingTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Applied_to_body_clause
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsTrackingTestBase.cs
    startLine: 25
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual void Applied_to_body_clause()
    content.vb: Public Overridable Sub Applied_to_body_clause
  nameWithType.vb: AsTrackingTestBase(Of TFixture).Applied_to_body_clause()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsTrackingTestBase(Of TFixture).Applied_to_body_clause()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsTrackingTestBase`1.Applied_to_multiple_body_clauses
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsTrackingTestBase`1.Applied_to_multiple_body_clauses
  id: Applied_to_multiple_body_clauses
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsTrackingTestBase`1
  langs:
  - csharp
  - vb
  name: Applied_to_multiple_body_clauses()
  nameWithType: AsTrackingTestBase<TFixture>.Applied_to_multiple_body_clauses()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsTrackingTestBase<TFixture>.Applied_to_multiple_body_clauses()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsTrackingTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Applied_to_multiple_body_clauses
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsTrackingTestBase.cs
    startLine: 43
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Applied_to_multiple_body_clauses()
    content.vb: >-
      <Fact>

      Public Overridable Sub Applied_to_multiple_body_clauses
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: AsTrackingTestBase(Of TFixture).Applied_to_multiple_body_clauses()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsTrackingTestBase(Of TFixture).Applied_to_multiple_body_clauses()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsTrackingTestBase`1.Applied_to_body_clause_with_projection
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsTrackingTestBase`1.Applied_to_body_clause_with_projection
  id: Applied_to_body_clause_with_projection
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsTrackingTestBase`1
  langs:
  - csharp
  - vb
  name: Applied_to_body_clause_with_projection()
  nameWithType: AsTrackingTestBase<TFixture>.Applied_to_body_clause_with_projection()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsTrackingTestBase<TFixture>.Applied_to_body_clause_with_projection()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsTrackingTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Applied_to_body_clause_with_projection
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsTrackingTestBase.cs
    startLine: 60
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual void Applied_to_body_clause_with_projection()
    content.vb: Public Overridable Sub Applied_to_body_clause_with_projection
  nameWithType.vb: AsTrackingTestBase(Of TFixture).Applied_to_body_clause_with_projection()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsTrackingTestBase(Of TFixture).Applied_to_body_clause_with_projection()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsTrackingTestBase`1.Applied_to_projection
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsTrackingTestBase`1.Applied_to_projection
  id: Applied_to_projection
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsTrackingTestBase`1
  langs:
  - csharp
  - vb
  name: Applied_to_projection()
  nameWithType: AsTrackingTestBase<TFixture>.Applied_to_projection()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsTrackingTestBase<TFixture>.Applied_to_projection()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsTrackingTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Applied_to_projection
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsTrackingTestBase.cs
    startLine: 78
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual void Applied_to_projection()
    content.vb: Public Overridable Sub Applied_to_projection
  nameWithType.vb: AsTrackingTestBase(Of TFixture).Applied_to_projection()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsTrackingTestBase(Of TFixture).Applied_to_projection()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsTrackingTestBase`1.CreateContext
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsTrackingTestBase`1.CreateContext
  id: CreateContext
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsTrackingTestBase`1
  langs:
  - csharp
  - vb
  name: CreateContext()
  nameWithType: AsTrackingTestBase<TFixture>.CreateContext()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsTrackingTestBase<TFixture>.CreateContext()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsTrackingTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateContext
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsTrackingTestBase.cs
    startLine: 97
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: protected NorthwindContext CreateContext()
    content.vb: Protected Function CreateContext As NorthwindContext
    return:
      type: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.NorthwindContext
  nameWithType.vb: AsTrackingTestBase(Of TFixture).CreateContext()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsTrackingTestBase(Of TFixture).CreateContext()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsTrackingTestBase`1.#ctor(`0)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.AsTrackingTestBase`1.#ctor(`0)
  id: '#ctor(`0)'
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsTrackingTestBase`1
  langs:
  - csharp
  - vb
  name: AsTrackingTestBase(TFixture)
  nameWithType: AsTrackingTestBase<TFixture>.AsTrackingTestBase(TFixture)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsTrackingTestBase<TFixture>.AsTrackingTestBase(TFixture)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsTrackingTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsTrackingTestBase.cs
    startLine: 106
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: protected AsTrackingTestBase(TFixture fixture)
    content.vb: Protected Sub New(fixture As TFixture)
    parameters:
    - id: fixture
      type: '{TFixture}'
  nameWithType.vb: AsTrackingTestBase(Of TFixture).AsTrackingTestBase(TFixture)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsTrackingTestBase(Of TFixture).AsTrackingTestBase(TFixture)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.AsTrackingTestBase`1.Fixture
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.AsTrackingTestBase`1.Fixture
  id: Fixture
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.AsTrackingTestBase`1
  langs:
  - csharp
  - vb
  name: Fixture
  nameWithType: AsTrackingTestBase<TFixture>.Fixture
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.AsTrackingTestBase<TFixture>.Fixture
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsTrackingTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Fixture
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/AsTrackingTestBase.cs
    startLine: 111
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: protected TFixture Fixture { get; }
    content.vb: Protected ReadOnly Property Fixture As TFixture
    parameters: []
    return:
      type: '{TFixture}'
  nameWithType.vb: AsTrackingTestBase(Of TFixture).Fixture
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.AsTrackingTestBase(Of TFixture).Fixture
references:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests
  commentId: N:Microsoft.EntityFrameworkCore.Specification.Tests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Specification.Tests
  nameWithType: Microsoft.EntityFrameworkCore.Specification.Tests
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Xunit.IClassFixture{{TFixture}}
  commentId: T:Xunit.IClassFixture{`0}
  parent: Xunit
  definition: Xunit.IClassFixture`1
  name: IClassFixture<TFixture>
  nameWithType: IClassFixture<TFixture>
  fullName: Xunit.IClassFixture<TFixture>
  nameWithType.vb: IClassFixture(Of TFixture)
  fullname.vb: Xunit.IClassFixture(Of TFixture)
  name.vb: IClassFixture(Of TFixture)
  spec.csharp:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    nameWithType: IClassFixture
    fullName: Xunit.IClassFixture
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TFixture
    nameWithType: TFixture
    fullName: TFixture
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    nameWithType: IClassFixture
    fullName: Xunit.IClassFixture
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TFixture
    nameWithType: TFixture
    fullName: TFixture
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Xunit.IClassFixture`1
  commentId: T:Xunit.IClassFixture`1
  isExternal: true
  name: IClassFixture<TFixture>
  nameWithType: IClassFixture<TFixture>
  fullName: Xunit.IClassFixture<TFixture>
  nameWithType.vb: IClassFixture(Of TFixture)
  fullname.vb: Xunit.IClassFixture(Of TFixture)
  name.vb: IClassFixture(Of TFixture)
  spec.csharp:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    nameWithType: IClassFixture
    fullName: Xunit.IClassFixture
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TFixture
    nameWithType: TFixture
    fullName: TFixture
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    nameWithType: IClassFixture
    fullName: Xunit.IClassFixture
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TFixture
    nameWithType: TFixture
    fullName: TFixture
  - name: )
    nameWithType: )
    fullName: )
- uid: Xunit
  commentId: N:Xunit
  isExternal: false
  name: Xunit
  nameWithType: Xunit
  fullName: Xunit
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.NorthwindContext
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.NorthwindContext
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind
  isExternal: false
  name: NorthwindContext
  nameWithType: NorthwindContext
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.NorthwindContext
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind
  commentId: N:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind
  nameWithType: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind
- uid: '{TFixture}'
  commentId: '!:TFixture'
  definition: TFixture
  name: TFixture
  nameWithType: TFixture
  fullName: TFixture
- uid: TFixture
  isExternal: false
  name: TFixture
  nameWithType: TFixture
  fullName: TFixture
