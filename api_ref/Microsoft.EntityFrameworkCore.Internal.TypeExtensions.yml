### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Internal.TypeExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Internal.TypeExtensions
  id: TypeExtensions
  parent: Microsoft.EntityFrameworkCore.Internal
  children:
  - Microsoft.EntityFrameworkCore.Internal.TypeExtensions.DisplayName(System.Type,System.Boolean)
  - Microsoft.EntityFrameworkCore.Internal.TypeExtensions.IsDefaultValue(System.Type,System.Object)
  - Microsoft.EntityFrameworkCore.Internal.TypeExtensions.ShortDisplayName(System.Type)
  langs:
  - csharp
  - vb
  name: TypeExtensions
  nameWithType: TypeExtensions
  fullName: Microsoft.EntityFrameworkCore.Internal.TypeExtensions
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/TypeExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: TypeExtensions
    path: src/Microsoft.EntityFrameworkCore/Internal/TypeExtensions.cs
    startLine: 16
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public static class TypeExtensions
    content.vb: Public Module TypeExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.EntityFrameworkCore.Internal.TypeExtensions.IsDefaultValue(System.Type,System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.TypeExtensions.IsDefaultValue(System.Type,System.Object)
  id: IsDefaultValue(System.Type,System.Object)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.Internal.TypeExtensions
  langs:
  - csharp
  - vb
  name: IsDefaultValue(Type, Object)
  nameWithType: TypeExtensions.IsDefaultValue(Type, Object)
  fullName: Microsoft.EntityFrameworkCore.Internal.TypeExtensions.IsDefaultValue(System.Type, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/TypeExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: IsDefaultValue
    path: src/Microsoft.EntityFrameworkCore/Internal/TypeExtensions.cs
    startLine: 41
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public static bool IsDefaultValue(this Type type, object value)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function IsDefaultValue(type As Type, value As Object) As Boolean
    parameters:
    - id: type
      type: System.Type
    - id: value
      type: System.Object
    return:
      type: System.Boolean
  overload: Microsoft.EntityFrameworkCore.Internal.TypeExtensions.IsDefaultValue*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Internal.TypeExtensions.ShortDisplayName(System.Type)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.TypeExtensions.ShortDisplayName(System.Type)
  id: ShortDisplayName(System.Type)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.Internal.TypeExtensions
  langs:
  - csharp
  - vb
  name: ShortDisplayName(Type)
  nameWithType: TypeExtensions.ShortDisplayName(Type)
  fullName: Microsoft.EntityFrameworkCore.Internal.TypeExtensions.ShortDisplayName(System.Type)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/TypeExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ShortDisplayName
    path: src/Microsoft.EntityFrameworkCore/Internal/TypeExtensions.cs
    startLine: 48
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public static string ShortDisplayName(this Type type)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ShortDisplayName(type As Type) As String
    parameters:
    - id: type
      type: System.Type
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Internal.TypeExtensions.ShortDisplayName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Internal.TypeExtensions.DisplayName(System.Type,System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.TypeExtensions.DisplayName(System.Type,System.Boolean)
  id: DisplayName(System.Type,System.Boolean)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.Internal.TypeExtensions
  langs:
  - csharp
  - vb
  name: DisplayName(Type, Boolean)
  nameWithType: TypeExtensions.DisplayName(Type, Boolean)
  fullName: Microsoft.EntityFrameworkCore.Internal.TypeExtensions.DisplayName(System.Type, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/TypeExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: DisplayName
    path: src/Microsoft.EntityFrameworkCore/Internal/TypeExtensions.cs
    startLine: 55
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public static string DisplayName(this Type type, bool fullName = true)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DisplayName(type As Type, fullName As Boolean = True) As String
    parameters:
    - id: type
      type: System.Type
    - id: fullName
      type: System.Boolean
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Internal.TypeExtensions.DisplayName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.EntityFrameworkCore.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Internal
  fullName: Microsoft.EntityFrameworkCore.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Internal.TypeExtensions.IsDefaultValue*
  commentId: Overload:Microsoft.EntityFrameworkCore.Internal.TypeExtensions.IsDefaultValue
  isExternal: false
  name: IsDefaultValue
  nameWithType: TypeExtensions.IsDefaultValue
  fullName: Microsoft.EntityFrameworkCore.Internal.TypeExtensions.IsDefaultValue
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.EntityFrameworkCore.Internal.TypeExtensions.ShortDisplayName*
  commentId: Overload:Microsoft.EntityFrameworkCore.Internal.TypeExtensions.ShortDisplayName
  isExternal: false
  name: ShortDisplayName
  nameWithType: TypeExtensions.ShortDisplayName
  fullName: Microsoft.EntityFrameworkCore.Internal.TypeExtensions.ShortDisplayName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.EntityFrameworkCore.Internal.TypeExtensions.DisplayName*
  commentId: Overload:Microsoft.EntityFrameworkCore.Internal.TypeExtensions.DisplayName
  isExternal: false
  name: DisplayName
  nameWithType: TypeExtensions.DisplayName
  fullName: Microsoft.EntityFrameworkCore.Internal.TypeExtensions.DisplayName
