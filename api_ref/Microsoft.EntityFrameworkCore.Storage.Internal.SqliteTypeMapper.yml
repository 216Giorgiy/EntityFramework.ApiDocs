### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.SqliteTypeMapper
  commentId: T:Microsoft.EntityFrameworkCore.Storage.Internal.SqliteTypeMapper
  id: SqliteTypeMapper
  parent: Microsoft.EntityFrameworkCore.Storage.Internal
  children:
  - Microsoft.EntityFrameworkCore.Storage.Internal.SqliteTypeMapper.#ctor
  - Microsoft.EntityFrameworkCore.Storage.Internal.SqliteTypeMapper.FindMapping(System.String)
  - Microsoft.EntityFrameworkCore.Storage.Internal.SqliteTypeMapper.GetClrTypeMappings
  - Microsoft.EntityFrameworkCore.Storage.Internal.SqliteTypeMapper.GetColumnType(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  - Microsoft.EntityFrameworkCore.Storage.Internal.SqliteTypeMapper.GetStoreTypeMappings
  langs:
  - csharp
  - vb
  name: SqliteTypeMapper
  nameWithType: SqliteTypeMapper
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.SqliteTypeMapper
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Sqlite/Storage/Internal/SqliteTypeMapper.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: SqliteTypeMapper
    path: src/Microsoft.EntityFrameworkCore.Sqlite/Storage/Internal/SqliteTypeMapper.cs
    startLine: 14
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public class SqliteTypeMapper : RelationalTypeMapper, IRelationalTypeMapper'
    content.vb: >-
      Public Class SqliteTypeMapper
          Inherits RelationalTypeMapper
          Implements IRelationalTypeMapper
  inheritance:
  - System.Object
  - Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper
  implements:
  - Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper
  inheritedMembers:
  - Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.ValidateTypeName(System.String)
  - Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.FindMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  - Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.FindMapping(System.Type)
  - Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.CreateMappingFromStoreType(System.String)
  - Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.FindCustomMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  - Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.ByteArrayMapper
  - Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.StringMapper
  - Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.GetStringMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  - Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.GetByteArrayMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  - Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.RequiresKeyMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.SqliteTypeMapper.#ctor
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.SqliteTypeMapper.#ctor
  id: '#ctor'
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.SqliteTypeMapper
  langs:
  - csharp
  - vb
  name: SqliteTypeMapper()
  nameWithType: SqliteTypeMapper.SqliteTypeMapper()
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.SqliteTypeMapper.SqliteTypeMapper()
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Sqlite/Storage/Internal/SqliteTypeMapper.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Sqlite/Storage/Internal/SqliteTypeMapper.cs
    startLine: 28
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public SqliteTypeMapper()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.SqliteTypeMapper.GetColumnType(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.SqliteTypeMapper.GetColumnType(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  id: GetColumnType(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.SqliteTypeMapper
  langs:
  - csharp
  - vb
  name: GetColumnType(IProperty)
  nameWithType: SqliteTypeMapper.GetColumnType(IProperty)
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.SqliteTypeMapper.GetColumnType(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Sqlite/Storage/Internal/SqliteTypeMapper.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetColumnType
    path: src/Microsoft.EntityFrameworkCore.Sqlite/Storage/Internal/SqliteTypeMapper.cs
    startLine: 63
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected override string GetColumnType(IProperty property)
    content.vb: Protected Overrides Function GetColumnType(property As IProperty) As String
    parameters:
    - id: property
      type: Microsoft.EntityFrameworkCore.Metadata.IProperty
    return:
      type: System.String
  overridden: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.GetColumnType(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.SqliteTypeMapper.FindMapping(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.SqliteTypeMapper.FindMapping(System.String)
  id: FindMapping(System.String)
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.SqliteTypeMapper
  langs:
  - csharp
  - vb
  name: FindMapping(String)
  nameWithType: SqliteTypeMapper.FindMapping(String)
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.SqliteTypeMapper.FindMapping(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Sqlite/Storage/Internal/SqliteTypeMapper.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: FindMapping
    path: src/Microsoft.EntityFrameworkCore.Sqlite/Storage/Internal/SqliteTypeMapper.cs
    startLine: 69
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public override RelationalTypeMapping FindMapping(string storeType)
    content.vb: Public Overrides Function FindMapping(storeType As String) As RelationalTypeMapping
    parameters:
    - id: storeType
      type: System.String
    return:
      type: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping
  overridden: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.FindMapping(System.String)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.SqliteTypeMapper.GetClrTypeMappings
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.SqliteTypeMapper.GetClrTypeMappings
  id: GetClrTypeMappings
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.SqliteTypeMapper
  langs:
  - csharp
  - vb
  name: GetClrTypeMappings()
  nameWithType: SqliteTypeMapper.GetClrTypeMappings()
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.SqliteTypeMapper.GetClrTypeMappings()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Sqlite/Storage/Internal/SqliteTypeMapper.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetClrTypeMappings
    path: src/Microsoft.EntityFrameworkCore.Sqlite/Storage/Internal/SqliteTypeMapper.cs
    startLine: 110
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected override IReadOnlyDictionary<Type, RelationalTypeMapping> GetClrTypeMappings()
    content.vb: Protected Overrides Function GetClrTypeMappings As IReadOnlyDictionary(Of Type, RelationalTypeMapping)
    return:
      type: System.Collections.Generic.IReadOnlyDictionary{System.Type,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping}
  overridden: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.GetClrTypeMappings
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.SqliteTypeMapper.GetStoreTypeMappings
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.SqliteTypeMapper.GetStoreTypeMappings
  id: GetStoreTypeMappings
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.SqliteTypeMapper
  langs:
  - csharp
  - vb
  name: GetStoreTypeMappings()
  nameWithType: SqliteTypeMapper.GetStoreTypeMappings()
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.SqliteTypeMapper.GetStoreTypeMappings()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Sqlite/Storage/Internal/SqliteTypeMapper.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetStoreTypeMappings
    path: src/Microsoft.EntityFrameworkCore.Sqlite/Storage/Internal/SqliteTypeMapper.cs
    startLine: 117
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected override IReadOnlyDictionary<string, RelationalTypeMapping> GetStoreTypeMappings()
    content.vb: Protected Overrides Function GetStoreTypeMappings As IReadOnlyDictionary(Of String, RelationalTypeMapping)
    return:
      type: System.Collections.Generic.IReadOnlyDictionary{System.String,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping}
  overridden: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.GetStoreTypeMappings
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Microsoft.EntityFrameworkCore.Storage.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Storage.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Storage.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Storage.Internal
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper
  commentId: T:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: RelationalTypeMapper
  nameWithType: RelationalTypeMapper
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IRelationalTypeMapper
  nameWithType: IRelationalTypeMapper
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.ValidateTypeName(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.ValidateTypeName(System.String)
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper
  isExternal: true
  name: ValidateTypeName(String)
  nameWithType: RelationalTypeMapper.ValidateTypeName(String)
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.ValidateTypeName(System.String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.ValidateTypeName(System.String)
    name: ValidateTypeName
    nameWithType: RelationalTypeMapper.ValidateTypeName
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.ValidateTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.ValidateTypeName(System.String)
    name: ValidateTypeName
    nameWithType: RelationalTypeMapper.ValidateTypeName
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.ValidateTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.FindMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.FindMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper
  isExternal: false
  name: FindMapping(IProperty)
  nameWithType: RelationalTypeMapper.FindMapping(IProperty)
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.FindMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.FindMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)
    name: FindMapping
    nameWithType: RelationalTypeMapper.FindMapping
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.FindMapping
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
    name: IProperty
    nameWithType: IProperty
    fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.FindMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)
    name: FindMapping
    nameWithType: RelationalTypeMapper.FindMapping
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.FindMapping
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
    name: IProperty
    nameWithType: IProperty
    fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.FindMapping(System.Type)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.FindMapping(System.Type)
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper
  isExternal: true
  name: FindMapping(Type)
  nameWithType: RelationalTypeMapper.FindMapping(Type)
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.FindMapping(System.Type)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.FindMapping(System.Type)
    name: FindMapping
    nameWithType: RelationalTypeMapper.FindMapping
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.FindMapping
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.FindMapping(System.Type)
    name: FindMapping
    nameWithType: RelationalTypeMapper.FindMapping
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.FindMapping
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.CreateMappingFromStoreType(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.CreateMappingFromStoreType(System.String)
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper
  isExternal: true
  name: CreateMappingFromStoreType(String)
  nameWithType: RelationalTypeMapper.CreateMappingFromStoreType(String)
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.CreateMappingFromStoreType(System.String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.CreateMappingFromStoreType(System.String)
    name: CreateMappingFromStoreType
    nameWithType: RelationalTypeMapper.CreateMappingFromStoreType
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.CreateMappingFromStoreType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.CreateMappingFromStoreType(System.String)
    name: CreateMappingFromStoreType
    nameWithType: RelationalTypeMapper.CreateMappingFromStoreType
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.CreateMappingFromStoreType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.FindCustomMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.FindCustomMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper
  isExternal: false
  name: FindCustomMapping(IProperty)
  nameWithType: RelationalTypeMapper.FindCustomMapping(IProperty)
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.FindCustomMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.FindCustomMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)
    name: FindCustomMapping
    nameWithType: RelationalTypeMapper.FindCustomMapping
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.FindCustomMapping
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
    name: IProperty
    nameWithType: IProperty
    fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.FindCustomMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)
    name: FindCustomMapping
    nameWithType: RelationalTypeMapper.FindCustomMapping
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.FindCustomMapping
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
    name: IProperty
    nameWithType: IProperty
    fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.ByteArrayMapper
  commentId: P:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.ByteArrayMapper
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper
  isExternal: false
  name: ByteArrayMapper
  nameWithType: RelationalTypeMapper.ByteArrayMapper
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.ByteArrayMapper
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.StringMapper
  commentId: P:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.StringMapper
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper
  isExternal: false
  name: StringMapper
  nameWithType: RelationalTypeMapper.StringMapper
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.StringMapper
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.GetStringMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.GetStringMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper
  isExternal: false
  name: GetStringMapping(IProperty)
  nameWithType: RelationalTypeMapper.GetStringMapping(IProperty)
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.GetStringMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.GetStringMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)
    name: GetStringMapping
    nameWithType: RelationalTypeMapper.GetStringMapping
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.GetStringMapping
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
    name: IProperty
    nameWithType: IProperty
    fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.GetStringMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)
    name: GetStringMapping
    nameWithType: RelationalTypeMapper.GetStringMapping
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.GetStringMapping
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
    name: IProperty
    nameWithType: IProperty
    fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.GetByteArrayMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.GetByteArrayMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper
  isExternal: false
  name: GetByteArrayMapping(IProperty)
  nameWithType: RelationalTypeMapper.GetByteArrayMapping(IProperty)
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.GetByteArrayMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.GetByteArrayMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)
    name: GetByteArrayMapping
    nameWithType: RelationalTypeMapper.GetByteArrayMapping
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.GetByteArrayMapping
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
    name: IProperty
    nameWithType: IProperty
    fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.GetByteArrayMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)
    name: GetByteArrayMapping
    nameWithType: RelationalTypeMapper.GetByteArrayMapping
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.GetByteArrayMapping
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
    name: IProperty
    nameWithType: IProperty
    fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.RequiresKeyMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.RequiresKeyMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper
  isExternal: false
  name: RequiresKeyMapping(IProperty)
  nameWithType: RelationalTypeMapper.RequiresKeyMapping(IProperty)
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.RequiresKeyMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.RequiresKeyMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)
    name: RequiresKeyMapping
    nameWithType: RelationalTypeMapper.RequiresKeyMapping
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.RequiresKeyMapping
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
    name: IProperty
    nameWithType: IProperty
    fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.RequiresKeyMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)
    name: RequiresKeyMapping
    nameWithType: RelationalTypeMapper.RequiresKeyMapping
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.RequiresKeyMapping
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
    name: IProperty
    nameWithType: IProperty
    fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Storage
  commentId: N:Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Storage
  nameWithType: Microsoft.EntityFrameworkCore.Storage
  fullName: Microsoft.EntityFrameworkCore.Storage
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.GetColumnType(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.GetColumnType(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper
  isExternal: false
  name: GetColumnType(IProperty)
  nameWithType: RelationalTypeMapper.GetColumnType(IProperty)
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.GetColumnType(Microsoft.EntityFrameworkCore.Metadata.IProperty)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.GetColumnType(Microsoft.EntityFrameworkCore.Metadata.IProperty)
    name: GetColumnType
    nameWithType: RelationalTypeMapper.GetColumnType
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.GetColumnType
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
    name: IProperty
    nameWithType: IProperty
    fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.GetColumnType(Microsoft.EntityFrameworkCore.Metadata.IProperty)
    name: GetColumnType
    nameWithType: RelationalTypeMapper.GetColumnType
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.GetColumnType
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
    name: IProperty
    nameWithType: IProperty
    fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IProperty
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IProperty
  nameWithType: IProperty
  fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.FindMapping(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.FindMapping(System.String)
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper
  isExternal: true
  name: FindMapping(String)
  nameWithType: RelationalTypeMapper.FindMapping(String)
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.FindMapping(System.String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.FindMapping(System.String)
    name: FindMapping
    nameWithType: RelationalTypeMapper.FindMapping
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.FindMapping
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.FindMapping(System.String)
    name: FindMapping
    nameWithType: RelationalTypeMapper.FindMapping
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.FindMapping
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping
  commentId: T:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: RelationalTypeMapping
  nameWithType: RelationalTypeMapping
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.GetClrTypeMappings
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.GetClrTypeMappings
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper
  isExternal: false
  name: GetClrTypeMappings()
  nameWithType: RelationalTypeMapper.GetClrTypeMappings()
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.GetClrTypeMappings()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.GetClrTypeMappings
    name: GetClrTypeMappings
    nameWithType: RelationalTypeMapper.GetClrTypeMappings
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.GetClrTypeMappings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.GetClrTypeMappings
    name: GetClrTypeMappings
    nameWithType: RelationalTypeMapper.GetClrTypeMappings
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.GetClrTypeMappings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyDictionary{System.Type,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping}
  commentId: T:System.Collections.Generic.IReadOnlyDictionary{System.Type,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyDictionary`2
  name: IReadOnlyDictionary<Type, RelationalTypeMapping>
  nameWithType: IReadOnlyDictionary<Type, RelationalTypeMapping>
  fullName: System.Collections.Generic.IReadOnlyDictionary<System.Type, Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping>
  nameWithType.vb: IReadOnlyDictionary(Of Type, RelationalTypeMapping)
  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of System.Type, Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping)
  name.vb: IReadOnlyDictionary(Of Type, RelationalTypeMapping)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping
    name: RelationalTypeMapping
    nameWithType: RelationalTypeMapping
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping
    name: RelationalTypeMapping
    nameWithType: RelationalTypeMapping
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyDictionary`2
  commentId: T:System.Collections.Generic.IReadOnlyDictionary`2
  isExternal: true
  name: IReadOnlyDictionary<TKey, TValue>
  nameWithType: IReadOnlyDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>
  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue)
  name.vb: IReadOnlyDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.GetStoreTypeMappings
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.GetStoreTypeMappings
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper
  isExternal: false
  name: GetStoreTypeMappings()
  nameWithType: RelationalTypeMapper.GetStoreTypeMappings()
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.GetStoreTypeMappings()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.GetStoreTypeMappings
    name: GetStoreTypeMappings
    nameWithType: RelationalTypeMapper.GetStoreTypeMappings
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.GetStoreTypeMappings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.GetStoreTypeMappings
    name: GetStoreTypeMappings
    nameWithType: RelationalTypeMapper.GetStoreTypeMappings
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.GetStoreTypeMappings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyDictionary{System.String,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping}
  commentId: T:System.Collections.Generic.IReadOnlyDictionary{System.String,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyDictionary`2
  name: IReadOnlyDictionary<String, RelationalTypeMapping>
  nameWithType: IReadOnlyDictionary<String, RelationalTypeMapping>
  fullName: System.Collections.Generic.IReadOnlyDictionary<System.String, Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping>
  nameWithType.vb: IReadOnlyDictionary(Of String, RelationalTypeMapping)
  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of System.String, Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping)
  name.vb: IReadOnlyDictionary(Of String, RelationalTypeMapping)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping
    name: RelationalTypeMapping
    nameWithType: RelationalTypeMapping
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping
    name: RelationalTypeMapping
    nameWithType: RelationalTypeMapping
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping
  - name: )
    nameWithType: )
    fullName: )
