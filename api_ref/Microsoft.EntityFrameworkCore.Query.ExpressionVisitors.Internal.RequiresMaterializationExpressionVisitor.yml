### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor
  commentId: T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor
  id: RequiresMaterializationExpressionVisitor
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  children:
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.#ctor(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.FindQuerySourcesRequiringMaterialization(QueryModel)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.VisitQuerySourceReference(QuerySourceReferenceExpression)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.VisitSubQuery(SubQueryExpression)
  langs:
  - csharp
  - vb
  name: RequiresMaterializationExpressionVisitor
  nameWithType: RequiresMaterializationExpressionVisitor
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/RequiresMaterializationExpressionVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: RequiresMaterializationExpressionVisitor
    path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/RequiresMaterializationExpressionVisitor.cs
    startLine: 19
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public class RequiresMaterializationExpressionVisitor : ExpressionVisitorBase'
    content.vb: >-
      Public Class RequiresMaterializationExpressionVisitor
          Inherits ExpressionVisitorBase
  inheritance:
  - System.Object
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase
  inheritedMembers:
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.Visit(System.Linq.Expressions.Expression)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.VisitExtension(System.Linq.Expressions.Expression)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.#ctor(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.#ctor(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor)
  id: '#ctor(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor)'
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor
  langs:
  - csharp
  - vb
  name: RequiresMaterializationExpressionVisitor(IModel, EntityQueryModelVisitor)
  nameWithType: RequiresMaterializationExpressionVisitor.RequiresMaterializationExpressionVisitor(IModel, EntityQueryModelVisitor)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.RequiresMaterializationExpressionVisitor(Microsoft.EntityFrameworkCore.Metadata.IModel, Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/RequiresMaterializationExpressionVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/RequiresMaterializationExpressionVisitor.cs
    startLine: 32
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public RequiresMaterializationExpressionVisitor(IModel model, EntityQueryModelVisitor queryModelVisitor)
    content.vb: Public Sub New(model As IModel, queryModelVisitor As EntityQueryModelVisitor)
    parameters:
    - id: model
      type: Microsoft.EntityFrameworkCore.Metadata.IModel
    - id: queryModelVisitor
      type: Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor
  overload: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.FindQuerySourcesRequiringMaterialization(QueryModel)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.FindQuerySourcesRequiringMaterialization(QueryModel)
  id: FindQuerySourcesRequiringMaterialization(QueryModel)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor
  langs:
  - csharp
  - vb
  name: FindQuerySourcesRequiringMaterialization(QueryModel)
  nameWithType: RequiresMaterializationExpressionVisitor.FindQuerySourcesRequiringMaterialization(QueryModel)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.FindQuerySourcesRequiringMaterialization(QueryModel)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/RequiresMaterializationExpressionVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: FindQuerySourcesRequiringMaterialization
    path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/RequiresMaterializationExpressionVisitor.cs
    startLine: 44
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual ISet<IQuerySource> FindQuerySourcesRequiringMaterialization(QueryModel queryModel)
    content.vb: Public Overridable Function FindQuerySourcesRequiringMaterialization(queryModel As QueryModel) As ISet(Of IQuerySource)
    parameters:
    - id: queryModel
      type: QueryModel
    return:
      type: ISet{IQuerySource}
  overload: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.FindQuerySourcesRequiringMaterialization*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.VisitQuerySourceReference(QuerySourceReferenceExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.VisitQuerySourceReference(QuerySourceReferenceExpression)
  id: VisitQuerySourceReference(QuerySourceReferenceExpression)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor
  langs:
  - csharp
  - vb
  name: VisitQuerySourceReference(QuerySourceReferenceExpression)
  nameWithType: RequiresMaterializationExpressionVisitor.VisitQuerySourceReference(QuerySourceReferenceExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.VisitQuerySourceReference(QuerySourceReferenceExpression)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/RequiresMaterializationExpressionVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: VisitQuerySourceReference
    path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/RequiresMaterializationExpressionVisitor.cs
    startLine: 62
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected override Expression VisitQuerySourceReference(QuerySourceReferenceExpression expression)
    content.vb: Protected Overrides Function VisitQuerySourceReference(expression As QuerySourceReferenceExpression) As Expression
    parameters:
    - id: expression
      type: QuerySourceReferenceExpression
    return:
      type: System.Linq.Expressions.Expression
  overload: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.VisitQuerySourceReference*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)
  id: VisitMember(System.Linq.Expressions.MemberExpression)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor
  langs:
  - csharp
  - vb
  name: VisitMember(MemberExpression)
  nameWithType: RequiresMaterializationExpressionVisitor.VisitMember(MemberExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/RequiresMaterializationExpressionVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: VisitMember
    path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/RequiresMaterializationExpressionVisitor.cs
    startLine: 87
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected override Expression VisitMember(MemberExpression node)
    content.vb: Protected Overrides Function VisitMember(node As MemberExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.MemberExpression
    return:
      type: System.Linq.Expressions.Expression
  overload: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.VisitMember*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  id: VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor
  langs:
  - csharp
  - vb
  name: VisitMethodCall(MethodCallExpression)
  nameWithType: RequiresMaterializationExpressionVisitor.VisitMethodCall(MethodCallExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/RequiresMaterializationExpressionVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: VisitMethodCall
    path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/RequiresMaterializationExpressionVisitor.cs
    startLine: 112
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected override Expression VisitMethodCall(MethodCallExpression node)
    content.vb: Protected Overrides Function VisitMethodCall(node As MethodCallExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.MethodCallExpression
    return:
      type: System.Linq.Expressions.Expression
  overload: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.VisitMethodCall*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)
  id: VisitBinary(System.Linq.Expressions.BinaryExpression)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor
  langs:
  - csharp
  - vb
  name: VisitBinary(BinaryExpression)
  nameWithType: RequiresMaterializationExpressionVisitor.VisitBinary(BinaryExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/RequiresMaterializationExpressionVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: VisitBinary
    path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/RequiresMaterializationExpressionVisitor.cs
    startLine: 134
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected override Expression VisitBinary(BinaryExpression node)
    content.vb: Protected Overrides Function VisitBinary(node As BinaryExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.BinaryExpression
    return:
      type: System.Linq.Expressions.Expression
  overload: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.VisitBinary*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.VisitSubQuery(SubQueryExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.VisitSubQuery(SubQueryExpression)
  id: VisitSubQuery(SubQueryExpression)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor
  langs:
  - csharp
  - vb
  name: VisitSubQuery(SubQueryExpression)
  nameWithType: RequiresMaterializationExpressionVisitor.VisitSubQuery(SubQueryExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.VisitSubQuery(SubQueryExpression)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/RequiresMaterializationExpressionVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: VisitSubQuery
    path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/RequiresMaterializationExpressionVisitor.cs
    startLine: 175
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected override Expression VisitSubQuery(SubQueryExpression expression)
    content.vb: Protected Overrides Function VisitSubQuery(expression As SubQueryExpression) As Expression
    parameters:
    - id: expression
      type: SubQueryExpression
    return:
      type: System.Linq.Expressions.Expression
  overload: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.VisitSubQuery*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase
  commentId: T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
  isExternal: false
  name: ExpressionVisitorBase
  nameWithType: ExpressionVisitorBase
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.Visit(System.Linq.Expressions.Expression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.Visit(System.Linq.Expressions.Expression)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase
  isExternal: true
  name: Visit(Expression)
  nameWithType: ExpressionVisitorBase.Visit(Expression)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.Visit(System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.Visit(System.Linq.Expressions.Expression)
    name: Visit
    nameWithType: ExpressionVisitorBase.Visit
    fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.Visit
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.Visit(System.Linq.Expressions.Expression)
    name: Visit
    nameWithType: ExpressionVisitorBase.Visit
    fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.Visit
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.VisitExtension(System.Linq.Expressions.Expression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.VisitExtension(System.Linq.Expressions.Expression)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase
  isExternal: true
  name: VisitExtension(Expression)
  nameWithType: ExpressionVisitorBase.VisitExtension(Expression)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.VisitExtension(System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.VisitExtension(System.Linq.Expressions.Expression)
    name: VisitExtension
    nameWithType: ExpressionVisitorBase.VisitExtension
    fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.VisitExtension
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.VisitExtension(System.Linq.Expressions.Expression)
    name: VisitExtension
    nameWithType: ExpressionVisitorBase.VisitExtension
    fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.VisitExtension
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
  commentId: N:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
  nameWithType: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.#ctor*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.#ctor
  isExternal: false
  name: RequiresMaterializationExpressionVisitor
  nameWithType: RequiresMaterializationExpressionVisitor.RequiresMaterializationExpressionVisitor
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.RequiresMaterializationExpressionVisitor
- uid: Microsoft.EntityFrameworkCore.Metadata.IModel
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IModel
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IModel
  nameWithType: IModel
  fullName: Microsoft.EntityFrameworkCore.Metadata.IModel
- uid: Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor
  commentId: T:Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor
  parent: Microsoft.EntityFrameworkCore.Query
  isExternal: false
  name: EntityQueryModelVisitor
  nameWithType: EntityQueryModelVisitor
  fullName: Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: Microsoft.EntityFrameworkCore.Query
  commentId: N:Microsoft.EntityFrameworkCore.Query
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query
  nameWithType: Microsoft.EntityFrameworkCore.Query
  fullName: Microsoft.EntityFrameworkCore.Query
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.FindQuerySourcesRequiringMaterialization*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.FindQuerySourcesRequiringMaterialization
  isExternal: false
  name: FindQuerySourcesRequiringMaterialization
  nameWithType: RequiresMaterializationExpressionVisitor.FindQuerySourcesRequiringMaterialization
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.FindQuerySourcesRequiringMaterialization
- uid: QueryModel
  isExternal: true
  name: QueryModel
  nameWithType: QueryModel
  fullName: QueryModel
- uid: ISet{IQuerySource}
  commentId: '!:ISet{IQuerySource}'
  definition: ISet`1
  name: ISet<IQuerySource>
  nameWithType: ISet<IQuerySource>
  fullName: ISet<IQuerySource>
  nameWithType.vb: ISet(Of IQuerySource)
  fullname.vb: ISet(Of IQuerySource)
  name.vb: ISet(Of IQuerySource)
  spec.csharp:
  - uid: ISet`1
    name: ISet
    nameWithType: ISet
    fullName: ISet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: IQuerySource
    name: IQuerySource
    nameWithType: IQuerySource
    fullName: IQuerySource
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ISet`1
    name: ISet
    nameWithType: ISet
    fullName: ISet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: IQuerySource
    name: IQuerySource
    nameWithType: IQuerySource
    fullName: IQuerySource
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ISet`1
  isExternal: true
  name: ISet<>
  nameWithType: ISet<>
  fullName: ISet<>
  nameWithType.vb: ISet(Of )
  fullname.vb: ISet(Of )
  name.vb: ISet(Of )
  spec.csharp:
  - uid: ISet`1
    name: ISet
    nameWithType: ISet
    fullName: ISet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ISet`1
    name: ISet
    nameWithType: ISet
    fullName: ISet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.VisitQuerySourceReference*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.VisitQuerySourceReference
  isExternal: false
  name: VisitQuerySourceReference
  nameWithType: RequiresMaterializationExpressionVisitor.VisitQuerySourceReference
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.VisitQuerySourceReference
- uid: QuerySourceReferenceExpression
  isExternal: true
  name: QuerySourceReferenceExpression
  nameWithType: QuerySourceReferenceExpression
  fullName: QuerySourceReferenceExpression
- uid: System.Linq.Expressions.Expression
  commentId: T:System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: true
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: false
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.VisitMember*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.VisitMember
  isExternal: false
  name: VisitMember
  nameWithType: RequiresMaterializationExpressionVisitor.VisitMember
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.VisitMember
- uid: System.Linq.Expressions.MemberExpression
  commentId: T:System.Linq.Expressions.MemberExpression
  parent: System.Linq.Expressions
  isExternal: true
  name: MemberExpression
  nameWithType: MemberExpression
  fullName: System.Linq.Expressions.MemberExpression
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.VisitMethodCall*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.VisitMethodCall
  isExternal: false
  name: VisitMethodCall
  nameWithType: RequiresMaterializationExpressionVisitor.VisitMethodCall
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.VisitMethodCall
- uid: System.Linq.Expressions.MethodCallExpression
  commentId: T:System.Linq.Expressions.MethodCallExpression
  parent: System.Linq.Expressions
  isExternal: true
  name: MethodCallExpression
  nameWithType: MethodCallExpression
  fullName: System.Linq.Expressions.MethodCallExpression
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.VisitBinary*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.VisitBinary
  isExternal: false
  name: VisitBinary
  nameWithType: RequiresMaterializationExpressionVisitor.VisitBinary
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.VisitBinary
- uid: System.Linq.Expressions.BinaryExpression
  commentId: T:System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: true
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.VisitSubQuery*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.VisitSubQuery
  isExternal: false
  name: VisitSubQuery
  nameWithType: RequiresMaterializationExpressionVisitor.VisitSubQuery
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.VisitSubQuery
- uid: SubQueryExpression
  isExternal: true
  name: SubQueryExpression
  nameWithType: SubQueryExpression
  fullName: SubQueryExpression
