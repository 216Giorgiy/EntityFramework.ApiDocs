### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator
  commentId: T:Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator
  id: SqlServerDatabaseCreator
  parent: Microsoft.EntityFrameworkCore.Storage.Internal
  children:
  - Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator.#ctor(Microsoft.EntityFrameworkCore.Storage.Internal.ISqlServerConnection,Microsoft.EntityFrameworkCore.Migrations.IMigrationsModelDiffer,Microsoft.EntityFrameworkCore.Migrations.IMigrationsSqlGenerator,Microsoft.EntityFrameworkCore.Migrations.IMigrationCommandExecutor,Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder,Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory)
  - Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator.Create
  - Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator.CreateAsync(System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator.Delete
  - Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator.DeleteAsync(System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator.Exists
  - Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator.ExistsAsync(System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator.HasTables
  - Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator.HasTablesAsync(System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: SqlServerDatabaseCreator
  nameWithType: SqlServerDatabaseCreator
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer/Storage/Internal/SqlServerDatabaseCreator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: SqlServerDatabaseCreator
    path: src/Microsoft.EntityFrameworkCore.SqlServer/Storage/Internal/SqlServerDatabaseCreator.cs
    startLine: 20
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public class SqlServerDatabaseCreator : RelationalDatabaseCreator, IRelationalDatabaseCreator, IDatabaseCreator, IServiceInjectionSite'
    content.vb: >-
      Public Class SqlServerDatabaseCreator
          Inherits RelationalDatabaseCreator
          Implements IRelationalDatabaseCreator, IDatabaseCreator, IServiceInjectionSite
  inheritance:
  - System.Object
  - Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator
  implements:
  - Microsoft.EntityFrameworkCore.Storage.IRelationalDatabaseCreator
  - Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator
  - Microsoft.EntityFrameworkCore.Internal.IServiceInjectionSite
  inheritedMembers:
  - Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.Model
  - Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.Connection
  - Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.MigrationCommandExecutor
  - Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.ExecutionStrategyFactory
  - Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.Microsoft#EntityFrameworkCore#Internal#IServiceInjectionSite#InjectServices(System.IServiceProvider)
  - Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.CreateTables
  - Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.CreateTablesAsync(System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.GetCreateTablesCommands
  - Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.EnsureDeleted
  - Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.EnsureDeletedAsync(System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.EnsureCreated
  - Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.EnsureCreatedAsync(System.Threading.CancellationToken)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator.#ctor(Microsoft.EntityFrameworkCore.Storage.Internal.ISqlServerConnection,Microsoft.EntityFrameworkCore.Migrations.IMigrationsModelDiffer,Microsoft.EntityFrameworkCore.Migrations.IMigrationsSqlGenerator,Microsoft.EntityFrameworkCore.Migrations.IMigrationCommandExecutor,Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder,Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator.#ctor(Microsoft.EntityFrameworkCore.Storage.Internal.ISqlServerConnection,Microsoft.EntityFrameworkCore.Migrations.IMigrationsModelDiffer,Microsoft.EntityFrameworkCore.Migrations.IMigrationsSqlGenerator,Microsoft.EntityFrameworkCore.Migrations.IMigrationCommandExecutor,Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder,Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory)
  id: '#ctor(Microsoft.EntityFrameworkCore.Storage.Internal.ISqlServerConnection,Microsoft.EntityFrameworkCore.Migrations.IMigrationsModelDiffer,Microsoft.EntityFrameworkCore.Migrations.IMigrationsSqlGenerator,Microsoft.EntityFrameworkCore.Migrations.IMigrationCommandExecutor,Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder,Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory)'
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator
  langs:
  - csharp
  - vb
  name: SqlServerDatabaseCreator(ISqlServerConnection, IMigrationsModelDiffer, IMigrationsSqlGenerator, IMigrationCommandExecutor, IModel, IRawSqlCommandBuilder, IExecutionStrategyFactory)
  nameWithType: SqlServerDatabaseCreator.SqlServerDatabaseCreator(ISqlServerConnection, IMigrationsModelDiffer, IMigrationsSqlGenerator, IMigrationCommandExecutor, IModel, IRawSqlCommandBuilder, IExecutionStrategyFactory)
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator.SqlServerDatabaseCreator(Microsoft.EntityFrameworkCore.Storage.Internal.ISqlServerConnection, Microsoft.EntityFrameworkCore.Migrations.IMigrationsModelDiffer, Microsoft.EntityFrameworkCore.Migrations.IMigrationsSqlGenerator, Microsoft.EntityFrameworkCore.Migrations.IMigrationCommandExecutor, Microsoft.EntityFrameworkCore.Metadata.IModel, Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder, Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer/Storage/Internal/SqlServerDatabaseCreator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.SqlServer/Storage/Internal/SqlServerDatabaseCreator.cs
    startLine: 30
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public SqlServerDatabaseCreator(ISqlServerConnection connection, IMigrationsModelDiffer modelDiffer, IMigrationsSqlGenerator migrationsSqlGenerator, IMigrationCommandExecutor migrationCommandExecutor, IModel model, IRawSqlCommandBuilder rawSqlCommandBuilder, IExecutionStrategyFactory executionStrategyFactory)
    content.vb: Public Sub New(connection As ISqlServerConnection, modelDiffer As IMigrationsModelDiffer, migrationsSqlGenerator As IMigrationsSqlGenerator, migrationCommandExecutor As IMigrationCommandExecutor, model As IModel, rawSqlCommandBuilder As IRawSqlCommandBuilder, executionStrategyFactory As IExecutionStrategyFactory)
    parameters:
    - id: connection
      type: Microsoft.EntityFrameworkCore.Storage.Internal.ISqlServerConnection
    - id: modelDiffer
      type: Microsoft.EntityFrameworkCore.Migrations.IMigrationsModelDiffer
    - id: migrationsSqlGenerator
      type: Microsoft.EntityFrameworkCore.Migrations.IMigrationsSqlGenerator
    - id: migrationCommandExecutor
      type: Microsoft.EntityFrameworkCore.Migrations.IMigrationCommandExecutor
    - id: model
      type: Microsoft.EntityFrameworkCore.Metadata.IModel
    - id: rawSqlCommandBuilder
      type: Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder
    - id: executionStrategyFactory
      type: Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory
  overload: Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator.Create
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator.Create
  id: Create
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator
  langs:
  - csharp
  - vb
  name: Create()
  nameWithType: SqlServerDatabaseCreator.Create()
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator.Create()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer/Storage/Internal/SqlServerDatabaseCreator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Create
    path: src/Microsoft.EntityFrameworkCore.SqlServer/Storage/Internal/SqlServerDatabaseCreator.cs
    startLine: 51
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public override void Create()
    content.vb: Public Overrides Sub Create
  overridden: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.Create
  overload: Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator.Create*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator.CreateAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator.CreateAsync(System.Threading.CancellationToken)
  id: CreateAsync(System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator
  langs:
  - csharp
  - vb
  name: CreateAsync(CancellationToken)
  nameWithType: SqlServerDatabaseCreator.CreateAsync(CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator.CreateAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer/Storage/Internal/SqlServerDatabaseCreator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateAsync
    path: src/Microsoft.EntityFrameworkCore.SqlServer/Storage/Internal/SqlServerDatabaseCreator.cs
    startLine: 68
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public override Task CreateAsync(CancellationToken cancellationToken = null)
    content.vb: Public Overrides Function CreateAsync(cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
  overridden: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.CreateAsync(System.Threading.CancellationToken)
  overload: Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator.CreateAsync*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator.HasTables
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator.HasTables
  id: HasTables
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator
  langs:
  - csharp
  - vb
  name: HasTables()
  nameWithType: SqlServerDatabaseCreator.HasTables()
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator.HasTables()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer/Storage/Internal/SqlServerDatabaseCreator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: HasTables
    path: src/Microsoft.EntityFrameworkCore.SqlServer/Storage/Internal/SqlServerDatabaseCreator.cs
    startLine: 85
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected override bool HasTables()
    content.vb: Protected Overrides Function HasTables As Boolean
    return:
      type: System.Boolean
  overridden: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.HasTables
  overload: Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator.HasTables*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator.HasTablesAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator.HasTablesAsync(System.Threading.CancellationToken)
  id: HasTablesAsync(System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator
  langs:
  - csharp
  - vb
  name: HasTablesAsync(CancellationToken)
  nameWithType: SqlServerDatabaseCreator.HasTablesAsync(CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator.HasTablesAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer/Storage/Internal/SqlServerDatabaseCreator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: HasTablesAsync
    path: src/Microsoft.EntityFrameworkCore.SqlServer/Storage/Internal/SqlServerDatabaseCreator.cs
    startLine: 94
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected override Task<bool> HasTablesAsync(CancellationToken cancellationToken = null)
    content.vb: Protected Overrides Function HasTablesAsync(cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
  overridden: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.HasTablesAsync(System.Threading.CancellationToken)
  overload: Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator.HasTablesAsync*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator.Exists
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator.Exists
  id: Exists
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator
  langs:
  - csharp
  - vb
  name: Exists()
  nameWithType: SqlServerDatabaseCreator.Exists()
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator.Exists()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer/Storage/Internal/SqlServerDatabaseCreator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Exists
    path: src/Microsoft.EntityFrameworkCore.SqlServer/Storage/Internal/SqlServerDatabaseCreator.cs
    startLine: 114
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public override bool Exists()
    content.vb: Public Overrides Function Exists As Boolean
    return:
      type: System.Boolean
  overridden: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.Exists
  overload: Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator.Exists*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator.ExistsAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator.ExistsAsync(System.Threading.CancellationToken)
  id: ExistsAsync(System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator
  langs:
  - csharp
  - vb
  name: ExistsAsync(CancellationToken)
  nameWithType: SqlServerDatabaseCreator.ExistsAsync(CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator.ExistsAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer/Storage/Internal/SqlServerDatabaseCreator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ExistsAsync
    path: src/Microsoft.EntityFrameworkCore.SqlServer/Storage/Internal/SqlServerDatabaseCreator.cs
    startLine: 153
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public override Task<bool> ExistsAsync(CancellationToken cancellationToken = null)
    content.vb: Public Overrides Function ExistsAsync(cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
  overridden: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.ExistsAsync(System.Threading.CancellationToken)
  overload: Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator.ExistsAsync*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator.Delete
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator.Delete
  id: Delete
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator
  langs:
  - csharp
  - vb
  name: Delete()
  nameWithType: SqlServerDatabaseCreator.Delete()
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator.Delete()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer/Storage/Internal/SqlServerDatabaseCreator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Delete
    path: src/Microsoft.EntityFrameworkCore.SqlServer/Storage/Internal/SqlServerDatabaseCreator.cs
    startLine: 231
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public override void Delete()
    content.vb: Public Overrides Sub Delete
  overridden: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.Delete
  overload: Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator.Delete*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator.DeleteAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator.DeleteAsync(System.Threading.CancellationToken)
  id: DeleteAsync(System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator
  langs:
  - csharp
  - vb
  name: DeleteAsync(CancellationToken)
  nameWithType: SqlServerDatabaseCreator.DeleteAsync(CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator.DeleteAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer/Storage/Internal/SqlServerDatabaseCreator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: DeleteAsync
    path: src/Microsoft.EntityFrameworkCore.SqlServer/Storage/Internal/SqlServerDatabaseCreator.cs
    startLine: 246
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public override Task DeleteAsync(CancellationToken cancellationToken = null)
    content.vb: Public Overrides Function DeleteAsync(cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
  overridden: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.DeleteAsync(System.Threading.CancellationToken)
  overload: Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator.DeleteAsync*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.EntityFrameworkCore.Storage.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Storage.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Storage.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Storage.Internal
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator
  commentId: T:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: RelationalDatabaseCreator
  nameWithType: RelationalDatabaseCreator
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalDatabaseCreator
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IRelationalDatabaseCreator
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IRelationalDatabaseCreator
  nameWithType: IRelationalDatabaseCreator
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalDatabaseCreator
- uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IDatabaseCreator
  nameWithType: IDatabaseCreator
  fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator
- uid: Microsoft.EntityFrameworkCore.Internal.IServiceInjectionSite
  commentId: T:Microsoft.EntityFrameworkCore.Internal.IServiceInjectionSite
  parent: Microsoft.EntityFrameworkCore.Internal
  isExternal: false
  name: IServiceInjectionSite
  nameWithType: IServiceInjectionSite
  fullName: Microsoft.EntityFrameworkCore.Internal.IServiceInjectionSite
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.Model
  commentId: P:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.Model
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator
  isExternal: false
  name: Model
  nameWithType: RelationalDatabaseCreator.Model
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.Model
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.Connection
  commentId: P:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.Connection
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator
  isExternal: false
  name: Connection
  nameWithType: RelationalDatabaseCreator.Connection
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.Connection
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.MigrationCommandExecutor
  commentId: P:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.MigrationCommandExecutor
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator
  isExternal: false
  name: MigrationCommandExecutor
  nameWithType: RelationalDatabaseCreator.MigrationCommandExecutor
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.MigrationCommandExecutor
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.ExecutionStrategyFactory
  commentId: P:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.ExecutionStrategyFactory
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator
  isExternal: false
  name: ExecutionStrategyFactory
  nameWithType: RelationalDatabaseCreator.ExecutionStrategyFactory
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.ExecutionStrategyFactory
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.Microsoft#EntityFrameworkCore#Internal#IServiceInjectionSite#InjectServices(System.IServiceProvider)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.Microsoft#EntityFrameworkCore#Internal#IServiceInjectionSite#InjectServices(System.IServiceProvider)
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator
  isExternal: true
  name: IServiceInjectionSite.InjectServices(IServiceProvider)
  nameWithType: RelationalDatabaseCreator.IServiceInjectionSite.InjectServices(IServiceProvider)
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.Microsoft.EntityFrameworkCore.Internal.IServiceInjectionSite.InjectServices(System.IServiceProvider)
  nameWithType.vb: RelationalDatabaseCreator.Microsoft.EntityFrameworkCore.Internal.IServiceInjectionSite.InjectServices(IServiceProvider)
  name.vb: Microsoft.EntityFrameworkCore.Internal.IServiceInjectionSite.InjectServices(IServiceProvider)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.Microsoft#EntityFrameworkCore#Internal#IServiceInjectionSite#InjectServices(System.IServiceProvider)
    name: IServiceInjectionSite.InjectServices
    nameWithType: RelationalDatabaseCreator.IServiceInjectionSite.InjectServices
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.Microsoft.EntityFrameworkCore.Internal.IServiceInjectionSite.InjectServices
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.Microsoft#EntityFrameworkCore#Internal#IServiceInjectionSite#InjectServices(System.IServiceProvider)
    name: Microsoft.EntityFrameworkCore.Internal.IServiceInjectionSite.InjectServices
    nameWithType: RelationalDatabaseCreator.Microsoft.EntityFrameworkCore.Internal.IServiceInjectionSite.InjectServices
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.Microsoft.EntityFrameworkCore.Internal.IServiceInjectionSite.InjectServices
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.CreateTables
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.CreateTables
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator
  isExternal: false
  name: CreateTables()
  nameWithType: RelationalDatabaseCreator.CreateTables()
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.CreateTables()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.CreateTables
    name: CreateTables
    nameWithType: RelationalDatabaseCreator.CreateTables
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.CreateTables
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.CreateTables
    name: CreateTables
    nameWithType: RelationalDatabaseCreator.CreateTables
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.CreateTables
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.CreateTablesAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.CreateTablesAsync(System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator
  isExternal: true
  name: CreateTablesAsync(CancellationToken)
  nameWithType: RelationalDatabaseCreator.CreateTablesAsync(CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.CreateTablesAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.CreateTablesAsync(System.Threading.CancellationToken)
    name: CreateTablesAsync
    nameWithType: RelationalDatabaseCreator.CreateTablesAsync
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.CreateTablesAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.CreateTablesAsync(System.Threading.CancellationToken)
    name: CreateTablesAsync
    nameWithType: RelationalDatabaseCreator.CreateTablesAsync
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.CreateTablesAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.GetCreateTablesCommands
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.GetCreateTablesCommands
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator
  isExternal: false
  name: GetCreateTablesCommands()
  nameWithType: RelationalDatabaseCreator.GetCreateTablesCommands()
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.GetCreateTablesCommands()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.GetCreateTablesCommands
    name: GetCreateTablesCommands
    nameWithType: RelationalDatabaseCreator.GetCreateTablesCommands
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.GetCreateTablesCommands
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.GetCreateTablesCommands
    name: GetCreateTablesCommands
    nameWithType: RelationalDatabaseCreator.GetCreateTablesCommands
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.GetCreateTablesCommands
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.EnsureDeleted
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.EnsureDeleted
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator
  isExternal: false
  name: EnsureDeleted()
  nameWithType: RelationalDatabaseCreator.EnsureDeleted()
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.EnsureDeleted()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.EnsureDeleted
    name: EnsureDeleted
    nameWithType: RelationalDatabaseCreator.EnsureDeleted
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.EnsureDeleted
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.EnsureDeleted
    name: EnsureDeleted
    nameWithType: RelationalDatabaseCreator.EnsureDeleted
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.EnsureDeleted
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.EnsureDeletedAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.EnsureDeletedAsync(System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator
  isExternal: true
  name: EnsureDeletedAsync(CancellationToken)
  nameWithType: RelationalDatabaseCreator.EnsureDeletedAsync(CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.EnsureDeletedAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.EnsureDeletedAsync(System.Threading.CancellationToken)
    name: EnsureDeletedAsync
    nameWithType: RelationalDatabaseCreator.EnsureDeletedAsync
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.EnsureDeletedAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.EnsureDeletedAsync(System.Threading.CancellationToken)
    name: EnsureDeletedAsync
    nameWithType: RelationalDatabaseCreator.EnsureDeletedAsync
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.EnsureDeletedAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.EnsureCreated
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.EnsureCreated
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator
  isExternal: false
  name: EnsureCreated()
  nameWithType: RelationalDatabaseCreator.EnsureCreated()
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.EnsureCreated()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.EnsureCreated
    name: EnsureCreated
    nameWithType: RelationalDatabaseCreator.EnsureCreated
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.EnsureCreated
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.EnsureCreated
    name: EnsureCreated
    nameWithType: RelationalDatabaseCreator.EnsureCreated
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.EnsureCreated
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.EnsureCreatedAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.EnsureCreatedAsync(System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator
  isExternal: true
  name: EnsureCreatedAsync(CancellationToken)
  nameWithType: RelationalDatabaseCreator.EnsureCreatedAsync(CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.EnsureCreatedAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.EnsureCreatedAsync(System.Threading.CancellationToken)
    name: EnsureCreatedAsync
    nameWithType: RelationalDatabaseCreator.EnsureCreatedAsync
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.EnsureCreatedAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.EnsureCreatedAsync(System.Threading.CancellationToken)
    name: EnsureCreatedAsync
    nameWithType: RelationalDatabaseCreator.EnsureCreatedAsync
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.EnsureCreatedAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Storage
  commentId: N:Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Storage
  nameWithType: Microsoft.EntityFrameworkCore.Storage
  fullName: Microsoft.EntityFrameworkCore.Storage
- uid: Microsoft.EntityFrameworkCore.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Internal
  fullName: Microsoft.EntityFrameworkCore.Internal
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator.#ctor*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator.#ctor
  isExternal: false
  name: SqlServerDatabaseCreator
  nameWithType: SqlServerDatabaseCreator.SqlServerDatabaseCreator
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator.SqlServerDatabaseCreator
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.ISqlServerConnection
  commentId: T:Microsoft.EntityFrameworkCore.Storage.Internal.ISqlServerConnection
  parent: Microsoft.EntityFrameworkCore.Storage.Internal
  isExternal: false
  name: ISqlServerConnection
  nameWithType: ISqlServerConnection
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.ISqlServerConnection
- uid: Microsoft.EntityFrameworkCore.Migrations.IMigrationsModelDiffer
  commentId: T:Microsoft.EntityFrameworkCore.Migrations.IMigrationsModelDiffer
  parent: Microsoft.EntityFrameworkCore.Migrations
  isExternal: false
  name: IMigrationsModelDiffer
  nameWithType: IMigrationsModelDiffer
  fullName: Microsoft.EntityFrameworkCore.Migrations.IMigrationsModelDiffer
- uid: Microsoft.EntityFrameworkCore.Migrations.IMigrationsSqlGenerator
  commentId: T:Microsoft.EntityFrameworkCore.Migrations.IMigrationsSqlGenerator
  parent: Microsoft.EntityFrameworkCore.Migrations
  isExternal: false
  name: IMigrationsSqlGenerator
  nameWithType: IMigrationsSqlGenerator
  fullName: Microsoft.EntityFrameworkCore.Migrations.IMigrationsSqlGenerator
- uid: Microsoft.EntityFrameworkCore.Migrations.IMigrationCommandExecutor
  commentId: T:Microsoft.EntityFrameworkCore.Migrations.IMigrationCommandExecutor
  parent: Microsoft.EntityFrameworkCore.Migrations
  isExternal: false
  name: IMigrationCommandExecutor
  nameWithType: IMigrationCommandExecutor
  fullName: Microsoft.EntityFrameworkCore.Migrations.IMigrationCommandExecutor
- uid: Microsoft.EntityFrameworkCore.Metadata.IModel
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IModel
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IModel
  nameWithType: IModel
  fullName: Microsoft.EntityFrameworkCore.Metadata.IModel
- uid: Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IRawSqlCommandBuilder
  nameWithType: IRawSqlCommandBuilder
  fullName: Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder
- uid: Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IExecutionStrategyFactory
  nameWithType: IExecutionStrategyFactory
  fullName: Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory
- uid: Microsoft.EntityFrameworkCore.Migrations
  commentId: N:Microsoft.EntityFrameworkCore.Migrations
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Migrations
  nameWithType: Microsoft.EntityFrameworkCore.Migrations
  fullName: Microsoft.EntityFrameworkCore.Migrations
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.Create
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.Create
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator
  isExternal: false
  name: Create()
  nameWithType: RelationalDatabaseCreator.Create()
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.Create()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.Create
    name: Create
    nameWithType: RelationalDatabaseCreator.Create
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.Create
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.Create
    name: Create
    nameWithType: RelationalDatabaseCreator.Create
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.Create
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator.Create*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator.Create
  isExternal: false
  name: Create
  nameWithType: SqlServerDatabaseCreator.Create
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator.Create
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.CreateAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.CreateAsync(System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator
  isExternal: true
  name: CreateAsync(CancellationToken)
  nameWithType: RelationalDatabaseCreator.CreateAsync(CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.CreateAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.CreateAsync(System.Threading.CancellationToken)
    name: CreateAsync
    nameWithType: RelationalDatabaseCreator.CreateAsync
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.CreateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.CreateAsync(System.Threading.CancellationToken)
    name: CreateAsync
    nameWithType: RelationalDatabaseCreator.CreateAsync
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.CreateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator.CreateAsync*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator.CreateAsync
  isExternal: false
  name: CreateAsync
  nameWithType: SqlServerDatabaseCreator.CreateAsync
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator.CreateAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.HasTables
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.HasTables
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator
  isExternal: false
  name: HasTables()
  nameWithType: RelationalDatabaseCreator.HasTables()
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.HasTables()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.HasTables
    name: HasTables
    nameWithType: RelationalDatabaseCreator.HasTables
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.HasTables
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.HasTables
    name: HasTables
    nameWithType: RelationalDatabaseCreator.HasTables
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.HasTables
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator.HasTables*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator.HasTables
  isExternal: false
  name: HasTables
  nameWithType: SqlServerDatabaseCreator.HasTables
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator.HasTables
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.HasTablesAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.HasTablesAsync(System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator
  isExternal: true
  name: HasTablesAsync(CancellationToken)
  nameWithType: RelationalDatabaseCreator.HasTablesAsync(CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.HasTablesAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.HasTablesAsync(System.Threading.CancellationToken)
    name: HasTablesAsync
    nameWithType: RelationalDatabaseCreator.HasTablesAsync
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.HasTablesAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.HasTablesAsync(System.Threading.CancellationToken)
    name: HasTablesAsync
    nameWithType: RelationalDatabaseCreator.HasTablesAsync
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.HasTablesAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator.HasTablesAsync*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator.HasTablesAsync
  isExternal: false
  name: HasTablesAsync
  nameWithType: SqlServerDatabaseCreator.HasTablesAsync
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator.HasTablesAsync
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullname.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.Exists
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.Exists
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator
  isExternal: false
  name: Exists()
  nameWithType: RelationalDatabaseCreator.Exists()
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.Exists()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.Exists
    name: Exists
    nameWithType: RelationalDatabaseCreator.Exists
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.Exists
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.Exists
    name: Exists
    nameWithType: RelationalDatabaseCreator.Exists
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.Exists
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator.Exists*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator.Exists
  isExternal: false
  name: Exists
  nameWithType: SqlServerDatabaseCreator.Exists
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator.Exists
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.ExistsAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.ExistsAsync(System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator
  isExternal: true
  name: ExistsAsync(CancellationToken)
  nameWithType: RelationalDatabaseCreator.ExistsAsync(CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.ExistsAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.ExistsAsync(System.Threading.CancellationToken)
    name: ExistsAsync
    nameWithType: RelationalDatabaseCreator.ExistsAsync
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.ExistsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.ExistsAsync(System.Threading.CancellationToken)
    name: ExistsAsync
    nameWithType: RelationalDatabaseCreator.ExistsAsync
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.ExistsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator.ExistsAsync*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator.ExistsAsync
  isExternal: false
  name: ExistsAsync
  nameWithType: SqlServerDatabaseCreator.ExistsAsync
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator.ExistsAsync
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.Delete
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.Delete
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator
  isExternal: false
  name: Delete()
  nameWithType: RelationalDatabaseCreator.Delete()
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.Delete()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.Delete
    name: Delete
    nameWithType: RelationalDatabaseCreator.Delete
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.Delete
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.Delete
    name: Delete
    nameWithType: RelationalDatabaseCreator.Delete
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.Delete
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator.Delete*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator.Delete
  isExternal: false
  name: Delete
  nameWithType: SqlServerDatabaseCreator.Delete
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator.Delete
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.DeleteAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.DeleteAsync(System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator
  isExternal: true
  name: DeleteAsync(CancellationToken)
  nameWithType: RelationalDatabaseCreator.DeleteAsync(CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.DeleteAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.DeleteAsync(System.Threading.CancellationToken)
    name: DeleteAsync
    nameWithType: RelationalDatabaseCreator.DeleteAsync
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.DeleteAsync(System.Threading.CancellationToken)
    name: DeleteAsync
    nameWithType: RelationalDatabaseCreator.DeleteAsync
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator.DeleteAsync*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator.DeleteAsync
  isExternal: false
  name: DeleteAsync
  nameWithType: SqlServerDatabaseCreator.DeleteAsync
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDatabaseCreator.DeleteAsync
