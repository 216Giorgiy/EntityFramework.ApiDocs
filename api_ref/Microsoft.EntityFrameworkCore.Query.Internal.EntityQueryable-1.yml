### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1
  commentId: T:Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1
  id: EntityQueryable`1
  parent: Microsoft.EntityFrameworkCore.Query.Internal
  children:
  - Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1.#ctor(Microsoft.EntityFrameworkCore.Query.Internal.IAsyncQueryProvider)
  - Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1.#ctor(Microsoft.EntityFrameworkCore.Query.Internal.IAsyncQueryProvider,System.Linq.Expressions.Expression)
  langs:
  - csharp
  - vb
  name: EntityQueryable<TResult>
  nameWithType: EntityQueryable<TResult>
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable<TResult>
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/EntityQueryable`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: EntityQueryable
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/EntityQueryable`.cs
    startLine: 15
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public class EntityQueryable<TResult> : QueryableBase<TResult>, IAsyncEnumerable<TResult>'
    content.vb: >-
      Public Class EntityQueryable(Of TResult)
          Inherits QueryableBase(Of TResult)
          Implements IAsyncEnumerable(Of TResult)
    typeParameters:
    - id: TResult
  inheritance:
  - System.Object
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  nameWithType.vb: EntityQueryable(Of TResult)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable(Of TResult)
  name.vb: EntityQueryable(Of TResult)
- uid: Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1.#ctor(Microsoft.EntityFrameworkCore.Query.Internal.IAsyncQueryProvider)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1.#ctor(Microsoft.EntityFrameworkCore.Query.Internal.IAsyncQueryProvider)
  id: '#ctor(Microsoft.EntityFrameworkCore.Query.Internal.IAsyncQueryProvider)'
  parent: Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1
  langs:
  - csharp
  - vb
  name: EntityQueryable(IAsyncQueryProvider)
  nameWithType: EntityQueryable<TResult>.EntityQueryable(IAsyncQueryProvider)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable<TResult>.EntityQueryable(Microsoft.EntityFrameworkCore.Query.Internal.IAsyncQueryProvider)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/EntityQueryable`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/EntityQueryable`.cs
    startLine: 21
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public EntityQueryable(IAsyncQueryProvider provider)
    content.vb: Public Sub New(provider As IAsyncQueryProvider)
    parameters:
    - id: provider
      type: Microsoft.EntityFrameworkCore.Query.Internal.IAsyncQueryProvider
  nameWithType.vb: EntityQueryable(Of TResult).EntityQueryable(IAsyncQueryProvider)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable(Of TResult).EntityQueryable(Microsoft.EntityFrameworkCore.Query.Internal.IAsyncQueryProvider)
- uid: Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1.#ctor(Microsoft.EntityFrameworkCore.Query.Internal.IAsyncQueryProvider,System.Linq.Expressions.Expression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1.#ctor(Microsoft.EntityFrameworkCore.Query.Internal.IAsyncQueryProvider,System.Linq.Expressions.Expression)
  id: '#ctor(Microsoft.EntityFrameworkCore.Query.Internal.IAsyncQueryProvider,System.Linq.Expressions.Expression)'
  parent: Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1
  langs:
  - csharp
  - vb
  name: EntityQueryable(IAsyncQueryProvider, Expression)
  nameWithType: EntityQueryable<TResult>.EntityQueryable(IAsyncQueryProvider, Expression)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable<TResult>.EntityQueryable(Microsoft.EntityFrameworkCore.Query.Internal.IAsyncQueryProvider, System.Linq.Expressions.Expression)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/EntityQueryable`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/EntityQueryable`.cs
    startLine: 30
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public EntityQueryable(IAsyncQueryProvider provider, Expression expression)
    content.vb: Public Sub New(provider As IAsyncQueryProvider, expression As Expression)
    parameters:
    - id: provider
      type: Microsoft.EntityFrameworkCore.Query.Internal.IAsyncQueryProvider
    - id: expression
      type: System.Linq.Expressions.Expression
  nameWithType.vb: EntityQueryable(Of TResult).EntityQueryable(IAsyncQueryProvider, Expression)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable(Of TResult).EntityQueryable(Microsoft.EntityFrameworkCore.Query.Internal.IAsyncQueryProvider, System.Linq.Expressions.Expression)
references:
- uid: Microsoft.EntityFrameworkCore.Query.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Query.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Query.Internal
  fullName: Microsoft.EntityFrameworkCore.Query.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<EntityQueryable<TResult>, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<EntityQueryable<TResult>, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable<TResult>, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of EntityQueryable(Of TResult), TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable(Of TResult), TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of EntityQueryable(Of TResult), TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<EntityQueryable<TResult>, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<EntityQueryable<TResult>, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable<TResult>, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of EntityQueryable(Of TResult), TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of EntityQueryable(Of TResult), TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable(Of TResult), TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: Microsoft.EntityFrameworkCore.Query.Internal.IAsyncQueryProvider
  commentId: T:Microsoft.EntityFrameworkCore.Query.Internal.IAsyncQueryProvider
  parent: Microsoft.EntityFrameworkCore.Query.Internal
  isExternal: false
  name: IAsyncQueryProvider
  nameWithType: IAsyncQueryProvider
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.IAsyncQueryProvider
- uid: System.Linq.Expressions.Expression
  commentId: T:System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: true
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: false
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
