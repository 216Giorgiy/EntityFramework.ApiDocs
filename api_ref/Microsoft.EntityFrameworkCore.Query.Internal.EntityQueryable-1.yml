### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1
  commentId: T:Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1
  id: EntityQueryable`1
  parent: Microsoft.EntityFrameworkCore.Query.Internal
  children:
  - Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1.#ctor(Microsoft.EntityFrameworkCore.Query.Internal.IAsyncQueryProvider)
  - Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1.#ctor(Microsoft.EntityFrameworkCore.Query.Internal.IAsyncQueryProvider,System.Linq.Expressions.Expression)
  langs:
  - csharp
  - vb
  name: EntityQueryable<TResult>
  nameWithType: EntityQueryable<TResult>
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable<TResult>
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/EntityQueryable`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: EntityQueryable
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/EntityQueryable`.cs
    startLine: 15
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public class EntityQueryable<TResult> : QueryableBase<TResult>, IAsyncEnumerable<TResult>'
    content.vb: >-
      Public Class EntityQueryable(Of TResult)
          Inherits QueryableBase(Of TResult)
          Implements IAsyncEnumerable(Of TResult)
    typeParameters:
    - id: TResult
  inheritance:
  - System.Object
  nameWithType.vb: EntityQueryable(Of TResult)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable(Of TResult)
  name.vb: EntityQueryable(Of TResult)
- uid: Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1.#ctor(Microsoft.EntityFrameworkCore.Query.Internal.IAsyncQueryProvider)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1.#ctor(Microsoft.EntityFrameworkCore.Query.Internal.IAsyncQueryProvider)
  id: '#ctor(Microsoft.EntityFrameworkCore.Query.Internal.IAsyncQueryProvider)'
  parent: Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1
  langs:
  - csharp
  - vb
  name: EntityQueryable(IAsyncQueryProvider)
  nameWithType: EntityQueryable<TResult>.EntityQueryable(IAsyncQueryProvider)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable<TResult>.EntityQueryable(Microsoft.EntityFrameworkCore.Query.Internal.IAsyncQueryProvider)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/EntityQueryable`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/EntityQueryable`.cs
    startLine: 21
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public EntityQueryable(IAsyncQueryProvider provider)
    content.vb: Public Sub New(provider As IAsyncQueryProvider)
    parameters:
    - id: provider
      type: Microsoft.EntityFrameworkCore.Query.Internal.IAsyncQueryProvider
  overload: Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1.#ctor*
  nameWithType.vb: EntityQueryable(Of TResult).EntityQueryable(IAsyncQueryProvider)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable(Of TResult).EntityQueryable(Microsoft.EntityFrameworkCore.Query.Internal.IAsyncQueryProvider)
- uid: Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1.#ctor(Microsoft.EntityFrameworkCore.Query.Internal.IAsyncQueryProvider,System.Linq.Expressions.Expression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1.#ctor(Microsoft.EntityFrameworkCore.Query.Internal.IAsyncQueryProvider,System.Linq.Expressions.Expression)
  id: '#ctor(Microsoft.EntityFrameworkCore.Query.Internal.IAsyncQueryProvider,System.Linq.Expressions.Expression)'
  parent: Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1
  langs:
  - csharp
  - vb
  name: EntityQueryable(IAsyncQueryProvider, Expression)
  nameWithType: EntityQueryable<TResult>.EntityQueryable(IAsyncQueryProvider, Expression)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable<TResult>.EntityQueryable(Microsoft.EntityFrameworkCore.Query.Internal.IAsyncQueryProvider, System.Linq.Expressions.Expression)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/EntityQueryable`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/EntityQueryable`.cs
    startLine: 30
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public EntityQueryable(IAsyncQueryProvider provider, Expression expression)
    content.vb: Public Sub New(provider As IAsyncQueryProvider, expression As Expression)
    parameters:
    - id: provider
      type: Microsoft.EntityFrameworkCore.Query.Internal.IAsyncQueryProvider
    - id: expression
      type: System.Linq.Expressions.Expression
  overload: Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1.#ctor*
  nameWithType.vb: EntityQueryable(Of TResult).EntityQueryable(IAsyncQueryProvider, Expression)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable(Of TResult).EntityQueryable(Microsoft.EntityFrameworkCore.Query.Internal.IAsyncQueryProvider, System.Linq.Expressions.Expression)
references:
- uid: Microsoft.EntityFrameworkCore.Query.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Query.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Query.Internal
  fullName: Microsoft.EntityFrameworkCore.Query.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1.#ctor*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1.#ctor
  isExternal: false
  name: EntityQueryable
  nameWithType: EntityQueryable<TResult>.EntityQueryable
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable<TResult>.EntityQueryable
  nameWithType.vb: EntityQueryable(Of TResult).EntityQueryable
  fullname.vb: Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable(Of TResult).EntityQueryable
- uid: Microsoft.EntityFrameworkCore.Query.Internal.IAsyncQueryProvider
  commentId: T:Microsoft.EntityFrameworkCore.Query.Internal.IAsyncQueryProvider
  parent: Microsoft.EntityFrameworkCore.Query.Internal
  isExternal: false
  name: IAsyncQueryProvider
  nameWithType: IAsyncQueryProvider
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.IAsyncQueryProvider
- uid: System.Linq.Expressions.Expression
  commentId: T:System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: true
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: false
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
