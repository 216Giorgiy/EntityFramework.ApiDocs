### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Metadata.Sequence
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Sequence
  id: Sequence
  parent: Microsoft.EntityFrameworkCore.Metadata
  children:
  - Microsoft.EntityFrameworkCore.Metadata.Sequence.ClrType
  - Microsoft.EntityFrameworkCore.Metadata.Sequence.DefaultClrType
  - Microsoft.EntityFrameworkCore.Metadata.Sequence.DefaultIncrementBy
  - Microsoft.EntityFrameworkCore.Metadata.Sequence.DefaultIsCyclic
  - Microsoft.EntityFrameworkCore.Metadata.Sequence.DefaultMaxValue
  - Microsoft.EntityFrameworkCore.Metadata.Sequence.DefaultMinValue
  - Microsoft.EntityFrameworkCore.Metadata.Sequence.DefaultStartValue
  - Microsoft.EntityFrameworkCore.Metadata.Sequence.FindSequence(Microsoft.EntityFrameworkCore.Metadata.IModel,System.String,System.String,System.String)
  - Microsoft.EntityFrameworkCore.Metadata.Sequence.FindSequence(Microsoft.EntityFrameworkCore.Metadata.IMutableModel,System.String,System.String,System.String)
  - Microsoft.EntityFrameworkCore.Metadata.Sequence.GetOrAddSequence(Microsoft.EntityFrameworkCore.Metadata.IMutableModel,System.String,System.String,System.String)
  - Microsoft.EntityFrameworkCore.Metadata.Sequence.GetSequences(Microsoft.EntityFrameworkCore.Metadata.IModel,System.String)
  - Microsoft.EntityFrameworkCore.Metadata.Sequence.IncrementBy
  - Microsoft.EntityFrameworkCore.Metadata.Sequence.IsCyclic
  - Microsoft.EntityFrameworkCore.Metadata.Sequence.MaxValue
  - Microsoft.EntityFrameworkCore.Metadata.Sequence.Microsoft#EntityFrameworkCore#Metadata#ISequence#ClrType
  - Microsoft.EntityFrameworkCore.Metadata.Sequence.Microsoft#EntityFrameworkCore#Metadata#ISequence#IncrementBy
  - Microsoft.EntityFrameworkCore.Metadata.Sequence.Microsoft#EntityFrameworkCore#Metadata#ISequence#IsCyclic
  - Microsoft.EntityFrameworkCore.Metadata.Sequence.Microsoft#EntityFrameworkCore#Metadata#ISequence#MaxValue
  - Microsoft.EntityFrameworkCore.Metadata.Sequence.Microsoft#EntityFrameworkCore#Metadata#ISequence#MinValue
  - Microsoft.EntityFrameworkCore.Metadata.Sequence.Microsoft#EntityFrameworkCore#Metadata#ISequence#Model
  - Microsoft.EntityFrameworkCore.Metadata.Sequence.Microsoft#EntityFrameworkCore#Metadata#ISequence#StartValue
  - Microsoft.EntityFrameworkCore.Metadata.Sequence.MinValue
  - Microsoft.EntityFrameworkCore.Metadata.Sequence.Model
  - Microsoft.EntityFrameworkCore.Metadata.Sequence.Name
  - Microsoft.EntityFrameworkCore.Metadata.Sequence.Schema
  - Microsoft.EntityFrameworkCore.Metadata.Sequence.StartValue
  - Microsoft.EntityFrameworkCore.Metadata.Sequence.SupportedTypes
  langs:
  - csharp
  - vb
  name: Sequence
  nameWithType: Sequence
  fullName: Microsoft.EntityFrameworkCore.Metadata.Sequence
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Sequence.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Sequence
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Sequence.cs
    startLine: 15
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata
  syntax:
    content: 'public class Sequence : ISequence'
    content.vb: >-
      Public Class Sequence
          Implements ISequence
  inheritance:
  - System.Object
  implements:
  - Microsoft.EntityFrameworkCore.Metadata.ISequence
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Metadata.Sequence.DefaultClrType
  commentId: F:Microsoft.EntityFrameworkCore.Metadata.Sequence.DefaultClrType
  id: DefaultClrType
  parent: Microsoft.EntityFrameworkCore.Metadata.Sequence
  langs:
  - csharp
  - vb
  name: DefaultClrType
  nameWithType: Sequence.DefaultClrType
  fullName: Microsoft.EntityFrameworkCore.Metadata.Sequence.DefaultClrType
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Sequence.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: DefaultClrType
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Sequence.cs
    startLine: 20
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata
  syntax:
    content: public static readonly Type DefaultClrType
    content.vb: Public Shared ReadOnly DefaultClrType As Type
    return:
      type: System.Type
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.Sequence.DefaultIncrementBy
  commentId: F:Microsoft.EntityFrameworkCore.Metadata.Sequence.DefaultIncrementBy
  id: DefaultIncrementBy
  parent: Microsoft.EntityFrameworkCore.Metadata.Sequence
  langs:
  - csharp
  - vb
  name: DefaultIncrementBy
  nameWithType: Sequence.DefaultIncrementBy
  fullName: Microsoft.EntityFrameworkCore.Metadata.Sequence.DefaultIncrementBy
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Sequence.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: DefaultIncrementBy
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Sequence.cs
    startLine: 21
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata
  syntax:
    content: public const int DefaultIncrementBy = 1
    content.vb: Public Const DefaultIncrementBy As Integer = 1
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.EntityFrameworkCore.Metadata.Sequence.DefaultStartValue
  commentId: F:Microsoft.EntityFrameworkCore.Metadata.Sequence.DefaultStartValue
  id: DefaultStartValue
  parent: Microsoft.EntityFrameworkCore.Metadata.Sequence
  langs:
  - csharp
  - vb
  name: DefaultStartValue
  nameWithType: Sequence.DefaultStartValue
  fullName: Microsoft.EntityFrameworkCore.Metadata.Sequence.DefaultStartValue
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Sequence.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: DefaultStartValue
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Sequence.cs
    startLine: 22
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata
  syntax:
    content: public const int DefaultStartValue = 1
    content.vb: Public Const DefaultStartValue As Integer = 1
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.EntityFrameworkCore.Metadata.Sequence.DefaultMaxValue
  commentId: F:Microsoft.EntityFrameworkCore.Metadata.Sequence.DefaultMaxValue
  id: DefaultMaxValue
  parent: Microsoft.EntityFrameworkCore.Metadata.Sequence
  langs:
  - csharp
  - vb
  name: DefaultMaxValue
  nameWithType: Sequence.DefaultMaxValue
  fullName: Microsoft.EntityFrameworkCore.Metadata.Sequence.DefaultMaxValue
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Sequence.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: DefaultMaxValue
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Sequence.cs
    startLine: 24
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata
  syntax:
    content: public static readonly long ? DefaultMaxValue
    content.vb: Public Shared ReadOnly DefaultMaxValue As Long?
    return:
      type: System.Nullable{System.Int64}
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.Sequence.DefaultMinValue
  commentId: F:Microsoft.EntityFrameworkCore.Metadata.Sequence.DefaultMinValue
  id: DefaultMinValue
  parent: Microsoft.EntityFrameworkCore.Metadata.Sequence
  langs:
  - csharp
  - vb
  name: DefaultMinValue
  nameWithType: Sequence.DefaultMinValue
  fullName: Microsoft.EntityFrameworkCore.Metadata.Sequence.DefaultMinValue
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Sequence.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: DefaultMinValue
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Sequence.cs
    startLine: 25
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata
  syntax:
    content: public static readonly long ? DefaultMinValue
    content.vb: Public Shared ReadOnly DefaultMinValue As Long?
    return:
      type: System.Nullable{System.Int64}
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.Sequence.DefaultIsCyclic
  commentId: F:Microsoft.EntityFrameworkCore.Metadata.Sequence.DefaultIsCyclic
  id: DefaultIsCyclic
  parent: Microsoft.EntityFrameworkCore.Metadata.Sequence
  langs:
  - csharp
  - vb
  name: DefaultIsCyclic
  nameWithType: Sequence.DefaultIsCyclic
  fullName: Microsoft.EntityFrameworkCore.Metadata.Sequence.DefaultIsCyclic
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Sequence.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: DefaultIsCyclic
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Sequence.cs
    startLine: 26
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata
  syntax:
    content: public static readonly bool DefaultIsCyclic
    content.vb: Public Shared ReadOnly DefaultIsCyclic As Boolean
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.Sequence.GetOrAddSequence(Microsoft.EntityFrameworkCore.Metadata.IMutableModel,System.String,System.String,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Sequence.GetOrAddSequence(Microsoft.EntityFrameworkCore.Metadata.IMutableModel,System.String,System.String,System.String)
  id: GetOrAddSequence(Microsoft.EntityFrameworkCore.Metadata.IMutableModel,System.String,System.String,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Sequence
  langs:
  - csharp
  - vb
  name: GetOrAddSequence(IMutableModel, String, String, String)
  nameWithType: Sequence.GetOrAddSequence(IMutableModel, String, String, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Sequence.GetOrAddSequence(Microsoft.EntityFrameworkCore.Metadata.IMutableModel, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Sequence.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetOrAddSequence
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Sequence.cs
    startLine: 56
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata
  syntax:
    content: public static Sequence GetOrAddSequence(IMutableModel model, string annotationPrefix, string name, string schema = null)
    content.vb: Public Shared Function GetOrAddSequence(model As IMutableModel, annotationPrefix As String, name As String, schema As String = Nothing) As Sequence
    parameters:
    - id: model
      type: Microsoft.EntityFrameworkCore.Metadata.IMutableModel
    - id: annotationPrefix
      type: System.String
    - id: name
      type: System.String
    - id: schema
      type: System.String
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Sequence
  overload: Microsoft.EntityFrameworkCore.Metadata.Sequence.GetOrAddSequence*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Metadata.Sequence.FindSequence(Microsoft.EntityFrameworkCore.Metadata.IMutableModel,System.String,System.String,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Sequence.FindSequence(Microsoft.EntityFrameworkCore.Metadata.IMutableModel,System.String,System.String,System.String)
  id: FindSequence(Microsoft.EntityFrameworkCore.Metadata.IMutableModel,System.String,System.String,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Sequence
  langs:
  - csharp
  - vb
  name: FindSequence(IMutableModel, String, String, String)
  nameWithType: Sequence.FindSequence(IMutableModel, String, String, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Sequence.FindSequence(Microsoft.EntityFrameworkCore.Metadata.IMutableModel, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Sequence.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: FindSequence
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Sequence.cs
    startLine: 66
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata
  syntax:
    content: public static Sequence FindSequence(IMutableModel model, string annotationPrefix, string name, string schema = null)
    content.vb: Public Shared Function FindSequence(model As IMutableModel, annotationPrefix As String, name As String, schema As String = Nothing) As Sequence
    parameters:
    - id: model
      type: Microsoft.EntityFrameworkCore.Metadata.IMutableModel
    - id: annotationPrefix
      type: System.String
    - id: name
      type: System.String
    - id: schema
      type: System.String
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Sequence
  overload: Microsoft.EntityFrameworkCore.Metadata.Sequence.FindSequence*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Metadata.Sequence.FindSequence(Microsoft.EntityFrameworkCore.Metadata.IModel,System.String,System.String,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Sequence.FindSequence(Microsoft.EntityFrameworkCore.Metadata.IModel,System.String,System.String,System.String)
  id: FindSequence(Microsoft.EntityFrameworkCore.Metadata.IModel,System.String,System.String,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Sequence
  langs:
  - csharp
  - vb
  name: FindSequence(IModel, String, String, String)
  nameWithType: Sequence.FindSequence(IModel, String, String, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Sequence.FindSequence(Microsoft.EntityFrameworkCore.Metadata.IModel, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Sequence.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: FindSequence
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Sequence.cs
    startLine: 73
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata
  syntax:
    content: public static ISequence FindSequence(IModel model, string annotationPrefix, string name, string schema = null)
    content.vb: Public Shared Function FindSequence(model As IModel, annotationPrefix As String, name As String, schema As String = Nothing) As ISequence
    parameters:
    - id: model
      type: Microsoft.EntityFrameworkCore.Metadata.IModel
    - id: annotationPrefix
      type: System.String
    - id: name
      type: System.String
    - id: schema
      type: System.String
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.ISequence
  overload: Microsoft.EntityFrameworkCore.Metadata.Sequence.FindSequence*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Metadata.Sequence.GetSequences(Microsoft.EntityFrameworkCore.Metadata.IModel,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Sequence.GetSequences(Microsoft.EntityFrameworkCore.Metadata.IModel,System.String)
  id: GetSequences(Microsoft.EntityFrameworkCore.Metadata.IModel,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Sequence
  langs:
  - csharp
  - vb
  name: GetSequences(IModel, String)
  nameWithType: Sequence.GetSequences(IModel, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Sequence.GetSequences(Microsoft.EntityFrameworkCore.Metadata.IModel, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Sequence.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetSequences
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Sequence.cs
    startLine: 88
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata
  syntax:
    content: public static IEnumerable<ISequence> GetSequences(IModel model, string annotationPrefix)
    content.vb: Public Shared Function GetSequences(model As IModel, annotationPrefix As String) As IEnumerable(Of ISequence)
    parameters:
    - id: model
      type: Microsoft.EntityFrameworkCore.Metadata.IModel
    - id: annotationPrefix
      type: System.String
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.ISequence}
  overload: Microsoft.EntityFrameworkCore.Metadata.Sequence.GetSequences*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Metadata.Sequence.Model
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Sequence.Model
  id: Model
  parent: Microsoft.EntityFrameworkCore.Metadata.Sequence
  langs:
  - csharp
  - vb
  name: Model
  nameWithType: Sequence.Model
  fullName: Microsoft.EntityFrameworkCore.Metadata.Sequence.Model
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Sequence.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Model
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Sequence.cs
    startLine: 98
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata
  syntax:
    content: public virtual Model Model { get; }
    content.vb: Public Overridable ReadOnly Property Model As Model
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.Model
  overload: Microsoft.EntityFrameworkCore.Metadata.Sequence.Model*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.Sequence.Name
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Sequence.Name
  id: Name
  parent: Microsoft.EntityFrameworkCore.Metadata.Sequence
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Sequence.Name
  fullName: Microsoft.EntityFrameworkCore.Metadata.Sequence.Name
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Sequence.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Name
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Sequence.cs
    startLine: 100
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata
  syntax:
    content: public virtual string Name { get; }
    content.vb: Public Overridable ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Metadata.Sequence.Name*
  implements:
  - Microsoft.EntityFrameworkCore.Metadata.ISequence.Name
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.Sequence.Schema
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Sequence.Schema
  id: Schema
  parent: Microsoft.EntityFrameworkCore.Metadata.Sequence
  langs:
  - csharp
  - vb
  name: Schema
  nameWithType: Sequence.Schema
  fullName: Microsoft.EntityFrameworkCore.Metadata.Sequence.Schema
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Sequence.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Schema
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Sequence.cs
    startLine: 102
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata
  syntax:
    content: public virtual string Schema { get; }
    content.vb: Public Overridable ReadOnly Property Schema As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Metadata.Sequence.Schema*
  implements:
  - Microsoft.EntityFrameworkCore.Metadata.ISequence.Schema
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.Sequence.StartValue
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Sequence.StartValue
  id: StartValue
  parent: Microsoft.EntityFrameworkCore.Metadata.Sequence
  langs:
  - csharp
  - vb
  name: StartValue
  nameWithType: Sequence.StartValue
  fullName: Microsoft.EntityFrameworkCore.Metadata.Sequence.StartValue
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Sequence.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: StartValue
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Sequence.cs
    startLine: 104
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata
  syntax:
    content: public virtual long StartValue { get; set; }
    content.vb: Public Overridable Property StartValue As Long
    parameters: []
    return:
      type: System.Int64
  overload: Microsoft.EntityFrameworkCore.Metadata.Sequence.StartValue*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Metadata.Sequence.IncrementBy
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Sequence.IncrementBy
  id: IncrementBy
  parent: Microsoft.EntityFrameworkCore.Metadata.Sequence
  langs:
  - csharp
  - vb
  name: IncrementBy
  nameWithType: Sequence.IncrementBy
  fullName: Microsoft.EntityFrameworkCore.Metadata.Sequence.IncrementBy
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Sequence.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: IncrementBy
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Sequence.cs
    startLine: 115
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata
  syntax:
    content: public virtual int IncrementBy { get; set; }
    content.vb: Public Overridable Property IncrementBy As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.EntityFrameworkCore.Metadata.Sequence.IncrementBy*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Metadata.Sequence.MinValue
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Sequence.MinValue
  id: MinValue
  parent: Microsoft.EntityFrameworkCore.Metadata.Sequence
  langs:
  - csharp
  - vb
  name: MinValue
  nameWithType: Sequence.MinValue
  fullName: Microsoft.EntityFrameworkCore.Metadata.Sequence.MinValue
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Sequence.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: MinValue
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Sequence.cs
    startLine: 126
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata
  syntax:
    content: public virtual long ? MinValue { get; set; }
    content.vb: Public Overridable Property MinValue As Long?
    parameters: []
    return:
      type: System.Nullable{System.Int64}
  overload: Microsoft.EntityFrameworkCore.Metadata.Sequence.MinValue*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Metadata.Sequence.MaxValue
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Sequence.MaxValue
  id: MaxValue
  parent: Microsoft.EntityFrameworkCore.Metadata.Sequence
  langs:
  - csharp
  - vb
  name: MaxValue
  nameWithType: Sequence.MaxValue
  fullName: Microsoft.EntityFrameworkCore.Metadata.Sequence.MaxValue
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Sequence.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: MaxValue
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Sequence.cs
    startLine: 137
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata
  syntax:
    content: public virtual long ? MaxValue { get; set; }
    content.vb: Public Overridable Property MaxValue As Long?
    parameters: []
    return:
      type: System.Nullable{System.Int64}
  overload: Microsoft.EntityFrameworkCore.Metadata.Sequence.MaxValue*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Metadata.Sequence.SupportedTypes
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Sequence.SupportedTypes
  id: SupportedTypes
  parent: Microsoft.EntityFrameworkCore.Metadata.Sequence
  langs:
  - csharp
  - vb
  name: SupportedTypes
  nameWithType: Sequence.SupportedTypes
  fullName: Microsoft.EntityFrameworkCore.Metadata.Sequence.SupportedTypes
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Sequence.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: SupportedTypes
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Sequence.cs
    startLine: 148
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata
  syntax:
    content: public static IReadOnlyCollection<Type> SupportedTypes { get; }
    content.vb: Public Shared ReadOnly Property SupportedTypes As IReadOnlyCollection(Of Type)
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyCollection{System.Type}
  overload: Microsoft.EntityFrameworkCore.Metadata.Sequence.SupportedTypes*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.Sequence.ClrType
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Sequence.ClrType
  id: ClrType
  parent: Microsoft.EntityFrameworkCore.Metadata.Sequence
  langs:
  - csharp
  - vb
  name: ClrType
  nameWithType: Sequence.ClrType
  fullName: Microsoft.EntityFrameworkCore.Metadata.Sequence.ClrType
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Sequence.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ClrType
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Sequence.cs
    startLine: 156
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata
  syntax:
    content: public virtual Type ClrType { get; set; }
    content.vb: Public Overridable Property ClrType As Type
    parameters: []
    return:
      type: System.Type
  overload: Microsoft.EntityFrameworkCore.Metadata.Sequence.ClrType*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Metadata.Sequence.IsCyclic
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Sequence.IsCyclic
  id: IsCyclic
  parent: Microsoft.EntityFrameworkCore.Metadata.Sequence
  langs:
  - csharp
  - vb
  name: IsCyclic
  nameWithType: Sequence.IsCyclic
  fullName: Microsoft.EntityFrameworkCore.Metadata.Sequence.IsCyclic
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Sequence.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: IsCyclic
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Sequence.cs
    startLine: 173
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata
  syntax:
    content: public virtual bool IsCyclic { get; set; }
    content.vb: Public Overridable Property IsCyclic As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: Microsoft.EntityFrameworkCore.Metadata.Sequence.IsCyclic*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Metadata.Sequence.Microsoft#EntityFrameworkCore#Metadata#ISequence#Model
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Sequence.Microsoft#EntityFrameworkCore#Metadata#ISequence#Model
  id: Microsoft#EntityFrameworkCore#Metadata#ISequence#Model
  isEii: true
  parent: Microsoft.EntityFrameworkCore.Metadata.Sequence
  langs:
  - csharp
  - vb
  name: ISequence.Model
  nameWithType: Sequence.ISequence.Model
  fullName: Microsoft.EntityFrameworkCore.Metadata.Sequence.Microsoft.EntityFrameworkCore.Metadata.ISequence.Model
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Sequence.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Microsoft.EntityFrameworkCore.Metadata.ISequence.Model
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Sequence.cs
    startLine: 191
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata
  syntax:
    content: IModel ISequence.Model { get; }
    content.vb: ReadOnly WriteOnly Property Microsoft.EntityFrameworkCore.Metadata.ISequence.Model As IModel Implements ISequence.Model
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.IModel
  overload: Microsoft.EntityFrameworkCore.Metadata.Sequence.Microsoft#EntityFrameworkCore#Metadata#ISequence#Model*
  implements:
  - Microsoft.EntityFrameworkCore.Metadata.ISequence.Model
  nameWithType.vb: Sequence.Microsoft.EntityFrameworkCore.Metadata.ISequence.Model
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Microsoft.EntityFrameworkCore.Metadata.ISequence.Model
- uid: Microsoft.EntityFrameworkCore.Metadata.Sequence.Microsoft#EntityFrameworkCore#Metadata#ISequence#StartValue
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Sequence.Microsoft#EntityFrameworkCore#Metadata#ISequence#StartValue
  id: Microsoft#EntityFrameworkCore#Metadata#ISequence#StartValue
  isEii: true
  parent: Microsoft.EntityFrameworkCore.Metadata.Sequence
  langs:
  - csharp
  - vb
  name: ISequence.StartValue
  nameWithType: Sequence.ISequence.StartValue
  fullName: Microsoft.EntityFrameworkCore.Metadata.Sequence.Microsoft.EntityFrameworkCore.Metadata.ISequence.StartValue
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Sequence.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Microsoft.EntityFrameworkCore.Metadata.ISequence.StartValue
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Sequence.cs
    startLine: 193
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata
  syntax:
    content: long ISequence.StartValue { get; }
    content.vb: ReadOnly WriteOnly Property Microsoft.EntityFrameworkCore.Metadata.ISequence.StartValue As Long Implements ISequence.StartValue
    parameters: []
    return:
      type: System.Int64
  overload: Microsoft.EntityFrameworkCore.Metadata.Sequence.Microsoft#EntityFrameworkCore#Metadata#ISequence#StartValue*
  implements:
  - Microsoft.EntityFrameworkCore.Metadata.ISequence.StartValue
  nameWithType.vb: Sequence.Microsoft.EntityFrameworkCore.Metadata.ISequence.StartValue
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Microsoft.EntityFrameworkCore.Metadata.ISequence.StartValue
- uid: Microsoft.EntityFrameworkCore.Metadata.Sequence.Microsoft#EntityFrameworkCore#Metadata#ISequence#IncrementBy
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Sequence.Microsoft#EntityFrameworkCore#Metadata#ISequence#IncrementBy
  id: Microsoft#EntityFrameworkCore#Metadata#ISequence#IncrementBy
  isEii: true
  parent: Microsoft.EntityFrameworkCore.Metadata.Sequence
  langs:
  - csharp
  - vb
  name: ISequence.IncrementBy
  nameWithType: Sequence.ISequence.IncrementBy
  fullName: Microsoft.EntityFrameworkCore.Metadata.Sequence.Microsoft.EntityFrameworkCore.Metadata.ISequence.IncrementBy
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Sequence.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Microsoft.EntityFrameworkCore.Metadata.ISequence.IncrementBy
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Sequence.cs
    startLine: 195
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata
  syntax:
    content: int ISequence.IncrementBy { get; }
    content.vb: ReadOnly WriteOnly Property Microsoft.EntityFrameworkCore.Metadata.ISequence.IncrementBy As Integer Implements ISequence.IncrementBy
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.EntityFrameworkCore.Metadata.Sequence.Microsoft#EntityFrameworkCore#Metadata#ISequence#IncrementBy*
  implements:
  - Microsoft.EntityFrameworkCore.Metadata.ISequence.IncrementBy
  nameWithType.vb: Sequence.Microsoft.EntityFrameworkCore.Metadata.ISequence.IncrementBy
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Microsoft.EntityFrameworkCore.Metadata.ISequence.IncrementBy
- uid: Microsoft.EntityFrameworkCore.Metadata.Sequence.Microsoft#EntityFrameworkCore#Metadata#ISequence#MinValue
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Sequence.Microsoft#EntityFrameworkCore#Metadata#ISequence#MinValue
  id: Microsoft#EntityFrameworkCore#Metadata#ISequence#MinValue
  isEii: true
  parent: Microsoft.EntityFrameworkCore.Metadata.Sequence
  langs:
  - csharp
  - vb
  name: ISequence.MinValue
  nameWithType: Sequence.ISequence.MinValue
  fullName: Microsoft.EntityFrameworkCore.Metadata.Sequence.Microsoft.EntityFrameworkCore.Metadata.ISequence.MinValue
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Sequence.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Microsoft.EntityFrameworkCore.Metadata.ISequence.MinValue
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Sequence.cs
    startLine: 197
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata
  syntax:
    content: long ? ISequence.MinValue { get; }
    content.vb: ReadOnly WriteOnly Property Microsoft.EntityFrameworkCore.Metadata.ISequence.MinValue As Long? Implements ISequence.MinValue
    parameters: []
    return:
      type: System.Nullable{System.Int64}
  overload: Microsoft.EntityFrameworkCore.Metadata.Sequence.Microsoft#EntityFrameworkCore#Metadata#ISequence#MinValue*
  implements:
  - Microsoft.EntityFrameworkCore.Metadata.ISequence.MinValue
  nameWithType.vb: Sequence.Microsoft.EntityFrameworkCore.Metadata.ISequence.MinValue
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Microsoft.EntityFrameworkCore.Metadata.ISequence.MinValue
- uid: Microsoft.EntityFrameworkCore.Metadata.Sequence.Microsoft#EntityFrameworkCore#Metadata#ISequence#MaxValue
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Sequence.Microsoft#EntityFrameworkCore#Metadata#ISequence#MaxValue
  id: Microsoft#EntityFrameworkCore#Metadata#ISequence#MaxValue
  isEii: true
  parent: Microsoft.EntityFrameworkCore.Metadata.Sequence
  langs:
  - csharp
  - vb
  name: ISequence.MaxValue
  nameWithType: Sequence.ISequence.MaxValue
  fullName: Microsoft.EntityFrameworkCore.Metadata.Sequence.Microsoft.EntityFrameworkCore.Metadata.ISequence.MaxValue
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Sequence.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Microsoft.EntityFrameworkCore.Metadata.ISequence.MaxValue
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Sequence.cs
    startLine: 199
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata
  syntax:
    content: long ? ISequence.MaxValue { get; }
    content.vb: ReadOnly WriteOnly Property Microsoft.EntityFrameworkCore.Metadata.ISequence.MaxValue As Long? Implements ISequence.MaxValue
    parameters: []
    return:
      type: System.Nullable{System.Int64}
  overload: Microsoft.EntityFrameworkCore.Metadata.Sequence.Microsoft#EntityFrameworkCore#Metadata#ISequence#MaxValue*
  implements:
  - Microsoft.EntityFrameworkCore.Metadata.ISequence.MaxValue
  nameWithType.vb: Sequence.Microsoft.EntityFrameworkCore.Metadata.ISequence.MaxValue
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Microsoft.EntityFrameworkCore.Metadata.ISequence.MaxValue
- uid: Microsoft.EntityFrameworkCore.Metadata.Sequence.Microsoft#EntityFrameworkCore#Metadata#ISequence#ClrType
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Sequence.Microsoft#EntityFrameworkCore#Metadata#ISequence#ClrType
  id: Microsoft#EntityFrameworkCore#Metadata#ISequence#ClrType
  isEii: true
  parent: Microsoft.EntityFrameworkCore.Metadata.Sequence
  langs:
  - csharp
  - vb
  name: ISequence.ClrType
  nameWithType: Sequence.ISequence.ClrType
  fullName: Microsoft.EntityFrameworkCore.Metadata.Sequence.Microsoft.EntityFrameworkCore.Metadata.ISequence.ClrType
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Sequence.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Microsoft.EntityFrameworkCore.Metadata.ISequence.ClrType
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Sequence.cs
    startLine: 201
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata
  syntax:
    content: Type ISequence.ClrType { get; }
    content.vb: ReadOnly WriteOnly Property Microsoft.EntityFrameworkCore.Metadata.ISequence.ClrType As Type Implements ISequence.ClrType
    parameters: []
    return:
      type: System.Type
  overload: Microsoft.EntityFrameworkCore.Metadata.Sequence.Microsoft#EntityFrameworkCore#Metadata#ISequence#ClrType*
  implements:
  - Microsoft.EntityFrameworkCore.Metadata.ISequence.ClrType
  nameWithType.vb: Sequence.Microsoft.EntityFrameworkCore.Metadata.ISequence.ClrType
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Microsoft.EntityFrameworkCore.Metadata.ISequence.ClrType
- uid: Microsoft.EntityFrameworkCore.Metadata.Sequence.Microsoft#EntityFrameworkCore#Metadata#ISequence#IsCyclic
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Sequence.Microsoft#EntityFrameworkCore#Metadata#ISequence#IsCyclic
  id: Microsoft#EntityFrameworkCore#Metadata#ISequence#IsCyclic
  isEii: true
  parent: Microsoft.EntityFrameworkCore.Metadata.Sequence
  langs:
  - csharp
  - vb
  name: ISequence.IsCyclic
  nameWithType: Sequence.ISequence.IsCyclic
  fullName: Microsoft.EntityFrameworkCore.Metadata.Sequence.Microsoft.EntityFrameworkCore.Metadata.ISequence.IsCyclic
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Sequence.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Microsoft.EntityFrameworkCore.Metadata.ISequence.IsCyclic
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Sequence.cs
    startLine: 203
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata
  syntax:
    content: bool ISequence.IsCyclic { get; }
    content.vb: ReadOnly WriteOnly Property Microsoft.EntityFrameworkCore.Metadata.ISequence.IsCyclic As Boolean Implements ISequence.IsCyclic
    parameters: []
    return:
      type: System.Boolean
  overload: Microsoft.EntityFrameworkCore.Metadata.Sequence.Microsoft#EntityFrameworkCore#Metadata#ISequence#IsCyclic*
  implements:
  - Microsoft.EntityFrameworkCore.Metadata.ISequence.IsCyclic
  nameWithType.vb: Sequence.Microsoft.EntityFrameworkCore.Metadata.ISequence.IsCyclic
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Microsoft.EntityFrameworkCore.Metadata.ISequence.IsCyclic
references:
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Metadata.ISequence
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.ISequence
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: ISequence
  nameWithType: ISequence
  fullName: Microsoft.EntityFrameworkCore.Metadata.ISequence
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Nullable{System.Int64}
  commentId: T:System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullname.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.EntityFrameworkCore.Metadata.Sequence.GetOrAddSequence*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Sequence.GetOrAddSequence
  isExternal: false
  name: GetOrAddSequence
  nameWithType: Sequence.GetOrAddSequence
  fullName: Microsoft.EntityFrameworkCore.Metadata.Sequence.GetOrAddSequence
- uid: Microsoft.EntityFrameworkCore.Metadata.IMutableModel
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IMutableModel
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IMutableModel
  nameWithType: IMutableModel
  fullName: Microsoft.EntityFrameworkCore.Metadata.IMutableModel
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.EntityFrameworkCore.Metadata.Sequence
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Sequence
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Sequence
  nameWithType: Sequence
  fullName: Microsoft.EntityFrameworkCore.Metadata.Sequence
- uid: Microsoft.EntityFrameworkCore.Metadata.Sequence.FindSequence*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Sequence.FindSequence
  isExternal: false
  name: FindSequence
  nameWithType: Sequence.FindSequence
  fullName: Microsoft.EntityFrameworkCore.Metadata.Sequence.FindSequence
- uid: Microsoft.EntityFrameworkCore.Metadata.IModel
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IModel
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IModel
  nameWithType: IModel
  fullName: Microsoft.EntityFrameworkCore.Metadata.IModel
- uid: Microsoft.EntityFrameworkCore.Metadata.Sequence.GetSequences*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Sequence.GetSequences
  isExternal: false
  name: GetSequences
  nameWithType: Sequence.GetSequences
  fullName: Microsoft.EntityFrameworkCore.Metadata.Sequence.GetSequences
- uid: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.ISequence}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.ISequence}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ISequence>
  nameWithType: IEnumerable<ISequence>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Metadata.ISequence>
  nameWithType.vb: IEnumerable(Of ISequence)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Metadata.ISequence)
  name.vb: IEnumerable(Of ISequence)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.ISequence
    name: ISequence
    nameWithType: ISequence
    fullName: Microsoft.EntityFrameworkCore.Metadata.ISequence
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.ISequence
    name: ISequence
    nameWithType: ISequence
    fullName: Microsoft.EntityFrameworkCore.Metadata.ISequence
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.EntityFrameworkCore.Metadata.Sequence.Model*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Sequence.Model
  isExternal: false
  name: Model
  nameWithType: Sequence.Model
  fullName: Microsoft.EntityFrameworkCore.Metadata.Sequence.Model
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.Model
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.Model
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Model
  nameWithType: Model
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.Model
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: Microsoft.EntityFrameworkCore.Metadata.Sequence.Name*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Sequence.Name
  isExternal: false
  name: Name
  nameWithType: Sequence.Name
  fullName: Microsoft.EntityFrameworkCore.Metadata.Sequence.Name
- uid: Microsoft.EntityFrameworkCore.Metadata.ISequence.Name
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.ISequence.Name
  parent: Microsoft.EntityFrameworkCore.Metadata.ISequence
  isExternal: false
  name: Name
  nameWithType: ISequence.Name
  fullName: Microsoft.EntityFrameworkCore.Metadata.ISequence.Name
- uid: Microsoft.EntityFrameworkCore.Metadata.Sequence.Schema*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Sequence.Schema
  isExternal: false
  name: Schema
  nameWithType: Sequence.Schema
  fullName: Microsoft.EntityFrameworkCore.Metadata.Sequence.Schema
- uid: Microsoft.EntityFrameworkCore.Metadata.ISequence.Schema
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.ISequence.Schema
  parent: Microsoft.EntityFrameworkCore.Metadata.ISequence
  isExternal: false
  name: Schema
  nameWithType: ISequence.Schema
  fullName: Microsoft.EntityFrameworkCore.Metadata.ISequence.Schema
- uid: Microsoft.EntityFrameworkCore.Metadata.Sequence.StartValue*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Sequence.StartValue
  isExternal: false
  name: StartValue
  nameWithType: Sequence.StartValue
  fullName: Microsoft.EntityFrameworkCore.Metadata.Sequence.StartValue
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Microsoft.EntityFrameworkCore.Metadata.Sequence.IncrementBy*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Sequence.IncrementBy
  isExternal: false
  name: IncrementBy
  nameWithType: Sequence.IncrementBy
  fullName: Microsoft.EntityFrameworkCore.Metadata.Sequence.IncrementBy
- uid: Microsoft.EntityFrameworkCore.Metadata.Sequence.MinValue*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Sequence.MinValue
  isExternal: false
  name: MinValue
  nameWithType: Sequence.MinValue
  fullName: Microsoft.EntityFrameworkCore.Metadata.Sequence.MinValue
- uid: Microsoft.EntityFrameworkCore.Metadata.Sequence.MaxValue*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Sequence.MaxValue
  isExternal: false
  name: MaxValue
  nameWithType: Sequence.MaxValue
  fullName: Microsoft.EntityFrameworkCore.Metadata.Sequence.MaxValue
- uid: Microsoft.EntityFrameworkCore.Metadata.Sequence.SupportedTypes*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Sequence.SupportedTypes
  isExternal: false
  name: SupportedTypes
  nameWithType: Sequence.SupportedTypes
  fullName: Microsoft.EntityFrameworkCore.Metadata.Sequence.SupportedTypes
- uid: System.Collections.Generic.IReadOnlyCollection{System.Type}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{System.Type}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  name: IReadOnlyCollection<Type>
  nameWithType: IReadOnlyCollection<Type>
  fullName: System.Collections.Generic.IReadOnlyCollection<System.Type>
  nameWithType.vb: IReadOnlyCollection(Of Type)
  fullname.vb: System.Collections.Generic.IReadOnlyCollection(Of System.Type)
  name.vb: IReadOnlyCollection(Of Type)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullname.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Sequence.ClrType*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Sequence.ClrType
  isExternal: false
  name: ClrType
  nameWithType: Sequence.ClrType
  fullName: Microsoft.EntityFrameworkCore.Metadata.Sequence.ClrType
- uid: Microsoft.EntityFrameworkCore.Metadata.Sequence.IsCyclic*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Sequence.IsCyclic
  isExternal: false
  name: IsCyclic
  nameWithType: Sequence.IsCyclic
  fullName: Microsoft.EntityFrameworkCore.Metadata.Sequence.IsCyclic
- uid: Microsoft.EntityFrameworkCore.Metadata.Sequence.Microsoft#EntityFrameworkCore#Metadata#ISequence#Model*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Sequence.Microsoft#EntityFrameworkCore#Metadata#ISequence#Model
  isExternal: false
  name: ISequence.Model
  nameWithType: Sequence.ISequence.Model
  fullName: Microsoft.EntityFrameworkCore.Metadata.Sequence.Microsoft.EntityFrameworkCore.Metadata.ISequence.Model
  nameWithType.vb: Sequence.Microsoft.EntityFrameworkCore.Metadata.ISequence.Model
  name.vb: Microsoft.EntityFrameworkCore.Metadata.ISequence.Model
- uid: Microsoft.EntityFrameworkCore.Metadata.ISequence.Model
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.ISequence.Model
  parent: Microsoft.EntityFrameworkCore.Metadata.ISequence
  isExternal: false
  name: Model
  nameWithType: ISequence.Model
  fullName: Microsoft.EntityFrameworkCore.Metadata.ISequence.Model
- uid: Microsoft.EntityFrameworkCore.Metadata.Sequence.Microsoft#EntityFrameworkCore#Metadata#ISequence#StartValue*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Sequence.Microsoft#EntityFrameworkCore#Metadata#ISequence#StartValue
  isExternal: false
  name: ISequence.StartValue
  nameWithType: Sequence.ISequence.StartValue
  fullName: Microsoft.EntityFrameworkCore.Metadata.Sequence.Microsoft.EntityFrameworkCore.Metadata.ISequence.StartValue
  nameWithType.vb: Sequence.Microsoft.EntityFrameworkCore.Metadata.ISequence.StartValue
  name.vb: Microsoft.EntityFrameworkCore.Metadata.ISequence.StartValue
- uid: Microsoft.EntityFrameworkCore.Metadata.ISequence.StartValue
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.ISequence.StartValue
  parent: Microsoft.EntityFrameworkCore.Metadata.ISequence
  isExternal: false
  name: StartValue
  nameWithType: ISequence.StartValue
  fullName: Microsoft.EntityFrameworkCore.Metadata.ISequence.StartValue
- uid: Microsoft.EntityFrameworkCore.Metadata.Sequence.Microsoft#EntityFrameworkCore#Metadata#ISequence#IncrementBy*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Sequence.Microsoft#EntityFrameworkCore#Metadata#ISequence#IncrementBy
  isExternal: false
  name: ISequence.IncrementBy
  nameWithType: Sequence.ISequence.IncrementBy
  fullName: Microsoft.EntityFrameworkCore.Metadata.Sequence.Microsoft.EntityFrameworkCore.Metadata.ISequence.IncrementBy
  nameWithType.vb: Sequence.Microsoft.EntityFrameworkCore.Metadata.ISequence.IncrementBy
  name.vb: Microsoft.EntityFrameworkCore.Metadata.ISequence.IncrementBy
- uid: Microsoft.EntityFrameworkCore.Metadata.ISequence.IncrementBy
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.ISequence.IncrementBy
  parent: Microsoft.EntityFrameworkCore.Metadata.ISequence
  isExternal: false
  name: IncrementBy
  nameWithType: ISequence.IncrementBy
  fullName: Microsoft.EntityFrameworkCore.Metadata.ISequence.IncrementBy
- uid: Microsoft.EntityFrameworkCore.Metadata.Sequence.Microsoft#EntityFrameworkCore#Metadata#ISequence#MinValue*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Sequence.Microsoft#EntityFrameworkCore#Metadata#ISequence#MinValue
  isExternal: false
  name: ISequence.MinValue
  nameWithType: Sequence.ISequence.MinValue
  fullName: Microsoft.EntityFrameworkCore.Metadata.Sequence.Microsoft.EntityFrameworkCore.Metadata.ISequence.MinValue
  nameWithType.vb: Sequence.Microsoft.EntityFrameworkCore.Metadata.ISequence.MinValue
  name.vb: Microsoft.EntityFrameworkCore.Metadata.ISequence.MinValue
- uid: Microsoft.EntityFrameworkCore.Metadata.ISequence.MinValue
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.ISequence.MinValue
  parent: Microsoft.EntityFrameworkCore.Metadata.ISequence
  isExternal: false
  name: MinValue
  nameWithType: ISequence.MinValue
  fullName: Microsoft.EntityFrameworkCore.Metadata.ISequence.MinValue
- uid: Microsoft.EntityFrameworkCore.Metadata.Sequence.Microsoft#EntityFrameworkCore#Metadata#ISequence#MaxValue*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Sequence.Microsoft#EntityFrameworkCore#Metadata#ISequence#MaxValue
  isExternal: false
  name: ISequence.MaxValue
  nameWithType: Sequence.ISequence.MaxValue
  fullName: Microsoft.EntityFrameworkCore.Metadata.Sequence.Microsoft.EntityFrameworkCore.Metadata.ISequence.MaxValue
  nameWithType.vb: Sequence.Microsoft.EntityFrameworkCore.Metadata.ISequence.MaxValue
  name.vb: Microsoft.EntityFrameworkCore.Metadata.ISequence.MaxValue
- uid: Microsoft.EntityFrameworkCore.Metadata.ISequence.MaxValue
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.ISequence.MaxValue
  parent: Microsoft.EntityFrameworkCore.Metadata.ISequence
  isExternal: false
  name: MaxValue
  nameWithType: ISequence.MaxValue
  fullName: Microsoft.EntityFrameworkCore.Metadata.ISequence.MaxValue
- uid: Microsoft.EntityFrameworkCore.Metadata.Sequence.Microsoft#EntityFrameworkCore#Metadata#ISequence#ClrType*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Sequence.Microsoft#EntityFrameworkCore#Metadata#ISequence#ClrType
  isExternal: false
  name: ISequence.ClrType
  nameWithType: Sequence.ISequence.ClrType
  fullName: Microsoft.EntityFrameworkCore.Metadata.Sequence.Microsoft.EntityFrameworkCore.Metadata.ISequence.ClrType
  nameWithType.vb: Sequence.Microsoft.EntityFrameworkCore.Metadata.ISequence.ClrType
  name.vb: Microsoft.EntityFrameworkCore.Metadata.ISequence.ClrType
- uid: Microsoft.EntityFrameworkCore.Metadata.ISequence.ClrType
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.ISequence.ClrType
  parent: Microsoft.EntityFrameworkCore.Metadata.ISequence
  isExternal: false
  name: ClrType
  nameWithType: ISequence.ClrType
  fullName: Microsoft.EntityFrameworkCore.Metadata.ISequence.ClrType
- uid: Microsoft.EntityFrameworkCore.Metadata.Sequence.Microsoft#EntityFrameworkCore#Metadata#ISequence#IsCyclic*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Sequence.Microsoft#EntityFrameworkCore#Metadata#ISequence#IsCyclic
  isExternal: false
  name: ISequence.IsCyclic
  nameWithType: Sequence.ISequence.IsCyclic
  fullName: Microsoft.EntityFrameworkCore.Metadata.Sequence.Microsoft.EntityFrameworkCore.Metadata.ISequence.IsCyclic
  nameWithType.vb: Sequence.Microsoft.EntityFrameworkCore.Metadata.ISequence.IsCyclic
  name.vb: Microsoft.EntityFrameworkCore.Metadata.ISequence.IsCyclic
- uid: Microsoft.EntityFrameworkCore.Metadata.ISequence.IsCyclic
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.ISequence.IsCyclic
  parent: Microsoft.EntityFrameworkCore.Metadata.ISequence
  isExternal: false
  name: IsCyclic
  nameWithType: ISequence.IsCyclic
  fullName: Microsoft.EntityFrameworkCore.Metadata.ISequence.IsCyclic
