### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperatorHandler
  commentId: T:Microsoft.EntityFrameworkCore.Query.ResultOperatorHandler
  id: ResultOperatorHandler
  parent: Microsoft.EntityFrameworkCore.Query
  children:
  - Microsoft.EntityFrameworkCore.Query.ResultOperatorHandler.CallWithPossibleCancellationToken(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  - Microsoft.EntityFrameworkCore.Query.ResultOperatorHandler.HandleResultOperator(Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor,ResultOperatorBase,QueryModel)
  langs:
  - csharp
  - vb
  name: ResultOperatorHandler
  nameWithType: ResultOperatorHandler
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperatorHandler
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ResultOperatorHandler.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ResultOperatorHandler
    path: src/Microsoft.EntityFrameworkCore/Query/ResultOperatorHandler.cs
    startLine: 23
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query
  summary: "\nThe default client-eval result operator handler.\n"
  example: []
  syntax:
    content: 'public class ResultOperatorHandler : IResultOperatorHandler'
    content.vb: >-
      Public Class ResultOperatorHandler
          Implements IResultOperatorHandler
  inheritance:
  - System.Object
  implements:
  - Microsoft.EntityFrameworkCore.Query.IResultOperatorHandler
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperatorHandler.HandleResultOperator(Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor,ResultOperatorBase,QueryModel)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ResultOperatorHandler.HandleResultOperator(Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor,ResultOperatorBase,QueryModel)
  id: HandleResultOperator(Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor,ResultOperatorBase,QueryModel)
  parent: Microsoft.EntityFrameworkCore.Query.ResultOperatorHandler
  langs:
  - csharp
  - vb
  name: HandleResultOperator(EntityQueryModelVisitor, ResultOperatorBase, QueryModel)
  nameWithType: ResultOperatorHandler.HandleResultOperator(EntityQueryModelVisitor, ResultOperatorBase, QueryModel)
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperatorHandler.HandleResultOperator(Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor, ResultOperatorBase, QueryModel)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ResultOperatorHandler.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: HandleResultOperator
    path: src/Microsoft.EntityFrameworkCore/Query/ResultOperatorHandler.cs
    startLine: 62
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query
  summary: "\nHandles the result operator.\n"
  example: []
  syntax:
    content: public virtual Expression HandleResultOperator(EntityQueryModelVisitor entityQueryModelVisitor, ResultOperatorBase resultOperator, QueryModel queryModel)
    content.vb: Public Overridable Function HandleResultOperator(entityQueryModelVisitor As EntityQueryModelVisitor, resultOperator As ResultOperatorBase, queryModel As QueryModel) As Expression
    parameters:
    - id: entityQueryModelVisitor
      type: Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor
      description: 'The entity query model visitor. '
    - id: resultOperator
      type: ResultOperatorBase
      description: 'The result operator. '
    - id: queryModel
      type: QueryModel
      description: 'The query model. '
    return:
      type: System.Linq.Expressions.Expression
      description: "\nAn compiled query expression fragment representing the result operator.\n"
  overload: Microsoft.EntityFrameworkCore.Query.ResultOperatorHandler.HandleResultOperator*
  implements:
  - Microsoft.EntityFrameworkCore.Query.IResultOperatorHandler.HandleResultOperator(Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor,ResultOperatorBase,QueryModel)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperatorHandler.CallWithPossibleCancellationToken(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  commentId: M:Microsoft.EntityFrameworkCore.Query.ResultOperatorHandler.CallWithPossibleCancellationToken(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  id: CallWithPossibleCancellationToken(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  parent: Microsoft.EntityFrameworkCore.Query.ResultOperatorHandler
  langs:
  - csharp
  - vb
  name: CallWithPossibleCancellationToken(MethodInfo, Expression[])
  nameWithType: ResultOperatorHandler.CallWithPossibleCancellationToken(MethodInfo, Expression[])
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperatorHandler.CallWithPossibleCancellationToken(System.Reflection.MethodInfo, System.Linq.Expressions.Expression[])
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ResultOperatorHandler.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CallWithPossibleCancellationToken
    path: src/Microsoft.EntityFrameworkCore/Query/ResultOperatorHandler.cs
    startLine: 355
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query
  summary: "\nCall a client operator that may have a cancellation token.\n"
  example: []
  syntax:
    content: public static Expression CallWithPossibleCancellationToken(MethodInfo methodInfo, params Expression[] arguments)
    content.vb: Public Shared Function CallWithPossibleCancellationToken(methodInfo As MethodInfo, ParamArray arguments As Expression()) As Expression
    parameters:
    - id: methodInfo
      type: System.Reflection.MethodInfo
      description: 'The method to call. '
    - id: arguments
      type: System.Linq.Expressions.Expression[]
      description: 'A variable-length parameters list containing arguments. '
    return:
      type: System.Linq.Expressions.Expression
      description: "\nA method call expression.\n"
  overload: Microsoft.EntityFrameworkCore.Query.ResultOperatorHandler.CallWithPossibleCancellationToken*
  nameWithType.vb: ResultOperatorHandler.CallWithPossibleCancellationToken(MethodInfo, Expression())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.EntityFrameworkCore.Query.ResultOperatorHandler.CallWithPossibleCancellationToken(System.Reflection.MethodInfo, System.Linq.Expressions.Expression())
  name.vb: CallWithPossibleCancellationToken(MethodInfo, Expression())
references:
- uid: Microsoft.EntityFrameworkCore.Query
  commentId: N:Microsoft.EntityFrameworkCore.Query
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query
  nameWithType: Microsoft.EntityFrameworkCore.Query
  fullName: Microsoft.EntityFrameworkCore.Query
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Query.IResultOperatorHandler
  commentId: T:Microsoft.EntityFrameworkCore.Query.IResultOperatorHandler
  parent: Microsoft.EntityFrameworkCore.Query
  isExternal: false
  name: IResultOperatorHandler
  nameWithType: IResultOperatorHandler
  fullName: Microsoft.EntityFrameworkCore.Query.IResultOperatorHandler
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperatorHandler.HandleResultOperator*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.ResultOperatorHandler.HandleResultOperator
  isExternal: false
  name: HandleResultOperator
  nameWithType: ResultOperatorHandler.HandleResultOperator
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperatorHandler.HandleResultOperator
- uid: Microsoft.EntityFrameworkCore.Query.IResultOperatorHandler.HandleResultOperator(Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor,ResultOperatorBase,QueryModel)
  commentId: M:Microsoft.EntityFrameworkCore.Query.IResultOperatorHandler.HandleResultOperator(Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor,ResultOperatorBase,QueryModel)
  parent: Microsoft.EntityFrameworkCore.Query.IResultOperatorHandler
  isExternal: true
  name: HandleResultOperator(EntityQueryModelVisitor, ResultOperatorBase, QueryModel)
  nameWithType: IResultOperatorHandler.HandleResultOperator(EntityQueryModelVisitor, ResultOperatorBase, QueryModel)
  fullName: Microsoft.EntityFrameworkCore.Query.IResultOperatorHandler.HandleResultOperator(Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor, ResultOperatorBase, QueryModel)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.IResultOperatorHandler.HandleResultOperator(Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor,ResultOperatorBase,QueryModel)
    name: HandleResultOperator
    nameWithType: IResultOperatorHandler.HandleResultOperator
    fullName: Microsoft.EntityFrameworkCore.Query.IResultOperatorHandler.HandleResultOperator
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor
    name: EntityQueryModelVisitor
    nameWithType: EntityQueryModelVisitor
    fullName: Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ResultOperatorBase
    name: ResultOperatorBase
    nameWithType: ResultOperatorBase
    fullName: ResultOperatorBase
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: QueryModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.IResultOperatorHandler.HandleResultOperator(Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor,ResultOperatorBase,QueryModel)
    name: HandleResultOperator
    nameWithType: IResultOperatorHandler.HandleResultOperator
    fullName: Microsoft.EntityFrameworkCore.Query.IResultOperatorHandler.HandleResultOperator
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor
    name: EntityQueryModelVisitor
    nameWithType: EntityQueryModelVisitor
    fullName: Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ResultOperatorBase
    name: ResultOperatorBase
    nameWithType: ResultOperatorBase
    fullName: ResultOperatorBase
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: QueryModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor
  commentId: T:Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor
  parent: Microsoft.EntityFrameworkCore.Query
  isExternal: false
  name: EntityQueryModelVisitor
  nameWithType: EntityQueryModelVisitor
  fullName: Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor
- uid: ResultOperatorBase
  isExternal: true
  name: ResultOperatorBase
  nameWithType: ResultOperatorBase
  fullName: ResultOperatorBase
- uid: QueryModel
  isExternal: true
  name: QueryModel
  nameWithType: QueryModel
  fullName: QueryModel
- uid: System.Linq.Expressions.Expression
  commentId: T:System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: true
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: false
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
- uid: Microsoft.EntityFrameworkCore.Query.ResultOperatorHandler.CallWithPossibleCancellationToken*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.ResultOperatorHandler.CallWithPossibleCancellationToken
  isExternal: false
  name: CallWithPossibleCancellationToken
  nameWithType: ResultOperatorHandler.CallWithPossibleCancellationToken
  fullName: Microsoft.EntityFrameworkCore.Query.ResultOperatorHandler.CallWithPossibleCancellationToken
- uid: System.Reflection.MethodInfo
  commentId: T:System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression[]
  name: Expression[]
  nameWithType: Expression[]
  fullName: System.Linq.Expressions.Expression[]
  nameWithType.vb: Expression()
  fullname.vb: System.Linq.Expressions.Expression()
  name.vb: Expression()
  spec.csharp:
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: false
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
