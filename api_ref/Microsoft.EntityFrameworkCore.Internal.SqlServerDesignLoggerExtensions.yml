### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignLoggerExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Internal.SqlServerDesignLoggerExtensions
  id: SqlServerDesignLoggerExtensions
  parent: Microsoft.EntityFrameworkCore.Internal
  children:
  - Microsoft.EntityFrameworkCore.Internal.SqlServerDesignLoggerExtensions.LogDebug(ILogger,Microsoft.EntityFrameworkCore.Infrastructure.SqlServerDesignEventId,System.Func{System.String})
  - Microsoft.EntityFrameworkCore.Internal.SqlServerDesignLoggerExtensions.LogWarning(ILogger,Microsoft.EntityFrameworkCore.Infrastructure.SqlServerDesignEventId,System.Func{System.String})
  langs:
  - csharp
  - vb
  name: SqlServerDesignLoggerExtensions
  nameWithType: SqlServerDesignLoggerExtensions
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignLoggerExtensions
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Internal/SqlServerDesignLoggerExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: SqlServerDesignLoggerExtensions
    path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Internal/SqlServerDesignLoggerExtensions.cs
    startLine: 14
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Design
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public static class SqlServerDesignLoggerExtensions
    content.vb: Public Module SqlServerDesignLoggerExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignLoggerExtensions.LogWarning(ILogger,Microsoft.EntityFrameworkCore.Infrastructure.SqlServerDesignEventId,System.Func{System.String})
  commentId: M:Microsoft.EntityFrameworkCore.Internal.SqlServerDesignLoggerExtensions.LogWarning(ILogger,Microsoft.EntityFrameworkCore.Infrastructure.SqlServerDesignEventId,System.Func{System.String})
  id: LogWarning(ILogger,Microsoft.EntityFrameworkCore.Infrastructure.SqlServerDesignEventId,System.Func{System.String})
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignLoggerExtensions
  langs:
  - csharp
  - vb
  name: LogWarning(ILogger, SqlServerDesignEventId, Func<String>)
  nameWithType: SqlServerDesignLoggerExtensions.LogWarning(ILogger, SqlServerDesignEventId, Func<String>)
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignLoggerExtensions.LogWarning(ILogger, Microsoft.EntityFrameworkCore.Infrastructure.SqlServerDesignEventId, System.Func<System.String>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Internal/SqlServerDesignLoggerExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: LogWarning
    path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Internal/SqlServerDesignLoggerExtensions.cs
    startLine: 20
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Design
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public static void LogWarning(this ILogger logger, SqlServerDesignEventId eventId, Func<string> formatter)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub LogWarning(logger As ILogger, eventId As SqlServerDesignEventId, formatter As Func(Of String))
    parameters:
    - id: logger
      type: ILogger
    - id: eventId
      type: Microsoft.EntityFrameworkCore.Infrastructure.SqlServerDesignEventId
    - id: formatter
      type: System.Func{System.String}
  overload: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignLoggerExtensions.LogWarning*
  nameWithType.vb: SqlServerDesignLoggerExtensions.LogWarning(ILogger, SqlServerDesignEventId, Func(Of String))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignLoggerExtensions.LogWarning(ILogger, Microsoft.EntityFrameworkCore.Infrastructure.SqlServerDesignEventId, System.Func(Of System.String))
  name.vb: LogWarning(ILogger, SqlServerDesignEventId, Func(Of String))
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignLoggerExtensions.LogDebug(ILogger,Microsoft.EntityFrameworkCore.Infrastructure.SqlServerDesignEventId,System.Func{System.String})
  commentId: M:Microsoft.EntityFrameworkCore.Internal.SqlServerDesignLoggerExtensions.LogDebug(ILogger,Microsoft.EntityFrameworkCore.Infrastructure.SqlServerDesignEventId,System.Func{System.String})
  id: LogDebug(ILogger,Microsoft.EntityFrameworkCore.Infrastructure.SqlServerDesignEventId,System.Func{System.String})
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignLoggerExtensions
  langs:
  - csharp
  - vb
  name: LogDebug(ILogger, SqlServerDesignEventId, Func<String>)
  nameWithType: SqlServerDesignLoggerExtensions.LogDebug(ILogger, SqlServerDesignEventId, Func<String>)
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignLoggerExtensions.LogDebug(ILogger, Microsoft.EntityFrameworkCore.Infrastructure.SqlServerDesignEventId, System.Func<System.String>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Internal/SqlServerDesignLoggerExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: LogDebug
    path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Internal/SqlServerDesignLoggerExtensions.cs
    startLine: 30
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Design
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public static void LogDebug(this ILogger logger, SqlServerDesignEventId eventId, Func<string> formatter)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub LogDebug(logger As ILogger, eventId As SqlServerDesignEventId, formatter As Func(Of String))
    parameters:
    - id: logger
      type: ILogger
    - id: eventId
      type: Microsoft.EntityFrameworkCore.Infrastructure.SqlServerDesignEventId
    - id: formatter
      type: System.Func{System.String}
  overload: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignLoggerExtensions.LogDebug*
  nameWithType.vb: SqlServerDesignLoggerExtensions.LogDebug(ILogger, SqlServerDesignEventId, Func(Of String))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignLoggerExtensions.LogDebug(ILogger, Microsoft.EntityFrameworkCore.Infrastructure.SqlServerDesignEventId, System.Func(Of System.String))
  name.vb: LogDebug(ILogger, SqlServerDesignEventId, Func(Of String))
references:
- uid: Microsoft.EntityFrameworkCore.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Internal
  fullName: Microsoft.EntityFrameworkCore.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignLoggerExtensions.LogWarning*
  commentId: Overload:Microsoft.EntityFrameworkCore.Internal.SqlServerDesignLoggerExtensions.LogWarning
  isExternal: false
  name: LogWarning
  nameWithType: SqlServerDesignLoggerExtensions.LogWarning
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignLoggerExtensions.LogWarning
- uid: ILogger
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: ILogger
- uid: Microsoft.EntityFrameworkCore.Infrastructure.SqlServerDesignEventId
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.SqlServerDesignEventId
  parent: Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: SqlServerDesignEventId
  nameWithType: SqlServerDesignEventId
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.SqlServerDesignEventId
- uid: System.Func{System.String}
  commentId: T:System.Func{System.String}
  parent: System
  definition: System.Func`1
  name: Func<String>
  nameWithType: Func<String>
  fullName: System.Func<System.String>
  nameWithType.vb: Func(Of String)
  fullname.vb: System.Func(Of System.String)
  name.vb: Func(Of String)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure
  commentId: N:Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Infrastructure
  nameWithType: Microsoft.EntityFrameworkCore.Infrastructure
  fullName: Microsoft.EntityFrameworkCore.Infrastructure
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullname.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignLoggerExtensions.LogDebug*
  commentId: Overload:Microsoft.EntityFrameworkCore.Internal.SqlServerDesignLoggerExtensions.LogDebug
  isExternal: false
  name: LogDebug
  nameWithType: SqlServerDesignLoggerExtensions.LogDebug
  fullName: Microsoft.EntityFrameworkCore.Internal.SqlServerDesignLoggerExtensions.LogDebug
