### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices
  id: IDatabaseProviderServices
  parent: Microsoft.EntityFrameworkCore.Storage
  children:
  - Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.CompiledQueryCacheKeyGenerator
  - Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ConventionSetBuilder
  - Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.Creator
  - Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.Database
  - Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.EntityQueryableExpressionVisitorFactory
  - Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.EntityQueryModelVisitorFactory
  - Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ExecutionStrategyFactory
  - Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ExpressionPrinter
  - Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.InvariantName
  - Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ModelSource
  - Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ModelValidator
  - Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ProjectionExpressionVisitorFactory
  - Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.QueryCompilationContextFactory
  - Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.QueryContextFactory
  - Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ResultOperatorHandler
  - Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.TransactionManager
  - Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ValueGeneratorCache
  - Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ValueGeneratorSelector
  langs:
  - csharp
  - vb
  name: IDatabaseProviderServices
  nameWithType: IDatabaseProviderServices
  fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices
  type: Interface
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Storage/IDatabaseProviderServices.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: IDatabaseProviderServices
    path: src/Microsoft.EntityFrameworkCore/Storage/IDatabaseProviderServices.cs
    startLine: 22
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n<p>\n    The base set of services required by EF for a database provider to function.\n</p>\n<p>\n    This type is typically used by database providers (and other extensions). It is generally\n    not used in application code.\n</p>\n"
  example: []
  syntax:
    content: public interface IDatabaseProviderServices
    content.vb: Public Interface IDatabaseProviderServices
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.InvariantName
  commentId: P:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.InvariantName
  id: InvariantName
  parent: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices
  langs:
  - csharp
  - vb
  name: InvariantName
  nameWithType: IDatabaseProviderServices.InvariantName
  fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.InvariantName
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Storage/IDatabaseProviderServices.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: InvariantName
    path: src/Microsoft.EntityFrameworkCore/Storage/IDatabaseProviderServices.cs
    startLine: 28
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\nThe unique name used to identify the database provider. This should be the same as the NuGet package name\nfor the providers runtime.\n"
  example: []
  syntax:
    content: string InvariantName { get; }
    content.vb: ReadOnly Property InvariantName As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.InvariantName*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.Database
  commentId: P:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.Database
  id: Database
  parent: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices
  langs:
  - csharp
  - vb
  name: Database
  nameWithType: IDatabaseProviderServices.Database
  fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.Database
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Storage/IDatabaseProviderServices.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Database
    path: src/Microsoft.EntityFrameworkCore/Storage/IDatabaseProviderServices.cs
    startLine: 33
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\nGets the <xref href=\"Microsoft.EntityFrameworkCore.Storage.IDatabase\" data-throw-if-not-resolved=\"false\"></xref> for the database provider.\n"
  example: []
  syntax:
    content: IDatabase Database { get; }
    content.vb: ReadOnly Property Database As IDatabase
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Storage.IDatabase
  overload: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.Database*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.TransactionManager
  commentId: P:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.TransactionManager
  id: TransactionManager
  parent: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices
  langs:
  - csharp
  - vb
  name: TransactionManager
  nameWithType: IDatabaseProviderServices.TransactionManager
  fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.TransactionManager
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Storage/IDatabaseProviderServices.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: TransactionManager
    path: src/Microsoft.EntityFrameworkCore/Storage/IDatabaseProviderServices.cs
    startLine: 38
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\nGets the <xref href=\"Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager\" data-throw-if-not-resolved=\"false\"></xref> for the database provider.\n"
  example: []
  syntax:
    content: IDbContextTransactionManager TransactionManager { get; }
    content.vb: ReadOnly Property TransactionManager As IDbContextTransactionManager
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager
  overload: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.TransactionManager*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.Creator
  commentId: P:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.Creator
  id: Creator
  parent: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices
  langs:
  - csharp
  - vb
  name: Creator
  nameWithType: IDatabaseProviderServices.Creator
  fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.Creator
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Storage/IDatabaseProviderServices.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Creator
    path: src/Microsoft.EntityFrameworkCore/Storage/IDatabaseProviderServices.cs
    startLine: 43
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\nGets the <xref href=\"Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator\" data-throw-if-not-resolved=\"false\"></xref> for the database provider.\n"
  example: []
  syntax:
    content: IDatabaseCreator Creator { get; }
    content.vb: ReadOnly Property Creator As IDatabaseCreator
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator
  overload: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.Creator*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ValueGeneratorSelector
  commentId: P:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ValueGeneratorSelector
  id: ValueGeneratorSelector
  parent: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices
  langs:
  - csharp
  - vb
  name: ValueGeneratorSelector
  nameWithType: IDatabaseProviderServices.ValueGeneratorSelector
  fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ValueGeneratorSelector
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Storage/IDatabaseProviderServices.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ValueGeneratorSelector
    path: src/Microsoft.EntityFrameworkCore/Storage/IDatabaseProviderServices.cs
    startLine: 48
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\nGets the <xref href=\"Microsoft.EntityFrameworkCore.ValueGeneration.IValueGeneratorSelector\" data-throw-if-not-resolved=\"false\"></xref> for the database provider.\n"
  example: []
  syntax:
    content: IValueGeneratorSelector ValueGeneratorSelector { get; }
    content.vb: ReadOnly Property ValueGeneratorSelector As IValueGeneratorSelector
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.ValueGeneration.IValueGeneratorSelector
  overload: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ValueGeneratorSelector*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ConventionSetBuilder
  commentId: P:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ConventionSetBuilder
  id: ConventionSetBuilder
  parent: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices
  langs:
  - csharp
  - vb
  name: ConventionSetBuilder
  nameWithType: IDatabaseProviderServices.ConventionSetBuilder
  fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ConventionSetBuilder
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Storage/IDatabaseProviderServices.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ConventionSetBuilder
    path: src/Microsoft.EntityFrameworkCore/Storage/IDatabaseProviderServices.cs
    startLine: 53
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\nGets the <xref href=\"Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder\" data-throw-if-not-resolved=\"false\"></xref> for the database provider.\n"
  example: []
  syntax:
    content: IConventionSetBuilder ConventionSetBuilder { get; }
    content.vb: ReadOnly Property ConventionSetBuilder As IConventionSetBuilder
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder
  overload: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ConventionSetBuilder*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ModelSource
  commentId: P:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ModelSource
  id: ModelSource
  parent: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices
  langs:
  - csharp
  - vb
  name: ModelSource
  nameWithType: IDatabaseProviderServices.ModelSource
  fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ModelSource
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Storage/IDatabaseProviderServices.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ModelSource
    path: src/Microsoft.EntityFrameworkCore/Storage/IDatabaseProviderServices.cs
    startLine: 58
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\nGets the <xref href=\"Microsoft.EntityFrameworkCore.Infrastructure.IModelSource\" data-throw-if-not-resolved=\"false\"></xref> for the database provider.\n"
  example: []
  syntax:
    content: IModelSource ModelSource { get; }
    content.vb: ReadOnly Property ModelSource As IModelSource
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Infrastructure.IModelSource
  overload: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ModelSource*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ModelValidator
  commentId: P:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ModelValidator
  id: ModelValidator
  parent: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices
  langs:
  - csharp
  - vb
  name: ModelValidator
  nameWithType: IDatabaseProviderServices.ModelValidator
  fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ModelValidator
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Storage/IDatabaseProviderServices.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ModelValidator
    path: src/Microsoft.EntityFrameworkCore/Storage/IDatabaseProviderServices.cs
    startLine: 63
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\nGets the <xref href=\"Microsoft.EntityFrameworkCore.Internal.IModelValidator\" data-throw-if-not-resolved=\"false\"></xref> for the database provider.\n"
  example: []
  syntax:
    content: IModelValidator ModelValidator { get; }
    content.vb: ReadOnly Property ModelValidator As IModelValidator
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Internal.IModelValidator
  overload: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ModelValidator*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ValueGeneratorCache
  commentId: P:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ValueGeneratorCache
  id: ValueGeneratorCache
  parent: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices
  langs:
  - csharp
  - vb
  name: ValueGeneratorCache
  nameWithType: IDatabaseProviderServices.ValueGeneratorCache
  fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ValueGeneratorCache
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Storage/IDatabaseProviderServices.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ValueGeneratorCache
    path: src/Microsoft.EntityFrameworkCore/Storage/IDatabaseProviderServices.cs
    startLine: 68
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\nGets the <xref href=\"Microsoft.EntityFrameworkCore.ValueGeneration.IValueGeneratorCache\" data-throw-if-not-resolved=\"false\"></xref> for the database provider.\n"
  example: []
  syntax:
    content: IValueGeneratorCache ValueGeneratorCache { get; }
    content.vb: ReadOnly Property ValueGeneratorCache As IValueGeneratorCache
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.ValueGeneration.IValueGeneratorCache
  overload: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ValueGeneratorCache*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.QueryContextFactory
  commentId: P:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.QueryContextFactory
  id: QueryContextFactory
  parent: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices
  langs:
  - csharp
  - vb
  name: QueryContextFactory
  nameWithType: IDatabaseProviderServices.QueryContextFactory
  fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.QueryContextFactory
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Storage/IDatabaseProviderServices.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: QueryContextFactory
    path: src/Microsoft.EntityFrameworkCore/Storage/IDatabaseProviderServices.cs
    startLine: 73
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\nGets the <xref href=\"Microsoft.EntityFrameworkCore.Query.IQueryContextFactory\" data-throw-if-not-resolved=\"false\"></xref> for the database provider.\n"
  example: []
  syntax:
    content: IQueryContextFactory QueryContextFactory { get; }
    content.vb: ReadOnly Property QueryContextFactory As IQueryContextFactory
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Query.IQueryContextFactory
  overload: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.QueryContextFactory*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.QueryCompilationContextFactory
  commentId: P:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.QueryCompilationContextFactory
  id: QueryCompilationContextFactory
  parent: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices
  langs:
  - csharp
  - vb
  name: QueryCompilationContextFactory
  nameWithType: IDatabaseProviderServices.QueryCompilationContextFactory
  fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.QueryCompilationContextFactory
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Storage/IDatabaseProviderServices.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: QueryCompilationContextFactory
    path: src/Microsoft.EntityFrameworkCore/Storage/IDatabaseProviderServices.cs
    startLine: 78
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\nGets the <xref href=\"Microsoft.EntityFrameworkCore.Query.IQueryCompilationContextFactory\" data-throw-if-not-resolved=\"false\"></xref> for the database provider.\n"
  example: []
  syntax:
    content: IQueryCompilationContextFactory QueryCompilationContextFactory { get; }
    content.vb: ReadOnly Property QueryCompilationContextFactory As IQueryCompilationContextFactory
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Query.IQueryCompilationContextFactory
  overload: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.QueryCompilationContextFactory*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.EntityQueryModelVisitorFactory
  commentId: P:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.EntityQueryModelVisitorFactory
  id: EntityQueryModelVisitorFactory
  parent: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices
  langs:
  - csharp
  - vb
  name: EntityQueryModelVisitorFactory
  nameWithType: IDatabaseProviderServices.EntityQueryModelVisitorFactory
  fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.EntityQueryModelVisitorFactory
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Storage/IDatabaseProviderServices.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: EntityQueryModelVisitorFactory
    path: src/Microsoft.EntityFrameworkCore/Storage/IDatabaseProviderServices.cs
    startLine: 83
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\nGets the <xref href=\"Microsoft.EntityFrameworkCore.Query.IEntityQueryModelVisitorFactory\" data-throw-if-not-resolved=\"false\"></xref> for the database provider.\n"
  example: []
  syntax:
    content: IEntityQueryModelVisitorFactory EntityQueryModelVisitorFactory { get; }
    content.vb: ReadOnly Property EntityQueryModelVisitorFactory As IEntityQueryModelVisitorFactory
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Query.IEntityQueryModelVisitorFactory
  overload: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.EntityQueryModelVisitorFactory*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.CompiledQueryCacheKeyGenerator
  commentId: P:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.CompiledQueryCacheKeyGenerator
  id: CompiledQueryCacheKeyGenerator
  parent: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices
  langs:
  - csharp
  - vb
  name: CompiledQueryCacheKeyGenerator
  nameWithType: IDatabaseProviderServices.CompiledQueryCacheKeyGenerator
  fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.CompiledQueryCacheKeyGenerator
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Storage/IDatabaseProviderServices.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CompiledQueryCacheKeyGenerator
    path: src/Microsoft.EntityFrameworkCore/Storage/IDatabaseProviderServices.cs
    startLine: 88
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\nGets the <xref href=\"Microsoft.EntityFrameworkCore.Query.ICompiledQueryCacheKeyGenerator\" data-throw-if-not-resolved=\"false\"></xref> for the database provider.\n"
  example: []
  syntax:
    content: ICompiledQueryCacheKeyGenerator CompiledQueryCacheKeyGenerator { get; }
    content.vb: ReadOnly Property CompiledQueryCacheKeyGenerator As ICompiledQueryCacheKeyGenerator
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Query.ICompiledQueryCacheKeyGenerator
  overload: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.CompiledQueryCacheKeyGenerator*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ExpressionPrinter
  commentId: P:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ExpressionPrinter
  id: ExpressionPrinter
  parent: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices
  langs:
  - csharp
  - vb
  name: ExpressionPrinter
  nameWithType: IDatabaseProviderServices.ExpressionPrinter
  fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ExpressionPrinter
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Storage/IDatabaseProviderServices.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ExpressionPrinter
    path: src/Microsoft.EntityFrameworkCore/Storage/IDatabaseProviderServices.cs
    startLine: 93
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\nGets the <xref href=\"Microsoft.EntityFrameworkCore.Query.Internal.IExpressionPrinter\" data-throw-if-not-resolved=\"false\"></xref> for the database provider.\n"
  example: []
  syntax:
    content: IExpressionPrinter ExpressionPrinter { get; }
    content.vb: ReadOnly Property ExpressionPrinter As IExpressionPrinter
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Query.Internal.IExpressionPrinter
  overload: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ExpressionPrinter*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ResultOperatorHandler
  commentId: P:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ResultOperatorHandler
  id: ResultOperatorHandler
  parent: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices
  langs:
  - csharp
  - vb
  name: ResultOperatorHandler
  nameWithType: IDatabaseProviderServices.ResultOperatorHandler
  fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ResultOperatorHandler
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Storage/IDatabaseProviderServices.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ResultOperatorHandler
    path: src/Microsoft.EntityFrameworkCore/Storage/IDatabaseProviderServices.cs
    startLine: 98
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\nGets the <xref href=\"Microsoft.EntityFrameworkCore.Query.IResultOperatorHandler\" data-throw-if-not-resolved=\"false\"></xref> for the database provider.\n"
  example: []
  syntax:
    content: IResultOperatorHandler ResultOperatorHandler { get; }
    content.vb: ReadOnly Property ResultOperatorHandler As IResultOperatorHandler
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Query.IResultOperatorHandler
  overload: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ResultOperatorHandler*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.EntityQueryableExpressionVisitorFactory
  commentId: P:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.EntityQueryableExpressionVisitorFactory
  id: EntityQueryableExpressionVisitorFactory
  parent: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices
  langs:
  - csharp
  - vb
  name: EntityQueryableExpressionVisitorFactory
  nameWithType: IDatabaseProviderServices.EntityQueryableExpressionVisitorFactory
  fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.EntityQueryableExpressionVisitorFactory
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Storage/IDatabaseProviderServices.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: EntityQueryableExpressionVisitorFactory
    path: src/Microsoft.EntityFrameworkCore/Storage/IDatabaseProviderServices.cs
    startLine: 103
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\nGets the <xref href=\"Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.IEntityQueryableExpressionVisitorFactory\" data-throw-if-not-resolved=\"false\"></xref> for the database provider.\n"
  example: []
  syntax:
    content: IEntityQueryableExpressionVisitorFactory EntityQueryableExpressionVisitorFactory { get; }
    content.vb: ReadOnly Property EntityQueryableExpressionVisitorFactory As IEntityQueryableExpressionVisitorFactory
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.IEntityQueryableExpressionVisitorFactory
  overload: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.EntityQueryableExpressionVisitorFactory*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ProjectionExpressionVisitorFactory
  commentId: P:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ProjectionExpressionVisitorFactory
  id: ProjectionExpressionVisitorFactory
  parent: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices
  langs:
  - csharp
  - vb
  name: ProjectionExpressionVisitorFactory
  nameWithType: IDatabaseProviderServices.ProjectionExpressionVisitorFactory
  fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ProjectionExpressionVisitorFactory
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Storage/IDatabaseProviderServices.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ProjectionExpressionVisitorFactory
    path: src/Microsoft.EntityFrameworkCore/Storage/IDatabaseProviderServices.cs
    startLine: 108
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\nGets the <xref href=\"Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.IProjectionExpressionVisitorFactory\" data-throw-if-not-resolved=\"false\"></xref> for the database provider.\n"
  example: []
  syntax:
    content: IProjectionExpressionVisitorFactory ProjectionExpressionVisitorFactory { get; }
    content.vb: ReadOnly Property ProjectionExpressionVisitorFactory As IProjectionExpressionVisitorFactory
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.IProjectionExpressionVisitorFactory
  overload: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ProjectionExpressionVisitorFactory*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ExecutionStrategyFactory
  commentId: P:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ExecutionStrategyFactory
  id: ExecutionStrategyFactory
  parent: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices
  langs:
  - csharp
  - vb
  name: ExecutionStrategyFactory
  nameWithType: IDatabaseProviderServices.ExecutionStrategyFactory
  fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ExecutionStrategyFactory
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Storage/IDatabaseProviderServices.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ExecutionStrategyFactory
    path: src/Microsoft.EntityFrameworkCore/Storage/IDatabaseProviderServices.cs
    startLine: 113
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\nGets the <xref href=\"Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory\" data-throw-if-not-resolved=\"false\"></xref> for the database provider.\n"
  example: []
  syntax:
    content: IExecutionStrategyFactory ExecutionStrategyFactory { get; }
    content.vb: ReadOnly Property ExecutionStrategyFactory As IExecutionStrategyFactory
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory
  overload: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ExecutionStrategyFactory*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Microsoft.EntityFrameworkCore.Storage
  commentId: N:Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Storage
  nameWithType: Microsoft.EntityFrameworkCore.Storage
  fullName: Microsoft.EntityFrameworkCore.Storage
- uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.InvariantName*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.InvariantName
  isExternal: false
  name: InvariantName
  nameWithType: IDatabaseProviderServices.InvariantName
  fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.InvariantName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Storage.IDatabase
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IDatabase
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IDatabase
  nameWithType: IDatabase
  fullName: Microsoft.EntityFrameworkCore.Storage.IDatabase
- uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.Database*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.Database
  isExternal: false
  name: Database
  nameWithType: IDatabaseProviderServices.Database
  fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.Database
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IDbContextTransactionManager
  nameWithType: IDbContextTransactionManager
  fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager
- uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.TransactionManager*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.TransactionManager
  isExternal: false
  name: TransactionManager
  nameWithType: IDatabaseProviderServices.TransactionManager
  fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.TransactionManager
- uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IDatabaseCreator
  nameWithType: IDatabaseCreator
  fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator
- uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.Creator*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.Creator
  isExternal: false
  name: Creator
  nameWithType: IDatabaseProviderServices.Creator
  fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.Creator
- uid: Microsoft.EntityFrameworkCore.ValueGeneration.IValueGeneratorSelector
  commentId: T:Microsoft.EntityFrameworkCore.ValueGeneration.IValueGeneratorSelector
  parent: Microsoft.EntityFrameworkCore.ValueGeneration
  isExternal: false
  name: IValueGeneratorSelector
  nameWithType: IValueGeneratorSelector
  fullName: Microsoft.EntityFrameworkCore.ValueGeneration.IValueGeneratorSelector
- uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ValueGeneratorSelector*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ValueGeneratorSelector
  isExternal: false
  name: ValueGeneratorSelector
  nameWithType: IDatabaseProviderServices.ValueGeneratorSelector
  fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ValueGeneratorSelector
- uid: Microsoft.EntityFrameworkCore.ValueGeneration
  commentId: N:Microsoft.EntityFrameworkCore.ValueGeneration
  isExternal: false
  name: Microsoft.EntityFrameworkCore.ValueGeneration
  nameWithType: Microsoft.EntityFrameworkCore.ValueGeneration
  fullName: Microsoft.EntityFrameworkCore.ValueGeneration
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder
  parent: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
  isExternal: false
  name: IConventionSetBuilder
  nameWithType: IConventionSetBuilder
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder
- uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ConventionSetBuilder*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ConventionSetBuilder
  isExternal: false
  name: ConventionSetBuilder
  nameWithType: IDatabaseProviderServices.ConventionSetBuilder
  fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ConventionSetBuilder
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IModelSource
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.IModelSource
  parent: Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: IModelSource
  nameWithType: IModelSource
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IModelSource
- uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ModelSource*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ModelSource
  isExternal: false
  name: ModelSource
  nameWithType: IDatabaseProviderServices.ModelSource
  fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ModelSource
- uid: Microsoft.EntityFrameworkCore.Infrastructure
  commentId: N:Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Infrastructure
  nameWithType: Microsoft.EntityFrameworkCore.Infrastructure
  fullName: Microsoft.EntityFrameworkCore.Infrastructure
- uid: Microsoft.EntityFrameworkCore.Internal.IModelValidator
  commentId: T:Microsoft.EntityFrameworkCore.Internal.IModelValidator
  parent: Microsoft.EntityFrameworkCore.Internal
  isExternal: false
  name: IModelValidator
  nameWithType: IModelValidator
  fullName: Microsoft.EntityFrameworkCore.Internal.IModelValidator
- uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ModelValidator*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ModelValidator
  isExternal: false
  name: ModelValidator
  nameWithType: IDatabaseProviderServices.ModelValidator
  fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ModelValidator
- uid: Microsoft.EntityFrameworkCore.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Internal
  fullName: Microsoft.EntityFrameworkCore.Internal
- uid: Microsoft.EntityFrameworkCore.ValueGeneration.IValueGeneratorCache
  commentId: T:Microsoft.EntityFrameworkCore.ValueGeneration.IValueGeneratorCache
  parent: Microsoft.EntityFrameworkCore.ValueGeneration
  isExternal: false
  name: IValueGeneratorCache
  nameWithType: IValueGeneratorCache
  fullName: Microsoft.EntityFrameworkCore.ValueGeneration.IValueGeneratorCache
- uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ValueGeneratorCache*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ValueGeneratorCache
  isExternal: false
  name: ValueGeneratorCache
  nameWithType: IDatabaseProviderServices.ValueGeneratorCache
  fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ValueGeneratorCache
- uid: Microsoft.EntityFrameworkCore.Query.IQueryContextFactory
  commentId: T:Microsoft.EntityFrameworkCore.Query.IQueryContextFactory
  parent: Microsoft.EntityFrameworkCore.Query
  isExternal: false
  name: IQueryContextFactory
  nameWithType: IQueryContextFactory
  fullName: Microsoft.EntityFrameworkCore.Query.IQueryContextFactory
- uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.QueryContextFactory*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.QueryContextFactory
  isExternal: false
  name: QueryContextFactory
  nameWithType: IDatabaseProviderServices.QueryContextFactory
  fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.QueryContextFactory
- uid: Microsoft.EntityFrameworkCore.Query
  commentId: N:Microsoft.EntityFrameworkCore.Query
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query
  nameWithType: Microsoft.EntityFrameworkCore.Query
  fullName: Microsoft.EntityFrameworkCore.Query
- uid: Microsoft.EntityFrameworkCore.Query.IQueryCompilationContextFactory
  commentId: T:Microsoft.EntityFrameworkCore.Query.IQueryCompilationContextFactory
  parent: Microsoft.EntityFrameworkCore.Query
  isExternal: false
  name: IQueryCompilationContextFactory
  nameWithType: IQueryCompilationContextFactory
  fullName: Microsoft.EntityFrameworkCore.Query.IQueryCompilationContextFactory
- uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.QueryCompilationContextFactory*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.QueryCompilationContextFactory
  isExternal: false
  name: QueryCompilationContextFactory
  nameWithType: IDatabaseProviderServices.QueryCompilationContextFactory
  fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.QueryCompilationContextFactory
- uid: Microsoft.EntityFrameworkCore.Query.IEntityQueryModelVisitorFactory
  commentId: T:Microsoft.EntityFrameworkCore.Query.IEntityQueryModelVisitorFactory
  parent: Microsoft.EntityFrameworkCore.Query
  isExternal: false
  name: IEntityQueryModelVisitorFactory
  nameWithType: IEntityQueryModelVisitorFactory
  fullName: Microsoft.EntityFrameworkCore.Query.IEntityQueryModelVisitorFactory
- uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.EntityQueryModelVisitorFactory*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.EntityQueryModelVisitorFactory
  isExternal: false
  name: EntityQueryModelVisitorFactory
  nameWithType: IDatabaseProviderServices.EntityQueryModelVisitorFactory
  fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.EntityQueryModelVisitorFactory
- uid: Microsoft.EntityFrameworkCore.Query.ICompiledQueryCacheKeyGenerator
  commentId: T:Microsoft.EntityFrameworkCore.Query.ICompiledQueryCacheKeyGenerator
  parent: Microsoft.EntityFrameworkCore.Query
  isExternal: false
  name: ICompiledQueryCacheKeyGenerator
  nameWithType: ICompiledQueryCacheKeyGenerator
  fullName: Microsoft.EntityFrameworkCore.Query.ICompiledQueryCacheKeyGenerator
- uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.CompiledQueryCacheKeyGenerator*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.CompiledQueryCacheKeyGenerator
  isExternal: false
  name: CompiledQueryCacheKeyGenerator
  nameWithType: IDatabaseProviderServices.CompiledQueryCacheKeyGenerator
  fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.CompiledQueryCacheKeyGenerator
- uid: Microsoft.EntityFrameworkCore.Query.Internal.IExpressionPrinter
  commentId: T:Microsoft.EntityFrameworkCore.Query.Internal.IExpressionPrinter
  parent: Microsoft.EntityFrameworkCore.Query.Internal
  isExternal: false
  name: IExpressionPrinter
  nameWithType: IExpressionPrinter
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.IExpressionPrinter
- uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ExpressionPrinter*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ExpressionPrinter
  isExternal: false
  name: ExpressionPrinter
  nameWithType: IDatabaseProviderServices.ExpressionPrinter
  fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ExpressionPrinter
- uid: Microsoft.EntityFrameworkCore.Query.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Query.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Query.Internal
  fullName: Microsoft.EntityFrameworkCore.Query.Internal
- uid: Microsoft.EntityFrameworkCore.Query.IResultOperatorHandler
  commentId: T:Microsoft.EntityFrameworkCore.Query.IResultOperatorHandler
  parent: Microsoft.EntityFrameworkCore.Query
  isExternal: false
  name: IResultOperatorHandler
  nameWithType: IResultOperatorHandler
  fullName: Microsoft.EntityFrameworkCore.Query.IResultOperatorHandler
- uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ResultOperatorHandler*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ResultOperatorHandler
  isExternal: false
  name: ResultOperatorHandler
  nameWithType: IDatabaseProviderServices.ResultOperatorHandler
  fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ResultOperatorHandler
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.IEntityQueryableExpressionVisitorFactory
  commentId: T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.IEntityQueryableExpressionVisitorFactory
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
  isExternal: false
  name: IEntityQueryableExpressionVisitorFactory
  nameWithType: IEntityQueryableExpressionVisitorFactory
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.IEntityQueryableExpressionVisitorFactory
- uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.EntityQueryableExpressionVisitorFactory*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.EntityQueryableExpressionVisitorFactory
  isExternal: false
  name: EntityQueryableExpressionVisitorFactory
  nameWithType: IDatabaseProviderServices.EntityQueryableExpressionVisitorFactory
  fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.EntityQueryableExpressionVisitorFactory
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
  commentId: N:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
  nameWithType: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.IProjectionExpressionVisitorFactory
  commentId: T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.IProjectionExpressionVisitorFactory
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
  isExternal: false
  name: IProjectionExpressionVisitorFactory
  nameWithType: IProjectionExpressionVisitorFactory
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.IProjectionExpressionVisitorFactory
- uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ProjectionExpressionVisitorFactory*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ProjectionExpressionVisitorFactory
  isExternal: false
  name: ProjectionExpressionVisitorFactory
  nameWithType: IDatabaseProviderServices.ProjectionExpressionVisitorFactory
  fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ProjectionExpressionVisitorFactory
- uid: Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IExecutionStrategyFactory
  nameWithType: IExecutionStrategyFactory
  fullName: Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory
- uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ExecutionStrategyFactory*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ExecutionStrategyFactory
  isExternal: false
  name: ExecutionStrategyFactory
  nameWithType: IDatabaseProviderServices.ExecutionStrategyFactory
  fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ExecutionStrategyFactory
