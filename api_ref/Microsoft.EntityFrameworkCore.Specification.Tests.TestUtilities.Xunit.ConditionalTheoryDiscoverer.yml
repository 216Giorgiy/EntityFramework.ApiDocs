### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTheoryDiscoverer
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTheoryDiscoverer
  id: ConditionalTheoryDiscoverer
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit
  children:
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTheoryDiscoverer.#ctor(IMessageSink)
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTheoryDiscoverer.CreateTestCaseForDataRow(ITestFrameworkDiscoveryOptions,ITestMethod,IAttributeInfo,System.Object[])
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTheoryDiscoverer.CreateTestCaseForTheory(ITestFrameworkDiscoveryOptions,ITestMethod,IAttributeInfo)
  langs:
  - csharp
  - vb
  name: ConditionalTheoryDiscoverer
  nameWithType: ConditionalTheoryDiscoverer
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTheoryDiscoverer
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestUtilities/Xunit/ConditionalTheoryDiscoverer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ConditionalTheoryDiscoverer
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestUtilities/Xunit/ConditionalTheoryDiscoverer.cs
    startLine: 8
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit
  syntax:
    content: 'public class ConditionalTheoryDiscoverer : TheoryDiscoverer'
    content.vb: >-
      Public Class ConditionalTheoryDiscoverer
          Inherits TheoryDiscoverer
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTheoryDiscoverer.#ctor(IMessageSink)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTheoryDiscoverer.#ctor(IMessageSink)
  id: '#ctor(IMessageSink)'
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTheoryDiscoverer
  langs:
  - csharp
  - vb
  name: ConditionalTheoryDiscoverer(IMessageSink)
  nameWithType: ConditionalTheoryDiscoverer.ConditionalTheoryDiscoverer(IMessageSink)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTheoryDiscoverer.ConditionalTheoryDiscoverer(IMessageSink)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestUtilities/Xunit/ConditionalTheoryDiscoverer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestUtilities/Xunit/ConditionalTheoryDiscoverer.cs
    startLine: 12
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit
  syntax:
    content: public ConditionalTheoryDiscoverer(IMessageSink diagnosticMessageSink)
    content.vb: Public Sub New(diagnosticMessageSink As IMessageSink)
    parameters:
    - id: diagnosticMessageSink
      type: IMessageSink
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTheoryDiscoverer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTheoryDiscoverer.CreateTestCaseForDataRow(ITestFrameworkDiscoveryOptions,ITestMethod,IAttributeInfo,System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTheoryDiscoverer.CreateTestCaseForDataRow(ITestFrameworkDiscoveryOptions,ITestMethod,IAttributeInfo,System.Object[])
  id: CreateTestCaseForDataRow(ITestFrameworkDiscoveryOptions,ITestMethod,IAttributeInfo,System.Object[])
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTheoryDiscoverer
  langs:
  - csharp
  - vb
  name: CreateTestCaseForDataRow(ITestFrameworkDiscoveryOptions, ITestMethod, IAttributeInfo, Object[])
  nameWithType: ConditionalTheoryDiscoverer.CreateTestCaseForDataRow(ITestFrameworkDiscoveryOptions, ITestMethod, IAttributeInfo, Object[])
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTheoryDiscoverer.CreateTestCaseForDataRow(ITestFrameworkDiscoveryOptions, ITestMethod, IAttributeInfo, System.Object[])
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestUtilities/Xunit/ConditionalTheoryDiscoverer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateTestCaseForDataRow
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestUtilities/Xunit/ConditionalTheoryDiscoverer.cs
    startLine: 18
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit
  syntax:
    content: protected override IXunitTestCase CreateTestCaseForDataRow(ITestFrameworkDiscoveryOptions discoveryOptions, ITestMethod testMethod, IAttributeInfo theoryAttribute, object[] dataRow)
    content.vb: Protected Overrides Function CreateTestCaseForDataRow(discoveryOptions As ITestFrameworkDiscoveryOptions, testMethod As ITestMethod, theoryAttribute As IAttributeInfo, dataRow As Object()) As IXunitTestCase
    parameters:
    - id: discoveryOptions
      type: ITestFrameworkDiscoveryOptions
    - id: testMethod
      type: ITestMethod
    - id: theoryAttribute
      type: IAttributeInfo
    - id: dataRow
      type: System.Object[]
    return:
      type: IXunitTestCase
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTheoryDiscoverer.CreateTestCaseForDataRow*
  nameWithType.vb: ConditionalTheoryDiscoverer.CreateTestCaseForDataRow(ITestFrameworkDiscoveryOptions, ITestMethod, IAttributeInfo, Object())
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTheoryDiscoverer.CreateTestCaseForDataRow(ITestFrameworkDiscoveryOptions, ITestMethod, IAttributeInfo, System.Object())
  name.vb: CreateTestCaseForDataRow(ITestFrameworkDiscoveryOptions, ITestMethod, IAttributeInfo, Object())
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTheoryDiscoverer.CreateTestCaseForTheory(ITestFrameworkDiscoveryOptions,ITestMethod,IAttributeInfo)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTheoryDiscoverer.CreateTestCaseForTheory(ITestFrameworkDiscoveryOptions,ITestMethod,IAttributeInfo)
  id: CreateTestCaseForTheory(ITestFrameworkDiscoveryOptions,ITestMethod,IAttributeInfo)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTheoryDiscoverer
  langs:
  - csharp
  - vb
  name: CreateTestCaseForTheory(ITestFrameworkDiscoveryOptions, ITestMethod, IAttributeInfo)
  nameWithType: ConditionalTheoryDiscoverer.CreateTestCaseForTheory(ITestFrameworkDiscoveryOptions, ITestMethod, IAttributeInfo)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTheoryDiscoverer.CreateTestCaseForTheory(ITestFrameworkDiscoveryOptions, ITestMethod, IAttributeInfo)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestUtilities/Xunit/ConditionalTheoryDiscoverer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateTestCaseForTheory
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestUtilities/Xunit/ConditionalTheoryDiscoverer.cs
    startLine: 21
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit
  syntax:
    content: protected override IXunitTestCase CreateTestCaseForTheory(ITestFrameworkDiscoveryOptions discoveryOptions, ITestMethod testMethod, IAttributeInfo theoryAttribute)
    content.vb: Protected Overrides Function CreateTestCaseForTheory(discoveryOptions As ITestFrameworkDiscoveryOptions, testMethod As ITestMethod, theoryAttribute As IAttributeInfo) As IXunitTestCase
    parameters:
    - id: discoveryOptions
      type: ITestFrameworkDiscoveryOptions
    - id: testMethod
      type: ITestMethod
    - id: theoryAttribute
      type: IAttributeInfo
    return:
      type: IXunitTestCase
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTheoryDiscoverer.CreateTestCaseForTheory*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit
  commentId: N:Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit
  nameWithType: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTheoryDiscoverer.#ctor*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTheoryDiscoverer.#ctor
  isExternal: false
  name: ConditionalTheoryDiscoverer
  nameWithType: ConditionalTheoryDiscoverer.ConditionalTheoryDiscoverer
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTheoryDiscoverer.ConditionalTheoryDiscoverer
- uid: IMessageSink
  isExternal: true
  name: IMessageSink
  nameWithType: IMessageSink
  fullName: IMessageSink
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTheoryDiscoverer.CreateTestCaseForDataRow*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTheoryDiscoverer.CreateTestCaseForDataRow
  isExternal: false
  name: CreateTestCaseForDataRow
  nameWithType: ConditionalTheoryDiscoverer.CreateTestCaseForDataRow
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTheoryDiscoverer.CreateTestCaseForDataRow
- uid: ITestFrameworkDiscoveryOptions
  isExternal: true
  name: ITestFrameworkDiscoveryOptions
  nameWithType: ITestFrameworkDiscoveryOptions
  fullName: ITestFrameworkDiscoveryOptions
- uid: ITestMethod
  isExternal: true
  name: ITestMethod
  nameWithType: ITestMethod
  fullName: ITestMethod
- uid: IAttributeInfo
  isExternal: true
  name: IAttributeInfo
  nameWithType: IAttributeInfo
  fullName: IAttributeInfo
- uid: System.Object[]
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullname.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: IXunitTestCase
  isExternal: true
  name: IXunitTestCase
  nameWithType: IXunitTestCase
  fullName: IXunitTestCase
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTheoryDiscoverer.CreateTestCaseForTheory*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTheoryDiscoverer.CreateTestCaseForTheory
  isExternal: false
  name: CreateTestCaseForTheory
  nameWithType: ConditionalTheoryDiscoverer.CreateTestCaseForTheory
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestUtilities.Xunit.ConditionalTheoryDiscoverer.CreateTestCaseForTheory
