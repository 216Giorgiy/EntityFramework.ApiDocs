### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
  id: ReferenceReferenceBuilder
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders
  children:
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.Builder
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasAnnotation(System.String,System.Object)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasForeignKey(System.String,System.String[])
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasForeignKey(System.Type,System.String[])
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasForeignKey``1(System.String[])
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasForeignKeyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.String,System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo})
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasForeignKeyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.String,System.Collections.Generic.IReadOnlyList{System.String})
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKey(System.String,System.String[])
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKey(System.Type,System.String[])
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKey``1(System.String[])
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKeyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.String,System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo})
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKeyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.String,System.Collections.Generic.IReadOnlyList{System.String})
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.IsRequired(System.Boolean)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.Metadata
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#Metadata#IMutableModel}#Instance
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#Metadata#Internal#InternalRelationshipBuilder}#Instance
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.OnDelete(Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.ResolveEntityType(System.String)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.ResolveEntityType(System.Type)
  langs:
  - csharp
  - vb
  name: ReferenceReferenceBuilder
  nameWithType: ReferenceReferenceBuilder
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceReferenceBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ReferenceReferenceBuilder
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceReferenceBuilder.cs
    startLine: 25
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\n<p>\n    Provides a simple API for configuring a one-to-one relationship.\n</p>\n<p>\n    If multiple reference key properties are specified, the order of reference key properties should\n    match the order that the primary key or unique index properties were configured on the principal\n    entity type.\n</p>\n"
  example: []
  syntax:
    content: 'public class ReferenceReferenceBuilder : IInfrastructure<IMutableModel>, IInfrastructure<InternalRelationshipBuilder>'
    content.vb: >-
      Public Class ReferenceReferenceBuilder
          Implements IInfrastructure(Of IMutableModel), IInfrastructure(Of InternalRelationshipBuilder)
  inheritance:
  - System.Object
  implements:
  - Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.Metadata.IMutableModel}
  - Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder}
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.Microsoft.EntityFrameworkCore.SqlServerReferenceReferenceBuilderExtensions.ForSqlServerHasConstraintName(System.String)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.Microsoft.EntityFrameworkCore.SqliteReferenceReferenceBuilderExtensions.ForSqliteHasConstraintName(System.String)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions.HasConstraintName(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)
  id: '#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)'
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
  langs:
  - csharp
  - vb
  name: ReferenceReferenceBuilder(InternalRelationshipBuilder, EntityType, EntityType)
  nameWithType: ReferenceReferenceBuilder.ReferenceReferenceBuilder(InternalRelationshipBuilder, EntityType, EntityType)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.ReferenceReferenceBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder, Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType, Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceReferenceBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceReferenceBuilder.cs
    startLine: 37
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public ReferenceReferenceBuilder(InternalRelationshipBuilder builder, EntityType declaringEntityType, EntityType relatedEntityType)
    content.vb: Public Sub New(builder As InternalRelationshipBuilder, declaringEntityType As EntityType, relatedEntityType As EntityType)
    parameters:
    - id: builder
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
    - id: declaringEntityType
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
    - id: relatedEntityType
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
  overload: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  id: '#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder,System.Boolean,System.Boolean,System.Boolean,System.Boolean)'
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
  langs:
  - csharp
  - vb
  name: ReferenceReferenceBuilder(InternalRelationshipBuilder, ReferenceReferenceBuilder, Boolean, Boolean, Boolean, Boolean)
  nameWithType: ReferenceReferenceBuilder.ReferenceReferenceBuilder(InternalRelationshipBuilder, ReferenceReferenceBuilder, Boolean, Boolean, Boolean, Boolean)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.ReferenceReferenceBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder, Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder, System.Boolean, System.Boolean, System.Boolean, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceReferenceBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceReferenceBuilder.cs
    startLine: 52
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected ReferenceReferenceBuilder(InternalRelationshipBuilder builder, ReferenceReferenceBuilder oldBuilder, bool inverted = false, bool foreignKeySet = false, bool principalKeySet = false, bool requiredSet = false)
    content.vb: Protected Sub New(builder As InternalRelationshipBuilder, oldBuilder As ReferenceReferenceBuilder, inverted As Boolean = False, foreignKeySet As Boolean = False, principalKeySet As Boolean = False, requiredSet As Boolean = False)
    parameters:
    - id: builder
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
    - id: oldBuilder
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
    - id: inverted
      type: System.Boolean
    - id: foreignKeySet
      type: System.Boolean
    - id: principalKeySet
      type: System.Boolean
    - id: requiredSet
      type: System.Boolean
  overload: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.Builder
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.Builder
  id: Builder
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
  langs:
  - csharp
  - vb
  name: Builder
  nameWithType: ReferenceReferenceBuilder.Builder
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.Builder
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceReferenceBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Builder
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceReferenceBuilder.cs
    startLine: 103
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\nGets the internal builder being used to configure this relationship.\n"
  example: []
  syntax:
    content: protected virtual InternalRelationshipBuilder Builder { get; }
    content.vb: Protected Overridable ReadOnly Property Builder As InternalRelationshipBuilder
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
  overload: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.Builder*
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#Metadata#Internal#InternalRelationshipBuilder}#Instance
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#Metadata#Internal#InternalRelationshipBuilder}#Instance
  id: Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#Metadata#Internal#InternalRelationshipBuilder}#Instance
  isEii: true
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
  langs:
  - csharp
  - vb
  name: IInfrastructure<InternalRelationshipBuilder>.Instance
  nameWithType: ReferenceReferenceBuilder.IInfrastructure<InternalRelationshipBuilder>.Instance
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder>.Instance
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceReferenceBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder>.Instance
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceReferenceBuilder.cs
    startLine: 108
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\nGets the internal builder being used to configure this relationship.\n"
  example: []
  syntax:
    content: InternalRelationshipBuilder IInfrastructure<InternalRelationshipBuilder>.Instance { get; }
    content.vb: ReadOnly WriteOnly Property Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder>.Instance As InternalRelationshipBuilder Implements IInfrastructure(Of InternalRelationshipBuilder).Instance
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
  overload: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#Metadata#Internal#InternalRelationshipBuilder}#Instance*
  implements:
  - Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder}.Instance
  nameWithType.vb: ReferenceReferenceBuilder.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder>.Instance
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder>.Instance
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.Metadata
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.Metadata
  id: Metadata
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
  langs:
  - csharp
  - vb
  name: Metadata
  nameWithType: ReferenceReferenceBuilder.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.Metadata
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceReferenceBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Metadata
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceReferenceBuilder.cs
    startLine: 113
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\nThe foreign key that represents this relationship.\n"
  example: []
  syntax:
    content: public virtual IMutableForeignKey Metadata { get; }
    content.vb: Public Overridable ReadOnly Property Metadata As IMutableForeignKey
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey
  overload: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.Metadata*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#Metadata#IMutableModel}#Instance
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#Metadata#IMutableModel}#Instance
  id: Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#Metadata#IMutableModel}#Instance
  isEii: true
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
  langs:
  - csharp
  - vb
  name: IInfrastructure<IMutableModel>.Instance
  nameWithType: ReferenceReferenceBuilder.IInfrastructure<IMutableModel>.Instance
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.Metadata.IMutableModel>.Instance
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceReferenceBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.Metadata.IMutableModel>.Instance
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceReferenceBuilder.cs
    startLine: 118
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\nThe model that this relationship belongs to.\n"
  example: []
  syntax:
    content: IMutableModel IInfrastructure<IMutableModel>.Instance { get; }
    content.vb: ReadOnly WriteOnly Property Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.Metadata.IMutableModel>.Instance As IMutableModel Implements IInfrastructure(Of IMutableModel).Instance
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.IMutableModel
  overload: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#Metadata#IMutableModel}#Instance*
  implements:
  - Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.Metadata.IMutableModel}.Instance
  nameWithType.vb: ReferenceReferenceBuilder.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.Metadata.IMutableModel>.Instance
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.Metadata.IMutableModel>.Instance
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasAnnotation(System.String,System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasAnnotation(System.String,System.Object)
  id: HasAnnotation(System.String,System.Object)
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
  langs:
  - csharp
  - vb
  name: HasAnnotation(String, Object)
  nameWithType: ReferenceReferenceBuilder.HasAnnotation(String, Object)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasAnnotation(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceReferenceBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: HasAnnotation
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceReferenceBuilder.cs
    startLine: 127
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\nAdds or updates an annotation on the relationship. If an annotation with the key specified in\n<em>annotation</em> already exists it's value will be updated.\n"
  example: []
  syntax:
    content: public virtual ReferenceReferenceBuilder HasAnnotation(string annotation, object value)
    content.vb: Public Overridable Function HasAnnotation(annotation As String, value As Object) As ReferenceReferenceBuilder
    parameters:
    - id: annotation
      type: System.String
      description: 'The key of the annotation to be added or updated. '
    - id: value
      type: System.Object
      description: 'The value to be stored in the annotation. '
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
      description: 'The same builder instance so that multiple configuration calls can be chained. '
  overload: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasAnnotation*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasForeignKey(System.Type,System.String[])
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasForeignKey(System.Type,System.String[])
  id: HasForeignKey(System.Type,System.String[])
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
  langs:
  - csharp
  - vb
  name: HasForeignKey(Type, String[])
  nameWithType: ReferenceReferenceBuilder.HasForeignKey(Type, String[])
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasForeignKey(System.Type, System.String[])
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceReferenceBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: HasForeignKey
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceReferenceBuilder.cs
    startLine: 163
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\n<p>\n    Configures the property(s) to use as the foreign key for this relationship.\n</p>\n<p>\n    If the specified property name(s) do not exist on the entity type then a new shadow state\n    property(s) will be added to serve as the foreign key. A shadow state property is one\n    that does not have a corresponding property in the entity class. The current value for the\n    property is stored in the <xref href=\"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker\" data-throw-if-not-resolved=\"false\"></xref> rather than being stored in instances\n    of the entity class.\n</p>\n<p>\n    If <xref href=\"Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKey(System.Type%2cSystem.String%5b%5d)\" data-throw-if-not-resolved=\"false\"></xref> is not specified, then an attempt will be made to\n    match the data type and order of foreign key properties against the primary key of the principal\n    entity type. If they do not match, new shadow state properties that form a unique index will be\n    added to the principal entity type to serve as the reference key.\n</p>\n"
  example: []
  syntax:
    content: public virtual ReferenceReferenceBuilder HasForeignKey(Type dependentEntityType, params string[] foreignKeyPropertyNames)
    content.vb: Public Overridable Function HasForeignKey(dependentEntityType As Type, ParamArray foreignKeyPropertyNames As String()) As ReferenceReferenceBuilder
    parameters:
    - id: dependentEntityType
      type: System.Type
      description: "\nThe entity type that is the dependent in this relationship (the type that has the foreign key\nproperties).\n"
    - id: foreignKeyPropertyNames
      type: System.String[]
      description: "\nThe name(s) of the foreign key property(s).\n"
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
      description: 'The same builder instance so that multiple configuration calls can be chained. '
  overload: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasForeignKey*
  nameWithType.vb: ReferenceReferenceBuilder.HasForeignKey(Type, String())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasForeignKey(System.Type, System.String())
  name.vb: HasForeignKey(Type, String())
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasForeignKey``1(System.String[])
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasForeignKey``1(System.String[])
  id: HasForeignKey``1(System.String[])
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
  langs:
  - csharp
  - vb
  name: HasForeignKey<TDependentEntity>(String[])
  nameWithType: ReferenceReferenceBuilder.HasForeignKey<TDependentEntity>(String[])
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasForeignKey<TDependentEntity>(System.String[])
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceReferenceBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: HasForeignKey
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceReferenceBuilder.cs
    startLine: 200
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\n<p>\n    Configures the property(s) to use as the foreign key for this relationship.\n</p>\n<p>\n    If the specified property name(s) do not exist on the entity type then a new shadow state\n    property(s) will be added to serve as the foreign key. A shadow state property is one\n    that does not have a corresponding property in the entity class. The current value for the\n    property is stored in the <xref href=\"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker\" data-throw-if-not-resolved=\"false\"></xref> rather than being stored in instances\n    of the entity class.\n</p>\n<p>\n    If <xref href=\"Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKey(System.Type%2cSystem.String%5b%5d)\" data-throw-if-not-resolved=\"false\"></xref> is not specified, then an attempt will be made to\n    match the data type and order of foreign key properties against the primary key of the principal\n    entity type. If they do not match, new shadow state properties that form a unique index will be\n    added to the principal entity type to serve as the reference key.\n</p>\n"
  example: []
  syntax:
    content: 'public virtual ReferenceReferenceBuilder HasForeignKey<TDependentEntity>(params string[] foreignKeyPropertyNames)where TDependentEntity : class'
    content.vb: Public Overridable Function HasForeignKey(Of TDependentEntity As Class)(ParamArray foreignKeyPropertyNames As String()) As ReferenceReferenceBuilder
    parameters:
    - id: foreignKeyPropertyNames
      type: System.String[]
      description: "\nThe name(s) of the foreign key property(s).\n"
    typeParameters:
    - id: TDependentEntity
      description: "\nThe entity type that is the dependent in this relationship (the type that has the foreign key\nproperties).\n"
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
      description: 'The same builder instance so that multiple configuration calls can be chained. '
  overload: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasForeignKey*
  nameWithType.vb: ReferenceReferenceBuilder.HasForeignKey(Of TDependentEntity)(String())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasForeignKey(Of TDependentEntity)(System.String())
  name.vb: HasForeignKey(Of TDependentEntity)(String())
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasForeignKey(System.String,System.String[])
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasForeignKey(System.String,System.String[])
  id: HasForeignKey(System.String,System.String[])
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
  langs:
  - csharp
  - vb
  name: HasForeignKey(String, String[])
  nameWithType: ReferenceReferenceBuilder.HasForeignKey(String, String[])
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasForeignKey(System.String, System.String[])
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceReferenceBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: HasForeignKey
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceReferenceBuilder.cs
    startLine: 231
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\n<p>\n    Configures the property(s) to use as the foreign key for this relationship.\n</p>\n<p>\n    If the specified property name(s) do not exist on the entity type then a new shadow state\n    property(s) will be added to serve as the foreign key. A shadow state property is one\n    that does not have a corresponding property in the entity class. The current value for the\n    property is stored in the <xref href=\"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker\" data-throw-if-not-resolved=\"false\"></xref> rather than being stored in instances\n    of the entity class.\n</p>\n<p>\n    If <xref href=\"Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKey(System.Type%2cSystem.String%5b%5d)\" data-throw-if-not-resolved=\"false\"></xref> is not specified, then an attempt will be made to\n    match the data type and order of foreign key properties against the primary key of the principal\n    entity type. If they do not match, new shadow state properties that form a unique index will be\n    added to the principal entity type to serve as the reference key.\n</p>\n"
  example: []
  syntax:
    content: public virtual ReferenceReferenceBuilder HasForeignKey(string dependentEntityTypeName, params string[] foreignKeyPropertyNames)
    content.vb: Public Overridable Function HasForeignKey(dependentEntityTypeName As String, ParamArray foreignKeyPropertyNames As String()) As ReferenceReferenceBuilder
    parameters:
    - id: dependentEntityTypeName
      type: System.String
      description: "\nThe name of the entity type that is the dependent in this relationship (the type that has the foreign\nkey properties).\n"
    - id: foreignKeyPropertyNames
      type: System.String[]
      description: "\nThe name(s) of the foreign key property(s).\n"
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
      description: 'The same builder instance so that multiple configuration calls can be chained. '
  overload: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasForeignKey*
  nameWithType.vb: ReferenceReferenceBuilder.HasForeignKey(String, String())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasForeignKey(System.String, System.String())
  name.vb: HasForeignKey(String, String())
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasForeignKeyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.String,System.Collections.Generic.IReadOnlyList{System.String})
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasForeignKeyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.String,System.Collections.Generic.IReadOnlyList{System.String})
  id: HasForeignKeyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.String,System.Collections.Generic.IReadOnlyList{System.String})
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
  langs:
  - csharp
  - vb
  name: HasForeignKeyBuilder(EntityType, String, IReadOnlyList<String>)
  nameWithType: ReferenceReferenceBuilder.HasForeignKeyBuilder(EntityType, String, IReadOnlyList<String>)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasForeignKeyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType, System.String, System.Collections.Generic.IReadOnlyList<System.String>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceReferenceBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: HasForeignKeyBuilder
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceReferenceBuilder.cs
    startLine: 246
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual InternalRelationshipBuilder HasForeignKeyBuilder(EntityType dependentEntityType, string dependentEntityTypeName, IReadOnlyList<string> foreignKeyPropertyNames)
    content.vb: Protected Overridable Function HasForeignKeyBuilder(dependentEntityType As EntityType, dependentEntityTypeName As String, foreignKeyPropertyNames As IReadOnlyList(Of String)) As InternalRelationshipBuilder
    parameters:
    - id: dependentEntityType
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
    - id: dependentEntityTypeName
      type: System.String
    - id: foreignKeyPropertyNames
      type: System.Collections.Generic.IReadOnlyList{System.String}
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
  overload: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasForeignKeyBuilder*
  nameWithType.vb: ReferenceReferenceBuilder.HasForeignKeyBuilder(EntityType, String, IReadOnlyList(Of String))
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasForeignKeyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType, System.String, System.Collections.Generic.IReadOnlyList(Of System.String))
  name.vb: HasForeignKeyBuilder(EntityType, String, IReadOnlyList(Of String))
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasForeignKeyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.String,System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo})
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasForeignKeyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.String,System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo})
  id: HasForeignKeyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.String,System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo})
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
  langs:
  - csharp
  - vb
  name: HasForeignKeyBuilder(EntityType, String, IReadOnlyList<PropertyInfo>)
  nameWithType: ReferenceReferenceBuilder.HasForeignKeyBuilder(EntityType, String, IReadOnlyList<PropertyInfo>)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasForeignKeyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType, System.String, System.Collections.Generic.IReadOnlyList<System.Reflection.PropertyInfo>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceReferenceBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: HasForeignKeyBuilder
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceReferenceBuilder.cs
    startLine: 259
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual InternalRelationshipBuilder HasForeignKeyBuilder(EntityType dependentEntityType, string dependentEntityTypeName, IReadOnlyList<PropertyInfo> foreignKeyProperties)
    content.vb: Protected Overridable Function HasForeignKeyBuilder(dependentEntityType As EntityType, dependentEntityTypeName As String, foreignKeyProperties As IReadOnlyList(Of PropertyInfo)) As InternalRelationshipBuilder
    parameters:
    - id: dependentEntityType
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
    - id: dependentEntityTypeName
      type: System.String
    - id: foreignKeyProperties
      type: System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo}
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
  overload: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasForeignKeyBuilder*
  nameWithType.vb: ReferenceReferenceBuilder.HasForeignKeyBuilder(EntityType, String, IReadOnlyList(Of PropertyInfo))
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasForeignKeyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType, System.String, System.Collections.Generic.IReadOnlyList(Of System.Reflection.PropertyInfo))
  name.vb: HasForeignKeyBuilder(EntityType, String, IReadOnlyList(Of PropertyInfo))
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKey(System.Type,System.String[])
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKey(System.Type,System.String[])
  id: HasPrincipalKey(System.Type,System.String[])
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
  langs:
  - csharp
  - vb
  name: HasPrincipalKey(Type, String[])
  nameWithType: ReferenceReferenceBuilder.HasPrincipalKey(Type, String[])
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKey(System.Type, System.String[])
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceReferenceBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: HasPrincipalKey
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceReferenceBuilder.cs
    startLine: 299
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\nConfigures the unique property(s) that this relationship targets. Typically you would only call this\nmethod if you want to use a property(s) other than the primary key as the principal property(s). If\nthe specified property(s) is not already a unique constraint (or the primary key) then a new unique\nconstraint will be introduced.\n"
  example: []
  syntax:
    content: public virtual ReferenceReferenceBuilder HasPrincipalKey(Type principalEntityType, params string[] keyPropertyNames)
    content.vb: Public Overridable Function HasPrincipalKey(principalEntityType As Type, ParamArray keyPropertyNames As String()) As ReferenceReferenceBuilder
    parameters:
    - id: principalEntityType
      type: System.Type
      description: "\nThe entity type that is the principal in this relationship (the type\nthat has the reference key properties).\n"
    - id: keyPropertyNames
      type: System.String[]
      description: 'The name(s) of the reference key property(s). '
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
      description: 'The same builder instance so that multiple configuration calls can be chained. '
  overload: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKey*
  nameWithType.vb: ReferenceReferenceBuilder.HasPrincipalKey(Type, String())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKey(System.Type, System.String())
  name.vb: HasPrincipalKey(Type, String())
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKey``1(System.String[])
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKey``1(System.String[])
  id: HasPrincipalKey``1(System.String[])
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
  langs:
  - csharp
  - vb
  name: HasPrincipalKey<TPrincipalEntity>(String[])
  nameWithType: ReferenceReferenceBuilder.HasPrincipalKey<TPrincipalEntity>(String[])
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKey<TPrincipalEntity>(System.String[])
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceReferenceBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: HasPrincipalKey
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceReferenceBuilder.cs
    startLine: 323
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\nConfigures the unique property(s) that this relationship targets. Typically you would only call this\nmethod if you want to use a property(s) other than the primary key as the principal property(s). If\nthe specified property(s) is not already a unique constraint (or the primary key) then a new unique\nconstraint will be introduced.\n"
  example: []
  syntax:
    content: 'public virtual ReferenceReferenceBuilder HasPrincipalKey<TPrincipalEntity>(params string[] keyPropertyNames)where TPrincipalEntity : class'
    content.vb: Public Overridable Function HasPrincipalKey(Of TPrincipalEntity As Class)(ParamArray keyPropertyNames As String()) As ReferenceReferenceBuilder
    parameters:
    - id: keyPropertyNames
      type: System.String[]
      description: 'The name(s) of the reference key property(s). '
    typeParameters:
    - id: TPrincipalEntity
      description: "\nThe entity type that is the principal in this relationship (the type\nthat has the reference key properties).\n"
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
      description: 'The same builder instance so that multiple configuration calls can be chained. '
  overload: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKey*
  nameWithType.vb: ReferenceReferenceBuilder.HasPrincipalKey(Of TPrincipalEntity)(String())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKey(Of TPrincipalEntity)(System.String())
  name.vb: HasPrincipalKey(Of TPrincipalEntity)(String())
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKey(System.String,System.String[])
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKey(System.String,System.String[])
  id: HasPrincipalKey(System.String,System.String[])
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
  langs:
  - csharp
  - vb
  name: HasPrincipalKey(String, String[])
  nameWithType: ReferenceReferenceBuilder.HasPrincipalKey(String, String[])
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKey(System.String, System.String[])
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceReferenceBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: HasPrincipalKey
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceReferenceBuilder.cs
    startLine: 340
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\nConfigures the unique property(s) that this relationship targets. Typically you would only call this\nmethod if you want to use a property(s) other than the primary key as the principal property(s). If\nthe specified property(s) is not already a unique constraint (or the primary key) then a new unique\nconstraint will be introduced.\n"
  example: []
  syntax:
    content: public virtual ReferenceReferenceBuilder HasPrincipalKey(string principalEntityTypeName, params string[] keyPropertyNames)
    content.vb: Public Overridable Function HasPrincipalKey(principalEntityTypeName As String, ParamArray keyPropertyNames As String()) As ReferenceReferenceBuilder
    parameters:
    - id: principalEntityTypeName
      type: System.String
      description: "\nThe name of the entity type that is the principal in this relationship (the type\nthat has the reference key properties).\n"
    - id: keyPropertyNames
      type: System.String[]
      description: 'The name(s) of the reference key property(s). '
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
      description: 'The same builder instance so that multiple configuration calls can be chained. '
  overload: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKey*
  nameWithType.vb: ReferenceReferenceBuilder.HasPrincipalKey(String, String())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKey(System.String, System.String())
  name.vb: HasPrincipalKey(String, String())
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKeyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.String,System.Collections.Generic.IReadOnlyList{System.String})
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKeyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.String,System.Collections.Generic.IReadOnlyList{System.String})
  id: HasPrincipalKeyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.String,System.Collections.Generic.IReadOnlyList{System.String})
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
  langs:
  - csharp
  - vb
  name: HasPrincipalKeyBuilder(EntityType, String, IReadOnlyList<String>)
  nameWithType: ReferenceReferenceBuilder.HasPrincipalKeyBuilder(EntityType, String, IReadOnlyList<String>)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKeyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType, System.String, System.Collections.Generic.IReadOnlyList<System.String>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceReferenceBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: HasPrincipalKeyBuilder
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceReferenceBuilder.cs
    startLine: 356
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual InternalRelationshipBuilder HasPrincipalKeyBuilder(EntityType principalEntityType, string principalEntityTypeName, IReadOnlyList<string> foreignKeyPropertyNames)
    content.vb: Protected Overridable Function HasPrincipalKeyBuilder(principalEntityType As EntityType, principalEntityTypeName As String, foreignKeyPropertyNames As IReadOnlyList(Of String)) As InternalRelationshipBuilder
    parameters:
    - id: principalEntityType
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
    - id: principalEntityTypeName
      type: System.String
    - id: foreignKeyPropertyNames
      type: System.Collections.Generic.IReadOnlyList{System.String}
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
  overload: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKeyBuilder*
  nameWithType.vb: ReferenceReferenceBuilder.HasPrincipalKeyBuilder(EntityType, String, IReadOnlyList(Of String))
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKeyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType, System.String, System.Collections.Generic.IReadOnlyList(Of System.String))
  name.vb: HasPrincipalKeyBuilder(EntityType, String, IReadOnlyList(Of String))
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKeyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.String,System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo})
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKeyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.String,System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo})
  id: HasPrincipalKeyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.String,System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo})
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
  langs:
  - csharp
  - vb
  name: HasPrincipalKeyBuilder(EntityType, String, IReadOnlyList<PropertyInfo>)
  nameWithType: ReferenceReferenceBuilder.HasPrincipalKeyBuilder(EntityType, String, IReadOnlyList<PropertyInfo>)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKeyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType, System.String, System.Collections.Generic.IReadOnlyList<System.Reflection.PropertyInfo>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceReferenceBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: HasPrincipalKeyBuilder
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceReferenceBuilder.cs
    startLine: 367
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual InternalRelationshipBuilder HasPrincipalKeyBuilder(EntityType principalEntityType, string principalEntityTypeName, IReadOnlyList<PropertyInfo> foreignKeyProperties)
    content.vb: Protected Overridable Function HasPrincipalKeyBuilder(principalEntityType As EntityType, principalEntityTypeName As String, foreignKeyProperties As IReadOnlyList(Of PropertyInfo)) As InternalRelationshipBuilder
    parameters:
    - id: principalEntityType
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
    - id: principalEntityTypeName
      type: System.String
    - id: foreignKeyProperties
      type: System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo}
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
  overload: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKeyBuilder*
  nameWithType.vb: ReferenceReferenceBuilder.HasPrincipalKeyBuilder(EntityType, String, IReadOnlyList(Of PropertyInfo))
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKeyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType, System.String, System.Collections.Generic.IReadOnlyList(Of System.Reflection.PropertyInfo))
  name.vb: HasPrincipalKeyBuilder(EntityType, String, IReadOnlyList(Of PropertyInfo))
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.ResolveEntityType(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.ResolveEntityType(System.String)
  id: ResolveEntityType(System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
  langs:
  - csharp
  - vb
  name: ResolveEntityType(String)
  nameWithType: ReferenceReferenceBuilder.ResolveEntityType(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.ResolveEntityType(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceReferenceBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ResolveEntityType
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceReferenceBuilder.cs
    startLine: 396
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual EntityType ResolveEntityType(string entityTypeName)
    content.vb: Protected Overridable Function ResolveEntityType(entityTypeName As String) As EntityType
    parameters:
    - id: entityTypeName
      type: System.String
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
  overload: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.ResolveEntityType*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.ResolveEntityType(System.Type)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.ResolveEntityType(System.Type)
  id: ResolveEntityType(System.Type)
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
  langs:
  - csharp
  - vb
  name: ResolveEntityType(Type)
  nameWithType: ReferenceReferenceBuilder.ResolveEntityType(Type)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.ResolveEntityType(System.Type)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceReferenceBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ResolveEntityType
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceReferenceBuilder.cs
    startLine: 425
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual EntityType ResolveEntityType(Type entityType)
    content.vb: Protected Overridable Function ResolveEntityType(entityType As Type) As EntityType
    parameters:
    - id: entityType
      type: System.Type
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
  overload: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.ResolveEntityType*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.IsRequired(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.IsRequired(System.Boolean)
  id: IsRequired(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
  langs:
  - csharp
  - vb
  name: IsRequired(Boolean)
  nameWithType: ReferenceReferenceBuilder.IsRequired(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.IsRequired(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceReferenceBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: IsRequired
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceReferenceBuilder.cs
    startLine: 449
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\nConfigures whether this is a required relationship (i.e. whether the foreign key property(s) can\nbe assigned null).\n"
  example: []
  syntax:
    content: public virtual ReferenceReferenceBuilder IsRequired(bool required = true)
    content.vb: Public Overridable Function IsRequired(required As Boolean = True) As ReferenceReferenceBuilder
    parameters:
    - id: required
      type: System.Boolean
      description: 'A value indicating whether this is a required relationship. '
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
      description: 'The same builder instance so that multiple configuration calls can be chained. '
  overload: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.IsRequired*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.OnDelete(Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.OnDelete(Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior)
  id: OnDelete(Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior)
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
  langs:
  - csharp
  - vb
  name: OnDelete(DeleteBehavior)
  nameWithType: ReferenceReferenceBuilder.OnDelete(DeleteBehavior)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.OnDelete(Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceReferenceBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: OnDelete
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceReferenceBuilder.cs
    startLine: 458
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\nConfigures how a delete operation is applied to dependent entities in the relationship when the\nprincipal is deleted or the relationship is severed.\n"
  example: []
  syntax:
    content: public virtual ReferenceReferenceBuilder OnDelete(DeleteBehavior deleteBehavior)
    content.vb: Public Overridable Function OnDelete(deleteBehavior As DeleteBehavior) As ReferenceReferenceBuilder
    parameters:
    - id: deleteBehavior
      type: Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior
      description: 'The action to perform. '
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
      description: 'The same builder instance so that multiple configuration calls can be chained. '
  overload: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.OnDelete*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Builders
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Builders
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Builders
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.Metadata.IMutableModel}
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.Metadata.IMutableModel}
  parent: Microsoft.EntityFrameworkCore.Infrastructure
  definition: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
  name: IInfrastructure<IMutableModel>
  nameWithType: IInfrastructure<IMutableModel>
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.Metadata.IMutableModel>
  nameWithType.vb: IInfrastructure(Of IMutableModel)
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of Microsoft.EntityFrameworkCore.Metadata.IMutableModel)
  name.vb: IInfrastructure(Of IMutableModel)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.IMutableModel
    name: IMutableModel
    nameWithType: IMutableModel
    fullName: Microsoft.EntityFrameworkCore.Metadata.IMutableModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IMutableModel
    name: IMutableModel
    nameWithType: IMutableModel
    fullName: Microsoft.EntityFrameworkCore.Metadata.IMutableModel
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder}
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder}
  parent: Microsoft.EntityFrameworkCore.Infrastructure
  definition: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
  name: IInfrastructure<InternalRelationshipBuilder>
  nameWithType: IInfrastructure<InternalRelationshipBuilder>
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder>
  nameWithType.vb: IInfrastructure(Of InternalRelationshipBuilder)
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)
  name.vb: IInfrastructure(Of InternalRelationshipBuilder)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
    name: InternalRelationshipBuilder
    nameWithType: InternalRelationshipBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
    name: InternalRelationshipBuilder
    nameWithType: InternalRelationshipBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.Microsoft.EntityFrameworkCore.SqlServerReferenceReferenceBuilderExtensions.ForSqlServerHasConstraintName(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.SqlServerReferenceReferenceBuilderExtensions.ForSqlServerHasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder,System.String)
  parent: Microsoft.EntityFrameworkCore.SqlServerReferenceReferenceBuilderExtensions
  definition: Microsoft.EntityFrameworkCore.SqlServerReferenceReferenceBuilderExtensions.ForSqlServerHasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder,System.String)
  name: ForSqlServerHasConstraintName(String)
  nameWithType: SqlServerReferenceReferenceBuilderExtensions.ForSqlServerHasConstraintName(String)
  fullName: Microsoft.EntityFrameworkCore.SqlServerReferenceReferenceBuilderExtensions.ForSqlServerHasConstraintName(System.String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.SqlServerReferenceReferenceBuilderExtensions.ForSqlServerHasConstraintName(System.String)
    name: ForSqlServerHasConstraintName
    nameWithType: SqlServerReferenceReferenceBuilderExtensions.ForSqlServerHasConstraintName
    fullName: Microsoft.EntityFrameworkCore.SqlServerReferenceReferenceBuilderExtensions.ForSqlServerHasConstraintName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.SqlServerReferenceReferenceBuilderExtensions.ForSqlServerHasConstraintName(System.String)
    name: ForSqlServerHasConstraintName
    nameWithType: SqlServerReferenceReferenceBuilderExtensions.ForSqlServerHasConstraintName
    fullName: Microsoft.EntityFrameworkCore.SqlServerReferenceReferenceBuilderExtensions.ForSqlServerHasConstraintName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.Microsoft.EntityFrameworkCore.SqliteReferenceReferenceBuilderExtensions.ForSqliteHasConstraintName(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.SqliteReferenceReferenceBuilderExtensions.ForSqliteHasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder,System.String)
  parent: Microsoft.EntityFrameworkCore.SqliteReferenceReferenceBuilderExtensions
  definition: Microsoft.EntityFrameworkCore.SqliteReferenceReferenceBuilderExtensions.ForSqliteHasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder,System.String)
  name: ForSqliteHasConstraintName(String)
  nameWithType: SqliteReferenceReferenceBuilderExtensions.ForSqliteHasConstraintName(String)
  fullName: Microsoft.EntityFrameworkCore.SqliteReferenceReferenceBuilderExtensions.ForSqliteHasConstraintName(System.String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.SqliteReferenceReferenceBuilderExtensions.ForSqliteHasConstraintName(System.String)
    name: ForSqliteHasConstraintName
    nameWithType: SqliteReferenceReferenceBuilderExtensions.ForSqliteHasConstraintName
    fullName: Microsoft.EntityFrameworkCore.SqliteReferenceReferenceBuilderExtensions.ForSqliteHasConstraintName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.SqliteReferenceReferenceBuilderExtensions.ForSqliteHasConstraintName(System.String)
    name: ForSqliteHasConstraintName
    nameWithType: SqliteReferenceReferenceBuilderExtensions.ForSqliteHasConstraintName
    fullName: Microsoft.EntityFrameworkCore.SqliteReferenceReferenceBuilderExtensions.ForSqliteHasConstraintName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions.HasConstraintName(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions.HasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder,System.String)
  parent: Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions
  definition: Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions.HasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder,System.String)
  name: HasConstraintName(String)
  nameWithType: RelationalReferenceReferenceBuilderExtensions.HasConstraintName(String)
  fullName: Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions.HasConstraintName(System.String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions.HasConstraintName(System.String)
    name: HasConstraintName
    nameWithType: RelationalReferenceReferenceBuilderExtensions.HasConstraintName
    fullName: Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions.HasConstraintName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions.HasConstraintName(System.String)
    name: HasConstraintName
    nameWithType: RelationalReferenceReferenceBuilderExtensions.HasConstraintName
    fullName: Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions.HasConstraintName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
  isExternal: false
  name: IInfrastructure<T>
  nameWithType: IInfrastructure<T>
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<T>
  nameWithType.vb: IInfrastructure(Of T)
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of T)
  name.vb: IInfrastructure(Of T)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure
  commentId: N:Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Infrastructure
  nameWithType: Microsoft.EntityFrameworkCore.Infrastructure
  fullName: Microsoft.EntityFrameworkCore.Infrastructure
- uid: Microsoft.EntityFrameworkCore.SqlServerReferenceReferenceBuilderExtensions.ForSqlServerHasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.SqlServerReferenceReferenceBuilderExtensions.ForSqlServerHasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder,System.String)
  isExternal: true
  name: ForSqlServerHasConstraintName(ReferenceReferenceBuilder, String)
  nameWithType: SqlServerReferenceReferenceBuilderExtensions.ForSqlServerHasConstraintName(ReferenceReferenceBuilder, String)
  fullName: Microsoft.EntityFrameworkCore.SqlServerReferenceReferenceBuilderExtensions.ForSqlServerHasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder, System.String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.SqlServerReferenceReferenceBuilderExtensions.ForSqlServerHasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder,System.String)
    name: ForSqlServerHasConstraintName
    nameWithType: SqlServerReferenceReferenceBuilderExtensions.ForSqlServerHasConstraintName
    fullName: Microsoft.EntityFrameworkCore.SqlServerReferenceReferenceBuilderExtensions.ForSqlServerHasConstraintName
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
    name: ReferenceReferenceBuilder
    nameWithType: ReferenceReferenceBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.SqlServerReferenceReferenceBuilderExtensions.ForSqlServerHasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder,System.String)
    name: ForSqlServerHasConstraintName
    nameWithType: SqlServerReferenceReferenceBuilderExtensions.ForSqlServerHasConstraintName
    fullName: Microsoft.EntityFrameworkCore.SqlServerReferenceReferenceBuilderExtensions.ForSqlServerHasConstraintName
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
    name: ReferenceReferenceBuilder
    nameWithType: ReferenceReferenceBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.SqlServerReferenceReferenceBuilderExtensions
  commentId: T:Microsoft.EntityFrameworkCore.SqlServerReferenceReferenceBuilderExtensions
  parent: Microsoft.EntityFrameworkCore
  isExternal: false
  name: SqlServerReferenceReferenceBuilderExtensions
  nameWithType: SqlServerReferenceReferenceBuilderExtensions
  fullName: Microsoft.EntityFrameworkCore.SqlServerReferenceReferenceBuilderExtensions
- uid: Microsoft.EntityFrameworkCore.SqliteReferenceReferenceBuilderExtensions.ForSqliteHasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.SqliteReferenceReferenceBuilderExtensions.ForSqliteHasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder,System.String)
  isExternal: true
  name: ForSqliteHasConstraintName(ReferenceReferenceBuilder, String)
  nameWithType: SqliteReferenceReferenceBuilderExtensions.ForSqliteHasConstraintName(ReferenceReferenceBuilder, String)
  fullName: Microsoft.EntityFrameworkCore.SqliteReferenceReferenceBuilderExtensions.ForSqliteHasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder, System.String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.SqliteReferenceReferenceBuilderExtensions.ForSqliteHasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder,System.String)
    name: ForSqliteHasConstraintName
    nameWithType: SqliteReferenceReferenceBuilderExtensions.ForSqliteHasConstraintName
    fullName: Microsoft.EntityFrameworkCore.SqliteReferenceReferenceBuilderExtensions.ForSqliteHasConstraintName
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
    name: ReferenceReferenceBuilder
    nameWithType: ReferenceReferenceBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.SqliteReferenceReferenceBuilderExtensions.ForSqliteHasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder,System.String)
    name: ForSqliteHasConstraintName
    nameWithType: SqliteReferenceReferenceBuilderExtensions.ForSqliteHasConstraintName
    fullName: Microsoft.EntityFrameworkCore.SqliteReferenceReferenceBuilderExtensions.ForSqliteHasConstraintName
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
    name: ReferenceReferenceBuilder
    nameWithType: ReferenceReferenceBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.SqliteReferenceReferenceBuilderExtensions
  commentId: T:Microsoft.EntityFrameworkCore.SqliteReferenceReferenceBuilderExtensions
  parent: Microsoft.EntityFrameworkCore
  isExternal: false
  name: SqliteReferenceReferenceBuilderExtensions
  nameWithType: SqliteReferenceReferenceBuilderExtensions
  fullName: Microsoft.EntityFrameworkCore.SqliteReferenceReferenceBuilderExtensions
- uid: Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions.HasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions.HasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder,System.String)
  isExternal: true
  name: HasConstraintName(ReferenceReferenceBuilder, String)
  nameWithType: RelationalReferenceReferenceBuilderExtensions.HasConstraintName(ReferenceReferenceBuilder, String)
  fullName: Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions.HasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder, System.String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions.HasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder,System.String)
    name: HasConstraintName
    nameWithType: RelationalReferenceReferenceBuilderExtensions.HasConstraintName
    fullName: Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions.HasConstraintName
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
    name: ReferenceReferenceBuilder
    nameWithType: ReferenceReferenceBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions.HasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder,System.String)
    name: HasConstraintName
    nameWithType: RelationalReferenceReferenceBuilderExtensions.HasConstraintName
    fullName: Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions.HasConstraintName
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
    name: ReferenceReferenceBuilder
    nameWithType: ReferenceReferenceBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions
  commentId: T:Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions
  parent: Microsoft.EntityFrameworkCore
  isExternal: false
  name: RelationalReferenceReferenceBuilderExtensions
  nameWithType: RelationalReferenceReferenceBuilderExtensions
  fullName: Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions
- uid: Microsoft.EntityFrameworkCore
  commentId: N:Microsoft.EntityFrameworkCore
  isExternal: false
  name: Microsoft.EntityFrameworkCore
  nameWithType: Microsoft.EntityFrameworkCore
  fullName: Microsoft.EntityFrameworkCore
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.#ctor*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.#ctor
  isExternal: false
  name: ReferenceReferenceBuilder
  nameWithType: ReferenceReferenceBuilder.ReferenceReferenceBuilder
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.ReferenceReferenceBuilder
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: InternalRelationshipBuilder
  nameWithType: InternalRelationshipBuilder
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: EntityType
  nameWithType: EntityType
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders
  isExternal: false
  name: ReferenceReferenceBuilder
  nameWithType: ReferenceReferenceBuilder
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.Builder*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.Builder
  isExternal: false
  name: Builder
  nameWithType: ReferenceReferenceBuilder.Builder
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.Builder
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#Metadata#Internal#InternalRelationshipBuilder}#Instance*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#Metadata#Internal#InternalRelationshipBuilder}#Instance
  isExternal: false
  name: IInfrastructure<InternalRelationshipBuilder>.Instance
  nameWithType: ReferenceReferenceBuilder.IInfrastructure<InternalRelationshipBuilder>.Instance
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder>.Instance
  nameWithType.vb: ReferenceReferenceBuilder.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder>.Instance
  name.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder>.Instance
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder}.Instance
  commentId: P:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder}.Instance
  parent: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder}
  definition: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1.Instance
  name: Instance
  nameWithType: IInfrastructure<InternalRelationshipBuilder>.Instance
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder>.Instance
  nameWithType.vb: IInfrastructure(Of InternalRelationshipBuilder).Instance
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder).Instance
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1.Instance
  commentId: P:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1.Instance
  isExternal: false
  name: Instance
  nameWithType: IInfrastructure<T>.Instance
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<T>.Instance
  nameWithType.vb: IInfrastructure(Of T).Instance
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of T).Instance
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.Metadata*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.Metadata
  isExternal: false
  name: Metadata
  nameWithType: ReferenceReferenceBuilder.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.Metadata
- uid: Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IMutableForeignKey
  nameWithType: IMutableForeignKey
  fullName: Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#Metadata#IMutableModel}#Instance*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#Metadata#IMutableModel}#Instance
  isExternal: false
  name: IInfrastructure<IMutableModel>.Instance
  nameWithType: ReferenceReferenceBuilder.IInfrastructure<IMutableModel>.Instance
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.Metadata.IMutableModel>.Instance
  nameWithType.vb: ReferenceReferenceBuilder.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.Metadata.IMutableModel>.Instance
  name.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.Metadata.IMutableModel>.Instance
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.Metadata.IMutableModel}.Instance
  commentId: P:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.Metadata.IMutableModel}.Instance
  parent: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.Metadata.IMutableModel}
  definition: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1.Instance
  name: Instance
  nameWithType: IInfrastructure<IMutableModel>.Instance
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.Metadata.IMutableModel>.Instance
  nameWithType.vb: IInfrastructure(Of IMutableModel).Instance
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of Microsoft.EntityFrameworkCore.Metadata.IMutableModel).Instance
- uid: Microsoft.EntityFrameworkCore.Metadata.IMutableModel
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IMutableModel
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IMutableModel
  nameWithType: IMutableModel
  fullName: Microsoft.EntityFrameworkCore.Metadata.IMutableModel
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasAnnotation*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasAnnotation
  isExternal: false
  name: HasAnnotation
  nameWithType: ReferenceReferenceBuilder.HasAnnotation
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasAnnotation
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker
  parent: Microsoft.EntityFrameworkCore.ChangeTracking
  isExternal: false
  name: ChangeTracker
  nameWithType: ChangeTracker
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKey(System.Type,System.String[])
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKey(System.Type,System.String[])
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasForeignKey*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasForeignKey
  isExternal: false
  name: HasForeignKey
  nameWithType: ReferenceReferenceBuilder.HasForeignKey
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasForeignKey
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String[]
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullname.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.EntityFrameworkCore.ChangeTracking
  commentId: N:Microsoft.EntityFrameworkCore.ChangeTracking
  isExternal: false
  name: Microsoft.EntityFrameworkCore.ChangeTracking
  nameWithType: Microsoft.EntityFrameworkCore.ChangeTracking
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasForeignKeyBuilder*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasForeignKeyBuilder
  isExternal: false
  name: HasForeignKeyBuilder
  nameWithType: ReferenceReferenceBuilder.HasForeignKeyBuilder
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasForeignKeyBuilder
- uid: System.Collections.Generic.IReadOnlyList{System.String}
  commentId: T:System.Collections.Generic.IReadOnlyList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<String>
  nameWithType: IReadOnlyList<String>
  fullName: System.Collections.Generic.IReadOnlyList<System.String>
  nameWithType.vb: IReadOnlyList(Of String)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of System.String)
  name.vb: IReadOnlyList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo}
  commentId: T:System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<PropertyInfo>
  nameWithType: IReadOnlyList<PropertyInfo>
  fullName: System.Collections.Generic.IReadOnlyList<System.Reflection.PropertyInfo>
  nameWithType.vb: IReadOnlyList(Of PropertyInfo)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of System.Reflection.PropertyInfo)
  name.vb: IReadOnlyList(Of PropertyInfo)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    nameWithType: PropertyInfo
    fullName: System.Reflection.PropertyInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    nameWithType: PropertyInfo
    fullName: System.Reflection.PropertyInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKey*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKey
  isExternal: false
  name: HasPrincipalKey
  nameWithType: ReferenceReferenceBuilder.HasPrincipalKey
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKey
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKeyBuilder*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKeyBuilder
  isExternal: false
  name: HasPrincipalKeyBuilder
  nameWithType: ReferenceReferenceBuilder.HasPrincipalKeyBuilder
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKeyBuilder
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.ResolveEntityType*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.ResolveEntityType
  isExternal: false
  name: ResolveEntityType
  nameWithType: ReferenceReferenceBuilder.ResolveEntityType
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.ResolveEntityType
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.IsRequired*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.IsRequired
  isExternal: false
  name: IsRequired
  nameWithType: ReferenceReferenceBuilder.IsRequired
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.IsRequired
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.OnDelete*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.OnDelete
  isExternal: false
  name: OnDelete
  nameWithType: ReferenceReferenceBuilder.OnDelete
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.OnDelete
- uid: Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: DeleteBehavior
  nameWithType: DeleteBehavior
  fullName: Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior
