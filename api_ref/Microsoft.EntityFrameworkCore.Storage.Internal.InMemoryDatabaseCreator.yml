### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabaseCreator
  commentId: T:Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabaseCreator
  id: InMemoryDatabaseCreator
  parent: Microsoft.EntityFrameworkCore.Storage.Internal
  children:
  - Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabaseCreator.#ctor(Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryDatabase,Microsoft.EntityFrameworkCore.Metadata.IModel)
  - Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabaseCreator.EnsureCreated
  - Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabaseCreator.EnsureCreatedAsync(System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabaseCreator.EnsureDeleted
  - Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabaseCreator.EnsureDeletedAsync(System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: InMemoryDatabaseCreator
  nameWithType: InMemoryDatabaseCreator
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabaseCreator
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/InMemoryDatabaseCreator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: InMemoryDatabaseCreator
    path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/InMemoryDatabaseCreator.cs
    startLine: 15
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public class InMemoryDatabaseCreator : IDatabaseCreator'
    content.vb: >-
      Public Class InMemoryDatabaseCreator
          Implements IDatabaseCreator
  inheritance:
  - System.Object
  implements:
  - Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabaseCreator.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabaseCreator.#ctor(Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryDatabase,Microsoft.EntityFrameworkCore.Metadata.IModel)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabaseCreator.#ctor(Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryDatabase,Microsoft.EntityFrameworkCore.Metadata.IModel)
  id: '#ctor(Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryDatabase,Microsoft.EntityFrameworkCore.Metadata.IModel)'
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabaseCreator
  langs:
  - csharp
  - vb
  name: InMemoryDatabaseCreator(IInMemoryDatabase, IModel)
  nameWithType: InMemoryDatabaseCreator.InMemoryDatabaseCreator(IInMemoryDatabase, IModel)
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabaseCreator.InMemoryDatabaseCreator(Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryDatabase, Microsoft.EntityFrameworkCore.Metadata.IModel)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/InMemoryDatabaseCreator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/InMemoryDatabaseCreator.cs
    startLine: 24
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public InMemoryDatabaseCreator(IInMemoryDatabase database, IModel model)
    content.vb: Public Sub New(database As IInMemoryDatabase, model As IModel)
    parameters:
    - id: database
      type: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryDatabase
    - id: model
      type: Microsoft.EntityFrameworkCore.Metadata.IModel
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabaseCreator.EnsureDeleted
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabaseCreator.EnsureDeleted
  id: EnsureDeleted
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabaseCreator
  langs:
  - csharp
  - vb
  name: EnsureDeleted()
  nameWithType: InMemoryDatabaseCreator.EnsureDeleted()
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabaseCreator.EnsureDeleted()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/InMemoryDatabaseCreator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: EnsureDeleted
    path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/InMemoryDatabaseCreator.cs
    startLine: 37
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual bool EnsureDeleted()
    content.vb: Public Overridable Function EnsureDeleted As Boolean
    return:
      type: System.Boolean
  implements:
  - Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator.EnsureDeleted
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabaseCreator.EnsureDeletedAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabaseCreator.EnsureDeletedAsync(System.Threading.CancellationToken)
  id: EnsureDeletedAsync(System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabaseCreator
  langs:
  - csharp
  - vb
  name: EnsureDeletedAsync(CancellationToken)
  nameWithType: InMemoryDatabaseCreator.EnsureDeletedAsync(CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabaseCreator.EnsureDeletedAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/InMemoryDatabaseCreator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: EnsureDeletedAsync
    path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/InMemoryDatabaseCreator.cs
    startLine: 44
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual Task<bool> EnsureDeletedAsync(CancellationToken cancellationToken = null)
    content.vb: Public Overridable Function EnsureDeletedAsync(cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
  implements:
  - Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator.EnsureDeletedAsync(System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabaseCreator.EnsureCreated
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabaseCreator.EnsureCreated
  id: EnsureCreated
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabaseCreator
  langs:
  - csharp
  - vb
  name: EnsureCreated()
  nameWithType: InMemoryDatabaseCreator.EnsureCreated()
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabaseCreator.EnsureCreated()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/InMemoryDatabaseCreator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: EnsureCreated
    path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/InMemoryDatabaseCreator.cs
    startLine: 51
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual bool EnsureCreated()
    content.vb: Public Overridable Function EnsureCreated As Boolean
    return:
      type: System.Boolean
  implements:
  - Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator.EnsureCreated
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabaseCreator.EnsureCreatedAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabaseCreator.EnsureCreatedAsync(System.Threading.CancellationToken)
  id: EnsureCreatedAsync(System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabaseCreator
  langs:
  - csharp
  - vb
  name: EnsureCreatedAsync(CancellationToken)
  nameWithType: InMemoryDatabaseCreator.EnsureCreatedAsync(CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabaseCreator.EnsureCreatedAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/InMemoryDatabaseCreator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: EnsureCreatedAsync
    path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/InMemoryDatabaseCreator.cs
    startLine: 57
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual Task<bool> EnsureCreatedAsync(CancellationToken cancellationToken = null)
    content.vb: Public Overridable Function EnsureCreatedAsync(cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
  implements:
  - Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator.EnsureCreatedAsync(System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.EntityFrameworkCore.Storage.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Storage.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Storage.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Storage.Internal
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IDatabaseCreator
  nameWithType: IDatabaseCreator
  fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabaseCreator.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<InMemoryDatabaseCreator, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<InMemoryDatabaseCreator, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabaseCreator, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of InMemoryDatabaseCreator, TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabaseCreator, TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of InMemoryDatabaseCreator, TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<InMemoryDatabaseCreator, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<InMemoryDatabaseCreator, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabaseCreator, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of InMemoryDatabaseCreator, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of InMemoryDatabaseCreator, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabaseCreator, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Storage
  commentId: N:Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Storage
  nameWithType: Microsoft.EntityFrameworkCore.Storage
  fullName: Microsoft.EntityFrameworkCore.Storage
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryDatabase
  commentId: T:Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryDatabase
  parent: Microsoft.EntityFrameworkCore.Storage.Internal
  isExternal: false
  name: IInMemoryDatabase
  nameWithType: IInMemoryDatabase
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryDatabase
- uid: Microsoft.EntityFrameworkCore.Metadata.IModel
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IModel
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IModel
  nameWithType: IModel
  fullName: Microsoft.EntityFrameworkCore.Metadata.IModel
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator.EnsureDeleted
  commentId: M:Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator.EnsureDeleted
  parent: Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator
  isExternal: false
  name: EnsureDeleted()
  nameWithType: IDatabaseCreator.EnsureDeleted()
  fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator.EnsureDeleted()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator.EnsureDeleted
    name: EnsureDeleted
    nameWithType: IDatabaseCreator.EnsureDeleted
    fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator.EnsureDeleted
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator.EnsureDeleted
    name: EnsureDeleted
    nameWithType: IDatabaseCreator.EnsureDeleted
    fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator.EnsureDeleted
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator.EnsureDeletedAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator.EnsureDeletedAsync(System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator
  isExternal: true
  name: EnsureDeletedAsync(CancellationToken)
  nameWithType: IDatabaseCreator.EnsureDeletedAsync(CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator.EnsureDeletedAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator.EnsureDeletedAsync(System.Threading.CancellationToken)
    name: EnsureDeletedAsync
    nameWithType: IDatabaseCreator.EnsureDeletedAsync
    fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator.EnsureDeletedAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator.EnsureDeletedAsync(System.Threading.CancellationToken)
    name: EnsureDeletedAsync
    nameWithType: IDatabaseCreator.EnsureDeletedAsync
    fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator.EnsureDeletedAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullname.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator.EnsureCreated
  commentId: M:Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator.EnsureCreated
  parent: Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator
  isExternal: false
  name: EnsureCreated()
  nameWithType: IDatabaseCreator.EnsureCreated()
  fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator.EnsureCreated()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator.EnsureCreated
    name: EnsureCreated
    nameWithType: IDatabaseCreator.EnsureCreated
    fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator.EnsureCreated
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator.EnsureCreated
    name: EnsureCreated
    nameWithType: IDatabaseCreator.EnsureCreated
    fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator.EnsureCreated
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator.EnsureCreatedAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator.EnsureCreatedAsync(System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator
  isExternal: true
  name: EnsureCreatedAsync(CancellationToken)
  nameWithType: IDatabaseCreator.EnsureCreatedAsync(CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator.EnsureCreatedAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator.EnsureCreatedAsync(System.Threading.CancellationToken)
    name: EnsureCreatedAsync
    nameWithType: IDatabaseCreator.EnsureCreatedAsync
    fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator.EnsureCreatedAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator.EnsureCreatedAsync(System.Threading.CancellationToken)
    name: EnsureCreatedAsync
    nameWithType: IDatabaseCreator.EnsureCreatedAsync
    fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator.EnsureCreatedAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
