### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.CustomConfiguration
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.CustomConfiguration
  id: CustomConfiguration
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  children:
  - Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.CustomConfiguration.#ctor(System.String,System.String,System.String,System.Boolean)
  - Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.CustomConfiguration.ConnectionString
  - Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.CustomConfiguration.ContextClassName
  - Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.CustomConfiguration.Namespace
  - Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.CustomConfiguration.UseFluentApiOnly
  langs:
  - csharp
  - vb
  name: CustomConfiguration
  nameWithType: CustomConfiguration
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.CustomConfiguration
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/CustomConfiguration.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CustomConfiguration
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/CustomConfiguration.cs
    startLine: 12
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public class CustomConfiguration
    content.vb: Public Class CustomConfiguration
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.CustomConfiguration.#ctor(System.String,System.String,System.String,System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.CustomConfiguration.#ctor(System.String,System.String,System.String,System.Boolean)
  id: '#ctor(System.String,System.String,System.String,System.Boolean)'
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.CustomConfiguration
  langs:
  - csharp
  - vb
  name: CustomConfiguration(String, String, String, Boolean)
  nameWithType: CustomConfiguration.CustomConfiguration(String, String, String, Boolean)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.CustomConfiguration.CustomConfiguration(System.String, System.String, System.String, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/CustomConfiguration.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/CustomConfiguration.cs
    startLine: 18
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public CustomConfiguration(string connectionString, string contextClassName, string namespace, bool useFluentApiOnly)
    content.vb: Public Sub New(connectionString As String, contextClassName As String, namespace As String, useFluentApiOnly As Boolean)
    parameters:
    - id: connectionString
      type: System.String
    - id: contextClassName
      type: System.String
    - id: namespace
      type: System.String
    - id: useFluentApiOnly
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.CustomConfiguration.ConnectionString
  commentId: P:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.CustomConfiguration.ConnectionString
  id: ConnectionString
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.CustomConfiguration
  langs:
  - csharp
  - vb
  name: ConnectionString
  nameWithType: CustomConfiguration.ConnectionString
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.CustomConfiguration.ConnectionString
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/CustomConfiguration.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ConnectionString
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/CustomConfiguration.cs
    startLine: 35
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual string ConnectionString { get; set; }
    content.vb: Public Overridable Property ConnectionString As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.CustomConfiguration.ContextClassName
  commentId: P:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.CustomConfiguration.ContextClassName
  id: ContextClassName
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.CustomConfiguration
  langs:
  - csharp
  - vb
  name: ContextClassName
  nameWithType: CustomConfiguration.ContextClassName
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.CustomConfiguration.ContextClassName
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/CustomConfiguration.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ContextClassName
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/CustomConfiguration.cs
    startLine: 41
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual string ContextClassName { get; set; }
    content.vb: Public Overridable Property ContextClassName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.CustomConfiguration.Namespace
  commentId: P:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.CustomConfiguration.Namespace
  id: Namespace
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.CustomConfiguration
  langs:
  - csharp
  - vb
  name: Namespace
  nameWithType: CustomConfiguration.Namespace
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.CustomConfiguration.Namespace
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/CustomConfiguration.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Namespace
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/CustomConfiguration.cs
    startLine: 47
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual string Namespace { get; set; }
    content.vb: Public Overridable Property Namespace As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.CustomConfiguration.UseFluentApiOnly
  commentId: P:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.CustomConfiguration.UseFluentApiOnly
  id: UseFluentApiOnly
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.CustomConfiguration
  langs:
  - csharp
  - vb
  name: UseFluentApiOnly
  nameWithType: CustomConfiguration.UseFluentApiOnly
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.CustomConfiguration.UseFluentApiOnly
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/CustomConfiguration.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: UseFluentApiOnly
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/CustomConfiguration.cs
    startLine: 53
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual bool UseFluentApiOnly { get; set; }
    content.vb: Public Overridable Property UseFluentApiOnly As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
