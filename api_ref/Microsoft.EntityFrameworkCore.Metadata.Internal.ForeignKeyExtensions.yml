### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions
  id: ForeignKeyExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  children:
  - Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.AsForeignKey(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,System.String)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.CreateDependentsMapFactory(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.FindNavigationsFrom(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.FindNavigationsFromInHierarchy(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.FindNavigationsTo(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.FindNavigationsToInHierarchy(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.GetDependentKeyValueFactory``1(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.GetNavigations(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.IsIntraHierarchical(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.IsSelfPrimaryKeyReferencing(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.IsSelfReferencing(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.ResolveEntityTypeInHierarchy(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.ResolveOtherEntityType(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.ResolveOtherEntityTypeInHierarchy(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.ToDebugString(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,System.Boolean,System.String)
  langs:
  - csharp
  - vb
  name: ForeignKeyExtensions
  nameWithType: ForeignKeyExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ForeignKeyExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ForeignKeyExtensions
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ForeignKeyExtensions.cs
    startLine: 18
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public static class ForeignKeyExtensions
    content.vb: Public Module ForeignKeyExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.IsSelfReferencing(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.IsSelfReferencing(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  id: IsSelfReferencing(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions
  langs:
  - csharp
  - vb
  name: IsSelfReferencing(IForeignKey)
  nameWithType: ForeignKeyExtensions.IsSelfReferencing(IForeignKey)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.IsSelfReferencing(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ForeignKeyExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: IsSelfReferencing
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ForeignKeyExtensions.cs
    startLine: 24
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public static bool IsSelfReferencing(this IForeignKey foreignKey)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function IsSelfReferencing(foreignKey As IForeignKey) As Boolean
    parameters:
    - id: foreignKey
      type: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.IsIntraHierarchical(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.IsIntraHierarchical(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  id: IsIntraHierarchical(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions
  langs:
  - csharp
  - vb
  name: IsIntraHierarchical(IForeignKey)
  nameWithType: ForeignKeyExtensions.IsIntraHierarchical(IForeignKey)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.IsIntraHierarchical(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ForeignKeyExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: IsIntraHierarchical
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ForeignKeyExtensions.cs
    startLine: 31
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public static bool IsIntraHierarchical(this IForeignKey foreignKey)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function IsIntraHierarchical(foreignKey As IForeignKey) As Boolean
    parameters:
    - id: foreignKey
      type: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.IsSelfPrimaryKeyReferencing(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.IsSelfPrimaryKeyReferencing(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  id: IsSelfPrimaryKeyReferencing(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions
  langs:
  - csharp
  - vb
  name: IsSelfPrimaryKeyReferencing(IForeignKey)
  nameWithType: ForeignKeyExtensions.IsSelfPrimaryKeyReferencing(IForeignKey)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.IsSelfPrimaryKeyReferencing(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ForeignKeyExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: IsSelfPrimaryKeyReferencing
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ForeignKeyExtensions.cs
    startLine: 38
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public static bool IsSelfPrimaryKeyReferencing(this IForeignKey foreignKey)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function IsSelfPrimaryKeyReferencing(foreignKey As IForeignKey) As Boolean
    parameters:
    - id: foreignKey
      type: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.GetNavigations(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.GetNavigations(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  id: GetNavigations(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions
  langs:
  - csharp
  - vb
  name: GetNavigations(IForeignKey)
  nameWithType: ForeignKeyExtensions.GetNavigations(IForeignKey)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.GetNavigations(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ForeignKeyExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GetNavigations
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ForeignKeyExtensions.cs
    startLine: 45
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public static IEnumerable<INavigation> GetNavigations(this IForeignKey foreignKey)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetNavigations(foreignKey As IForeignKey) As IEnumerable(Of INavigation)
    parameters:
    - id: foreignKey
      type: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.INavigation}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.FindNavigationsFrom(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.FindNavigationsFrom(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  id: FindNavigationsFrom(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions
  langs:
  - csharp
  - vb
  name: FindNavigationsFrom(IForeignKey, IEntityType)
  nameWithType: ForeignKeyExtensions.FindNavigationsFrom(IForeignKey, IEntityType)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.FindNavigationsFrom(Microsoft.EntityFrameworkCore.Metadata.IForeignKey, Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ForeignKeyExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: FindNavigationsFrom
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ForeignKeyExtensions.cs
    startLine: 62
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public static IEnumerable<INavigation> FindNavigationsFrom(this IForeignKey foreignKey, IEntityType entityType)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function FindNavigationsFrom(foreignKey As IForeignKey, entityType As IEntityType) As IEnumerable(Of INavigation)
    parameters:
    - id: foreignKey
      type: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    - id: entityType
      type: Microsoft.EntityFrameworkCore.Metadata.IEntityType
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.INavigation}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.FindNavigationsFromInHierarchy(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.FindNavigationsFromInHierarchy(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  id: FindNavigationsFromInHierarchy(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions
  langs:
  - csharp
  - vb
  name: FindNavigationsFromInHierarchy(IForeignKey, IEntityType)
  nameWithType: ForeignKeyExtensions.FindNavigationsFromInHierarchy(IForeignKey, IEntityType)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.FindNavigationsFromInHierarchy(Microsoft.EntityFrameworkCore.Metadata.IForeignKey, Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ForeignKeyExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: FindNavigationsFromInHierarchy
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ForeignKeyExtensions.cs
    startLine: 83
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public static IEnumerable<INavigation> FindNavigationsFromInHierarchy(this IForeignKey foreignKey, IEntityType entityType)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function FindNavigationsFromInHierarchy(foreignKey As IForeignKey, entityType As IEntityType) As IEnumerable(Of INavigation)
    parameters:
    - id: foreignKey
      type: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    - id: entityType
      type: Microsoft.EntityFrameworkCore.Metadata.IEntityType
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.INavigation}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.FindNavigationsTo(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.FindNavigationsTo(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  id: FindNavigationsTo(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions
  langs:
  - csharp
  - vb
  name: FindNavigationsTo(IForeignKey, IEntityType)
  nameWithType: ForeignKeyExtensions.FindNavigationsTo(IForeignKey, IEntityType)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.FindNavigationsTo(Microsoft.EntityFrameworkCore.Metadata.IForeignKey, Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ForeignKeyExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: FindNavigationsTo
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ForeignKeyExtensions.cs
    startLine: 104
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public static IEnumerable<INavigation> FindNavigationsTo(this IForeignKey foreignKey, IEntityType entityType)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function FindNavigationsTo(foreignKey As IForeignKey, entityType As IEntityType) As IEnumerable(Of INavigation)
    parameters:
    - id: foreignKey
      type: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    - id: entityType
      type: Microsoft.EntityFrameworkCore.Metadata.IEntityType
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.INavigation}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.FindNavigationsToInHierarchy(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.FindNavigationsToInHierarchy(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  id: FindNavigationsToInHierarchy(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions
  langs:
  - csharp
  - vb
  name: FindNavigationsToInHierarchy(IForeignKey, IEntityType)
  nameWithType: ForeignKeyExtensions.FindNavigationsToInHierarchy(IForeignKey, IEntityType)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.FindNavigationsToInHierarchy(Microsoft.EntityFrameworkCore.Metadata.IForeignKey, Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ForeignKeyExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: FindNavigationsToInHierarchy
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ForeignKeyExtensions.cs
    startLine: 124
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public static IEnumerable<INavigation> FindNavigationsToInHierarchy(this IForeignKey foreignKey, IEntityType entityType)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function FindNavigationsToInHierarchy(foreignKey As IForeignKey, entityType As IEntityType) As IEnumerable(Of INavigation)
    parameters:
    - id: foreignKey
      type: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    - id: entityType
      type: Microsoft.EntityFrameworkCore.Metadata.IEntityType
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.INavigation}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.ResolveOtherEntityType(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.ResolveOtherEntityType(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  id: ResolveOtherEntityType(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions
  langs:
  - csharp
  - vb
  name: ResolveOtherEntityType(IForeignKey, IEntityType)
  nameWithType: ForeignKeyExtensions.ResolveOtherEntityType(IForeignKey, IEntityType)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.ResolveOtherEntityType(Microsoft.EntityFrameworkCore.Metadata.IForeignKey, Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ForeignKeyExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ResolveOtherEntityType
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ForeignKeyExtensions.cs
    startLine: 162
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public static IEntityType ResolveOtherEntityType(this IForeignKey foreignKey, IEntityType entityType)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ResolveOtherEntityType(foreignKey As IForeignKey, entityType As IEntityType) As IEntityType
    parameters:
    - id: foreignKey
      type: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    - id: entityType
      type: Microsoft.EntityFrameworkCore.Metadata.IEntityType
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.IEntityType
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.ResolveOtherEntityTypeInHierarchy(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.ResolveOtherEntityTypeInHierarchy(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  id: ResolveOtherEntityTypeInHierarchy(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions
  langs:
  - csharp
  - vb
  name: ResolveOtherEntityTypeInHierarchy(IForeignKey, IEntityType)
  nameWithType: ForeignKeyExtensions.ResolveOtherEntityTypeInHierarchy(IForeignKey, IEntityType)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.ResolveOtherEntityTypeInHierarchy(Microsoft.EntityFrameworkCore.Metadata.IForeignKey, Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ForeignKeyExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ResolveOtherEntityTypeInHierarchy
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ForeignKeyExtensions.cs
    startLine: 182
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public static IEntityType ResolveOtherEntityTypeInHierarchy(this IForeignKey foreignKey, IEntityType entityType)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ResolveOtherEntityTypeInHierarchy(foreignKey As IForeignKey, entityType As IEntityType) As IEntityType
    parameters:
    - id: foreignKey
      type: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    - id: entityType
      type: Microsoft.EntityFrameworkCore.Metadata.IEntityType
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.IEntityType
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.ResolveEntityTypeInHierarchy(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.ResolveEntityTypeInHierarchy(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  id: ResolveEntityTypeInHierarchy(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions
  langs:
  - csharp
  - vb
  name: ResolveEntityTypeInHierarchy(IForeignKey, IEntityType)
  nameWithType: ForeignKeyExtensions.ResolveEntityTypeInHierarchy(IForeignKey, IEntityType)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.ResolveEntityTypeInHierarchy(Microsoft.EntityFrameworkCore.Metadata.IForeignKey, Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ForeignKeyExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ResolveEntityTypeInHierarchy
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ForeignKeyExtensions.cs
    startLine: 212
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public static IEntityType ResolveEntityTypeInHierarchy(this IForeignKey foreignKey, IEntityType entityType)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ResolveEntityTypeInHierarchy(foreignKey As IForeignKey, entityType As IEntityType) As IEntityType
    parameters:
    - id: foreignKey
      type: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    - id: entityType
      type: Microsoft.EntityFrameworkCore.Metadata.IEntityType
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.IEntityType
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.GetDependentKeyValueFactory``1(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.GetDependentKeyValueFactory``1(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  id: GetDependentKeyValueFactory``1(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions
  langs:
  - csharp
  - vb
  name: GetDependentKeyValueFactory<TKey>(IForeignKey)
  nameWithType: ForeignKeyExtensions.GetDependentKeyValueFactory<TKey>(IForeignKey)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.GetDependentKeyValueFactory<TKey>(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ForeignKeyExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GetDependentKeyValueFactory
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ForeignKeyExtensions.cs
    startLine: 240
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public static IDependentKeyValueFactory<TKey> GetDependentKeyValueFactory<TKey>(this IForeignKey foreignKey)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetDependentKeyValueFactory(Of TKey)(foreignKey As IForeignKey) As IDependentKeyValueFactory(Of TKey)
    parameters:
    - id: foreignKey
      type: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    typeParameters:
    - id: TKey
    return:
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory{{TKey}}
  nameWithType.vb: ForeignKeyExtensions.GetDependentKeyValueFactory(Of TKey)(IForeignKey)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.GetDependentKeyValueFactory(Of TKey)(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  name.vb: GetDependentKeyValueFactory(Of TKey)(IForeignKey)
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.CreateDependentsMapFactory(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.CreateDependentsMapFactory(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  id: CreateDependentsMapFactory(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions
  langs:
  - csharp
  - vb
  name: CreateDependentsMapFactory(IForeignKey)
  nameWithType: ForeignKeyExtensions.CreateDependentsMapFactory(IForeignKey)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.CreateDependentsMapFactory(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ForeignKeyExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: CreateDependentsMapFactory
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ForeignKeyExtensions.cs
    startLine: 248
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public static IDependentsMap CreateDependentsMapFactory(this IForeignKey foreignKey)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateDependentsMapFactory(foreignKey As IForeignKey) As IDependentsMap
    parameters:
    - id: foreignKey
      type: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    return:
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.ToDebugString(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,System.Boolean,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.ToDebugString(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,System.Boolean,System.String)
  id: ToDebugString(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,System.Boolean,System.String)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions
  langs:
  - csharp
  - vb
  name: ToDebugString(IForeignKey, Boolean, String)
  nameWithType: ForeignKeyExtensions.ToDebugString(IForeignKey, Boolean, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.ToDebugString(Microsoft.EntityFrameworkCore.Metadata.IForeignKey, System.Boolean, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ForeignKeyExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ToDebugString
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ForeignKeyExtensions.cs
    startLine: 255
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public static string ToDebugString(this IForeignKey foreignKey, bool singleLine = true, string indent = "")
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToDebugString(foreignKey As IForeignKey, singleLine As Boolean = True, indent As String = "") As String
    parameters:
    - id: foreignKey
      type: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    - id: singleLine
      type: System.Boolean
    - id: indent
      type: System.String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.AsForeignKey(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.AsForeignKey(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,System.String)
  id: AsForeignKey(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,System.String)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions
  langs:
  - csharp
  - vb
  name: AsForeignKey(IForeignKey, String)
  nameWithType: ForeignKeyExtensions.AsForeignKey(IForeignKey, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.AsForeignKey(Microsoft.EntityFrameworkCore.Metadata.IForeignKey, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ForeignKeyExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: AsForeignKey
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ForeignKeyExtensions.cs
    startLine: 306
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public static ForeignKey AsForeignKey(this IForeignKey foreignKey, string methodName = "")
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AsForeignKey(foreignKey As IForeignKey, methodName As String = "") As ForeignKey
    parameters:
    - id: foreignKey
      type: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
    - id: methodName
      type: System.String
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IForeignKey
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IForeignKey
  nameWithType: IForeignKey
  fullName: Microsoft.EntityFrameworkCore.Metadata.IForeignKey
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.INavigation}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.INavigation}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<INavigation>
  nameWithType: IEnumerable<INavigation>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Metadata.INavigation>
  nameWithType.vb: IEnumerable(Of INavigation)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Metadata.INavigation)
  name.vb: IEnumerable(Of INavigation)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.INavigation
    name: INavigation
    nameWithType: INavigation
    fullName: Microsoft.EntityFrameworkCore.Metadata.INavigation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.INavigation
    name: INavigation
    nameWithType: INavigation
    fullName: Microsoft.EntityFrameworkCore.Metadata.INavigation
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.EntityFrameworkCore.Metadata.IEntityType
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IEntityType
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IEntityType
  nameWithType: IEntityType
  fullName: Microsoft.EntityFrameworkCore.Metadata.IEntityType
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory{{TKey}}
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory{``0}
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  definition: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory`1
  name: IDependentKeyValueFactory<TKey>
  nameWithType: IDependentKeyValueFactory<TKey>
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory<TKey>
  nameWithType.vb: IDependentKeyValueFactory(Of TKey)
  fullname.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory(Of TKey)
  name.vb: IDependentKeyValueFactory(Of TKey)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory`1
    name: IDependentKeyValueFactory
    nameWithType: IDependentKeyValueFactory
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory`1
    name: IDependentKeyValueFactory
    nameWithType: IDependentKeyValueFactory
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory`1
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory`1
  isExternal: false
  name: IDependentKeyValueFactory<TKey>
  nameWithType: IDependentKeyValueFactory<TKey>
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory<TKey>
  nameWithType.vb: IDependentKeyValueFactory(Of TKey)
  fullname.vb: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory(Of TKey)
  name.vb: IDependentKeyValueFactory(Of TKey)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory`1
    name: IDependentKeyValueFactory
    nameWithType: IDependentKeyValueFactory
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory`1
    name: IDependentKeyValueFactory
    nameWithType: IDependentKeyValueFactory
    fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  commentId: N:Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  nameWithType: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  isExternal: false
  name: IDependentsMap
  nameWithType: IDependentsMap
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: ForeignKey
  nameWithType: ForeignKey
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey
