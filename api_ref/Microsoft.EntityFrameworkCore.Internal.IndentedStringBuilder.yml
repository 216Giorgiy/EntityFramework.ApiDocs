### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder
  id: IndentedStringBuilder
  parent: Microsoft.EntityFrameworkCore.Internal
  children:
  - Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder.#ctor
  - Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder.#ctor(Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder)
  - Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder.Append(System.Object)
  - Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder.AppendLine
  - Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder.AppendLine(System.Object)
  - Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder.AppendLines(System.Object)
  - Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder.Clear
  - Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder.DecrementIndent
  - Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder.IncrementIndent
  - Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder.Indent
  - Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder.Length
  - Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder.ToString
  langs:
  - csharp
  - vb
  name: IndentedStringBuilder
  nameWithType: IndentedStringBuilder
  fullName: Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/IndentedStringBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: IndentedStringBuilder
    path: src/Microsoft.EntityFrameworkCore/Internal/IndentedStringBuilder.cs
    startLine: 14
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public class IndentedStringBuilder
    content.vb: Public Class IndentedStringBuilder
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder.#ctor
  commentId: M:Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder.#ctor
  id: '#ctor'
  parent: Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder
  langs:
  - csharp
  - vb
  name: IndentedStringBuilder()
  nameWithType: IndentedStringBuilder.IndentedStringBuilder()
  fullName: Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder.IndentedStringBuilder()
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/IndentedStringBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore/Internal/IndentedStringBuilder.cs
    startLine: 27
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public IndentedStringBuilder()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder.#ctor(Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder.#ctor(Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder)
  id: '#ctor(Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder)'
  parent: Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder
  langs:
  - csharp
  - vb
  name: IndentedStringBuilder(IndentedStringBuilder)
  nameWithType: IndentedStringBuilder.IndentedStringBuilder(IndentedStringBuilder)
  fullName: Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder.IndentedStringBuilder(Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/IndentedStringBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore/Internal/IndentedStringBuilder.cs
    startLine: 35
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public IndentedStringBuilder(IndentedStringBuilder from)
    content.vb: Public Sub New(from As IndentedStringBuilder)
    parameters:
    - id: from
      type: Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder.Length
  commentId: P:Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder.Length
  id: Length
  parent: Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: IndentedStringBuilder.Length
  fullName: Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder.Length
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/IndentedStringBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Length
    path: src/Microsoft.EntityFrameworkCore/Internal/IndentedStringBuilder.cs
    startLine: 44
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual int Length { get; }
    content.vb: Public Overridable ReadOnly Property Length As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder.Append(System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder.Append(System.Object)
  id: Append(System.Object)
  parent: Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder
  langs:
  - csharp
  - vb
  name: Append(Object)
  nameWithType: IndentedStringBuilder.Append(Object)
  fullName: Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder.Append(System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/IndentedStringBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Append
    path: src/Microsoft.EntityFrameworkCore/Internal/IndentedStringBuilder.cs
    startLine: 50
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual IndentedStringBuilder Append(object o)
    content.vb: Public Overridable Function Append(o As Object) As IndentedStringBuilder
    parameters:
    - id: o
      type: System.Object
    return:
      type: Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder.AppendLine
  commentId: M:Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder.AppendLine
  id: AppendLine
  parent: Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder
  langs:
  - csharp
  - vb
  name: AppendLine()
  nameWithType: IndentedStringBuilder.AppendLine()
  fullName: Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder.AppendLine()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/IndentedStringBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AppendLine
    path: src/Microsoft.EntityFrameworkCore/Internal/IndentedStringBuilder.cs
    startLine: 63
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual IndentedStringBuilder AppendLine()
    content.vb: Public Overridable Function AppendLine As IndentedStringBuilder
    return:
      type: Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder.AppendLine(System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder.AppendLine(System.Object)
  id: AppendLine(System.Object)
  parent: Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder
  langs:
  - csharp
  - vb
  name: AppendLine(Object)
  nameWithType: IndentedStringBuilder.AppendLine(Object)
  fullName: Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder.AppendLine(System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/IndentedStringBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AppendLine
    path: src/Microsoft.EntityFrameworkCore/Internal/IndentedStringBuilder.cs
    startLine: 74
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual IndentedStringBuilder AppendLine(object o)
    content.vb: Public Overridable Function AppendLine(o As Object) As IndentedStringBuilder
    parameters:
    - id: o
      type: System.Object
    return:
      type: Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder.AppendLines(System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder.AppendLines(System.Object)
  id: AppendLines(System.Object)
  parent: Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder
  langs:
  - csharp
  - vb
  name: AppendLines(Object)
  nameWithType: IndentedStringBuilder.AppendLines(Object)
  fullName: Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder.AppendLines(System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/IndentedStringBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AppendLines
    path: src/Microsoft.EntityFrameworkCore/Internal/IndentedStringBuilder.cs
    startLine: 94
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual IndentedStringBuilder AppendLines(object o)
    content.vb: Public Overridable Function AppendLines(o As Object) As IndentedStringBuilder
    parameters:
    - id: o
      type: System.Object
    return:
      type: Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder.Clear
  commentId: M:Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder.Clear
  id: Clear
  parent: Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: IndentedStringBuilder.Clear()
  fullName: Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder.Clear()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/IndentedStringBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Clear
    path: src/Microsoft.EntityFrameworkCore/Internal/IndentedStringBuilder.cs
    startLine: 112
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual IndentedStringBuilder Clear()
    content.vb: Public Overridable Function Clear As IndentedStringBuilder
    return:
      type: Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder.IncrementIndent
  commentId: M:Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder.IncrementIndent
  id: IncrementIndent
  parent: Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder
  langs:
  - csharp
  - vb
  name: IncrementIndent()
  nameWithType: IndentedStringBuilder.IncrementIndent()
  fullName: Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder.IncrementIndent()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/IndentedStringBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: IncrementIndent
    path: src/Microsoft.EntityFrameworkCore/Internal/IndentedStringBuilder.cs
    startLine: 123
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual IndentedStringBuilder IncrementIndent()
    content.vb: Public Overridable Function IncrementIndent As IndentedStringBuilder
    return:
      type: Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder.DecrementIndent
  commentId: M:Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder.DecrementIndent
  id: DecrementIndent
  parent: Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder
  langs:
  - csharp
  - vb
  name: DecrementIndent()
  nameWithType: IndentedStringBuilder.DecrementIndent()
  fullName: Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder.DecrementIndent()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/IndentedStringBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: DecrementIndent
    path: src/Microsoft.EntityFrameworkCore/Internal/IndentedStringBuilder.cs
    startLine: 133
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual IndentedStringBuilder DecrementIndent()
    content.vb: Public Overridable Function DecrementIndent As IndentedStringBuilder
    return:
      type: Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder.Indent
  commentId: M:Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder.Indent
  id: Indent
  parent: Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder
  langs:
  - csharp
  - vb
  name: Indent()
  nameWithType: IndentedStringBuilder.Indent()
  fullName: Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder.Indent()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/IndentedStringBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Indent
    path: src/Microsoft.EntityFrameworkCore/Internal/IndentedStringBuilder.cs
    startLine: 146
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual IDisposable Indent()
    content.vb: Public Overridable Function Indent As IDisposable
    return:
      type: System.IDisposable
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder.ToString
  commentId: M:Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder.ToString
  id: ToString
  parent: Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: IndentedStringBuilder.ToString()
  fullName: Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder.ToString()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/IndentedStringBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ToString
    path: src/Microsoft.EntityFrameworkCore/Internal/IndentedStringBuilder.cs
    startLine: 152
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
  overridden: System.Object.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.EntityFrameworkCore.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Internal
  fullName: Microsoft.EntityFrameworkCore.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder
  parent: Microsoft.EntityFrameworkCore.Internal
  isExternal: false
  name: IndentedStringBuilder
  nameWithType: IndentedStringBuilder
  fullName: Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
