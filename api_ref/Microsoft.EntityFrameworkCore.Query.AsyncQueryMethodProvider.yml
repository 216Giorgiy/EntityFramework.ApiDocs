### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider
  commentId: T:Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider
  id: AsyncQueryMethodProvider
  parent: Microsoft.EntityFrameworkCore.Query
  children:
  - Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.CreateCollectionRelatedEntitiesLoaderMethod
  - Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.CreateGroupJoinInclude(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation},System.Boolean,System.Object,System.Object)
  - Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.CreateReferenceRelatedEntitiesLoaderMethod
  - Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.DefaultIfEmptyShapedQueryMethod
  - Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.GetResultMethod
  - Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.GroupByMethod
  - Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.GroupJoinIncludeType
  - Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.GroupJoinMethod
  - Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.IncludeMethod
  - Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.InjectParametersMethod
  - Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.QueryMethod
  - Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.RelatedEntitiesLoaderType
  - Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.ShapedQueryMethod
  langs:
  - csharp
  - vb
  name: AsyncQueryMethodProvider
  nameWithType: AsyncQueryMethodProvider
  fullName: Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/AsyncQueryMethodProvider.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AsyncQueryMethodProvider
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/AsyncQueryMethodProvider.cs
    startLine: 24
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query
  summary: "\n    Provides reflection objects for late-binding to asynchronous relational query operations.\n"
  example: []
  syntax:
    content: 'public class AsyncQueryMethodProvider : IQueryMethodProvider'
    content.vb: >-
      Public Class AsyncQueryMethodProvider
          Implements IQueryMethodProvider
  inheritance:
  - System.Object
  implements:
  - Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.ShapedQueryMethod
  commentId: P:Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.ShapedQueryMethod
  id: ShapedQueryMethod
  parent: Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider
  langs:
  - csharp
  - vb
  name: ShapedQueryMethod
  nameWithType: AsyncQueryMethodProvider.ShapedQueryMethod
  fullName: Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.ShapedQueryMethod
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/AsyncQueryMethodProvider.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ShapedQueryMethod
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/AsyncQueryMethodProvider.cs
    startLine: 29
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query
  summary: "\n    The shaped query method.\n"
  example: []
  syntax:
    content: public virtual MethodInfo ShapedQueryMethod { get; }
    content.vb: Public Overridable ReadOnly Property ShapedQueryMethod As MethodInfo
    parameters: []
    return:
      type: System.Reflection.MethodInfo
  implements:
  - Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.ShapedQueryMethod
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.DefaultIfEmptyShapedQueryMethod
  commentId: P:Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.DefaultIfEmptyShapedQueryMethod
  id: DefaultIfEmptyShapedQueryMethod
  parent: Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider
  langs:
  - csharp
  - vb
  name: DefaultIfEmptyShapedQueryMethod
  nameWithType: AsyncQueryMethodProvider.DefaultIfEmptyShapedQueryMethod
  fullName: Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.DefaultIfEmptyShapedQueryMethod
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/AsyncQueryMethodProvider.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: DefaultIfEmptyShapedQueryMethod
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/AsyncQueryMethodProvider.cs
    startLine: 50
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query
  summary: "\n    The default if empty shaped query method.\n"
  example: []
  syntax:
    content: public virtual MethodInfo DefaultIfEmptyShapedQueryMethod { get; }
    content.vb: Public Overridable ReadOnly Property DefaultIfEmptyShapedQueryMethod As MethodInfo
    parameters: []
    return:
      type: System.Reflection.MethodInfo
  implements:
  - Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.DefaultIfEmptyShapedQueryMethod
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.QueryMethod
  commentId: P:Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.QueryMethod
  id: QueryMethod
  parent: Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider
  langs:
  - csharp
  - vb
  name: QueryMethod
  nameWithType: AsyncQueryMethodProvider.QueryMethod
  fullName: Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.QueryMethod
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/AsyncQueryMethodProvider.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: QueryMethod
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/AsyncQueryMethodProvider.cs
    startLine: 131
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query
  summary: "\n    The query method.\n"
  example: []
  syntax:
    content: public virtual MethodInfo QueryMethod { get; }
    content.vb: Public Overridable ReadOnly Property QueryMethod As MethodInfo
    parameters: []
    return:
      type: System.Reflection.MethodInfo
  implements:
  - Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.QueryMethod
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.GetResultMethod
  commentId: P:Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.GetResultMethod
  id: GetResultMethod
  parent: Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider
  langs:
  - csharp
  - vb
  name: GetResultMethod
  nameWithType: AsyncQueryMethodProvider.GetResultMethod
  fullName: Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.GetResultMethod
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/AsyncQueryMethodProvider.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetResultMethod
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/AsyncQueryMethodProvider.cs
    startLine: 150
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query
  summary: "\n    The get result method.\n"
  example: []
  syntax:
    content: public virtual MethodInfo GetResultMethod { get; }
    content.vb: Public Overridable ReadOnly Property GetResultMethod As MethodInfo
    parameters: []
    return:
      type: System.Reflection.MethodInfo
  implements:
  - Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.GetResultMethod
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.GroupByMethod
  commentId: P:Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.GroupByMethod
  id: GroupByMethod
  parent: Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider
  langs:
  - csharp
  - vb
  name: GroupByMethod
  nameWithType: AsyncQueryMethodProvider.GroupByMethod
  fullName: Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.GroupByMethod
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/AsyncQueryMethodProvider.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GroupByMethod
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/AsyncQueryMethodProvider.cs
    startLine: 178
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query
  summary: "\n    The group by method.\n"
  example: []
  syntax:
    content: public virtual MethodInfo GroupByMethod { get; }
    content.vb: Public Overridable ReadOnly Property GroupByMethod As MethodInfo
    parameters: []
    return:
      type: System.Reflection.MethodInfo
  implements:
  - Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.GroupByMethod
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.GroupJoinIncludeType
  commentId: P:Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.GroupJoinIncludeType
  id: GroupJoinIncludeType
  parent: Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider
  langs:
  - csharp
  - vb
  name: GroupJoinIncludeType
  nameWithType: AsyncQueryMethodProvider.GroupJoinIncludeType
  fullName: Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.GroupJoinIncludeType
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/AsyncQueryMethodProvider.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GroupJoinIncludeType
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/AsyncQueryMethodProvider.cs
    startLine: 275
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query
  summary: "\n    Type of the group join include.\n"
  example: []
  syntax:
    content: public virtual Type GroupJoinIncludeType { get; }
    content.vb: Public Overridable ReadOnly Property GroupJoinIncludeType As Type
    parameters: []
    return:
      type: System.Type
  implements:
  - Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.GroupJoinIncludeType
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.CreateGroupJoinInclude(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation},System.Boolean,System.Object,System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.CreateGroupJoinInclude(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation},System.Boolean,System.Object,System.Object)
  id: CreateGroupJoinInclude(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation},System.Boolean,System.Object,System.Object)
  parent: Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider
  langs:
  - csharp
  - vb
  name: CreateGroupJoinInclude(IReadOnlyList<INavigation>, Boolean, Object, Object)
  nameWithType: AsyncQueryMethodProvider.CreateGroupJoinInclude(IReadOnlyList<INavigation>, Boolean, Object, Object)
  fullName: Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.CreateGroupJoinInclude(System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Metadata.INavigation>, System.Boolean, System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/AsyncQueryMethodProvider.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateGroupJoinInclude
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/AsyncQueryMethodProvider.cs
    startLine: 288
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query
  summary: "\n    Creates a group join include used to describe an Include operation that should\n    be performed as part of a GroupJoin.\n"
  example: []
  syntax:
    content: public virtual object CreateGroupJoinInclude(IReadOnlyList<INavigation> navigationPath, bool querySourceRequiresTracking, object existingGroupJoinInclude, object relatedEntitiesLoaders)
    content.vb: Public Overridable Function CreateGroupJoinInclude(navigationPath As IReadOnlyList(Of INavigation), querySourceRequiresTracking As Boolean, existingGroupJoinInclude As Object, relatedEntitiesLoaders As Object) As Object
    parameters:
    - id: navigationPath
      type: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation}
      description: 'The included navigation path. '
    - id: querySourceRequiresTracking
      type: System.Boolean
      description: 'true if this query source requires tracking. '
    - id: existingGroupJoinInclude
      type: System.Object
      description: 'A possibly null existing group join include. '
    - id: relatedEntitiesLoaders
      type: System.Object
      description: 'The related entities loaders. '
    return:
      type: System.Object
      description: "\n    A new group join include.\n"
  implements:
  - Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.CreateGroupJoinInclude(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation},System.Boolean,System.Object,System.Object)
  nameWithType.vb: AsyncQueryMethodProvider.CreateGroupJoinInclude(IReadOnlyList(Of INavigation), Boolean, Object, Object)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.CreateGroupJoinInclude(System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Metadata.INavigation), System.Boolean, System.Object, System.Object)
  name.vb: CreateGroupJoinInclude(IReadOnlyList(Of INavigation), Boolean, Object, Object)
- uid: Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.GroupJoinMethod
  commentId: P:Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.GroupJoinMethod
  id: GroupJoinMethod
  parent: Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider
  langs:
  - csharp
  - vb
  name: GroupJoinMethod
  nameWithType: AsyncQueryMethodProvider.GroupJoinMethod
  fullName: Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.GroupJoinMethod
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/AsyncQueryMethodProvider.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GroupJoinMethod
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/AsyncQueryMethodProvider.cs
    startLine: 318
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query
  summary: "\n    The group join method.\n"
  example: []
  syntax:
    content: public virtual MethodInfo GroupJoinMethod { get; }
    content.vb: Public Overridable ReadOnly Property GroupJoinMethod As MethodInfo
    parameters: []
    return:
      type: System.Reflection.MethodInfo
  implements:
  - Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.GroupJoinMethod
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.IncludeMethod
  commentId: P:Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.IncludeMethod
  id: IncludeMethod
  parent: Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider
  langs:
  - csharp
  - vb
  name: IncludeMethod
  nameWithType: AsyncQueryMethodProvider.IncludeMethod
  fullName: Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.IncludeMethod
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/AsyncQueryMethodProvider.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: IncludeMethod
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/AsyncQueryMethodProvider.cs
    startLine: 540
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query
  summary: "\n    The include method.\n"
  example: []
  syntax:
    content: public virtual MethodInfo IncludeMethod { get; }
    content.vb: Public Overridable ReadOnly Property IncludeMethod As MethodInfo
    parameters: []
    return:
      type: System.Reflection.MethodInfo
  implements:
  - Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.IncludeMethod
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.RelatedEntitiesLoaderType
  commentId: P:Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.RelatedEntitiesLoaderType
  id: RelatedEntitiesLoaderType
  parent: Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider
  langs:
  - csharp
  - vb
  name: RelatedEntitiesLoaderType
  nameWithType: AsyncQueryMethodProvider.RelatedEntitiesLoaderType
  fullName: Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.RelatedEntitiesLoaderType
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/AsyncQueryMethodProvider.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: RelatedEntitiesLoaderType
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/AsyncQueryMethodProvider.cs
    startLine: 671
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query
  summary: "\n    Type of the related entities loader.\n"
  example: []
  syntax:
    content: public virtual Type RelatedEntitiesLoaderType { get; }
    content.vb: Public Overridable ReadOnly Property RelatedEntitiesLoaderType As Type
    parameters: []
    return:
      type: System.Type
  implements:
  - Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.RelatedEntitiesLoaderType
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.CreateReferenceRelatedEntitiesLoaderMethod
  commentId: P:Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.CreateReferenceRelatedEntitiesLoaderMethod
  id: CreateReferenceRelatedEntitiesLoaderMethod
  parent: Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider
  langs:
  - csharp
  - vb
  name: CreateReferenceRelatedEntitiesLoaderMethod
  nameWithType: AsyncQueryMethodProvider.CreateReferenceRelatedEntitiesLoaderMethod
  fullName: Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.CreateReferenceRelatedEntitiesLoaderMethod
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/AsyncQueryMethodProvider.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateReferenceRelatedEntitiesLoaderMethod
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/AsyncQueryMethodProvider.cs
    startLine: 676
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query
  summary: "\n    The create reference related entities loader method.\n"
  example: []
  syntax:
    content: public virtual MethodInfo CreateReferenceRelatedEntitiesLoaderMethod { get; }
    content.vb: Public Overridable ReadOnly Property CreateReferenceRelatedEntitiesLoaderMethod As MethodInfo
    parameters: []
    return:
      type: System.Reflection.MethodInfo
  implements:
  - Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.CreateReferenceRelatedEntitiesLoaderMethod
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.CreateCollectionRelatedEntitiesLoaderMethod
  commentId: P:Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.CreateCollectionRelatedEntitiesLoaderMethod
  id: CreateCollectionRelatedEntitiesLoaderMethod
  parent: Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider
  langs:
  - csharp
  - vb
  name: CreateCollectionRelatedEntitiesLoaderMethod
  nameWithType: AsyncQueryMethodProvider.CreateCollectionRelatedEntitiesLoaderMethod
  fullName: Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.CreateCollectionRelatedEntitiesLoaderMethod
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/AsyncQueryMethodProvider.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateCollectionRelatedEntitiesLoaderMethod
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/AsyncQueryMethodProvider.cs
    startLine: 768
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query
  summary: "\n    The create collection related entities loader method.\n"
  example: []
  syntax:
    content: public virtual MethodInfo CreateCollectionRelatedEntitiesLoaderMethod { get; }
    content.vb: Public Overridable ReadOnly Property CreateCollectionRelatedEntitiesLoaderMethod As MethodInfo
    parameters: []
    return:
      type: System.Reflection.MethodInfo
  implements:
  - Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.CreateCollectionRelatedEntitiesLoaderMethod
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.InjectParametersMethod
  commentId: P:Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.InjectParametersMethod
  id: InjectParametersMethod
  parent: Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider
  langs:
  - csharp
  - vb
  name: InjectParametersMethod
  nameWithType: AsyncQueryMethodProvider.InjectParametersMethod
  fullName: Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.InjectParametersMethod
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/AsyncQueryMethodProvider.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: InjectParametersMethod
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/AsyncQueryMethodProvider.cs
    startLine: 819
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual MethodInfo InjectParametersMethod { get; }
    content.vb: Public Overridable ReadOnly Property InjectParametersMethod As MethodInfo
    parameters: []
    return:
      type: System.Reflection.MethodInfo
  implements:
  - Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.InjectParametersMethod
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
references:
- uid: Microsoft.EntityFrameworkCore.Query
  commentId: N:Microsoft.EntityFrameworkCore.Query
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query
  nameWithType: Microsoft.EntityFrameworkCore.Query
  fullName: Microsoft.EntityFrameworkCore.Query
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider
  commentId: T:Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider
  parent: Microsoft.EntityFrameworkCore.Query
  isExternal: false
  name: IQueryMethodProvider
  nameWithType: IQueryMethodProvider
  fullName: Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.ShapedQueryMethod
  commentId: P:Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.ShapedQueryMethod
  parent: Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider
  isExternal: false
  name: ShapedQueryMethod
  nameWithType: IQueryMethodProvider.ShapedQueryMethod
  fullName: Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.ShapedQueryMethod
- uid: System.Reflection.MethodInfo
  commentId: T:System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: false
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.DefaultIfEmptyShapedQueryMethod
  commentId: P:Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.DefaultIfEmptyShapedQueryMethod
  parent: Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider
  isExternal: false
  name: DefaultIfEmptyShapedQueryMethod
  nameWithType: IQueryMethodProvider.DefaultIfEmptyShapedQueryMethod
  fullName: Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.DefaultIfEmptyShapedQueryMethod
- uid: Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.QueryMethod
  commentId: P:Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.QueryMethod
  parent: Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider
  isExternal: false
  name: QueryMethod
  nameWithType: IQueryMethodProvider.QueryMethod
  fullName: Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.QueryMethod
- uid: Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.GetResultMethod
  commentId: P:Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.GetResultMethod
  parent: Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider
  isExternal: false
  name: GetResultMethod
  nameWithType: IQueryMethodProvider.GetResultMethod
  fullName: Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.GetResultMethod
- uid: Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.GroupByMethod
  commentId: P:Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.GroupByMethod
  parent: Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider
  isExternal: false
  name: GroupByMethod
  nameWithType: IQueryMethodProvider.GroupByMethod
  fullName: Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.GroupByMethod
- uid: Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.GroupJoinIncludeType
  commentId: P:Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.GroupJoinIncludeType
  parent: Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider
  isExternal: false
  name: GroupJoinIncludeType
  nameWithType: IQueryMethodProvider.GroupJoinIncludeType
  fullName: Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.GroupJoinIncludeType
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.CreateGroupJoinInclude(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation},System.Boolean,System.Object,System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.CreateGroupJoinInclude(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation},System.Boolean,System.Object,System.Object)
  parent: Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider
  isExternal: true
  name: CreateGroupJoinInclude(IReadOnlyList<INavigation>, Boolean, Object, Object)
  nameWithType: IQueryMethodProvider.CreateGroupJoinInclude(IReadOnlyList<INavigation>, Boolean, Object, Object)
  fullName: Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.CreateGroupJoinInclude(System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Metadata.INavigation>, System.Boolean, System.Object, System.Object)
  nameWithType.vb: IQueryMethodProvider.CreateGroupJoinInclude(IReadOnlyList(Of INavigation), Boolean, Object, Object)
  fullname.vb: Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.CreateGroupJoinInclude(System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Metadata.INavigation), System.Boolean, System.Object, System.Object)
  name.vb: CreateGroupJoinInclude(IReadOnlyList(Of INavigation), Boolean, Object, Object)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.CreateGroupJoinInclude(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation},System.Boolean,System.Object,System.Object)
    name: CreateGroupJoinInclude
    nameWithType: IQueryMethodProvider.CreateGroupJoinInclude
    fullName: Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.CreateGroupJoinInclude
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.INavigation
    name: INavigation
    nameWithType: INavigation
    fullName: Microsoft.EntityFrameworkCore.Metadata.INavigation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.CreateGroupJoinInclude(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation},System.Boolean,System.Object,System.Object)
    name: CreateGroupJoinInclude
    nameWithType: IQueryMethodProvider.CreateGroupJoinInclude
    fullName: Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.CreateGroupJoinInclude
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.INavigation
    name: INavigation
    nameWithType: INavigation
    fullName: Microsoft.EntityFrameworkCore.Metadata.INavigation
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation}
  commentId: T:System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<INavigation>
  nameWithType: IReadOnlyList<INavigation>
  fullName: System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Metadata.INavigation>
  nameWithType.vb: IReadOnlyList(Of INavigation)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Metadata.INavigation)
  name.vb: IReadOnlyList(Of INavigation)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.INavigation
    name: INavigation
    nameWithType: INavigation
    fullName: Microsoft.EntityFrameworkCore.Metadata.INavigation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.INavigation
    name: INavigation
    nameWithType: INavigation
    fullName: Microsoft.EntityFrameworkCore.Metadata.INavigation
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.GroupJoinMethod
  commentId: P:Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.GroupJoinMethod
  parent: Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider
  isExternal: false
  name: GroupJoinMethod
  nameWithType: IQueryMethodProvider.GroupJoinMethod
  fullName: Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.GroupJoinMethod
- uid: Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.IncludeMethod
  commentId: P:Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.IncludeMethod
  parent: Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider
  isExternal: false
  name: IncludeMethod
  nameWithType: IQueryMethodProvider.IncludeMethod
  fullName: Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.IncludeMethod
- uid: Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.RelatedEntitiesLoaderType
  commentId: P:Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.RelatedEntitiesLoaderType
  parent: Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider
  isExternal: false
  name: RelatedEntitiesLoaderType
  nameWithType: IQueryMethodProvider.RelatedEntitiesLoaderType
  fullName: Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.RelatedEntitiesLoaderType
- uid: Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.CreateReferenceRelatedEntitiesLoaderMethod
  commentId: P:Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.CreateReferenceRelatedEntitiesLoaderMethod
  parent: Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider
  isExternal: false
  name: CreateReferenceRelatedEntitiesLoaderMethod
  nameWithType: IQueryMethodProvider.CreateReferenceRelatedEntitiesLoaderMethod
  fullName: Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.CreateReferenceRelatedEntitiesLoaderMethod
- uid: Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.CreateCollectionRelatedEntitiesLoaderMethod
  commentId: P:Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.CreateCollectionRelatedEntitiesLoaderMethod
  parent: Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider
  isExternal: false
  name: CreateCollectionRelatedEntitiesLoaderMethod
  nameWithType: IQueryMethodProvider.CreateCollectionRelatedEntitiesLoaderMethod
  fullName: Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.CreateCollectionRelatedEntitiesLoaderMethod
- uid: Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.InjectParametersMethod
  commentId: P:Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.InjectParametersMethod
  parent: Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider
  isExternal: false
  name: InjectParametersMethod
  nameWithType: IQueryMethodProvider.InjectParametersMethod
  fullName: Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.InjectParametersMethod
