### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.QueryLoggingSqlServerTest
  commentId: T:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.QueryLoggingSqlServerTest
  id: QueryLoggingSqlServerTest
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  children:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.QueryLoggingSqlServerTest.#ctor(Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.NorthwindQuerySqlServerFixture)
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.QueryLoggingSqlServerTest.CreateContext
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.QueryLoggingSqlServerTest.Include_navigation
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.QueryLoggingSqlServerTest.Query_with_ignored_include_should_log_warning
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.QueryLoggingSqlServerTest.Queryable_simple
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.QueryLoggingSqlServerTest.Queryable_with_parameter_outputs_parameter_value_logging_warning
  langs:
  - csharp
  - vb
  name: QueryLoggingSqlServerTest
  nameWithType: QueryLoggingSqlServerTest
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.QueryLoggingSqlServerTest
  type: Class
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/QueryLoggingSqlServerTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: QueryLoggingSqlServerTest
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/QueryLoggingSqlServerTest.cs
    startLine: 16
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: 'public class QueryLoggingSqlServerTest : IClassFixture<NorthwindQuerySqlServerFixture>'
    content.vb: >-
      Public Class QueryLoggingSqlServerTest
          Implements IClassFixture(Of NorthwindQuerySqlServerFixture)
  inheritance:
  - System.Object
  implements:
  - Xunit.IClassFixture{Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.NorthwindQuerySqlServerFixture}
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.QueryLoggingSqlServerTest.Queryable_simple
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.QueryLoggingSqlServerTest.Queryable_simple
  id: Queryable_simple
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.QueryLoggingSqlServerTest
  langs:
  - csharp
  - vb
  name: Queryable_simple()
  nameWithType: QueryLoggingSqlServerTest.Queryable_simple()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.QueryLoggingSqlServerTest.Queryable_simple()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/QueryLoggingSqlServerTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Queryable_simple
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/QueryLoggingSqlServerTest.cs
    startLine: 21
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: >-
      [Fact]

      public virtual void Queryable_simple()
    content.vb: >-
      <Fact>

      Public Overridable Sub Queryable_simple
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.QueryLoggingSqlServerTest.Queryable_with_parameter_outputs_parameter_value_logging_warning
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.QueryLoggingSqlServerTest.Queryable_with_parameter_outputs_parameter_value_logging_warning
  id: Queryable_with_parameter_outputs_parameter_value_logging_warning
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.QueryLoggingSqlServerTest
  langs:
  - csharp
  - vb
  name: Queryable_with_parameter_outputs_parameter_value_logging_warning()
  nameWithType: QueryLoggingSqlServerTest.Queryable_with_parameter_outputs_parameter_value_logging_warning()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.QueryLoggingSqlServerTest.Queryable_with_parameter_outputs_parameter_value_logging_warning()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/QueryLoggingSqlServerTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Queryable_with_parameter_outputs_parameter_value_logging_warning
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/QueryLoggingSqlServerTest.cs
    startLine: 47
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: >-
      [Fact]

      public virtual void Queryable_with_parameter_outputs_parameter_value_logging_warning()
    content.vb: >-
      <Fact>

      Public Overridable Sub Queryable_with_parameter_outputs_parameter_value_logging_warning
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.QueryLoggingSqlServerTest.Query_with_ignored_include_should_log_warning
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.QueryLoggingSqlServerTest.Query_with_ignored_include_should_log_warning
  id: Query_with_ignored_include_should_log_warning
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.QueryLoggingSqlServerTest
  langs:
  - csharp
  - vb
  name: Query_with_ignored_include_should_log_warning()
  nameWithType: QueryLoggingSqlServerTest.Query_with_ignored_include_should_log_warning()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.QueryLoggingSqlServerTest.Query_with_ignored_include_should_log_warning()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/QueryLoggingSqlServerTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Query_with_ignored_include_should_log_warning
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/QueryLoggingSqlServerTest.cs
    startLine: 65
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: >-
      [Fact]

      public virtual void Query_with_ignored_include_should_log_warning()
    content.vb: >-
      <Fact>

      Public Overridable Sub Query_with_ignored_include_should_log_warning
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.QueryLoggingSqlServerTest.Include_navigation
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.QueryLoggingSqlServerTest.Include_navigation
  id: Include_navigation
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.QueryLoggingSqlServerTest
  langs:
  - csharp
  - vb
  name: Include_navigation()
  nameWithType: QueryLoggingSqlServerTest.Include_navigation()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.QueryLoggingSqlServerTest.Include_navigation()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/QueryLoggingSqlServerTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Include_navigation
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/QueryLoggingSqlServerTest.cs
    startLine: 81
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: >-
      [Fact]

      public virtual void Include_navigation()
    content.vb: >-
      <Fact>

      Public Overridable Sub Include_navigation
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.QueryLoggingSqlServerTest.#ctor(Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.NorthwindQuerySqlServerFixture)
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.QueryLoggingSqlServerTest.#ctor(Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.NorthwindQuerySqlServerFixture)
  id: '#ctor(Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.NorthwindQuerySqlServerFixture)'
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.QueryLoggingSqlServerTest
  langs:
  - csharp
  - vb
  name: QueryLoggingSqlServerTest(NorthwindQuerySqlServerFixture)
  nameWithType: QueryLoggingSqlServerTest.QueryLoggingSqlServerTest(NorthwindQuerySqlServerFixture)
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.QueryLoggingSqlServerTest.QueryLoggingSqlServerTest(Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.NorthwindQuerySqlServerFixture)
  type: Constructor
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/QueryLoggingSqlServerTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/QueryLoggingSqlServerTest.cs
    startLine: 123
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public QueryLoggingSqlServerTest(NorthwindQuerySqlServerFixture fixture)
    content.vb: Public Sub New(fixture As NorthwindQuerySqlServerFixture)
    parameters:
    - id: fixture
      type: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.NorthwindQuerySqlServerFixture
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.QueryLoggingSqlServerTest.CreateContext
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.QueryLoggingSqlServerTest.CreateContext
  id: CreateContext
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.QueryLoggingSqlServerTest
  langs:
  - csharp
  - vb
  name: CreateContext()
  nameWithType: QueryLoggingSqlServerTest.CreateContext()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.QueryLoggingSqlServerTest.CreateContext()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/QueryLoggingSqlServerTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateContext
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/QueryLoggingSqlServerTest.cs
    startLine: 128
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: protected NorthwindContext CreateContext()
    content.vb: Protected Function CreateContext As NorthwindContext
    return:
      type: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.NorthwindContext
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  commentId: N:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  nameWithType: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Xunit.IClassFixture{Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.NorthwindQuerySqlServerFixture}
  commentId: T:Xunit.IClassFixture{Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.NorthwindQuerySqlServerFixture}
  parent: Xunit
  definition: Xunit.IClassFixture`1
  name: IClassFixture<NorthwindQuerySqlServerFixture>
  nameWithType: IClassFixture<NorthwindQuerySqlServerFixture>
  fullName: Xunit.IClassFixture<Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.NorthwindQuerySqlServerFixture>
  nameWithType.vb: IClassFixture(Of NorthwindQuerySqlServerFixture)
  fullname.vb: Xunit.IClassFixture(Of Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.NorthwindQuerySqlServerFixture)
  name.vb: IClassFixture(Of NorthwindQuerySqlServerFixture)
  spec.csharp:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    nameWithType: IClassFixture
    fullName: Xunit.IClassFixture
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.NorthwindQuerySqlServerFixture
    name: NorthwindQuerySqlServerFixture
    nameWithType: NorthwindQuerySqlServerFixture
    fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.NorthwindQuerySqlServerFixture
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    nameWithType: IClassFixture
    fullName: Xunit.IClassFixture
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.NorthwindQuerySqlServerFixture
    name: NorthwindQuerySqlServerFixture
    nameWithType: NorthwindQuerySqlServerFixture
    fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.NorthwindQuerySqlServerFixture
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Xunit.IClassFixture`1
  commentId: T:Xunit.IClassFixture`1
  isExternal: true
  name: IClassFixture<TFixture>
  nameWithType: IClassFixture<TFixture>
  fullName: Xunit.IClassFixture<TFixture>
  nameWithType.vb: IClassFixture(Of TFixture)
  fullname.vb: Xunit.IClassFixture(Of TFixture)
  name.vb: IClassFixture(Of TFixture)
  spec.csharp:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    nameWithType: IClassFixture
    fullName: Xunit.IClassFixture
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TFixture
    nameWithType: TFixture
    fullName: TFixture
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    nameWithType: IClassFixture
    fullName: Xunit.IClassFixture
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TFixture
    nameWithType: TFixture
    fullName: TFixture
  - name: )
    nameWithType: )
    fullName: )
- uid: Xunit
  commentId: N:Xunit
  isExternal: false
  name: Xunit
  nameWithType: Xunit
  fullName: Xunit
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.NorthwindQuerySqlServerFixture
  commentId: T:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.NorthwindQuerySqlServerFixture
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  isExternal: false
  name: NorthwindQuerySqlServerFixture
  nameWithType: NorthwindQuerySqlServerFixture
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.NorthwindQuerySqlServerFixture
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.NorthwindContext
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.NorthwindContext
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind
  isExternal: false
  name: NorthwindContext
  nameWithType: NorthwindContext
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind.NorthwindContext
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind
  commentId: N:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind
  nameWithType: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Northwind
