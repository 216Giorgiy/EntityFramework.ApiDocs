### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Design.Internal.HostingEnvironment
  commentId: T:Microsoft.EntityFrameworkCore.Design.Internal.HostingEnvironment
  id: HostingEnvironment
  parent: Microsoft.EntityFrameworkCore.Design.Internal
  children:
  - Microsoft.EntityFrameworkCore.Design.Internal.HostingEnvironment.ApplicationName
  - Microsoft.EntityFrameworkCore.Design.Internal.HostingEnvironment.ContentRootFileProvider
  - Microsoft.EntityFrameworkCore.Design.Internal.HostingEnvironment.ContentRootPath
  - Microsoft.EntityFrameworkCore.Design.Internal.HostingEnvironment.EnvironmentName
  - Microsoft.EntityFrameworkCore.Design.Internal.HostingEnvironment.WebRootFileProvider
  - Microsoft.EntityFrameworkCore.Design.Internal.HostingEnvironment.WebRootPath
  langs:
  - csharp
  - vb
  name: HostingEnvironment
  nameWithType: HostingEnvironment
  fullName: Microsoft.EntityFrameworkCore.Design.Internal.HostingEnvironment
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Design/Internal/HostingEnvironment.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: HostingEnvironment
    path: src/Microsoft.EntityFrameworkCore.Design/Design/Internal/HostingEnvironment.cs
    startLine: 12
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Design.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public class HostingEnvironment : IHostingEnvironment'
    content.vb: >-
      Public Class HostingEnvironment
          Inherits IHostingEnvironment
  inheritance:
  - System.Object
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Design.Internal.HostingEnvironment.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Design.Internal.HostingEnvironment.EnvironmentName
  commentId: P:Microsoft.EntityFrameworkCore.Design.Internal.HostingEnvironment.EnvironmentName
  id: EnvironmentName
  parent: Microsoft.EntityFrameworkCore.Design.Internal.HostingEnvironment
  langs:
  - csharp
  - vb
  name: EnvironmentName
  nameWithType: HostingEnvironment.EnvironmentName
  fullName: Microsoft.EntityFrameworkCore.Design.Internal.HostingEnvironment.EnvironmentName
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Design/Internal/HostingEnvironment.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: EnvironmentName
    path: src/Microsoft.EntityFrameworkCore.Design/Design/Internal/HostingEnvironment.cs
    startLine: 18
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Design.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual string EnvironmentName { get; set; }
    content.vb: Public Overridable Property EnvironmentName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Design.Internal.HostingEnvironment.ApplicationName
  commentId: P:Microsoft.EntityFrameworkCore.Design.Internal.HostingEnvironment.ApplicationName
  id: ApplicationName
  parent: Microsoft.EntityFrameworkCore.Design.Internal.HostingEnvironment
  langs:
  - csharp
  - vb
  name: ApplicationName
  nameWithType: HostingEnvironment.ApplicationName
  fullName: Microsoft.EntityFrameworkCore.Design.Internal.HostingEnvironment.ApplicationName
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Design/Internal/HostingEnvironment.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ApplicationName
    path: src/Microsoft.EntityFrameworkCore.Design/Design/Internal/HostingEnvironment.cs
    startLine: 24
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Design.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual string ApplicationName { get; set; }
    content.vb: Public Overridable Property ApplicationName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Design.Internal.HostingEnvironment.WebRootPath
  commentId: P:Microsoft.EntityFrameworkCore.Design.Internal.HostingEnvironment.WebRootPath
  id: WebRootPath
  parent: Microsoft.EntityFrameworkCore.Design.Internal.HostingEnvironment
  langs:
  - csharp
  - vb
  name: WebRootPath
  nameWithType: HostingEnvironment.WebRootPath
  fullName: Microsoft.EntityFrameworkCore.Design.Internal.HostingEnvironment.WebRootPath
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Design/Internal/HostingEnvironment.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: WebRootPath
    path: src/Microsoft.EntityFrameworkCore.Design/Design/Internal/HostingEnvironment.cs
    startLine: 30
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Design.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual string WebRootPath { get; set; }
    content.vb: Public Overridable Property WebRootPath As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Design.Internal.HostingEnvironment.WebRootFileProvider
  commentId: P:Microsoft.EntityFrameworkCore.Design.Internal.HostingEnvironment.WebRootFileProvider
  id: WebRootFileProvider
  parent: Microsoft.EntityFrameworkCore.Design.Internal.HostingEnvironment
  langs:
  - csharp
  - vb
  name: WebRootFileProvider
  nameWithType: HostingEnvironment.WebRootFileProvider
  fullName: Microsoft.EntityFrameworkCore.Design.Internal.HostingEnvironment.WebRootFileProvider
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Design/Internal/HostingEnvironment.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: WebRootFileProvider
    path: src/Microsoft.EntityFrameworkCore.Design/Design/Internal/HostingEnvironment.cs
    startLine: 36
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Design.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual IFileProvider WebRootFileProvider { get; set; }
    content.vb: Public Overridable Property WebRootFileProvider As IFileProvider
    parameters: []
    return:
      type: IFileProvider
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Design.Internal.HostingEnvironment.ContentRootPath
  commentId: P:Microsoft.EntityFrameworkCore.Design.Internal.HostingEnvironment.ContentRootPath
  id: ContentRootPath
  parent: Microsoft.EntityFrameworkCore.Design.Internal.HostingEnvironment
  langs:
  - csharp
  - vb
  name: ContentRootPath
  nameWithType: HostingEnvironment.ContentRootPath
  fullName: Microsoft.EntityFrameworkCore.Design.Internal.HostingEnvironment.ContentRootPath
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Design/Internal/HostingEnvironment.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ContentRootPath
    path: src/Microsoft.EntityFrameworkCore.Design/Design/Internal/HostingEnvironment.cs
    startLine: 42
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Design.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual string ContentRootPath { get; set; }
    content.vb: Public Overridable Property ContentRootPath As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Design.Internal.HostingEnvironment.ContentRootFileProvider
  commentId: P:Microsoft.EntityFrameworkCore.Design.Internal.HostingEnvironment.ContentRootFileProvider
  id: ContentRootFileProvider
  parent: Microsoft.EntityFrameworkCore.Design.Internal.HostingEnvironment
  langs:
  - csharp
  - vb
  name: ContentRootFileProvider
  nameWithType: HostingEnvironment.ContentRootFileProvider
  fullName: Microsoft.EntityFrameworkCore.Design.Internal.HostingEnvironment.ContentRootFileProvider
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Design/Internal/HostingEnvironment.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ContentRootFileProvider
    path: src/Microsoft.EntityFrameworkCore.Design/Design/Internal/HostingEnvironment.cs
    startLine: 48
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Design.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual IFileProvider ContentRootFileProvider { get; set; }
    content.vb: Public Overridable Property ContentRootFileProvider As IFileProvider
    parameters: []
    return:
      type: IFileProvider
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.EntityFrameworkCore.Design.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Design.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Design.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Design.Internal
  fullName: Microsoft.EntityFrameworkCore.Design.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Design.Internal.HostingEnvironment.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<HostingEnvironment, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<HostingEnvironment, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Design.Internal.HostingEnvironment, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of HostingEnvironment, TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Design.Internal.HostingEnvironment, TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of HostingEnvironment, TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<HostingEnvironment, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<HostingEnvironment, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Design.Internal.HostingEnvironment, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of HostingEnvironment, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of HostingEnvironment, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Design.Internal.HostingEnvironment, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: IFileProvider
  isExternal: true
  name: IFileProvider
  nameWithType: IFileProvider
  fullName: IFileProvider
