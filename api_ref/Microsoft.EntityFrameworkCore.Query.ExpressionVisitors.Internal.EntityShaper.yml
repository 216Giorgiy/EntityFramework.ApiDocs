### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper
  commentId: T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper
  id: EntityShaper
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  children:
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper.#ctor(Remotion.Linq.Clauses.IQuerySource,System.String,System.Boolean,Microsoft.EntityFrameworkCore.Metadata.IKey,System.Func{Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Object})
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper.AllowNullResult
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper.Cast``1
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper.EntityType
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper.IsTrackingQuery
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper.Key
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper.Materializer
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper.SetOffset(System.Int32)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper.ValueBufferOffset
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper.WithOffset(System.Int32)
  langs:
  - csharp
  - vb
  name: EntityShaper
  nameWithType: EntityShaper
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/EntityShaper.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: EntityShaper
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/EntityShaper.cs
    startLine: 15
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public abstract class EntityShaper : Shaper'
    content.vb: >-
      Public MustInherit Class EntityShaper
          Inherits Shaper
  inheritance:
  - System.Object
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper
  inheritedMembers:
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.IsShaperForQuerySource(Remotion.Linq.Clauses.IQuerySource)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.UpdateQuerySource(Remotion.Linq.Clauses.IQuerySource)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.Type
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.QuerySource
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.SaveAccessorExpression(Remotion.Linq.Clauses.QuerySourceMapping)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.GetAccessorExpression(Remotion.Linq.Clauses.IQuerySource)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper.#ctor(Remotion.Linq.Clauses.IQuerySource,System.String,System.Boolean,Microsoft.EntityFrameworkCore.Metadata.IKey,System.Func{Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Object})
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper.#ctor(Remotion.Linq.Clauses.IQuerySource,System.String,System.Boolean,Microsoft.EntityFrameworkCore.Metadata.IKey,System.Func{Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Object})
  id: '#ctor(Remotion.Linq.Clauses.IQuerySource,System.String,System.Boolean,Microsoft.EntityFrameworkCore.Metadata.IKey,System.Func{Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Object})'
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper
  langs:
  - csharp
  - vb
  name: EntityShaper(IQuerySource, String, Boolean, IKey, Func<ValueBuffer, Object>)
  nameWithType: EntityShaper.EntityShaper(IQuerySource, String, Boolean, IKey, Func<ValueBuffer, Object>)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper.EntityShaper(Remotion.Linq.Clauses.IQuerySource, System.String, System.Boolean, Microsoft.EntityFrameworkCore.Metadata.IKey, System.Func<Microsoft.EntityFrameworkCore.Storage.ValueBuffer, System.Object>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/EntityShaper.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/EntityShaper.cs
    startLine: 21
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected EntityShaper(IQuerySource querySource, string entityType, bool trackingQuery, IKey key, Func<ValueBuffer, object> materializer)
    content.vb: Protected Sub New(querySource As IQuerySource, entityType As String, trackingQuery As Boolean, key As IKey, materializer As Func(Of ValueBuffer, Object))
    parameters:
    - id: querySource
      type: Remotion.Linq.Clauses.IQuerySource
    - id: entityType
      type: System.String
    - id: trackingQuery
      type: System.Boolean
    - id: key
      type: Microsoft.EntityFrameworkCore.Metadata.IKey
    - id: materializer
      type: System.Func{Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Object}
  nameWithType.vb: EntityShaper.EntityShaper(IQuerySource, String, Boolean, IKey, Func(Of ValueBuffer, Object))
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper.EntityShaper(Remotion.Linq.Clauses.IQuerySource, System.String, System.Boolean, Microsoft.EntityFrameworkCore.Metadata.IKey, System.Func(Of Microsoft.EntityFrameworkCore.Storage.ValueBuffer, System.Object))
  name.vb: EntityShaper(IQuerySource, String, Boolean, IKey, Func(Of ValueBuffer, Object))
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper.EntityType
  commentId: P:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper.EntityType
  id: EntityType
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper
  langs:
  - csharp
  - vb
  name: EntityType
  nameWithType: EntityShaper.EntityType
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper.EntityType
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/EntityShaper.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: EntityType
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/EntityShaper.cs
    startLine: 39
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual string EntityType { get; }
    content.vb: Protected Overridable ReadOnly Property EntityType As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper.IsTrackingQuery
  commentId: P:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper.IsTrackingQuery
  id: IsTrackingQuery
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper
  langs:
  - csharp
  - vb
  name: IsTrackingQuery
  nameWithType: EntityShaper.IsTrackingQuery
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper.IsTrackingQuery
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/EntityShaper.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: IsTrackingQuery
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/EntityShaper.cs
    startLine: 45
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual bool IsTrackingQuery { get; }
    content.vb: Protected Overridable ReadOnly Property IsTrackingQuery As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper.Key
  commentId: P:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper.Key
  id: Key
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper
  langs:
  - csharp
  - vb
  name: Key
  nameWithType: EntityShaper.Key
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper.Key
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/EntityShaper.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Key
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/EntityShaper.cs
    startLine: 51
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual IKey Key { get; }
    content.vb: Protected Overridable ReadOnly Property Key As IKey
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.IKey
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper.Materializer
  commentId: P:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper.Materializer
  id: Materializer
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper
  langs:
  - csharp
  - vb
  name: Materializer
  nameWithType: EntityShaper.Materializer
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper.Materializer
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/EntityShaper.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Materializer
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/EntityShaper.cs
    startLine: 57
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual Func<ValueBuffer, object> Materializer { get; }
    content.vb: Protected Overridable ReadOnly Property Materializer As Func(Of ValueBuffer, Object)
    parameters: []
    return:
      type: System.Func{Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Object}
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper.AllowNullResult
  commentId: P:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper.AllowNullResult
  id: AllowNullResult
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper
  langs:
  - csharp
  - vb
  name: AllowNullResult
  nameWithType: EntityShaper.AllowNullResult
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper.AllowNullResult
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/EntityShaper.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AllowNullResult
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/EntityShaper.cs
    startLine: 63
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual bool AllowNullResult { get; }
    content.vb: Protected Overridable ReadOnly Property AllowNullResult As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper.ValueBufferOffset
  commentId: P:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper.ValueBufferOffset
  id: ValueBufferOffset
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper
  langs:
  - csharp
  - vb
  name: ValueBufferOffset
  nameWithType: EntityShaper.ValueBufferOffset
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper.ValueBufferOffset
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/EntityShaper.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ValueBufferOffset
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/EntityShaper.cs
    startLine: 69
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual int ValueBufferOffset { get; }
    content.vb: Public Overridable ReadOnly Property ValueBufferOffset As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper.Cast``1
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper.Cast``1
  id: Cast``1
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper
  langs:
  - csharp
  - vb
  name: Cast<TDerived>()
  nameWithType: EntityShaper.Cast<TDerived>()
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper.Cast<TDerived>()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/EntityShaper.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Cast
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/EntityShaper.cs
    startLine: 75
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public abstract IShaper<TDerived> Cast<TDerived>()where TDerived : class'
    content.vb: Public MustOverride Function Cast(Of TDerived As Class) As IShaper(Of TDerived)
    typeParameters:
    - id: TDerived
    return:
      type: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IShaper{{TDerived}}
  nameWithType.vb: EntityShaper.Cast(Of TDerived)()
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper.Cast(Of TDerived)()
  name.vb: Cast(Of TDerived)()
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper.WithOffset(System.Int32)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper.WithOffset(System.Int32)
  id: WithOffset(System.Int32)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper
  langs:
  - csharp
  - vb
  name: WithOffset(Int32)
  nameWithType: EntityShaper.WithOffset(Int32)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper.WithOffset(System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/EntityShaper.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: WithOffset
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/EntityShaper.cs
    startLine: 81
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public abstract EntityShaper WithOffset(int offset)
    content.vb: Public MustOverride Function WithOffset(offset As Integer) As EntityShaper
    parameters:
    - id: offset
      type: System.Int32
    return:
      type: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper.SetOffset(System.Int32)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper.SetOffset(System.Int32)
  id: SetOffset(System.Int32)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper
  langs:
  - csharp
  - vb
  name: SetOffset(Int32)
  nameWithType: EntityShaper.SetOffset(Int32)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper.SetOffset(System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/EntityShaper.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: SetOffset
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/EntityShaper.cs
    startLine: 87
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual EntityShaper SetOffset(int offset)
    content.vb: Protected Overridable Function SetOffset(offset As Integer) As EntityShaper
    parameters:
    - id: offset
      type: System.Int32
    return:
      type: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper
  commentId: T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  isExternal: false
  name: Shaper
  nameWithType: Shaper
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.IsShaperForQuerySource(Remotion.Linq.Clauses.IQuerySource)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.IsShaperForQuerySource(Remotion.Linq.Clauses.IQuerySource)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper
  isExternal: true
  name: IsShaperForQuerySource(IQuerySource)
  nameWithType: Shaper.IsShaperForQuerySource(IQuerySource)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.IsShaperForQuerySource(Remotion.Linq.Clauses.IQuerySource)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.IsShaperForQuerySource(Remotion.Linq.Clauses.IQuerySource)
    name: IsShaperForQuerySource
    nameWithType: Shaper.IsShaperForQuerySource
    fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.IsShaperForQuerySource
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.Clauses.IQuerySource
    name: IQuerySource
    nameWithType: IQuerySource
    fullName: Remotion.Linq.Clauses.IQuerySource
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.IsShaperForQuerySource(Remotion.Linq.Clauses.IQuerySource)
    name: IsShaperForQuerySource
    nameWithType: Shaper.IsShaperForQuerySource
    fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.IsShaperForQuerySource
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.Clauses.IQuerySource
    name: IQuerySource
    nameWithType: IQuerySource
    fullName: Remotion.Linq.Clauses.IQuerySource
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.UpdateQuerySource(Remotion.Linq.Clauses.IQuerySource)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.UpdateQuerySource(Remotion.Linq.Clauses.IQuerySource)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper
  isExternal: true
  name: UpdateQuerySource(IQuerySource)
  nameWithType: Shaper.UpdateQuerySource(IQuerySource)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.UpdateQuerySource(Remotion.Linq.Clauses.IQuerySource)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.UpdateQuerySource(Remotion.Linq.Clauses.IQuerySource)
    name: UpdateQuerySource
    nameWithType: Shaper.UpdateQuerySource
    fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.UpdateQuerySource
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.Clauses.IQuerySource
    name: IQuerySource
    nameWithType: IQuerySource
    fullName: Remotion.Linq.Clauses.IQuerySource
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.UpdateQuerySource(Remotion.Linq.Clauses.IQuerySource)
    name: UpdateQuerySource
    nameWithType: Shaper.UpdateQuerySource
    fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.UpdateQuerySource
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.Clauses.IQuerySource
    name: IQuerySource
    nameWithType: IQuerySource
    fullName: Remotion.Linq.Clauses.IQuerySource
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.Type
  commentId: P:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.Type
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper
  isExternal: false
  name: Type
  nameWithType: Shaper.Type
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.Type
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.QuerySource
  commentId: P:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.QuerySource
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper
  isExternal: false
  name: QuerySource
  nameWithType: Shaper.QuerySource
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.QuerySource
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.SaveAccessorExpression(Remotion.Linq.Clauses.QuerySourceMapping)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.SaveAccessorExpression(Remotion.Linq.Clauses.QuerySourceMapping)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper
  isExternal: true
  name: SaveAccessorExpression(QuerySourceMapping)
  nameWithType: Shaper.SaveAccessorExpression(QuerySourceMapping)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.SaveAccessorExpression(Remotion.Linq.Clauses.QuerySourceMapping)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.SaveAccessorExpression(Remotion.Linq.Clauses.QuerySourceMapping)
    name: SaveAccessorExpression
    nameWithType: Shaper.SaveAccessorExpression
    fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.SaveAccessorExpression
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.Clauses.QuerySourceMapping
    name: QuerySourceMapping
    nameWithType: QuerySourceMapping
    fullName: Remotion.Linq.Clauses.QuerySourceMapping
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.SaveAccessorExpression(Remotion.Linq.Clauses.QuerySourceMapping)
    name: SaveAccessorExpression
    nameWithType: Shaper.SaveAccessorExpression
    fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.SaveAccessorExpression
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.Clauses.QuerySourceMapping
    name: QuerySourceMapping
    nameWithType: QuerySourceMapping
    fullName: Remotion.Linq.Clauses.QuerySourceMapping
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.GetAccessorExpression(Remotion.Linq.Clauses.IQuerySource)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.GetAccessorExpression(Remotion.Linq.Clauses.IQuerySource)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper
  isExternal: true
  name: GetAccessorExpression(IQuerySource)
  nameWithType: Shaper.GetAccessorExpression(IQuerySource)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.GetAccessorExpression(Remotion.Linq.Clauses.IQuerySource)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.GetAccessorExpression(Remotion.Linq.Clauses.IQuerySource)
    name: GetAccessorExpression
    nameWithType: Shaper.GetAccessorExpression
    fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.GetAccessorExpression
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.Clauses.IQuerySource
    name: IQuerySource
    nameWithType: IQuerySource
    fullName: Remotion.Linq.Clauses.IQuerySource
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.GetAccessorExpression(Remotion.Linq.Clauses.IQuerySource)
    name: GetAccessorExpression
    nameWithType: Shaper.GetAccessorExpression
    fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.GetAccessorExpression
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.Clauses.IQuerySource
    name: IQuerySource
    nameWithType: IQuerySource
    fullName: Remotion.Linq.Clauses.IQuerySource
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Remotion.Linq.Clauses.IQuerySource
  commentId: T:Remotion.Linq.Clauses.IQuerySource
  parent: Remotion.Linq.Clauses
  isExternal: true
  name: IQuerySource
  nameWithType: IQuerySource
  fullName: Remotion.Linq.Clauses.IQuerySource
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.EntityFrameworkCore.Metadata.IKey
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IKey
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IKey
  nameWithType: IKey
  fullName: Microsoft.EntityFrameworkCore.Metadata.IKey
- uid: System.Func{Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Object}
  commentId: T:System.Func{Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Object}
  parent: System
  definition: System.Func`2
  name: Func<ValueBuffer, Object>
  nameWithType: Func<ValueBuffer, Object>
  fullName: System.Func<Microsoft.EntityFrameworkCore.Storage.ValueBuffer, System.Object>
  nameWithType.vb: Func(Of ValueBuffer, Object)
  fullname.vb: System.Func(Of Microsoft.EntityFrameworkCore.Storage.ValueBuffer, System.Object)
  name.vb: Func(Of ValueBuffer, Object)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Storage.ValueBuffer
    name: ValueBuffer
    nameWithType: ValueBuffer
    fullName: Microsoft.EntityFrameworkCore.Storage.ValueBuffer
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Storage.ValueBuffer
    name: ValueBuffer
    nameWithType: ValueBuffer
    fullName: Microsoft.EntityFrameworkCore.Storage.ValueBuffer
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Clauses
  commentId: N:Remotion.Linq.Clauses
  isExternal: false
  name: Remotion.Linq.Clauses
  nameWithType: Remotion.Linq.Clauses
  fullName: Remotion.Linq.Clauses
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullname.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IShaper{{TDerived}}
  commentId: T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IShaper{``0}
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  definition: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IShaper`1
  name: IShaper<TDerived>
  nameWithType: IShaper<TDerived>
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IShaper<TDerived>
  nameWithType.vb: IShaper(Of TDerived)
  fullname.vb: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IShaper(Of TDerived)
  name.vb: IShaper(Of TDerived)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IShaper`1
    name: IShaper
    nameWithType: IShaper
    fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IShaper
  - name: <
    nameWithType: <
    fullName: <
  - name: TDerived
    nameWithType: TDerived
    fullName: TDerived
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IShaper`1
    name: IShaper
    nameWithType: IShaper
    fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IShaper
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDerived
    nameWithType: TDerived
    fullName: TDerived
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IShaper`1
  commentId: T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IShaper`1
  isExternal: false
  name: IShaper<T>
  nameWithType: IShaper<T>
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IShaper<T>
  nameWithType.vb: IShaper(Of T)
  fullname.vb: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IShaper(Of T)
  name.vb: IShaper(Of T)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IShaper`1
    name: IShaper
    nameWithType: IShaper
    fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IShaper
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IShaper`1
    name: IShaper
    nameWithType: IShaper
    fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IShaper
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper
  commentId: T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  isExternal: false
  name: EntityShaper
  nameWithType: EntityShaper
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper
