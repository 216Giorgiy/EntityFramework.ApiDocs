### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities.FakeSensitiveDataLogger`1
  commentId: T:Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities.FakeSensitiveDataLogger`1
  id: FakeSensitiveDataLogger`1
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities
  children:
  - Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities.FakeSensitiveDataLogger`1.BeginScope(System.Object)
  - Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities.FakeSensitiveDataLogger`1.BeginScope``1(``0)
  - Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities.FakeSensitiveDataLogger`1.IsEnabled(Microsoft.Extensions.Logging.LogLevel)
  - Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities.FakeSensitiveDataLogger`1.Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})
  - Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities.FakeSensitiveDataLogger`1.LogSensitiveData
  langs:
  - csharp
  - vb
  name: FakeSensitiveDataLogger<T>
  nameWithType: FakeSensitiveDataLogger<T>
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities.FakeSensitiveDataLogger<T>
  type: Class
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Relational.Tests/TestUtilities/FakeSensitiveDataLogger`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: FakeSensitiveDataLogger
    path: test/Microsoft.EntityFrameworkCore.Relational.Tests/TestUtilities/FakeSensitiveDataLogger`.cs
    startLine: 9
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities
  syntax:
    content: 'public class FakeSensitiveDataLogger<T> : ISensitiveDataLogger<T>, ILogger<T>, ISensitiveDataLogger, ILogger'
    content.vb: >-
      Public Class FakeSensitiveDataLogger(Of T)
          Implements ISensitiveDataLogger(Of T), ILogger(Of T), ISensitiveDataLogger, ILogger
    typeParameters:
    - id: T
  inheritance:
  - System.Object
  implements:
  - Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger{{T}}
  - Microsoft.Extensions.Logging.ILogger{{T}}
  - Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger
  - Microsoft.Extensions.Logging.ILogger
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger.Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogCommandExecuted(System.Data.Common.DbCommand,System.Int64,System.Int64)
  - Microsoft.Extensions.Logging.ILogger.Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogDebug(Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId,System.Func{System.String})
  - Microsoft.Extensions.Logging.ILogger.Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogDebug``1(Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId,{TState},System.Func{{TState},System.String})
  - Microsoft.Extensions.Logging.ILogger.Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogWarning(Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId,System.Func{System.String})
  nameWithType.vb: FakeSensitiveDataLogger(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities.FakeSensitiveDataLogger(Of T)
  name.vb: FakeSensitiveDataLogger(Of T)
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities.FakeSensitiveDataLogger`1.LogSensitiveData
  commentId: P:Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities.FakeSensitiveDataLogger`1.LogSensitiveData
  id: LogSensitiveData
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities.FakeSensitiveDataLogger`1
  langs:
  - csharp
  - vb
  name: LogSensitiveData
  nameWithType: FakeSensitiveDataLogger<T>.LogSensitiveData
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities.FakeSensitiveDataLogger<T>.LogSensitiveData
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Relational.Tests/TestUtilities/FakeSensitiveDataLogger`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: LogSensitiveData
    path: test/Microsoft.EntityFrameworkCore.Relational.Tests/TestUtilities/FakeSensitiveDataLogger`.cs
    startLine: 12
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities
  syntax:
    content: public bool LogSensitiveData { get; }
    content.vb: Public ReadOnly Property LogSensitiveData As Boolean
    parameters: []
    return:
      type: System.Boolean
  implements:
  - Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger.LogSensitiveData
  nameWithType.vb: FakeSensitiveDataLogger(Of T).LogSensitiveData
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities.FakeSensitiveDataLogger(Of T).LogSensitiveData
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities.FakeSensitiveDataLogger`1.Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})
  commentId: M:Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities.FakeSensitiveDataLogger`1.Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})
  id: Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities.FakeSensitiveDataLogger`1
  langs:
  - csharp
  - vb
  name: Log<TState>(LogLevel, EventId, TState, Exception, Func<TState, Exception, String>)
  nameWithType: FakeSensitiveDataLogger<T>.Log<TState>(LogLevel, EventId, TState, Exception, Func<TState, Exception, String>)
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities.FakeSensitiveDataLogger<T>.Log<TState>(Microsoft.Extensions.Logging.LogLevel, Microsoft.Extensions.Logging.EventId, TState, System.Exception, System.Func<TState, System.Exception, System.String>)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Relational.Tests/TestUtilities/FakeSensitiveDataLogger`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Log
    path: test/Microsoft.EntityFrameworkCore.Relational.Tests/TestUtilities/FakeSensitiveDataLogger`.cs
    startLine: 14
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities
  syntax:
    content: public void Log<TState>(LogLevel logLevel, EventId eventId, TState state, Exception exception, Func<TState, Exception, string> formatter)
    content.vb: Public Sub Log(Of TState)(logLevel As LogLevel, eventId As EventId, state As TState, exception As Exception, formatter As Func(Of TState, Exception, String))
    parameters:
    - id: logLevel
      type: Microsoft.Extensions.Logging.LogLevel
    - id: eventId
      type: Microsoft.Extensions.Logging.EventId
    - id: state
      type: '{TState}'
    - id: exception
      type: System.Exception
    - id: formatter
      type: System.Func{{TState},System.Exception,System.String}
    typeParameters:
    - id: TState
  implements:
  - Microsoft.Extensions.Logging.ILogger.Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,{TState},System.Exception,System.Func{{TState},System.Exception,System.String})
  nameWithType.vb: FakeSensitiveDataLogger(Of T).Log(Of TState)(LogLevel, EventId, TState, Exception, Func(Of TState, Exception, String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities.FakeSensitiveDataLogger(Of T).Log(Of TState)(Microsoft.Extensions.Logging.LogLevel, Microsoft.Extensions.Logging.EventId, TState, System.Exception, System.Func(Of TState, System.Exception, System.String))
  name.vb: Log(Of TState)(LogLevel, EventId, TState, Exception, Func(Of TState, Exception, String))
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities.FakeSensitiveDataLogger`1.IsEnabled(Microsoft.Extensions.Logging.LogLevel)
  commentId: M:Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities.FakeSensitiveDataLogger`1.IsEnabled(Microsoft.Extensions.Logging.LogLevel)
  id: IsEnabled(Microsoft.Extensions.Logging.LogLevel)
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities.FakeSensitiveDataLogger`1
  langs:
  - csharp
  - vb
  name: IsEnabled(LogLevel)
  nameWithType: FakeSensitiveDataLogger<T>.IsEnabled(LogLevel)
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities.FakeSensitiveDataLogger<T>.IsEnabled(Microsoft.Extensions.Logging.LogLevel)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Relational.Tests/TestUtilities/FakeSensitiveDataLogger`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: IsEnabled
    path: test/Microsoft.EntityFrameworkCore.Relational.Tests/TestUtilities/FakeSensitiveDataLogger`.cs
    startLine: 18
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities
  syntax:
    content: public bool IsEnabled(LogLevel logLevel)
    content.vb: Public Function IsEnabled(logLevel As LogLevel) As Boolean
    parameters:
    - id: logLevel
      type: Microsoft.Extensions.Logging.LogLevel
    return:
      type: System.Boolean
  implements:
  - Microsoft.Extensions.Logging.ILogger.IsEnabled(Microsoft.Extensions.Logging.LogLevel)
  nameWithType.vb: FakeSensitiveDataLogger(Of T).IsEnabled(LogLevel)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities.FakeSensitiveDataLogger(Of T).IsEnabled(Microsoft.Extensions.Logging.LogLevel)
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities.FakeSensitiveDataLogger`1.BeginScope(System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities.FakeSensitiveDataLogger`1.BeginScope(System.Object)
  id: BeginScope(System.Object)
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities.FakeSensitiveDataLogger`1
  langs:
  - csharp
  - vb
  name: BeginScope(Object)
  nameWithType: FakeSensitiveDataLogger<T>.BeginScope(Object)
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities.FakeSensitiveDataLogger<T>.BeginScope(System.Object)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Relational.Tests/TestUtilities/FakeSensitiveDataLogger`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: BeginScope
    path: test/Microsoft.EntityFrameworkCore.Relational.Tests/TestUtilities/FakeSensitiveDataLogger`.cs
    startLine: 20
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities
  syntax:
    content: public IDisposable BeginScope(object state)
    content.vb: Public Function BeginScope(state As Object) As IDisposable
    parameters:
    - id: state
      type: System.Object
    return:
      type: System.IDisposable
  nameWithType.vb: FakeSensitiveDataLogger(Of T).BeginScope(Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities.FakeSensitiveDataLogger(Of T).BeginScope(System.Object)
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities.FakeSensitiveDataLogger`1.BeginScope``1(``0)
  commentId: M:Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities.FakeSensitiveDataLogger`1.BeginScope``1(``0)
  id: BeginScope``1(``0)
  parent: Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities.FakeSensitiveDataLogger`1
  langs:
  - csharp
  - vb
  name: BeginScope<TState>(TState)
  nameWithType: FakeSensitiveDataLogger<T>.BeginScope<TState>(TState)
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities.FakeSensitiveDataLogger<T>.BeginScope<TState>(TState)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Relational.Tests/TestUtilities/FakeSensitiveDataLogger`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: BeginScope
    path: test/Microsoft.EntityFrameworkCore.Relational.Tests/TestUtilities/FakeSensitiveDataLogger`.cs
    startLine: 25
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Tests
  namespace: Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities
  syntax:
    content: public IDisposable BeginScope<TState>(TState state)
    content.vb: Public Function BeginScope(Of TState)(state As TState) As IDisposable
    parameters:
    - id: state
      type: '{TState}'
    typeParameters:
    - id: TState
    return:
      type: System.IDisposable
  implements:
  - Microsoft.Extensions.Logging.ILogger.BeginScope``1({TState})
  nameWithType.vb: FakeSensitiveDataLogger(Of T).BeginScope(Of TState)(TState)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities.FakeSensitiveDataLogger(Of T).BeginScope(Of TState)(TState)
  name.vb: BeginScope(Of TState)(TState)
references:
- uid: Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities
  commentId: N:Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities
  nameWithType: Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities
  fullName: Microsoft.EntityFrameworkCore.Relational.Tests.TestUtilities
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger{{T}}
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger{`0}
  parent: Microsoft.EntityFrameworkCore.Infrastructure
  definition: Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger`1
  name: ISensitiveDataLogger<T>
  nameWithType: ISensitiveDataLogger<T>
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger<T>
  nameWithType.vb: ISensitiveDataLogger(Of T)
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger(Of T)
  name.vb: ISensitiveDataLogger(Of T)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger`1
    name: ISensitiveDataLogger
    nameWithType: ISensitiveDataLogger
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger`1
    name: ISensitiveDataLogger
    nameWithType: ISensitiveDataLogger
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ILogger{{T}}
  commentId: T:Microsoft.Extensions.Logging.ILogger{`0}
  parent: Microsoft.Extensions.Logging
  definition: Microsoft.Extensions.Logging.ILogger`1
  name: ILogger<T>
  nameWithType: ILogger<T>
  fullName: Microsoft.Extensions.Logging.ILogger<T>
  nameWithType.vb: ILogger(Of T)
  fullname.vb: Microsoft.Extensions.Logging.ILogger(Of T)
  name.vb: ILogger(Of T)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger
  parent: Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: ISensitiveDataLogger
  nameWithType: ISensitiveDataLogger
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger
- uid: Microsoft.Extensions.Logging.ILogger
  commentId: T:Microsoft.Extensions.Logging.ILogger
  parent: Microsoft.Extensions.Logging
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Extensions.Logging.ILogger
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger.Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogCommandExecuted(System.Data.Common.DbCommand,System.Int64,System.Int64)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogCommandExecuted(Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger,System.Data.Common.DbCommand,System.Int64,System.Int64)
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions
  definition: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogCommandExecuted(Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger,System.Data.Common.DbCommand,System.Int64,System.Int64)
  name: LogCommandExecuted(DbCommand, Int64, Int64)
  nameWithType: RelationalLoggerExtensions.LogCommandExecuted(DbCommand, Int64, Int64)
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogCommandExecuted(System.Data.Common.DbCommand, System.Int64, System.Int64)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogCommandExecuted(System.Data.Common.DbCommand,System.Int64,System.Int64)
    name: LogCommandExecuted
    nameWithType: RelationalLoggerExtensions.LogCommandExecuted
    fullName: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogCommandExecuted
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.Common.DbCommand
    name: DbCommand
    nameWithType: DbCommand
    fullName: System.Data.Common.DbCommand
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogCommandExecuted(System.Data.Common.DbCommand,System.Int64,System.Int64)
    name: LogCommandExecuted
    nameWithType: RelationalLoggerExtensions.LogCommandExecuted
    fullName: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogCommandExecuted
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.Common.DbCommand
    name: DbCommand
    nameWithType: DbCommand
    fullName: System.Data.Common.DbCommand
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ILogger.Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogDebug(Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId,System.Func{System.String})
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogDebug(Microsoft.Extensions.Logging.ILogger,Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId,System.Func{System.String})
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions
  definition: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogDebug(Microsoft.Extensions.Logging.ILogger,Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId,System.Func{System.String})
  name: LogDebug(RelationalEventId, Func<String>)
  nameWithType: RelationalLoggerExtensions.LogDebug(RelationalEventId, Func<String>)
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogDebug(Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId, System.Func<System.String>)
  nameWithType.vb: RelationalLoggerExtensions.LogDebug(RelationalEventId, Func(Of String))
  fullname.vb: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogDebug(Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId, System.Func(Of System.String))
  name.vb: LogDebug(RelationalEventId, Func(Of String))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogDebug(Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId,System.Func{System.String})
    name: LogDebug
    nameWithType: RelationalLoggerExtensions.LogDebug
    fullName: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogDebug
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId
    name: RelationalEventId
    nameWithType: RelationalEventId
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogDebug(Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId,System.Func{System.String})
    name: LogDebug
    nameWithType: RelationalLoggerExtensions.LogDebug
    fullName: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogDebug
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId
    name: RelationalEventId
    nameWithType: RelationalEventId
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ILogger.Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogDebug``1(Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId,{TState},System.Func{{TState},System.String})
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogDebug``1(Microsoft.Extensions.Logging.ILogger,Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId,``0,System.Func{``0,System.String})
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions
  definition: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogDebug``1(Microsoft.Extensions.Logging.ILogger,Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId,``0,System.Func{``0,System.String})
  name: LogDebug<TState>(RelationalEventId, TState, Func<TState, String>)
  nameWithType: RelationalLoggerExtensions.LogDebug<TState>(RelationalEventId, TState, Func<TState, String>)
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogDebug<TState>(Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId, TState, System.Func<TState, System.String>)
  nameWithType.vb: RelationalLoggerExtensions.LogDebug(Of TState)(RelationalEventId, TState, Func(Of TState, String))
  fullname.vb: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogDebug(Of TState)(Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId, TState, System.Func(Of TState, System.String))
  name.vb: LogDebug(Of TState)(RelationalEventId, TState, Func(Of TState, String))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogDebug``1(Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId,``0,System.Func{``0,System.String})
    name: LogDebug<TState>
    nameWithType: RelationalLoggerExtensions.LogDebug<TState>
    fullName: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogDebug<TState>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId
    name: RelationalEventId
    nameWithType: RelationalEventId
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TState
    nameWithType: TState
    fullName: TState
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TState
    nameWithType: TState
    fullName: TState
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogDebug``1(Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId,``0,System.Func{``0,System.String})
    name: LogDebug(Of TState)
    nameWithType: RelationalLoggerExtensions.LogDebug(Of TState)
    fullName: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogDebug(Of TState)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId
    name: RelationalEventId
    nameWithType: RelationalEventId
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TState
    nameWithType: TState
    fullName: TState
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TState
    nameWithType: TState
    fullName: TState
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ILogger.Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogWarning(Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId,System.Func{System.String})
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogWarning(Microsoft.Extensions.Logging.ILogger,Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId,System.Func{System.String})
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions
  definition: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogWarning(Microsoft.Extensions.Logging.ILogger,Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId,System.Func{System.String})
  name: LogWarning(RelationalEventId, Func<String>)
  nameWithType: RelationalLoggerExtensions.LogWarning(RelationalEventId, Func<String>)
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogWarning(Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId, System.Func<System.String>)
  nameWithType.vb: RelationalLoggerExtensions.LogWarning(RelationalEventId, Func(Of String))
  fullname.vb: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogWarning(Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId, System.Func(Of System.String))
  name.vb: LogWarning(RelationalEventId, Func(Of String))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogWarning(Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId,System.Func{System.String})
    name: LogWarning
    nameWithType: RelationalLoggerExtensions.LogWarning
    fullName: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogWarning
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId
    name: RelationalEventId
    nameWithType: RelationalEventId
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogWarning(Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId,System.Func{System.String})
    name: LogWarning
    nameWithType: RelationalLoggerExtensions.LogWarning
    fullName: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogWarning
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId
    name: RelationalEventId
    nameWithType: RelationalEventId
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger`1
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger`1
  isExternal: false
  name: ISensitiveDataLogger<T>
  nameWithType: ISensitiveDataLogger<T>
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger<T>
  nameWithType.vb: ISensitiveDataLogger(Of T)
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger(Of T)
  name.vb: ISensitiveDataLogger(Of T)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger`1
    name: ISensitiveDataLogger
    nameWithType: ISensitiveDataLogger
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger`1
    name: ISensitiveDataLogger
    nameWithType: ISensitiveDataLogger
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure
  commentId: N:Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Infrastructure
  nameWithType: Microsoft.EntityFrameworkCore.Infrastructure
  fullName: Microsoft.EntityFrameworkCore.Infrastructure
- uid: Microsoft.Extensions.Logging.ILogger`1
  commentId: T:Microsoft.Extensions.Logging.ILogger`1
  isExternal: true
  name: ILogger<TCategoryName>
  nameWithType: ILogger<TCategoryName>
  fullName: Microsoft.Extensions.Logging.ILogger<TCategoryName>
  nameWithType.vb: ILogger(Of TCategoryName)
  fullname.vb: Microsoft.Extensions.Logging.ILogger(Of TCategoryName)
  name.vb: ILogger(Of TCategoryName)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TCategoryName
    nameWithType: TCategoryName
    fullName: TCategoryName
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCategoryName
    nameWithType: TCategoryName
    fullName: TCategoryName
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: false
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogCommandExecuted(Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger,System.Data.Common.DbCommand,System.Int64,System.Int64)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogCommandExecuted(Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger,System.Data.Common.DbCommand,System.Int64,System.Int64)
  isExternal: true
  name: LogCommandExecuted(ISensitiveDataLogger, DbCommand, Int64, Int64)
  nameWithType: RelationalLoggerExtensions.LogCommandExecuted(ISensitiveDataLogger, DbCommand, Int64, Int64)
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogCommandExecuted(Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger, System.Data.Common.DbCommand, System.Int64, System.Int64)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogCommandExecuted(Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger,System.Data.Common.DbCommand,System.Int64,System.Int64)
    name: LogCommandExecuted
    nameWithType: RelationalLoggerExtensions.LogCommandExecuted
    fullName: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogCommandExecuted
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger
    name: ISensitiveDataLogger
    nameWithType: ISensitiveDataLogger
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.Common.DbCommand
    name: DbCommand
    nameWithType: DbCommand
    fullName: System.Data.Common.DbCommand
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogCommandExecuted(Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger,System.Data.Common.DbCommand,System.Int64,System.Int64)
    name: LogCommandExecuted
    nameWithType: RelationalLoggerExtensions.LogCommandExecuted
    fullName: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogCommandExecuted
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger
    name: ISensitiveDataLogger
    nameWithType: ISensitiveDataLogger
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.Common.DbCommand
    name: DbCommand
    nameWithType: DbCommand
    fullName: System.Data.Common.DbCommand
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions
  parent: Microsoft.EntityFrameworkCore.Storage.Internal
  isExternal: false
  name: RelationalLoggerExtensions
  nameWithType: RelationalLoggerExtensions
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogDebug(Microsoft.Extensions.Logging.ILogger,Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId,System.Func{System.String})
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogDebug(Microsoft.Extensions.Logging.ILogger,Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId,System.Func{System.String})
  isExternal: true
  name: LogDebug(ILogger, RelationalEventId, Func<String>)
  nameWithType: RelationalLoggerExtensions.LogDebug(ILogger, RelationalEventId, Func<String>)
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogDebug(Microsoft.Extensions.Logging.ILogger, Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId, System.Func<System.String>)
  nameWithType.vb: RelationalLoggerExtensions.LogDebug(ILogger, RelationalEventId, Func(Of String))
  fullname.vb: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogDebug(Microsoft.Extensions.Logging.ILogger, Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId, System.Func(Of System.String))
  name.vb: LogDebug(ILogger, RelationalEventId, Func(Of String))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogDebug(Microsoft.Extensions.Logging.ILogger,Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId,System.Func{System.String})
    name: LogDebug
    nameWithType: RelationalLoggerExtensions.LogDebug
    fullName: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogDebug
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId
    name: RelationalEventId
    nameWithType: RelationalEventId
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogDebug(Microsoft.Extensions.Logging.ILogger,Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId,System.Func{System.String})
    name: LogDebug
    nameWithType: RelationalLoggerExtensions.LogDebug
    fullName: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogDebug
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId
    name: RelationalEventId
    nameWithType: RelationalEventId
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogDebug``1(Microsoft.Extensions.Logging.ILogger,Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId,``0,System.Func{``0,System.String})
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogDebug``1(Microsoft.Extensions.Logging.ILogger,Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId,``0,System.Func{``0,System.String})
  isExternal: true
  name: LogDebug<TState>(ILogger, RelationalEventId, TState, Func<TState, String>)
  nameWithType: RelationalLoggerExtensions.LogDebug<TState>(ILogger, RelationalEventId, TState, Func<TState, String>)
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogDebug<TState>(Microsoft.Extensions.Logging.ILogger, Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId, TState, System.Func<TState, System.String>)
  nameWithType.vb: RelationalLoggerExtensions.LogDebug(Of TState)(ILogger, RelationalEventId, TState, Func(Of TState, String))
  fullname.vb: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogDebug(Of TState)(Microsoft.Extensions.Logging.ILogger, Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId, TState, System.Func(Of TState, System.String))
  name.vb: LogDebug(Of TState)(ILogger, RelationalEventId, TState, Func(Of TState, String))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogDebug``1(Microsoft.Extensions.Logging.ILogger,Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId,``0,System.Func{``0,System.String})
    name: LogDebug<TState>
    nameWithType: RelationalLoggerExtensions.LogDebug<TState>
    fullName: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogDebug<TState>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId
    name: RelationalEventId
    nameWithType: RelationalEventId
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TState
    nameWithType: TState
    fullName: TState
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TState
    nameWithType: TState
    fullName: TState
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogDebug``1(Microsoft.Extensions.Logging.ILogger,Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId,``0,System.Func{``0,System.String})
    name: LogDebug(Of TState)
    nameWithType: RelationalLoggerExtensions.LogDebug(Of TState)
    fullName: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogDebug(Of TState)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId
    name: RelationalEventId
    nameWithType: RelationalEventId
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TState
    nameWithType: TState
    fullName: TState
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TState
    nameWithType: TState
    fullName: TState
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogWarning(Microsoft.Extensions.Logging.ILogger,Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId,System.Func{System.String})
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogWarning(Microsoft.Extensions.Logging.ILogger,Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId,System.Func{System.String})
  isExternal: true
  name: LogWarning(ILogger, RelationalEventId, Func<String>)
  nameWithType: RelationalLoggerExtensions.LogWarning(ILogger, RelationalEventId, Func<String>)
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogWarning(Microsoft.Extensions.Logging.ILogger, Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId, System.Func<System.String>)
  nameWithType.vb: RelationalLoggerExtensions.LogWarning(ILogger, RelationalEventId, Func(Of String))
  fullname.vb: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogWarning(Microsoft.Extensions.Logging.ILogger, Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId, System.Func(Of System.String))
  name.vb: LogWarning(ILogger, RelationalEventId, Func(Of String))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogWarning(Microsoft.Extensions.Logging.ILogger,Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId,System.Func{System.String})
    name: LogWarning
    nameWithType: RelationalLoggerExtensions.LogWarning
    fullName: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogWarning
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId
    name: RelationalEventId
    nameWithType: RelationalEventId
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogWarning(Microsoft.Extensions.Logging.ILogger,Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId,System.Func{System.String})
    name: LogWarning
    nameWithType: RelationalLoggerExtensions.LogWarning
    fullName: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogWarning
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId
    name: RelationalEventId
    nameWithType: RelationalEventId
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Storage.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Storage.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Storage.Internal
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal
- uid: Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger.LogSensitiveData
  commentId: P:Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger.LogSensitiveData
  parent: Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger
  isExternal: false
  name: LogSensitiveData
  nameWithType: ISensitiveDataLogger.LogSensitiveData
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger.LogSensitiveData
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Extensions.Logging.ILogger.Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,{TState},System.Exception,System.Func{{TState},System.Exception,System.String})
  commentId: M:Microsoft.Extensions.Logging.ILogger.Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})
  parent: Microsoft.Extensions.Logging.ILogger
  definition: Microsoft.Extensions.Logging.ILogger.Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})
  name: Log<TState>(LogLevel, EventId, TState, Exception, Func<TState, Exception, String>)
  nameWithType: ILogger.Log<TState>(LogLevel, EventId, TState, Exception, Func<TState, Exception, String>)
  fullName: Microsoft.Extensions.Logging.ILogger.Log<TState>(Microsoft.Extensions.Logging.LogLevel, Microsoft.Extensions.Logging.EventId, TState, System.Exception, System.Func<TState, System.Exception, System.String>)
  nameWithType.vb: ILogger.Log(Of TState)(LogLevel, EventId, TState, Exception, Func(Of TState, Exception, String))
  fullname.vb: Microsoft.Extensions.Logging.ILogger.Log(Of TState)(Microsoft.Extensions.Logging.LogLevel, Microsoft.Extensions.Logging.EventId, TState, System.Exception, System.Func(Of TState, System.Exception, System.String))
  name.vb: Log(Of TState)(LogLevel, EventId, TState, Exception, Func(Of TState, Exception, String))
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger.Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})
    name: Log<TState>
    nameWithType: ILogger.Log<TState>
    fullName: Microsoft.Extensions.Logging.ILogger.Log<TState>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.EventId
    name: EventId
    nameWithType: EventId
    fullName: Microsoft.Extensions.Logging.EventId
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TState
    nameWithType: TState
    fullName: TState
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TState
    nameWithType: TState
    fullName: TState
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger.Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})
    name: Log(Of TState)
    nameWithType: ILogger.Log(Of TState)
    fullName: Microsoft.Extensions.Logging.ILogger.Log(Of TState)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.EventId
    name: EventId
    nameWithType: EventId
    fullName: Microsoft.Extensions.Logging.EventId
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TState
    nameWithType: TState
    fullName: TState
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TState
    nameWithType: TState
    fullName: TState
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.LogLevel
  commentId: T:Microsoft.Extensions.Logging.LogLevel
  parent: Microsoft.Extensions.Logging
  isExternal: true
  name: LogLevel
  nameWithType: LogLevel
  fullName: Microsoft.Extensions.Logging.LogLevel
- uid: Microsoft.Extensions.Logging.EventId
  commentId: T:Microsoft.Extensions.Logging.EventId
  parent: Microsoft.Extensions.Logging
  isExternal: true
  name: EventId
  nameWithType: EventId
  fullName: Microsoft.Extensions.Logging.EventId
- uid: '{TState}'
  commentId: '!:TState'
  definition: TState
  name: TState
  nameWithType: TState
  fullName: TState
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Func{{TState},System.Exception,System.String}
  commentId: T:System.Func{``0,System.Exception,System.String}
  parent: System
  definition: System.Func`3
  name: Func<TState, Exception, String>
  nameWithType: Func<TState, Exception, String>
  fullName: System.Func<TState, System.Exception, System.String>
  nameWithType.vb: Func(Of TState, Exception, String)
  fullname.vb: System.Func(Of TState, System.Exception, System.String)
  name.vb: Func(Of TState, Exception, String)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TState
    nameWithType: TState
    fullName: TState
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TState
    nameWithType: TState
    fullName: TState
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ILogger.Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})
  commentId: M:Microsoft.Extensions.Logging.ILogger.Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})
  isExternal: true
  name: Log<TState>(LogLevel, EventId, TState, Exception, Func<TState, Exception, String>)
  nameWithType: ILogger.Log<TState>(LogLevel, EventId, TState, Exception, Func<TState, Exception, String>)
  fullName: Microsoft.Extensions.Logging.ILogger.Log<TState>(Microsoft.Extensions.Logging.LogLevel, Microsoft.Extensions.Logging.EventId, TState, System.Exception, System.Func<TState, System.Exception, System.String>)
  nameWithType.vb: ILogger.Log(Of TState)(LogLevel, EventId, TState, Exception, Func(Of TState, Exception, String))
  fullname.vb: Microsoft.Extensions.Logging.ILogger.Log(Of TState)(Microsoft.Extensions.Logging.LogLevel, Microsoft.Extensions.Logging.EventId, TState, System.Exception, System.Func(Of TState, System.Exception, System.String))
  name.vb: Log(Of TState)(LogLevel, EventId, TState, Exception, Func(Of TState, Exception, String))
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger.Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})
    name: Log<TState>
    nameWithType: ILogger.Log<TState>
    fullName: Microsoft.Extensions.Logging.ILogger.Log<TState>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.EventId
    name: EventId
    nameWithType: EventId
    fullName: Microsoft.Extensions.Logging.EventId
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TState
    nameWithType: TState
    fullName: TState
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TState
    nameWithType: TState
    fullName: TState
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger.Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})
    name: Log(Of TState)
    nameWithType: ILogger.Log(Of TState)
    fullName: Microsoft.Extensions.Logging.ILogger.Log(Of TState)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.EventId
    name: EventId
    nameWithType: EventId
    fullName: Microsoft.Extensions.Logging.EventId
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TState
    nameWithType: TState
    fullName: TState
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TState
    nameWithType: TState
    fullName: TState
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: TState
  isExternal: false
  name: TState
  nameWithType: TState
  fullName: TState
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullname.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ILogger.IsEnabled(Microsoft.Extensions.Logging.LogLevel)
  commentId: M:Microsoft.Extensions.Logging.ILogger.IsEnabled(Microsoft.Extensions.Logging.LogLevel)
  parent: Microsoft.Extensions.Logging.ILogger
  isExternal: true
  name: IsEnabled(LogLevel)
  nameWithType: ILogger.IsEnabled(LogLevel)
  fullName: Microsoft.Extensions.Logging.ILogger.IsEnabled(Microsoft.Extensions.Logging.LogLevel)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger.IsEnabled(Microsoft.Extensions.Logging.LogLevel)
    name: IsEnabled
    nameWithType: ILogger.IsEnabled
    fullName: Microsoft.Extensions.Logging.ILogger.IsEnabled
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger.IsEnabled(Microsoft.Extensions.Logging.LogLevel)
    name: IsEnabled
    nameWithType: ILogger.IsEnabled
    fullName: Microsoft.Extensions.Logging.ILogger.IsEnabled
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Microsoft.Extensions.Logging.ILogger.BeginScope``1({TState})
  commentId: M:Microsoft.Extensions.Logging.ILogger.BeginScope``1(``0)
  parent: Microsoft.Extensions.Logging.ILogger
  definition: Microsoft.Extensions.Logging.ILogger.BeginScope``1(``0)
  name: BeginScope<TState>(TState)
  nameWithType: ILogger.BeginScope<TState>(TState)
  fullName: Microsoft.Extensions.Logging.ILogger.BeginScope<TState>(TState)
  nameWithType.vb: ILogger.BeginScope(Of TState)(TState)
  fullname.vb: Microsoft.Extensions.Logging.ILogger.BeginScope(Of TState)(TState)
  name.vb: BeginScope(Of TState)(TState)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger.BeginScope``1(``0)
    name: BeginScope<TState>
    nameWithType: ILogger.BeginScope<TState>
    fullName: Microsoft.Extensions.Logging.ILogger.BeginScope<TState>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TState
    nameWithType: TState
    fullName: TState
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger.BeginScope``1(``0)
    name: BeginScope(Of TState)
    nameWithType: ILogger.BeginScope(Of TState)
    fullName: Microsoft.Extensions.Logging.ILogger.BeginScope(Of TState)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TState
    nameWithType: TState
    fullName: TState
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ILogger.BeginScope``1(``0)
  commentId: M:Microsoft.Extensions.Logging.ILogger.BeginScope``1(``0)
  isExternal: true
  name: BeginScope<TState>(TState)
  nameWithType: ILogger.BeginScope<TState>(TState)
  fullName: Microsoft.Extensions.Logging.ILogger.BeginScope<TState>(TState)
  nameWithType.vb: ILogger.BeginScope(Of TState)(TState)
  fullname.vb: Microsoft.Extensions.Logging.ILogger.BeginScope(Of TState)(TState)
  name.vb: BeginScope(Of TState)(TState)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger.BeginScope``1(``0)
    name: BeginScope<TState>
    nameWithType: ILogger.BeginScope<TState>
    fullName: Microsoft.Extensions.Logging.ILogger.BeginScope<TState>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TState
    nameWithType: TState
    fullName: TState
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger.BeginScope``1(``0)
    name: BeginScope(Of TState)
    nameWithType: ILogger.BeginScope(Of TState)
    fullName: Microsoft.Extensions.Logging.ILogger.BeginScope(Of TState)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TState
    nameWithType: TState
    fullName: TState
  - name: )
    nameWithType: )
    fullName: )
